package org apache lucene store instantiated
/**
* copyright 2006 the apache software foundation
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene index term
import org apache lucene index termdocs
/**
* a {@link org.apache.lucene.index.termdocs} navigating an {@link instantiatedindexreader}.
*/
public class instantiatedtermdocs
implements termdocs
private final instantiatedindexreader reader
public instantiatedtermdocs instantiatedindexreader reader
this reader   reader
private int currentdocumentindex
protected instantiatedtermdocumentinformation currentdocumentinformation
protected instantiatedterm currentterm
public void seek term term
currentterm   reader getindex   findterm term
currentdocumentindex    1
public void seek org apache lucene index termenum termenum
seek termenum term
public int doc
return currentdocumentinformation getdocument   getdocumentnumber
public int freq
return currentdocumentinformation gettermpositions   length
public boolean next
if  currentterm    null
currentdocumentindex
if  currentdocumentindex < currentterm getassociateddocuments   length
currentdocumentinformation   currentterm getassociateddocuments
if  reader hasdeletions      reader isdeleted currentdocumentinformation getdocument   getdocumentnumber
return next
else
return true
return false
public int read int docs  int freqs
int i
for  i   0  i < docs length  i
if   next
break
docs   doc
freqs   freq
return i
/**
* skips entries to the first beyond the current whose document number is
* greater than or equal to <i>target</i>. <p>returns true if there is such
* an entry.  <p>behaves as if written: <pre>
*   boolean skipto(int target) {
*     do {
*       if (!next())
* 	     return false;
*     } while (target > doc());
*     return true;
*   }
* </pre>
* this implementation is considerably more efficient than that.
*
*/
public boolean skipto int target
if  currentterm    null
return false
if  currentdocumentindex >  target
return next
int startoffset   currentdocumentindex >  0 ? currentdocumentindex   0
int pos   currentterm seekceilingdocumentinformationindex target  startoffset
if  pos     1
return false
currentdocumentinformation   currentterm getassociateddocuments
currentdocumentindex   pos
if  reader hasdeletions      reader isdeleted currentdocumentinformation getdocument   getdocumentnumber
return next
else
return true
/**
* does nothing
*/
public void close