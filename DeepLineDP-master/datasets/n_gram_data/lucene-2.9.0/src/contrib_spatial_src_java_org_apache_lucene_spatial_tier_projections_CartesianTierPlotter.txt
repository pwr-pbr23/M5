/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache lucene spatial tier projections
/**
* <p><font color="red"><b>note:</b> this api is still in
* flux and might change in incompatible ways in the next
* release.</font>
*/
public class cartesiantierplotter
public static final string defalt_field_prefix
final int tierlevel
int tierlength
int tierboxes
int tierverticalposdivider
final iprojector projector
final string fieldprefix
double idd   new double 180
public cartesiantierplotter  int tierlevel  iprojector projector  string fieldprefix
this tierlevel    tierlevel
this projector   projector
this fieldprefix   fieldprefix
settierlength
settierboxes
settierverticalposdivider
private void settierlength
this tierlength    int  math pow 2   this tierlevel
private void settierboxes
this tierboxes    int math pow this tierlength  2
/**
* get nearest max power of 10 greater than
* the tierlen
* e.g
* tierid of 13 has tierlen 8192
* nearest max power of 10 greater than tierlen
* would be 10,000
*/
private void settierverticalposdivider
// ceiling of log base 10 of tierlen
tierverticalposdivider   new double math ceil
math log10 new integer this tierlength  doublevalue      intvalue
//
tierverticalposdivider    int math pow 10  tierverticalposdivider
public double gettierverticalposdivider
return tierverticalposdivider
/**
* tierboxid is latitude box id + longitude box id
* where latitude box id, and longitude box id are transposed in to position
* coordinates.
*
* @param latitude
* @param longitude
*/
public double gettierboxid  double latitude  double longitude
double coords   projector coords latitude  longitude
double id   getboxid coords     getboxid coords    tierverticalposdivider
return id
private double getboxid  double coord
return math floor coord    idd   this tierlength
@suppresswarnings
private double getboxid  double coord  int tierlen
return math floor coord    idd   tierlen
/**
* get the string name representing current tier
* _localtier&lt;tiedid&gt;
*/
public string gettierfieldname
return fieldprefix   this tierlevel
/**
* get the string name representing tierid
* _localtier&lt;tierid&gt;
* @param tierid
*/
public string gettierfieldname  int tierid
return fieldprefix   tierid
/**
* find the tier with the best fit for a bounding box
* best fit is defined as the ceiling of
*  log2 (circumference of earth / distance)
*  distance is defined as the smallest box fitting
*  the corner between a radius and a bounding box.
*
*  distances less than a mile return 15, finer granularity is
*  in accurate
*/
public int bestfit double miles
//28,892 a rough circumference of the earth
int circ   28892
double r   miles   2 0
double corner   r   math sqrt math pow r  2    2 0d
double times   circ   corner
int bestfit     int math ceil log2 times     1
if  bestfit > 15
// 15 is the granularity of about 1 mile
// finer granularity isn't accurate with standard java math
return 15
return bestfit
/**
* a log to the base 2 formula
* <code>math.log(value) / math.log(2)</code>
* @param value
*/
public double log2 double value
return math log value    math log 2