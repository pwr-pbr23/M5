package org apache lucene benchmark bytask feeds
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io file
import java io ioexception
import java io inputstream
import java util hashmap
import java util map
import org apache lucene benchmark bytask utils config
import org xml sax attributes
import org xml sax inputsource
import org xml sax saxexception
import org xml sax xmlreader
import org xml sax helpers defaulthandler
import org xml sax helpers xmlreaderfactory
/**
* a {@link contentsource} which reads the english wikipedia dump. you can read
* the .bz2 file directly (it will be decompressed on the fly). config
* properties:
* <ul>
* <li>keep.image.only.docs=false|true (default <b>true</b>).
* <li>docs.file=&lt;path to the file&gt;
* </ul>
*/
public class enwikicontentsource extends contentsource
private class parser extends defaulthandler implements runnable
private thread t
private boolean threaddone
private string tuple
private nomoredataexception nmde
private stringbuffer contents   new stringbuffer
private string title
private string body
private string time
private string id
string next   throws nomoredataexception
if  t    null
threaddone   false
t   new thread this
t setdaemon true
t start
string result
synchronized this
while tuple    null    nmde    null     threaddone
try
wait
catch  interruptedexception ie
if  nmde    null
// set to null so we will re-start thread in case
// we are re-used:
t   null
throw nmde
if  t    null    threaddone
// the thread has exited yet did not hit end of
// data, so this means it hit an exception.  we
// throw nomordataexception here to force
// benchmark to stop the current alg:
throw new nomoredataexception
result   tuple
tuple   null
notify
return result
string time string original
stringbuffer buffer   new stringbuffer
buffer append original substring 8  10
buffer append
buffer append months
buffer append
buffer append original substring 0  4
buffer append
buffer append original substring 11  19
buffer append
return buffer tostring
public void characters char ch  int start  int length
contents append ch  start  length
public void endelement string namespace  string simple  string qualified
throws saxexception
int elemtype   getelementtype qualified
switch  elemtype
case page
// the body must be null and we either are keeping image docs or the
// title does not start with image:
if  body    null     keepimages     title startswith
string tmptuple   new string
tmptuple   title replace
tmptuple   time replace
tmptuple   body replaceall
tmptuple   id
synchronized this
while  tuple    null
try
wait
catch  interruptedexception ie
tuple   tmptuple
notify
break
case body
body   contents tostring
//workaround that startswith doesn't have an ignore case option, get at least 20 chars.
string startswith   body substring 0  math min 10  contents length     tolowercase
if  startswith startswith
body   null
break
case date
time   time contents tostring
break
case title
title   contents tostring
break
case id
id   contents tostring
break
default
// this element should be discarded.
public void run
try
xmlreader reader   xmlreaderfactory createxmlreader
reader setcontenthandler this
reader seterrorhandler this
while true
final inputstream localfileis   is
try
reader parse new inputsource localfileis
catch  ioexception ioe
synchronized enwikicontentsource this
if  localfileis    is
// fileis was closed on us, so, just fall
// through
else
// exception is real
throw ioe
synchronized this
if   forever
nmde   new nomoredataexception
notify
return
else if  localfileis    is
// if file is not already re-opened then re-open it now
is   getinputstream file
catch  saxexception sae
throw new runtimeexception sae
catch  ioexception ioe
throw new runtimeexception ioe
finally
synchronized this
threaddone   true
notify
public void startelement string namespace  string simple  string qualified
attributes attributes
int elemtype   getelementtype qualified
switch  elemtype
case page
title   null
body   null
time   null
id   null
break
// intentional fall-through.
case body
case date
case title
case id
contents setlength 0
break
default
// this element should be discarded.
private static final map elements   new hashmap
private static final int title   0
private static final int date   title   1
private static final int body   date   1
private static final int id   body   1
private static final int length   id   1
// length is used as the size of the tuple, so whatever constants we need that
// should not be part of the tuple, we should define them after length.
private static final int page   length   1
private static final string months
static
elements put    new integer page
elements put    new integer body
elements put    new integer date
elements put    new integer title
elements put    new integer id
/**
* returns the type of the element if defined, otherwise returns -1. this
* method is useful in startelement and endelement, by not needing to compare
* the element qualified name over and over.
*/
private final static int getelementtype string elem
integer val    integer  elements get elem
return val    null ?  1   val intvalue
private file file
private boolean keepimages   true
private inputstream is
private parser parser   new parser
public void close   throws ioexception
synchronized  enwikicontentsource this
if  is    null
is close
is   null
public docdata getnextdocdata docdata docdata  throws nomoredataexception  ioexception
string tuple   parser next
docdata clear
docdata setname tuple
docdata setbody tuple
docdata setdate tuple
docdata settitle tuple
return docdata
public void resetinputs   throws ioexception
super resetinputs
is   getinputstream file
public void setconfig config config
super setconfig config
keepimages   config get    true
string filename   config get    null
if  filename    null
throw new illegalargumentexception
file   new file filename  getabsolutefile