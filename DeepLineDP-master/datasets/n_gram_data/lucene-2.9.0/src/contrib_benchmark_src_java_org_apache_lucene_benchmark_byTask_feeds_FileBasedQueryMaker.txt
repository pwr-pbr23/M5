package org apache lucene benchmark bytask feeds
import org apache lucene analysis analyzer
import org apache lucene queryparser queryparser
import org apache lucene queryparser parseexception
import org apache lucene search query
import java io
import java util arraylist
import java util list
/**
* copyright 2004 the apache software foundation
* <p/>
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
* <p/>
* http://www.apache.org/licenses/license-2.0
* <p/>
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/**
* create queries from a filereader.  one per line, pass them through the
* queryparser.  lines beginning with # are treated as comments
*
* file can be specified as a absolute, relative or resource.
* two properties can be set:
* file.query.maker.file=&lt;full path to file containing queries&gt;
* <br/>
* file.query.maker.default.field=&lt;name of default field - default value is "body"&gt;
*
* example:
* file.query.maker.file=c:/myqueries.txt
* file.query.maker.default.field=body
*/
public class filebasedquerymaker extends abstractquerymaker implements querymaker
protected query preparequeries   throws exception
analyzer anlzr    analyzer  class forname config get
newinstance
string defaultfield   config get    docmaker body_field
queryparser qp   new queryparser defaultfield  anlzr
list qq   new arraylist
string filename   config get    null
if  filename    null
file file   new file filename
reader reader   null
if  file exists
reader   new filereader file
else
//see if we can find it as a resource
inputstream asstream   filebasedquerymaker class getclassloader   getresourceasstream filename
if  asstream    null
reader   new inputstreamreader asstream
if  reader    null
try
bufferedreader buffered   new bufferedreader reader
string line   null
int linenum   0
while   line   buffered readline       null
line   line trim
if   line equals        line startswith
query query   null
try
query   qp parse line
catch  parseexception e
system err println     e getmessage         linenum       line
qq add query
linenum
finally
reader close
else
system err println     filename
query  result    query  qq toarray new query
return result