/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache lucene spatial tier
import java math bigdecimal
import java math roundingmode
import java util logging level
import java util logging logger
import org apache lucene search filter
import org apache lucene spatial geometry shape rectangle
import org apache lucene spatial tier projections cartesiantierplotter
import org apache lucene spatial tier projections iprojector
import org apache lucene spatial tier projections sinusoidalprojector
/**
* <p><font color="red"><b>note:</b> this api is still in
* flux and might change in incompatible ways in the next
* release.</font>
*/
public class cartesianpolyfilterbuilder
// finer granularity than 1 mile isn't accurate with
// standard java math.  also, there's already a 2nd
// precise filter, if needed, in distancequerybuilder,
// that will make the filtering exact.
public static final double miles_floor   1 0
private iprojector projector   new sinusoidalprojector
private logger log   logger getlogger getclass   getname
private final string tierprefix
public cartesianpolyfilterbuilder  string tierprefix
this tierprefix   tierprefix
public shape getboxshape double latitude  double longitude  double miles
if  miles < miles_floor
miles   miles_floor
rectangle box   distanceutils getinstance   getboundary latitude  longitude  miles
double laty   box getmaxpoint   gety     box gety
double latx   box getminpoint   gety       box getmaxy
double longy   box getmaxpoint   getx       box getx
double longx   box getminpoint   getx     box getmaxx
cartesiantierplotter ctp   new cartesiantierplotter 2  projector tierprefix
int bestfit   ctp bestfit miles
log info     bestfit
ctp   new cartesiantierplotter bestfit  projector tierprefix
shape shape   new shape ctp gettierfieldname
// generate shape
// iterate from startx->endx
//     iterate from starty -> endy
//      shape.add(currentlat.currentlong);
double beginat   ctp gettierboxid latx  longx
double endat   ctp gettierboxid laty  longy
double tiervert   ctp gettierverticalposdivider
log fine    beginat    endat
double startx   beginat    beginat %1
double starty   beginat   startx     should give a whole number
double endx   endat    endat %1
double endy   endat  endx    should give a whole number
int scale    int math log10 tiervert
endy   new bigdecimal endy  setscale scale  roundingmode half_even  doublevalue
starty   new bigdecimal starty  setscale scale  roundingmode half_even  doublevalue
if log isloggable level fine
log fine   scale    startx     endx     starty      endy     tiervert
double xinc   1 0d   tiervert
xinc   new bigdecimal xinc  setscale scale  roundingmode half_even  doublevalue
for    startx <  endx  startx
double ity   starty
while  ity <  endy
//create a boxid
// startx.starty
double boxid   startx   ity
shape addbox boxid
//system.out.println("----"+boxid);
ity    xinc
// java keeps 0.0001 as 1.0e-1
// which ends up as 0.00011111
ity   new bigdecimal ity  setscale scale  roundingmode half_even  doublevalue
return shape
public filter getboundingarea double latitude  double longitude  double miles
shape shape   getboxshape latitude  longitude  miles
return new cartesianshapefilter shape  shape gettierid