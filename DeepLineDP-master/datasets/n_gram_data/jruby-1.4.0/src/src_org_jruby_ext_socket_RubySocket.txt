/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 ola bini <ola@ologix.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby ext socket
import com kenai constantine platform addressfamily
import static com kenai constantine platform addressfamily
import static com kenai constantine platform protocolfamily
import com kenai constantine platform sock
import static com kenai constantine platform sock
import static com kenai constantine platform nameinfo
import static com kenai constantine platform ipproto
import java io bytearrayoutputstream
import java io dataoutputstream
import java io filedescriptor
import java io ioexception
import java net inetaddress
import java net unknownhostexception
import java nio channels channel
import java nio channels datagramchannel
import java nio channels socketchannel
import java util arraylist
import java util list
import java util regex matcher
import java util regex pattern
import org jruby ruby
import org jruby rubyarray
import org jruby rubyclass
import org jruby rubyfixnum
import org jruby rubyio
import org jruby rubymodule
import org jruby rubynumeric
import org jruby rubystring
import org jruby platform platform
import org jruby anno jrubyclass
import org jruby anno jrubymethod
import org jruby anno jrubymodule
import org jruby exceptions raiseexception
import org jruby runtime arity
import org jruby runtime objectallocator
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
import org jruby runtime load library
import org jruby util bytelist
import org jruby util io modeflags
import org jruby util io channeldescriptor
import org jruby util io invalidvalueexception
/**
* @author <a href="mailto:ola.bini@ki.se">ola bini</a>
*/
@jrubyclass name    parent    include
public class rubysocket extends rubybasicsocket
@jrubyclass name    parent
public static class socketerror
public static class service implements library
public void load final ruby runtime  boolean wrap  throws ioexception
runtime defineclass    runtime getstandarderror    runtime getstandarderror   getallocator
rubybasicsocket createbasicsocket runtime
rubysocket createsocket runtime
if runtime getinstanceconfig   nativeenabled    rubyunixsocket tryunixdomainsocket
rubyunixsocket createunixsocket runtime
rubyunixserver createunixserver runtime
rubyipsocket createipsocket runtime
rubytcpsocket createtcpsocket runtime
rubytcpserver createtcpserver runtime
rubyudpsocket createudpsocket runtime
private static objectallocator socket_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new rubysocket runtime  klass
public static final int msg_oob   0x1
public static final int msg_peek   0x2
public static final int msg_dontroute   0x4
@jrubymodule name
public static class constants
static void createsocket ruby runtime
rubyclass rb_csocket   runtime defineclass    runtime fastgetclass     socket_allocator
rubymodule rb_mconstants   rb_csocket definemoduleunder
// we don't have to define any that we don't support; see socket.c
runtime loadconstantset rb_mconstants  com kenai constantine platform sock class
runtime loadconstantset rb_mconstants  com kenai constantine platform socketoption class
runtime loadconstantset rb_mconstants  com kenai constantine platform socketlevel class
runtime loadconstantset rb_mconstants  com kenai constantine platform protocolfamily class
runtime loadconstantset rb_mconstants  com kenai constantine platform addressfamily class
runtime loadconstantset rb_mconstants  com kenai constantine platform inaddr class
runtime loadconstantset rb_mconstants  com kenai constantine platform ipproto class
runtime loadconstantset rb_mconstants  com kenai constantine platform shutdown class
runtime loadconstantset rb_mconstants  com kenai constantine platform tcp class
runtime loadconstantset rb_mconstants  com kenai constantine platform nameinfo class
// mandatory constants we haven't implemented
rb_mconstants fastsetconstant    runtime newfixnum msg_oob
rb_mconstants fastsetconstant    runtime newfixnum msg_peek
rb_mconstants fastsetconstant    runtime newfixnum msg_dontroute
// constants webrick crashes without
rb_mconstants fastsetconstant    runtime newfixnum 1
// more constants needed by specs
rb_mconstants fastsetconstant    runtime newfixnum 10
rb_mconstants fastsetconstant    runtime newfixnum 11
rb_mconstants fastsetconstant    runtime newfixnum 12
rb_mconstants fastsetconstant    runtime newfixnum 20
rb_mconstants fastsetconstant    runtime newfixnum 1
rb_mconstants fastsetconstant    runtime newfixnum 1
rb_csocket includemodule rb_mconstants
rb_csocket defineannotatedmethods rubysocket class
public rubysocket ruby runtime  rubyclass type
super runtime  type
protected int getsotypedefault
return sotype
private int sodomain
private int sotype
private int soprotocol
@deprecated
public static irubyobject for_fd irubyobject socketclass  irubyobject fd
return for_fd socketclass getruntime   getcurrentcontext    socketclass  fd
@jrubymethod frame   true  meta   true
public static irubyobject for_fd threadcontext context  irubyobject socketclass  irubyobject fd
ruby ruby   context getruntime
if  fd instanceof rubyfixnum
rubysocket socket    rubysocket   rubyclass socketclass  allocate
// normal file descriptor..try to work with it
channeldescriptor descriptor   socket getdescriptorbyfileno  int   rubyfixnum fd  getlongvalue
if  descriptor    null
throw ruby newerrnoebadferror
channel mainchannel   descriptor getchannel
if  mainchannel instanceof socketchannel
// ok, it's a socket...set values accordingly
// just using af_inet since we can't tell from socketchannel...
socket sodomain   addressfamily af_inet value
socket sotype   sock sock_stream value
socket soprotocol   0
else if  mainchannel instanceof datagramchannel
// datagram, set accordingly
// again, af_inet
socket sodomain   addressfamily af_inet value
socket sotype   sock sock_dgram value
socket soprotocol   0
else
throw context getruntime   newerrnoenotsockerror
socket initsocket ruby  descriptor
return socket
else
throw context getruntime   newtypeerror fd  context getruntime   getfixnum
@jrubymethod
public irubyobject initialize threadcontext context  irubyobject domain  irubyobject type  irubyobject protocol
try
if domain instanceof rubystring
string domainstring   domain tostring
if domainstring equals
sodomain   af_inet value
else if domainstring equals
sodomain   pf_inet value
else
throw sockerr context getruntime        domainstring
else
sodomain   rubynumeric fix2int domain
if type instanceof rubystring
string typestring   type tostring
if typestring equals
sotype   sock_stream value
else if typestring equals
sotype   sock_dgram value
else
throw sockerr context getruntime        typestring
else
sotype   rubynumeric fix2int type
soprotocol   rubynumeric fix2int protocol
channel channel   null
if sotype    sock sock_stream value
channel   socketchannel open
else if sotype    sock sock_dgram value
channel   datagramchannel open
initsocket context getruntime    new channeldescriptor channel  rubyio getnewfileno    new modeflags modeflags rdwr   new filedescriptor
catch  invalidvalueexception ex
throw context getruntime   newerrnoeinvalerror
catch ioexception e
throw sockerr context getruntime        e tostring
return this
private static runtimeexception sockerr ruby runtime  string msg
return new raiseexception runtime  runtime fastgetclass     msg  true
@deprecated
public static irubyobject gethostname irubyobject recv
return gethostname recv getruntime   getcurrentcontext    recv
@jrubymethod meta   true
public static irubyobject gethostname threadcontext context  irubyobject recv
try
return context getruntime   newstring inetaddress getlocalhost   gethostname
catch unknownhostexception e
try
return context getruntime   newstring inetaddress getbyaddress new byte 0 0 0 0   gethostname
catch unknownhostexception e2
throw sockerr context getruntime
private static inetaddress intoaddress ruby runtime  string s
try
byte bs   bytelist plain s
return inetaddress getbyaddress bs
catch exception e
throw sockerr runtime      e tostring
private static string intostring ruby runtime  inetaddress as
try
return new string bytelist plain as getaddress
catch exception e
throw sockerr runtime      e tostring
@deprecated
public static irubyobject gethostbyaddr irubyobject recv  irubyobject args
return gethostbyaddr recv getruntime   getcurrentcontext    recv  args
@jrubymethod required   1  rest   true  meta   true
public static irubyobject gethostbyaddr threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
irubyobject ret   new irubyobject
ret   runtime newstring intoaddress runtime args converttostring   tostring    getcanonicalhostname
ret   runtime newarray
ret   runtime newfixnum 2      af_inet
ret   args
return runtime newarraynocopy ret
@deprecated
public static irubyobject getservbyname irubyobject recv  irubyobject args
return getservbyname recv getruntime   getcurrentcontext    recv  args
@jrubymethod required   1  optional   1  meta   true
public static irubyobject getservbyname threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
int argc   arity checkargumentcount runtime  args  1  2
string name   args converttostring   tostring
string service   argc    1 ?     args converttostring   tostring
integer port   iana servicetoport get name       service
if port    null
throw sockerr runtime      name       service
return runtime newfixnum port intvalue
@deprecated
public static irubyobject pack_sockaddr_un irubyobject recv  irubyobject filename
return pack_sockaddr_un recv getruntime   getcurrentcontext    recv  filename
@jrubymethod name           meta   true
public static irubyobject pack_sockaddr_un threadcontext context  irubyobject recv  irubyobject filename
stringbuilder sb   new stringbuilder
sb append  char 0
sb append  char 1
string str   filename converttostring   tostring
sb append str
for int i str length   i<104 i
sb append  char 0
return context getruntime   newstring sb tostring
@deprecated
public static irubyobject pack_sockaddr_in irubyobject recv  irubyobject port  irubyobject host
return pack_sockaddr_in recv getruntime   getcurrentcontext    recv  port  host
@jrubymethod name           meta   true
public static irubyobject pack_sockaddr_in threadcontext context  irubyobject recv  irubyobject port  irubyobject host
return pack_sockaddr_in context  recv
rubynumeric fix2int port
host isnil
? null
host converttostring   tostring
public static irubyobject pack_sockaddr_in threadcontext context  irubyobject recv  int iport  string host
bytearrayoutputstream bufs   new bytearrayoutputstream
try
dataoutputstream ds   new dataoutputstream bufs
if platform is_bsd
ds write 16
ds write 2
else
ds write 2
ds write 0
ds write iport >> 8
ds write iport
try
if host    null      equals host
ds writeint 0
else
inetaddress addrs   inetaddress getallbyname host
byte addr   addrs getaddress
ds write addr  0  addr length
catch  unknownhostexception e
throw sockerr context getruntime
ds writeint 0
ds writeint 0
catch  ioexception e
throw sockerr context getruntime
return context getruntime   newstring new bytelist bufs tobytearray
false
@deprecated
public static irubyobject unpack_sockaddr_in irubyobject recv  irubyobject addr
return unpack_sockaddr_in recv getruntime   getcurrentcontext    recv  addr
@jrubymethod meta   true
public static irubyobject unpack_sockaddr_in threadcontext context  irubyobject recv  irubyobject addr
string val   addr converttostring   tostring
if  platform is_bsd    val charat 0     16    val charat 1     2       platform is_bsd    val charat 0     2
throw context getruntime   newargumenterror
int port    val charat 2  << 8     val charat 3
stringbuilder sb   new stringbuilder
sb append  int val charat 4
sb append
sb append  int val charat 5
sb append
sb append  int val charat 6
sb append
sb append  int val charat 7
irubyobject result   new irubyobject
context getruntime   newfixnum port
context getruntime   newstring sb tostring
return context getruntime   newarraynocopy result
private static final bytelist broadcast   new bytelist   getbytes
private static final byte inaddr_broadcast   new byte   1  1  1  1      255 255 255 255
private static final bytelist any   new bytelist   getbytes
private static final byte inaddr_any   new byte  0 0 0 0      0 0 0 0
public static inetaddress getrubyinetaddress bytelist address  throws unknownhostexception
if  address equal broadcast
return inetaddress getbyaddress inaddr_broadcast
else if  address equal any
return inetaddress getbyaddress inaddr_any
else
return inetaddress getbyname address tostring
@deprecated
public static irubyobject gethostbyname irubyobject recv  irubyobject hostname
return gethostbyname recv getruntime   getcurrentcontext    recv  hostname
@jrubymethod meta   true
public static irubyobject gethostbyname threadcontext context  irubyobject recv  irubyobject hostname
try
inetaddress addr   getrubyinetaddress hostname converttostring   getbytelist
ruby runtime   context getruntime
irubyobject ret   new irubyobject
ret   runtime newstring addr getcanonicalhostname
ret   runtime newarray
ret   runtime newfixnum 2      af_inet
ret   runtime newstring new bytelist addr getaddress
return runtime newarraynocopy ret
catch unknownhostexception e
throw sockerr context getruntime
@deprecated
public static irubyobject getaddrinfo irubyobject recv  irubyobject args
return getaddrinfo recv getruntime   getcurrentcontext    recv  args
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)
@jrubymethod required   2  optional   4  meta   true
public static irubyobject getaddrinfo threadcontext context  irubyobject recv  irubyobject args
args   arity scanargs context getruntime   args 2 4
try
ruby r   context getruntime
irubyobject host   args
irubyobject port   args
boolean emptyhost   host isnil      host converttostring   isempty
if port instanceof rubystring
port   getservbyname context  recv  new irubyobject port
//irubyobject family = args[2];
irubyobject socktype   args
//irubyobject protocol = args[4];
irubyobject flags   args
boolean sock_stream   true
boolean sock_dgram   true
if  socktype isnil
int val   rubynumeric fix2int socktype
if val    sock_stream value
sock_dgram   false
else if val    sock_dgram value
sock_stream   false
// when socket::ai_passive and host is nil, return 'any' address.
inetaddress addrs   null
if  flags isnil
// the value of 1 is for socket::ai_passive.
int flag   rubynumeric fix2int flags
if   flag    1     emptyhost
addrs   inetaddress getallbyname
if  addrs    null
addrs   inetaddress getallbyname emptyhost ? null   host converttostring   tostring
list<irubyobject> l   new arraylist<irubyobject>
for int i   0  i < addrs length  i
irubyobject c
if sock_dgram
c   new irubyobject
c   r newstring
c   port
c   r newstring addrs getcanonicalhostname
c   r newstring addrs gethostaddress
c   r newfixnum pf_inet
c   r newfixnum sock_dgram
c   r newfixnum ipproto_udp
l add r newarraynocopy c
if sock_stream
c   new irubyobject
c   r newstring
c   port
c   r newstring addrs getcanonicalhostname
c   r newstring addrs gethostaddress
c   r newfixnum pf_inet
c   r newfixnum sock_stream
c   r newfixnum ipproto_tcp
l add r newarraynocopy c
return r newarray l
catch unknownhostexception e
throw sockerr context getruntime
// fixme: may need to broaden for ipv6 ip address strings
private static final pattern string_address_pattern
pattern compile
private static final int host_group   3
private static final int port_group   5
@deprecated
public static irubyobject getnameinfo irubyobject recv  irubyobject args
return getnameinfo recv getruntime   getcurrentcontext    recv  args
@jrubymethod required   1  optional   1  meta   true
public static irubyobject getnameinfo threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
int argc   arity checkargumentcount runtime  args  1  2
int flags   argc    2 ? rubynumeric num2int args    0
irubyobject arg0   args
string host  port
if  arg0 instanceof rubyarray
list list     rubyarray arg0  getlist
int len   list size
if  len < 3    len > 4
throw runtime newargumenterror   len
// todo: validate port as numeric
host   list get 2  tostring
port   list get 1  tostring
else if  arg0 instanceof rubystring
string arg     rubystring arg0  tostring
matcher m   string_address_pattern matcher arg
if   m matches
irubyobject obj   unpack_sockaddr_in context  recv  arg0
if  obj instanceof rubyarray
list list     rubyarray obj  getlist
int len   list size
if  len    2
throw runtime newargumenterror
host   list get 1  tostring
port   list get 0  tostring
else
throw runtime newargumenterror
else if   host   m group host_group      null    host length      0
port   m group port_group      null    port length      0
throw runtime newargumenterror
else
throw runtime newargumenterror
inetaddress addr
try
addr   inetaddress getbyname host
catch  unknownhostexception e
throw sockerr runtime     host
if   flags   ni_numerichost value       0
host   addr getcanonicalhostname
else
host   addr gethostaddress
if   flags   ni_numericserv value       0
string serv   iana porttoservice get integer parseint port
if  serv    null
port   serv substring 0  serv indexof
return runtime newarray runtime newstring host   runtime newstring port
rubysocket