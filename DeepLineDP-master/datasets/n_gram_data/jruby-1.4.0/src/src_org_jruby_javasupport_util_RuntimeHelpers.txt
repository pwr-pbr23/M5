package org jruby javasupport util
import org jruby metaclass
import org jruby ruby
import org jruby rubyarray
import org jruby rubyboolean
import org jruby rubyclass
import org jruby rubyexception
import org jruby rubyfixnum
import org jruby rubyhash
import org jruby rubyinstanceconfig
import org jruby rubykernel
import org jruby rubylocaljumperror
import org jruby rubymatchdata
import org jruby rubymodule
import org jruby rubyproc
import org jruby rubyregexp
import org jruby rubystring
import org jruby rubysymbol
import org jruby ast iternode
import org jruby ast node
import org jruby ast util argsutil
import org jruby common irubywarnings id
import org jruby evaluator astinterpreter
import org jruby exceptions jumpexception
import org jruby exceptions raiseexception
import org jruby internal runtime methods callconfiguration
import org jruby internal runtime methods dynamicmethod
import org jruby internal runtime methods undefinedmethod
import org jruby internal runtime methods wrappermethod
import org jruby javasupport javaclass
import org jruby javasupport javautil
import org jruby parser blockstaticscope
import org jruby parser localstaticscope
import org jruby parser staticscope
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime blockbody
import org jruby runtime callsite
import org jruby runtime calltype
import org jruby runtime compiledblock
import org jruby runtime compiledblock19
import org jruby runtime compiledblockcallback
import org jruby runtime compiledblockcallback19
import org jruby runtime compiledblocklight
import org jruby runtime compiledblocklight19
import org jruby runtime compiledsharedscopeblock
import org jruby runtime dynamicscope
import org jruby runtime interpreted19block
import org jruby runtime interpretedblock
import org jruby runtime methodfactory
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
import org jruby util bytelist
import org jruby util typeconverter
/**
* helper methods which are called by the compiler.  note: these will show no consumers, but
* generated code does call these so don't remove them thinking they are dead code.
*
*/
public class runtimehelpers
public static callsite selectattrasgncallsite irubyobject receiver  irubyobject self  callsite normalsite  callsite variablesite
if  receiver    self  return variablesite
return normalsite
public static irubyobject doattrasgn irubyobject receiver  callsite callsite  irubyobject value  threadcontext context  irubyobject caller
callsite call context  caller  receiver  value
return value
public static irubyobject doattrasgn irubyobject receiver  callsite callsite  irubyobject arg0  irubyobject value  threadcontext context  irubyobject caller
callsite call context  caller  receiver  arg0  value
return value
public static irubyobject doattrasgn irubyobject receiver  callsite callsite  irubyobject arg0  irubyobject arg1  irubyobject value  threadcontext context  irubyobject caller
callsite call context  caller  receiver  arg0  arg1  value
return value
public static irubyobject doattrasgn irubyobject receiver  callsite callsite  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject value  threadcontext context  irubyobject caller
callsite call context  caller  receiver  arg0  arg1  arg2  value
return value
public static irubyobject doattrasgn irubyobject receiver  callsite callsite  irubyobject args  threadcontext context  irubyobject caller
callsite call context  caller  receiver  args
return args
public static irubyobject doattrasgn irubyobject receiver  callsite callsite  irubyobject args  irubyobject value  threadcontext context  irubyobject caller
irubyobject newargs   new irubyobject
system arraycopy args  0  newargs  0  args length
newargs   value
callsite call context  caller  receiver  newargs
return value
public static boolean invokeeqqforcasewhen callsite callsite  threadcontext context  irubyobject caller  irubyobject arg  irubyobject receivers
for  int i   0  i < receivers length  i
irubyobject receiver   receivers
if  invokeeqqforcasewhen callsite  context  caller  arg  receiver   return true
return false
public static boolean invokeeqqforcasewhen callsite callsite  threadcontext context  irubyobject caller  irubyobject arg  irubyobject receiver
irubyobject result   callsite call context  caller  receiver  arg
if  result istrue    return true
return false
public static boolean invokeeqqforcasewhen callsite callsite  threadcontext context  irubyobject caller  irubyobject arg  irubyobject receiver0  irubyobject receiver1
irubyobject result   callsite call context  caller  receiver0  arg
if  result istrue    return true
return invokeeqqforcasewhen callsite  context  caller  arg  receiver1
public static boolean invokeeqqforcasewhen callsite callsite  threadcontext context  irubyobject caller  irubyobject arg  irubyobject receiver0  irubyobject receiver1  irubyobject receiver2
irubyobject result   callsite call context  caller  receiver0  arg
if  result istrue    return true
return invokeeqqforcasewhen callsite  context  caller  arg  receiver1  receiver2
public static boolean areanytrueforcaselesswhen irubyobject receivers
for  int i   0  i < receivers length  i
if  receivers istrue    return true
return false
public static boolean invokeeqqforcaselesswhen irubyobject receiver
return receiver istrue
public static boolean invokeeqqforcaselesswhen irubyobject receiver0  irubyobject receiver1
return receiver0 istrue      receiver1 istrue
public static boolean invokeeqqforcaselesswhen irubyobject receiver0  irubyobject receiver1  irubyobject receiver2
return receiver0 istrue      receiver1 istrue      receiver2 istrue
public static compiledblockcallback createblockcallback ruby runtime  object scriptobject  string closuremethod
class scriptclass   scriptobject getclass
classloader scriptclassloader   scriptclass getclassloader
methodfactory factory   methodfactory createfactory scriptclassloader
return factory getblockcallback closuremethod  scriptobject
public static compiledblockcallback19 createblockcallback19 ruby runtime  object scriptobject  string closuremethod
class scriptclass   scriptobject getclass
classloader scriptclassloader   scriptclass getclassloader
methodfactory factory   methodfactory createfactory scriptclassloader
return factory getblockcallback19 closuremethod  scriptobject
public static blockbody createcompiledblockbody threadcontext context  object scriptobject  string closuremethod  int arity
string staticscopenames  boolean hasmultipleargshead  int argsnodetype  boolean light
staticscope staticscope
new blockstaticscope context getcurrentscope   getstaticscope    staticscopenames
staticscope determinemodule
if  light
return compiledblocklight newcompiledblocklight
arity createarity arity   staticscope
createblockcallback context getruntime    scriptobject  closuremethod
hasmultipleargshead  argsnodetype
else
return compiledblock newcompiledblock
arity createarity arity   staticscope
createblockcallback context getruntime    scriptobject  closuremethod
hasmultipleargshead  argsnodetype
public static blockbody createcompiledblockbody19 threadcontext context  object scriptobject  string closuremethod  int arity
string staticscopenames  boolean hasmultipleargshead  int argsnodetype  boolean light
staticscope staticscope
new blockstaticscope context getcurrentscope   getstaticscope    staticscopenames
staticscope determinemodule
if  light
return compiledblocklight19 newcompiledblocklight
arity createarity arity   staticscope
createblockcallback19 context getruntime    scriptobject  closuremethod
hasmultipleargshead  argsnodetype
else
return compiledblock19 newcompiledblock
arity createarity arity   staticscope
createblockcallback19 context getruntime    scriptobject  closuremethod
hasmultipleargshead  argsnodetype
public static block createblock threadcontext context  irubyobject self  blockbody body
return compiledblock newcompiledclosure
context
self
body
public static block createblock19 threadcontext context  irubyobject self  blockbody body
return compiledblock19 newcompiledclosure
context
self
body
public static irubyobject runbeginblock threadcontext context  irubyobject self  string staticscopenames  compiledblockcallback callback
staticscope staticscope
new blockstaticscope context getcurrentscope   getstaticscope    staticscopenames
staticscope determinemodule
context prescopedbody dynamicscope newdynamicscope staticscope  context getcurrentscope
block block   compiledblock newcompiledclosure context  self  arity createarity 0   staticscope  callback  false  blockbody zero_args
try
block yield context  null
finally
context postscopedbody
return context getruntime   getnil
public static block createsharedscopeblock threadcontext context  irubyobject self  int arity
compiledblockcallback callback  boolean hasmultipleargshead  int argsnodetype
return compiledsharedscopeblock newcompiledsharedscopeclosure context  self  arity createarity arity
context getcurrentscope    callback  hasmultipleargshead  argsnodetype
public static irubyobject def threadcontext context  irubyobject self  object scriptobject  string name  string javaname  string scopenames
int arity  int required  int optional  int rest  callconfiguration callconfig
class compiledclass   scriptobject getclass
ruby runtime   context getruntime
rubymodule containingclass   context getrubyclass
visibility visibility   context getcurrentvisibility
performnormalmethodchecks containingclass  runtime  name
staticscope scope   creatscopeforclass context  scopenames  required  optional  rest
methodfactory factory   methodfactory createfactory compiledclass getclassloader
dynamicmethod method   constructnormalmethod name  visibility  factory  containingclass  javaname  arity  scope  scriptobject  callconfig
addinstancemethod containingclass  name  method  visibility context  runtime
return runtime getnil
public static irubyobject defs threadcontext context  irubyobject self  irubyobject receiver  object scriptobject  string name  string javaname  string scopenames
int arity  int required  int optional  int rest  callconfiguration callconfig
class compiledclass   scriptobject getclass
ruby runtime   context getruntime
rubyclass rubyclass   performsingletonmethodchecks runtime  receiver  name
staticscope scope   creatscopeforclass context  scopenames  required  optional  rest
methodfactory factory   methodfactory createfactory compiledclass getclassloader
dynamicmethod method   constructsingletonmethod factory  rubyclass  javaname  arity  scope scriptobject  callconfig
rubyclass addmethod name  method
callsingletonmethodhook receiver context  runtime fastnewsymbol name
return runtime getnil
public static rubyclass getsingletonclass ruby runtime  irubyobject receiver
if  receiver instanceof rubyfixnum    receiver instanceof rubysymbol
throw runtime newtypeerror     receiver getmetaclass   getbasename
else
if  runtime getsafelevel   >  4     receiver istaint
throw runtime newsecurityerror
return receiver getsingletonclass
// todo: only used by interface implementation; eliminate it
public static irubyobject invokemethodmissing irubyobject receiver  string name  irubyobject args
threadcontext context   receiver getruntime   getcurrentcontext
// store call information so method_missing impl can use it
context setlastcallstatusandvisibility calltype functional  visibility public
if  name
return rubykernel method_missing context  receiver  args  block null_block
irubyobject newargs   preparemethodmissingargs args  context  name
return invoke context  receiver     newargs  block null_block
public static irubyobject callmethodmissing threadcontext context  irubyobject receiver  visibility visibility  string name  calltype calltype  irubyobject args  block block
return selectmethodmissing context  receiver  visibility  name  calltype  call context  receiver  receiver getmetaclass    name  args  block
public static irubyobject callmethodmissing threadcontext context  irubyobject receiver  visibility visibility  string name  calltype calltype  irubyobject arg0  block block
return selectmethodmissing context  receiver  visibility  name  calltype  call context  receiver  receiver getmetaclass    name  arg0  block
public static irubyobject callmethodmissing threadcontext context  irubyobject receiver  visibility visibility  string name  calltype calltype  irubyobject arg0  irubyobject arg1  block block
return selectmethodmissing context  receiver  visibility  name  calltype  call context  receiver  receiver getmetaclass    name  arg0  arg1  block
public static irubyobject callmethodmissing threadcontext context  irubyobject receiver  visibility visibility  string name  calltype calltype  irubyobject arg0  irubyobject arg1  irubyobject arg2  block block
return selectmethodmissing context  receiver  visibility  name  calltype  call context  receiver  receiver getmetaclass    name  arg0  arg1  arg2  block
public static irubyobject callmethodmissing threadcontext context  irubyobject receiver  visibility visibility  string name  calltype calltype  block block
return selectmethodmissing context  receiver  visibility  name  calltype  call context  receiver  receiver getmetaclass    name  block
public static dynamicmethod selectmethodmissing threadcontext context  irubyobject receiver  visibility visibility  string name  calltype calltype
ruby runtime   context getruntime
if  name equals
return selectinternalmm runtime  visibility  calltype
dynamicmethod methodmissing   receiver getmetaclass   searchmethod
if  methodmissing isundefined      methodmissing    runtime getdefaultmethodmissing
return selectinternalmm runtime  visibility  calltype
return new methodmissingmethod methodmissing
public static dynamicmethod selectmethodmissing threadcontext context  rubyclass selfclass  visibility visibility  string name  calltype calltype
ruby runtime   context getruntime
if  name equals
return selectinternalmm runtime  visibility  calltype
dynamicmethod methodmissing   selfclass searchmethod
if  methodmissing isundefined      methodmissing    runtime getdefaultmethodmissing
return selectinternalmm runtime  visibility  calltype
return new methodmissingmethod methodmissing
private static class methodmissingmethod extends dynamicmethod
private dynamicmethod delegate
public methodmissingmethod dynamicmethod delegate
this delegate   delegate
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
return this delegate call context  self  clazz     preparemethodmissingargs args  context  name   block
@override
public dynamicmethod dup
return this
private static dynamicmethod selectinternalmm ruby runtime  visibility visibility  calltype calltype
if  visibility    visibility private
return runtime getprivatemethodmissing
else if  visibility    visibility protected
return runtime getprotectedmethodmissing
else if  calltype    calltype variable
return runtime getvariablemethodmissing
else if  calltype    calltype super
return runtime getsupermethodmissing
else
return runtime getnormalmethodmissing
private static irubyobject preparemethodmissingargs irubyobject args  threadcontext context  string name
irubyobject newargs   new irubyobject
system arraycopy args  0  newargs  1  args length
newargs   context getruntime   newsymbol name
return newargs
public static irubyobject invoke threadcontext context  irubyobject self  string name  block block
return self getmetaclass   finvoke context  self  name  block
public static irubyobject invoke threadcontext context  irubyobject self  string name  irubyobject arg0  block block
return self getmetaclass   finvoke context  self  name  arg0  block
public static irubyobject invoke threadcontext context  irubyobject self  string name  irubyobject arg0  irubyobject arg1  block block
return self getmetaclass   finvoke context  self  name  arg0  arg1  block
public static irubyobject invoke threadcontext context  irubyobject self  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  block block
return self getmetaclass   finvoke context  self  name  arg0  arg1  arg2  block
public static irubyobject invoke threadcontext context  irubyobject self  string name  irubyobject args  block block
return self getmetaclass   finvoke context  self  name  args  block
public static irubyobject invoke threadcontext context  irubyobject self  string name
return self getmetaclass   finvoke context  self  name
public static irubyobject invoke threadcontext context  irubyobject self  string name  irubyobject arg0
return self getmetaclass   finvoke context  self  name  arg0
public static irubyobject invoke threadcontext context  irubyobject self  string name  irubyobject arg0  irubyobject arg1
return self getmetaclass   finvoke context  self  name  arg0  arg1
public static irubyobject invoke threadcontext context  irubyobject self  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2
return self getmetaclass   finvoke context  self  name  arg0  arg1  arg2
public static irubyobject invoke threadcontext context  irubyobject self  string name  irubyobject args
return self getmetaclass   finvoke context  self  name  args
public static irubyobject invoke threadcontext context  irubyobject self  string name  calltype calltype
return runtimehelpers invoke context  self  name  irubyobject null_array  calltype  block null_block
public static irubyobject invoke threadcontext context  irubyobject self  string name  irubyobject args  calltype calltype  block block
return self getmetaclass   invoke context  self  name  args  calltype  block
public static irubyobject invoke threadcontext context  irubyobject self  string name  irubyobject arg  calltype calltype  block block
return self getmetaclass   invoke context  self  name  arg  calltype  block
public static irubyobject invokeas threadcontext context  rubyclass asclass  irubyobject self  string name  irubyobject args  block block
return asclass finvoke context  self  name  args  block
public static irubyobject invokeas threadcontext context  rubyclass asclass  irubyobject self  string name  block block
return asclass finvoke context  self  name  block
public static irubyobject invokeas threadcontext context  rubyclass asclass  irubyobject self  string name  irubyobject arg0  block block
return asclass finvoke context  self  name  arg0  block
public static irubyobject invokeas threadcontext context  rubyclass asclass  irubyobject self  string name  irubyobject arg0  irubyobject arg1  block block
return asclass finvoke context  self  name  arg0  arg1  block
public static irubyobject invokeas threadcontext context  rubyclass asclass  irubyobject self  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  block block
return asclass finvoke context  self  name  arg0  arg1  arg2  block
/**
* the protocol for super method invocation is a bit complicated
* in ruby. in real terms it involves first finding the real
* implementation class (the super class), getting the name of the
* method to call from the frame, and then invoke that on the
* super class with the current self as the actual object
* invoking.
*/
public static irubyobject invokesuper threadcontext context  irubyobject self  irubyobject args  block block
checksuperdisabledoroutofmethod context
rubymodule klazz   context getframeklazz
string name   context getframename
rubyclass superclass   findimplementerifnecessary self getmetaclass    klazz  getsuperclass
dynamicmethod method   superclass    null ? superclass searchmethod name    undefinedmethod instance
if  method isundefined
return callmethodmissing context  self  method getvisibility    name  calltype super  args  block
return method call context  self  superclass  name  args  block
public static irubyobject invokesuper threadcontext context  irubyobject self  block block
checksuperdisabledoroutofmethod context
rubymodule klazz   context getframeklazz
string name   context getframename
rubyclass superclass   findimplementerifnecessary self getmetaclass    klazz  getsuperclass
dynamicmethod method   superclass    null ? superclass searchmethod name    undefinedmethod instance
if  method isundefined
return callmethodmissing context  self  method getvisibility    name  calltype super  block
return method call context  self  superclass  name  block
public static irubyobject invokesuper threadcontext context  irubyobject self  irubyobject arg0  block block
checksuperdisabledoroutofmethod context
rubymodule klazz   context getframeklazz
string name   context getframename
rubyclass superclass   findimplementerifnecessary self getmetaclass    klazz  getsuperclass
dynamicmethod method   superclass    null ? superclass searchmethod name    undefinedmethod instance
if  method isundefined
return callmethodmissing context  self  method getvisibility    name  calltype super  arg0  block
return method call context  self  superclass  name  arg0  block
public static irubyobject invokesuper threadcontext context  irubyobject self  irubyobject arg0  irubyobject arg1  block block
checksuperdisabledoroutofmethod context
rubymodule klazz   context getframeklazz
string name   context getframename
rubyclass superclass   findimplementerifnecessary self getmetaclass    klazz  getsuperclass
dynamicmethod method   superclass    null ? superclass searchmethod name    undefinedmethod instance
if  method isundefined
return callmethodmissing context  self  method getvisibility    name  calltype super  arg0  arg1  block
return method call context  self  superclass  name  arg0  arg1  block
public static irubyobject invokesuper threadcontext context  irubyobject self  irubyobject arg0  irubyobject arg1  irubyobject arg2  block block
checksuperdisabledoroutofmethod context
rubymodule klazz   context getframeklazz
string name   context getframename
rubyclass superclass   findimplementerifnecessary self getmetaclass    klazz  getsuperclass
dynamicmethod method   superclass    null ? superclass searchmethod name    undefinedmethod instance
if  method isundefined
return callmethodmissing context  self  method getvisibility    name  calltype super  arg0  arg1  arg2  block
return method call context  self  superclass  name  arg0  arg1  arg2  block
public static rubyarray ensurerubyarray irubyobject value
return ensurerubyarray value getruntime    value
public static rubyarray ensurerubyarray ruby runtime  irubyobject value
return value instanceof rubyarray ?  rubyarray value   rubyarray newarray runtime  value
public static rubyarray ensuremultipleassignablerubyarray irubyobject value  ruby runtime  boolean masgnhashead
if    value instanceof rubyarray
value   argsutil converttorubyarray runtime  value  masgnhashead
return  rubyarray  value
public static irubyobject fetchclassvariable threadcontext context  ruby runtime
irubyobject self  string name
rubymodule rubyclass   astinterpreter getclassvariablebase context  runtime
if  rubyclass    null  rubyclass   self getmetaclass
return rubyclass getclassvar name
public static irubyobject fastfetchclassvariable threadcontext context  ruby runtime
irubyobject self  string internedname
rubymodule rubyclass   astinterpreter getclassvariablebase context  runtime
if  rubyclass    null  rubyclass   self getmetaclass
return rubyclass fastgetclassvar internedname
public static irubyobject getconstant threadcontext context  string internedname
ruby runtime   context getruntime
return context getcurrentscope   getstaticscope   getconstantwithconstmissing runtime  internedname  runtime getobject
public static irubyobject nulltonil irubyobject value  ruby runtime
return value    null ? value   runtime getnil
public static rubyclass preparesuperclass ruby runtime  irubyobject rubyclass
rubyclass checkinheritable rubyclass      use the same logic as in evaluationstate
return  rubyclass rubyclass
public static rubymodule prepareclassnamespace threadcontext context  irubyobject rubymodule
if  rubymodule    null    rubymodule isnil
rubymodule   context getcurrentscope   getstaticscope   getmodule
if  rubymodule    null
throw context getruntime   newtypeerror
if  rubymodule instanceof rubymodule
return  rubymodule rubymodule
else
throw context getruntime   newtypeerror rubymodule
public static irubyobject setclassvariable threadcontext context  ruby runtime
irubyobject self  string name  irubyobject value
rubymodule rubyclass   astinterpreter getclassvariablebase context  runtime
if  rubyclass    null  rubyclass   self getmetaclass
rubyclass setclassvar name  value
return value
public static irubyobject fastsetclassvariable threadcontext context  ruby runtime
irubyobject self  string internedname  irubyobject value
rubymodule rubyclass   astinterpreter getclassvariablebase context  runtime
if  rubyclass    null  rubyclass   self getmetaclass
rubyclass fastsetclassvar internedname  value
return value
public static irubyobject declareclassvariable threadcontext context  ruby runtime  irubyobject self  string name  irubyobject value
// fixme: this isn't quite right; it shouldn't evaluate the value if it's going to throw the error
rubymodule rubyclass   astinterpreter getclassvariablebase context  runtime
if  rubyclass    null  throw runtime newtypeerror
rubyclass setclassvar name  value
return value
public static irubyobject fastdeclareclassvariable threadcontext context  ruby runtime  irubyobject self  string internedname  irubyobject value
// fixme: this isn't quite right; it shouldn't evaluate the value if it's going to throw the error
rubymodule rubyclass   astinterpreter getclassvariablebase context  runtime
if  rubyclass    null  throw runtime newtypeerror
rubyclass fastsetclassvar internedname  value
return value
public static void handleargumentsizes threadcontext context  ruby runtime  int given  int required  int opt  int rest
if  opt    0
if  rest < 0
// no opt, no rest, exact match
if  given    required
throw runtime newargumenterror     given       required
else
// only rest, must be at least required
if  given < required
throw runtime newargumenterror     given       required
else
if  rest < 0
// opt but no rest, must be at least required and no more than required + opt
if  given < required
throw runtime newargumenterror     given       required
else if  given >  required   opt
throw runtime newargumenterror     given        required   opt
else
// opt and rest, must be at least required
if  given < required
throw runtime newargumenterror     given       required
/**
* if it's redo, next, or break, rethrow it as a normal exception for while to handle
* @param re
* @param runtime
*/
public static throwable unwrapredonextbreakorjustlocaljump raiseexception re  threadcontext context
rubyexception exception   re getexception
if  context getruntime   getlocaljumperror   isinstance exception
rubylocaljumperror jumperror    rubylocaljumperror re getexception
switch  jumperror getreason
case redo
return jumpexception redo_jump
case next
return new jumpexception nextjump jumperror exit_value
case break
return new jumpexception breakjump context getframejumptarget    jumperror exit_value
return re
public static string getlocaljumptypeorrethrow raiseexception re
rubyexception exception   re getexception
ruby runtime   exception getruntime
if  runtime getlocaljumperror   isinstance exception
rubylocaljumperror jumperror    rubylocaljumperror re getexception
irubyobject reason   jumperror reason
return reason asjavastring
throw re
public static irubyobject unwraplocaljumperrorvalue raiseexception re
return   rubylocaljumperror re getexception    exit_value
public static irubyobject processblockargument ruby runtime  block block
if   block isgiven
return runtime getnil
return processgivenblock block  runtime
private static irubyobject processgivenblock block block  ruby runtime
rubyproc blockarg   block getprocobject
if  blockarg    null
blockarg   runtime newblockpassproc block type proc  block
blockarg getblock   type   block type proc
return blockarg
public static block getblockfromblockpassbody ruby runtime  irubyobject proc  block currentblock
// no block from a nil proc
if  proc isnil    return block null_block
// if not already a proc then we should try and make it one.
if    proc instanceof rubyproc
proc   coerceproc proc  runtime
return getblockfromproc currentblock  proc
private static irubyobject coerceproc irubyobject proc  ruby runtime  throws raiseexception
proc   typeconverter converttotype proc  runtime getproc       false
if    proc instanceof rubyproc
throw runtime newtypeerror     proc getmetaclass   getname
return proc
private static block getblockfromproc block currentblock  irubyobject proc
// todo: add safety check for taintedness
if  currentblock    null    currentblock isgiven
rubyproc procobject   currentblock getprocobject
// the current block is already associated with proc.  no need to create a new one
if  procobject    null    procobject    proc
return currentblock
return   rubyproc  proc  getblock
public static block getblockfromblockpassbody irubyobject proc  block currentblock
return getblockfromblockpassbody proc getruntime    proc  currentblock
public static irubyobject backref threadcontext context
irubyobject backref   context getcurrentscope   getbackref context getruntime
if backref instanceof rubymatchdata
rubymatchdata backref  use
return backref
public static irubyobject backreflastmatch threadcontext context
irubyobject backref   context getcurrentscope   getbackref context getruntime
return rubyregexp last_match backref
public static irubyobject backrefmatchpre threadcontext context
irubyobject backref   context getcurrentscope   getbackref context getruntime
return rubyregexp match_pre backref
public static irubyobject backrefmatchpost threadcontext context
irubyobject backref   context getcurrentscope   getbackref context getruntime
return rubyregexp match_post backref
public static irubyobject backrefmatchlast threadcontext context
irubyobject backref   context getcurrentscope   getbackref context getruntime
return rubyregexp match_last backref
public static irubyobject getargvalues threadcontext context
return context getcurrentscope   getargvalues
public static irubyobject callzsuper ruby runtime  threadcontext context  block block  irubyobject self
// has the method that is calling super received a block argument
if   block isgiven    block   context getcurrentframe   getblock
return runtimehelpers invokesuper context  self  context getcurrentscope   getargvalues    block
public static irubyobject appendtoobjectarray irubyobject array  irubyobject add
irubyobject newarray   new irubyobject
system arraycopy array  0  newarray  0  array length
newarray   add
return newarray
public static jumpexception returnjump returnjump irubyobject result  threadcontext context
return context returnjump result
public static irubyobject breakjumpinwhile jumpexception breakjump bj  threadcontext context
// jruby-530, while case
if  bj gettarget      context getframejumptarget
return  irubyobject  bj getvalue
throw bj
public static irubyobject breakjump threadcontext context  irubyobject value
throw new jumpexception breakjump context getframejumptarget    value
public static irubyobject breaklocaljumperror ruby runtime  irubyobject value
throw runtime newlocaljumperror rubylocaljumperror reason break  value
public static irubyobject concatobjectarrays irubyobject array  irubyobject add
irubyobject newarray   new irubyobject
system arraycopy array  0  newarray  0  array length
system arraycopy add  0  newarray  array length  add length
return newarray
public static irubyobject isexceptionhandled rubyexception currentexception  irubyobject exceptions  threadcontext context
for  int i   0  i < exceptions length  i
irubyobject result   isexceptionhandled currentexception  exceptions  context
if  result istrue    return result
return context getruntime   getfalse
public static irubyobject isexceptionhandled rubyexception currentexception  irubyobject exception  threadcontext context
ruby runtime   context getruntime
if   runtime getmodule   isinstance exception
throw runtime newtypeerror
irubyobject result   invoke context  exception     currentexception
if  result istrue    return result
return runtime getfalse
public static irubyobject isexceptionhandled rubyexception currentexception  irubyobject exception0  irubyobject exception1  threadcontext context
irubyobject result   isexceptionhandled currentexception  exception0  context
if  result istrue    return result
return isexceptionhandled currentexception  exception1  context
public static irubyobject isexceptionhandled rubyexception currentexception  irubyobject exception0  irubyobject exception1  irubyobject exception2  threadcontext context
irubyobject result   isexceptionhandled currentexception  exception0  context
if  result istrue    return result
return isexceptionhandled currentexception  exception1  exception2  context
private static boolean checkjavaexception throwable currentthrowable  irubyobject throwable
if  throwable instanceof rubyclass
rubyclass rubyclass    rubyclass throwable
javaclass javaclass    javaclass rubyclass fastgetinstancevariable
if  javaclass    null
class cls   javaclass javaclass
if  cls isinstance currentthrowable
return true
return false
public static irubyobject isjavaexceptionhandled throwable currentthrowable  irubyobject throwables  threadcontext context
if  currentthrowable instanceof raiseexception
return isexceptionhandled   raiseexception currentthrowable  getexception    throwables  context
else
for  int i   0  i < throwables length  i
if  checkjavaexception currentthrowable  throwables
return context getruntime   gettrue
return context getruntime   getfalse
public static irubyobject isjavaexceptionhandled throwable currentthrowable  irubyobject throwable  threadcontext context
if  currentthrowable instanceof raiseexception
return isexceptionhandled   raiseexception currentthrowable  getexception    throwable  context
else
if  checkjavaexception currentthrowable  throwable
return context getruntime   gettrue
return context getruntime   getfalse
public static irubyobject isjavaexceptionhandled throwable currentthrowable  irubyobject throwable0  irubyobject throwable1  threadcontext context
if  currentthrowable instanceof raiseexception
return isexceptionhandled   raiseexception currentthrowable  getexception    throwable0  throwable1  context
else
if  checkjavaexception currentthrowable  throwable0
return context getruntime   gettrue
if  checkjavaexception currentthrowable  throwable1
return context getruntime   gettrue
return context getruntime   getfalse
public static irubyobject isjavaexceptionhandled throwable currentthrowable  irubyobject throwable0  irubyobject throwable1  irubyobject throwable2  threadcontext context
if  currentthrowable instanceof raiseexception
return isexceptionhandled   raiseexception currentthrowable  getexception    throwable0  throwable1  throwable2  context
else
if  checkjavaexception currentthrowable  throwable0
return context getruntime   gettrue
if  checkjavaexception currentthrowable  throwable1
return context getruntime   gettrue
if  checkjavaexception currentthrowable  throwable2
return context getruntime   gettrue
return context getruntime   getfalse
public static void storeexceptioninerrorinfo throwable currentthrowable  threadcontext context
irubyobject exception   null
if  currentthrowable instanceof raiseexception
exception     raiseexception currentthrowable  getexception
else
exception   javautil convertjavatousablerubyobject context getruntime    currentthrowable
context seterrorinfo exception
public static void clearerrorinfo threadcontext context
context seterrorinfo context getruntime   getnil
public static void checksuperdisabledoroutofmethod threadcontext context
if  context getframeklazz      null
string name   context getframename
if  name    null
throw context getruntime   newnameerror     name      name
else
throw context getruntime   newnomethoderror    null  context getruntime   getnil
public static block ensuresuperblock block given  block parent
if   given isgiven
return parent
return given
public static rubymodule findimplementerifnecessary rubymodule clazz  rubymodule implementationclass
if  implementationclass    null    implementationclass needsimplementer
// modules are included with a shim class; we must find that shim to handle super() appropriately
return clazz findimplementer implementationclass
else
// classes are directly in the hierarchy, so no special logic is necessary for implementer
return implementationclass
public static rubyarray createsubarray rubyarray input  int start
return  rubyarray input subseqlight start  input size     start
public static rubyarray createsubarray irubyobject input  ruby runtime  int start
if  start >  input length
return rubyarray newemptyarray runtime
else
return rubyarray newarraynocopy runtime  input  start
public static rubyarray createsubarray irubyobject input  ruby runtime  int start  int exclude
int length   input length   exclude   start
if  length <  0
return rubyarray newemptyarray runtime
else
return rubyarray newarraynocopy runtime  input  start  length
public static irubyobject elementornull irubyobject input  int element
if  element >  input length
return null
else
return input
public static irubyobject elementornil irubyobject input  int element  irubyobject nil
if  element >  input length
return nil
else
return input
public static rubyboolean iswhentriggered irubyobject expression  irubyobject expressionsobject  threadcontext context
rubyarray expressions   runtimehelpers splatvalue expressionsobject
for  int j   0 k   expressions getlength    j < k  j
irubyobject condition   expressions eltinternal j
if   expression    null    condition callmethod context     expression
istrue
expression    null    condition istrue
return context getruntime   gettrue
return context getruntime   getfalse
public static irubyobject setconstantinmodule irubyobject module  irubyobject value  string name  threadcontext context
return context setconstantinmodule name  module  value
public static irubyobject setconstantincurrent irubyobject value  threadcontext context  string name
return context setconstantincurrent name  value
public static irubyobject retryjump
throw jumpexception retry_jump
public static irubyobject redojump
throw jumpexception redo_jump
public static irubyobject redolocaljumperror ruby runtime
throw runtime newlocaljumperror rubylocaljumperror reason redo  runtime getnil
public static irubyobject nextjump irubyobject value
throw new jumpexception nextjump value
public static irubyobject nextlocaljumperror ruby runtime  irubyobject value
throw runtime newlocaljumperror rubylocaljumperror reason next  value
public static final int max_specific_arity_object_array   5
public static irubyobject constructobjectarray irubyobject one
return new irubyobject  one
public static irubyobject constructobjectarray irubyobject one  irubyobject two
return new irubyobject  one  two
public static irubyobject constructobjectarray irubyobject one  irubyobject two  irubyobject three
return new irubyobject  one  two  three
public static irubyobject constructobjectarray irubyobject one  irubyobject two  irubyobject three  irubyobject four
return new irubyobject  one  two  three  four
public static irubyobject constructobjectarray irubyobject one  irubyobject two  irubyobject three  irubyobject four  irubyobject five
return new irubyobject  one  two  three  four  five
public static rubyarray constructrubyarray ruby runtime  irubyobject one
return rubyarray newarraylight runtime  one
public static rubyarray constructrubyarray ruby runtime  irubyobject one  irubyobject two
return rubyarray newarraylight runtime  one  two
public static rubyarray constructrubyarray ruby runtime  irubyobject one  irubyobject two  irubyobject three
return rubyarray newarraylight runtime  one  two  three
public static rubyarray constructrubyarray ruby runtime  irubyobject one  irubyobject two  irubyobject three  irubyobject four
return rubyarray newarraylight runtime  one  two  three  four
public static rubyarray constructrubyarray ruby runtime  irubyobject one  irubyobject two  irubyobject three  irubyobject four  irubyobject five
return rubyarray newarraylight runtime  one  two  three  four  five
public static string constructstringarray string one
return new string  one
public static string constructstringarray string one  string two
return new string  one  two
public static string constructstringarray string one  string two  string three
return new string  one  two  three
public static string constructstringarray string one  string two  string three  string four
return new string  one  two  three  four
public static string constructstringarray string one  string two  string three  string four  string five
return new string  one  two  three  four  five
public static string constructstringarray string one  string two  string three  string four  string five  string six
return new string  one  two  three  four  five  six
public static string constructstringarray string one  string two  string three  string four  string five  string six  string seven
return new string  one  two  three  four  five  six  seven
public static string constructstringarray string one  string two  string three  string four  string five  string six  string seven  string eight
return new string  one  two  three  four  five  six  seven  eight
public static string constructstringarray string one  string two  string three  string four  string five  string six  string seven  string eight  string nine
return new string  one  two  three  four  five  six  seven  eight  nine
public static string constructstringarray string one  string two  string three  string four  string five  string six  string seven  string eight  string nine  string ten
return new string  one  two  three  four  five  six  seven  eight  nine  ten
public static final int max_specific_arity_hash   3
public static rubyhash constructhash ruby runtime  irubyobject key1  irubyobject value1
rubyhash hash   rubyhash newhash runtime
hash fastasetcheckstring runtime  key1  value1
return hash
public static rubyhash constructhash ruby runtime  irubyobject key1  irubyobject value1  irubyobject key2  irubyobject value2
rubyhash hash   rubyhash newhash runtime
hash fastasetcheckstring runtime  key1  value1
hash fastasetcheckstring runtime  key2  value2
return hash
public static rubyhash constructhash ruby runtime  irubyobject key1  irubyobject value1  irubyobject key2  irubyobject value2  irubyobject key3  irubyobject value3
rubyhash hash   rubyhash newhash runtime
hash fastasetcheckstring runtime  key1  value1
hash fastasetcheckstring runtime  key2  value2
hash fastasetcheckstring runtime  key3  value3
return hash
public static rubyhash constructhash19 ruby runtime  irubyobject key1  irubyobject value1
rubyhash hash   rubyhash newhash runtime
hash fastasetcheckstring19 runtime  key1  value1
return hash
public static rubyhash constructhash19 ruby runtime  irubyobject key1  irubyobject value1  irubyobject key2  irubyobject value2
rubyhash hash   rubyhash newhash runtime
hash fastasetcheckstring19 runtime  key1  value1
hash fastasetcheckstring19 runtime  key2  value2
return hash
public static rubyhash constructhash19 ruby runtime  irubyobject key1  irubyobject value1  irubyobject key2  irubyobject value2  irubyobject key3  irubyobject value3
rubyhash hash   rubyhash newhash runtime
hash fastasetcheckstring19 runtime  key1  value1
hash fastasetcheckstring19 runtime  key2  value2
hash fastasetcheckstring19 runtime  key3  value3
return hash
public static irubyobject definealias threadcontext context  string newname  string oldname
ruby runtime   context getruntime
rubymodule module   context getrubyclass
if  module    null  throw runtime newtypeerror
module definealias newname  oldname
module callmethod context     runtime newsymbol newname
return runtime getnil
public static irubyobject negate irubyobject value  ruby runtime
if  value istrue    return runtime getfalse
return runtime gettrue
public static irubyobject stringornil string value  ruby runtime  irubyobject nil
if  value    null  return nil
return rubystring newstring runtime  value
public static void preload threadcontext context  string varnames
staticscope staticscope   new localstaticscope null  varnames
staticscope setmodule context getruntime   getobject
dynamicscope scope   dynamicscope newdynamicscope staticscope
// each root node has a top-level scope that we need to push
context prescopedbody scope
public static void postload threadcontext context
context postscopedbody
public static void registerendblock block block  ruby runtime
runtime pushexitblock runtime newproc block type lambda  block
public static irubyobject match3 rubyregexp regexp  irubyobject value  threadcontext context
if  value instanceof rubystring
return regexp op_match context  value
else
return value callmethod context     regexp
public static irubyobject geterrorinfo ruby runtime
return runtime getglobalvariables   get
public static void seterrorinfo ruby runtime  irubyobject error
runtime getglobalvariables   set    error
public static irubyobject setlastline ruby runtime  threadcontext context  irubyobject value
return context getcurrentscope   setlastline value
public static irubyobject getlastline ruby runtime  threadcontext context
return context getcurrentscope   getlastline runtime
public static irubyobject setbackref ruby runtime  threadcontext context  irubyobject value
if   value isnil        value instanceof rubymatchdata   throw runtime newtypeerror value  runtime getmatchdata
return context getcurrentscope   setbackref value
public static irubyobject getbackref ruby runtime  threadcontext context
irubyobject backref   context getcurrentscope   getbackref runtime
if  backref instanceof rubymatchdata    rubymatchdata backref  use
return backref
public static irubyobject preopasgnwithorand irubyobject receiver  threadcontext context  irubyobject self  callsite varsite
return varsite call context  self  receiver
public static irubyobject postopasgnwithorand irubyobject receiver  irubyobject value  threadcontext context  irubyobject self  callsite varasgnsite
varasgnsite call context  self  receiver  value
return value
public static irubyobject opasgnwithmethod threadcontext context  irubyobject self  irubyobject receiver  irubyobject arg  callsite varsite  callsite opsite  callsite opasgnsite
irubyobject var   varsite call context  self  receiver
irubyobject result   opsite call context  self  var  arg
opasgnsite call context  self  receiver  result
return result
public static irubyobject opelementasgnwithmethod threadcontext context  irubyobject self  irubyobject receiver  irubyobject value  callsite elementsite  callsite opsite  callsite elementasgnsite
irubyobject var   elementsite call context  self  receiver
irubyobject result   opsite call context  self  var  value
elementasgnsite call context  self  receiver  result
return result
public static irubyobject opelementasgnwithmethod threadcontext context  irubyobject self  irubyobject receiver  irubyobject arg  irubyobject value  callsite elementsite  callsite opsite  callsite elementasgnsite
irubyobject var   elementsite call context  self  receiver  arg
irubyobject result   opsite call context  self  var  value
elementasgnsite call context  self  receiver  arg  result
return result
public static irubyobject opelementasgnwithmethod threadcontext context  irubyobject self  irubyobject receiver  irubyobject arg1  irubyobject arg2  irubyobject value  callsite elementsite  callsite opsite  callsite elementasgnsite
irubyobject var   elementsite call context  self  receiver  arg1  arg2
irubyobject result   opsite call context  self  var  value
elementasgnsite call context  self  receiver  arg1  arg2  result
return result
public static irubyobject opelementasgnwithmethod threadcontext context  irubyobject self  irubyobject receiver  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject value  callsite elementsite  callsite opsite  callsite elementasgnsite
irubyobject var   elementsite call context  self  receiver  arg1  arg2  arg3
irubyobject result   opsite call context  self  var  value
elementasgnsite call context  self  receiver  new irubyobject  arg1  arg2  arg3  result
return result
public static irubyobject opelementasgnwithmethod threadcontext context  irubyobject self  irubyobject receiver  irubyobject args  irubyobject value  callsite elementsite  callsite opsite  callsite elementasgnsite
irubyobject var   elementsite call context  self  receiver
irubyobject result   opsite call context  self  var  value
elementasgnsite call context  self  receiver  appendtoobjectarray args  result
return result
public static irubyobject opelementasgnwithorparttwoonearg threadcontext context  irubyobject self  irubyobject receiver  irubyobject arg  irubyobject value  callsite asetsite
asetsite call context  self  receiver  arg  value
return value
public static irubyobject opelementasgnwithorparttwotwoargs threadcontext context  irubyobject self  irubyobject receiver  irubyobject args  irubyobject value  callsite asetsite
asetsite call context  self  receiver  args  args  value
return value
public static irubyobject opelementasgnwithorparttwothreeargs threadcontext context  irubyobject self  irubyobject receiver  irubyobject args  irubyobject value  callsite asetsite
asetsite call context  self  receiver  new irubyobject  args  args  args  value
return value
public static irubyobject opelementasgnwithorparttwonargs threadcontext context  irubyobject self  irubyobject receiver  irubyobject args  irubyobject value  callsite asetsite
irubyobject newargs   new irubyobject
system arraycopy args  0  newargs  0  args length
newargs   value
asetsite call context  self  receiver  newargs
return value
public static rubyarray arrayvalue irubyobject value
irubyobject tmp   value checkarraytype
if  tmp isnil
// object#to_a is obsolete.  we match ruby's hack until to_a goes away.  then we can
// remove this hack too.
ruby runtime   value getruntime
if  value getmetaclass   searchmethod    getimplementationclass      runtime getkernel
value   value callmethod runtime getcurrentcontext
if    value instanceof rubyarray   throw runtime newtypeerror
return  rubyarray value
else
return runtime newarray value
return  rubyarray tmp
public static irubyobject arytoary irubyobject value
if  value instanceof rubyarray  return value
if  value respondsto
return typeconverter converttotype value  value getruntime   getarray       false
return value getruntime   newarray value
public static irubyobject avaluesplat irubyobject value
if    value instanceof rubyarray       rubyarray  value  length   getlongvalue      0
return value getruntime   getnil
rubyarray array    rubyarray  value
return array getlength      1 ? array first     array
public static rubyarray splatvalue irubyobject value
if  value isnil
return value getruntime   newarray value
return arrayvalue value
public static void addinstancemethod rubymodule containingclass  string name  dynamicmethod method  visibility visibility  threadcontext context  ruby runtime
containingclass addmethod name  method
rubysymbol sym   runtime fastnewsymbol name
if  visibility    visibility module_function
addmodulemethod containingclass  name  method  context  sym
callnormalmethodhook containingclass  context  sym
private static void addmodulemethod rubymodule containingclass  string name  dynamicmethod method  threadcontext context  rubysymbol sym
containingclass getsingletonclass   addmethod name  new wrappermethod containingclass getsingletonclass    method  visibility public
containingclass callmethod context     sym
private static void callnormalmethodhook rubymodule containingclass  threadcontext context  rubysymbol name
// 'class << state.self' and 'class << obj' uses defn as opposed to defs
if  containingclass issingleton
callsingletonmethodhook   metaclass  containingclass  getattached    context  name
else
containingclass callmethod context     name
private static void callsingletonmethodhook irubyobject receiver  threadcontext context  rubysymbol name
receiver callmethod context     name
private static dynamicmethod constructnormalmethod string name  visibility visibility  methodfactory factory  rubymodule containingclass  string javaname  int arity  staticscope scope  object scriptobject  callconfiguration callconfig
dynamicmethod method
if  name equals       name equals       visibility    visibility module_function
visibility   visibility private
if  rubyinstanceconfig lazyhandles_compile
method   factory getcompiledmethodlazily containingclass  javaname  arity createarity arity   visibility  scope  scriptobject  callconfig
else
method   factory getcompiledmethod containingclass  javaname  arity createarity arity   visibility  scope  scriptobject  callconfig
return method
private static dynamicmethod constructsingletonmethod methodfactory factory  rubyclass rubyclass  string javaname  int arity  staticscope scope  object scriptobject  callconfiguration callconfig
if  rubyinstanceconfig lazyhandles_compile
return factory getcompiledmethodlazily rubyclass  javaname  arity createarity arity   visibility public  scope  scriptobject  callconfig
else
return factory getcompiledmethod rubyclass  javaname  arity createarity arity   visibility public  scope  scriptobject  callconfig
private static staticscope creatscopeforclass threadcontext context  string scopenames  int required  int optional  int rest
staticscope scope   new localstaticscope context getcurrentscope   getstaticscope    scopenames
scope determinemodule
scope setarities required  optional  rest
return scope
private static void performnormalmethodchecks rubymodule containingclass  ruby runtime  string name  throws raiseexception
if  containingclass    runtime getdummy
throw runtime newtypeerror
if  containingclass    runtime getobject      name equals
runtime getwarnings   warn id redefining_dangerous
if  name equals       name equals
runtime getwarnings   warn id redefining_dangerous      name      name
private static rubyclass performsingletonmethodchecks ruby runtime  irubyobject receiver  string name  throws raiseexception
if  runtime getsafelevel   >  4     receiver istaint
throw runtime newsecurityerror
if  receiver instanceof rubyfixnum    receiver instanceof rubysymbol
throw runtime newtypeerror        receiver getmetaclass   getbasename
if  receiver isfrozen
throw runtime newfrozenerror
rubyclass rubyclass   receiver getsingletonclass
if  runtime getsafelevel   >  4    rubyclass getmethods   get name     null
throw runtime newsecurityerror
return rubyclass
public static irubyobject arrayentryornil rubyarray array  int index
if  index < array getlength
return array eltinternal index
else
return array getruntime   getnil
public static irubyobject arrayentryornilzero rubyarray array
if  0 < array getlength
return array eltinternal 0
else
return array getruntime   getnil
public static irubyobject arrayentryornilone rubyarray array
if  1 < array getlength
return array eltinternal 1
else
return array getruntime   getnil
public static irubyobject arrayentryorniltwo rubyarray array
if  2 < array getlength
return array eltinternal 2
else
return array getruntime   getnil
public static rubyarray subarrayorempty rubyarray array  ruby runtime  int index
if  index < array getlength
return createsubarray array  index
else
return rubyarray newemptyarray runtime
public static rubymodule checkismodule irubyobject maybemodule
if  maybemodule instanceof rubymodule  return  rubymodule maybemodule
throw maybemodule getruntime   newtypeerror maybemodule
public static irubyobject getglobalvariable ruby runtime  string name
return runtime getglobalvariables   get name
public static irubyobject setglobalvariable irubyobject value  ruby runtime  string name
return runtime getglobalvariables   set name  value
public static irubyobject getinstancevariable irubyobject self  ruby runtime  string internedname
irubyobject result   self getinstancevariables   fastgetinstancevariable internedname
if  result    null  return result
if  runtime isverbose    warnaboutuninitializedivar runtime  internedname
return runtime getnil
private static void warnaboutuninitializedivar ruby runtime  string internedname
runtime getwarnings   warning id ivar_not_initialized      internedname
public static irubyobject setinstancevariable irubyobject value  irubyobject self  string name
return self getinstancevariables   fastsetinstancevariable name  value
public static rubyproc newliterallambda threadcontext context  block block  irubyobject self
return rubyproc newproc context getruntime    block  block type lambda
public static void fillnil irubyobjectarr  int from  int to  ruby runtime
irubyobject nils   runtime getnilprefilledarray
int i
for  i   from  i   ruby nil_prefilled_array_size < to  i    ruby nil_prefilled_array_size
system arraycopy nils  0  arr  i  ruby nil_prefilled_array_size
system arraycopy nils  0  arr  i  to   i
public static void fillnil irubyobjectarr  ruby runtime
fillnil arr  0  arr length  runtime
public static boolean isfastswitchablestring irubyobject str
return str instanceof rubystring
public static boolean isfastswitchablesinglecharstring irubyobject str
return str instanceof rubystring      rubystring str  getbytelist   length      1
public static int getfastswitchstring irubyobject str
bytelist bytelist     rubystring str  getbytelist
return bytelist hashcode
public static int getfastswitchsinglecharstring irubyobject str
bytelist bytelist     rubystring str  getbytelist
return bytelist get 0
public static boolean isfastswitchablesymbol irubyobject sym
return sym instanceof rubysymbol
public static boolean isfastswitchablesinglecharsymbol irubyobject sym
return sym instanceof rubysymbol      rubysymbol sym  asjavastring   length      1
public static int getfastswitchsymbol irubyobject sym
string str     rubysymbol sym  asjavastring
return str hashcode
public static int getfastswitchsinglecharsymbol irubyobject sym
string str     rubysymbol sym  asjavastring
return  int str charat 0
public static block getblock threadcontext context  irubyobject self  node node
iternode iter    iternode node
iter getscope   determinemodule
// create block for this iter node
// fixme: we shouldn't use the current scope if it's not actually from the same hierarchy of static scopes
if  iter getblockbody   instanceof interpretedblock
return interpretedblock newinterpretedclosure context  iter getblockbody    self
else
return interpreted19block newinterpretedclosure context  iter getblockbody    self
public static block getblock ruby runtime  threadcontext context  irubyobject self  node node  block ablock
return runtimehelpers getblockfromblockpassbody runtime  node interpret runtime  context  self  ablock   ablock
/**
* equivalent to rb_equal in mri
*
* @param context
* @param a
* @param b
* @return
*/
public static irubyobject rbequal threadcontext context  irubyobject a  irubyobject b
ruby runtime   context getruntime
if  a    b  return runtime gettrue
return a callmethod context     b