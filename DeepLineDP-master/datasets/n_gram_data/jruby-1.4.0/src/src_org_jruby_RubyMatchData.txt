/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2001 alan moore <alan_moore@gmx.net>
* copyright (c) 2001-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2004 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 charles o nutter <headius@headius.com>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import java util arrays
import java util iterator
import org jcodings encoding
import org joni nameentry
import org joni regex
import org joni region
import org joni exception joniexception
import org jruby anno jrubymethod
import org jruby anno jrubyclass
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime classindex
import org jruby runtime objectallocator
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
import org jruby util bytelist
import org jruby util stringsupport
/**
* @author olabini
*/
@jrubyclass name
public class rubymatchdata extends rubyobject
region regs            captures
int begin  end         begin and end are used when not groups defined
rubystring str         source string
regex pattern
rubyregexp regexp
boolean charoffsetupdated
region charoffsets
public static rubyclass creatematchdataclass ruby runtime
rubyclass matchdataclass   runtime defineclass    runtime getobject    match_data_allocator
runtime setmatchdata matchdataclass
runtime defineglobalconstant    matchdataclass
matchdataclass kindof   new rubymodule kindof
@override
public boolean iskindof irubyobject obj  rubymodule type
return obj instanceof rubymatchdata
matchdataclass getmetaclass   undefinemethod
matchdataclass defineannotatedmethods rubymatchdata class
return matchdataclass
private static objectallocator match_data_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new rubymatchdata runtime  klass
public rubymatchdata ruby runtime
super runtime  runtime getmatchdata
public rubymatchdata ruby runtime  rubyclass metaclass
super runtime  metaclass
@override
public int getnativetypeindex
return classindex match
private static final class pair implements comparable
int bytepos  charpos
public int compareto object o
return bytepos     pair o  bytepos
private void updatecharoffset
if  charoffsetupdated  return
int numregs   regs    null ? 1   regs numregs
if  charoffsets    null    charoffsets numregs < numregs  charoffsets   new region numregs
pairpairs   new pair
for  int i   0  i < pairs length  i    pairs   new pair
int numpos   0
if  regs    null
pairs bytepos   begin
pairs bytepos   end
else
for  int i   0  i < numregs  i
if  regs beg < 0  continue
pairs bytepos   regs beg
pairs bytepos   regs end
arrays sort pairs
bytelist value   str getbytelist
encoding enc   value encoding
bytebytes   value bytes
int p   value begin
int s   p
int c   0
for  int i   0  i < numpos  i
int q   s   pairs bytepos
c    stringsupport strlength enc  bytes  p  q
pairs charpos   c
p   q
pair key   new pair
if  regs    null
key bytepos   begin
charoffsets beg   pairs charpos
key bytepos   end
charoffsets end   pairs charpos
else
for  int i   0  i < numregs  i
if  regs beg < 0
charoffsets beg   charoffsets end    1
continue
key bytepos   regs beg
charoffsets beg   pairs charpos
key bytepos   regs end
charoffsets end   pairs charpos
charoffsetupdated   true
private static final int match_busy   user2_f
// rb_match_busy
public final void use
flags    match_busy
public final boolean used
return  flags   match_busy     0
private void check
if  str    null  throw getruntime   newtypeerror
private void checklazyregexp
if  regexp    null  regexp   rubyregexp newregexp getruntime     bytelist pattern getuserobject    pattern
private rubyarray match_array ruby runtime  int start
check
if  regs    null
if  start    0  return runtime newemptyarray
if  begin     1
return runtime newarray runtime getnil
else
rubystring ss   str makeshared runtime  begin  end   begin
if  istaint    ss settaint true
return runtime newarray ss
else
rubyarray arr   runtime newarray regs numregs   start
for  int i start  i<regs numregs  i
if  regs beg     1
arr append runtime getnil
else
rubystring ss   str makeshared runtime  regs beg  regs end   regs beg
if  istaint    ss settaint true
arr append ss
return arr
public irubyobject group long n
return rubyregexp nth_match  int n  this
public irubyobject group int n
return rubyregexp nth_match n  this
@jrubymethod name
@override
public irubyobject inspect
if  str    null  return anytostring
ruby runtime   getruntime
rubystring result   runtime newstring
result cat  byte    cat  byte
result append getmetaclass   getrealclass   to_s
nameentrynames   new nameentry
if  pattern numberofnames   > 0
for  iterator<nameentry> i   pattern namedbackrefiterator    i hasnext
nameentry e   i next
for  int num   e getbackrefs    names   e
for  int i 0  i<names length  i
result cat  byte
if  i > 0
nameentry e   names
if  e    null
result cat e name  e namep  e nameend   e namep
else
result cat  byte      i
result cat  byte
irubyobject v   rubyregexp nth_match i  this
if  v isnil
result cat   getbytes
else
result append   rubystring  str  inspectcommon runtime is1_9
return result cat  byte
@jrubymethod name      compat   compatversion ruby1_9
public irubyobject regexp threadcontext context  block block
check
checklazyregexp
return regexp
@jrubymethod name      compat   compatversion ruby1_9
public irubyobject names threadcontext context  block block
check
checklazyregexp
return regexp names context
/** match_to_a
*
*/
@jrubymethod name
@override
public rubyarray to_a
return match_array getruntime    0
@jrubymethod name      required   1  rest   true
public irubyobject values_at irubyobject args
return to_a   values_at args
@jrubymethod name      frame   true  compat   compatversion ruby1_8
public irubyobject select threadcontext context  block block
ruby runtime   context getruntime
final rubyarray result
if  regs    null
if  begin < 0  return runtime newemptyarray
irubyobject s   str substr runtime  begin  end   begin
s settaint istaint
result   block yield context  s  istrue   ? runtime newarray s    runtime newemptyarray
else
result   runtime newarray
boolean taint   istaint
for  int i   0  i < regs numregs  i
irubyobject s   str substr runtime  regs beg  regs end   regs beg
if  taint  s settaint true
if  block yield context  s  istrue    result append s
return result
/** match_captures
*
*/
@jrubymethod name
public irubyobject captures threadcontext context
return match_array context getruntime    1
private int nametobackrefnumber rubystring str
bytelist value   str getbytelist
try
return pattern nametobackrefnumber value bytes  value begin  value begin   value realsize  regs
catch  joniexception je
throw getruntime   newindexerror je getmessage
final int backrefnumber irubyobject obj
check
if  obj instanceof rubysymbol
return nametobackrefnumber  rubystring   rubysymbol obj  id2name
else if  obj instanceof rubystring
return nametobackrefnumber  rubystring obj
else
return rubynumeric num2int obj
/**
* variable arity version for compatibility. not bound to a ruby method.
* @deprecated use the versions with zero, one, or two args.
*/
public irubyobject op_aref irubyobject args
switch  args length
case 1
return op_aref args
case 2
return op_aref args  args
default
arity raiseargumenterror getruntime    args length  1  2
return null     not reached
/** match_aref
*
*/
@jrubymethod name
public irubyobject op_aref irubyobject idx
if    idx instanceof rubyfixnum       rubyfixnum idx  getlongvalue   < 0
return   rubyarray to_a    aref idx
return rubyregexp nth_match rubynumeric fix2int idx   this
/** match_aref
*
*/
@jrubymethod name
public irubyobject op_aref irubyobject idx  irubyobject rest
if   rest isnil        idx instanceof rubyfixnum       rubyfixnum idx  getlongvalue   < 0
return   rubyarray to_a    aref idx  rest
return rubyregexp nth_match rubynumeric fix2int idx   this
/** match_aref
*
*/
@jrubymethod name      compat   compatversion ruby1_9
public irubyobject op_aref19 irubyobject idx
irubyobject result   op_arefcommon idx
return result    null ?   rubyarray to_a    aref19 idx    result
/** match_aref
*
*/
@jrubymethod name      compat   compatversion ruby1_9
public irubyobject op_aref19 irubyobject idx  irubyobject rest
irubyobject result
return  rest isnil       result   op_arefcommon idx      null ?   rubyarray to_a    aref19 idx  rest    result
private irubyobject op_arefcommon irubyobject idx
if  idx instanceof rubyfixnum
int num   rubynumeric fix2int idx
if  num >  0  return rubyregexp nth_match num  this
else
if  idx instanceof rubysymbol
return rubyregexp nth_match nametobackrefnumber  rubystring   rubysymbol idx  id2name     this
else if  idx instanceof rubystring
return rubyregexp nth_match nametobackrefnumber  rubystring idx   this
return null
/** match_size
*
*/
@jrubymethod name
public irubyobject size threadcontext context
check
ruby runtime   context getruntime
return regs    null ? rubyfixnum one runtime    rubyfixnum newfixnum runtime  regs numregs
/** match_begin
*
*/
@jrubymethod name      compat   compatversion ruby1_8
public irubyobject begin threadcontext context  irubyobject index
int i   rubynumeric num2int index
ruby runtime   context getruntime
int b   begincommon runtime  i
return b < 0 ? runtime getnil     rubyfixnum newfixnum runtime  b
@jrubymethod name      compat   compatversion ruby1_9
public irubyobject begin19 threadcontext context  irubyobject index
int i   backrefnumber index
ruby runtime   context getruntime
int b   begincommon runtime  i
if  b < 0  return runtime getnil
if   str singlebyteoptimizable
updatecharoffset
b   charoffsets beg
return rubyfixnum newfixnum runtime  b
private int begincommon ruby runtime  int i
check
if  i < 0     regs    null ? 1   regs numregs  <  i  throw runtime newindexerror     i
return regs    null ? begin   regs beg
/** match_end
*
*/
@jrubymethod name      compat   compatversion ruby1_8
public irubyobject end threadcontext context  irubyobject index
int i   rubynumeric num2int index
ruby runtime   context getruntime
int e   endcommon runtime  i
return e < 0 ? runtime getnil     rubyfixnum newfixnum runtime  e
@jrubymethod name      compat   compatversion ruby1_9
public irubyobject end19 threadcontext context  irubyobject index
int i   backrefnumber index
ruby runtime   context getruntime
int e   endcommon runtime  i
if  e < 0  return runtime getnil
if   str singlebyteoptimizable
updatecharoffset
e   charoffsets end
return rubyfixnum newfixnum runtime  e
private int endcommon ruby runtime  int i
check
if  i < 0     regs    null ? 1   regs numregs  <  i  throw runtime newindexerror     i
return regs    null ? end   regs end
/** match_offset
*
*/
@jrubymethod name      compat   compatversion ruby1_8
public irubyobject offset threadcontext context  irubyobject index
return offsetcommon context  rubynumeric num2int index   false
@jrubymethod name      compat   compatversion ruby1_9
public irubyobject offset19 threadcontext context  irubyobject index
return offsetcommon context  backrefnumber index   true
private irubyobject offsetcommon threadcontext context  int i  boolean is_19
check
ruby runtime   context getruntime
if  i < 0     regs    null ? 1   regs numregs  <  i  throw runtime newindexerror     i
int b  e
if  regs    null
b   begin
e   end
else
b   regs beg
e   regs end
if  b < 0  return runtime newarray runtime getnil    runtime getnil
if  is_19     str singlebyteoptimizable
updatecharoffset
b   charoffsets beg
e   charoffsets end
return runtime newarray rubyfixnum newfixnum runtime  b   rubyfixnum newfixnum runtime  e
/** match_pre_match
*
*/
@jrubymethod name
public irubyobject pre_match threadcontext context
check
if  begin     1  return context getruntime   getnil
return str makeshared context getruntime    0  begin  infectby this
/** match_post_match
*
*/
@jrubymethod name
public irubyobject post_match threadcontext context
check
if  begin     1  return context getruntime   getnil
return str makeshared context getruntime    end  str getbytelist   length     end  infectby this
/** match_to_s
*
*/
@jrubymethod name
@override
public irubyobject to_s
check
irubyobject ss   rubyregexp last_match this
if  ss isnil    ss   rubystring newemptystring getruntime
if  istaint    ss settaint true
return ss
/** match_string
*
*/
@jrubymethod name
public irubyobject string
check
return str    str is frozen
@jrubymethod name      required   1
@override
public irubyobject initialize_copy irubyobject original
if  this    original  return this
if    getmetaclass      original getmetaclass         mri also does a pointer comparison here
throw getruntime   newtypeerror
rubymatchdata origmatchdata    rubymatchdata original
str   origmatchdata str
regs   origmatchdata regs
return this