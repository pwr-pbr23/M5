/*
******************************************************************************
* begin license block *** version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public license version
* 1.0 (the "license"); you may not use this file except in compliance with the
* license. you may obtain a copy of the license at
* http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as is" basis,
* without warranty of any kind, either express or implied. see the license for
* the specific language governing rights and limitations under the license.
*
* copyright (c) 2006 charles oliver nutter <headius@headius.com>
* copytight (c) 2006-2007 thomas e enebo <enebo@acm.org>
* copyright (c) 2007 miguel covarrubias <mlcovarrubias@gmail.com>
* copyright (c) 2007 ola bini <ola@ologix.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"), or
* the gnu lesser general public license version 2.1 or later (the "lgpl"), in
* which case the provisions of the gpl or the lgpl are applicable instead of
* those above. if you wish to allow use of your version of this file only under
* the terms of either the gpl or the lgpl, and not to allow others to use your
* version of this file under the terms of the cpl, indicate your decision by
* deleting the provisions above and replace them with the notice and other
* provisions required by the gpl or the lgpl. if you do not delete the
* provisions above, a recipient may use your version of this file under the
* terms of any one of the cpl, the gpl or the lgpl. end license block ****
******************************************************************************/
package org jruby evaluator
import org jruby ruby
import org jruby rubyarray
import org jruby rubylocaljumperror
import org jruby rubymodule
import org jruby rubystring
import org jruby ast arraynode
import org jruby ast blockpassnode
import org jruby ast iternode
import org jruby ast multipleasgnnode
import org jruby ast node
import org jruby ast util argsutil
import org jruby common irubywarnings id
import org jruby exceptions jumpexception
import org jruby javasupport util runtimehelpers
import org jruby parser staticscope
import org jruby runtime block
import org jruby runtime dynamicscope
import org jruby runtime rubyevent
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
import org jruby runtime binding
import org jruby runtime frame
import org jruby runtime interpretedblock
import org jruby util typeconverter
public class astinterpreter
@deprecated
public static irubyobject eval ruby runtime  threadcontext context  node node  irubyobject self  block block
assert self    null
// todo: make into an assert once i get things like blockbodynodes to be implicit nil
if  node    null  return runtime getnil
try
return node interpret runtime  context  self  block
catch  stackoverflowerror soe
throw runtime newsystemstackerror    soe
/**
* evaluate the given string under the specified binding object. if the binding is not a proc or binding object
* (rubyproc or rubybinding) throw an appropriate type error.
* @param context todo
* @param evalstring the string containing the text to be evaluated
* @param binding the binding object under which to perform the evaluation
* @param file the filename to use when reporting errors during the evaluation
* @param linenumber is the line number to pretend we are starting from
* @return an irubyobject result from the evaluation
*/
public static irubyobject evalwithbinding threadcontext context  irubyobject src  binding binding
ruby runtime   src getruntime
dynamicscope evalscope   binding getdynamicscope   getevalscope
// fixme:  this determine module is in a strange location and should somehow be in block
evalscope getstaticscope   determinemodule
frame lastframe   context preevalwithbinding binding
try
// binding provided for scope, use it
irubyobject newself   binding getself
rubystring source   src converttostring
node node   runtime parseeval source getbytelist    binding getfile    evalscope  binding getline
return node interpret runtime  context  newself  binding getframe   getblock
catch  jumpexception breakjump bj
throw runtime newlocaljumperror rubylocaljumperror reason break   irubyobject bj getvalue
catch  jumpexception redojump rj
throw runtime newlocaljumperror rubylocaljumperror reason redo   irubyobject rj getvalue
catch  stackoverflowerror soe
throw runtime newsystemstackerror    soe
finally
context postevalwithbinding binding  lastframe
/**
* evaluate the given string.
* @param context todo
* @param evalstring the string containing the text to be evaluated
* @param file the filename to use when reporting errors during the evaluation
* @param linenumber that the eval supposedly starts from
* @return an irubyobject result from the evaluation
* @deprecated call with a rubystring now.
*/
public static irubyobject evalsimple threadcontext context  irubyobject self  irubyobject src  string file  int linenumber
rubystring source   src converttostring
return evalsimple context  self  source  file  linenumber
/**
* evaluate the given string.
* @param context todo
* @param evalstring the string containing the text to be evaluated
* @param file the filename to use when reporting errors during the evaluation
* @param linenumber that the eval supposedly starts from
* @return an irubyobject result from the evaluation
*/
public static irubyobject evalsimple threadcontext context  irubyobject self  rubystring src  string file  int linenumber
// this is ensured by the callers
assert file    null
ruby runtime   src getruntime
string savedfile   context getfile
int savedline   context getline
// no binding, just eval in "current" frame (caller's frame)
rubystring source   src converttostring
dynamicscope evalscope   context getcurrentscope   getevalscope
evalscope getstaticscope   determinemodule
try
node node   runtime parseeval source getbytelist    file  evalscope  linenumber
return node interpret runtime  context  self  block null_block
catch  jumpexception breakjump bj
throw runtime newlocaljumperror rubylocaljumperror reason break   irubyobject bj getvalue
catch  stackoverflowerror soe
throw runtime newsystemstackerror    soe
finally
// restore position
context setfile savedfile
context setline savedline
public static void calltracefunction ruby runtime  threadcontext context  rubyevent event
string name   context getframename
rubymodule type   context getframeklazz
runtime calleventhooks context  event  context getfile    context getline    name  type
public static irubyobject pollandreturn threadcontext context  irubyobject result
context pollthreadevents
return result
public static irubyobject multipleasgnarraynode ruby runtime  threadcontext context  multipleasgnnode ivisited  arraynode node  irubyobject self  block ablock
irubyobject array   new irubyobject
for  int i   0  i < node size    i
array   node get i  interpret runtime context  self  ablock
return assignmentvisitor multiassign runtime  context  self  ivisited  rubyarray newarraynocopylight runtime  array   false
/** evaluates the body in a class or module definition statement.
*
*/
public static irubyobject evalclassdefinitionbody ruby runtime  threadcontext context  staticscope scope
node bodynode  rubymodule type  irubyobject self  block block
context preclasseval scope  type
try
if  runtime haseventhooks
calltracefunction runtime  context  rubyevent class
if  bodynode    null  return runtime getnil
return bodynode interpret runtime  context  type  block
finally
if  runtime haseventhooks
calltracefunction runtime  context  rubyevent end
context postclasseval
public static string getargumentdefinition ruby runtime  threadcontext context  node node  string type  irubyobject self  block block
if  node    null  return type
if  node instanceof arraynode
arraynode list    arraynode  node
int size   list size
for  int i   0  i < size  i
if  list get i  definition runtime  context  self  block     null  return null
else if  node definition runtime  context  self  block     null
return null
return type
public static block getblock ruby runtime  threadcontext context  irubyobject self  block currentblock  node blocknode
if  blocknode    null  return block null_block
if  blocknode instanceof iternode
return getiternodeblock blocknode  context self
else if  blocknode instanceof blockpassnode
return getblockpassblock blocknode  runtime context  self  currentblock
assert false
return null
private static block getblockpassblock node blocknode  ruby runtime  threadcontext context  irubyobject self  block currentblock
node bodynode     blockpassnode  blocknode  getbodynode
irubyobject proc
if  bodynode    null
proc   runtime getnil
else
proc   bodynode interpret runtime  context  self  currentblock
return runtimehelpers getblockfromblockpassbody proc  currentblock
private static block getiternodeblock node blocknode  threadcontext context  irubyobject self
iternode iternode    iternode  blocknode
staticscope scope   iternode getscope
scope determinemodule
// create block for this iter node
// fixme: we shouldn't use the current scope if it's not actually from the same hierarchy of static scopes
return interpretedblock newinterpretedclosure context  iternode getblockbody    self
/* something like cvar_cbase() from eval.c, factored out for the benefit
* of all the classvar-related node evaluations */
public static rubymodule getclassvariablebase threadcontext context  ruby runtime
staticscope scope   context getcurrentscope   getstaticscope
rubymodule rubyclass   scope getmodule
if  rubyclass issingleton      rubyclass    runtime getdummy
scope   scope getpreviouscrefscope
rubyclass   scope getmodule
if  scope getpreviouscrefscope      null
runtime getwarnings   warn id cvar_from_toplevel_singleton_method
return rubyclass
@deprecated
public static string getdefinition ruby runtime  threadcontext context  node node  irubyobject self  block ablock
try
context setwithindefined true
return node definition runtime  context  self  ablock
finally
context setwithindefined false
public static irubyobject setupargs ruby runtime  threadcontext context  node node  irubyobject self  block ablock
if  node    null  return irubyobject null_array
if  node instanceof arraynode
arraynode argsarraynode    arraynode  node
string savedfile   context getfile
int savedline   context getline
int size   argsarraynode size
irubyobject argsarray   new irubyobject
for  int i   0  i < size  i
argsarray   argsarraynode get i  interpret runtime  context  self  ablock
context setfile savedfile
context setline savedline
return argsarray
return argsutil converttojavaarray node interpret runtime context  self  ablock
@deprecated
public static irubyobject avaluesplat ruby runtime  irubyobject value
if    value instanceof rubyarray       rubyarray  value  length   getlongvalue      0
return runtime getnil
rubyarray array    rubyarray  value
return array getlength      1 ? array first irubyobject null_array    array
@deprecated
public static rubyarray arrayvalue ruby runtime  irubyobject value
irubyobject tmp   value checkarraytype
if  tmp isnil
// object#to_a is obsolete.  we match ruby's hack until to_a goes away.  then we can
// remove this hack too.
if  value getmetaclass   searchmethod    getimplementationclass      runtime getkernel
value   value callmethod runtime getcurrentcontext
if    value instanceof rubyarray   throw runtime newtypeerror
return  rubyarray value
else
return runtime newarray value
return  rubyarray tmp
@deprecated
public static irubyobject arytoary ruby runtime  irubyobject value
if  value instanceof rubyarray  return value
if  value respondsto
return typeconverter converttotype value  runtime getarray       false
return runtime newarray value
@deprecated
public static rubyarray splatvalue ruby runtime  irubyobject value
if  value isnil
return runtime newarray value
return arrayvalue runtime  value
// used by the compiler to simplify arg processing
@deprecated
public static rubyarray splatvalue irubyobject value  ruby runtime
return splatvalue runtime  value
@deprecated
public static irubyobject avaluesplat irubyobject value  ruby runtime
return avaluesplat runtime  value
@deprecated
public static irubyobject arytoary irubyobject value  ruby runtime
return arytoary runtime  value