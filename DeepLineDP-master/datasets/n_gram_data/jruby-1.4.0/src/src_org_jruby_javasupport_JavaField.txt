/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2002-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004-2005 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
* copyright (c) 2004 david corbin <dcorbin@users.sourceforge.net>
* copyright (c) 2005 charles o nutter <headius@headius.com>
* copyright (c) 2007 william n dortch <bill.dortch@gmail.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby javasupport
import java lang reflect accessibleobject
import java lang reflect field
import java lang reflect modifier
import org jruby ruby
import org jruby rubyboolean
import org jruby rubyclass
import org jruby rubymodule
import org jruby rubystring
import org jruby anno jrubyclass
import org jruby anno jrubymethod
import org jruby runtime objectallocator
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
@jrubyclass name
public class javafield extends javaaccessibleobject
private field field
public object getvalue
return field
public static rubyclass createjavafieldclass ruby runtime  rubymodule javamodule
// todo: not_allocatable_allocator is probably ok here, since we don't intend for people to monkey with
// this type and it can't be marshalled. confirm. jruby-415
rubyclass result   javamodule defineclassunder    runtime getobject    objectallocator not_allocatable_allocator
javaaccessibleobject registerrubymethods runtime  result
result defineannotatedmethods javafield class
return result
public javafield ruby runtime  field field
super runtime  runtime getjavasupport   getjavafieldclass
this field   field
public boolean equals object other
return other instanceof javafield
this field      javafield other  field
public int hashcode
return field hashcode
@jrubymethod
public rubystring value_type
return getruntime   newstring field gettype   getname
@jrubymethod name
public irubyobject op_equal irubyobject other
if    other instanceof javafield
return getruntime   getfalse
return getruntime   newboolean field equals   javafield  other  field
@jrubymethod name
public rubyboolean public_p
return getruntime   newboolean modifier ispublic field getmodifiers
@jrubymethod name
public rubyboolean static_p
return getruntime   newboolean modifier isstatic field getmodifiers
@jrubymethod name
public rubyboolean enum_constant_p
return getruntime   newboolean field isenumconstant
@jrubymethod
public rubystring to_generic_string
return getruntime   newstring field togenericstring
@jrubymethod name
public irubyobject field_type
return javaclass get getruntime    field gettype
@jrubymethod
public irubyobject value threadcontext context  irubyobject object
ruby runtime   context getruntime
object javaobject   javautil unwrapjavavalue runtime  object
try
return javautil convertjavatousablerubyobject runtime  field get javaobject
catch  illegalaccessexception iae
throw runtime newtypeerror
@jrubymethod
public irubyobject set_value irubyobject object  irubyobject value
object javaobject    javautil unwrapjavavalue getruntime    object      object
irubyobject val   value
if val datagetstruct   instanceof javaobject
val    irubyobject val datagetstruct
try
object convertedvalue   val tojava field gettype
field set javaobject  convertedvalue
catch  illegalaccessexception iae
throw getruntime   newtypeerror
iae getmessage
catch  illegalargumentexception iae
throw getruntime   newtypeerror
field gettype   getname
val getclass   getname
return val
@jrubymethod name
public rubyboolean final_p
return getruntime   newboolean modifier isfinal field getmodifiers
@jrubymethod
public javaobject static_value
try
// todo: only setaccessible to account for pattern found by
// accessing constants included from a non-public interface.
// (aka java.util.zip.zipconstants being implemented by many
// classes)
if   ruby issecurityrestricted
field setaccessible true
return javaobject wrap getruntime    field get null
catch  illegalaccessexception iae
throw getruntime   newtypeerror     iae getmessage
@jrubymethod
public javaobject set_static_value irubyobject value
if     value instanceof javaobject
throw getruntime   newtypeerror     value
try
object convertedvalue   value tojava field gettype
// todo: only setaccessible to account for pattern found by
// accessing constants included from a non-public interface.
// (aka java.util.zip.zipconstants being implemented by many
// classes)
// todo: not sure we need this at all, since we only expose
// public fields.
//field.setaccessible(true);
field set null  convertedvalue
catch  illegalaccessexception iae
throw getruntime   newtypeerror
iae getmessage
catch  illegalargumentexception iae
throw getruntime   newtypeerror
field gettype   getname
javaobject  value  getvalue   getclass   getname
return  javaobject  value
@jrubymethod
public rubystring name
return getruntime   newstring field getname
protected accessibleobject accessibleobject
return field