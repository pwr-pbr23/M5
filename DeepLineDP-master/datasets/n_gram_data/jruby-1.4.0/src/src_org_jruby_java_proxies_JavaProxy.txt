package org jruby java proxies
import java lang reflect field
import java lang reflect method
import java lang reflect modifier
import java util arrays
import java util hashmap
import java util iterator
import java util map
import org jruby ruby
import org jruby rubyarray
import org jruby rubyclass
import org jruby rubyhash
import org jruby rubyhash visitor
import org jruby rubymethod
import org jruby rubymodule
import org jruby rubyobject
import org jruby anno jrubymethod
import org jruby exceptions raiseexception
import org jruby internal runtime methods javamethod javamethodnblock
import org jruby java addons arrayjavaaddons
import org jruby java invokers instancefieldgetter
import org jruby java invokers instancefieldsetter
import org jruby java invokers instancemethodinvoker
import org jruby java invokers methodinvoker
import org jruby java invokers staticmethodinvoker
import org jruby javasupport java
import org jruby javasupport javaclass
import org jruby javasupport javamethod
import org jruby javasupport javaobject
import org jruby javasupport javautil
import org jruby javasupport util runtimehelpers
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime objectallocator
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
import org jruby util codegenutils
public class javaproxy extends rubyobject
protected final rubyclass variableaccessor objectaccessor
private object object
public javaproxy ruby runtime  rubyclass klazz
super runtime  klazz
objectaccessor   klazz getvariableaccessorforwrite
public object datagetstruct
return objectaccessor get this
public void datawrapstruct object object
objectaccessor set this  object
this object     javaobject object  getvalue
public object getobject
// fixme: added this because marshal_spec seemed to reconstitute objects without calling datawrapstruct
// this resulted in object being null after unmarshalling...
if  object    null  object     javaobject datagetstruct    getvalue
return object
private javaobject getjavaobject
return  javaobject datagetstruct
public static rubyclass createjavaproxy threadcontext context
ruby runtime   context getruntime
rubyclass javaproxy   runtime defineclass    runtime getobject    new objectallocator
public irubyobject allocate ruby runtime  rubyclass klazz
return new javaproxy runtime  klazz
rubyclass singleton   javaproxy getsingletonclass
singleton addreadwriteattribute context
javaproxy defineannotatedmethods javaproxy class
javaproxy includemodule runtime fastgetmodule
return javaproxy
@jrubymethod frame   true  meta   true
public static irubyobject inherited threadcontext context  irubyobject recv  irubyobject subclass
irubyobject subjavaclass   runtimehelpers invoke context  subclass
if  subjavaclass isnil
subjavaclass   runtimehelpers invoke context  recv
runtimehelpers invoke context  subclass     subjavaclass
return runtimehelpers invokesuper context  recv  subclass  block null_block
@jrubymethod meta   true
public static irubyobject singleton_class irubyobject recv
return   rubyclass recv  getsingletonclass
@jrubymethod name      meta   true  rest   true
public static irubyobject op_aref threadcontext context  irubyobject recv  irubyobject args
irubyobject javaclass   runtimehelpers invoke context  recv
if  args length > 0
// construct new array proxy (arrayjavaproxy)
irubyobject newargs   new irubyobject
newargs   javaclass
system arraycopy args  0  newargs  1  args length
return context getruntime   fastgetclass    newinstance context  newargs  block null_block
else
return java get_proxy_class javaclass  runtimehelpers invoke context  javaclass
private static class<?> getjavaclass threadcontext context  rubymodule module
try
irubyobject jclass   runtimehelpers invoke context  module
return   jclass instanceof javaclass  ? null     javaclass  jclass  javaclass
catch  exception e    return null
/**
* create a name/newname map of fields to be exposed as methods.
*/
private static map<string  string> getfieldlistfromargs irubyobject args
final map<string  string> map   new hashmap<string  string>
// get map of all fields we want to define.
for  int i   0  i < args length  i
if  args instanceof rubyhash
rubyhash  args  visitall new visitor
@override
public void visit irubyobject key  irubyobject value
map put key asstring   tostring    value asstring   tostring
else
string value   args asstring   tostring
map put value  value
return map
// look through all mappings to find a match entry for this field
private static void installfield threadcontext context  map<string  string> fieldmap
field field  rubymodule module  boolean asreader  boolean aswriter
boolean isfinal   modifier isfinal field getmodifiers
for  iterator<map entry<string string>> iter   fieldmap entryset   iterator    iter hasnext
map entry<string string> entry   iter next
string key   entry getkey
if  key equals field getname
if  ruby issecurityrestricted       modifier ispublic field getmodifiers
throw context getruntime   newsecurityerror     field getname
string asname   entry getvalue
if  asreader  module addmethod asname  new instancefieldgetter key  module  field
if  aswriter
if  isfinal  throw context getruntime   newsecurityerror     field getname
module addmethod asname      new instancefieldsetter key  module  field
iter remove
break
private static void findfields threadcontext context  rubymodule topmodule
irubyobject args  boolean asreader  boolean aswriter
map<string  string> fieldmap   getfieldlistfromargs args
for  rubymodule module   topmodule  module    null  module   module getsuperclass
class<?> javaclass   getjavaclass context  module
// hit a non-java proxy class (included modules can be a cause of this...skip)
if  javaclass    null  continue
field fields   javaclass getdeclaredfields javaclass
for  int j   0  j < fields length  j
installfield context  fieldmap  fields  module  asreader  aswriter
// we could not find all of them print out first one (we could print them all?)
if   fieldmap isempty
throw javaclass undefinedfielderror context getruntime
topmodule getname    fieldmap keyset   iterator   next
@jrubymethod meta   true  rest   true
public static irubyobject field_accessor threadcontext context  irubyobject recv  irubyobject args
findfields context   rubymodule  recv  args  true  true
return context getruntime   getnil
@jrubymethod meta   true  rest   true
public static irubyobject field_reader threadcontext context  irubyobject recv  irubyobject args
findfields context   rubymodule  recv  args  true  false
return context getruntime   getnil
@jrubymethod meta   true  rest   true
public static irubyobject field_writer threadcontext context  irubyobject recv  irubyobject args
findfields context   rubymodule  recv  args  false  true
return context getruntime   getnil
@jrubymethod meta   true
public static irubyobject to_java_object irubyobject recv
return recv getinstancevariables   fastgetinstancevariable
@jrubymethod name
public irubyobject equal_p threadcontext context  irubyobject other
ruby runtime   context getruntime
if  other instanceof javaproxy
boolean equal   getobject        javaproxy other  getobject
return runtime newboolean equal
return runtime getfalse
@jrubymethod backtrace   true
public irubyobject java_send threadcontext context  irubyobject rubyname
string name   rubyname asjavastring
ruby runtime   context getruntime
javamethod method   new javamethod runtime  getmethod name
return method invokedirect getobject
@jrubymethod backtrace   true
public irubyobject java_send threadcontext context  irubyobject rubyname  irubyobject argtypes
throw context getruntime   newargumenterror 2  3
@jrubymethod backtrace   true
public irubyobject java_send threadcontext context  irubyobject rubyname  irubyobject argtypes  irubyobject arg0
string name   rubyname asjavastring
rubyarray argtypesary   argtypes converttoarray
ruby runtime   context getruntime
if  argtypesary size      1
throw javamethod newargsizemismatcherror runtime  argtypesary size    1
class argtypeclass    class argtypesary eltinternal 0  tojava class class
javamethod method   new javamethod runtime  getmethod name  argtypeclass
return method invokedirect getobject    arg0 tojava argtypeclass
@jrubymethod required   4  rest   true  backtrace   true
public irubyobject java_send threadcontext context  irubyobject args
ruby runtime   context getruntime
string name   args asjavastring
rubyarray argtypesary   args converttoarray
int argslen   args length   2
if  argtypesary size      argslen
throw javamethod newargsizemismatcherror runtime  argtypesary size    argslen
class argtypesclasses    class argtypesary toarray new class
object argsary   new object
for  int i   0  i < argslen  i
argsary   args tojava argtypesclasses
javamethod method   new javamethod runtime  getmethod name  argtypesclasses
return method invokedirect getobject    argsary
@jrubymethod backtrace   true
public irubyobject java_method threadcontext context  irubyobject rubyname
string name   rubyname asjavastring
return getrubymethod name
@jrubymethod backtrace   true
public irubyobject java_method threadcontext context  irubyobject rubyname  irubyobject argtypes
string name   rubyname asjavastring
rubyarray argtypesary   argtypes converttoarray
class argtypesclasses    class argtypesary toarray new class
return getrubymethod name  argtypesclasses
private method getmethod string name  class    argtypes
class jclass   getjavaobject   getjavaclass
try
return jclass getmethod name  argtypes
catch  nosuchmethodexception nsme
throw javamethod newmethodnotfounderror getruntime    jclass  name   codegenutils prettyparams argtypes   name
private methodinvoker getmethodinvoker method method
if  modifier isstatic method getmodifiers
return new staticmethodinvoker metaclass getmetaclass    method
else
return new instancemethodinvoker metaclass  method
private rubymethod getrubymethod string name  class    argtypes
method jmethod   getmethod name  argtypes
if  modifier isstatic jmethod getmodifiers
return rubymethod newmethod metaclass getsingletonclass    codegenutils prettyparams argtypes   metaclass getsingletonclass    name  getmethodinvoker jmethod   getmetaclass
else
return rubymethod newmethod metaclass  codegenutils prettyparams argtypes   metaclass  name  getmethodinvoker jmethod   this
@override
public object tojava class type
getruntime   getjavasupport   getobjectproxycache   put getobject    this
return getobject
public object unwrap
return getobject