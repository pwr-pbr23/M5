package org jruby demo
import java awt color
import java awt point
import java awt eventqueue
import java awt event keyevent
import java awt event keylistener
import java io ioexception
import java io inputstream
import java io outputstream
import java io unsupportedencodingexception
import java util iterator
import java util linkedlist
import java util list
import javax swing defaultlistcellrenderer
import javax swing jcombobox
import javax swing plaf basic basiccombopopup
import javax swing text abstractdocument
import javax swing text attributeset
import javax swing text badlocationexception
import javax swing text documentfilter
import javax swing text jtextcomponent
import javax swing text mutableattributeset
import javax swing text simpleattributeset
import javax swing text styleconstants
import org jruby ruby
import org jruby rubyio
import org jruby rubymodule
import org jruby rubystring
import org jruby ext readline
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime builtin irubyobject
import org jruby runtime callback callback
import org jruby util join
public class textareareadline implements keylistener
private static final string empty_line
private jtextcomponent area
private int startpos
private string currentline
public volatile mutableattributeset promptstyle
public volatile mutableattributeset inputstyle
public volatile mutableattributeset outputstyle
public volatile mutableattributeset resultstyle
private jcombobox completecombo
private basiccombopopup completepopup
private int start
private int end
private final inputstream inputstream   new input
private final outputstream outputstream   new output
private static class inputbuffer
public final byte bytes
public int offset   0
public inputbuffer byte bytes
this bytes   bytes
public enum channel
available
read
buffer
empty
line
get_line
shutdown
finished
private static class readrequest
public final byte b
public final int off
public final int len
public readrequest byte b  int off  int len
this b   b
this off   off
this len   len
public int perform join join  inputbuffer buffer
final int available   buffer bytes length   buffer offset
int len   this len
if   len > available
len   available
if   len    available
join send channel empty  null
else
buffer offset    len
join send channel buffer  buffer
system arraycopy buffer bytes  buffer offset  this b  this off  len
return len
private static final join spec input_spec   new join spec
addreaction new join fastreaction channel shutdown  channel buffer
public void react join join  object args
join send channel finished  null
addreaction new join fastreaction channel shutdown  channel empty
public void react join join  object args
join send channel finished  null
addreaction new join fastreaction channel shutdown  channel finished
public void react join join  object args
join send channel finished  null
addreaction new join fastreaction channel finished  channel line
public void react join join  object args
join send channel finished  null
addreaction new join syncreaction channel available  channel buffer
public object react join join  object args
inputbuffer buffer    inputbuffer args
join send channel buffer  buffer
return buffer bytes length   buffer offset
addreaction new join syncreaction channel available  channel empty
public object react join join  object args
join send channel empty  null
return 0
addreaction new join syncreaction channel available  channel finished
public object react join join  object args
join send channel finished  null
return 0
addreaction new join syncreaction channel read  channel buffer
public object react join join  object args
return   readrequest args  perform join   inputbuffer args
addreaction new join syncreaction channel read  channel empty  channel line
public object react join join  object args
final readrequest request    readrequest args
final string line    string args
if  line length      0
byte bytes
try
bytes   line getbytes
catch  unsupportedencodingexception e
bytes   line getbytes
return request perform join  new inputbuffer bytes
else
return  1
addreaction new join syncreaction channel read  channel finished
public object react join join  object args
join send channel finished  null
return  1
addreaction new join syncreaction channel get_line  channel line
public object react join join  object args
return args
addreaction new join syncreaction channel get_line  channel finished
public object react join join  object args
join send channel finished  null
return empty_line
private final join inputjoin   input_spec createjoin
public textareareadline jtextcomponent area
this area  null
public textareareadline jtextcomponent area  final string message
this area   area
inputjoin send channel empty  null
area addkeylistener this
// no editing before startpos
if  area getdocument   instanceof abstractdocument
abstractdocument  area getdocument    setdocumentfilter
new documentfilter
public void insertstring documentfilter filterbypass fb  int offset  string string  attributeset attr  throws badlocationexception
if  offset >  startpos  super insertstring fb  offset  string  attr
public void remove documentfilter filterbypass fb  int offset  int length  throws badlocationexception
if  offset >  startpos  super remove fb  offset  length
public void replace documentfilter filterbypass fb  int offset  int length  string text  attributeset attrs  throws badlocationexception
if  offset >  startpos  super replace fb  offset  length  text  attrs
promptstyle   new simpleattributeset
styleconstants setforeground promptstyle  new color 0xa4  0x00  0x00
inputstyle   new simpleattributeset
styleconstants setforeground inputstyle  new color 0x20  0x4a  0x87
outputstyle   new simpleattributeset
styleconstants setforeground outputstyle  color darkgray
resultstyle   new simpleattributeset
styleconstants setitalic resultstyle  true
styleconstants setforeground resultstyle  new color 0x20  0x4a  0x87
completecombo   new jcombobox
completecombo setrenderer new defaultlistcellrenderer        no silly ticks
completepopup   new basiccombopopup completecombo
if  message    null
final mutableattributeset messagestyle   new simpleattributeset
styleconstants setbackground messagestyle  area getforeground
styleconstants setforeground messagestyle  area getbackground
append message  messagestyle
startpos   area getdocument   getlength
public inputstream getinputstream
return inputstream
public outputstream getoutputstream
return outputstream
private ruby runtime
/**
* hooks this <code>textareareadline</code> instance into the
* runtime, redefining the <code>readline</code> module so that
* it uses this object. this method does not redefine the standard
* input-output streams. if you need that, use
* {@link #hookintoruntimewithstreams(ruby)}.
*
* @param runtime
*                the runtime.
* @see #hookintoruntimewithstreams(ruby)
*/
public void hookintoruntime final ruby runtime
this runtime   runtime
/* hack in to replace usual readline with this */
runtime getloadservice   require
rubymodule readlinem   runtime fastgetmodule
readlinem definemodulefunction    new callback
public irubyobject execute irubyobject recv  irubyobject args  block block
string line   readline args tostring
if  line    null
return rubystring newunicodestring runtime  line
else
return runtime getnil
public arity getarity     return arity twoarguments
/**
* hooks this <code>textareareadline</code> instance into the
* runtime, redefining the <code>readline</code> module so that
* it uses this object. this method also redefines the standard
* input-output streams accordingly.
*
* @param runtime
*                the runtime.
* @see #hookintoruntime(ruby)
*/
public void hookintoruntimewithstreams final ruby runtime
hookintoruntime runtime
rubyio in   new rubyio runtime  getinputstream
runtime getglobalvariables   set    in
rubyio out   new rubyio runtime  getoutputstream
runtime getglobalvariables   set    out
runtime getglobalvariables   set    out
protected void completeaction keyevent event
if  readline getcompletor readline getholder runtime      null  return
event consume
if  completepopup isvisible    return
list candidates   new linkedlist
string bufstr   null
try
bufstr   area gettext startpos  area getcaretposition     startpos
catch  badlocationexception e
return
int cursor   area getcaretposition     startpos
int position   readline getcompletor readline getholder runtime   complete bufstr  cursor  candidates
// no candidates? fail.
if  candidates isempty
return
if  candidates size      1
replacetext startpos   position  area getcaretposition     string  candidates get 0
return
start   startpos   position
end   area getcaretposition
point pos   area getcaret   getmagiccaretposition
// bit risky if someone changes completor, but useful for method calls
int cutoff   bufstr substring position  lastindexof      1
start    cutoff
if  candidates size   < 10
completepopup getlist   setvisiblerowcount candidates size
else
completepopup getlist   setvisiblerowcount 10
completecombo removeallitems
for  iterator i   candidates iterator    i hasnext
string item    string  i next
if  cutoff    0  item   item substring cutoff
completecombo additem item
completepopup show area  pos x  pos y   area getfontmetrics area getfont    getheight
protected void backaction keyevent event
if  area getcaretposition   <  startpos
event consume
protected void upaction keyevent event
event consume
if  completepopup isvisible
int selected   completecombo getselectedindex     1
if  selected < 0  return
completecombo setselectedindex selected
return
if   readline gethistory readline getholder runtime   next       at end
currentline   getline
else
readline gethistory readline getholder runtime   previous       undo check
if   readline gethistory readline getholder runtime   previous    return
string oldline   readline gethistory readline getholder runtime   current   trim
replacetext startpos  area getdocument   getlength    oldline
protected void downaction keyevent event
event consume
if  completepopup isvisible
int selected   completecombo getselectedindex     1
if  selected    completecombo getitemcount    return
completecombo setselectedindex selected
return
if   readline gethistory readline getholder runtime   next    return
string oldline
if   readline gethistory readline getholder runtime   next       at end
oldline   currentline
else
readline gethistory readline getholder runtime   previous       undo check
oldline   readline gethistory readline getholder runtime   current   trim
replacetext startpos  area getdocument   getlength    oldline
protected void replacetext int start  int end  string replacement
try
area getdocument   remove start  end   start
area getdocument   insertstring start  replacement  inputstyle
catch  badlocationexception e
e printstacktrace
protected string getline
try
return area gettext startpos  area getdocument   getlength     startpos
catch  badlocationexception e
e printstacktrace
return null
protected void enteraction keyevent event
event consume
if  completepopup isvisible
if  completecombo getselecteditem      null
replacetext start  end   string  completecombo getselecteditem
completepopup setvisible false
return
append    null
string line   getline
startpos   area getdocument   getlength
inputjoin send channel line  line
public string readline final string prompt
if  eventqueue isdispatchthread
throw runtime newthreaderror
eventqueue invokelater new runnable
public void run
append prompt trim    promptstyle
append    inputstyle      hack to get right style for input
area setcaretposition area getdocument   getlength
startpos   area getdocument   getlength
readline gethistory readline getholder runtime   movetoend
final string line    string inputjoin call channel get_line  null
if  line length   > 0
return line trim
else
return null
public void keypressed keyevent event
int code   event getkeycode
switch  code
case keyevent vk_tab  completeaction event   break
case keyevent vk_left
case keyevent vk_back_space
backaction event   break
case keyevent vk_up  upaction event   break
case keyevent vk_down  downaction event   break
case keyevent vk_enter  enteraction event   break
case keyevent vk_home  event consume    area setcaretposition startpos   break
case keyevent vk_d
if     event getmodifiersex     keyevent ctrl_down_mask      0
event consume
inputjoin send channel line  empty_line
break
if  completepopup isvisible
code     keyevent vk_tab
code    keyevent vk_up
code    keyevent vk_down
completepopup setvisible false
public void keyreleased keyevent arg0
public void keytyped keyevent arg0
public void shutdown
inputjoin send channel shutdown  null
/** output methods **/
protected void append string toappend  attributeset style
try
area getdocument   insertstring area getdocument   getlength    toappend  style
catch  badlocationexception e
private void writelineunsafe final string line
if  line startswith     append line  resultstyle
else append line  outputstyle
startpos   area getdocument   getlength
private void writeline final string line
if  eventqueue isdispatchthread
writelineunsafe line
else
eventqueue invokelater new runnable
public void run
writelineunsafe line
private class input extends inputstream
private volatile boolean closed   false
@override
public int available   throws ioexception
if  closed
throw new ioexception
return  integer inputjoin call channel available  null
@override
public int read   throws ioexception
byte b   new byte
if   read b  0  1     1
return b
else
return  1
@override
public int read byte b  int off  int len  throws ioexception
if  closed
throw new ioexception
if  eventqueue isdispatchthread
throw new ioexception
if  b    null
throw new nullpointerexception
if  off < 0    len < 0    off len > b length
throw new indexoutofboundsexception
if  len    0
return 0
final readrequest request   new readrequest b  off  len
return  integer inputjoin call channel read  request
@override
public void close
closed   true
inputjoin send channel shutdown  null
private class output extends outputstream
@override
public void write int b  throws ioexception
writeline     b
@override
public void write byte b  int off  int len
try
writeline new string b  off  len
catch  unsupportedencodingexception ex
writeline new string b  off  len
@override
public void write byte b
try
writeline new string b
catch  unsupportedencodingexception ex
writeline new string b