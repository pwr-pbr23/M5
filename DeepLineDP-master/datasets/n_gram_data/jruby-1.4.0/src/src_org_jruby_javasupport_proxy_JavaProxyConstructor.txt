/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2006 kresten krab thorup <krab@gnu.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby javasupport proxy
import java lang reflect constructor
import java lang reflect invocationtargetexception
import org jruby ruby
import org jruby rubyarray
import org jruby rubyclass
import org jruby rubyfixnum
import org jruby rubymodule
import org jruby rubyobject
import org jruby rubyproc
import org jruby anno jrubymethod
import org jruby exceptions raiseexception
import org jruby internal runtime methods dynamicmethod
import org jruby javasupport javaobject
import org jruby javasupport javautil
import org jruby javasupport parametertypes
import org jruby javasupport util runtimehelpers
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime objectallocator
import org jruby runtime builtin irubyobject
public class javaproxyconstructor extends javaproxyreflectionobject implements parametertypes
private final constructor<?> proxyconstructor
private final class<?> apparentparametertypes
private final javaproxyclass declaringproxyclass
javaproxyconstructor ruby runtime  javaproxyclass pclass
constructor<?> constructor
super runtime  runtime getjavasupport   getjavamodule   fastgetclass
this declaringproxyclass   pclass
this proxyconstructor   constructor
class<?> parametertypes   constructor getparametertypes
int len   parametertypes length   1
this apparentparametertypes   new class<?>
system arraycopy parametertypes  0  apparentparametertypes  0  len
public class<?> getparametertypes
return apparentparametertypes
public class<?> getexceptiontypes
return proxyconstructor getexceptiontypes
public boolean isvarargs
return proxyconstructor isvarargs
@jrubymethod name
public javaproxyclass getdeclaringclass
return declaringproxyclass
public object newinstance object args  javaproxyinvocationhandler handler
throws illegalargumentexception  instantiationexception
illegalaccessexception  invocationtargetexception
if  args length    apparentparametertypes length
throw new illegalargumentexception
object realargs   new object
system arraycopy args  0  realargs  0  args length
realargs   handler
return proxyconstructor newinstance realargs
public static rubyclass createjavaproxyconstructorclass ruby runtime
rubymodule javaproxymodule
rubyclass result   javaproxymodule defineclassunder
runtime getobject    objectallocator not_allocatable_allocator
javaproxyreflectionobject registerrubymethods runtime  result
result defineannotatedmethods javaproxyconstructor class
return result
@jrubymethod
public rubyfixnum arity
return getruntime   newfixnum getparametertypes   length
public boolean equals object other
return other instanceof javaproxyconstructor
this proxyconstructor      javaproxyconstructor other  proxyconstructor
public int hashcode
return proxyconstructor hashcode
protected string nameoninspection
return getdeclaringclass   nameoninspection
public irubyobject inspect
stringbuilder result   new stringbuilder
result append nameoninspection
class<?> parametertypes   getparametertypes
for  int i   0  i < parametertypes length  i
result append parametertypes getname
if  i < parametertypes length   1
result append
result append
return getruntime   newstring result tostring
@jrubymethod
public rubyarray argument_types
return buildrubyarray getparametertypes
@jrubymethod frame   true  rest   true
public rubyobject new_instance2 irubyobject args  block unusedblock
arity checkargumentcount getruntime    args  2  2
final irubyobject self   args
final ruby runtime   self getruntime
rubyarray constructor_args    rubyarray  args
class<?> parametertypes   getparametertypes
int count    int  constructor_args length   getlongvalue
object converted   new object
for  int i   0  i < count  i
// todo: call ruby method
irubyobject ith   constructor_args aref getruntime   newfixnum i
converted   ith tojava parametertypes
javaproxyinvocationhandler handler   new javaproxyinvocationhandler
public irubyobject getorig
return self
public object invoke object proxy  javaproxymethod m  object nargs  throws throwable
string name   m getname
dynamicmethod method   self getmetaclass   searchmethod name
int v   method getarity   getvalue
irubyobject newargs   new irubyobject
for  int i   nargs length    i >  0
newargs   javautil convertjavatousablerubyobject runtime  nargs
if  v < 0    v     newargs length
return runtimehelpers invoke runtime getcurrentcontext    self  name  newargs  tojava m getreturntype
else
rubyclass superclass   self getmetaclass   getsuperclass
return runtimehelpers invokeas runtime getcurrentcontext    superclass  self  name  newargs  block null_block  tojava m getreturntype
try
return javaobject wrap getruntime    newinstance converted  handler
catch  exception e
raiseexception ex   getruntime   newargumenterror
e getmessage
ex initcause e
throw ex
public javaobject newinstance final irubyobject self  object args
final ruby runtime   self getruntime
javaproxyinvocationhandler handler   new javaproxyinvocationhandler
public irubyobject getorig
return self
public object invoke object proxy  javaproxymethod m  object nargs  throws throwable
string name   m getname
dynamicmethod method   self getmetaclass   searchmethod name
int v   method getarity   getvalue
irubyobject newargs   new irubyobject
for  int i   nargs length    i >  0
newargs   javautil convertjavatousablerubyobject runtime  nargs
if  v < 0    v     newargs length
return runtimehelpers invoke runtime getcurrentcontext    self  name  newargs  tojava m getreturntype
else
rubyclass superclass   self getmetaclass   getsuperclass
return runtimehelpers invokeas runtime getcurrentcontext    superclass  self  name  newargs  block null_block  tojava m getreturntype
try
return javaobject wrap getruntime    newinstance args  handler
catch  throwable t
while  t getcause      null
t   t getcause
raiseexception ex   getruntime   newargumenterror
t getmessage
ex initcause t
throw ex
@jrubymethod required   1  optional   1  frame   true
public rubyobject new_instance irubyobject args  block block
int size   arity checkargumentcount getruntime    args  1  2    1
final rubyproc proc
// is there a supplied proc argument or do we assume a block was
// supplied
if  args instanceof rubyproc
proc    rubyproc  args
else
proc   getruntime   newproc block type proc block
size
rubyarray constructor_args    rubyarray  args
class<?> parametertypes   getparametertypes
int count    int  constructor_args length   getlongvalue
object converted   new object
for  int i   0  i < count  i
// todo: call ruby method
irubyobject ith   constructor_args aref getruntime   newfixnum i
converted   ith tojava parametertypes
final irubyobject recv   this
javaproxyinvocationhandler handler   new javaproxyinvocationhandler
public irubyobject getorig
return null
public object invoke object proxy  javaproxymethod method
object nargs  throws throwable
int length   nargs    null ? 0   nargs length
irubyobject rubyargs   new irubyobject
rubyargs   javaobject wrap recv getruntime    proxy
rubyargs   method
for  int i   0  i < length  i
rubyargs   javautil convertjavatoruby getruntime
nargs
irubyobject call_result   proc call getruntime   getcurrentcontext    rubyargs
object converted_result   call_result tojava method getreturntype
return converted_result
object result
try
result   newinstance converted  handler
catch  exception e
raiseexception ex   getruntime   newargumenterror
e getmessage
ex initcause e
throw ex
return javaobject wrap getruntime    result