package org jruby runtime callsite
import org jruby ruby
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
import org jruby rubyclass
import org jruby runtime visibility
public class respondtocallsite extends normalcachingcallsite
private volatile string laststring
private volatile cacheentry respondentry   cacheentry null_cache
private volatile irubyobject respondsto
public respondtocallsite
super
@override
public irubyobject call threadcontext context  irubyobject caller  irubyobject self  irubyobject name
rubyclass klass   self getmetaclass
if  isdefaultrespondto klass  context
string newstring   name asjavastring
if  iscacheinvalid newstring  klass
recacherespondsto newstring  klass  true  context
return respondsto
else
return super call context  caller  self  name
@override
public irubyobject call threadcontext context  irubyobject caller  irubyobject self  irubyobject name  irubyobject bool
rubyclass klass   self getmetaclass
if  isdefaultrespondto klass  context
string newstring   name asjavastring
if  iscacheinvalid newstring  klass
recacherespondsto newstring  klass   bool istrue    context
return respondsto
else
return super call context  caller  self  name  bool
// todo: this and recacherespondsto needed to be synchronized for jruby-3466,
// but this degraded performance nearly 2x. it's still faster than mri, but
// a reanalysis of this code may show a faster way to ensure we're caching
// safely.
private synchronized boolean iscacheinvalid string newstring  rubyclass klass
return laststring    newstring     respondentry typeok klass
private boolean isdefaultrespondto rubyclass klass  threadcontext context
return cache typeok klass     cache method    context getruntime   getrespondtomethod
private synchronized void recacherespondsto string newstring  rubyclass klass  boolean checkvisibility  threadcontext context
ruby runtime   context getruntime
laststring   newstring
respondentry   klass searchwithcache newstring
if   respondentry method isundefined
respondsto   checkvisibilityandcache respondentry  checkvisibility  runtime
else
respondsto   runtime getfalse
private static irubyobject checkvisibilityandcache cacheentry respondentry  boolean checkvisibility  ruby runtime
if   checkvisibility    respondentry method getvisibility      visibility private
return runtime gettrue
else
return runtime getfalse