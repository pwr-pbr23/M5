/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 ola bini <ola@ologix.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby ext socket
import com kenai constantine platform socketlevel
import com kenai constantine platform socketoption
import static com kenai constantine platform sock
import static com kenai constantine platform ipproto
import static com kenai constantine platform tcp
import java io eofexception
import java io ioexception
import java nio channels channel
import java nio channels socketchannel
import java nio channels serversocketchannel
import java nio channels datagramchannel
import java net socket
import java net serversocket
import java net datagramsocket
import java net socketaddress
import java net inetsocketaddress
import org jruby compatversion
import org jruby util io openfile
import org jruby ruby
import org jruby rubyboolean
import org jruby rubyclass
import org jruby rubynumeric
import org jruby rubyio
import org jruby rubystring
import org jruby anno jrubyclass
import org jruby anno jrubymethod
import org jruby runtime objectallocator
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
import org jruby util io baddescriptorexception
import org jruby util io channelstream
import org jruby util io modeflags
import org jruby util io channeldescriptor
/**
* @author <a href="mailto:ola.bini@ki.se">ola bini</a>
*/
@jrubyclass name    parent
public class rubybasicsocket extends rubyio
private static objectallocator basicsocket_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new rubybasicsocket runtime  klass
static void createbasicsocket ruby runtime
rubyclass rb_cbasicsocket   runtime defineclass    runtime getio    basicsocket_allocator
rb_cbasicsocket defineannotatedmethods rubybasicsocket class
// by default we always reverse lookup unless do_not_reverse_lookup set.
private boolean donotreverselookup   false
public rubybasicsocket ruby runtime  rubyclass type
super runtime  type
protected void initsocket ruby runtime  channeldescriptor descriptor
// make sure descriptor is registered
registerdescriptor descriptor
// continue with normal initialization
openfile   new openfile
try
openfile setmainstream channelstream fdopen runtime  descriptor  new modeflags modeflags rdonly
openfile setpipestream channelstream fdopen runtime  descriptor  new modeflags modeflags wronly
openfile getpipestream   setsync true
catch  org jruby util io invalidvalueexception ex
throw runtime newerrnoeinvalerror
openfile setmode openfile readwrite   openfile sync
@override
public irubyobject close_write threadcontext context
if  context getruntime   getsafelevel   >  4    istaint
throw context getruntime   newsecurityerror
if  openfile getpipestream      null    openfile isreadable
throw context getruntime   newioerror
if   openfile isreadable
close
else
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if  socketchannel instanceof socketchannel
socketchannel instanceof datagramchannel
try
assocket   shutdownoutput
catch  ioexception e
throw context getruntime   newioerror e getmessage
openfile setpipestream null
openfile setmode openfile getmode     ~openfile writable
return context getruntime   getnil
@override
public irubyobject close_read threadcontext context
ruby runtime   context getruntime
if  runtime getsafelevel   >  4    istaint
throw runtime newsecurityerror
if   openfile iswritable
close
else
if openfile getpipestream      null
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if  socketchannel instanceof socketchannel
socketchannel instanceof datagramchannel
try
assocket   shutdowninput
catch  ioexception e
throw runtime newioerror e getmessage
openfile setmainstream openfile getpipestream
openfile setpipestream null
openfile setmode openfile getmode     ~openfile readable
return runtime getnil
@jrubymethod name      rest   true
public irubyobject write_send threadcontext context  irubyobject args
return syswrite context  args
@deprecated
public irubyobject recv irubyobject args
return recv getruntime   getcurrentcontext    args
@jrubymethod rest   true
public irubyobject recv threadcontext context  irubyobject args
openfile openfile   getopenfilechecked
try
return rubystring newstring context getruntime    openfile getmainstream   read rubynumeric fix2int args
catch  baddescriptorexception e
throw context getruntime   newerrnoebadferror
catch  eofexception e
// recv returns nil on eof
return context getruntime   getnil
catch  ioexception e
// all errors to sysread should be systemcallerrors, but on a closed stream
// ruby returns an ioerror.  java throws same exception for all errors so
// we resort to this hack...
if    equals e getmessage
throw context getruntime   newioerror e getmessage
throw context getruntime   newsystemcallerror e getmessage
protected inetsocketaddress getlocalsocket
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if  socketchannel instanceof socketchannel
return  inetsocketaddress   socketchannel socketchannel  socket   getlocalsocketaddress
else if  socketchannel instanceof serversocketchannel
return  inetsocketaddress   serversocketchannel  socketchannel  socket   getlocalsocketaddress
else if  socketchannel instanceof datagramchannel
return  inetsocketaddress   datagramchannel  socketchannel  socket   getlocalsocketaddress
else
return null
protected inetsocketaddress getremotesocket
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
return  inetsocketaddress   socketchannel socketchannel  socket   getremotesocketaddress
else
return null
private socket assocket
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if   socketchannel instanceof socketchannel
throw getruntime   newerrnoenoprotoopterror
return   socketchannel socketchannel  socket
private serversocket asserversocket
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if   socketchannel instanceof serversocketchannel
throw getruntime   newerrnoenoprotoopterror
return   serversocketchannel socketchannel  socket
private datagramsocket asdatagramsocket
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if   socketchannel instanceof datagramchannel
throw getruntime   newerrnoenoprotoopterror
return   datagramchannel socketchannel  socket
private irubyobject getbroadcast ruby runtime  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return truefalse runtime   socketchannel instanceof datagramchannel  ? asdatagramsocket   getbroadcast     false
private void setbroadcast irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof datagramchannel
asdatagramsocket   setbroadcast asboolean val
private void setkeepalive irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
assocket   setkeepalive asboolean val
private void settcpnodelay irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
assocket   settcpnodelay asboolean val
private void setreuseaddr irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof serversocketchannel
asserversocket   setreuseaddress asboolean val
private void setrcvbuf irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
assocket   setreceivebuffersize asnumber val
else if socketchannel instanceof serversocketchannel
asserversocket   setreceivebuffersize asnumber val
else if socketchannel instanceof datagramchannel
asdatagramsocket   setreceivebuffersize asnumber val
private void settimeout irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
assocket   setsotimeout asnumber val
else if socketchannel instanceof serversocketchannel
asserversocket   setsotimeout asnumber val
else if socketchannel instanceof datagramchannel
asdatagramsocket   setsotimeout asnumber val
private void setsndbuf irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
assocket   setsendbuffersize asnumber val
else if socketchannel instanceof datagramchannel
asdatagramsocket   setsendbuffersize asnumber val
private void setlinger irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
if val instanceof rubyboolean     val istrue
assocket   setsolinger false  0
else
int num   asnumber val
if num     1
assocket   setsolinger false  0
else
assocket   setsolinger true  num
private void setoobinline irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
assocket   setoobinline asboolean val
private int asnumber irubyobject val
if val instanceof rubynumeric
return rubynumeric fix2int val
else
return stringasnumber val
private int stringasnumber irubyobject val
string str   val converttostring   tostring
int res   0
res     str charat 0 <<24
res     str charat 1 <<16
res     str charat 2 <<8
res     str charat 3
return res
protected boolean asboolean irubyobject val
if val instanceof rubystring
return stringasnumber val     0
else if val instanceof rubynumeric
return rubynumeric fix2int val     0
else
return val istrue
private irubyobject getkeepalive ruby runtime  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return truefalse runtime
socketchannel instanceof socketchannel  ? assocket   getkeepalive     false
private irubyobject getlinger ruby runtime  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return number runtime
socketchannel instanceof socketchannel  ? assocket   getsolinger     0
private irubyobject getoobinline ruby runtime  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return truefalse runtime
socketchannel instanceof socketchannel  ? assocket   getoobinline     false
private irubyobject getrcvbuf ruby runtime  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return number runtime
socketchannel instanceof socketchannel  ? assocket   getreceivebuffersize
socketchannel instanceof serversocketchannel  ? asserversocket   getreceivebuffersize
asdatagramsocket   getreceivebuffersize
private irubyobject getsndbuf ruby runtime  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return number runtime
socketchannel instanceof socketchannel  ? assocket   getsendbuffersize
socketchannel instanceof datagramchannel  ? asdatagramsocket   getsendbuffersize     0
private irubyobject getreuseaddr ruby runtime  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return truefalse runtime
socketchannel instanceof serversocketchannel  ? asserversocket   getreuseaddress     false
private irubyobject gettimeout ruby runtime  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return number runtime
socketchannel instanceof socketchannel  ? assocket   getsotimeout
socketchannel instanceof serversocketchannel  ? asserversocket   getsotimeout
socketchannel instanceof datagramchannel  ? asdatagramsocket   getsotimeout     0
protected int getsotypedefault
return 0
private int getchannelsotype channel channel
if  channel instanceof socketchannel    channel instanceof serversocketchannel
return sock_stream value
else if  channel instanceof datagramchannel
return sock_dgram value
else
return getsotypedefault
private irubyobject getsotype ruby runtime  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return number runtime  getchannelsotype socketchannel
private irubyobject truefalse ruby runtime  boolean val
return runtime newstring  val ?
private irubyobject number ruby runtime  long s
stringbuilder result   new stringbuilder
result append  char    s>>24   0xff   append  char    s>>16   0xff
result append  char    s >> 8    0xff   append  char   s   0xff
return runtime newstring result tostring
@deprecated
public irubyobject getsockopt irubyobject lev  irubyobject optname
return getsockopt getruntime   getcurrentcontext    lev  optname
@jrubymethod
public irubyobject getsockopt threadcontext context  irubyobject lev  irubyobject optname
int level   rubynumeric fix2int lev
int opt   rubynumeric fix2int optname
ruby runtime   context getruntime
try
switch socketlevel valueof level
case sol_ip
case sol_socket
case sol_tcp
case sol_udp
switch socketoption valueof opt
case so_broadcast
return getbroadcast runtime
case so_keepalive
return getkeepalive runtime
case so_linger
return getlinger runtime
case so_oobinline
return getoobinline runtime
case so_rcvbuf
return getrcvbuf runtime
case so_reuseaddr
return getreuseaddr runtime
case so_sndbuf
return getsndbuf runtime
case so_rcvtimeo
case so_sndtimeo
return gettimeout runtime
case so_type
return getsotype runtime
// can't support the rest with java
case so_rcvlowat
return number runtime  1
case so_sndlowat
return number runtime  2048
case so_debug
case so_error
case so_dontroute
case so_timestamp
return truefalse runtime  false
default
throw context getruntime   newerrnoenoprotoopterror
default
throw context getruntime   newerrnoenoprotoopterror
catch ioexception e
throw context getruntime   newerrnoenoprotoopterror
@deprecated
public irubyobject setsockopt irubyobject lev  irubyobject optname  irubyobject val
return setsockopt getruntime   getcurrentcontext    lev  optname  val
@jrubymethod
public irubyobject setsockopt threadcontext context  irubyobject lev  irubyobject optname  irubyobject val
int level   rubynumeric fix2int lev
int opt   rubynumeric fix2int optname
try
switch socketlevel valueof level
case sol_ip
case sol_socket
case sol_tcp
case sol_udp
switch socketoption valueof opt
case so_broadcast
setbroadcast val
break
case so_keepalive
setkeepalive val
break
case so_linger
setlinger val
break
case so_oobinline
setoobinline val
break
case so_rcvbuf
setrcvbuf val
break
case so_reuseaddr
setreuseaddr val
break
case so_sndbuf
setsndbuf val
break
case so_rcvtimeo
case so_sndtimeo
settimeout val
break
// can't support the rest with java
case so_type
case so_rcvlowat
case so_sndlowat
case so_debug
case so_error
case so_dontroute
case so_timestamp
break
default
if  ipproto_tcp value      level    tcp_nodelay value      opt
settcpnodelay val
else
throw context getruntime   newerrnoenoprotoopterror
break
default
if  ipproto_tcp value      level    tcp_nodelay value      opt
settcpnodelay val
else
throw context getruntime   newerrnoenoprotoopterror
catch ioexception e
throw context getruntime   newerrnoenoprotoopterror
return context getruntime   newfixnum 0
@deprecated
public irubyobject getsockname
return getsockname getruntime   getcurrentcontext
@jrubymethod name
public irubyobject getsockname threadcontext context
socketaddress sock   getlocalsocket
if null    sock
throw context getruntime   newioerror
return context getruntime   newstring sock tostring
@deprecated
public irubyobject getpeername
return getpeername getruntime   getcurrentcontext
@jrubymethod name
public irubyobject getpeername threadcontext context
socketaddress sock   getremotesocket
if null    sock
throw context getruntime   newioerror
return context getruntime   newstring sock tostring
@jrubymethod optional   1
public irubyobject shutdown threadcontext context  irubyobject args
if  context getruntime   getsafelevel   >  4    tainted_p context  isfalse
throw context getruntime   newsecurityerror
int how   2
if  args length > 0
how   rubynumeric fix2int args
if  how < 0    2 < how
throw context getruntime   newargumenterror
if  how    2
throw context getruntime   newnotimplementederror
return close
protected boolean donotreverselookup threadcontext context
return context getruntime   isdonotreverselookupenabled      donotreverselookup
@jrubymethod compat   compatversion ruby1_9
public irubyobject do_not_reverse_lookup19 threadcontext context
return context getruntime   newboolean donotreverselookup
@jrubymethod name      compat   compatversion ruby1_9
public irubyobject set_do_not_reverse_lookup19 threadcontext context  irubyobject flag
donotreverselookup   flag istrue
return do_not_reverse_lookup19 context
@jrubymethod meta   true
public static irubyobject do_not_reverse_lookup irubyobject recv
return recv getruntime   isdonotreverselookupenabled   ? recv getruntime   gettrue     recv getruntime   getfalse
@jrubymethod name      meta   true
public static irubyobject set_do_not_reverse_lookup irubyobject recv  irubyobject flag
recv getruntime   setdonotreverselookupenabled flag istrue
return recv getruntime   isdonotreverselookupenabled   ? recv getruntime   gettrue     recv getruntime   getfalse
rubybasicsocket