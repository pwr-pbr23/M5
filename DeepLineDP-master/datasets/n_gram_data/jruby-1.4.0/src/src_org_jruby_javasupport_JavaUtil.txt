/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2001 alan moore <alan_moore@gmx.net>
* copyright (c) 2001-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2002 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2002 don schwartz <schwardo@users.sourceforge.net>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
* copyright (c) 2006 kresten krab thorup <krab@gnu.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby javasupport
import java io unsupportedencodingexception
import java lang reflect method
import java math bigdecimal
import java math biginteger
import java util hashmap
import java util linkedhashset
import java util list
import java util map
import java util set
import java util regex matcher
import java util regex pattern
import org jruby ruby
import org jruby rubybigdecimal
import org jruby rubybignum
import org jruby rubyboolean
import org jruby rubyclass
import org jruby rubyfixnum
import org jruby rubyfloat
import org jruby rubymodule
import org jruby rubynil
import org jruby rubynumeric
import org jruby rubyobject
import org jruby rubyproc
import org jruby rubystring
import org jruby rubytime
import org jruby internal runtime methods callconfiguration
import org jruby internal runtime methods dynamicmethod
import org jruby javasupport proxy internaljavaproxy
import org jruby javasupport util runtimehelpers
import org jruby runtime block
import org jruby runtime classindex
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
import org jruby util bytelist
import org jruby util typeconverter
public class javautil
public static irubyobject convertjavaarraytoruby ruby runtime  object objects
if  objects    null  return irubyobject null_array
irubyobject rubyobjects   new irubyobject
for  int i   0  i < objects length  i
rubyobjects   convertjavatousablerubyobject runtime  objects
return rubyobjects
public static javaconverter getjavaconverter class clazz
javaconverter converter   java_converters get clazz
if  converter    null
converter   java_default_converter
return converter
public static irubyobject convertjavatoruby ruby runtime  object object
return convertjavatousablerubyobject runtime  object
public static irubyobject convertjavatoruby ruby runtime  object object  class javaclass
return convertjavatousablerubyobjectwithconverter runtime  object  getjavaconverter javaclass
/**
* returns a usable rubyobject; for types that are not converted to ruby native
* types, a java proxy will be returned.
*
* @param runtime
* @param object
* @return corresponding ruby type, or a functional java proxy
*/
public static irubyobject convertjavatousablerubyobject ruby runtime  object object
irubyobject result   trysimpleconversions runtime  object
if  result    null  return result
javaconverter converter   getjavaconverter object getclass
if  converter    null    converter    java_default_converter
return java getinstance runtime  object
return converter convert runtime  object
public static irubyobject convertjavatousablerubyobjectwithconverter ruby runtime  object object  javaconverter converter
irubyobject result   trysimpleconversions runtime  object
if  result    null  return result
if  converter    null    converter    java_default_converter
return java getinstance runtime  object
return converter convert runtime  object
public static irubyobject convertjavaarrayelementtoruby ruby runtime  javaconverter converter  object array  int i
if  converter    null    converter    java_default_converter
return convertjavatousablerubyobject runtime    object array
return converter get runtime  array  i
public static class<?> primitivetowrapper class<?> type
if  type isprimitive
if  type    boolean class
return boolean class
else if  type    byte class
return byte class
else if  type    short class
return short class
else if  type    char class
return character class
else if  type    int class
return integer class
else if  type    long class
return long class
else if  type    float class
return float class
else if  type    double class
return double class
else if  type    void class
return void class
return type
public static boolean isducktypeconvertable class providedargumenttype  class parametertype
return
parametertype isinterface
parametertype isassignablefrom providedargumenttype
rubyobject class isassignablefrom providedargumenttype
public static object convertproctointerface threadcontext context  rubyobject rubyobject  class target
ruby runtime   context getruntime
irubyobject javainterfacemodule   java get_interface_module runtime  javaclass get runtime  target
if     rubymodule  javainterfacemodule  isinstance rubyobject
rubyobject extend new irubyobject javainterfacemodule
if  rubyobject instanceof rubyproc
// proc implementing an interface, pull in the catch-all code that lets the proc get invoked
// no matter what method is called on the interface
rubyclass singletonclass   rubyobject getsingletonclass
singletonclass addmethod    new dynamicmethod singletonclass  visibility public  callconfiguration framenonescopenone
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
if    self instanceof rubyproc
throw context getruntime   newtypeerror
rubyproc proc    rubyproc self
irubyobject newargs
if  args length    1
newargs   irubyobject null_array
else
newargs   new irubyobject
system arraycopy args  1  newargs  0  args length   1
return proc call context  newargs
@override
public dynamicmethod dup
return this
javaobject jo    javaobject  runtimehelpers invoke context  rubyobject
return jo getvalue
public static object coercejavaobjecttotype threadcontext context  object javaobject  class target
if  javaobject    null    isducktypeconvertable javaobject getclass    target
rubyobject rubyobject    rubyobject  javaobject
if   rubyobject respondsto
return convertproctointerface context  rubyobject  target
// can't be converted any more, return it
return javaobject
else
return javaobject
public static numericconverter getnumericconverter class target
numericconverter converter   numeric_converters get target
if  converter    null
return numeric_to_other
return converter
// fixme: this doesn't actually support anything but string
public static object coercestringtotype rubystring string  class target
try
bytelist bytes   string getbytelist
// 1.9 support for encodings
if  string getruntime   is1_9
return new string bytes unsafebytes    bytes begin    bytes length    string getencoding   tostring
return new string bytes unsafebytes    bytes begin    bytes length
catch  unsupportedencodingexception uee
return string tostring
public static object coerceothertotype threadcontext context  irubyobject arg  class target
ruby runtime   context getruntime
if  isducktypeconvertable arg getclass    target
rubyobject rubyobject    rubyobject  arg
if   rubyobject respondsto
return convertproctointerface context  rubyobject  target
else if  arg respondsto
object javaobject   arg callmethod context
if  javaobject instanceof javaobject
runtime getjavasupport   getobjectproxycache   put   javaobject  javaobject  getvalue    arg
javaobject     javaobject javaobject  getvalue
return javaobject
// it's either as converted as we can make it via above logic or it's
// not one of the types we convert, so just pass it out as-is without wrapping
return arg
public static boolean isjavaobject irubyobject candidate
return candidate datagetstruct   instanceof javaobject
public static object unwrapjavaobject irubyobject object
return   javaobject object datagetstruct    getvalue
public static javaobject unwrapjavaobject ruby runtime  irubyobject convertee  string errormessage
irubyobject obj   convertee
if   obj instanceof javaobject
if  obj datagetstruct      null     obj datagetstruct   instanceof javaobject
obj    javaobject obj datagetstruct
else
throw runtime newtypeerror errormessage
return  javaobject obj
public static object unwrapjavavalue ruby runtime  irubyobject obj  string errormessage
if obj instanceof javamethod
return   javamethod obj  getvalue
else if obj instanceof javaconstructor
return   javaconstructor obj  getvalue
else if obj instanceof javafield
return   javafield obj  getvalue
else if obj instanceof javaobject
return   javaobject obj  getvalue
else if obj datagetstruct      null     obj datagetstruct   instanceof irubyobject
return unwrapjavavalue runtime    irubyobject obj datagetstruct     errormessage
else
throw runtime newtypeerror errormessage
private static final pattern java_property_chopper   pattern compile
public static string getjavapropertyname string beanmethodname
matcher m   java_property_chopper matcher beanmethodname
if   m find    return null
string javapropertyname   m group 2  tolowercase     m group 3
return javapropertyname
private static final pattern camel_case_splitter   pattern compile
public static string getrubycasedname string javacasedname
matcher m   camel_case_splitter matcher javacasedname
return m replaceall    tolowercase
private static final pattern ruby_case_splitter   pattern compile
public static string getjavacasedname string javacasedname
matcher m   ruby_case_splitter matcher javacasedname
stringbuffer newname   new stringbuffer
if   m find
return null
m reset
while  m find
m appendreplacement newname  m group 1    character touppercase m group 2  charat 0
m appendtail newname
return newname tostring
/**
* given a simple java method name and the java method objects that represent
* all its overloads, add to the given nameset all possible ruby names that would
* be valid.
*
* @param simplename
* @param nameset
* @param methods
*/
public static set<string> getrubynamesforjavaname string javaname  list<method> methods
string javapropertyname   javautil getjavapropertyname javaname
string rubyname   javautil getrubycasedname javaname
set<string> nameset   new linkedhashset<string>
nameset add javaname
nameset add rubyname
string rubypropertyname   null
for  method method  methods
class<?> argtypes   method getparametertypes
class<?> resulttype   method getreturntype
int argcount   argtypes length
// add property name aliases
if  javapropertyname    null
if  rubyname startswith
rubypropertyname   rubyname substring 4
if  argcount    0                                      getfoo       > foo
argcount    1    argtypes    int class          getfoo int   > foo int
nameset add javapropertyname
nameset add rubypropertyname
if  resulttype    boolean class                    getfoobar    > foobar?  foo_bar?
nameset add javapropertyname
nameset add rubypropertyname
else if  rubyname startswith
rubypropertyname   rubyname substring 4
if  argcount    1    resulttype    void class          setfoo foo   > foo  foo
nameset add javapropertyname
nameset add rubypropertyname
else if  rubyname startswith
rubypropertyname   rubyname substring 3
if  resulttype    boolean class                        isfoo    > foo  isfoo     > foo
nameset add javapropertyname
nameset add rubypropertyname
nameset add javapropertyname
nameset add rubypropertyname
else
// if not a property, but is boolean add ?-postfixed aliases.
if  resulttype    boolean class
// is_something?, contains_thing?
nameset add javaname
nameset add rubyname
return nameset
public static abstract class javaconverter
private final class type
public javaconverter class type   this type   type
public abstract irubyobject convert ruby runtime  object object
public abstract irubyobject get ruby runtime  object array  int i
public string tostring    return type getname
public interface numericconverter
public object coerce rubynumeric numeric  class target
private static irubyobject trysimpleconversions ruby runtime  object object
if  object    null
return runtime getnil
if  object instanceof irubyobject
return  irubyobject  object
if  object instanceof internaljavaproxy
internaljavaproxy internaljavaproxy    internaljavaproxy  object
irubyobject orig   internaljavaproxy ___getinvocationhandler   getorig
if  orig    null
return orig
return null
private static final javaconverter java_default_converter   new javaconverter object class
public irubyobject convert ruby runtime  object object
irubyobject result   trysimpleconversions runtime  object
if  result    null  return result
return javaobject wrap runtime  object
public irubyobject get ruby runtime  object array  int i
return convert runtime    object array
private static final javaconverter java_boolean_converter   new javaconverter boolean class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyboolean newboolean runtime    boolean object  booleanvalue
public irubyobject get ruby runtime  object array  int i
return convert runtime    boolean array
private static final javaconverter java_float_converter   new javaconverter float class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfloat newfloat runtime    float object  doublevalue
public irubyobject get ruby runtime  object array  int i
return convert runtime    float array
private static final javaconverter java_double_converter   new javaconverter double class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfloat newfloat runtime    double object  doublevalue
public irubyobject get ruby runtime  object array  int i
return convert runtime    double array
private static final javaconverter java_char_converter   new javaconverter character class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfixnum newfixnum runtime    character object  charvalue
public irubyobject get ruby runtime  object array  int i
return convert runtime    character array
private static final javaconverter java_byte_converter   new javaconverter byte class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfixnum newfixnum runtime    byte object  bytevalue
public irubyobject get ruby runtime  object array  int i
return convert runtime    byte array
private static final javaconverter java_short_converter   new javaconverter short class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfixnum newfixnum runtime    short object  shortvalue
public irubyobject get ruby runtime  object array  int i
return convert runtime    short array
private static final javaconverter java_int_converter   new javaconverter integer class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfixnum newfixnum runtime    integer object  intvalue
public irubyobject get ruby runtime  object array  int i
return convert runtime    integer array
private static final javaconverter java_long_converter   new javaconverter long class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfixnum newfixnum runtime    long object  longvalue
public irubyobject get ruby runtime  object array  int i
return convert runtime    long array
private static final javaconverter java_booleanprim_converter   new javaconverter boolean class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyboolean newboolean runtime    boolean object  booleanvalue
public irubyobject get ruby runtime  object array  int i
return rubyboolean newboolean runtime    boolean array
private static final javaconverter java_floatprim_converter   new javaconverter float class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfloat newfloat runtime    float object  doublevalue
public irubyobject get ruby runtime  object array  int i
return rubyfloat newfloat runtime    float array
private static final javaconverter java_doubleprim_converter   new javaconverter double class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfloat newfloat runtime    double object  doublevalue
public irubyobject get ruby runtime  object array  int i
return rubyfloat newfloat runtime    double array
private static final javaconverter java_charprim_converter   new javaconverter char class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfixnum newfixnum runtime    character object  charvalue
public irubyobject get ruby runtime  object array  int i
return rubyfixnum newfixnum runtime    char array
private static final javaconverter java_byteprim_converter   new javaconverter byte class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfixnum newfixnum runtime    byte object  bytevalue
public irubyobject get ruby runtime  object array  int i
return rubyfixnum newfixnum runtime    byte array
private static final javaconverter java_shortprim_converter   new javaconverter short class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfixnum newfixnum runtime    short object  shortvalue
public irubyobject get ruby runtime  object array  int i
return rubyfixnum newfixnum runtime    short array
private static final javaconverter java_intprim_converter   new javaconverter int class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfixnum newfixnum runtime    integer object  intvalue
public irubyobject get ruby runtime  object array  int i
return rubyfixnum newfixnum runtime    int array
private static final javaconverter java_longprim_converter   new javaconverter long class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubyfixnum newfixnum runtime    long object  longvalue
public irubyobject get ruby runtime  object array  int i
return rubyfixnum newfixnum runtime    long array
private static final javaconverter java_string_converter   new javaconverter string class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubystring newunicodestring runtime   string object
public irubyobject get ruby runtime  object array  int i
return convert runtime    string array
private static final javaconverter bytelist_converter   new javaconverter bytelist class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubystring newstring runtime   bytelist object
public irubyobject get ruby runtime  object array  int i
return convert runtime    bytelist array
private static final javaconverter java_biginteger_converter   new javaconverter biginteger class
public irubyobject convert ruby runtime  object object
if  object    null  return runtime getnil
return rubybignum newbignum runtime   biginteger object
public irubyobject get ruby runtime  object array  int i
return convert runtime    biginteger array
private static final map<class javaconverter> java_converters
new hashmap<class javaconverter>
static
java_converters put byte class  java_byte_converter
java_converters put byte type  java_byteprim_converter
java_converters put short class  java_short_converter
java_converters put short type  java_shortprim_converter
java_converters put character class  java_char_converter
java_converters put character type  java_charprim_converter
java_converters put integer class  java_int_converter
java_converters put integer type  java_intprim_converter
java_converters put long class  java_long_converter
java_converters put long type  java_longprim_converter
java_converters put float class  java_float_converter
java_converters put float type  java_floatprim_converter
java_converters put double class  java_double_converter
java_converters put double type  java_doubleprim_converter
java_converters put boolean class  java_boolean_converter
java_converters put boolean type  java_booleanprim_converter
java_converters put string class  java_string_converter
java_converters put bytelist class  bytelist_converter
java_converters put biginteger class  java_biginteger_converter
private static numericconverter numeric_to_byte   new numericconverter
public object coerce rubynumeric numeric  class target
long value   numeric getlongvalue
if  islongbyteable value
return byte valueof  byte value
throw numeric getruntime   newrangeerror     numeric
private static numericconverter numeric_to_short   new numericconverter
public object coerce rubynumeric numeric  class target
long value   numeric getlongvalue
if  islongshortable value
return short valueof  short value
throw numeric getruntime   newrangeerror     numeric
private static numericconverter numeric_to_character   new numericconverter
public object coerce rubynumeric numeric  class target
long value   numeric getlongvalue
if  islongcharable value
return character valueof  char value
throw numeric getruntime   newrangeerror     numeric
private static numericconverter numeric_to_integer   new numericconverter
public object coerce rubynumeric numeric  class target
long value   numeric getlongvalue
if  islongintable value
return integer valueof  int value
throw numeric getruntime   newrangeerror     numeric
private static numericconverter numeric_to_long   new numericconverter
public object coerce rubynumeric numeric  class target
return long valueof numeric getlongvalue
private static numericconverter numeric_to_float   new numericconverter
public object coerce rubynumeric numeric  class target
double value   numeric getdoublevalue
// many cases are ok to convert to float; if not one of these, error
if  isdoublefloatable value
return float valueof  float value
else
throw numeric getruntime   newtypeerror     numeric
private static numericconverter numeric_to_double   new numericconverter
public object coerce rubynumeric numeric  class target
return double valueof numeric getdoublevalue
private static numericconverter numeric_to_biginteger   new numericconverter
public object coerce rubynumeric numeric  class target
return numeric getbigintegervalue
private static numericconverter numeric_to_object   new numericconverter
public object coerce rubynumeric numeric  class target
// for object, default to natural wrapper type
if  numeric instanceof rubyfixnum
long value   numeric getlongvalue
return long valueof value
else if  numeric instanceof rubyfloat
double value   numeric getdoublevalue
return double valueof value
else if  numeric instanceof rubybignum
return   rubybignum numeric  getvalue
else if  numeric instanceof rubybigdecimal
return   rubybigdecimal numeric  getvalue
else
return numeric_to_other coerce numeric  target
private static numericconverter numeric_to_other   new numericconverter
public object coerce rubynumeric numeric  class target
throw numeric getruntime   newtypeerror     numeric getmetaclass         target
private static numericconverter numeric_to_void   new numericconverter
public object coerce rubynumeric numeric  class target
return null
private static boolean isdoublefloatable double value
return
value    0 0       0 0 is ok
value >  float min_value    value <  float max_value       float range
value >   float max_value    value <   float min_value       inverted float range?
double isnan value        nan
value    double positive_infinity        infinity
value    double negative_infinity      infinity
private static boolean islongbyteable long value
return value >  byte min_value    value <  0xff
private static boolean islongshortable long value
return value >  short min_value    value <  0xffff
private static boolean islongcharable long value
return value >  character min_value    value <  character max_value
private static boolean islongintable long value
return value >  integer min_value    value <  0xffffffffl
private static map<class  numericconverter> numeric_converters   new hashmap<class  numericconverter>
static
numeric_converters put byte type  numeric_to_byte
numeric_converters put byte class  numeric_to_byte
numeric_converters put short type  numeric_to_short
numeric_converters put short class  numeric_to_short
numeric_converters put character type  numeric_to_character
numeric_converters put character class  numeric_to_character
numeric_converters put integer type  numeric_to_integer
numeric_converters put integer class  numeric_to_integer
numeric_converters put long type  numeric_to_long
numeric_converters put long class  numeric_to_long
numeric_converters put float type  numeric_to_float
numeric_converters put float class  numeric_to_float
numeric_converters put double type  numeric_to_double
numeric_converters put double class  numeric_to_double
numeric_converters put biginteger class  numeric_to_biginteger
numeric_converters put object class  numeric_to_object
numeric_converters put void class  numeric_to_void
@deprecated
public static object convertrubytojava irubyobject rubyobject
return convertrubytojava rubyobject  object class
@deprecated
public static object convertrubytojava irubyobject rubyobject  class javaclass
if  javaclass    void class    rubyobject    null    rubyobject isnil
return null
threadcontext context   rubyobject getruntime   getcurrentcontext
irubyobject origobject   rubyobject
if  rubyobject datagetstruct   instanceof javaobject
rubyobject    javaobject  rubyobject datagetstruct
if rubyobject    null
throw new runtimeexception     origobject gettype   getname
else if  rubyobject respondsto
rubyobject   rubyobject callmethod context
if rubyobject    null
throw new runtimeexception     origobject gettype   getname
else if  rubyobject respondsto
rubyobject   rubyobject callmethod context
if rubyobject    null
throw new runtimeexception     origobject gettype   getname
if  rubyobject instanceof javaobject
object value      javaobject  rubyobject  getvalue
return convertargument rubyobject getruntime    value  value getclass
else if  javaclass    object class    javaclass    null
/* the java method doesn't care what class it is, but we need to
know what to convert it to, so we use the object's own class.
if that doesn't help, we use string to force a call to the
object's "to_s" method. */
javaclass   rubyobject getjavaclass
if  javaclass isinstance rubyobject
// rubyobject is already of the required jruby class (or subclass)
return rubyobject
// the converters handle not only primitive types but also their boxed versions, so we should check
// if we have a converter before checking for isprimitive()
rubyconverter converter   ruby_converters get javaclass
if  converter    null
return converter convert context  rubyobject
if  javaclass isprimitive
string s     rubystring typeconverter converttotype rubyobject  rubyobject getruntime   getstring       true   getunicodevalue
if  s length   > 0
return new character s charat 0
return new character
else if  javaclass    string class
rubystring rubystring    rubystring  rubyobject callmethod context
bytelist bytes   rubystring getbytelist
try
return new string bytes unsafebytes    bytes begin    bytes length
catch  unsupportedencodingexception uee
return new string bytes unsafebytes    bytes begin    bytes length
else if  javaclass    bytelist class
return rubyobject converttostring   getbytelist
else if  javaclass    biginteger class
if  rubyobject instanceof rubybignum
return   rubybignum rubyobject  getvalue
else if  rubyobject instanceof rubynumeric
return  biginteger valueof    rubynumeric rubyobject  getlongvalue
else if  rubyobject respondsto
rubynumeric rubynumeric     rubynumeric rubyobject callmethod context
return  biginteger valueof  rubynumeric getlongvalue
else if  javaclass    bigdecimal class      rubyobject instanceof javaobject
if  rubyobject respondsto
double double_value     rubynumeric rubyobject callmethod context      getdoublevalue
return new bigdecimal double_value
try
if  isducktypeconvertable rubyobject getclass    javaclass
return convertproctointerface context   rubyobject  rubyobject  javaclass
return   javaobject  rubyobject  getvalue
catch  classcastexception ex
if  rubyobject getruntime   getdebug   istrue    ex printstacktrace
return null
@deprecated
public static byte convertrubytojavabyte irubyobject rubyobject
return   byte convertrubytojava rubyobject  byte class   bytevalue
@deprecated
public static short convertrubytojavashort irubyobject rubyobject
return   short convertrubytojava rubyobject  short class   shortvalue
@deprecated
public static char convertrubytojavachar irubyobject rubyobject
return   character convertrubytojava rubyobject  char class   charvalue
@deprecated
public static int convertrubytojavaint irubyobject rubyobject
return   integer convertrubytojava rubyobject  int class   intvalue
@deprecated
public static long convertrubytojavalong irubyobject rubyobject
return   long convertrubytojava rubyobject  long class   longvalue
@deprecated
public static float convertrubytojavafloat irubyobject rubyobject
return   float convertrubytojava rubyobject  float class   floatvalue
@deprecated
public static double convertrubytojavadouble irubyobject rubyobject
return   double convertrubytojava rubyobject  double class   doublevalue
@deprecated
public static boolean convertrubytojavaboolean irubyobject rubyobject
return   boolean convertrubytojava rubyobject  boolean class   booleanvalue
@deprecated
public static object convertargumenttotype threadcontext context  irubyobject arg  class target
return arg tojava target
@deprecated
public static object coerceniltotype rubynil nil  class target
return nil tojava target
@deprecated
public static final rubyconverter ruby_boolean_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return boolean valueof rubyobject istrue
@deprecated
public static final rubyconverter ruby_byte_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
if  rubyobject respondsto
return new byte  byte    rubynumeric  rubyobject callmethod
context      getlongvalue
return new byte  byte  0
@deprecated
public static final rubyconverter ruby_short_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
if  rubyobject respondsto
return new short  short    rubynumeric  rubyobject callmethod
context      getlongvalue
return new short  short  0
@deprecated
public static final rubyconverter ruby_char_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
if  rubyobject respondsto
return new character  char    rubynumeric  rubyobject callmethod
context      getlongvalue
return new character  char  0
@deprecated
public static final rubyconverter ruby_integer_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
if  rubyobject respondsto
return new integer  int    rubynumeric  rubyobject callmethod
context      getlongvalue
return new integer 0
@deprecated
public static final rubyconverter ruby_long_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
if  rubyobject respondsto
return new long   rubynumeric  rubyobject callmethod
context      getlongvalue
return new long 0
@deprecated
public static final rubyconverter ruby_float_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
if  rubyobject respondsto
return new float  float    rubynumeric  rubyobject callmethod
context      getdoublevalue
return new float 0 0
@deprecated
public static final rubyconverter ruby_double_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
if  rubyobject respondsto
return new double   rubynumeric  rubyobject callmethod
context      getdoublevalue
return new double 0 0
@deprecated
public static final map<class  rubyconverter> ruby_converters   new hashmap<class  rubyconverter>
static
ruby_converters put boolean class  ruby_boolean_converter
ruby_converters put boolean type  ruby_boolean_converter
ruby_converters put byte class  ruby_byte_converter
ruby_converters put byte type  ruby_byte_converter
ruby_converters put short class  ruby_short_converter
ruby_converters put short type  ruby_short_converter
ruby_converters put integer class  ruby_integer_converter
ruby_converters put integer type  ruby_integer_converter
ruby_converters put long class  ruby_long_converter
ruby_converters put long type  ruby_long_converter
ruby_converters put float class  ruby_float_converter
ruby_converters put float type  ruby_float_converter
ruby_converters put double class  ruby_double_converter
ruby_converters put double type  ruby_double_converter
@deprecated
public static irubyobject convertjavatoruby ruby runtime  int i
return runtime newfixnum i
@deprecated
public static irubyobject convertjavatoruby ruby runtime  long l
return runtime newfixnum l
@deprecated
public static irubyobject convertjavatoruby ruby runtime  float f
return runtime newfloat f
@deprecated
public static irubyobject convertjavatoruby ruby runtime  double d
return runtime newfloat d
@deprecated
public static irubyobject convertjavatoruby ruby runtime  boolean b
return runtime newboolean b
@deprecated
public static irubyobject convertjavatoruby ruby runtime  javaconverter converter  object object
if  converter    null    converter    java_default_converter
return java getinstance runtime  object
return converter convert runtime  object
@deprecated
public interface rubyconverter
public object convert threadcontext context  irubyobject rubyobject
@deprecated
public static final rubyconverter array_boolean_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava boolean class
@deprecated
public static final rubyconverter array_byte_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava byte class
@deprecated
public static final rubyconverter array_short_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava short class
@deprecated
public static final rubyconverter array_char_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava character class
@deprecated
public static final rubyconverter array_int_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava integer class
@deprecated
public static final rubyconverter array_long_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava long class
@deprecated
public static final rubyconverter array_float_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava float class
@deprecated
public static final rubyconverter array_double_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava double class
@deprecated
public static final rubyconverter array_object_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava object class
@deprecated
public static final rubyconverter array_class_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava class class
@deprecated
public static final rubyconverter array_string_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava string class
@deprecated
public static final rubyconverter array_biginteger_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava biginteger class
@deprecated
public static final rubyconverter array_bigdecimal_converter   new rubyconverter
public object convert threadcontext context  irubyobject rubyobject
return rubyobject tojava bigdecimal class
@deprecated
public static final map<class  rubyconverter> array_converters   new hashmap<class  rubyconverter>
static
array_converters put boolean class  array_boolean_converter
array_converters put boolean type  array_boolean_converter
array_converters put byte class  array_byte_converter
array_converters put byte type  array_byte_converter
array_converters put short class  array_short_converter
array_converters put short type  array_short_converter
array_converters put character class  array_char_converter
array_converters put character type  array_char_converter
array_converters put integer class  array_int_converter
array_converters put integer type  array_int_converter
array_converters put long class  array_long_converter
array_converters put long type  array_long_converter
array_converters put float class  array_float_converter
array_converters put float type  array_float_converter
array_converters put double class  array_double_converter
array_converters put double type  array_double_converter
array_converters put string class  array_string_converter
array_converters put class class  array_class_converter
array_converters put biginteger class  array_biginteger_converter
array_converters put bigdecimal class  array_bigdecimal_converter
@deprecated
public static rubyconverter getarrayconverter class type
rubyconverter converter   array_converters get type
if  converter    null
return array_object_converter
return converter
/**
* high-level object conversion utility.
*/
@deprecated
public static irubyobject ruby_to_java final irubyobject recv  irubyobject object  block unusedblock
if  object respondsto
irubyobject result    javaobject object datagetstruct
if  result    null
result   object callmethod recv getruntime   getcurrentcontext
if  result instanceof javaobject
recv getruntime   getjavasupport   getobjectproxycache   put   javaobject  result  getvalue    object
return result
return primitive_to_java recv  object  unusedblock
@deprecated
public static irubyobject java_to_primitive irubyobject recv  irubyobject object  block unusedblock
if  object instanceof javaobject
return javautil convertjavatoruby recv getruntime      javaobject  object  getvalue
return object
@deprecated
public static irubyobject primitive_to_java irubyobject recv  irubyobject object  block unusedblock
if  object instanceof javaobject
return object
ruby runtime   recv getruntime
object javaobject
switch  object getmetaclass   index
case classindex nil
javaobject   null
break
case classindex fixnum
javaobject   new long   rubyfixnum  object  getlongvalue
break
case classindex bignum
javaobject     rubybignum  object  getvalue
break
case classindex float
javaobject   new double   rubyfloat  object  getvalue
break
case classindex string
try
bytelist bytes     rubystring  object  getbytelist
javaobject   new string bytes unsafebytes    bytes begin    bytes length
catch  unsupportedencodingexception uee
javaobject   object tostring
break
case classindex true
javaobject   boolean true
break
case classindex false
javaobject   boolean false
break
case classindex time
javaobject     rubytime  object  getjavadate
break
default
// it's not one of the types we convert, so just pass it out as-is without wrapping
return object
// we've found a java type to which we've coerced the ruby value, wrap it
return javaobject wrap runtime  javaobject
@deprecated
public static object convertargument ruby runtime  object argument  class<?> parametertype
if  argument    null
if parametertype isprimitive
throw runtime newtypeerror
else
return null
if  argument instanceof javaobject
argument     javaobject  argument  getvalue
if  argument    null
return null
class<?> type   primitivetowrapper parametertype
if  type    void class
return null
if  argument instanceof number
final number number    number  argument
if  type    long class
return new long number longvalue
else if  type    integer class
return new integer number intvalue
else if  type    byte class
return new byte number bytevalue
else if  type    character class
return new character  char  number intvalue
else if  type    double class
return new double number doublevalue
else if  type    float class
return new float number floatvalue
else if  type    short class
return new short number shortvalue
if  isducktypeconvertable argument getclass    parametertype
rubyobject rubyobject    rubyobject  argument
if   rubyobject respondsto
return convertproctointerface runtime getcurrentcontext    rubyobject  parametertype
return argument
/**
* high-level object conversion utility function 'java_to_primitive' is the low-level version
*/
@deprecated
public static irubyobject java_to_ruby ruby runtime  irubyobject object
if  object instanceof javaobject
return javautil convertjavatousablerubyobject runtime    javaobject  object  getvalue
return object