/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2008 jruby project
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby platform
import java nio byteorder
import java util hashmap
import java util map
/**
* platform specific constants.
*/
public class platform
private static final platform instance   new platform
public static platform getplatform
return instance
protected platform
public static void main string args
system out println system getproperties
public string getpackagename
return string format    platform class getpackage   getname    os  arch
public string getospackagename
return string format    platform class getpackage   getname    os
private static final string darwin
private static final string windows
private static final string linux
private static final string freebsd
private static final string openbsd
private static final string solaris
private static final string gcj
public static final map<string  string> os_names   new hashmap<string  string>
put    darwin
public static final map<string  string> arch_names   new hashmap<string  string>
put
private static final string initoperatingsystem
string osname   getproperty       tolowercase
for  string s   os_names keyset
if  s equalsignorecase osname
return os_names get s
if  osname startswith
return windows
return osname
private static final string initarchitecture
string arch   getproperty       tolowercase
for  string s   arch_names keyset
if  s equalsignorecase arch
return arch_names get s
return arch
public static final string arch   initarchitecture
public static final string os   initoperatingsystem
public static final string jvm   system getproperty
public static final boolean is_windows   os equals windows
public static final boolean is_mac   os equals darwin
public static final boolean is_freebsd   os equals freebsd
public static final boolean is_openbsd   os equals openbsd
public static final boolean is_linux   os equals linux
public static final boolean is_solaris   os equals solaris
public static final boolean is_bsd   is_mac    is_freebsd    is_openbsd
public static final string name   string format    arch  os
public static final int big_endian   4321
public static final int little_endian   1234
public static final int byte_order   byteorder nativeorder   equals byteorder big_endian  ? big_endian   little_endian
public static final boolean is_gcj   jvm equals gcj
/**
* an extension over <code>system.getproperty</code> method.
* handles security restrictions, and returns the default
* value if the access to the property is restricted.
* @param property the system property name.
* @param defvalue the default value.
* @return the value of the system property,
*         or the default value.
*/
public static string getproperty string property  string defvalue
try
return system getproperty property  defvalue
catch  securityexception se
return defvalue