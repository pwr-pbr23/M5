/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002, 2009 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004 charles o nutter <headius@headius.com>
* copyright (c) 2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby util
import java text dateformat
import java text dateformatsymbols
import java text fieldposition
import java text parseposition
import java util calendar
import java util date
import java util linkedlist
import java util list
import java util locale
import org joda time datetime
public class rubydateformat extends dateformat
private static final long serialversionuid    250429218019023997l
private boolean ruby_1_9
private list<token> compiledpattern
private final dateformatsymbols formatsymbols
private static final int format_string   0
private static final int format_week_long   1
private static final int format_week_short   2
private static final int format_month_long   3
private static final int format_month_short   4
private static final int format_day   5
private static final int format_day_s   6
private static final int format_hour   7
private static final int format_hour_m   8
private static final int format_hour_s   9
private static final int format_day_year   10
private static final int format_minutes   11
private static final int format_month   12
private static final int format_meridian   13
private static final int format_meridian_lower_case   14
private static final int format_seconds   15
private static final int format_week_year_s   16
private static final int format_week_year_m   17
private static final int format_day_week   18
private static final int format_year_long   19
private static final int format_year_short   20
private static final int format_zone_off   21
private static final int format_zone_id   22
private static final int format_century   23
private static final int format_hour_blank   24
private static final int format_millisec   25
private static final int format_epoch   26
private static final int format_day_week2   27
private static final int format_week_weekyear   28
private static final int format_nanosec   29
private static final int format_precision   30
private static final int format_weekyear   31
private static final int format_output   32
private static class token
private int format
private object data
private timeoutputformatter outputformatter
public token int format
this format  null
public token int format  object data
this format   format
this data   data
/**
* gets the data.
* @return returns a object
*/
public object getdata
return data
/**
* gets the format.
* @return returns a int
*/
public int getformat
return format
/**
* constructor for rubydateformat.
*/
public rubydateformat
this    new dateformatsymbols
public rubydateformat string pattern  locale alocale
this pattern  new dateformatsymbols alocale
public rubydateformat string pattern  locale alocale  boolean ruby_1_9
this pattern  alocale
this ruby_1_9   ruby_1_9
public rubydateformat string pattern  dateformatsymbols formatsymbols
super
this formatsymbols   formatsymbols
applypattern pattern
public void applypattern string pattern
compilepattern pattern
private void compilepattern string pattern
compiledpattern   new linkedlist<token>
int len   pattern length
for  int i   0  i < len
if  pattern charat i
i
if i    len
compiledpattern add new token format_string
else
i   addoutputformatter pattern  i
switch  pattern charat i
case
compiledpattern add new token format_week_long
break
case
compiledpattern add new token format_week_short
break
case
compiledpattern add new token format_month_long
break
case
case
compiledpattern add new token format_month_short
break
case
compiledpattern add new token format_century
break
case
compiledpattern add new token format_week_short
compiledpattern add new token format_string
compiledpattern add new token format_month_short
compiledpattern add new token format_string
compiledpattern add new token format_day
compiledpattern add new token format_string
compiledpattern add new token format_hour
compiledpattern add new token format_string
compiledpattern add new token format_minutes
compiledpattern add new token format_string
compiledpattern add new token format_seconds
compiledpattern add new token format_string
compiledpattern add new token format_year_long
break
case
compiledpattern add new token format_month
compiledpattern add new token format_string
compiledpattern add new token format_day
compiledpattern add new token format_string
compiledpattern add new token format_year_short
break
case
compiledpattern add new token format_day
break
case
compiledpattern add new token format_day_s
break
case
compiledpattern add new token format_year_long
compiledpattern add new token format_string
compiledpattern add new token format_month
compiledpattern add new token format_string
compiledpattern add new token format_day
break
case
compiledpattern add new token format_weekyear
break
case
compiledpattern add new token format_hour
break
case
compiledpattern add new token format_hour_m
break
case
compiledpattern add new token format_day_year
break
case
compiledpattern add new token format_hour_blank
break
case
compiledpattern add new token format_millisec
break
case
compiledpattern add new token format_hour_s
break
case
compiledpattern add new token format_minutes
break
case
compiledpattern add new token format_month
break
case
compiledpattern add new token format_nanosec
break
case
compiledpattern add new token format_string
break
case
compiledpattern add new token format_meridian
break
case
compiledpattern add new token format_meridian_lower_case
break
case
compiledpattern add new token format_hour
compiledpattern add new token format_string
compiledpattern add new token format_minutes
break
case
compiledpattern add new token format_hour_m
compiledpattern add new token format_string
compiledpattern add new token format_minutes
compiledpattern add new token format_string
compiledpattern add new token format_seconds
compiledpattern add new token format_string
compiledpattern add new token format_meridian
break
case
compiledpattern add new token format_epoch
break
case
compiledpattern add new token format_seconds
break
case
compiledpattern add new token format_hour
compiledpattern add new token format_string
compiledpattern add new token format_minutes
compiledpattern add new token format_string
compiledpattern add new token format_seconds
break
case
compiledpattern add new token format_string
break
case
compiledpattern add new token format_day_week2
break
case
compiledpattern add new token format_week_year_s
break
case
compiledpattern add new token format_day_s
compiledpattern add new token format_string
compiledpattern add new token format_month_short
compiledpattern add new token format_string
compiledpattern add new token format_year_long
break
case
compiledpattern add new token format_week_weekyear
break
case
compiledpattern add new token format_week_year_m
break
case
compiledpattern add new token format_day_week
break
case
compiledpattern add new token format_hour
compiledpattern add new token format_string
compiledpattern add new token format_minutes
compiledpattern add new token format_string
compiledpattern add new token format_seconds
break
case
compiledpattern add new token format_month
compiledpattern add new token format_string
compiledpattern add new token format_day
compiledpattern add new token format_string
compiledpattern add new token format_year_short
break
case
compiledpattern add new token format_year_long
break
case
compiledpattern add new token format_year_short
break
case
compiledpattern add new token format_zone_id
break
case
compiledpattern add new token format_zone_off
break
case
compiledpattern add new token format_string
break
default
compiledpattern add new token format_string      pattern charat i
i
else
stringbuilder sb   new stringbuilder
for   i < len    pattern charat i        i
sb append pattern charat i
compiledpattern add new token format_string  sb tostring
private int addoutputformatter string pattern  int index
if  ruby_1_9
timeoutputformatter outputformatter   timeoutputformatter getformatter pattern
if  outputformatter    null
index    outputformatter getformatter   length
compiledpattern add new token format_output  outputformatter
return index
private string formatoutput timeoutputformatter formatter  string output
if  formatter    null  return output
output   formatter format output
formatter   null
return output
private datetime dt
public void setdatetime final datetime dt
this dt   dt
/**
* @see dateformat#format(date, stringbuffer, fieldposition)
*/
public stringbuffer format date ignored  stringbuffer toappendto  fieldposition fieldposition
timeoutputformatter formatter   null
for  token token  compiledpattern
string output   null
boolean format   true
switch  token getformat
case format_output
formatter    timeoutputformatter  token getdata
break
case format_string
output   token getdata   tostring
format   false
break
case format_week_long
// this is gross, but java api's aren't iso 8601 compliant at all
int v    dt getdayofweek   1 %8
if v    0
v
output   formatsymbols getweekdays
break
case format_week_short
// this is gross, but java api's aren't iso 8601 compliant at all
v    dt getdayofweek   1 %8
if v    0
v
output   formatsymbols getshortweekdays
break
case format_month_long
output   formatsymbols getmonths
break
case format_month_short
output   formatsymbols getshortmonths
break
case format_day
int value   dt getdayofmonth
output   string format    value
break
case format_day_s
value   dt getdayofmonth
output    value < 10 ?          integer tostring value
break
case format_hour
case format_hour_blank
value   dt gethourofday
output
if  value < 10
output    token getformat      format_hour ?
output    value
break
case format_hour_m
case format_hour_s
value   dt gethourofday
if value > 12
value  12
if value    0
output
else
output
if  value < 10
output    token getformat      format_hour_m ?
output    value
break
case format_day_year
value   dt getdayofyear
output   string format    value
break
case format_minutes
value   dt getminuteofhour
output   string format    value
break
case format_month
value   dt getmonthofyear
output   string format    value
break
case format_meridian
case format_meridian_lower_case
if  dt gethourofday   < 12
output   token getformat      format_meridian ?
else
output   token getformat      format_meridian ?
break
case format_seconds
value   dt getsecondofminute
output    value < 10 ?          integer tostring value
break
case format_week_year_m
output   formatweekyear java util calendar monday
break
case format_week_year_s
output   formatweekyear java util calendar sunday
break
case format_day_week
case format_day_week2
value   dt getdayofweek
if  token getformat      format_day_week
value   value % 7
output   integer tostring value
break
case format_year_long
value   dt getyear
output   string format    value
break
case format_year_short
value   dt getyear   % 100
output   string format    value
break
case format_zone_off
value   dt getzone   getoffset dt getmillis
output   value < 0 ?
value   math abs value
if  value   3600000 < 10
output
output     value   3600000
value   value % 3600000   60000
if  value < 10
output
output    value
break
case format_zone_id
toappendto append dt getzone   getshortname dt getmillis
break
case format_century
toappendto append dt getcenturyofera
break
case format_millisec
value   dt getmillisofsecond
output   string format    value
break
case format_epoch
output   long tostring dt getmillis   1000
break
case format_week_weekyear
value   dt getweekofweekyear
output   string format    value
break
case format_nanosec
long nano   system nanotime
value    int   nano % 1000000000
output   integer tostring value
break
case format_weekyear
output   integer tostring dt getweekyear
break
if  output    null
toappendto append format ? formatoutput formatter  output    output
return toappendto
private string formatweekyear int firstdayofweek
java util calendar calendar   dt togregoriancalendar
calendar setfirstdayofweek firstdayofweek
calendar setminimaldaysinfirstweek 7
int value   calendar get java util calendar week_of_year
if   value    52    value    53
calendar get calendar month     calendar january
// mri behavior: week values are monotonous.
// so, weeks that effectively belong to previous year,
// will get the value of 0, not 52 or 53, as in java.
value   0
return string format    value
/**
* @see dateformat#parse(string, parseposition)
*/
public date parse string source  parseposition pos
throw new unsupportedoperationexception