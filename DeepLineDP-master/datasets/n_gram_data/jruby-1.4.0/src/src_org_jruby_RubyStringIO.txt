/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2006 ola bini <ola@ologix.com>
* copyright (c) 2006 ryan bell <ryan.l.bell@gmail.com>
* copyright (c) 2007 thomas e enebo <enebo@acm.org>
* copyright (c) 2008 vladimir sizikov <vsizikov@gmail.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import java util arraylist
import java util arrays
import java util list
import org jruby anno framefield
import org jruby anno jrubyclass
import org jruby anno jrubymethod
import org jruby java addons iojavaaddons
import org jruby javasupport util runtimehelpers
import org jruby runtime block
import org jruby runtime objectallocator
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
import org jruby util bytelist
import org jruby util typeconverter
import org jruby util io invalidvalueexception
import org jruby util io modeflags
import org jruby util io stream
import static org jruby rubyenumerator enumeratorize
@jrubyclass name
public class rubystringio extends rubyobject
private static objectallocator stringio_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new rubystringio runtime  klass
public static rubyclass createstringioclass final ruby runtime
rubyclass stringioclass   runtime defineclass
runtime fastgetclass     stringio_allocator
stringioclass defineannotatedmethods rubystringio class
stringioclass includemodule runtime getenumerable
if  runtime getobject   isconstantdefined
stringioclass defineannotatedmethods iojavaaddons anyio class
return stringioclass
@jrubymethod name      optional   2  frame   true  meta   true
public static irubyobject open threadcontext context  irubyobject recv  irubyobject args  block block
rubystringio strio    rubystringio   rubyclass recv  newinstance context  args  block null_block
irubyobject val   strio
if  block isgiven
try
val   block yield context  strio
finally
strio dofinalize
return val
protected rubystringio ruby runtime  rubyclass klass
super runtime  klass
private long pos   0l
private int lineno   0
private boolean eof   false
/**
* attn: the value of internal might be reset to null
* (during stringio.open with block), so watch out for that.
*/
private rubystring internal
// has read/write been closed or is it still open for business
private boolean closedread   false
private boolean closedwrite   false
// support io modes that this object was opened with
modeflags modes
private void initializemodes object modeargument
try
if  modeargument    null
modes   new modeflags rubyio getiomodesintfromstring getruntime
else if  modeargument instanceof long
modes   new modeflags   long modeargument  longvalue
else
modes   new modeflags rubyio getiomodesintfromstring getruntime     string  modeargument
catch  invalidvalueexception e
throw getruntime   newerrnoeinvalerror
setupmodes
@jrubymethod name      optional   2  frame   true  visibility   visibility private
public irubyobject initialize irubyobject args  block unusedblock
object modeargument   null
switch  args length
case 0
internal   rubystring newemptystring getruntime
modeargument
break
case 1
internal   args converttostring
modeargument   internal isfrozen   ?
break
case 2
internal   args converttostring
if  args instanceof rubyfixnum
modeargument   rubyfixnum fix2long args
else
modeargument   args converttostring   tostring
break
initializemodes modeargument
if  modes iswritable      internal isfrozen
throw getruntime   newerrnoeacceserror
if  modes istruncate
internal modifycheck
internal empty
return this
@jrubymethod visibility   visibility private
public irubyobject initialize_copy irubyobject other
rubystringio otherio    rubystringio  typeconverter converttotype
other  getruntime   fastgetclass
if  this    otherio
return this
pos   otherio pos
lineno   otherio lineno
eof   otherio eof
closedread   otherio closedread
closedwrite   otherio closedwrite
internal   otherio internal
modes   otherio modes
if  otherio istaint
settaint true
return this
@jrubymethod name      required   1
public irubyobject append threadcontext context  irubyobject arg
writeinternal context  arg
return this
@jrubymethod name
public irubyobject binmode
return this
@jrubymethod name      frame true
public irubyobject close
checkinitialized
checkopen
closedread   true
closedwrite   true
return getruntime   getnil
private void dofinalize
closedread   true
closedwrite   true
internal   null
@jrubymethod name
public irubyobject closed_p
checkinitialized
return getruntime   newboolean closedread    closedwrite
@jrubymethod name
public irubyobject close_read
checkreadable
closedread   true
return getruntime   getnil
@jrubymethod name
public irubyobject closed_read_p
checkinitialized
return getruntime   newboolean closedread
@jrubymethod name
public irubyobject close_write
checkwritable
closedwrite   true
return getruntime   getnil
@jrubymethod name
public irubyobject closed_write_p
checkinitialized
return getruntime   newboolean closedwrite
public irubyobject each threadcontext context  irubyobject args  block block
irubyobject line   getsonly context  args
while   line isnil
block yield context  line
line   getsonly context  args
return this
@jrubymethod name      optional   1  frame   true  writes   framefield lastline
public irubyobject each19 threadcontext context  irubyobject args  block block
return block isgiven   ? each context  args  block    enumeratorize context getruntime    this     args
@jrubymethod name      optional   1  frame   true
public irubyobject each_line threadcontext context  irubyobject args  block block
return block isgiven   ? each context  args  block    enumeratorize context getruntime    this     args
@jrubymethod name      optional   1  frame   true
public irubyobject lines threadcontext context  irubyobject args  block block
return block isgiven   ? each context  args  block    enumeratorize context getruntime    this     args
public irubyobject each_byte threadcontext context  block block
checkreadable
ruby runtime   context getruntime
bytelist bytes   internal getbytelist
// check the length every iteration, since
// the block can modify this string.
while  pos < bytes length
block yield context  runtime newfixnum bytes get  int  pos      0xff
return this
@jrubymethod name      frame   true
public irubyobject each_byte19 threadcontext context  block block
return block isgiven   ? each_byte context  block    enumeratorize context getruntime    this
@jrubymethod name      frame   true
public irubyobject bytes threadcontext context  block block
return block isgiven   ? each_byte context  block    enumeratorize context getruntime    this
public irubyobject each_char final threadcontext context  final block block
checkreadable
ruby runtime   context getruntime
bytelist bytes   internal getbytelist
int len   bytes realsize
while  pos < len
int pos    int this pos
byte c   bytes bytes
int n   runtime getkcode   getencoding   length c
if len < pos   n
n   len   pos
this pos    n
block yield context  internal substr19 runtime  pos  n
return this
@jrubymethod name      frame   true
public irubyobject each_char19 final threadcontext context  final block block
return block isgiven   ? each_char context  block    enumeratorize context getruntime    this
@jrubymethod name      frame   true
public irubyobject chars19 final threadcontext context  final block block
return block isgiven   ? each_char context  block    enumeratorize context getruntime    this
@jrubymethod name
public irubyobject eof
return getruntime   newboolean iseof
private boolean iseof
return  pos >  internal getbytelist   length       eof
@jrubymethod name
public irubyobject fcntl
throw getruntime   newnotimplementederror
@jrubymethod name
public irubyobject fileno
return getruntime   getnil
@jrubymethod name
public irubyobject flush
return this
@jrubymethod name
public irubyobject fsync
return rubyfixnum zero getruntime
@jrubymethod name
public irubyobject getc
checkreadable
if  pos >  internal getbytelist   length
return getruntime   getnil
return getruntime   newfixnum internal getbytelist   get  int pos      0xff
private irubyobject internalgets threadcontext context  irubyobject args
ruby runtime   context getruntime
if  pos < internal getbytelist   realsize     eof
boolean isparagraph   false
bytelist sep
if  args length > 0
if  args isnil
bytelist buf   internal getbytelist   makeshared
int pos  internal getbytelist   realsize    int pos
pos    buf realsize
return rubystring newstring runtime  buf
sep   args converttostring   getbytelist
if  sep realsize    0
isparagraph   true
sep   stream paragraph_separator
else
sep     rubystring runtime getglobalvariables   get     getbytelist
bytelist ss   internal getbytelist
if  isparagraph
swallowlf ss
if  pos    ss realsize
return runtime getnil
int ix   ss indexof sep   int pos
bytelist add
if   1    ix
ix   internal getbytelist   realsize
add   bytelist empty_bytelist
else
add   isparagraph? newline   sep
bytelist line   new bytelist ix    int pos   add length
line append internal getbytelist     int pos  ix    int pos
line append add
pos   ix   add realsize
lineno
return rubystring newstring runtime line
return runtime getnil
private void swallowlf bytelist list
while  pos < list realsize
if  list get  int pos
pos
else
break
@jrubymethod name      optional   1  writes   framefield lastline
public irubyobject gets threadcontext context  irubyobject args
irubyobject result   getsonly context  args
context getcurrentscope   setlastline result
return result
public irubyobject getsonly threadcontext context  irubyobject args
checkreadable
return internalgets context  args
@jrubymethod name
public irubyobject isatty
return getruntime   getfalse
@jrubymethod name
public irubyobject length
checkfinalized
return getruntime   newfixnum internal getbytelist   length
@jrubymethod name
public irubyobject lineno
return getruntime   newfixnum lineno
@jrubymethod name      required   1
public irubyobject set_lineno irubyobject arg
lineno   rubynumeric fix2int arg
return getruntime   getnil
@jrubymethod name
public irubyobject path
return getruntime   getnil
@jrubymethod name
public irubyobject pid
return getruntime   getnil
@jrubymethod name
public irubyobject pos
return getruntime   newfixnum pos
@jrubymethod name      required   1
public irubyobject set_pos irubyobject arg
pos   rubynumeric fix2int arg
if  pos < 0
throw getruntime   newerrnoeinvalerror
return getruntime   getnil
@jrubymethod name      rest   true
public irubyobject print threadcontext context  irubyobject args
ruby runtime   context getruntime
if  args length    0
for  int i 0 j args length i<j i
append context  args
else
irubyobject arg   runtime getglobalvariables   get
append context  arg isnil   ? runtime newstring      arg
irubyobject sep   runtime getglobalvariables   get
if   sep isnil
append context  sep
return getruntime   getnil
@jrubymethod name      required   1  rest   true
public irubyobject printf threadcontext context  irubyobject args
append context  rubykernel sprintf context  this  args
return getruntime   getnil
@jrubymethod name      required   1
public irubyobject putc irubyobject obj
checkwritable
byte c   rubynumeric num2chr obj
checkfrozen
internal modify
bytelist bytes   internal getbytelist
if  modes isappendable
pos   bytes length
bytes append c
else
if  pos >  bytes length
bytes length  int pos   1
bytes set  int  pos  c
pos
return obj
public static final bytelist newline   bytelist create
@jrubymethod name      rest   true
public irubyobject puts threadcontext context  irubyobject args
checkwritable
// fixme: the code below is a copy of rubyio.puts,
// and we should avoid copy-paste.
if  args length    0
callmethod context     rubystring newstringshared getruntime    newline
return getruntime   getnil
for  int i   0  i < args length  i
rubystring line
if  args isnil
line   getruntime   newstring
else
irubyobject tmp   args checkarraytype
if   tmp isnil
rubyarray arr    rubyarray  tmp
if  getruntime   isinspecting arr
line   getruntime   newstring
else
inspectputs context  arr
continue
else
if  args instanceof rubystring
line    rubystring args
else
line   args asstring
callmethod context     line
if   line getbytelist   endswith newline
callmethod context     rubystring newstringshared getruntime    newline
return getruntime   getnil
private irubyobject inspectputs threadcontext context  rubyarray array
try
getruntime   registerinspecting array
return puts context  array tojavaarray
finally
getruntime   unregisterinspecting array
@suppresswarnings
@jrubymethod name      optional   2
public irubyobject read irubyobject args
checkreadable
bytelist buf   null
int length   0
int oldlength   0
rubystring originalstring   null
switch  args length
case 2
originalstring   args converttostring
// must let original string know we're modifying, so shared buffers aren't damaged
originalstring modify
buf   originalstring getbytelist
case 1
if   args isnil
length   rubynumeric fix2int args
oldlength   length
if  length < 0
throw getruntime   newargumenterror     length
if  length > 0    pos >  internal getbytelist   length
eof   true
if  buf    null  buf realsize   0
return getruntime   getnil
else if  eof
if  buf    null  buf realsize   0
return getruntime   getnil
break
case 0
oldlength    1
length   internal getbytelist   length
if  length <  pos
eof   true
if  buf    null
buf   new bytelist
else
buf realsize   0
return getruntime   newstring buf
else
length    pos
break
default
getruntime   newargumenterror args length  0
if  buf    null
int internallength   internal getbytelist   length
if  internallength > 0
if  internallength >  pos   length
buf   new bytelist internal getbytelist     int  pos  length
else
int rest    int   internal getbytelist   length     pos
if  length > rest  length   rest
buf   new bytelist internal getbytelist     int  pos  length
else
int rest    int   internal getbytelist   length     pos
if  length > rest  length   rest
// yow...this is still ugly
byte target   buf bytes
if  target length > length
system arraycopy internal getbytelist   bytes   int  pos  target  0  length
buf begin   0
buf realsize   length
else
target   new byte
system arraycopy internal getbytelist   bytes   int  pos  target  0  length
buf begin   0
buf realsize   length
buf bytes   target
if  buf    null
if   eof  buf   new bytelist
length   0
else
length   buf length
pos    length
if  oldlength < 0    oldlength > length  eof   true
return originalstring    null ? originalstring   getruntime   newstring buf
@jrubymethod name
public irubyobject readchar
irubyobject c   getc
if  c isnil    throw getruntime   neweoferror
return c
@jrubymethod name      optional   1  writes   framefield lastline
public irubyobject readline threadcontext context  irubyobject args
irubyobject line   gets context  args
if  line isnil    throw getruntime   neweoferror
return line
@jrubymethod name      optional   1
public irubyobject readlines threadcontext context  irubyobject arg
checkreadable
list<irubyobject> lns   new arraylist<irubyobject>
while    iseof
irubyobject line   internalgets context  arg
if  line isnil
break
lns add line
return getruntime   newarray lns
@jrubymethod name      required   0  optional   2
public irubyobject reopen irubyobject args
if  args length    1      args instanceof rubystring
return initialize_copy args
// reset the state
dorewind
closedread   false
closedwrite   false
return initialize args  block null_block
@jrubymethod name
public irubyobject rewind
dorewind
return rubyfixnum zero getruntime
private void dorewind
this pos   0l
this eof   false
this lineno   0
@jrubymethod name      required   1  optional   1  frame true
public irubyobject seek irubyobject args
checkopen
checkfinalized
long amount   rubynumeric num2long args
int whence   stream seek_set
long newposition   pos
if  args length > 1     args isnil    whence   rubynumeric fix2int args
if  whence    stream seek_cur
newposition    amount
else if  whence    stream seek_end
newposition   internal getbytelist   length     amount
else
newposition   amount
if  newposition < 0  throw getruntime   newerrnoeinvalerror
pos   newposition
eof   false
return rubyfixnum zero getruntime
@jrubymethod name      required   1
public irubyobject set_string irubyobject arg
return reopen new irubyobject   arg converttostring
@jrubymethod name      required   1
public irubyobject set_sync irubyobject args
return args
@jrubymethod name
public irubyobject string
if  internal    null
return getruntime   getnil
else
return internal
@jrubymethod name
public irubyobject sync
return getruntime   gettrue
@jrubymethod name      optional   2
public irubyobject sysread irubyobject args
irubyobject obj   read args
if  iseof
if  obj isnil
throw getruntime   neweoferror
return obj
@jrubymethod name      required   1
public irubyobject truncate irubyobject arg
checkwritable
int len   rubyfixnum fix2int arg
if  len < 0
throw getruntime   newerrnoeinvalerror
internal modify
bytelist buf   internal getbytelist
if  len < buf length
arrays fill buf unsafebytes    len  buf length     byte  0
buf length len
return arg
@jrubymethod name      required   1
public irubyobject ungetc irubyobject arg
checkreadable
int c   rubynumeric num2int arg
if  pos    0  return getruntime   getnil
internal modify
pos
bytelist bytes   internal getbytelist
if  bytes length   <  pos
bytes length  int pos   1
bytes set  int  pos  c
return getruntime   getnil
@jrubymethod name           required   1
public irubyobject write threadcontext context  irubyobject arg
return context getruntime   newfixnum writeinternal context  arg
private int writeinternal threadcontext context  irubyobject arg
checkwritable
checkfrozen
rubystring val   arg asstring
internal modify
if  modes isappendable
internal getbytelist   append val getbytelist
pos   internal getbytelist   length
else
int left   internal getbytelist   length    int pos
internal getbytelist   replace  int pos math min val getbytelist   length   left  val getbytelist
pos    val getbytelist   length
if  val istaint
internal settaint true
return val getbytelist   length
/* rb: check_modifiable */
@override
protected void checkfrozen
checkinitialized
if  internal isfrozen    throw getruntime   newioerror
/* rb: readable */
private void checkreadable
checkinitialized
if  closedread     modes isreadable
throw getruntime   newioerror
/* rb: writable */
private void checkwritable
checkinitialized
if  closedwrite     modes iswritable
throw getruntime   newioerror
// tainting here if we ever want it. (secure 4)
private void checkinitialized
if  modes    null
throw getruntime   newioerror
private void checkfinalized
if  internal    null
throw getruntime   newioerror
private void checkopen
if  closedread    closedwrite
throw getruntime   newioerror
private void setupmodes
closedwrite   false
closedread   false
if  modes isreadonly    closedwrite   true
if   modes isreadable    closedread   true