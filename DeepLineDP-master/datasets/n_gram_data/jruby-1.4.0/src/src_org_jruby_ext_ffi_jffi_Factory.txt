package org jruby ext ffi jffi
import com kenai jffi callingconvention
import org jruby ruby
import org jruby rubyclass
import org jruby rubymodule
import org jruby anno jrubymethod
import org jruby ext ffi allocateddirectmemoryio
import org jruby ext ffi callbackinfo
import org jruby ext ffi directmemoryio
import org jruby ext ffi nativetype
import org jruby ext ffi pointer
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
public class factory extends org jruby ext ffi factory
public factory
if   com kenai jffi platform getplatform   issupported
throw new unsatisfiedlinkerror
@override
public void init ruby runtime  rubymodule ffi
super init runtime  ffi
//
// hook up the memorypointer class if its not already there
//
synchronized  ffi
if  ffi fastgetclass       null
dynamiclibrary createdynamiclibraryclass runtime  ffi
if  ffi fastgetclass       null
jffiinvoker createinvokerclass runtime  ffi
if  ffi fastgetclass       null
variadicinvoker createvariadicinvokerclass runtime  ffi
if  ffi fastgetclass       null
callbackmanager createcallbackclass runtime  ffi
if  ffi fastgetclass       null
function createfunctionclass runtime  ffi
if  ffi fastgetclass       null
ffi definemoduleunder    defineannotatedmethods lasterror class
/**
* allocates memory on the native c heap and wraps it in a <tt>memoryio</tt> accessor.
*
* @param size the number of bytes to allocate.
* @param clear if the memory should be cleared.
* @return a new <tt>memoryio</tt>.
*/
public allocateddirectmemoryio allocatedirectmemory ruby runtime  int size  boolean clear
return allocatednativememoryio allocate runtime  size  clear
/**
* allocates memory on the native c heap and wraps it in a <tt>memoryio</tt> accessor.
*
* @param size the number of bytes to allocate.
* @param align the minimum alignment of the memory
* @param clear if the memory should be cleared.
* @return a new <tt>memoryio</tt>.
*/
public allocateddirectmemoryio allocatedirectmemory ruby runtime  int size  int align  boolean clear
return allocatednativememoryio allocatealigned runtime  size  align  clear
public directmemoryio wrapdirectmemory ruby runtime  long address
return nativememoryio wrap runtime  address
@override
public function newfunction ruby runtime  pointer address  callbackinfo cbinfo
codememoryio mem   new codememoryio runtime  address
rubyclass klass   runtime fastgetmodule    fastgetclass
return new function runtime  klass  mem
cbinfo getreturntype    cbinfo getparametertypes    callingconvention default  null
@override
public callbackmanager getcallbackmanager
return callbackmanager getinstance
private static final com kenai jffi type gettype nativetype type
com kenai jffi type jffitype   ffiutil getffitype type
if  jffitype    null
throw new unsupportedoperationexception     type
return jffitype
public int sizeof nativetype type
return gettype type  size
public int alignmentof nativetype type
return gettype type  alignment
public static final class lasterror
@jrubymethod name           meta   true
public static final  irubyobject error threadcontext context  irubyobject recv
return context getruntime   newfixnum com kenai jffi lasterror getinstance   get