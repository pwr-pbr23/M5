/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 charles o nutter <headius@headius.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby runtime
import org jruby ruby
import org jruby rubyarray
import org jruby rubymodule
import org jruby ast util argsutil
import org jruby common irubywarnings id
import org jruby exceptions jumpexception
import org jruby parser staticscope
import org jruby runtime builtin irubyobject
/**
* a block implemented using a java-based blockcallback implementation
* rather than with an icallable. for lightweight block logic within
* java code.
*/
public class compiledblock extends blockbody
protected final compiledblockcallback callback
protected final boolean hasmultipleargshead
protected final arity arity
protected staticscope scope
public static block newcompiledclosure threadcontext context  irubyobject self  arity arity
staticscope scope  compiledblockcallback callback  boolean hasmultipleargshead  int argumenttype
binding binding   context currentbinding self  visibility public
blockbody body   new compiledblock arity  scope  callback  hasmultipleargshead  argumenttype
return new block body  binding
public static block newcompiledclosure threadcontext context  irubyobject self  blockbody body
binding binding   context currentbinding self  visibility public
return new block body  binding
public static blockbody newcompiledblock arity arity
staticscope scope  compiledblockcallback callback  boolean hasmultipleargshead  int argumenttype
return new compiledblock arity  scope  callback  hasmultipleargshead  argumenttype
protected compiledblock arity arity  staticscope scope  compiledblockcallback callback  boolean hasmultipleargshead  int argumenttype
super argumenttype
this arity   arity
this scope   scope
this callback   callback
this hasmultipleargshead   hasmultipleargshead
@override
public irubyobject yieldspecific threadcontext context  binding binding  block type type
return yield context  null  binding  type
@override
public irubyobject yieldspecific threadcontext context  irubyobject arg0  binding binding  block type type
return yield context  arg0  binding  type
@override
public irubyobject yieldspecific threadcontext context  irubyobject arg0  irubyobject arg1  binding binding  block type type
return yield context  context getruntime   newarraynocopylight arg0  arg1   null  null  true  binding  type
@override
public irubyobject yieldspecific threadcontext context  irubyobject arg0  irubyobject arg1  irubyobject arg2  binding binding  block type type
return yield context  context getruntime   newarraynocopylight arg0  arg1  arg2   null  null  true  binding  type
@override
public irubyobject yield threadcontext context  irubyobject value  binding binding  block type type
irubyobject self   prepareself binding
irubyobject realarg   setupblockarg context getruntime    value  self
visibility oldvis   binding getframe   getvisibility
frame lastframe   pre context  null  binding
try
return callback call context  self  realarg
catch  jumpexception nextjump nj
// a 'next' is like a local return from the block, ending this call or yield.
return handlenextjump context  nj  type
finally
post context  binding  oldvis  lastframe
public irubyobject yield threadcontext context  irubyobject args  irubyobject self  rubymodule klass  boolean avalue  binding binding  block type type
if  klass    null
self   prepareself binding
irubyobject realarg   avalue ?
setupblockargs context  args  self    setupblockarg context getruntime    args  self
visibility oldvis   binding getframe   getvisibility
frame lastframe   pre context  klass  binding
try
return callback call context  self  realarg
catch  jumpexception nextjump nj
// a 'next' is like a local return from the block, ending this call or yield.
return handlenextjump context  nj  type
finally
post context  binding  oldvis  lastframe
private irubyobject prepareself binding binding
irubyobject self   binding getself
binding getframe   setself self
return self
private irubyobject handlenextjump threadcontext context  jumpexception nextjump nj  block type type
return nj getvalue      null ? context getruntime   getnil      irubyobject nj getvalue
protected frame pre threadcontext context  rubymodule klass  binding binding
return context preyieldspecificblock binding  scope  klass
protected void post threadcontext context  binding binding  visibility vis  frame lastframe
binding getframe   setvisibility vis
context postyield binding  lastframe
protected irubyobject setupblockargs threadcontext context  irubyobject value  irubyobject self
switch  argumenttype
case zero_args
return null
case multiple_assignment
case single_restarg
return value
default
return defaultargslogic context getruntime    value
private irubyobject defaultargslogic ruby ruby  irubyobject value
int length   argsutil arraylength value
switch  length
case 0
return ruby getnil
case 1
return   rubyarray value  eltinternal 0
default
blockargwarning ruby  length
return value
private void blockargwarning ruby ruby  int length
ruby getwarnings   warn id multiple_values_for_block
length
protected irubyobject setupblockarg ruby ruby  irubyobject value  irubyobject self
switch  argumenttype
case zero_args
return null
case multiple_assignment
case single_restarg
return argsutil converttorubyarray ruby  value  hasmultipleargshead
default
return defaultarglogic ruby  value
private irubyobject defaultarglogic ruby ruby  irubyobject value
if  value    null
return warnmultireturnnil ruby
return value
public staticscope getstaticscope
return scope
public void setstaticscope staticscope newscope
this scope   newscope
public block cloneblock binding binding
binding   binding clone
return new block this  binding
@override
public arity arity
return arity
private irubyobject warnmultireturnnil ruby ruby
ruby getwarnings   warn id multiple_values_for_block
return ruby getnil