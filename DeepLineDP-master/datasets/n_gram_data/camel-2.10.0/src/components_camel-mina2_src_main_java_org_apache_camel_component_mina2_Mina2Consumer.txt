/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component mina2
import java net inetsocketaddress
import java net socketaddress
import java nio charset charset
import java util list
import java util concurrent executorservice
import org apache camel camelexception
import org apache camel exchange
import org apache camel exchangepattern
import org apache camel processor
import org apache camel impl defaultconsumer
import org apache camel util exchangehelper
import org apache camel util iohelper
import org apache mina core filterchain defaultiofilterchainbuilder
import org apache mina core filterchain iofilter
import org apache mina core service ioacceptor
import org apache mina core service iohandleradapter
import org apache mina core service ioservice
import org apache mina core session iosession
import org apache mina filter codec protocolcodecfactory
import org apache mina filter codec protocolcodecfilter
import org apache mina filter codec serialization objectserializationcodecfactory
import org apache mina filter codec textline linedelimiter
import org apache mina filter executor executorfilter
import org apache mina filter executor unorderedthreadpoolexecutor
import org apache mina filter logging loggingfilter
import org apache mina filter ssl sslfilter
import org apache mina transport socket nio niodatagramacceptor
import org apache mina transport socket nio niosocketacceptor
import org apache mina transport vmpipe vmpipeacceptor
import org apache mina transport vmpipe vmpipeaddress
import org slf4j logger
import org slf4j loggerfactory
/**
* a {@link org.apache.camel.consumer consumer} implementation for apache mina.
*
* @version
*/
public class mina2consumer extends defaultconsumer
private static final transient logger log   loggerfactory getlogger mina2consumer class
private socketaddress address
private ioacceptor acceptor
private mina2configuration configuration
private executorservice workerpool
public mina2consumer final mina2endpoint endpoint  processor processor  throws exception
super endpoint  processor
this configuration   endpoint getconfiguration
//
// all mina2 endpoints are inout. the endpoints are asynchronous.
// endpoints can send "n" messages and receive "m" messages.
//
this getendpoint   setexchangepattern exchangepattern inout
string protocol   configuration getprotocol
if  protocol equals
setupsocketprotocol protocol  configuration
else if  configuration isdatagramprotocol
setupdatagramprotocol protocol  configuration
else if  protocol equals
setupvmprotocol protocol  configuration
@override
protected void dostart   throws exception
super dostart
acceptor sethandler new receivehandler
acceptor bind address
log info    address  acceptor
@override
protected void dostop   throws exception
log info    address  acceptor
acceptor unbind address
super dostop
@override
protected void doshutdown   throws exception
if  workerpool    null
workerpool shutdown
super doshutdown
// implementation methods
//-------------------------------------------------------------------------
protected void setupvmprotocol string uri  mina2configuration configuration
boolean minalogger   configuration isminalogger
list<iofilter> filters   configuration getfilters
address   new vmpipeaddress configuration getport
acceptor   new vmpipeacceptor
// acceptor connectorconfig
configurecodecfactory    acceptor  configuration
if  minalogger
acceptor getfilterchain   addlast    new loggingfilter
appendiofilterstochain filters  acceptor getfilterchain
if  configuration getsslcontextparameters      null
log warn
protected void setupsocketprotocol string uri  mina2configuration configuration  throws exception
log debug
boolean minalogger   configuration isminalogger
list<iofilter> filters   configuration getfilters
address   new inetsocketaddress configuration gethost    configuration getport
final int processorcount   runtime getruntime   availableprocessors     1
acceptor   new niosocketacceptor processorcount
// acceptor connectorconfig
configurecodecfactory    acceptor  configuration
niosocketacceptor  acceptor  setreuseaddress true
acceptor setcloseondeactivation true
// using the unordered thread pool is fine as we dont need ordered invocation in our response handler
workerpool   new unorderedthreadpoolexecutor configuration getmaximumpoolsize
acceptor getfilterchain   addlast    new executorfilter workerpool
if  minalogger
acceptor getfilterchain   addlast    new loggingfilter
appendiofilterstochain filters  acceptor getfilterchain
if  configuration getsslcontextparameters      null
sslfilter filter   new sslfilter configuration getsslcontextparameters   createsslcontext    configuration isautostarttls
filter setuseclientmode true
acceptor getfilterchain   addfirst    filter
protected void configurecodecfactory string type  ioservice service  mina2configuration configuration
if  configuration getcodec      null
addcodecfactory service  configuration getcodec
else if  configuration isallowdefaultcodec
configuredefaultcodecfactory type  service  configuration
protected void configuredefaultcodecfactory string type  ioservice service  mina2configuration configuration
if  configuration istextline
charset charset   getencodingparameter type  configuration
linedelimiter delimiter   getlinedelimiterparameter configuration gettextlinedelimiter
mina2textlinecodecfactory codecfactory   new mina2textlinecodecfactory charset  delimiter
if  configuration getencodermaxlinelength   > 0
codecfactory setencodermaxlinelength configuration getencodermaxlinelength
if  configuration getdecodermaxlinelength   > 0
codecfactory setdecodermaxlinelength configuration getdecodermaxlinelength
addcodecfactory service  codecfactory
if  log isdebugenabled
log debug
new object type  codecfactory  charset  configuration gettextlinedelimiter    delimiter
log debug
codecfactory getencodermaxlinelength    codecfactory getdecodermaxlinelength
else
objectserializationcodecfactory codecfactory   new objectserializationcodecfactory
addcodecfactory service  codecfactory
log debug    type  codecfactory
protected void setupdatagramprotocol string uri  mina2configuration configuration
boolean minalogger   configuration isminalogger
list<iofilter> filters   configuration getfilters
address   new inetsocketaddress configuration gethost    configuration getport
acceptor   new niodatagramacceptor
// acceptor connectorconfig
configuredatagramcodecfactory    acceptor  configuration
acceptor setcloseondeactivation true
// reuse address is default true for datagram
if  minalogger
acceptor getfilterchain   addlast    new loggingfilter
appendiofilterstochain filters  acceptor getfilterchain
if  configuration getsslcontextparameters      null
log warn     configuration getprotocol
/**
* for datagrams the entire message is available as a single iobuffer so lets just pass those around by default
* and try converting whatever they payload is into iobuffer unless some custom converter is specified
*/
protected void configuredatagramcodecfactory final string type  final ioservice service  final mina2configuration configuration
protocolcodecfactory codecfactory   configuration getcodec
if  codecfactory    null
final charset charset   getencodingparameter type  configuration
codecfactory   new mina2udpprotocolcodecfactory this getendpoint   getcamelcontext    charset
if  log isdebugenabled
log debug    new object type  codecfactory  charset
addcodecfactory service  codecfactory
private void addcodecfactory ioservice service  protocolcodecfactory codecfactory
service getfilterchain   addlast    new protocolcodecfilter codecfactory
private static linedelimiter getlinedelimiterparameter mina2textlinedelimiter delimiter
if  delimiter    null
return linedelimiter default
switch  delimiter
case default
return linedelimiter default
case auto
return linedelimiter auto
case unix
return linedelimiter unix
case windows
return linedelimiter windows
case mac
return linedelimiter mac
default
throw new illegalargumentexception     delimiter
private charset getencodingparameter string type  mina2configuration configuration
string encoding   configuration getencoding
if  encoding    null
encoding   charset defaultcharset   name
// set in on configuration so its updated
configuration setencoding encoding
log debug    type  encoding
if   charset issupported encoding
throw new illegalargumentexception     encoding
return charset forname encoding
private void appendiofilterstochain list<iofilter> filters  defaultiofilterchainbuilder filterchain
if  filters    null    filters size   > 0
for  iofilter iofilter   filters
filterchain addlast iofilter getclass   getcanonicalname    iofilter
@override
public mina2endpoint getendpoint
return  mina2endpoint  super getendpoint
public ioacceptor getacceptor
return acceptor
public void setacceptor ioacceptor acceptor
this acceptor   acceptor
/**
* handles consuming messages and replying if the exchange is out capable.
*/
private final class receivehandler extends iohandleradapter
@override
public void exceptioncaught iosession session  throwable cause  throws exception
// close invalid session
if  session    null
log warn
session close true
// must wrap and rethrow since cause can be of throwable and we must only throw exception
throw new camelexception cause
@override
public void messagereceived iosession session  object object  throws exception
// log what we received
if  log isdebugenabled
object in   object
if  in instanceof byte
// byte arrays is not readable so convert to string
in   getendpoint   getcamelcontext   gettypeconverter   convertto string class  in
log debug    in
exchange exchange   getendpoint   createexchange session  object
//set the exchange charset property for converting
if  getendpoint   getconfiguration   getcharsetname      null
exchange setproperty exchange charset_name  iohelper normalizecharset getendpoint   getconfiguration   getcharsetname
try
getprocessor   process exchange
catch  throwable e
getexceptionhandler   handleexception e
//
// if there's a response to send, send it.
//
boolean disconnect   getendpoint   getconfiguration   isdisconnect
object response   null
response   mina2payloadhelper getout getendpoint    exchange
boolean failed   exchange isfailed
if  failed     getendpoint   getconfiguration   istransferexchange
if  exchange getexception      null
response   exchange getexception
else
// failed and no exception, must be a fault
response   exchange getout   getbody
if  response    null
log debug    response
mina2helper writebody session  response  exchange
else
log debug
disconnect   boolean true
// should session be closed after complete?
boolean close
if  exchangehelper isoutcapable exchange
close   exchange getout   getheader mina2constants mina_close_session_when_complete  boolean class
else
close   exchange getin   getheader mina2constants mina_close_session_when_complete  boolean class
// should we disconnect, the header can override the configuration
if  close    null
disconnect   close
if  disconnect
log debug    address
session close true