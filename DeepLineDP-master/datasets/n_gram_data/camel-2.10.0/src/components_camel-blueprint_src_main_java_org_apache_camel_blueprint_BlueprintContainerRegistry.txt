/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel blueprint
import java util linkedhashmap
import java util map
import java util set
import org apache camel nosuchbeanexception
import org apache camel spi registry
import org osgi framework bundle
import org osgi service blueprint container blueprintcontainer
import org osgi service blueprint container nosuchcomponentexception
import org osgi service blueprint reflect beanmetadata
import org osgi service blueprint reflect componentmetadata
import org osgi service blueprint reflect referencemetadata
public class blueprintcontainerregistry implements registry
private final blueprintcontainer blueprintcontainer
public blueprintcontainerregistry blueprintcontainer blueprintcontainer
this blueprintcontainer   blueprintcontainer
public object lookup string name
return blueprintcontainer getcomponentinstance name
public <t> t lookup string name  class<t> type
object answer
try
answer   blueprintcontainer getcomponentinstance name
catch  nosuchcomponentexception e
return null
// just to be safe
if  answer    null
return null
try
return type cast answer
catch  throwable e
string msg       name       blueprintcontainer
answer getclass   getname         type
throw new nosuchbeanexception name  msg  e
public <t> map<string  t> lookupbytype class<t> type
return lookupbytype blueprintcontainer  type
@suppresswarnings
public static <t> map<string  t> lookupbytype blueprintcontainer blueprintcontainer  class<t> type
bundle bundle    bundle  blueprintcontainer getcomponentinstance
map<string  t> objects   new linkedhashmap<string  t>
set<string> ids   blueprintcontainer getcomponentids
for  string id   ids
try
componentmetadata metadata   blueprintcontainer getcomponentmetadata id
class<?> cl   null
if  metadata instanceof beanmetadata
beanmetadata beanmetadata    beanmetadata metadata
cl   bundle loadclass beanmetadata getclassname
else if  metadata instanceof referencemetadata
referencemetadata referencemetadata    referencemetadata metadata
cl   bundle loadclass referencemetadata getinterface
if  cl    null    type isassignablefrom cl
object o   blueprintcontainer getcomponentinstance metadata getid
objects put metadata getid    type cast o
catch  throwable t
// ignore
return objects