/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component restlet
import java io file
import java io inputstream
import java io printwriter
import java io stringwriter
import java util calendar
import java util date
import java util map
import javax xml transform dom domsource
import org apache camel exchange
import org apache camel message
import org apache camel notypeconversionavailableexception
import org apache camel stringsource
import org apache camel wrappedfile
import org apache camel component file genericfile
import org apache camel spi headerfilterstrategy
import org apache camel spi headerfilterstrategyaware
import org apache camel util messagehelper
import org restlet request
import org restlet response
import org restlet data challengeresponse
import org restlet data challengescheme
import org restlet data characterset
import org restlet data form
import org restlet data mediatype
import org restlet data method
import org restlet data preference
import org restlet data status
import org restlet engine http header headerconstants
import org restlet representation filerepresentation
import org restlet representation inputrepresentation
import org slf4j logger
import org slf4j loggerfactory
/**
* default restlet binding implementation
*/
public class defaultrestletbinding implements restletbinding  headerfilterstrategyaware
private static final logger log   loggerfactory getlogger defaultrestletbinding class
private headerfilterstrategy headerfilterstrategy
public void populateexchangefromrestletrequest request request  response response  exchange exchange  throws exception
message inmessage   exchange getin
inmessage setheader restletconstants restlet_request  request
inmessage setheader restletconstants restlet_response  response
// extract headers from restlet
for  map entry<string  object> entry   request getattributes   entryset
if   headerfilterstrategy applyfiltertoexternalheaders entry getkey    entry getvalue    exchange
inmessage setheader entry getkey    entry getvalue
log debug    entry getkey    entry getvalue
// copy query string to header
string query   request getresourceref   getquery
if  query    null
inmessage setheader exchange http_query  query
// copy uri to header
inmessage setheader exchange http_uri  request getresourceref   getidentifier true
// copy http method to header
inmessage setheader exchange http_method  request getmethod   tostring
if   request isentityavailable
return
// only deal with the form if the content type is "application/x-www-form-urlencoded"
if  request getentity   getmediatype      null    request getentity   getmediatype   equals mediatype application_www_form
form form   new form request getentity
for  map entry<string  string> entry   form getvaluesmap   entryset
if  entry getvalue      null
inmessage setbody entry getkey
log debug    entry getvalue
else
if   headerfilterstrategy applyfiltertoexternalheaders entry getkey    entry getvalue    exchange
inmessage setheader entry getkey    entry getvalue
log debug    entry getkey    entry getvalue
else
inmessage setbody request getentity   getstream
public void populaterestletrequestfromexchange request request  exchange exchange
request setreferrerref
string body   exchange getin   getbody string class
form form   new form
// add the body as the key in the form with null value
form add body  null
mediatype mediatype   exchange getin   getheader exchange content_type  mediatype class
if  mediatype    null
mediatype   mediatype application_www_form
log debug    body  mediatype
// login and password are filtered by header filter strategy
string login   exchange getin   getheader restletconstants restlet_login  string class
string password   exchange getin   getheader restletconstants restlet_password  string class
if  login    null    password    null
challengeresponse authentication   new challengeresponse challengescheme http_basic  login  password
request setchallengeresponse authentication
log debug
for  map entry<string  object> entry   exchange getin   getheaders   entryset
if   headerfilterstrategy applyfiltertocamelheaders entry getkey    entry getvalue    exchange
// use forms only for get and post/x-www-form-urlencoded
if  request getmethod      method get     request getmethod      method post    mediatype    mediatype application_www_form
if  entry getkey   startswith
// put the org.restlet headers in attributes
request getattributes   put entry getkey    entry getvalue
else
// put the user stuff in the form
form add entry getkey    entry getvalue   tostring
else
// for non-form post put all the headers in attributes
request getattributes   put entry getkey    entry getvalue
log debug    entry getkey    entry getvalue
log debug    mediatype  body
// only url encode for get and form post
if  request getmethod      method get     request getmethod      method post    mediatype    mediatype application_www_form
request setentity form getwebrepresentation
else
request setentity body  mediatype
mediatype acceptedmediatype   exchange getin   getheader exchange accept_content_type  mediatype class
if  acceptedmediatype    null
request getclientinfo   getacceptedmediatypes   add new preference<mediatype> acceptedmediatype
public void populaterestletresponsefromexchange exchange exchange  response response  throws exception
message out
if  exchange isfailed
// 500 for internal server error which can be overridden by response code in header
response setstatus status valueof 500
if  exchange hasout      exchange getout   isfault
out   exchange getout
else
// print exception as message and stacktrace
exception t   exchange getexception
stringwriter sw   new stringwriter
printwriter pw   new printwriter sw
t printstacktrace pw
response setentity sw tostring    mediatype text_plain
return
else
out   exchange getout
// get content type
mediatype mediatype   out getheader exchange content_type  mediatype class
if  mediatype    null
object body   out getbody
mediatype   mediatype text_plain
if  body instanceof string
mediatype   mediatype text_plain
else if  body instanceof stringsource    body instanceof domsource
mediatype   mediatype text_xml
// get response code
integer responsecode   out getheader exchange http_response_code  integer class
if  responsecode    null
response setstatus status valueof responsecode
// set response body according to the message body
object body   out getbody
if  body instanceof wrappedfile
// grab body from generic file holder
genericfile<?> gf    genericfile<?>  body
body   gf getbody
if  body    null
// empty response
response setentity    mediatype text_plain
else if  body instanceof response
// its already a restlet response, so dont do anything
log debug    body
else if  body instanceof inputstream
response setentity new inputrepresentation out getbody inputstream class   mediatype
else if  body instanceof file
response setentity new filerepresentation out getbody file class   mediatype
else
// fallback and use string
string text   out getbody string class
response setentity text  mediatype
log debug    body
if  exchange getproperty exchange charset_name     null
characterset cs   characterset valueof exchange getproperty exchange charset_name  string class
response getentity   setcharacterset cs
// set headers at the end, as the entity must be set first
for  map entry<string  object> entry   out getheaders   entryset
if   headerfilterstrategy applyfiltertocamelheaders entry getkey    entry getvalue    exchange
setresponseheader exchange  response  entry getkey    entry getvalue
log debug    entry getkey    entry getvalue
public void populateexchangefromrestletresponse exchange exchange  response response  throws exception
for  map entry<string  object> entry   response getattributes   entryset
if   headerfilterstrategy applyfiltertoexternalheaders entry getkey    entry getvalue    exchange
exchange getout   setheader entry getkey    entry getvalue
log debug    entry getkey    entry getvalue
// set response code
int responsecode   response getstatus   getcode
exchange getout   setheader exchange http_response_code  responsecode
// set restlet response as header so end user have access to it if needed
exchange getout   setheader restletconstants restlet_response  response
if  response getentity      null
// get content type
mediatype mediatype   response getentity   getmediatype
if  mediatype    null
exchange getout   setheader exchange content_type  mediatype tostring
// get content text
string text   response getentity   gettext
log debug    text
exchange getout   setbody text
// preserve headers from in by copying any non existing headers
// to avoid overriding existing headers with old values
messagehelper copyheaders exchange getin    exchange getout    false
protected void setresponseheader exchange exchange  org restlet message message  string header  object value  throws notypeconversionavailableexception
// put the header first
message getattributes   put header  value
// special for certain headers
if  message getentity      null
if  header equalsignorecase headerconstants header_expires
if  value instanceof calendar
message getentity   setexpirationdate   calendar  value  gettime
else if  value instanceof date
message getentity   setexpirationdate  date  value
else
date date   exchange getcontext   gettypeconverter   mandatoryconvertto date class  value
message getentity   setexpirationdate date
if  header equalsignorecase headerconstants header_last_modified
if  value instanceof calendar
message getentity   setmodificationdate   calendar  value  gettime
else if  value instanceof date
message getentity   setmodificationdate  date  value
else
date date   exchange getcontext   gettypeconverter   mandatoryconvertto date class  value
message getentity   setmodificationdate date
if  header equalsignorecase headerconstants header_content_length
if  value instanceof long
message getentity   setsize  long  value
else if  value instanceof integer
message getentity   setsize  integer  value
else
long num   exchange getcontext   gettypeconverter   mandatoryconvertto long class  value
message getentity   setsize num
if  header equalsignorecase headerconstants header_content_type
if  value instanceof mediatype
message getentity   setmediatype  mediatype  value
else
string type   value tostring
mediatype media   mediatype valueof type
if  media    null
message getentity   setmediatype media
else
log debug    value
public headerfilterstrategy getheaderfilterstrategy
return headerfilterstrategy
public void setheaderfilterstrategy headerfilterstrategy strategy
headerfilterstrategy   strategy