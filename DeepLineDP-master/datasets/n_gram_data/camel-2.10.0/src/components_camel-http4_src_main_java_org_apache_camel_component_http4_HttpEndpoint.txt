/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component http4
import java net uri
import java net urisyntaxexception
import org apache camel pollingconsumer
import org apache camel producer
import org apache camel component http4 helper httphelper
import org apache camel impl defaultpollingendpoint
import org apache camel spi headerfilterstrategy
import org apache camel spi headerfilterstrategyaware
import org apache camel util objecthelper
import org apache http httphost
import org apache http client httpclient
import org apache http conn clientconnectionmanager
import org apache http conn params connroutepnames
import org apache http impl client defaulthttpclient
import org apache http params basichttpparams
import org apache http params httpparams
import org apache http protocol httpcontext
import org slf4j logger
import org slf4j loggerfactory
/**
* represents a <a href="http://camel.apache.org/http.html">http endpoint</a>
*
* @version
*/
public class httpendpoint extends defaultpollingendpoint implements headerfilterstrategyaware
private static final transient logger log   loggerfactory getlogger httpendpoint class
private headerfilterstrategy headerfilterstrategy   new httpheaderfilterstrategy
private httpbinding binding
private httpcontext httpcontext
private httpcomponent component
private uri httpuri
private httpparams clientparams
private httpclientconfigurer httpclientconfigurer
private clientconnectionmanager clientconnectionmanager
private httpclient httpclient
private boolean throwexceptiononfailure   true
private boolean bridgeendpoint
private boolean matchonuriprefix
private boolean chunked   true
private boolean disablestreamcache
private boolean transferexception
private boolean traceenabled
public httpendpoint
public httpendpoint string endpointuri  httpcomponent component  uri httpuri  throws urisyntaxexception
this endpointuri  component  httpuri  null
public httpendpoint string endpointuri  httpcomponent component  uri httpuri  clientconnectionmanager clientconnectionmanager  throws urisyntaxexception
this endpointuri  component  httpuri  new basichttpparams    clientconnectionmanager  null
public httpendpoint string endpointuri  httpcomponent component  httpparams clientparams
clientconnectionmanager clientconnectionmanager  httpclientconfigurer clientconfigurer  throws urisyntaxexception
this endpointuri  component  null  clientparams  clientconnectionmanager  clientconfigurer
public httpendpoint string endpointuri  httpcomponent component  uri httpuri  httpparams clientparams
clientconnectionmanager clientconnectionmanager  httpclientconfigurer clientconfigurer  throws urisyntaxexception
super endpointuri  component
this component   component
this httpuri   httpuri
this clientparams   clientparams
this httpclientconfigurer   clientconfigurer
this clientconnectionmanager   clientconnectionmanager
public producer createproducer   throws exception
return new httpproducer this
public pollingconsumer createpollingconsumer   throws exception
return new httppollingconsumer this
/**
* gets the httpclient to be used by {@link org.apache.camel.component.http4.httpproducer}
*/
public synchronized httpclient gethttpclient
if  httpclient    null
httpclient   createhttpclient
return httpclient
public void sethttpclient httpclient httpclient
this httpclient   httpclient
/**
* factory method to create a new {@link httpclient} instance
* <p/>
* producers and consumers should use the {@link #gethttpclient()} method instead.
*/
protected httpclient createhttpclient
objecthelper notnull clientparams
objecthelper notnull clientconnectionmanager
httpclient answer   new defaulthttpclient clientconnectionmanager  getclientparams
// configure http proxy from camelcontext
if  objecthelper isnotempty getcamelcontext   getproperties   get        objecthelper isnotempty getcamelcontext   getproperties   get
string host   getcamelcontext   getproperties   get
int port   integer parseint getcamelcontext   getproperties   get
string scheme   getcamelcontext   getproperties   get
// fallback and use either http4 or https4 depending on secure
if  scheme    null
scheme   httphelper issecureconnection getendpointuri    ?
log debug    new object host  port  scheme
httphost proxy   new httphost host  port  scheme
answer getparams   setparameter connroutepnames default_proxy  proxy
httpclientconfigurer configurer   gethttpclientconfigurer
if  configurer    null
configurer configurehttpclient answer
log debug    answer
return answer
public void connect httpconsumer consumer  throws exception
component connect consumer
public void disconnect httpconsumer consumer  throws exception
component disconnect consumer
public boolean islenientproperties
// true to allow dynamic uri options to be configured and passed to external system for eg. the httpproducer
return true
public boolean issingleton
return true
// properties
//-------------------------------------------------------------------------
/**
* provide access to the client parameters used on new {@link httpclient} instances
* used by producers or consumers of this endpoint.
*/
public httpparams getclientparams
return clientparams
/**
* provide access to the client parameters used on new {@link httpclient} instances
* used by producers or consumers of this endpoint.
*/
public void setclientparams httpparams clientparams
this clientparams   clientparams
public httpclientconfigurer gethttpclientconfigurer
return httpclientconfigurer
public httpcontext gethttpcontext
return httpcontext
/**
* register a custom configuration strategy for new {@link httpclient} instances
* created by producers or consumers such as to configure authentication mechanisms etc
*
* @param httpclientconfigurer the strategy for configuring new {@link httpclient} instances
*/
public void sethttpclientconfigurer httpclientconfigurer httpclientconfigurer
this httpclientconfigurer   httpclientconfigurer
public httpbinding getbinding
if  binding    null
binding   new defaulthttpbinding this
return binding
public void setbinding httpbinding binding
this binding   binding
public void sethttpbinding httpbinding binding
this binding   binding
public void sethttpbindingref httpbinding binding
this binding   binding
public void sethttpcontext httpcontext httpcontext
this httpcontext   httpcontext
public string getpath
return httpuri getpath
public int getport
if  httpuri getport       1
if    equals getprotocol         equals getprotocol
return 443
else
return 80
return httpuri getport
public string getprotocol
return httpuri getscheme
public uri gethttpuri
return httpuri
public void sethttpuri uri httpuri
this httpuri   httpuri
public clientconnectionmanager getclientconnectionmanager
return clientconnectionmanager
public void setclientconnectionmanager clientconnectionmanager clientconnectionmanager
this clientconnectionmanager   clientconnectionmanager
public headerfilterstrategy getheaderfilterstrategy
return headerfilterstrategy
public void setheaderfilterstrategy headerfilterstrategy headerfilterstrategy
this headerfilterstrategy   headerfilterstrategy
public boolean isthrowexceptiononfailure
return throwexceptiononfailure
public void setthrowexceptiononfailure boolean throwexceptiononfailure
this throwexceptiononfailure   throwexceptiononfailure
public boolean isbridgeendpoint
return bridgeendpoint
public void setbridgeendpoint boolean bridge
this bridgeendpoint   bridge
public boolean ismatchonuriprefix
return matchonuriprefix
public void setmatchonuriprefix boolean match
this matchonuriprefix   match
public boolean isdisablestreamcache
return this disablestreamcache
public void setdisablestreamcache boolean disable
this disablestreamcache   disable
public boolean ischunked
return this chunked
public void setchunked boolean chunked
this chunked   chunked
public boolean istransferexception
return transferexception
public void settransferexception boolean transferexception
this transferexception   transferexception
public boolean istraceenabled
return this traceenabled
public void settraceenabled boolean traceenabled
this traceenabled   traceenabled