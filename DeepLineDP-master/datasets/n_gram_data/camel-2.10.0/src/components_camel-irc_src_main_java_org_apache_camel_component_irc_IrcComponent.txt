/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component irc
import java util hashmap
import java util map
import org apache camel runtimecamelexception
import org apache camel impl defaultcomponent
import org schwering irc lib ircconnection
import org schwering irc lib irceventlistener
import org schwering irc lib ssl sslircconnection
import org slf4j logger
import org slf4j loggerfactory
/**
* defines the <a href="http://camel.apache.org/irc.html">irc component</a>
*
* @version
*/
public class irccomponent extends defaultcomponent
private static final transient logger log   loggerfactory getlogger irccomponent class
private final map<string  ircconnection> connectioncache   new hashmap<string  ircconnection>
public ircendpoint createendpoint string uri  string remaining  map<string  object> parameters  throws exception
// every endpoint gets it's own configuration
ircconfiguration config   new ircconfiguration
config configure uri
ircendpoint endpoint   new ircendpoint uri  this  config
setproperties endpoint getconfiguration    parameters
return endpoint
public synchronized ircconnection getircconnection ircconfiguration configuration
final ircconnection connection
if  connectioncache containskey configuration getcachekey
if  log isdebugenabled
log debug    configuration gethostname    configuration getnickname
connection   connectioncache get configuration getcachekey
else
connection   createconnection configuration
connectioncache put configuration getcachekey    connection
return connection
protected ircconnection createconnection ircconfiguration configuration
ircconnection conn   null
irceventlistener irclogger
if  configuration getusingssl
if  log isdebugenabled
log debug
new object configuration gethostname    configuration getlistofchannels    configuration getnickname    configuration getusername
if  configuration getsslcontextparameters      null
conn   new camelsslircconnection configuration gethostname    configuration getports    configuration getpassword
configuration getnickname    configuration getusername    configuration getrealname
configuration getsslcontextparameters
else
sslircconnection sconn   new sslircconnection configuration gethostname    configuration getports    configuration getpassword
configuration getnickname    configuration getusername    configuration getrealname
sconn addtrustmanager configuration gettrustmanager
conn   sconn
else
if  log isdebugenabled
log debug
new object configuration gethostname    configuration getlistofchannels    configuration getnickname    configuration getusername
conn   new ircconnection configuration gethostname    configuration getports    configuration getpassword
configuration getnickname    configuration getusername    configuration getrealname
conn setencoding
conn setcolors configuration iscolors
conn setpong true
if  log isdebugenabled
log debug
irclogger   createirclogger configuration gethostname
conn addirceventlistener irclogger
try
conn connect
catch  exception e
throw new runtimecamelexception e
return conn
public void closeconnection string key  ircconnection connection
try
connection doquit
connection close
catch  exception e
log warn    e
@override
protected void dostop   throws exception
// lets use a copy so we can clear the connections eagerly in case of exceptions
map<string  ircconnection> map   new hashmap<string  ircconnection> connectioncache
connectioncache clear
for  map entry<string  ircconnection> entry   map entryset
closeconnection entry getkey    entry getvalue
super dostop
protected irceventlistener createirclogger string hostname
return new irclogger log  hostname
@deprecated
protected string preprocessuri string uri
return ircconfiguration sanitize uri