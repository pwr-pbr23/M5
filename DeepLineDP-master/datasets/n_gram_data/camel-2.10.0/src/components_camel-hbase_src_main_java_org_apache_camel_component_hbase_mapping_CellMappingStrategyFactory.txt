/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component hbase mapping
import java util hashmap
import java util map
import org apache camel message
import org slf4j logger
import org slf4j loggerfactory
public class cellmappingstrategyfactory
public static final string strategy
public static final string strategy_class_name
public static final string header
public static final string body
private static final logger log   loggerfactory getlogger cellmappingstrategyfactory class
private static final map<string  cellmappingstrategy> default_stratigies   new hashmap<string  cellmappingstrategy>
public cellmappingstrategyfactory
default_stratigies put header  new headermappingstrategy
default_stratigies put body  new bodymappingstrategy
public cellmappingstrategy getstrategy message message
cellmappingstrategy strategy   null
//check if strategy has been explicitly set.
if  message getheader strategy     null
strategy   default_stratigies get message getheader strategy  string class
if  strategy    null    message getheader strategy_class_name     null
strategy   loadstrategyfromclassname message getheader strategy_class_name  string class
if  strategy    null
return strategy
//fallback to the default strategy.
return default_stratigies get header
private cellmappingstrategy loadstrategyfromclassname string strategyclassname
classloader classloader   thread currentthread   getcontextclassloader
if  classloader    null
try
class<?> clazz   classloader loadclass strategyclassname
return  cellmappingstrategy  clazz newinstance
catch  throwable e
log warn    strategyclassname
return null