/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component cxf
import java lang reflect method
import java util hashmap
import java util map
import javax xml ws webfault
import org w3c dom element
import org apache camel asynccallback
import org apache camel processor
import org apache camel component cxf common message cxfconstants
import org apache camel impl defaultconsumer
import org apache camel util objecthelper
import org apache cxf continuations continuation
import org apache cxf continuations continuationprovider
import org apache cxf endpoint server
import org apache cxf frontend serverfactorybean
import org apache cxf interceptor fault
import org apache cxf message exchange
import org apache cxf message message
import org apache cxf service invoker invoker
import org apache cxf service model bindingoperationinfo
import org slf4j logger
import org slf4j loggerfactory
/**
* a consumer of exchanges for a service in cxf.  cxfconsumer acts a cxf
* service to receive requests, convert them, and forward them to camel
* route for processing. it is also responsible for converting and sending
* back responses to cxf client.
*
* @version
*/
public class cxfconsumer extends defaultconsumer
private static final logger log   loggerfactory getlogger cxfconsumer class
private server server
public cxfconsumer final cxfendpoint endpoint  processor processor  throws exception
super endpoint  processor
// create server
serverfactorybean svrbean   endpoint createserverfactorybean
svrbean setinvoker new invoker
// we receive a cxf request when this method is called
public object invoke exchange cxfexchange  object o
log trace    cxfexchange
continuation continuation
if   endpoint issynchronous       continuation   getcontinuation cxfexchange      null
log trace
return asyncinvoke cxfexchange  continuation
else
log trace
return syncinvoke cxfexchange
// note this code cannot work with cxf 2.2.x
private object asyncinvoke exchange cxfexchange  final continuation continuation
synchronized  continuation
if  continuation isnew
final org apache camel exchange camelexchange   perparecamelexchange cxfexchange
// now we don't set up the timeout value
log trace    camelexchange getexchangeid
// todo support to set the timeout in case the camel can't send the response back on time.
// the continuation could be called before the suspend is called
continuation suspend 0
// use the asynchronous api to process the exchange
getasyncprocessor   process camelexchange  new asynccallback
public void done boolean donesync
// make sure the continuation resume will not be called before the suspend method in other thread
synchronized  continuation
log trace    camelexchange getexchangeid
// resume processing after both, sync and async callbacks
continuation setobject camelexchange
continuation resume
else if  continuation isresumed
org apache camel exchange camelexchange    org apache camel exchange continuation
getobject
setresponseback cxfexchange  camelexchange
return null
private continuation getcontinuation exchange cxfexchange
continuationprovider provider
continuationprovider cxfexchange getinmessage   get continuationprovider class getname
return provider    null ? null   provider getcontinuation
private object syncinvoke exchange cxfexchange
org apache camel exchange camelexchange   perparecamelexchange cxfexchange
// send camel exchange to the target processor
log trace
try
getprocessor   process camelexchange
catch  exception e
throw new fault e
log trace
setresponseback cxfexchange  camelexchange
// response should have been set in outmessage's content
return null
private org apache camel exchange perparecamelexchange exchange cxfexchange
// get cxf binding
cxfendpoint endpoint    cxfendpoint getendpoint
cxfbinding binding   endpoint getcxfbinding
// create a camel exchange
org apache camel exchange camelexchange   endpoint createexchange
dataformat dataformat   endpoint getdataformat
bindingoperationinfo boi   cxfexchange getbindingoperationinfo
// make sure the "boi" is remained as wrapped in payload mode
if  dataformat    dataformat payload    boi isunwrapped
boi   boi getwrappedoperation
cxfexchange put bindingoperationinfo class  boi
if  boi    null
camelexchange setproperty bindingoperationinfo class getname    boi
log trace    boi
// set data format mode in camel exchange
camelexchange setproperty cxfconstants data_format_property  dataformat
log trace    dataformat class getname    dataformat
camelexchange setproperty message mtom_enabled  string valueof endpoint ismtomenabled
// bind the cxf request into a camel exchange
binding populateexchangefromcxfrequest cxfexchange  camelexchange
// extract the javax.xml.ws header
map<string  object> context   new hashmap<string  object>
binding extractjaxwscontext cxfexchange  context
// put the context into camelexchange
camelexchange setproperty cxfconstants jaxws_context  context
return camelexchange
@suppresswarnings
private void setresponseback exchange cxfexchange  org apache camel exchange camelexchange
cxfendpoint endpoint    cxfendpoint getendpoint
cxfbinding binding   endpoint getcxfbinding
checkfailure camelexchange
binding populatecxfresponsefromexchange camelexchange  cxfexchange
// check failure again as fault could be discovered by converter
checkfailure camelexchange
// copy the headers javax.xml.ws header back
binding copyjaxwscontext cxfexchange   map<string  object> camelexchange getproperty cxfconstants jaxws_context
private void checkfailure org apache camel exchange camelexchange  throws fault
final throwable t
if  camelexchange isfailed
t    camelexchange hasout      camelexchange getout   isfault    ? camelexchange getout
getbody throwable class    camelexchange getexception
if  t instanceof fault
throw  fault t
else if  t    null
// this is not a cxf fault. build the cxf fault manuallly.
fault fault   new fault t
if  fault getmessage      null
// the fault has no message. this is the case if t had
// no message, for
// example was a nullpointerexception.
fault setmessage t getclass   getsimplename
webfault faultannotation   t getclass   getannotation webfault class
object faultinfo   null
try
method method   t getclass   getmethod    new class
faultinfo   method invoke t  new object
catch  exception e
// do nothing here
if  faultannotation    null    faultinfo    null
// t has a jax-ws webfault annotation, which describes
// in detail the web service fault that should be thrown. add the
// detail.
element detail   fault getorcreatedetail
element faultdetails   detail getownerdocument
createelementns faultannotation targetnamespace    faultannotation name
detail appendchild faultdetails
throw fault
server   svrbean create
if  objecthelper isnotempty endpoint getpublishedendpointurl
server getendpoint   getendpointinfo   setproperty    endpoint getpublishedendpointurl
@override
protected void dostart   throws exception
super dostart
server start
@override
protected void dostop   throws exception
server stop
super dostop
public server getserver
return server