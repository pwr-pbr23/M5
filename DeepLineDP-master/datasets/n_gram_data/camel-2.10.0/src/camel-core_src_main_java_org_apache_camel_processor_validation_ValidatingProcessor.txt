/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel processor validation
import java io file
import java io ioexception
import java net url
import java util collections
import javax xml xmlconstants
import javax xml transform result
import javax xml transform source
import javax xml transform dom domresult
import javax xml transform dom domsource
import javax xml transform sax saxresult
import javax xml transform sax saxsource
import javax xml validation schema
import javax xml validation schemafactory
import javax xml validation validator
import org w3c dom ls lsresourceresolver
import org xml sax saxexception
import org xml sax saxparseexception
import org apache camel exchange
import org apache camel processor
/**
* a processor which validates the xml version of the inbound message body
* against some schema either in xsd or relaxng
*
* @version
*/
public class validatingprocessor implements processor
// for lazy creation of the schema
private string schemalanguage   xmlconstants w3c_xml_schema_ns_uri
private schema schema
private source schemasource
private schemafactory schemafactory
private url schemaurl
private file schemafile
private validatorerrorhandler errorhandler   new defaultvalidationerrorhandler
private boolean usedom
private boolean usesharedschema   true
private lsresourceresolver resourceresolver
public void process exchange exchange  throws exception
schema schema
if  isusesharedschema
schema   getschema
else
schema   createschema
validator validator   schema newvalidator
source source
result result
try
if  usedom
source   exchange getin   getbody domsource class
result   new domresult
else
source   exchange getin   getbody saxsource class
result   new saxresult
catch  exception e
throw new noxmlbodyvalidationexception exchange  e
if  source    null
throw new noxmlbodyvalidationexception exchange
// create a new errorhandler and set it on the validator
// must be a local instance to avoid problems with concurrency (to be
// thread safe)
validatorerrorhandler handler   errorhandler getclass   newinstance
validator seterrorhandler handler
try
validator validate source  result
catch  saxparseexception e
// can be thrown for non well formed xml
throw new schemavalidationexception exchange  schema  collections singletonlist e
collections <saxparseexception> emptylist
collections <saxparseexception> emptylist
handler handleerrors exchange  schema  result
public void loadschema   throws exception
// force loading of schema
schema   createschema
// properties
// -----------------------------------------------------------------------
public schema getschema   throws ioexception  saxexception
if  schema    null
schema   createschema
return schema
public void setschema schema schema
this schema   schema
public string getschemalanguage
return schemalanguage
public void setschemalanguage string schemalanguage
this schemalanguage   schemalanguage
public source getschemasource   throws ioexception
if  schemasource    null
schemasource   createschemasource
return schemasource
public void setschemasource source schemasource
this schemasource   schemasource
public url getschemaurl
return schemaurl
public void setschemaurl url schemaurl
this schemaurl   schemaurl
public file getschemafile
return schemafile
public void setschemafile file schemafile
this schemafile   schemafile
public schemafactory getschemafactory
if  schemafactory    null
schemafactory   createschemafactory
return schemafactory
public void setschemafactory schemafactory schemafactory
this schemafactory   schemafactory
public validatorerrorhandler geterrorhandler
return errorhandler
public void seterrorhandler validatorerrorhandler errorhandler
this errorhandler   errorhandler
public boolean isusedom
return usedom
/**
* sets whether domsource and domresult should be used, or saxsource and
* saxresult.
*
* @param usedom
*            true to use dom otherwise sax is used
*/
public void setusedom boolean usedom
this usedom   usedom
public boolean isusesharedschema
return usesharedschema
public void setusesharedschema boolean usesharedschema
this usesharedschema   usesharedschema
public lsresourceresolver getresourceresolver
return resourceresolver
public void setresourceresolver lsresourceresolver resourceresolver
this resourceresolver   resourceresolver
// implementation methods
// -----------------------------------------------------------------------
protected schemafactory createschemafactory
schemafactory factory   schemafactory newinstance schemalanguage
if  getresourceresolver      null
factory setresourceresolver getresourceresolver
return factory
protected source createschemasource   throws ioexception
throw new illegalargumentexception
protected schema createschema   throws saxexception  ioexception
schemafactory factory   getschemafactory
url url   getschemaurl
if  url    null
return factory newschema url
file file   getschemafile
if  file    null
return factory newschema file
return factory newschema getschemasource