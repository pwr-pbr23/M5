/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel util
import java util eventobject
import java util list
import org apache camel camelcontext
import org apache camel endpoint
import org apache camel exchange
import org apache camel processor
import org apache camel route
import org apache camel statefulservice
import org apache camel spi eventfactory
import org apache camel spi eventnotifier
import org slf4j logger
import org slf4j loggerfactory
/**
* helper for easily sending event notifications in a single line of code
*
* @version
*/
public final class eventhelper
private static final logger log   loggerfactory getlogger eventhelper class
private eventhelper
public static void notifycamelcontextstarting camelcontext context
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorecamelcontextevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createcamelcontextstartingevent context
if  event    null
return
donotifyevent notifier  event
public static void notifycamelcontextstarted camelcontext context
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorecamelcontextevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createcamelcontextstartedevent context
if  event    null
return
donotifyevent notifier  event
public static void notifycamelcontextstartupfailed camelcontext context  throwable cause
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorecamelcontextevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createcamelcontextstartupfailureevent context  cause
if  event    null
return
donotifyevent notifier  event
public static void notifycamelcontextstopping camelcontext context
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorecamelcontextevents
return
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createcamelcontextstoppingevent context
if  event    null
return
donotifyevent notifier  event
public static void notifycamelcontextstopped camelcontext context
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorecamelcontextevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createcamelcontextstoppedevent context
if  event    null
return
donotifyevent notifier  event
public static void notifycamelcontextstopfailed camelcontext context  throwable cause
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorecamelcontextevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createcamelcontextstopfailureevent context  cause
if  event    null
return
donotifyevent notifier  event
public static void notifyservicestopfailure camelcontext context  object service  throwable cause
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignoreserviceevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createservicestopfailureevent context  service  cause
if  event    null
return
donotifyevent notifier  event
public static void notifyservicestartupfailure camelcontext context  object service  throwable cause
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignoreserviceevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createservicestartupfailureevent context  service  cause
if  event    null
return
donotifyevent notifier  event
public static void notifyroutestarted camelcontext context  route route
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorerouteevents
return
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createroutestartedevent route
if  event    null
return
donotifyevent notifier  event
public static void notifyroutestopped camelcontext context  route route
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorerouteevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createroutestoppedevent route
if  event    null
return
donotifyevent notifier  event
public static void notifyexchangecreated camelcontext context  exchange exchange
if  exchange getproperty exchange notify_event  false  boolean class
// do not generate events for an notify event
return
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignoreexchangeevents      notifier isignoreexchangecreatedevent
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createexchangecreatedevent exchange
if  event    null
return
donotifyevent notifier  event
public static void notifyexchangedone camelcontext context  exchange exchange
if  exchange getproperty exchange notify_event  false  boolean class
// do not generate events for an notify event
return
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignoreexchangeevents      notifier isignoreexchangecompletedevent
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createexchangecompletedevent exchange
if  event    null
return
donotifyevent notifier  event
public static void notifyexchangefailed camelcontext context  exchange exchange
if  exchange getproperty exchange notify_event  false  boolean class
// do not generate events for an notify event
return
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignoreexchangeevents      notifier isignoreexchangefailedevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createexchangefailedevent exchange
if  event    null
return
donotifyevent notifier  event
public static void notifyexchangefailurehandled camelcontext context  exchange exchange  processor failurehandler
boolean deadletterchannel
if  exchange getproperty exchange notify_event  false  boolean class
// do not generate events for an notify event
return
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignoreexchangeevents      notifier isignoreexchangefailedevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createexchangefailurehandledevent exchange  failurehandler  deadletterchannel
if  event    null
return
donotifyevent notifier  event
public static void notifyexchangeredelivery camelcontext context  exchange exchange  int attempt
if  exchange getproperty exchange notify_event  false  boolean class
// do not generate events for an notify event
return
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignoreexchangeevents      notifier isignoreexchangefailedevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createexchangeredeliveryevent exchange  attempt
if  event    null
return
donotifyevent notifier  event
public static void notifyexchangesending camelcontext context  exchange exchange  endpoint endpoint
if  exchange getproperty exchange notify_event  false  boolean class
// do not generate events for an notify event
return
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignoreexchangeevents      notifier isignoreexchangesentevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createexchangesendingevent exchange  endpoint
if  event    null
return
donotifyevent notifier  event
public static void notifyexchangesent camelcontext context  exchange exchange  endpoint endpoint  long timetaken
if  exchange getproperty exchange notify_event  false  boolean class
// do not generate events for an notify event
return
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignoreexchangeevents      notifier isignoreexchangesentevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createexchangesentevent exchange  endpoint  timetaken
if  event    null
return
donotifyevent notifier  event
public static void notifycamelcontextsuspending camelcontext context
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorecamelcontextevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createcamelcontextsuspendingevent context
if  event    null
return
donotifyevent notifier  event
public static void notifycamelcontextsuspended camelcontext context
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorecamelcontextevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createcamelcontextsuspendedevent context
if  event    null
return
donotifyevent notifier  event
public static void notifycamelcontextresuming camelcontext context
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorecamelcontextevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createcamelcontextresumingevent context
if  event    null
return
donotifyevent notifier  event
public static void notifycamelcontextresumed camelcontext context
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorecamelcontextevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createcamelcontextresumedevent context
if  event    null
return
donotifyevent notifier  event
public static void notifycamelcontextresumefailed camelcontext context  throwable cause
list<eventnotifier> notifiers   context getmanagementstrategy   geteventnotifiers
if  notifiers    null    notifiers isempty
return
for  eventnotifier notifier   notifiers
if  notifier isignorecamelcontextevents
continue
eventfactory factory   context getmanagementstrategy   geteventfactory
if  factory    null
return
eventobject event   factory createcamelcontextresumefailureevent context  cause
if  event    null
return
donotifyevent notifier  event
private static void donotifyevent eventnotifier notifier  eventobject event
// only notify if notifier is started
boolean started   true
if  notifier instanceof statefulservice
started     statefulservice  notifier  isstarted
if   started
log debug    event  notifier
return
if   notifier isenabled event
log trace    event
return
try
notifier notify event
catch  throwable e
log warn     event      e