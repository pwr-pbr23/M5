/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import java util list
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmltransient
import javax xml bind annotation xmltype
import org apache camel asynccallback
import org apache camel exchange
import org apache camel processor
import org apache camel processor loadbalancer loadbalancer
import org apache camel spi routecontext
import org apache camel util asyncprocessorhelper
import org apache camel util introspectionsupport
import org apache camel util objecthelper
/**
* represents an xml &lt;loadbalancer/&gt; element
*/
@xmltype name
@xmlaccessortype xmlaccesstype field
public class loadbalancerdefinition extends identifiedtype implements loadbalancer
@xmltransient
private loadbalancer loadbalancer
@xmltransient
private string loadbalancertypename
public loadbalancerdefinition
public loadbalancerdefinition loadbalancer loadbalancer
this loadbalancer   loadbalancer
protected loadbalancerdefinition string loadbalancertypename
this loadbalancertypename   loadbalancertypename
public static loadbalancer getloadbalancer routecontext routecontext  loadbalancerdefinition type  string ref
if  type    null
objecthelper notnull ref
loadbalancer loadbalancer   routecontext lookup ref  loadbalancer class
if  loadbalancer instanceof loadbalancerdefinition
type    loadbalancerdefinition  loadbalancer
else
return loadbalancer
return type getloadbalancer routecontext
/**
* sets a named property on the data format instance using introspection
*/
protected void setproperty object bean  string name  object value
try
introspectionsupport setproperty bean  name  value
catch  exception e
throw new illegalargumentexception     name       bean       e  e
/**
* allows derived classes to customize the load balancer
*/
protected void configureloadbalancer loadbalancer loadbalancer
public loadbalancer getloadbalancer routecontext routecontext
if  loadbalancer    null
loadbalancer   createloadbalancer routecontext
objecthelper notnull loadbalancer
configureloadbalancer loadbalancer
return loadbalancer
/**
* factory method to create the load balancer instance
*/
protected loadbalancer createloadbalancer routecontext routecontext
if  loadbalancertypename    null
class<?> type   routecontext getcamelcontext   getclassresolver   resolveclass loadbalancertypename
if  type    null
throw new illegalargumentexception     loadbalancertypename
return  loadbalancer  objecthelper newinstance type
return null
public void addprocessor processor processor
objecthelper notnull loadbalancer     this
loadbalancer addprocessor processor
public list<processor> getprocessors
objecthelper notnull loadbalancer     this
return loadbalancer getprocessors
public void removeprocessor processor processor
objecthelper notnull loadbalancer     this
loadbalancer removeprocessor processor
public void process exchange exchange  throws exception
objecthelper notnull loadbalancer     this
loadbalancer process exchange
public boolean process exchange exchange  final asynccallback callback
objecthelper notnull loadbalancer
return asyncprocessorhelper process loadbalancer  exchange  new asynccallback
public void done boolean donesync
// only handle the async case
if  donesync
return
else
callback done false
@override
public string tostring
if  loadbalancer    null
return loadbalancer tostring
else
return loadbalancertypename