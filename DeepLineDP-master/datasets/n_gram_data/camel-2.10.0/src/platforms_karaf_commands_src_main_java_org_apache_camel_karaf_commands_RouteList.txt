/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel karaf commands
import java util linkedlist
import java util list
import org apache camel camelcontext
import org apache camel model routedefinition
import org apache felix gogo commands argument
import org apache felix gogo commands command
import org apache karaf shell console osgicommandsupport
/**
* command to list all camel routes.
*/
@command scope      name      description
public class routelist extends osgicommandsupport
protected static final string header_format
protected static final string output_format
protected static final string unknown
protected static final string route_id
protected static final string context_id
protected static final string status
@argument index   0  name      description      required   false  multivalued   false
string name
private camelcontroller camelcontroller
public void setcamelcontroller camelcontroller camelcontroller
this camelcontroller   camelcontroller
protected object doexecute   throws exception
system out println string format header_format  route_id  context_id  status
list<camelcontext> camelcontexts   new linkedlist<camelcontext>
if  name    null    camelcontroller getcamelcontext name     null
camelcontexts add camelcontroller getcamelcontext name
else
camelcontexts   camelcontroller getcamelcontexts
for  camelcontext camelcontext   camelcontexts
list<routedefinition> routedefinitions   camelcontroller getroutedefinitions camelcontext getname
if  routedefinitions    null     routedefinitions isempty
for  routedefinition routedefinition   routedefinitions
string contextname   camelcontext getname
string status   camelcontext getroutestatus routedefinition getid    name
system out println string format output_format  routedefinition getid    contextname  status
return null