/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component timer
import java util date
import java util timer
import java util timertask
import java util concurrent atomic atomiclong
import org apache camel exchange
import org apache camel processor
import org apache camel impl defaultconsumer
import org slf4j logger
import org slf4j loggerfactory
/**
* the timer consumer.
*
* @version
*/
public class timerconsumer extends defaultconsumer
private static final transient logger log   loggerfactory getlogger timerconsumer class
private final timerendpoint endpoint
private volatile timertask task
public timerconsumer timerendpoint endpoint  processor processor
super endpoint  processor
this endpoint   endpoint
@override
protected void dostart   throws exception
task   new timertask
// counter
private final atomiclong counter   new atomiclong
@override
public void run
if   istaskrunallowed
// do not run timer task as it was not allowed
return
try
long count   counter incrementandget
boolean fire   endpoint getrepeatcount   <  0    count <  endpoint getrepeatcount
if  fire
sendtimerexchange count
else
// no need to fire anymore as we exceeded repeat count
log debug    endpoint gettimername    endpoint getrepeatcount
cancel
catch  throwable e
// catch all to avoid the jvm closing the thread and not firing again
log warn    e
timer timer   endpoint gettimer
configuretask task  timer
@override
protected void dostop   throws exception
if  task    null
task cancel
task   null
/**
* whether the timer task is allow to run or not
*/
protected boolean istaskrunallowed
// only allow running the timer task if we can run and are not suspended
return isrunallowed       issuspended
protected void configuretask timertask task  timer timer
if  endpoint isfixedrate
if  endpoint gettime      null
timer scheduleatfixedrate task  endpoint gettime    endpoint getperiod
else
timer scheduleatfixedrate task  endpoint getdelay    endpoint getperiod
else
if  endpoint gettime      null
if  endpoint getperiod   > 0
timer schedule task  endpoint gettime    endpoint getperiod
else
timer schedule task  endpoint gettime
else
if  endpoint getperiod   > 0
timer schedule task  endpoint getdelay    endpoint getperiod
else
timer schedule task  endpoint getdelay
protected void sendtimerexchange long counter
exchange exchange   endpoint createexchange
exchange setproperty exchange timer_counter  counter
exchange setproperty exchange timer_name  endpoint gettimername
exchange setproperty exchange timer_time  endpoint gettime
exchange setproperty exchange timer_period  endpoint getperiod
date now   new date
exchange setproperty exchange timer_fired_time  now
// also set now on in header with same key as quartz to be consistent
exchange getin   setheader    now
log trace    endpoint gettimername    counter
try
getprocessor   process exchange
// log exception if an exception occurred and was not handled
if  exchange getexception      null
getexceptionhandler   handleexception    exchange  exchange getexception
catch  exception e
getexceptionhandler   handleexception    exchange  exchange getexception