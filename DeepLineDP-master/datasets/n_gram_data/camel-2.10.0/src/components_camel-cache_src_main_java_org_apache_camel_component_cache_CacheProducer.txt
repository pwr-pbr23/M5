/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component cache
import java io inputstream
import java io serializable
import java util map
import net sf ehcache cacheexception
import net sf ehcache ehcache
import net sf ehcache element
import org apache camel exchange
import org apache camel notypeconversionavailableexception
import org apache camel impl defaultproducer
import org slf4j logger
import org slf4j loggerfactory
public class cacheproducer extends defaultproducer
private static final transient logger log   loggerfactory getlogger cacheproducer class
private cacheconfiguration config
private ehcache cache
public cacheproducer cacheendpoint endpoint  cacheconfiguration config  throws exception
super endpoint
this config   config
@override
protected void dostart   throws exception
super dostart
@override
public cacheendpoint getendpoint
return  cacheendpoint  super getendpoint
public void process exchange exchange  throws exception
log trace    config getcachename
cache   getendpoint   initializecache
map<string  object> headers   exchange getin   getheaders
string key    headers containskey cacheconstants cache_key   ?  string  headers
get cacheconstants cache_key    getendpoint   getkey
string operation    headers containskey cacheconstants cache_operation   ?  string  headers
get cacheconstants cache_operation    getendpoint   getoperation
if  operation    null
throw new cacheexception cacheconstants cache_operation
if   key    null       checkisequal operation  cacheconstants cache_operation_deleteall
throw new cacheexception cacheconstants cache_key
performcacheoperation exchange  operation  key
//cleanup the cache headers
exchange getin   removeheader cacheconstants cache_key
exchange getin   removeheader cacheconstants cache_operation
private void performcacheoperation exchange exchange  string operation  string key  throws exception
object element
if  checkisequal operation  cacheconstants cache_operation_url_add
log debug    key
element   createelementfrombody exchange  cacheconstants cache_operation_add
cache put new element key  element
else if  checkisequal operation  cacheconstants cache_operation_url_update
log debug    key
element   createelementfrombody exchange  cacheconstants cache_operation_update
cache put new element key  element
else if  checkisequal operation  cacheconstants cache_operation_url_deleteall
log debug
cache removeall
else if  checkisequal operation  cacheconstants cache_operation_url_delete
log debug    key
cache remove key
else if  checkisequal operation  cacheconstants cache_operation_url_get
log debug    key
if  cache iskeyincache key     cache get key     null
exchange getin   setheader cacheconstants cache_element_was_found  true
exchange getin   setbody cache get key  getvalue
else
exchange getin   removeheader cacheconstants cache_element_was_found
else if  checkisequal operation  cacheconstants cache_operation_url_check
log debug    key
if  cache iskeyincache key
exchange getin   setheader cacheconstants cache_element_was_found  true
else
exchange getin   removeheader cacheconstants cache_element_was_found
else
throw new cacheexception cacheconstants cache_operation       operation
private boolean checkisequal string operation  string constant
return operation equalsignorecase constant
operation equalsignorecase cacheconstants cache_header_prefix   constant
private object createelementfrombody exchange exchange  string cacheoperation  throws notypeconversionavailableexception
object element
object body   exchange getin   getbody
if  body    null
throw new cacheexception     cacheoperation
else if  body instanceof serializable
element   body
else
inputstream is   exchange getcontext   gettypeconverter   mandatoryconvertto inputstream class  body
// read inputstream into a byte[] buffer
element   exchange getcontext   gettypeconverter   mandatoryconvertto byte class  is
return element