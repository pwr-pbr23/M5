/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component file remote
import java util list
import com jcraft jsch channelsftp
import org apache camel processor
import org apache camel component file genericfile
import org apache camel util fileutil
import org apache camel util objecthelper
/**
* secure ftp consumer
*/
public class sftpconsumer extends remotefileconsumer<channelsftp lsentry>
private string endpointpath
public sftpconsumer remotefileendpoint<channelsftp lsentry> endpoint  processor processor  remotefileoperations<channelsftp lsentry> operations
super endpoint  processor  operations
this endpointpath   endpoint getconfiguration   getdirectory
@override
protected boolean polldirectory string filename  list<genericfile<channelsftp lsentry>> filelist  int depth
string currentdir   null
if  isstepwise
// must remember current dir so we stay in that directory after the poll
currentdir   operations getcurrentdirectory
// strip trailing slash
filename   fileutil striptrailingseparator filename
boolean answer   dopolldirectory filename  null  filelist  depth
if  currentdir    null
operations changecurrentdirectory currentdir
return answer
protected boolean pollsubdirectory string absolutepath  string dirname  list<genericfile<channelsftp lsentry>> filelist  int depth
boolean answer   dopolldirectory absolutepath  dirname  filelist  depth
// change back to parent directory when finished polling sub directory
if  isstepwise
operations changetoparentdirectory
return answer
protected boolean dopolldirectory string absolutepath  string dirname  list<genericfile<channelsftp lsentry>> filelist  int depth
log trace    absolutepath  dirname
depth
// remove trailing /
dirname   fileutil striptrailingseparator dirname
// compute dir depending on stepwise is enabled or not
string dir
if  isstepwise
dir   objecthelper isnotempty dirname  ? dirname   absolutepath
operations changecurrentdirectory dir
else
dir   absolutepath
log trace    dir
list<channelsftp lsentry> files
if  isstepwise
files   operations listfiles
else
files   operations listfiles dir
if  files    null    files isempty
// no files in this directory to poll
log trace    dir
return true
else
// we found some files
log trace    files size    dir
for  channelsftp lsentry file   files
// check if we can continue polling in files
if   canpollmorefiles filelist
return false
if  file getattrs   isdir
remotefile<channelsftp lsentry> remote   asremotefile absolutepath  file
if  endpoint isrecursive      isvalidfile remote  true     depth < endpoint getmaxdepth
// recursive scan and add the sub files and folders
string subdirectory   file getfilename
string path   absolutepath       subdirectory
boolean canpollmore   pollsubdirectory path  subdirectory  filelist  depth
if   canpollmore
return false
// we cannot use file.getattrs().islink on windows, so we dont invoke the method
// just assuming its a file we should poll
else
remotefile<channelsftp lsentry> remote   asremotefile absolutepath  file
if  isvalidfile remote  false     depth >  endpoint getmindepth
if  isinprogress remote
if  log istraceenabled
log trace    remote getfilename
else
// matched file so add
filelist add remote
return true
private remotefile<channelsftp lsentry> asremotefile string absolutepath  channelsftp lsentry file
remotefile<channelsftp lsentry> answer   new remotefile<channelsftp lsentry>
answer setendpointpath endpointpath
answer setfile file
answer setfilenameonly file getfilename
answer setfilelength file getattrs   getsize
answer setlastmodified file getattrs   getmtime     1000l
answer sethostname   remotefileconfiguration  endpoint getconfiguration    gethost
answer setdirectory file getattrs   isdir
// absolute or relative path
boolean absolute   fileutil hasleadingseparator absolutepath
answer setabsolute absolute
// create a pseudo absolute name
string dir   fileutil striptrailingseparator absolutepath
string absolutefilename   fileutil stripleadingseparator dir       file getfilename
// if absolute start with a leading separator otherwise let it be relative
if  absolute
absolutefilename       absolutefilename
answer setabsolutefilepath absolutefilename
// the relative filename, skip the leading endpoint configured path
string relativepath   objecthelper after absolutefilename  endpointpath
// skip trailing /
relativepath   fileutil stripleadingseparator relativepath
answer setrelativefilepath relativepath
// the file name should be the relative path
answer setfilename answer getrelativefilepath
return answer
private boolean isstepwise
remotefileconfiguration config    remotefileconfiguration  endpoint getconfiguration
return config isstepwise