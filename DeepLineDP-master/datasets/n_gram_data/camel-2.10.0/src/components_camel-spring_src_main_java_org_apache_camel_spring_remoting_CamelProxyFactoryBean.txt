/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel spring remoting
import org apache camel camelcontext
import org apache camel camelcontextaware
import org apache camel endpoint
import org apache camel failedtocreateproducerexception
import org apache camel producer
import org apache camel component bean proxyhelper
import org apache camel spring util camelcontextresolverhelper
import org apache camel util servicehelper
import org springframework beans beansexception
import org springframework beans factory disposablebean
import org springframework beans factory factorybean
import org springframework context applicationcontext
import org springframework context applicationcontextaware
import org springframework remoting support urlbasedremoteaccessor
/**
* a {@link factorybean} to create a proxy to a a camel pojo endpoint.
*/
public class camelproxyfactorybean extends urlbasedremoteaccessor implements factorybean<object>  camelcontextaware  disposablebean  applicationcontextaware
private string serviceref
private camelcontext camelcontext
private string camelcontextid
private applicationcontext applicationcontext
private endpoint endpoint
private object serviceproxy
private producer producer
@override
public void afterpropertiesset
if  endpoint    null
if  camelcontext    null    camelcontextid    null
camelcontext   camelcontextresolverhelper getcamelcontextwithid applicationcontext  camelcontextid
if  camelcontext    null
throw new illegalargumentexception
if  getserviceurl      null    getserviceref      null
throw new illegalargumentexception
// lookup endpoint or we have the url for it
if  getserviceref      null
endpoint   camelcontext getregistry   lookup getserviceref    endpoint class
else
endpoint   camelcontext getendpoint getserviceurl
if  endpoint    null
throw new illegalargumentexception     getserviceurl
try
producer   endpoint createproducer
servicehelper startservice producer
serviceproxy   proxyhelper createproxy endpoint  producer  getserviceinterface
catch  exception e
throw new failedtocreateproducerexception endpoint  e
public void destroy   throws exception
servicehelper stopservice producer
public class<?> getserviceinterface
return super getserviceinterface
public string getserviceurl
return super getserviceurl
public object getobject   throws exception
return serviceproxy
public class<?> getobjecttype
return getserviceinterface
public boolean issingleton
return true
public string getserviceref
return serviceref
public void setserviceref string serviceref
this serviceref   serviceref
public endpoint getendpoint
return endpoint
public void setendpoint endpoint endpoint
this endpoint   endpoint
public camelcontext getcamelcontext
return camelcontext
public void setcamelcontext camelcontext camelcontext
this camelcontext   camelcontext
public void setcamelcontextid string contextid
this camelcontextid   contextid
public void setapplicationcontext applicationcontext applicationcontext  throws beansexception
this applicationcontext   applicationcontext