/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component mybatis
import java util iterator
import org apache camel exchange
import org apache camel message
import org apache camel impl defaultproducer
import org apache camel util exchangehelper
import org apache camel util objecthelper
import org apache ibatis session sqlsession
import org apache ibatis session sqlsessionfactory
import org slf4j logger
import org slf4j loggerfactory
/**
* @version
*/
public class mybatisproducer extends defaultproducer
private static final logger log   loggerfactory getlogger mybatisproducer class
private string statement
private mybatisendpoint endpoint
public mybatisproducer mybatisendpoint endpoint
super endpoint
this endpoint   endpoint
this statement   endpoint getstatement
public void process exchange exchange  throws exception
switch  endpoint getstatementtype
case selectone
doselectone exchange   break
case selectlist
doselectlist exchange   break
case insert
doinsert exchange   break
case insertlist
doinsertlist exchange   break
case update
doupdate exchange   break
case delete
dodelete exchange   break
default
throw new illegalargumentexception     endpoint getstatementtype
private void doselectone exchange exchange  throws exception
sqlsessionfactory client   endpoint getsqlsessionfactory
sqlsession session   client opensession
try
object result
object in   exchange getin   getbody
if  in    null
log trace    in  statement
result   session selectone statement  in
else
log trace    statement
result   session selectone statement
doprocessresult exchange  result
finally
session close
private void doselectlist exchange exchange  throws exception
sqlsessionfactory client   endpoint getsqlsessionfactory
sqlsession session   client opensession
try
object result
object in   exchange getin   getbody
if  in    null
log trace    in  statement
result   session selectlist statement  in
else
log trace    statement
result   session selectlist statement
doprocessresult exchange  result
finally
session close
private void doinsert exchange exchange  throws exception
sqlsessionfactory client   endpoint getsqlsessionfactory
sqlsession session   client opensession
try
object result
object in   exchange getin   getbody
if  in    null
// lets handle arrays or collections of objects
iterator<?> iter   objecthelper createiterator in
while  iter hasnext
object value   iter next
log trace    value  statement
result   session insert statement  value
doprocessresult exchange  result
else
log trace    statement
result   session insert statement
doprocessresult exchange  result
finally
try
session commit
finally
session close
private void doinsertlist exchange exchange  throws exception
sqlsessionfactory client   endpoint getsqlsessionfactory
sqlsession session   client opensession
try
object result
object in   exchange getin   getbody
if  in    null
// just pass in the body as object and allow mybatis to iterate using its own foreach statement
log trace    in  statement
result   session insert statement  in
doprocessresult exchange  result
else
log trace    statement
result   session insert statement
doprocessresult exchange  result
finally
try
session commit
finally
session close
private void doupdate exchange exchange  throws exception
sqlsessionfactory client   endpoint getsqlsessionfactory
sqlsession session   client opensession
try
object result
object in   exchange getin   getbody
if  in    null
// lets handle arrays or collections of objects
iterator<?> iter   objecthelper createiterator in
while  iter hasnext
object value   iter next
log trace    value  statement
result   session update statement  value
doprocessresult exchange  result
else
log trace    statement
result   session update statement
doprocessresult exchange  result
finally
try
session commit
finally
session close
private void dodelete exchange exchange  throws exception
sqlsessionfactory client   endpoint getsqlsessionfactory
sqlsession session   client opensession
try
object result
object in   exchange getin   getbody
if  in    null
// lets handle arrays or collections of objects
iterator<?> iter   objecthelper createiterator in
while  iter hasnext
object value   iter next
log trace    value  statement
result   session delete statement  value
doprocessresult exchange  result
else
log trace    statement
result   session delete statement
doprocessresult exchange  result
finally
try
session commit
finally
session close
private void doprocessresult exchange exchange  object result
if  endpoint getstatementtype      statementtype selectlist    endpoint getstatementtype      statementtype selectone
message answer   exchange getin
if  exchangehelper isoutcapable exchange
answer   exchange getout
// preserve headers
answer getheaders   putall exchange getin   getheaders
// set the result as body for insert
answer setbody result
answer setheader mybatisconstants mybatis_result  result
answer setheader mybatisconstants mybatis_statement_name  statement
else
message msg   exchange getin
msg setheader mybatisconstants mybatis_result  result
msg setheader mybatisconstants mybatis_statement_name  statement