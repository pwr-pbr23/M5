/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component ahc helper
import java io ioexception
import java io inputstream
import java io objectinputstream
import java io objectoutputstream
import java io outputstream
import java io unsupportedencodingexception
import java net uri
import java net urisyntaxexception
import org apache camel exchange
import org apache camel runtimeexchangeexception
import org apache camel component ahc ahcendpoint
import org apache camel util iohelper
import org apache camel util urisupport
/**
*
*/
public final class ahchelper
private ahchelper
// helper class
/**
* writes the given object as response body to the output stream
*
* @param stream output stream
* @param target   object to write
* @throws java.io.ioexception is thrown if error writing
*/
public static void writeobjecttostream outputstream stream  object target  throws ioexception
objectoutputstream oos   new objectoutputstream stream
oos writeobject target
oos flush
iohelper close oos
/**
* deserializes the input stream to a java object
*
* @param is input stream for the java object
* @return the java object, or <tt>null</tt> if input stream was <tt>null</tt>
* @throws classnotfoundexception is thrown if class not found
* @throws ioexception can be thrown
*/
public static object deserializejavaobjectfromstream inputstream is  throws classnotfoundexception  ioexception
if  is    null
return null
object answer   null
objectinputstream ois   new objectinputstream is
try
answer   ois readobject
finally
iohelper close ois
return answer
public static void setcharsetfromcontenttype string contenttype  exchange exchange
if  contenttype    null
// find the charset and set it to the exchange
int index   contenttype indexof
if  index > 0
string charset   contenttype substring index   8
exchange setproperty exchange charset_name  iohelper normalizecharset charset
/**
* creates the url to invoke.
*
* @param exchange the exchange
* @param endpoint the endpoint
* @return the url to invoke
* @throws java.net.urisyntaxexception is thrown if the url is invalid
* @throws unsupportedencodingexception
*/
public static string createurl exchange exchange  ahcendpoint endpoint  throws urisyntaxexception  unsupportedencodingexception
string url   docreateurl exchange  endpoint
return urisupport normalizeuri url
private static string docreateurl exchange exchange  ahcendpoint endpoint
string uri   null
if    endpoint isbridgeendpoint
uri   exchange getin   getheader exchange http_uri  string class
if  uri    null
uri   endpoint gethttpuri   toasciistring
// resolve placeholders in uri
try
uri   exchange getcontext   resolvepropertyplaceholders uri
catch  exception e
throw new runtimeexchangeexception     uri  exchange  e
// append http_path to http_uri if it is provided in the header
string path   exchange getin   getheader exchange http_path  string class
if  path    null
if  path startswith
uri baseuri
string baseuristring   exchange getin   getheader exchange http_base_uri  string class
try
if  baseuristring    null
if  exchange getfromendpoint      null
baseuristring   exchange getfromendpoint   getendpointuri
else
// will set a default one for it
baseuristring
baseuri   new uri baseuristring
string basepath   baseuri getrawpath
if  path startswith basepath
path   path substring basepath length
if  path startswith
path   path substring 1
else
throw new runtimeexchangeexception    exchange
catch  throwable t
throw new runtimeexchangeexception     t getmessage    exchange  t
if  path length   > 0
// make sure that there is exactly one "/" between http_uri and
// http_path
if   uri endswith
uri   uri
uri   uri concat path
return uri