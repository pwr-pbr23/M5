/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel management
import java io ioexception
import java lang management managementfactory
import java net inetaddress
import java net unknownhostexception
import java rmi remoteexception
import java rmi registry locateregistry
import java util hashmap
import java util list
import java util map
import java util concurrent executorservice
import javax management jmexception
import javax management mbeanserver
import javax management mbeanserverfactory
import javax management notcompliantmbeanexception
import javax management objectinstance
import javax management objectname
import javax management remote jmxconnectorserver
import javax management remote jmxconnectorserverfactory
import javax management remote jmxserviceurl
import org apache camel camelcontext
import org apache camel camelcontextaware
import org apache camel spi managementagent
import org apache camel spi managementmbeanassembler
import org apache camel support servicesupport
import org apache camel util objecthelper
import org slf4j logger
import org slf4j loggerfactory
/**
* default implementation of the camel jmx service agent
*/
public class defaultmanagementagent extends servicesupport implements managementagent  camelcontextaware
public static final string default_domain
public static final string default_host
public static final int default_registry_port   1099
public static final int default_connection_port    1
public static final string default_service_url_path
private static final transient logger log   loggerfactory getlogger defaultmanagementagent class
private camelcontext camelcontext
private executorservice executorservice
private mbeanserver server
// need a name -> actual name mapping as some servers changes the names (suc as websphere)
private final map<objectname  objectname> mbeansregistered   new hashmap<objectname  objectname>
private jmxconnectorserver cs
private integer registryport
private integer connectorport
private string mbeanserverdefaultdomain
private string mbeanobjectdomainname
private string serviceurlpath
private boolean useplatformmbeanserver   true
private boolean createconnector
private boolean onlyregisterprocessorwithcustomid
private boolean registeralways
private boolean registernewroutes   true
public defaultmanagementagent
public defaultmanagementagent camelcontext camelcontext
this camelcontext   camelcontext
protected void finalizesettings
// todo: system properties ought to take precedence, over configured options
if  registryport    null
registryport   integer getinteger jmxsystempropertykeys registry_port  default_registry_port
if  connectorport    null
connectorport   integer getinteger jmxsystempropertykeys connector_port  default_connection_port
if  mbeanserverdefaultdomain    null
mbeanserverdefaultdomain   system getproperty jmxsystempropertykeys domain  default_domain
if  mbeanobjectdomainname    null
mbeanobjectdomainname   system getproperty jmxsystempropertykeys mbean_domain  default_domain
if  serviceurlpath    null
serviceurlpath   system getproperty jmxsystempropertykeys service_url_path  default_service_url_path
if  createconnector    null
createconnector   boolean getboolean jmxsystempropertykeys create_connector
if  onlyregisterprocessorwithcustomid    null
onlyregisterprocessorwithcustomid   boolean getboolean jmxsystempropertykeys only_register_processor_with_custom_id
// "use platform mbean server" is true by default
if  system getproperty jmxsystempropertykeys use_platform_mbs     null
useplatformmbeanserver   boolean getboolean jmxsystempropertykeys use_platform_mbs
if  system getproperty jmxsystempropertykeys register_always     null
registeralways   boolean getboolean jmxsystempropertykeys register_always
if  system getproperty jmxsystempropertykeys register_new_routes     null
registernewroutes   boolean getboolean jmxsystempropertykeys register_new_routes
public void setregistryport integer port
registryport   port
public integer getregistryport
return registryport
public void setconnectorport integer port
connectorport   port
public integer getconnectorport
return connectorport
public void setmbeanserverdefaultdomain string domain
mbeanserverdefaultdomain   domain
public string getmbeanserverdefaultdomain
return mbeanserverdefaultdomain
public void setmbeanobjectdomainname string domainname
mbeanobjectdomainname   domainname
public string getmbeanobjectdomainname
return mbeanobjectdomainname
public void setserviceurlpath string url
serviceurlpath   url
public string getserviceurlpath
return serviceurlpath
public void setcreateconnector boolean flag
createconnector   flag
public boolean getcreateconnector
return createconnector
public void setuseplatformmbeanserver boolean flag
useplatformmbeanserver   flag
public boolean getuseplatformmbeanserver
return useplatformmbeanserver
public boolean getonlyregisterprocessorwithcustomid
return onlyregisterprocessorwithcustomid
public void setonlyregisterprocessorwithcustomid boolean onlyregisterprocessorwithcustomid
this onlyregisterprocessorwithcustomid   onlyregisterprocessorwithcustomid
public void setmbeanserver mbeanserver mbeanserver
server   mbeanserver
public mbeanserver getmbeanserver
return server
public boolean getregisteralways
return registeralways    null    registeralways
public void setregisteralways boolean registeralways
this registeralways   registeralways
public boolean getregisternewroutes
return registernewroutes    null    registernewroutes
public void setregisternewroutes boolean registernewroutes
this registernewroutes   registernewroutes
public executorservice getexecutorservice
return executorservice
public void setexecutorservice executorservice executorservice
this executorservice   executorservice
public camelcontext getcamelcontext
return camelcontext
public void setcamelcontext camelcontext camelcontext
this camelcontext   camelcontext
public void register object obj  objectname name  throws jmexception
register obj  name  false
public void register object obj  objectname name  boolean forceregistration  throws jmexception
try
registermbeanwithserver obj  name  forceregistration
catch  notcompliantmbeanexception e
// if this is not a "normal" mbean, then try to deploy it using jmx annotations
managementmbeanassembler assembler   camelcontext getmanagementmbeanassembler
objecthelper notnull assembler     camelcontext
object mbean   assembler assemble server  obj  name
// and register the mbean
registermbeanwithserver mbean  name  forceregistration
public void unregister objectname name  throws jmexception
if  isregistered name
server unregistermbean mbeansregistered get name
log debug    name
mbeansregistered remove name
public boolean isregistered objectname name
return  mbeansregistered containskey name
server isregistered mbeansregistered get name
server isregistered name
protected void dostart   throws exception
objecthelper notnull camelcontext
// create mbean server if is has not be injected.
if  server    null
finalizesettings
creatembeanserver
log debug    getmbeanserver
protected void dostop   throws exception
// close jmx connector
if  cs    null
try
cs stop
catch  ioexception e
log debug
cs
cs   null
if  mbeansregistered isempty
return
// using the array to hold the busmbeans to avoid the currentmodificationexception
objectname mbeans   mbeansregistered keyset   toarray new objectname
int caught   0
for  objectname name   mbeans
try
unregister name
catch  exception e
log info     name  e
caught
if  caught > 0
log warn     caught
private void registermbeanwithserver object obj  objectname name  boolean forceregistration
throws jmexception
// have we already registered the bean, there can be shared instances in the camel routes
boolean exists   isregistered name
if  exists
if  forceregistration
log info    name
server unregistermbean name
else
// okay ignore we do not want to force it and it could be a shared instance
log debug    name
// register bean if by force or not exists
objectinstance instance   null
if  forceregistration     exists
log trace    name
instance   server registermbean obj  name
// need to use the name returned from the server as some jee servers may modify the name
if  instance    null
objectname registeredname   instance getobjectname
log debug    registeredname
mbeansregistered put name  registeredname
protected void creatembeanserver
string hostname
boolean canaccesssystemprops   true
try
// we'll do it this way mostly to determine if we should lookup the hostname
securitymanager sm   system getsecuritymanager
if  sm    null
sm checkpropertiesaccess
catch  securityexception se
canaccesssystemprops   false
if  canaccesssystemprops
try
hostname   inetaddress getlocalhost   gethostname
catch  unknownhostexception uhe
log info     default_registry_port  uhe
hostname   default_host
else
hostname   default_host
server   findorcreatembeanserver
try
// create the connector if we need
if  createconnector
createjmxconnector hostname
catch  ioexception ioe
log warn    ioe
protected mbeanserver findorcreatembeanserver
// return platform mbean server if the option is specified.
if  useplatformmbeanserver
return managementfactory getplatformmbeanserver
// look for the first mbean server that has match default domain name
list<mbeanserver> servers   mbeanserverfactory findmbeanserver null
for  mbeanserver server   servers
log debug    server getdefaultdomain
if  mbeanserverdefaultdomain equals server getdefaultdomain
return server
// create a mbean server with the given default domain name
return mbeanserverfactory creatembeanserver mbeanserverdefaultdomain
protected void createjmxconnector string host  throws ioexception
objecthelper notempty serviceurlpath
objecthelper notnull registryport
try
locateregistry createregistry registryport
log debug    registryport
catch  remoteexception ex
// the registry may had been created, we could get the registry instead
// must start with leading slash
string path   serviceurlpath startswith    ? serviceurlpath       serviceurlpath
// create an rmi connector and start it
final jmxserviceurl url
if  connectorport > 0
url   new jmxserviceurl     host       connectorport       host
registryport   path
else
url   new jmxserviceurl     host       registryport   path
cs   jmxconnectorserverfactory newjmxconnectorserver url  null  server
if  executorservice    null
// we only need a single thread for the jmx connector
executorservice   camelcontext getexecutorservicemanager   newsinglethreadexecutor this      url
// execute the jmx connector
executorservice execute new runnable
public void run
try
cs start
catch  ioexception ioe
log warn    ioe
log info     url