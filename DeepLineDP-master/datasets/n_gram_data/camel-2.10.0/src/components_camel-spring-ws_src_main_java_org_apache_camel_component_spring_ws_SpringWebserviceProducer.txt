/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component spring ws
import java io ioexception
import java net httpurlconnection
import java net uri
import java security generalsecurityexception
import javax net ssl httpsurlconnection
import javax net ssl sslcontext
import javax xml transform source
import javax xml transform transformerexception
import org apache camel endpoint
import org apache camel exchange
import org apache camel runtimecamelexception
import org apache camel typeconverter
import org apache camel impl defaultproducer
import org apache camel util exchangehelper
import org slf4j logger
import org slf4j loggerfactory
import org springframework ws webservicemessage
import org springframework ws client core sourceextractor
import org springframework ws client core webservicemessagecallback
import org springframework ws client core webservicetemplate
import org springframework ws soap addressing client actioncallback
import org springframework ws soap client core soapactioncallback
import org springframework ws transport webserviceconnection
import org springframework ws transport webservicemessagesender
import org springframework ws transport http abstracthttpwebservicemessagesender
import org springframework ws transport http commonshttpmessagesender
import org springframework ws transport http httpurlconnection
import org springframework ws transport http httpurlconnectionmessagesender
public class springwebserviceproducer extends defaultproducer
private static final logger log   loggerfactory getlogger springwebserviceproducer class
private static final sourceextractor<object> source_extractor   new noopsourceextractor
public springwebserviceproducer endpoint endpoint
super endpoint
preparemessagesenders getendpoint   getconfiguration
@override
public springwebserviceendpoint getendpoint
return  springwebserviceendpoint  super getendpoint
public void process exchange exchange  throws exception
// let camel typeconverter hierarchy handle the conversion of xml messages to source objects
source sourcepayload   exchange getin   getmandatorybody source class
// extract optional headers
string endpointuri   exchange getin   getheader springwebserviceconstants spring_ws_endpoint_uri  string class
string soapaction   exchange getin   getheader springwebserviceconstants spring_ws_soap_action  string class
uri wsaddressingaction   exchange getin   getheader springwebserviceconstants spring_ws_addressing_action  uri class
webservicemessagecallback callback   new defaultwebservicemessagecallback soapaction  wsaddressingaction  getendpoint   getconfiguration
object body   null
if  endpointuri    null
body   getendpoint   getconfiguration   getwebservicetemplate   sendsourceandreceive endpointuri  sourcepayload  callback  source_extractor
else
body   getendpoint   getconfiguration   getwebservicetemplate   sendsourceandreceive sourcepayload  callback  source_extractor
if  exchangehelper isoutcapable exchange
exchange getout   copyfrom exchange getin
exchange getout   setbody body
else
exchange getin   setbody body
private static void preparemessagesenders springwebserviceconfiguration configuration
// skip this whole thing if none of the relevant config options are set.
if    configuration gettimeout   >  1     configuration getsslcontextparameters      null
return
webservicetemplate webservicetemplate   configuration getwebservicetemplate
webservicemessagesender messagesenders   webservicetemplate getmessagesenders
for  int i   0  i < messagesenders length  i
webservicemessagesender messagesender   messagesenders
if  messagesender instanceof commonshttpmessagesender
if  configuration getsslcontextparameters      null
log warn
if  configuration gettimeout   >  1
if  messagesender getclass   equals commonshttpmessagesender class
commonshttpmessagesender messagesender  setreadtimeout configuration gettimeout
else
log warn
else if  messagesender getclass   equals httpurlconnectionmessagesender class
// only if exact match denoting likely use of default configuration.  we don't want to get
// sub-classes that might have been otherwise injected.
messagesenders   new abstracthttpwebservicemessagesenderdecorator  httpurlconnectionmessagesender messagesender  configuration
else
// for example this will be the case during unit-testing with the net.javacrumbs.spring-ws-test api
log warn
messagesender
/**
* a decorator of {@link httpurlconnectionmessagesender} instances that can apply configuration options
* from the camel component/endpoint configuration without replacing the actual implementation which may
* actually be an end-user implementation and not one of the built-in implementations.
*/
protected static final class abstracthttpwebservicemessagesenderdecorator extends abstracthttpwebservicemessagesender
private final abstracthttpwebservicemessagesender delegate
private final springwebserviceconfiguration configuration
private sslcontext sslcontext
public abstracthttpwebservicemessagesenderdecorator abstracthttpwebservicemessagesender delegate  springwebserviceconfiguration configuration
this delegate   delegate
this configuration   configuration
@override
public webserviceconnection createconnection uri uri  throws ioexception
webserviceconnection wsc   delegate createconnection uri
if  wsc instanceof httpurlconnection
httpurlconnection connection     httpurlconnection wsc  getconnection
if  configuration gettimeout   >  1
connection setreadtimeout configuration gettimeout
if  configuration getsslcontextparameters      null    connection instanceof httpsurlconnection
try
synchronized  this
if  sslcontext    null
sslcontext   configuration getsslcontextparameters   createsslcontext
catch  generalsecurityexception e
throw new runtimecamelexception    e
httpsurlconnection  connection  setsslsocketfactory sslcontext getsocketfactory
else
throw new runtimecamelexception
wsc getclass
return wsc
@override
public boolean isacceptgzipencoding
return delegate isacceptgzipencoding
@override
public void setacceptgzipencoding boolean acceptgzipencoding
delegate setacceptgzipencoding acceptgzipencoding
@override
public boolean supports uri uri
return delegate supports uri
protected static class defaultwebservicemessagecallback implements webservicemessagecallback
private final string soapactionheader
private final uri wsaddressingactionheader
private final springwebserviceconfiguration configuration
public defaultwebservicemessagecallback string soapaction  uri wsaddressingaction  springwebserviceconfiguration configuration
this soapactionheader   soapaction
this wsaddressingactionheader   wsaddressingaction
this configuration   configuration
public void dowithmessage webservicemessage message  throws ioexception  transformerexception
// add soapaction to webservice request. note that exchange header
// takes precedence over endpoint option
string soapaction   soapactionheader    null ? soapactionheader   configuration getsoapaction
if  soapaction    null
new soapactioncallback soapaction  dowithmessage message
// add ws-addressing action to webservice request (the ws-addressing
// 'to' header will default to the url of the connection).
// note that exchange header takes precedence over endpoint option
uri wsaddressingaction   wsaddressingactionheader    null ? wsaddressingactionheader   configuration getwsaddressingaction
if  wsaddressingaction    null
new actioncallback wsaddressingaction  dowithmessage message
/**
* a {@link sourceextractor} that performs no conversion, instead conversion
* is handled by camel's {@link typeconverter} hierarchy.
*/
private static class noopsourceextractor implements sourceextractor<object>
public object extractdata source source  throws ioexception  transformerexception
return source