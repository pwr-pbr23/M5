/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel converter jaxb
import java io closeable
import java io inputstream
import java io inputstreamreader
import java io reader
import java io stringreader
import java io stringwriter
import java io unsupportedencodingexception
import java io writer
import java util hashmap
import java util map
import javax xml bind jaxbcontext
import javax xml bind jaxbexception
import javax xml bind marshaller
import javax xml bind unmarshaller
import javax xml bind annotation xmlrootelement
import javax xml stream factoryconfigurationerror
import javax xml stream xmlstreamexception
import javax xml stream xmlstreamreader
import javax xml stream xmlstreamwriter
import javax xml transform source
import org apache camel exchange
import org apache camel notypeconversionavailableexception
import org apache camel processor
import org apache camel streamcache
import org apache camel typeconversionexception
import org apache camel typeconverter
import org apache camel component bean beaninvocation
import org apache camel converter jaxp staxconverter
import org apache camel spi typeconverteraware
import org apache camel support servicesupport
import org apache camel util iohelper
import org slf4j logger
import org slf4j loggerfactory
/**
* @version
*/
public class fallbacktypeconverter extends servicesupport implements typeconverter  typeconverteraware
private static final transient logger log   loggerfactory getlogger fallbacktypeconverter class
private final map<class<?>  jaxbcontext> contexts   new hashmap<class<?>  jaxbcontext>
private final staxconverter staxconverter   new staxconverter
private typeconverter parenttypeconverter
private boolean prettyprint   true
public boolean isprettyprint
return prettyprint
public void setprettyprint boolean prettyprint
this prettyprint   prettyprint
public void settypeconverter typeconverter parenttypeconverter
this parenttypeconverter   parenttypeconverter
public <t> t convertto class<t> type  object value
return convertto type  null  value
public <t> t convertto class<t> type  exchange exchange  object value
if  beaninvocation class isassignablefrom type     processor class isassignablefrom type
// jaxb cannot convert to a beaninvocation / processor, so we need to indicate this
// to avoid camel trying to do this when using beans with jaxb payloads
return null
try
if  isjaxbtype type
return unmarshall type  exchange  value
if  value    null
if  isjaxbtype value getclass       isnotstreamcachetype type
return marshall type  exchange  value
catch  exception e
throw new typeconversionexception value  type  e
// should return null if didn't even try to convert at all or for whatever reason the conversion is failed
return null
public <t> t mandatoryconvertto class<t> type  object value  throws notypeconversionavailableexception
return mandatoryconvertto type  null  value
public <t> t mandatoryconvertto class<t> type  exchange exchange  object value  throws notypeconversionavailableexception
t answer   convertto type  exchange  value
if  answer    null
throw new notypeconversionavailableexception value  type
return answer
public <t> t tryconvertto class<t> type  object value
try
return convertto type  null  value
catch  exception e
return null
public <t> t tryconvertto class<t> type  exchange exchange  object value
try
return convertto type  exchange  value
catch  exception e
return null
@override
protected void dostart   throws exception
// noop
@override
protected void dostop   throws exception
contexts clear
protected <t> boolean isjaxbtype class<t> type
xmlrootelement element   type getannotation xmlrootelement class
return element    null
/**
* lets try parse via jaxb
*/
protected <t> t unmarshall class<t> type  exchange exchange  object value  throws exception
log trace    type  value
if  value    null
throw new illegalargumentexception
unmarshaller unmarshaller   getunmarshaller type
if  parenttypeconverter    null
if   needfiltering exchange
// we cannot filter the xmlstreamreader if necessary
xmlstreamreader xmlreader   parenttypeconverter convertto xmlstreamreader class  exchange  value
if  xmlreader    null
object unmarshalled   unmarshal unmarshaller  exchange  xmlreader
return type cast unmarshalled
inputstream inputstream   parenttypeconverter convertto inputstream class  exchange  value
if  inputstream    null
object unmarshalled   unmarshal unmarshaller  exchange  inputstream
return type cast unmarshalled
reader reader   parenttypeconverter convertto reader class  exchange  value
if  reader    null
object unmarshalled   unmarshal unmarshaller  exchange  reader
return type cast unmarshalled
source source   parenttypeconverter convertto source class  exchange  value
if  source    null
object unmarshalled   unmarshal unmarshaller  exchange  source
return type cast unmarshalled
if  value instanceof string
value   new stringreader  string  value
if  value instanceof inputstream    value instanceof reader
object unmarshalled   unmarshal unmarshaller  exchange  value
return type cast unmarshalled
return null
protected <t> t marshall class<t> type  exchange exchange  object value
throws jaxbexception  xmlstreamexception  factoryconfigurationerror  typeconversionexception
log trace    value  type
t answer   null
if  parenttypeconverter    null
// lets convert the object to a jaxb source and try convert that to
// the required source
jaxbcontext context   createcontext value getclass
// must create a new instance of marshaller as its not thread safe
marshaller marshaller   context createmarshaller
writer buffer   new stringwriter
if  isprettyprint
marshaller setproperty marshaller jaxb_formatted_output  boolean true
if  exchange    null    exchange getproperty exchange charset_name  string class     null
marshaller setproperty marshaller jaxb_encoding  exchange getproperty exchange charset_name  string class
if  needfiltering exchange
xmlstreamwriter writer   parenttypeconverter convertto xmlstreamwriter class  buffer
filteringxmlstreamwriter filteringwriter   new filteringxmlstreamwriter writer
marshaller marshal value  filteringwriter
else
marshaller marshal value  buffer
answer   parenttypeconverter convertto type  buffer tostring
return answer
protected object unmarshal unmarshaller unmarshaller  exchange exchange  object value
throws jaxbexception  unsupportedencodingexception  xmlstreamexception
try
xmlstreamreader xmlreader
if  value instanceof xmlstreamreader
xmlreader    xmlstreamreader  value
else if  value instanceof inputstream
if  needfiltering exchange
xmlreader   staxconverter createxmlstreamreader new nonxmlfilterreader new inputstreamreader  inputstream value  iohelper getcharsetname exchange
else
xmlreader   staxconverter createxmlstreamreader  inputstream value  exchange
else if  value instanceof reader
reader reader    reader value
if  needfiltering exchange
if    value instanceof nonxmlfilterreader
reader   new nonxmlfilterreader  reader value
xmlreader   staxconverter createxmlstreamreader reader
else if  value instanceof source
xmlreader   staxconverter createxmlstreamreader  source value
else
throw new illegalargumentexception     value getclass
return unmarshaller unmarshal xmlreader
finally
if  value instanceof closeable
iohelper close  closeable value     log
protected boolean needfiltering exchange exchange
// exchange property takes precedence over data format property
return exchange    null    exchange getproperty exchange filter_non_xml_chars  boolean false  boolean class
protected synchronized <t> jaxbcontext createcontext class<t> type  throws jaxbexception
jaxbcontext context   contexts get type
if  context    null
context   jaxbcontext newinstance type
contexts put type  context
return context
protected <t> unmarshaller getunmarshaller class<t> type  throws jaxbexception
jaxbcontext context   createcontext type
return context createunmarshaller
private static <t> boolean isnotstreamcachetype class<t> type
return  streamcache class isassignablefrom type