/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component xmpp
import org apache camel exchange
import org apache camel runtimeexchangeexception
import org apache camel impl defaultproducer
import org apache camel util objecthelper
import org jivesoftware smack chat
import org jivesoftware smack chatmanager
import org jivesoftware smack messagelistener
import org jivesoftware smack xmppconnection
import org jivesoftware smack xmppexception
import org jivesoftware smack packet message
import org slf4j logger
import org slf4j loggerfactory
/**
* @version
*/
public class xmppprivatechatproducer extends defaultproducer
private static final transient logger log   loggerfactory getlogger xmppprivatechatproducer class
private final xmppendpoint endpoint
private xmppconnection connection
private final string participant
public xmppprivatechatproducer xmppendpoint endpoint  string participant
super endpoint
this endpoint   endpoint
this participant   participant
objecthelper notempty participant
log debug    participant
public void process exchange exchange
try
// make sure we are connected
if   connection isconnected
if  log isdebugenabled
log debug    xmppendpoint getconnectionmessage connection
connection connect
catch  xmppexception e
throw new runtimeexchangeexception
xmppendpoint getconnectionmessage connection   exchange  e
chatmanager chatmanager   connection getchatmanager
log trace    endpoint getchatid
chat chat   chatmanager getthreadchat endpoint getchatid
if  chat    null
log trace    endpoint getchatid
chat   chatmanager createchat getparticipant    endpoint getchatid    new messagelistener
public void processmessage chat chat  message message
// not here to do conversation
if  log isdebugenabled
log debug    getparticipant    message getbody
message message   null
try
message   new message
message setto getparticipant
message setthread endpoint getchatid
message settype message type normal
endpoint getbinding   populatexmppmessage message  exchange
if  log isdebugenabled
log debug    new object endpoint getparticipant    endpoint getuser    message getbody
chat sendmessage message
catch  xmppexception xmppe
throw new runtimeexchangeexception     endpoint getparticipant         endpoint getuser         message
xmppendpoint getconnectionmessage connection   exchange  xmppe
catch  exception e
throw new runtimeexchangeexception     endpoint getparticipant         endpoint getuser         message
xmppendpoint getconnectionmessage connection   exchange  e
@override
protected void dostart   throws exception
if  connection    null
connection   endpoint createconnection
super dostart
@override
protected void dostop   throws exception
if  connection    null    connection isconnected
connection disconnect
connection   null
super dostop
// properties
// -------------------------------------------------------------------------
public string getparticipant
return participant