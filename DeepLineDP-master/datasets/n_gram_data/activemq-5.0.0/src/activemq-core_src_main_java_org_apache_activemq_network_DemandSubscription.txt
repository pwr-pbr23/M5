/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq network
import java util set
import java util concurrent copyonwritearrayset
import java util concurrent atomic atomicinteger
import org apache activemq command consumerid
import org apache activemq command consumerinfo
/**
* represents a network bridge interface
*
* @version $revision: 1.1 $
*/
public class demandsubscription
private consumerinfo remoteinfo
private consumerinfo localinfo
private set<consumerid> remotesubsids   new copyonwritearrayset<consumerid>
private atomicinteger dispatched   new atomicinteger 0
demandsubscription consumerinfo info
remoteinfo   info
localinfo   info copy
localinfo setbrokerpath info getbrokerpath
remotesubsids add info getconsumerid
/**
* increment the consumers associated with this subscription
*
* @param id
* @return true if added
*/
public boolean add consumerid id
return remotesubsids add id
/**
* increment the consumers associated with this subscription
*
* @param id
* @return true if added
*/
public boolean remove consumerid id
return remotesubsids remove id
/**
* @return true if there are no interested consumers
*/
public boolean isempty
return remotesubsids isempty
/**
* @return returns the dispatched.
*/
public int getdispatched
return dispatched get
/**
* @param dispatched the dispatched to set.
*/
public void setdispatched int dispatched
this dispatched set dispatched
/**
* @return dispatched count after incremented
*/
public int incrementdispatched
return dispatched incrementandget
/**
* @return returns the localinfo.
*/
public consumerinfo getlocalinfo
return localinfo
/**
* @param localinfo the localinfo to set.
*/
public void setlocalinfo consumerinfo localinfo
this localinfo   localinfo
/**
* @return returns the remoteinfo.
*/
public consumerinfo getremoteinfo
return remoteinfo
/**
* @param remoteinfo the remoteinfo to set.
*/
public void setremoteinfo consumerinfo remoteinfo
this remoteinfo   remoteinfo