/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq maven
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java util properties
import org apache activemq broker brokerfactory
import org apache activemq broker brokerservice
import org apache maven plugin abstractmojo
import org apache maven plugin mojoexecutionexception
import org apache maven project mavenproject
/**
* goal which starts an activemq broker.
*
* @goal run
* @phase process-sources
*/
public class brokermojo extends abstractmojo
/**
* the maven project.
*
* @parameter expression="${project}"
* @required
* @readonly
*/
protected mavenproject project
/**
* the broker configuration uri the list of currently supported uri syntaxes
* is described <a
* href="http://activemq.apache.org/how-do-i-embed-a-broker-inside-a-connection.html">here</a>
*
* @parameter expression="${configuri}"
*            default-value="broker:(tcp://localhost:61616)?usejmx=false&persistent=false"
* @required
*/
private string configuri
/**
* indicates whether to fork the broker, useful for integration tests.
*
* @parameter expression="${fork}" default-value="false"
*/
private boolean fork
/**
* system properties to add
*
* @parameter expression="${systemproperties}"
*/
private properties systemproperties
public void execute   throws mojoexecutionexception
try
setsystemproperties
getlog   info     configuri
final brokerservice broker   brokerfactory createbroker configuri
if  fork
new thread new runnable
public void run
try
broker start
waitforshutdown broker
catch  exception e
e printstacktrace
start
else
broker start
waitforshutdown broker
catch  exception e
throw new mojoexecutionexception    e
/**
* wait for a shutdown invocation elsewhere
*
* @throws exception
*/
protected void waitforshutdown brokerservice broker  throws exception
final boolean shutdown   new boolean
false
runtime getruntime   addshutdownhook new thread
public void run
synchronized  shutdown
shutdown   true
shutdown notify
// wait for any shutdown event
synchronized  shutdown
while   shutdown
try
shutdown wait
catch  interruptedexception e
// stop broker
broker stop
/**
* set system properties
*/
protected void setsystemproperties
// set the default properties
system setproperty    project getbuild   getdirectory
system setproperty    project getbuild   getdirectory
system setproperty
system setproperty    project getbuild   getdirectory
system setproperty    project getbuild   getdirectory
system setproperty
// overwrite any custom properties
system getproperties   putall systemproperties