/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq filter
import java math bigdecimal
import javax jms jmsexception
/**
* represents a constant expression
*
* @version $revision: 1.2 $
*/
public class constantexpression implements expression
static class booleanconstantexpression extends constantexpression implements booleanexpression
public booleanconstantexpression object value
super value
public boolean matches messageevaluationcontext message  throws jmsexception
object object   evaluate message
return object    null    object    boolean true
public static final booleanconstantexpression null   new booleanconstantexpression null
public static final booleanconstantexpression true   new booleanconstantexpression boolean true
public static final booleanconstantexpression false   new booleanconstantexpression boolean false
private object value
public constantexpression object value
this value   value
public static constantexpression createfromdecimal string text
// strip off the 'l' or 'l' if needed.
if  text endswith       text endswith
text   text substring 0  text length     1
number value
try
value   new long text
catch  numberformatexception e
// the number may be too big to fit in a long.
value   new bigdecimal text
long l   value longvalue
if  integer min_value <  l    l <  integer max_value
value   integer valueof value intvalue
return new constantexpression value
public static constantexpression createfromhex string text
number value   long valueof long parselong text substring 2   16
long l   value longvalue
if  integer min_value <  l    l <  integer max_value
value   integer valueof value intvalue
return new constantexpression value
public static constantexpression createfromoctal string text
number value   long valueof long parselong text  8
long l   value longvalue
if  integer min_value <  l    l <  integer max_value
value   integer valueof value intvalue
return new constantexpression value
public static constantexpression createfloat string text
number value   new double text
return new constantexpression value
public object evaluate messageevaluationcontext message  throws jmsexception
return value
public object getvalue
return value
/**
* @see java.lang.object#tostring()
*/
public string tostring
if  value    null
return
if  value instanceof boolean
return   boolean value  booleanvalue   ?
if  value instanceof string
return encodestring  string value
return value tostring
/**
* todo: more efficient hashcode()
*
* @see java.lang.object#hashcode()
*/
public int hashcode
return tostring   hashcode
/**
* todo: more efficient hashcode()
*
* @see java.lang.object#equals(java.lang.object)
*/
public boolean equals object o
if  o    null     this getclass   equals o getclass
return false
return tostring   equals o tostring
/**
* encodes the value of string so that it looks like it would look like when
* it was provided in a selector.
*
* @param string
* @return
*/
public static string encodestring string s
stringbuffer b   new stringbuffer
b append
for  int i   0  i < s length    i
char c   s charat i
if  c
b append c
b append c
b append
return b tostring