/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console formatter
import java io outputstream
import java util collection
import java util map
import javax jms message
import javax management attributelist
import javax management objectinstance
import javax management objectname
public final class globalwriter
private static outputformatter formatter
/**
* creates a singleton global writer
*/
private globalwriter
/**
* maintains a global output formatter
*
* @param formatter - the output formatter to use
*/
public static void instantiate outputformatter formatter
globalwriter formatter   formatter
/**
* retrieve the output stream being used by the global formatter
*
* @return
*/
public static outputstream getoutputstream
if  formatter    null
throw new illegalstateexception
return formatter getoutputstream
/**
* print an objectinstance format of an mbean
*
* @param mbean - mbean to print
*/
public static void printmbean objectinstance mbean
if  formatter    null
throw new illegalstateexception
formatter printmbean mbean
/**
* print an objectname format of an mbean
*
* @param mbean - mbean to print
*/
public static void printmbean objectname mbean
if  formatter    null
throw new illegalstateexception
formatter printmbean mbean
/**
* print an attributelist format of an mbean
*
* @param mbean - mbean to print
*/
public static void printmbean attributelist mbean
if  formatter    null
throw new illegalstateexception
formatter printmbean mbean
/**
* print a map format of an mbean
*
* @param mbean
*/
public static void printmbean map mbean
if  formatter    null
throw new illegalstateexception
formatter printmbean mbean
/**
* print a collection format of mbeans
*
* @param mbean - collection of mbeans
*/
public static void printmbean collection mbean
if  formatter    null
throw new illegalstateexception
formatter printmbean mbean
/**
* print a map format of a jms message
*
* @param msg
*/
public static void printmessage map msg
if  formatter    null
throw new illegalstateexception
formatter printmessage msg
/**
* print a message format of a jms message
*
* @param msg - jms message to print
*/
public static void printmessage message msg
if  formatter    null
throw new illegalstateexception
formatter printmessage msg
/**
* print a collection of jms messages
*
* @param msg - collection of jms messages
*/
public static void printmessage collection msg
if  formatter    null
throw new illegalstateexception
formatter printmessage msg
/**
* print help messages
*
* @param helpmsgs - help messages to print
*/
public static void printhelp string helpmsgs
if  formatter    null
throw new illegalstateexception
formatter printhelp helpmsgs
/**
* print an information message
*
* @param info - information message to print
*/
public static void printinfo string info
if  formatter    null
throw new illegalstateexception
formatter printinfo info
/**
* print an exception message
*
* @param e - exception to print
*/
public static void printexception exception e
if  formatter    null
throw new illegalstateexception
formatter printexception e
/**
* print a version information
*
* @param version - version info to print
*/
public static void printversion string version
if  formatter    null
throw new illegalstateexception
formatter printversion version
/**
* print a generic key value mapping
*
* @param map to print
*/
public static void print map map
if  formatter    null
throw new illegalstateexception
formatter print map
/**
* print a generic array of strings
*
* @param strings - string array to print
*/
public static void print string strings
if  formatter    null
throw new illegalstateexception
formatter print strings
/**
* print a collection of objects
*
* @param collection - collection to print
*/
public static void print collection collection
if  formatter    null
throw new illegalstateexception
formatter print collection
/**
* print a java string
*
* @param string - string to print
*/
public static void print string string
if  formatter    null
throw new illegalstateexception
formatter print string