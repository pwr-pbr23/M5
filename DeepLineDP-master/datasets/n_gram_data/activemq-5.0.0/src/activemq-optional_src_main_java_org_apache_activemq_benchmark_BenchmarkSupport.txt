/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq benchmark
import java text numberformat
import java util arraylist
import java util list
import java util concurrent atomic atomicinteger
import javax jms connection
import javax jms destination
import javax jms jmsexception
import javax jms session
import org apache activemq activemqconnectionfactory
import org apache activemq util idgenerator
/**
* abstract base class for some simple benchmark tools
*
* @author james strachan
* @version $revision$
*/
public class benchmarksupport
protected int connectioncount   1
protected int batch   1000
protected destination destination
protected string subjects
private boolean topic   true
private boolean durable
private activemqconnectionfactory factory
private string url
private int counter
private list<object> resources   new arraylist<object>
private numberformat formatter   numberformat getinstance
private atomicinteger connectioncounter   new atomicinteger 0
private idgenerator idgenerator   new idgenerator
public benchmarksupport
public void start
system out println     connectioncount
subjects   new string
for  int i   0  i < connectioncount  i
subjects       i
if  usetimerloop
thread timer   new thread
public void run
timerloop
timer start
public string geturl
return url
public void seturl string url
this url   url
public boolean istopic
return topic
public void settopic boolean topic
this topic   topic
public activemqconnectionfactory getfactory
return factory
public void setfactory activemqconnectionfactory factory
this factory   factory
public void setsubject string subject
connectioncount   1
subjects   new string
subject
public boolean isdurable
return durable
public void setdurable boolean durable
this durable   durable
public int getconnectioncount
return connectioncount
public void setconnectioncount int connectioncount
this connectioncount   connectioncount
protected session createsession   throws jmsexception
if  factory    null
factory   createfactory
connection connection   factory createconnection
int value   connectioncounter incrementandget
system out println     value       connection
if  durable
connection setclientid idgenerator generateid
addresource connection
connection start
session session   connection createsession false  session auto_acknowledge
addresource session
return session
protected activemqconnectionfactory createfactory
activemqconnectionfactory answer   new activemqconnectionfactory geturl
return answer
protected synchronized void count int count
counter    count
/*
* if (counter > batch) { counter = 0; long current =
* system.currenttimemillis(); double end = current - time; end /= 1000;
* time = current; system.out.println("processed " + batch + " messages
* in " + end + " (secs)"); }
*/
protected synchronized int resetcount
int answer   counter
counter   0
return answer
protected void timerloop
int times   0
int total   0
int dumpvmstatsfrequency   10
runtime runtime   runtime getruntime
while  true
try
thread sleep 1000
catch  interruptedexception e
e printstacktrace
int processed   resetcount
double average   0
if  processed > 0
total    processed
times
if  times > 0
average   total    double  times
system out println getclass   getname         processed       average
if   times % dumpvmstatsfrequency     0    times    0
system out println     asmemorystring runtime totalmemory     runtime freememory          asmemorystring runtime freememory
asmemorystring runtime totalmemory          asmemorystring runtime maxmemory
protected string asmemorystring long value
return formatter format value   1024
protected boolean usetimerloop
return true
protected destination createdestination session session  string subject  throws jmsexception
if  topic
return session createtopic subject
else
return session createqueue subject
protected void addresource object resource
resources add resource
protected static boolean parseboolean string text
return text equalsignorecase