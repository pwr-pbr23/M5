/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq tool
import java io ioexception
import javax jms connection
import javax jms jmsexception
import javax jms message
import javax jms messageconsumer
import javax jms messagelistener
import javax jms session
import javax jms textmessage
import javax jms topic
/**
* a simple tool for consuming messages
*
* @version $revision$
*/
public class consumertool extends toolsupport implements messagelistener
protected int count
protected int dumpcount   10
protected boolean verbose   true
protected int maxiummessages
private boolean pausebeforeshutdown
public static void main string args
consumertool tool   new consumertool
if  args length > 0
tool url   args
if  args length > 1
tool topic   args equalsignorecase
if  args length > 2
tool subject   args
if  args length > 3
tool durable   args equalsignorecase
if  args length > 4
tool maxiummessages   integer parseint args
tool run
public void run
try
system out println     url
system out println      topic ?              subject
system out println      durable ?
connection connection   createconnection
session session   createsession connection
messageconsumer consumer   null
if  durable    topic
consumer   session createdurablesubscriber  topic destination  consumername
else
consumer   session createconsumer destination
if  maxiummessages <  0
consumer setmessagelistener this
connection start
if  maxiummessages > 0
consumemessagesandclose connection  session  consumer
catch  exception e
system out println     e
e printstacktrace
public void onmessage message message
try
if  message instanceof textmessage
textmessage txtmsg    textmessage message
if  verbose
string msg   txtmsg gettext
if  msg length   > 50
msg   msg substring 0  50
system out println     msg
else
if  verbose
system out println     message
/*
* if (++count % dumpcount == 0) { dumpstats(connection); }
*/
catch  jmsexception e
system out println     e
e printstacktrace
protected void consumemessagesandclose connection connection  session session  messageconsumer consumer  throws jmsexception  ioexception
system out println     maxiummessages
for  int i   0  i < maxiummessages  i
message message   consumer receive
onmessage message
system out println
consumer close
session close
connection close
if  pausebeforeshutdown
system out println
system in read