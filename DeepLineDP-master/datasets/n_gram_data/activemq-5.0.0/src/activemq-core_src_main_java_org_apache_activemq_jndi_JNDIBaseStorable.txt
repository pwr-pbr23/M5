/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq jndi
import java io externalizable
import java io ioexception
import java io objectinput
import java io objectoutput
import java util properties
import javax naming namingexception
import javax naming reference
/**
* facilitates objects to be stored in jndi as properties
*/
public abstract class jndibasestorable implements jndistorableinterface  externalizable
private properties properties
/**
* set the properties that will represent the instance in jndi
*
* @param props
*/
protected abstract void buildfromproperties properties props
/**
* initialize the instance from properties stored in jndi
*
* @param props
*/
protected abstract void populateproperties properties props
/**
* set the properties for this instance as retrieved from jndi
*
* @param props
*/
public synchronized void setproperties properties props
this properties   props
buildfromproperties props
/**
* get the properties from this instance for storing in jndi
*
* @return the properties
*/
public synchronized properties getproperties
if  this properties    null
this properties   new properties
populateproperties this properties
return this properties
/**
* retrive a reference for this instance to store in jndi
*
* @return the built reference
* @throws namingexception if error on building reference
*/
public reference getreference   throws namingexception
return jndireferencefactory createreference this getclass   getname    this
/**
* @param in
* @throws ioexception
* @throws classnotfoundexception
* @see java.io.externalizable#readexternal(java.io.objectinput)
*/
public void readexternal objectinput in  throws ioexception  classnotfoundexception
properties props    properties in readobject
if  props    null
setproperties props
/**
* @param out
* @throws ioexception
* @see java.io.externalizable#writeexternal(java.io.objectoutput)
*/
public void writeexternal objectoutput out  throws ioexception
out writeobject getproperties