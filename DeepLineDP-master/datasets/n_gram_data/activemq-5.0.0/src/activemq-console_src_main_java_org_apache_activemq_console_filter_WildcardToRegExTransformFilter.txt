/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console filter
public class wildcardtoregextransformfilter extends wildcardtransformfilter
/**
* creates a filter that is able to transform a wildcard query to a regular
* expression query string
*
* @param next - next query filter
*/
public wildcardtoregextransformfilter regexqueryfilter next
super next
/**
* use to determine if a query string is a wildcard query. a query string is
* a wildcard query if it is a key-value pair with the format <key>=<value>
* and the value contains '*' and '?'.
*
* @param query - query string
* @return true, if the query string is a wildcard query, false otherwise
*/
protected boolean iswildcardquery string query
// if the query is a key=value pair
string key   query
string val
int pos   key indexof
if  pos >  0
val   key substring pos   1
// if the value contains wildcards
return  val indexof    >  0      val indexof    >  0
/**
* transform a wildcard query to regular expression format
*
* @param query - query string to transform
* @return regex query string
*/
protected string transformwildcardquery string query
// get the key=value pair
string key   query
string val
int pos   key indexof
if  pos >  0
val   key substring pos   1
key   key substring 0  pos
val   val replaceall           escape all dot characters
// from (.) to (\.)
val   val replaceall           match single characters
val   val replaceall           match all characters  use
// reluctant quantifier
val       val         let's group the query for clarity
val   regexqueryfilter regex_prefix   val     flag as a regular
// expression query
return key       val