/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq kaha impl index
import java io ioexception
import java io randomaccessfile
import org apache activemq kaha impl datamanager
import org apache activemq util databytearrayoutputstream
/**
* optimized store writer
*
* @version $revision: 1.1.1.1 $
*/
class storeindexwriter
protected final databytearrayoutputstream dataout   new databytearrayoutputstream
protected final randomaccessfile file
protected final string name
protected final datamanager redolog
/**
* construct a store index writer
*
* @param file
*/
storeindexwriter randomaccessfile file
this file  null  null
public storeindexwriter randomaccessfile file  string indexname  datamanager redolog
this file   file
this name   indexname
this redolog   redolog
void storeitem indexitem indexitem  throws ioexception
if  redolog    null
redostoreindexitem redo   new redostoreindexitem name  indexitem getoffset    indexitem
redolog storeredoitem redo
dataout reset
indexitem write dataout
file seek indexitem getoffset
file write dataout getdata    0  indexitem index_size
void updateindexes indexitem indexitem  throws ioexception
if  redolog    null
redostoreindexitem redo   new redostoreindexitem name  indexitem getoffset    indexitem
redolog storeredoitem redo
dataout reset
indexitem updateindexes dataout
file seek indexitem getoffset
file write dataout getdata    0  indexitem indexes_only_size
public void redostoreitem redostoreindexitem redo  throws ioexception
dataout reset
redo getindexitem   write dataout
file seek redo getoffset
file write dataout getdata    0  indexitem index_size