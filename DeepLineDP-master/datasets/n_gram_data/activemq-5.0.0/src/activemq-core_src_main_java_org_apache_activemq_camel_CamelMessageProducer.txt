/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq camel
import javax jms destination
import javax jms illegalstateexception
import javax jms jmsexception
import javax jms message
import org apache activemq activemqmessageproducersupport
import org apache activemq activemqsession
import org apache activemq util jmsexceptionsupport
import org apache camel endpoint
import org apache camel exchangepattern
import org apache camel producer
import org apache camel component jms jmsexchange
import org apache camel util objecthelper
/**
* a jms {@link javax.jms.messageproducer} which sends message exchanges to a
* camel {@link endpoint}
*
* @version $revision: $
*/
public class camelmessageproducer extends activemqmessageproducersupport
protected producer producer
private final cameldestination destination
private final endpoint endpoint
private boolean closed
public camelmessageproducer cameldestination destination  endpoint endpoint  activemqsession session  throws jmsexception
super session
this destination   destination
this endpoint   endpoint
try
this producer   endpoint createproducer
catch  jmsexception e
throw e
catch  exception e
throw jmsexceptionsupport create e
public cameldestination getdestination   throws jmsexception
return destination
public endpoint getendpoint
return endpoint
public void close   throws jmsexception
if   closed
closed   true
try
producer stop
catch  jmsexception e
throw e
catch  exception e
throw jmsexceptionsupport create e
public void send destination destination  message message  int deliverymode  int priority  long timetolive  throws jmsexception
cameldestination cameldestination   null
if  objecthelper equals destination  this destination
cameldestination   this destination
else
// todo support any cameldestination?
throw new illegalargumentexception     destination       this destination
try
jmsexchange exchange   new jmsexchange endpoint getcontext    exchangepattern inonly  cameldestination getbinding    message
producer process exchange
catch  jmsexception e
throw e
catch  exception e
throw jmsexceptionsupport create e
protected void checkclosed   throws illegalstateexception
if  closed
throw new illegalstateexception