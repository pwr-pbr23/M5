/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq network
import java net uri
import java util arraylist
import java util hashtable
import java util list
import java util concurrent copyonwritearraylist
import javax naming context
import javax naming namingenumeration
import javax naming directory attributes
import javax naming directory dircontext
import javax naming directory initialdircontext
import javax naming directory searchcontrols
import javax naming directory searchresult
import org apache activemq util servicestopper
import org apache commons logging log
import org apache commons logging logfactory
/**
* class to create dynamic network connectors listed in an directory
* server using the ldap v3 protocol as defined in rfc 2251, the
* entries listed in the directory server must implement the iphost
* and ipservice objectclasses as defined in rfc 2307.
*
* @author trevor pounds
* @see <a href="http://www.faqs.org/rfcs/rfc2251.html">rfc 2251</a>
* @see <a href="http://www.faqs.org/rfcs/rfc2307.html">rfc 2307</a>
*
* @org.apache.xbean.xbean element="ldapnetworkconnector"
*/
public class ldapnetworkconnector extends networkconnector
private static final log log   logfactory getlog ldapnetworkconnector class
// todo: future >> ldap jndi event handling to update connectors?
// force returned entries to implement the iphost and ipservice objectclasses (rfc 2307)
private static final string required_object_class_filter
// required
private uri    ldapuri
private string ldapbase
private string ldapuser
private string ldappassword
// optional
private int    ldapsearchscope     searchcontrols object_scope
private string ldapsearchfilter    required_object_class_filter
// internal configurables
private dircontext ldapcontext
private list<networkconnector> connectors   new copyonwritearraylist<networkconnector>
/**
* default constructor
*/
public ldapnetworkconnector
/**
* sets the ldap server uri
*
* @param uri ldap server uri
*/
public void seturi uri uri
ldapuri   uri
/**
* sets the base ldap dn used for lookup operations
*
* @param base ldap base dn
*/
public void setbase string base
ldapbase   base
/**
* sets the ldap user for access credentials
*
* @param user ldap dn of user
*/
public void setuser string user
ldapuser   user
/**
* sets the ldap password for access credentials
*
* @param password user password
*/
public void setpassword string password
ldappassword   password
/**
* sets the ldap search scope
*
* @param searchscope ldap jndi search scope
*/
public void setsearchscope string searchscope  throws exception
if searchscope equals
ldapsearchscope   searchcontrols object_scope
else if searchscope equals
ldapsearchscope   searchcontrols onelevel_scope
else if searchscope equals
ldapsearchscope   searchcontrols subtree_scope
else
throw new exception     searchscope
/**
* sets the ldap search filter as defined in rfc 2254
*
* @param searchfilter ldap search filter
* @see <a href="http://www.faqs.org/rfcs/rfc2254.html">rfc 2254</a>
*/
public void setsearchfilter string searchfilter
ldapsearchfilter       required_object_class_filter       searchfilter
/**
* start the connector
*/
// xxx: this method seems awfully redundant when looking through the
//      call stack when used in networkconnector based objects. i don't
//      see why derived classes shouldn't just override the start/stop methods
protected void handlestart   throws exception
initldapcontext
for uri uri   getldapuris
networkconnector connector   getbrokerservice   addnetworkconnector uri
connector start
connectors add connector
super handlestart
/**
* stop the connector
*
* @param stopper service stopper object
*/
// xxx: this method seems awfully redundant when looking through the
//      call stack when used in networkconnector based objects. i don't
//      see why derived classes shouldn't just override the start/stop methods
protected void handlestop servicestopper stopper  throws exception
for networkconnector connector   connectors
getbrokerservice   removenetworkconnector connector
connector stop
ldapcontext close
super handlestop stopper
/**
* returns the name of the connector
*
* @return connector name
*/
// xxx: this should probably be fixed elsewhere for all
//      networkconnector derivatives...this impl does not
//      seem to be well thought out?
public string getname
return tostring
/**
* initializes the ldap jndi context with the configured parameters
*/
protected void initldapcontext   throws exception
hashtable env   new hashtable
env put context initial_context_factory
env put context provider_url             ldapuri tostring
env put context security_principal       ldapuser
env put context security_credentials     ldappassword
ldapcontext   new initialdircontext env
/**
* retrieves uris matching the search filter via ldap
* and creates network connectors based on the entries
*
* @returns list of retrieved uris
*/
protected list<uri> getldapuris   throws exception
searchcontrols controls   new searchcontrols
controls setsearchscope ldapsearchscope
namingenumeration<searchresult> results   ldapcontext search ldapbase  ldapsearchfilter  controls
list<uri> urilist   new arraylist
while results hasmore
attributes attributes   results next   getattributes
string address     string attributes get    get
string port        string attributes get    get
string protocol    string attributes get    get
uri uri   new uri     protocol       address       port
log info     uri
urilist add uri
return urilist