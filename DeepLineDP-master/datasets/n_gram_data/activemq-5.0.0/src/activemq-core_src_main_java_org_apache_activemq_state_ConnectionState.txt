/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq state
import java util arraylist
import java util collection
import java util collections
import java util iterator
import java util list
import java util set
import java util concurrent concurrenthashmap
import java util concurrent atomic atomicboolean
import org apache activemq command activemqdestination
import org apache activemq command connectioninfo
import org apache activemq command destinationinfo
import org apache activemq command sessionid
import org apache activemq command sessioninfo
import org apache activemq command transactionid
public class connectionstate
connectioninfo info
private final concurrenthashmap<transactionid  transactionstate> transactions   new concurrenthashmap<transactionid  transactionstate>
private final concurrenthashmap<sessionid  sessionstate> sessions   new concurrenthashmap<sessionid  sessionstate>
private final list<destinationinfo> tempdestinations   collections synchronizedlist new arraylist<destinationinfo>
private final atomicboolean shutdown   new atomicboolean false
public connectionstate connectioninfo info
this info   info
// add the default session id.
addsession new sessioninfo info   1
public string tostring
return info tostring
public void reset connectioninfo info
this info   info
transactions clear
sessions clear
tempdestinations clear
shutdown set false
public void addtempdestination destinationinfo info
checkshutdown
tempdestinations add info
public void removetempdestination activemqdestination destination
for  iterator<destinationinfo> iter   tempdestinations iterator    iter hasnext
destinationinfo di   iter next
if  di getdestination   equals destination
iter remove
public void addtransactionstate transactionid id
checkshutdown
transactions put id  new transactionstate id
public transactionstate gettransactionstate transactionid id
return transactions get id
public collection<transactionstate> gettransactionstates
return transactions values
public transactionstate removetransactionstate transactionid id
return transactions remove id
public void addsession sessioninfo info
checkshutdown
sessions put info getsessionid    new sessionstate info
public sessionstate removesession sessionid id
return sessions remove id
public sessionstate getsessionstate sessionid id
return sessions get id
public connectioninfo getinfo
return info
public set<sessionid> getsessionids
return sessions keyset
public list<destinationinfo> gettempdesinations
return tempdestinations
public collection<sessionstate> getsessionstates
return sessions values
private void checkshutdown
if  shutdown get
throw new illegalstateexception
public void shutdown
if  shutdown compareandset false  true
for  iterator<sessionstate> iter   sessions values   iterator    iter hasnext
sessionstate ss   iter next
ss shutdown