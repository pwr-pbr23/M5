/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker view
import java io printwriter
import java util collection
import java util hashmap
import java util hashset
import java util iterator
import java util map
import java util set
import javax management mbeanserver
import javax management mbeanserverinvocationhandler
import javax management malformedobjectnameexception
import javax management objectname
import org apache activemq broker broker
import org apache activemq broker connectioncontext
import org apache activemq broker producerbrokerexchange
import org apache activemq broker jmx brokerviewmbean
import org apache activemq broker jmx managementcontext
import org apache activemq broker jmx subscriptionviewmbean
import org apache activemq broker region subscription
import org apache activemq command activemqdestination
import org apache activemq command consumerinfo
import org apache activemq command message
import org apache activemq command producerid
import org apache activemq command producerinfo
import org apache activemq filter destinationmapnode
/**
* @version $revision: $
*/
public class connectiondotfileinterceptor extends dotfileinterceptorsupport
protected static final string id_separator
private final boolean redrawonremove
private boolean clearproducercacheafterrender
private string domain
private brokerviewmbean brokerview
private mbeanserver mbeanserver
// until we have some mbeans for producers, lets do it all ourselves
private map<producerid  producerinfo> producers   new hashmap<producerid  producerinfo>
private map<producerid  set<activemqdestination>> producerdestinations   new hashmap<producerid  set<activemqdestination>>
private object lock   new object
public connectiondotfileinterceptor broker next  string file  boolean redrawonremove  throws malformedobjectnameexception
super next  file
this redrawonremove   redrawonremove
mbeanserver   new managementcontext   getmbeanserver
objectname brokername   new objectname domain
brokerview    brokerviewmbean mbeanserverinvocationhandler newproxyinstance mbeanserver  brokername  brokerviewmbean class  true
public subscription addconsumer connectioncontext context  consumerinfo info  throws exception
subscription answer   super addconsumer context  info
generatefile
return answer
public void addproducer connectioncontext context  producerinfo info  throws exception
super addproducer context  info
producerid producerid   info getproducerid
synchronized  lock
producers put producerid  info
generatefile
public void removeconsumer connectioncontext context  consumerinfo info  throws exception
super removeconsumer context  info
if  redrawonremove
generatefile
public void removeproducer connectioncontext context  producerinfo info  throws exception
super removeproducer context  info
producerid producerid   info getproducerid
if  redrawonremove
synchronized  lock
producerdestinations remove producerid
producers remove producerid
generatefile
public void send producerbrokerexchange producerexchange  message messagesend  throws exception
super send producerexchange  messagesend
producerid producerid   messagesend getproducerid
activemqdestination destination   messagesend getdestination
synchronized  lock
set<activemqdestination> destinations   producerdestinations get producerid
if  destinations    null
destinations   new hashset<activemqdestination>
producerdestinations put producerid  destinations
destinations add destination
protected void generatefile printwriter writer  throws exception
writer println  activemq connections
writer println
writer println  activemq broker
writer println
writer println  rounded filled  helvetica oblique
writer println
map<string  string> clients   new hashmap<string  string>
map<string  string> queues   new hashmap<string  string>
map<string  string> topics   new hashmap<string  string>
printsubscribers writer  clients  queues     brokerview getqueuesubscribers
writer println
printsubscribers writer  clients  topics     brokerview gettopicsubscribers
writer println
printproducers writer  clients  queues  topics
writer println
writelabels writer        clients
writer println
writelabels writer        queues
writelabels writer        topics
writer println
if  clearproducercacheafterrender
producerdestinations clear
protected void printproducers printwriter writer  map<string  string> clients  map<string  string> queues  map<string  string> topics
synchronized  lock
for  iterator iter   producerdestinations entryset   iterator    iter hasnext
map entry entry    map entry iter next
producerid producerid    producerid entry getkey
set destinationset    set entry getvalue
printproducers writer  clients  queues  topics  producerid  destinationset
protected void printproducers printwriter writer  map<string  string> clients  map<string  string> queues  map<string  string> topics  producerid producerid  set destinationset
for  iterator iter   destinationset iterator    iter hasnext
activemqdestination destination    activemqdestination iter next
// todo use clientid one day
string clientid   producerid getconnectionid
string safeclientid   asid clientid
clients put safeclientid  clientid
string physicalname   destination getphysicalname
string safedestinationid   asid physicalname
if  destination istopic
safedestinationid       safedestinationid
topics put safedestinationid  physicalname
else
safedestinationid       safedestinationid
queues put safedestinationid  physicalname
string safeproducerid   asid producerid tostring
// lets write out the links
writer print safeclientid
writer print
writer print safeproducerid
writer println
writer print safeproducerid
writer print
writer print safedestinationid
writer println
// now lets write out the label
writer print safeproducerid
writer print  "
string label       producerid getsessionid         producerid getvalue
writer print label
writer println  ] "
protected void printsubscribers printwriter writer  map<string  string> clients  map<string  string> destinations  string type  objectname subscribers
for  int i   0  i < subscribers length  i
objectname name   subscribers
subscriptionviewmbean subscriber    subscriptionviewmbean mbeanserverinvocationhandler newproxyinstance mbeanserver  name  subscriptionviewmbean class  true
string clientid   subscriber getclientid
string safeclientid   asid clientid
clients put safeclientid  clientid
string destination   subscriber getdestinationname
string safedestinationid   type   asid destination
destinations put safedestinationid  destination
string selector   subscriber getselector
// lets write out the links
string subscriberid   safeclientid       subscriber getsessionid         subscriber getsubcriptionid
writer print subscriberid
writer print
writer print safeclientid
writer println
writer print safedestinationid
writer print
writer print subscriberid
writer println
// now lets write out the label
writer print subscriberid
writer print  "
string label       subscriber getsessionid         subscriber getsubcriptionid
if  selector    null    selector length   > 0
label   label       selector
writer print label
writer println  ] "
protected void writelabels printwriter writer  string color  string prefix  map<string  string> map
for  iterator iter   map entryset   iterator    iter hasnext
map entry entry    map entry iter next
string id    string entry getkey
string label    string entry getvalue
writer print id
writer print
writer print color
writer print  "
writer print prefix
writer print label
writer println  ] "
/**
* lets strip out any non supported characters
*/
protected string asid string name
stringbuffer buffer   new stringbuffer
int size   name length
for  int i   0  i < size  i
char ch   name charat i
if  character isletterordigit ch     ch
buffer append ch
else
buffer append
return buffer tostring
protected void printnodes printwriter writer  destinationmapnode node  string prefix
string path   getpath node
writer print
writer print prefix
writer print id_separator
writer print path
string label   path
if  prefix equals
label
else if  prefix equals
label
writer print  "
writer print label
writer println   ] "
collection children   node getchildren
for  iterator iter   children iterator    iter hasnext
destinationmapnode child    destinationmapnode iter next
printnodes writer  child  prefix   id_separator   path
protected void printnodelinks printwriter writer  destinationmapnode node  string prefix
string path   getpath node
collection children   node getchildren
for  iterator iter   children iterator    iter hasnext
destinationmapnode child    destinationmapnode iter next
writer print
writer print prefix
writer print id_separator
writer print path
writer print
writer print prefix
writer print id_separator
writer print path
writer print id_separator
writer print getpath child
writer println
printnodelinks writer  child  prefix   id_separator   path
protected string getpath destinationmapnode node
string path   node getpath
if  path equals
return
return path