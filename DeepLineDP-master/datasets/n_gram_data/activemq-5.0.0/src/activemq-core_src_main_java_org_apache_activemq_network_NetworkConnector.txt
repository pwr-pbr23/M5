/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq network
import java net uri
import java net urisyntaxexception
import java util hashmap
import java util list
import java util map
import java util set
import java util concurrent copyonwritearraylist
import javax management mbeanserver
import javax management malformedobjectnameexception
import javax management objectname
import org apache activemq service
import org apache activemq broker brokerservice
import org apache activemq broker jmx networkbridgeview
import org apache activemq broker jmx networkbridgeviewmbean
import org apache activemq command activemqdestination
import org apache activemq transport transport
import org apache activemq transport transportfactory
import org apache activemq util jmxsupport
import org apache activemq util servicestopper
import org apache activemq util servicesupport
import org apache commons logging log
import org apache commons logging logfactory
/**
* @version $revision$
*/
public abstract class networkconnector extends networkbridgeconfiguration implements service
private static final log log   logfactory getlog networkconnector class
protected uri localuri
protected connectionfilter connectionfilter
protected servicesupport servicesupport   new servicesupport
protected void dostart   throws exception
handlestart
protected void dostop servicestopper stopper  throws exception
handlestop stopper
private set<activemqdestination> durabledestinations
private list<activemqdestination> excludeddestinations   new copyonwritearraylist<activemqdestination>
private list<activemqdestination> dynamicallyincludeddestinations   new copyonwritearraylist<activemqdestination>
private list<activemqdestination> staticallyincludeddestinations   new copyonwritearraylist<activemqdestination>
private brokerservice brokerservice
private objectname objectname
public networkconnector
public networkconnector uri localuri
this localuri   localuri
public uri getlocaluri   throws urisyntaxexception
return localuri
public void setlocaluri uri localuri
this localuri   localuri
/**
* @return returns the durabledestinations.
*/
public set getdurabledestinations
return durabledestinations
/**
* @param durabledestinations the durabledestinations to set.
*/
public void setdurabledestinations set<activemqdestination> durabledestinations
this durabledestinations   durabledestinations
/**
* @return returns the excludeddestinations.
*/
public list<activemqdestination> getexcludeddestinations
return excludeddestinations
/**
* @param excludeddestinations the excludeddestinations to set.
*/
public void setexcludeddestinations list<activemqdestination> excludeddestinations
this excludeddestinations   excludeddestinations
public void addexcludeddestination activemqdestination destiantion
this excludeddestinations add destiantion
/**
* @return returns the staticallyincludeddestinations.
*/
public list<activemqdestination> getstaticallyincludeddestinations
return staticallyincludeddestinations
/**
* @param staticallyincludeddestinations the staticallyincludeddestinations
*                to set.
*/
public void setstaticallyincludeddestinations list<activemqdestination> staticallyincludeddestinations
this staticallyincludeddestinations   staticallyincludeddestinations
public void addstaticallyincludeddestination activemqdestination destiantion
this staticallyincludeddestinations add destiantion
/**
* @return returns the dynamicallyincludeddestinations.
*/
public list<activemqdestination> getdynamicallyincludeddestinations
return dynamicallyincludeddestinations
/**
* @param dynamicallyincludeddestinations the
*                dynamicallyincludeddestinations to set.
*/
public void setdynamicallyincludeddestinations list<activemqdestination> dynamicallyincludeddestinations
this dynamicallyincludeddestinations   dynamicallyincludeddestinations
public void adddynamicallyincludeddestination activemqdestination destiantion
this dynamicallyincludeddestinations add destiantion
public connectionfilter getconnectionfilter
return connectionfilter
public void setconnectionfilter connectionfilter connectionfilter
this connectionfilter   connectionfilter
// implementation methods
// -------------------------------------------------------------------------
protected networkbridge configurebridge demandforwardingbridgesupport result
list<activemqdestination> destslist   getdynamicallyincludeddestinations
activemqdestination dests   destslist toarray new activemqdestination
result setdynamicallyincludeddestinations dests
destslist   getexcludeddestinations
dests   destslist toarray new activemqdestination
result setexcludeddestinations dests
destslist   getstaticallyincludeddestinations
dests   destslist toarray new activemqdestination
result setstaticallyincludeddestinations dests
if  durabledestinations    null
activemqdestination dest   new activemqdestination
dest    activemqdestination durabledestinations toarray dest
result setdurabledestinations dest
return result
protected transport createlocaltransport   throws exception
return transportfactory connect localuri
public void start   throws exception
servicesupport start
public void stop   throws exception
servicesupport stop
public abstract string getname
protected void handlestart   throws exception
if  localuri    null
throw new illegalstateexception
log info     getname
protected void handlestop servicestopper stopper  throws exception
log info     getname
public objectname getobjectname
return objectname
public void setobjectname objectname objectname
this objectname   objectname
public brokerservice getbrokerservice
return brokerservice
public void setbrokerservice brokerservice brokerservice
this brokerservice   brokerservice
protected void registernetworkbridgembean networkbridge bridge
if   getbrokerservice   isusejmx
return
mbeanserver mbeanserver   getbrokerservice   getmanagementcontext   getmbeanserver
if  mbeanserver    null
networkbridgeviewmbean view   new networkbridgeview bridge
try
objectname objectname   createnetworkbridgeobjectname bridge
mbeanserver registermbean view  objectname
catch  throwable e
log debug     e getmessage    e
protected void unregisternetworkbridgembean networkbridge bridge
if   getbrokerservice   isusejmx
return
mbeanserver mbeanserver   getbrokerservice   getmanagementcontext   getmbeanserver
if  mbeanserver    null
try
objectname objectname   createnetworkbridgeobjectname bridge
mbeanserver unregistermbean objectname
catch  throwable e
log debug     e getmessage    e
@suppresswarnings
protected objectname createnetworkbridgeobjectname networkbridge bridge  throws malformedobjectnameexception
objectname connectorname   getobjectname
map<string  string> map   new hashmap<string  string> connectorname getkeypropertylist
return new objectname connectorname getdomain             jmxsupport encodeobjectnamepart  string map get
jmxsupport encodeobjectnamepart  string map get
jmxsupport encodeobjectnamepart jmxsupport encodeobjectnamepart bridge getremoteaddress