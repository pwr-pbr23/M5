/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
import java util arrays
import javax jms connection
import javax jms deliverymode
import javax jms destination
import javax jms exceptionlistener
import javax jms jmsexception
import javax jms message
import javax jms messageconsumer
import javax jms messagelistener
import javax jms messageproducer
import javax jms session
import javax jms textmessage
import javax jms topic
import org apache activemq activemqconnection
import org apache activemq activemqconnectionfactory
/**
* a simple tool for consuming messages
*
* @version $revision: 1.1.1.1 $
*/
public class consumertool implements messagelistener  exceptionlistener
private boolean running
private session session
private destination destination
private messageproducer replyproducer
private boolean pausebeforeshutdown
private boolean verbose   true
private int maxiummessages
private string subject
private boolean topic
private string user   activemqconnection default_user
private string password   activemqconnection default_password
private string url   activemqconnection default_broker_url
private boolean transacted
private boolean durable
private string clientid
private int ackmode   session auto_acknowledge
private string consumername
private long sleeptime
private long receivetimeout
public static void main string args
consumertool consumertool   new consumertool
string unknown   commandlinesupport setoptions consumertool  args
if  unknown length > 0
system out println     arrays tostring unknown
system exit  1
consumertool run
public void run
try
running   true
system out println     url
system out println      topic ?              subject
system out println      durable ?
activemqconnectionfactory connectionfactory   new activemqconnectionfactory user  password  url
connection connection   connectionfactory createconnection
if  durable    clientid    null    clientid length   > 0       equals clientid
connection setclientid clientid
connection setexceptionlistener this
connection start
session   connection createsession transacted  ackmode
if  topic
destination   session createtopic subject
else
destination   session createqueue subject
replyproducer   session createproducer null
replyproducer setdeliverymode deliverymode non_persistent
messageconsumer consumer   null
if  durable    topic
consumer   session createdurablesubscriber  topic destination  consumername
else
consumer   session createconsumer destination
if  maxiummessages > 0
consumemessagesandclose connection  session  consumer
else
if  receivetimeout    0
consumer setmessagelistener this
else
consumemessagesandclose connection  session  consumer  receivetimeout
catch  exception e
system out println     e
e printstacktrace
public void onmessage message message
try
if  message instanceof textmessage
textmessage txtmsg    textmessage message
if  verbose
string msg   txtmsg gettext
if  msg length   > 50
msg   msg substring 0  50
system out println     msg
else
if  verbose
system out println     message
if  message getjmsreplyto      null
replyproducer send message getjmsreplyto    session createtextmessage     message getjmsmessageid
if  transacted
session commit
else if  ackmode    session client_acknowledge
message acknowledge
catch  jmsexception e
system out println     e
e printstacktrace
finally
if  sleeptime > 0
try
thread sleep sleeptime
catch  interruptedexception e
public synchronized void onexception jmsexception ex
system out println
running   false
synchronized boolean isrunning
return running
protected void consumemessagesandclose connection connection  session session  messageconsumer consumer  throws jmsexception  ioexception
system out println     maxiummessages
for  int i   0  i < maxiummessages    isrunning
message message   consumer receive 1000
if  message    null
i
onmessage message
system out println
consumer close
session close
connection close
if  pausebeforeshutdown
system out println
system in read
protected void consumemessagesandclose connection connection  session session  messageconsumer consumer  long timeout  throws jmsexception  ioexception
system out println     timeout
message message
while   message   consumer receive timeout      null
onmessage message
system out println
consumer close
session close
connection close
if  pausebeforeshutdown
system out println
system in read
public void setackmode string ackmode
if    equals ackmode
this ackmode   session client_acknowledge
if    equals ackmode
this ackmode   session auto_acknowledge
if    equals ackmode
this ackmode   session dups_ok_acknowledge
if    equals ackmode
this ackmode   session session_transacted
public void setclientid string clientid
this clientid   clientid
public void setconsumername string consumername
this consumername   consumername
public void setdurable boolean durable
this durable   durable
public void setmaxiummessages int maxiummessages
this maxiummessages   maxiummessages
public void setpausebeforeshutdown boolean pausebeforeshutdown
this pausebeforeshutdown   pausebeforeshutdown
public void setpassword string pwd
this password   pwd
public void setreceivetimeout long receivetimeout
this receivetimeout   receivetimeout
public void setsleeptime long sleeptime
this sleeptime   sleeptime
public void setsubject string subject
this subject   subject
public void settopic boolean topic
this topic   topic
public void setqueue boolean queue
this topic    queue
public void settransacted boolean transacted
this transacted   transacted
public void seturl string url
this url   url
public void setuser string user
this user   user
public void setverbose boolean verbose
this verbose   verbose