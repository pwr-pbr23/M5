/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
//========================================================================
//copyright 2007 csc - scientific computing ltd.
//========================================================================
package org apache activemq util
import java io file
import java io fileoutputstream
import java io ioexception
import java net url
import javax servlet filter
import javax servlet filterchain
import javax servlet filterconfig
import javax servlet servletexception
import javax servlet servletrequest
import javax servlet servletresponse
import javax servlet unavailableexception
import javax servlet http httpservletrequest
import javax servlet http httpservletresponse
import org mortbay log log
import org mortbay util io
import org mortbay util uriutil
import sun net www protocol http httpurlconnection
/**
* <p>
* adds support for http put, move and delete methods. if init parameters
* read-permission-role and write-permission-role are defined then all requests
* are authorized using the defined roles. also get methods are authorized.
* </p>
*
* @author aleksi kallio
*/
public class restfilter implements filter
private static final string http_header_destination
private static final string http_method_move
private static final string http_method_put
private static final string http_method_get
private static final string http_method_delete
private string readpermissionrole
private string writepermissionrole
private filterconfig filterconfig
public void init filterconfig filterconfig  throws unavailableexception
this filterconfig   filterconfig
readpermissionrole   filterconfig getinitparameter
writepermissionrole   filterconfig getinitparameter
private file locatefile httpservletrequest request
return new file filterconfig getservletcontext   getrealpath uriutil addpaths request getservletpath    request getpathinfo
public void dofilter servletrequest request  servletresponse response  filterchain chain  throws ioexception  servletexception
if    request instanceof httpservletrequest    response instanceof httpservletresponse
if  log isdebugenabled
log debug     request tostring
chain dofilter request  response
return
httpservletrequest httprequest    httpservletrequest request
httpservletresponse httpresponse    httpservletresponse response
if  httprequest getmethod   equals http_method_move
domove httprequest  httpresponse
else if  httprequest getmethod   equals http_method_put
doput httprequest  httpresponse
else if  httprequest getmethod   equals http_method_get
if  checkget httprequest  httpresponse
chain dofilter httprequest  httpresponse      actual processing
// done elsewhere
else if  httprequest getmethod   equals http_method_delete
dodelete httprequest  httpresponse
else
chain dofilter httprequest  httpresponse
protected void domove httpservletrequest request  httpservletresponse response  throws servletexception  ioexception
if  log isdebugenabled
log debug     request getrequesturi
if  writepermissionrole    null     request isuserinrole writepermissionrole
response senderror httpurlconnection http_forbidden
return
file file   locatefile request
string destination   request getheader http_header_destination
if  destination    null
response senderror httpurlconnection http_bad_request
return
try
url destinationurl   new url destination
io copyfile file  new file destinationurl getfile
io delete file
catch  ioexception e
response senderror httpurlconnection http_internal_error      file
// could
// not
// be
// moved
return
response setstatus httpurlconnection http_no_content      we return no
// content
protected boolean checkget httpservletrequest request  httpservletresponse response  throws servletexception  ioexception
if  log isdebugenabled
log debug     request getrequesturi
if  readpermissionrole    null     request isuserinrole readpermissionrole
response senderror httpurlconnection http_forbidden
return false
else
return true
protected void doput httpservletrequest request  httpservletresponse response  throws servletexception  ioexception
if  log isdebugenabled
log debug     request getrequesturi
if  writepermissionrole    null     request isuserinrole writepermissionrole
response senderror httpurlconnection http_forbidden
return
file file   locatefile request
if  file exists
boolean success   file delete       replace file if it exists
if   success
response senderror httpurlconnection http_internal_error      file
// existed
// and
// could
// not
// be
// deleted
return
fileoutputstream out   new fileoutputstream file
try
io copy request getinputstream    out
catch  ioexception e
log warn log exception  e      is this obsolete?
out close
throw e
response setstatus httpurlconnection http_no_content      we return no
// content
protected void dodelete httpservletrequest request  httpservletresponse response  throws servletexception  ioexception
if  log isdebugenabled
log debug     request getrequesturi
if  writepermissionrole    null     request isuserinrole writepermissionrole
response senderror httpurlconnection http_forbidden
return
file file   locatefile request
if   file exists
response senderror httpurlconnection http_not_found      file not
// found
return
boolean success   io delete file      actual delete operation
if  success
response setstatus httpurlconnection http_no_content      we return
// no
// content
else
response senderror httpurlconnection http_internal_error      could
// not
// be
// deleted
// due
// to
// internal
// error
public void destroy
// nothing to destroy