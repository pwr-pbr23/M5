/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq pool
import java io serializable
import java util iterator
import java util concurrent copyonwritearraylist
import javax jms bytesmessage
import javax jms destination
import javax jms jmsexception
import javax jms mapmessage
import javax jms message
import javax jms messageconsumer
import javax jms messagelistener
import javax jms messageproducer
import javax jms objectmessage
import javax jms queue
import javax jms queuebrowser
import javax jms queuereceiver
import javax jms queuesender
import javax jms queuesession
import javax jms streammessage
import javax jms temporaryqueue
import javax jms temporarytopic
import javax jms textmessage
import javax jms topic
import javax jms topicpublisher
import javax jms topicsession
import javax jms topicsubscriber
import org apache activemq activemqmessageproducer
import org apache activemq activemqqueuesender
import org apache activemq activemqsession
import org apache activemq activemqtopicpublisher
import org apache activemq alreadyclosedexception
import org apache commons logging log
import org apache commons logging logfactory
/**
* @version $revision: 1.1 $
*/
public class pooledsession implements topicsession  queuesession
private static final transient log log   logfactory getlog pooledsession class
private activemqsession session
private sessionpool sessionpool
private activemqmessageproducer messageproducer
private activemqqueuesender queuesender
private activemqtopicpublisher topicpublisher
private boolean transactional   true
private boolean ignoreclose
private final copyonwritearraylist<messageconsumer> consumers   new copyonwritearraylist<messageconsumer>
private final copyonwritearraylist<queuebrowser> browsers   new copyonwritearraylist<queuebrowser>
public pooledsession activemqsession asession  sessionpool sessionpool
this session   asession
this sessionpool   sessionpool
this transactional   session istransacted
protected boolean isignoreclose
return ignoreclose
protected void setignoreclose boolean ignoreclose
this ignoreclose   ignoreclose
public void close   throws jmsexception
if   ignoreclose
// todo a cleaner way to reset??
// lets reset the session
getsession   setmessagelistener null
// close any consumers and browsers that may have been created.
for  iterator<messageconsumer> iter   consumers iterator    iter hasnext
messageconsumer consumer   iter next
consumer close
consumers clear
for  iterator<queuebrowser> iter   browsers iterator    iter hasnext
queuebrowser browser   iter next
browser close
browsers clear
// maybe do a rollback?
if  transactional
try
getsession   rollback
catch  jmsexception e
log warn     e  e
// lets close the session and not put the session back into
// the pool
try
session close
catch  jmsexception e1
log trace     e1  e1
session   null
return
sessionpool returnsession this
public void commit   throws jmsexception
getsession   commit
public bytesmessage createbytesmessage   throws jmsexception
return getsession   createbytesmessage
public mapmessage createmapmessage   throws jmsexception
return getsession   createmapmessage
public message createmessage   throws jmsexception
return getsession   createmessage
public objectmessage createobjectmessage   throws jmsexception
return getsession   createobjectmessage
public objectmessage createobjectmessage serializable serializable  throws jmsexception
return getsession   createobjectmessage serializable
public queue createqueue string s  throws jmsexception
return getsession   createqueue s
public streammessage createstreammessage   throws jmsexception
return getsession   createstreammessage
public temporaryqueue createtemporaryqueue   throws jmsexception
return getsession   createtemporaryqueue
public temporarytopic createtemporarytopic   throws jmsexception
return getsession   createtemporarytopic
public void unsubscribe string s  throws jmsexception
getsession   unsubscribe s
public textmessage createtextmessage   throws jmsexception
return getsession   createtextmessage
public textmessage createtextmessage string s  throws jmsexception
return getsession   createtextmessage s
public topic createtopic string s  throws jmsexception
return getsession   createtopic s
public int getacknowledgemode   throws jmsexception
return getsession   getacknowledgemode
public boolean gettransacted   throws jmsexception
return getsession   gettransacted
public void recover   throws jmsexception
getsession   recover
public void rollback   throws jmsexception
getsession   rollback
public void run
if  session    null
session run
// consumer related methods
// -------------------------------------------------------------------------
public queuebrowser createbrowser queue queue  throws jmsexception
return addqueuebrowser getsession   createbrowser queue
public queuebrowser createbrowser queue queue  string selector  throws jmsexception
return addqueuebrowser getsession   createbrowser queue  selector
public messageconsumer createconsumer destination destination  throws jmsexception
return addconsumer getsession   createconsumer destination
public messageconsumer createconsumer destination destination  string selector  throws jmsexception
return addconsumer getsession   createconsumer destination  selector
public messageconsumer createconsumer destination destination  string selector  boolean nolocal  throws jmsexception
return addconsumer getsession   createconsumer destination  selector  nolocal
public topicsubscriber createdurablesubscriber topic topic  string selector  throws jmsexception
return addtopicsubscriber getsession   createdurablesubscriber topic  selector
public topicsubscriber createdurablesubscriber topic topic  string name  string selector  boolean nolocal  throws jmsexception
return addtopicsubscriber getsession   createdurablesubscriber topic  name  selector  nolocal
public messagelistener getmessagelistener   throws jmsexception
return getsession   getmessagelistener
public void setmessagelistener messagelistener messagelistener  throws jmsexception
getsession   setmessagelistener messagelistener
public topicsubscriber createsubscriber topic topic  throws jmsexception
return addtopicsubscriber getsession   createsubscriber topic
public topicsubscriber createsubscriber topic topic  string selector  boolean local  throws jmsexception
return addtopicsubscriber getsession   createsubscriber topic  selector  local
public queuereceiver createreceiver queue queue  throws jmsexception
return addqueuereceiver getsession   createreceiver queue
public queuereceiver createreceiver queue queue  string selector  throws jmsexception
return addqueuereceiver getsession   createreceiver queue  selector
// producer related methods
// -------------------------------------------------------------------------
public messageproducer createproducer destination destination  throws jmsexception
return new pooledproducer getmessageproducer    destination
public queuesender createsender queue queue  throws jmsexception
return new pooledqueuesender getqueuesender    queue
public topicpublisher createpublisher topic topic  throws jmsexception
return new pooledtopicpublisher gettopicpublisher    topic
// implementation methods
// -------------------------------------------------------------------------
protected activemqsession getsession   throws alreadyclosedexception
if  session    null
throw new alreadyclosedexception
return session
public activemqmessageproducer getmessageproducer   throws jmsexception
if  messageproducer    null
messageproducer    activemqmessageproducer getsession   createproducer null
return messageproducer
public activemqqueuesender getqueuesender   throws jmsexception
if  queuesender    null
queuesender    activemqqueuesender getsession   createsender null
return queuesender
public activemqtopicpublisher gettopicpublisher   throws jmsexception
if  topicpublisher    null
topicpublisher    activemqtopicpublisher getsession   createpublisher null
return topicpublisher
private queuebrowser addqueuebrowser queuebrowser browser
browsers add browser
return browser
private messageconsumer addconsumer messageconsumer consumer
consumers add consumer
return consumer
private topicsubscriber addtopicsubscriber topicsubscriber subscriber
consumers add subscriber
return subscriber
private queuereceiver addqueuereceiver queuereceiver receiver
consumers add receiver
return receiver
public string tostring
return     session