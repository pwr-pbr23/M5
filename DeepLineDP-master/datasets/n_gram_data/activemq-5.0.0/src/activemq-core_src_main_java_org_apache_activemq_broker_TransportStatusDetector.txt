/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker
import java util iterator
import java util set
import java util concurrent copyonwritearrayset
import java util concurrent atomic atomicboolean
import org apache activemq service
import org apache activemq threadpriorities
import org apache commons logging log
import org apache commons logging logfactory
/**
* used to provide information on the status of the connection
*
* @version $revision: 1.5 $
*/
public class transportstatusdetector implements service  runnable
private static final log log   logfactory getlog transportstatusdetector class
private transportconnector connector
private set<transportconnection> collectioncandidates   new copyonwritearrayset<transportconnection>
private atomicboolean started   new atomicboolean false
private thread runner
private int sweepinterval   5000
transportstatusdetector transportconnector connector
this connector   connector
/**
* @return returns the sweepinterval.
*/
public int getsweepinterval
return sweepinterval
/**
* the sweepinterval to set.
*
* @param sweepinterval
*/
public void setsweepinterval int sweepinterval
this sweepinterval   sweepinterval
protected void docollection
for  iterator<transportconnection> i   collectioncandidates iterator    i hasnext
transportconnection tc   i next
if  tc ismarkedcandidate
if  tc isblockedcandidate
collectioncandidates remove tc
docollection tc
else
tc domark
else
collectioncandidates remove tc
protected void dosweep
for  iterator i   connector getconnections   iterator    i hasnext
transportconnection connection    transportconnection i next
if  connection ismarkedcandidate
connection domark
collectioncandidates add connection
protected void docollection transportconnection tc
log warn     tc
try
tc stop
catch  exception e
log error     tc  e
public void run
while  started get
try
docollection
dosweep
thread sleep sweepinterval
catch  throwable e
log error    e
public void start   throws exception
if  started compareandset false  true
runner   new thread this      connector
runner setdaemon true
runner setpriority threadpriorities broker_management
runner start
public void stop   throws exception
started set false
if  runner    null
runner join getsweepinterval     5