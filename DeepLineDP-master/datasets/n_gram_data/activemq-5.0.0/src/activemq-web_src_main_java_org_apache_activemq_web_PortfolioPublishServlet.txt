/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq web
import java io ioexception
import java io printwriter
import java util hashtable
import java util map
import javax jms destination
import javax jms jmsexception
import javax jms message
import javax jms session
import javax servlet servletexception
import javax servlet http httpservletrequest
import javax servlet http httpservletresponse
/**
* a servlet which will publish dummy market data prices
*
* @version $revision: 1.1.1.1 $
*/
public class portfoliopublishservlet extends messageservletsupport
private static final int max_delta_percent   1
private static final map<string  double> last_prices   new hashtable<string  double>
public void init   throws servletexception
super init
protected void doget httpservletrequest request  httpservletresponse response  throws servletexception  ioexception
printwriter out   response getwriter
string stocks   request getparametervalues
if  stocks    null    stocks length    0
out println
else
integer total    integer request getsession true  getattribute
if  total    null
total   integer valueof 0
int count   getnumberofmessages request
total   integer valueof total intvalue     count
request getsession   setattribute    total
try
webclient client   webclient getwebclient request
for  int i   0  i < count  i
sendmessage client  stocks
out print
string refreshrate   request getparameter
if  refreshrate    null    refreshrate length      0
refreshrate
out print refreshrate
out println
out println     count       total       refreshrate
out println
catch  jmsexception e
out println     e
log     e  e
protected void sendmessage webclient client  string stocks  throws jmsexception
session session   client getsession
int idx   0
while  true
idx    int math round stocks length   math random
if  idx < stocks length
break
string stock   stocks
destination destination   session createtopic     stock
string stocktext   createstocktext stock
log     stocktext       destination
message message   session createtextmessage stocktext
client send destination  message
protected string createstocktext string stock
double value   last_prices get stock
if  value    null
value   new double math random     100
// lets mutate the value by some percentage
double oldprice   value doublevalue
value   new double mutateprice oldprice
last_prices put stock  value
double price   value doublevalue
double offer   price   1 001
string movement    price > oldprice  ?
return     stock       price       offer       movement
protected double mutateprice double price
double percentchange    2   math random     max_delta_percent    max_delta_percent
return price    100   percentchange    100
protected int getnumberofmessages httpservletrequest request
string name   request getparameter
if  name    null
return integer parseint name
return 1