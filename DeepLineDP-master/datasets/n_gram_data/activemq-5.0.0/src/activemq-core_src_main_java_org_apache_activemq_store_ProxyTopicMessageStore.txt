/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq store
import java io ioexception
import org apache activemq broker connectioncontext
import org apache activemq command activemqdestination
import org apache activemq command message
import org apache activemq command messageack
import org apache activemq command messageid
import org apache activemq command subscriptioninfo
import org apache activemq usage memoryusage
import org apache activemq usage systemusage
/**
* a simple proxy that delegates to another messagestore.
*/
public class proxytopicmessagestore implements topicmessagestore
final topicmessagestore delegate
public proxytopicmessagestore topicmessagestore delegate
this delegate   delegate
public messagestore getdelegate
return delegate
public void addmessage connectioncontext context  message message  throws ioexception
delegate addmessage context  message
public message getmessage messageid identity  throws ioexception
return delegate getmessage identity
public void recover messagerecoverylistener listener  throws exception
delegate recover listener
public void removeallmessages connectioncontext context  throws ioexception
delegate removeallmessages context
public void removemessage connectioncontext context  messageack ack  throws ioexception
delegate removemessage context  ack
public void start   throws exception
delegate start
public void stop   throws exception
delegate stop
public subscriptioninfo lookupsubscription string clientid  string subscriptionname  throws ioexception
return delegate lookupsubscription clientid  subscriptionname
public void acknowledge connectioncontext context  string clientid  string subscriptionname
messageid messageid  throws ioexception
delegate acknowledge context  clientid  subscriptionname  messageid
public void addsubsciption subscriptioninfo subscriptioninfo  boolean retroactive  throws ioexception
delegate addsubsciption subscriptioninfo  retroactive
public void deletesubscription string clientid  string subscriptionname  throws ioexception
delegate deletesubscription clientid  subscriptionname
public void recoversubscription string clientid  string subscriptionname  messagerecoverylistener listener
throws exception
delegate recoversubscription clientid  subscriptionname  listener
public void recovernextmessages string clientid  string subscriptionname  int maxreturned
messagerecoverylistener listener  throws exception
delegate recovernextmessages clientid  subscriptionname  maxreturned  listener
public void resetbatching string clientid  string subscriptionname
delegate resetbatching clientid  subscriptionname
public activemqdestination getdestination
return delegate getdestination
public subscriptioninfo getallsubscriptions   throws ioexception
return delegate getallsubscriptions
public void setmemoryusage memoryusage memoryusage
delegate setmemoryusage memoryusage
public int getmessagecount string clientid  string subscribername  throws ioexception
return delegate getmessagecount clientid  subscribername
public int getmessagecount   throws ioexception
return delegate getmessagecount
public void recovernextmessages int maxreturned  messagerecoverylistener listener  throws exception
delegate recovernextmessages maxreturned  listener
public void resetbatching
delegate resetbatching