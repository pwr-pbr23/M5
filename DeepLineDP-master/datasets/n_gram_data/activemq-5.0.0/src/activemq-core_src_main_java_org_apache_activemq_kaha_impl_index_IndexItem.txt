/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq kaha impl index
import java io datainput
import java io dataoutput
import java io ioexception
import org apache activemq kaha storeentry
import org apache activemq kaha storelocation
import org apache activemq kaha impl data dataitem
import org apache activemq kaha impl data item
/**
* a an item with a relative position and location to other items in the store
*
* @version $revision: 1.2 $
*/
public class indexitem implements item  storeentry
public static final int index_size   51
public static final int indexes_only_size   19
protected long offset   position_not_set
// used by linked list
indexitem next
indexitem prev
private long previousitem   position_not_set
private long nextitem   position_not_set
private boolean active   true
// todo: consider just using a dataitem for the following fields.
private long keyoffset   position_not_set
private int keyfile    int position_not_set
private int keysize
private long valueoffset   position_not_set
private int valuefile    int position_not_set
private int valuesize
/**
* default constructor
*/
public indexitem
void reset
previousitem   position_not_set
nextitem   position_not_set
keyoffset   position_not_set
keyfile    int position_not_set
keysize   0
valueoffset   position_not_set
valuefile    int position_not_set
valuesize   0
active   true
/**
* @return
* @see org.apache.activemq.kaha.storeentry#getkeydataitem()
*/
public storelocation getkeydataitem
dataitem result   new dataitem
result setoffset keyoffset
result setfile keyfile
result setsize keysize
return result
/**
* @return
* @see org.apache.activemq.kaha.storeentry#getvaluedataitem()
*/
public storelocation getvaluedataitem
dataitem result   new dataitem
result setoffset valueoffset
result setfile valuefile
result setsize valuesize
return result
public void setvaluedata storelocation item
valueoffset   item getoffset
valuefile   item getfile
valuesize   item getsize
public void setkeydata storelocation item
keyoffset   item getoffset
keyfile   item getfile
keysize   item getsize
/**
* @param dataout
* @throws ioexception
*/
public void write dataoutput dataout  throws ioexception
dataout writeshort magic
dataout writeboolean active
dataout writelong previousitem
dataout writelong nextitem
dataout writeint keyfile
dataout writelong keyoffset
dataout writeint keysize
dataout writeint valuefile
dataout writelong valueoffset
dataout writeint valuesize
void updateindexes dataoutput dataout  throws ioexception
dataout writeshort magic
dataout writeboolean active
dataout writelong previousitem
dataout writelong nextitem
/**
* @param datain
* @throws ioexception
*/
public void read datainput datain  throws ioexception
if  datain readshort      magic
throw new badmagicexception
active   datain readboolean
previousitem   datain readlong
nextitem   datain readlong
keyfile   datain readint
keyoffset   datain readlong
keysize   datain readint
valuefile   datain readint
valueoffset   datain readlong
valuesize   datain readint
void readindexes datainput datain  throws ioexception
if  datain readshort      magic
throw new badmagicexception
active   datain readboolean
previousitem   datain readlong
nextitem   datain readlong
/**
* @param newpreventry
*/
public void setpreviousitem long newpreventry
previousitem   newpreventry
/**
* @return prev item
*/
long getpreviousitem
return previousitem
/**
* @param newnextentry
*/
public void setnextitem long newnextentry
nextitem   newnextentry
/**
* @return
* @see org.apache.activemq.kaha.storeentry#getnextitem()
*/
public long getnextitem
return nextitem
/**
* @param newobjectoffset
*/
void setkeyoffset long newobjectoffset
keyoffset   newobjectoffset
/**
* @return key offset
*/
long getkeyoffset
return keyoffset
/**
* @return
* @see org.apache.activemq.kaha.storeentry#getkeyfile()
*/
public int getkeyfile
return keyfile
/**
* @param keyfile the keyfile to set.
*/
void setkeyfile int keyfile
this keyfile   keyfile
/**
* @return
* @see org.apache.activemq.kaha.storeentry#getvaluefile()
*/
public int getvaluefile
return valuefile
/**
* @param valuefile the valuefile to set.
*/
void setvaluefile int valuefile
this valuefile   valuefile
/**
* @return
* @see org.apache.activemq.kaha.storeentry#getvalueoffset()
*/
public long getvalueoffset
return valueoffset
/**
* @param valueoffset the valueoffset to set.
*/
public void setvalueoffset long valueoffset
this valueoffset   valueoffset
/**
* @return returns the active.
*/
boolean isactive
return active
/**
* @param active the active to set.
*/
void setactive boolean active
this active   active
/**
* @return
* @see org.apache.activemq.kaha.storeentry#getoffset()
*/
public long getoffset
return offset
/**
* @param offset the offset to set.
*/
public void setoffset long offset
this offset   offset
/**
* @return
* @see org.apache.activemq.kaha.storeentry#getkeysize()
*/
public int getkeysize
return keysize
public void setkeysize int keysize
this keysize   keysize
/**
* @return
* @see org.apache.activemq.kaha.storeentry#getvaluesize()
*/
public int getvaluesize
return valuesize
public void setvaluesize int valuesize
this valuesize   valuesize
/**
* @return print of 'this'
*/
public string tostring
string result       offset       keyfile       keyoffset       keysize           valuefile       valueoffset       valuesize
previousitem       nextitem
return result
public boolean equals object obj
boolean result   obj    this
if   result    obj    null    obj instanceof indexitem
indexitem other    indexitem obj
result   other offset    this offset
return result
public int hashcode
return  int offset