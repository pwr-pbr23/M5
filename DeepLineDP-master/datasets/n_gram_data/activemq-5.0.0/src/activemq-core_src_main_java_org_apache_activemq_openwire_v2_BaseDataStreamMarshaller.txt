/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq openwire v2
import java io datainput
import java io dataoutput
import java io ioexception
import java lang reflect constructor
import org apache activemq command datastructure
import org apache activemq openwire booleanstream
import org apache activemq openwire datastreammarshaller
import org apache activemq openwire openwireformat
import org apache activemq util bytesequence
import org apache activemq util classloading
public abstract class basedatastreammarshaller implements datastreammarshaller
public static final constructor stack_trace_element_constructor
static
constructor constructor   null
try
constructor   stacktraceelement class getconstructor new class  string class  string class
string class  int class
catch  throwable e
stack_trace_element_constructor   constructor
public abstract byte getdatastructuretype
public abstract datastructure createobject
public int tightmarshal1 openwireformat wireformat  object o  booleanstream bs  throws ioexception
return 0
public void tightmarshal2 openwireformat wireformat  object o  dataoutput dataout  booleanstream bs
throws ioexception
public void tightunmarshal openwireformat wireformat  object o  datainput datain  booleanstream bs
throws ioexception
public int tightmarshallong1 openwireformat wireformat  long o  booleanstream bs  throws ioexception
if  o    0
bs writeboolean false
bs writeboolean false
return 0
else if   o   0xffffffffffff0000l     0
bs writeboolean false
bs writeboolean true
return 2
else if   o   0xffffffff00000000l     0
bs writeboolean true
bs writeboolean false
return 4
else
bs writeboolean true
bs writeboolean true
return 8
public void tightmarshallong2 openwireformat wireformat  long o  dataoutput dataout  booleanstream bs
throws ioexception
if  bs readboolean
if  bs readboolean
dataout writelong o
else
dataout writeint  int o
else
if  bs readboolean
dataout writeshort  int o
public long tightunmarshallong openwireformat wireformat  datainput datain  booleanstream bs
throws ioexception
if  bs readboolean
if  bs readboolean
return datain readlong
else
return tolong datain readint
else
if  bs readboolean
return tolong datain readshort
else
return 0
protected long tolong short value
// lets handle negative values
long answer   value
return answer   0xffffl
protected long tolong int value
// lets handle negative values
long answer   value
return answer   0xffffffffl
protected datastructure tightunmarsalnestedobject openwireformat wireformat  datainput datain
booleanstream bs  throws ioexception
return wireformat tightunmarshalnestedobject datain  bs
protected int tightmarshalnestedobject1 openwireformat wireformat  datastructure o  booleanstream bs
throws ioexception
return wireformat tightmarshalnestedobject1 o  bs
protected void tightmarshalnestedobject2 openwireformat wireformat  datastructure o  dataoutput dataout
booleanstream bs  throws ioexception
wireformat tightmarshalnestedobject2 o  dataout  bs
protected datastructure tightunmarsalcachedobject openwireformat wireformat  datainput datain
booleanstream bs  throws ioexception
if  wireformat iscacheenabled
if  bs readboolean
short index   datain readshort
datastructure object   wireformat tightunmarshalnestedobject datain  bs
wireformat setinunmarshallcache index  object
return object
else
short index   datain readshort
return wireformat getfromunmarshallcache index
else
return wireformat tightunmarshalnestedobject datain  bs
protected int tightmarshalcachedobject1 openwireformat wireformat  datastructure o  booleanstream bs
throws ioexception
if  wireformat iscacheenabled
short index   wireformat getmarshallcacheindex o
bs writeboolean index    null
if  index    null
int rc   wireformat tightmarshalnestedobject1 o  bs
wireformat addtomarshallcache o
return 2   rc
else
return 2
else
return wireformat tightmarshalnestedobject1 o  bs
protected void tightmarshalcachedobject2 openwireformat wireformat  datastructure o  dataoutput dataout
booleanstream bs  throws ioexception
if  wireformat iscacheenabled
short index   wireformat getmarshallcacheindex o
if  bs readboolean
dataout writeshort index shortvalue
wireformat tightmarshalnestedobject2 o  dataout  bs
else
dataout writeshort index shortvalue
else
wireformat tightmarshalnestedobject2 o  dataout  bs
protected throwable tightunmarsalthrowable openwireformat wireformat  datainput datain  booleanstream bs
throws ioexception
if  bs readboolean
string clazz   tightunmarshalstring datain  bs
string message   tightunmarshalstring datain  bs
throwable o   createthrowable clazz  message
if  wireformat isstacktraceenabled
if  stack_trace_element_constructor    null
stacktraceelement ss   new stacktraceelement
for  int i   0  i < ss length  i
try
ss    stacktraceelement stack_trace_element_constructor
newinstance new object  tightunmarshalstring datain  bs
tightunmarshalstring datain  bs
tightunmarshalstring datain  bs
integer valueof datain readint
catch  ioexception e
throw e
catch  throwable e
o setstacktrace ss
else
short size   datain readshort
for  int i   0  i < size  i
tightunmarshalstring datain  bs
tightunmarshalstring datain  bs
tightunmarshalstring datain  bs
datain readint
o initcause tightunmarsalthrowable wireformat  datain  bs
return o
else
return null
private throwable createthrowable string classname  string message
try
class clazz   classloading loadclass classname  basedatastreammarshaller class getclassloader
constructor constructor   clazz getconstructor new class  string class
return  throwable constructor newinstance new object  message
catch  throwable e
return new throwable classname       message
protected int tightmarshalthrowable1 openwireformat wireformat  throwable o  booleanstream bs
throws ioexception
if  o    null
bs writeboolean false
return 0
else
int rc   0
bs writeboolean true
rc    tightmarshalstring1 o getclass   getname    bs
rc    tightmarshalstring1 o getmessage    bs
if  wireformat isstacktraceenabled
rc    2
stacktraceelement stacktrace   o getstacktrace
for  int i   0  i < stacktrace length  i
stacktraceelement element   stacktrace
rc    tightmarshalstring1 element getclassname    bs
rc    tightmarshalstring1 element getmethodname    bs
rc    tightmarshalstring1 element getfilename    bs
rc    4
rc    tightmarshalthrowable1 wireformat  o getcause    bs
return rc
protected void tightmarshalthrowable2 openwireformat wireformat  throwable o  dataoutput dataout
booleanstream bs  throws ioexception
if  bs readboolean
tightmarshalstring2 o getclass   getname    dataout  bs
tightmarshalstring2 o getmessage    dataout  bs
if  wireformat isstacktraceenabled
stacktraceelement stacktrace   o getstacktrace
dataout writeshort stacktrace length
for  int i   0  i < stacktrace length  i
stacktraceelement element   stacktrace
tightmarshalstring2 element getclassname    dataout  bs
tightmarshalstring2 element getmethodname    dataout  bs
tightmarshalstring2 element getfilename    dataout  bs
dataout writeint element getlinenumber
tightmarshalthrowable2 wireformat  o getcause    dataout  bs
@suppresswarnings
protected string tightunmarshalstring datainput datain  booleanstream bs  throws ioexception
if  bs readboolean
if  bs readboolean
int size   datain readshort
byte data   new byte
datain readfully data
// yes deprecated, but we know what we are doing.
// this allows us to create a string from a ascii byte array. (no utf-8 decoding)
return new string data  0
else
return datain readutf
else
return null
protected int tightmarshalstring1 string value  booleanstream bs  throws ioexception
bs writeboolean value    null
if  value    null
int strlen   value length
int utflen   0
char charr   new char
int c   0
boolean isonlyascii   true
value getchars 0  strlen  charr  0
for  int i   0  i < strlen  i
c   charr
if   c >  0x0001      c <  0x007f
utflen
else if  c > 0x07ff
utflen    3
isonlyascii   false
else
isonlyascii   false
utflen    2
if  utflen >  short max_value
throw new ioexception
bs writeboolean isonlyascii
return utflen   2
else
return 0
protected void tightmarshalstring2 string value  dataoutput dataout  booleanstream bs  throws ioexception
if  bs readboolean
// if we verified it only holds ascii values
if  bs readboolean
dataout writeshort value length
dataout writebytes value
else
dataout writeutf value
protected int tightmarshalobjectarray1 openwireformat wireformat  datastructure objects
booleanstream bs  throws ioexception
if  objects    null
int rc   0
bs writeboolean true
rc    2
for  int i   0  i < objects length  i
rc    tightmarshalnestedobject1 wireformat  objects  bs
return rc
else
bs writeboolean false
return 0
protected void tightmarshalobjectarray2 openwireformat wireformat  datastructure objects
dataoutput dataout  booleanstream bs  throws ioexception
if  bs readboolean
dataout writeshort objects length
for  int i   0  i < objects length  i
tightmarshalnestedobject2 wireformat  objects  dataout  bs
protected int tightmarshalconstbytearray1 byte data  booleanstream bs  int i  throws ioexception
return i
protected void tightmarshalconstbytearray2 byte data  dataoutput dataout  booleanstream bs  int i
throws ioexception
dataout write data  0  i
protected byte tightunmarshalconstbytearray datainput datain  booleanstream bs  int i
throws ioexception
byte data   new byte
datain readfully data
return data
protected int tightmarshalbytearray1 byte data  booleanstream bs  throws ioexception
bs writeboolean data    null
if  data    null
return data length   4
else
return 0
protected void tightmarshalbytearray2 byte data  dataoutput dataout  booleanstream bs
throws ioexception
if  bs readboolean
dataout writeint data length
dataout write data
protected byte tightunmarshalbytearray datainput datain  booleanstream bs  throws ioexception
byte rc   null
if  bs readboolean
int size   datain readint
rc   new byte
datain readfully rc
return rc
protected int tightmarshalbytesequence1 bytesequence data  booleanstream bs  throws ioexception
bs writeboolean data    null
if  data    null
return data getlength     4
else
return 0
protected void tightmarshalbytesequence2 bytesequence data  dataoutput dataout  booleanstream bs
throws ioexception
if  bs readboolean
dataout writeint data getlength
dataout write data getdata    data getoffset    data getlength
protected bytesequence tightunmarshalbytesequence datainput datain  booleanstream bs  throws ioexception
bytesequence rc   null
if  bs readboolean
int size   datain readint
byte t   new byte
datain readfully t
return new bytesequence t  0  size
return rc
//
// the loose marshaling logic
//
public void loosemarshal openwireformat wireformat  object o  dataoutput dataout  throws ioexception
public void looseunmarshal openwireformat wireformat  object o  datainput datain  throws ioexception
public void loosemarshallong openwireformat wireformat  long o  dataoutput dataout  throws ioexception
dataout writelong o
public long looseunmarshallong openwireformat wireformat  datainput datain  throws ioexception
return datain readlong
protected datastructure looseunmarsalnestedobject openwireformat wireformat  datainput datain
throws ioexception
return wireformat looseunmarshalnestedobject datain
protected void loosemarshalnestedobject openwireformat wireformat  datastructure o  dataoutput dataout
throws ioexception
wireformat loosemarshalnestedobject o  dataout
protected datastructure looseunmarsalcachedobject openwireformat wireformat  datainput datain
throws ioexception
if  wireformat iscacheenabled
if  datain readboolean
short index   datain readshort
datastructure object   wireformat looseunmarshalnestedobject datain
wireformat setinunmarshallcache index  object
return object
else
short index   datain readshort
return wireformat getfromunmarshallcache index
else
return wireformat looseunmarshalnestedobject datain
protected void loosemarshalcachedobject openwireformat wireformat  datastructure o  dataoutput dataout
throws ioexception
if  wireformat iscacheenabled
short index   wireformat getmarshallcacheindex o
dataout writeboolean index    null
if  index    null
index   wireformat addtomarshallcache o
dataout writeshort index shortvalue
wireformat loosemarshalnestedobject o  dataout
else
dataout writeshort index shortvalue
else
wireformat loosemarshalnestedobject o  dataout
protected throwable looseunmarsalthrowable openwireformat wireformat  datainput datain
throws ioexception
if  datain readboolean
string clazz   looseunmarshalstring datain
string message   looseunmarshalstring datain
throwable o   createthrowable clazz  message
if  wireformat isstacktraceenabled
if  stack_trace_element_constructor    null
stacktraceelement ss   new stacktraceelement
for  int i   0  i < ss length  i
try
ss    stacktraceelement stack_trace_element_constructor
newinstance new object  looseunmarshalstring datain
looseunmarshalstring datain
looseunmarshalstring datain
integer valueof datain readint
catch  ioexception e
throw e
catch  throwable e
o setstacktrace ss
else
short size   datain readshort
for  int i   0  i < size  i
looseunmarshalstring datain
looseunmarshalstring datain
looseunmarshalstring datain
datain readint
o initcause looseunmarsalthrowable wireformat  datain
return o
else
return null
protected void loosemarshalthrowable openwireformat wireformat  throwable o  dataoutput dataout
throws ioexception
dataout writeboolean o    null
if  o    null
loosemarshalstring o getclass   getname    dataout
loosemarshalstring o getmessage    dataout
if  wireformat isstacktraceenabled
stacktraceelement stacktrace   o getstacktrace
dataout writeshort stacktrace length
for  int i   0  i < stacktrace length  i
stacktraceelement element   stacktrace
loosemarshalstring element getclassname    dataout
loosemarshalstring element getmethodname    dataout
loosemarshalstring element getfilename    dataout
dataout writeint element getlinenumber
loosemarshalthrowable wireformat  o getcause    dataout
protected string looseunmarshalstring datainput datain  throws ioexception
if  datain readboolean
return datain readutf
else
return null
protected void loosemarshalstring string value  dataoutput dataout  throws ioexception
dataout writeboolean value    null
if  value    null
dataout writeutf value
protected void loosemarshalobjectarray openwireformat wireformat  datastructure objects
dataoutput dataout  throws ioexception
dataout writeboolean objects    null
if  objects    null
dataout writeshort objects length
for  int i   0  i < objects length  i
loosemarshalnestedobject wireformat  objects  dataout
protected void loosemarshalconstbytearray openwireformat wireformat  byte data  dataoutput dataout
int i  throws ioexception
dataout write data  0  i
protected byte looseunmarshalconstbytearray datainput datain  int i  throws ioexception
byte data   new byte
datain readfully data
return data
protected void loosemarshalbytearray openwireformat wireformat  byte data  dataoutput dataout
throws ioexception
dataout writeboolean data    null
if  data    null
dataout writeint data length
dataout write data
protected byte looseunmarshalbytearray datainput datain  throws ioexception
byte rc   null
if  datain readboolean
int size   datain readint
rc   new byte
datain readfully rc
return rc
protected void loosemarshalbytesequence openwireformat wireformat  bytesequence data  dataoutput dataout
throws ioexception
dataout writeboolean data    null
if  data    null
dataout writeint data getlength
dataout write data getdata    data getoffset    data getlength
protected bytesequence looseunmarshalbytesequence datainput datain  throws ioexception
bytesequence rc   null
if  datain readboolean
int size   datain readint
byte t   new byte
datain readfully t
rc   new bytesequence t  0  size
return rc