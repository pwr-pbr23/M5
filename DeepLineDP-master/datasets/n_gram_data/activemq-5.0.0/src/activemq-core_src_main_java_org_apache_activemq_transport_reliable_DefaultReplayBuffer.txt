/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport reliable
import java io ioexception
import java util hashmap
import java util map
import org apache commons logging log
import org apache commons logging logfactory
/**
*
* @version $revision$
*/
public class defaultreplaybuffer implements replaybuffer
private static final log log   logfactory getlog defaultreplaybuffer class
private final int size
private replaybufferlistener listener
private map<integer  object> map
private int lowestcommandid   1
private object lock   new object
public defaultreplaybuffer int size
this size   size
map   createmap size
public void addbuffer int commandid  object buffer
if  log isdebugenabled
log debug     commandid       this       buffer
synchronized  lock
int max   size   1
while  map size   >  max
// lets find things to evict
object evictedbuffer   map remove integer valueof   lowestcommandid
onevictedbuffer lowestcommandid  evictedbuffer
map put integer valueof commandid   buffer
public void setreplaybufferlistener replaybufferlistener bufferpooladapter
this listener   bufferpooladapter
public void replaymessages int fromcommandid  int tocommandid  replayer replayer  throws ioexception
if  replayer    null
throw new illegalargumentexception
if  log isdebugenabled
log debug     this       fromcommandid       tocommandid
for  int i   fromcommandid  i <  tocommandid  i
object buffer   null
synchronized  lock
buffer   map get integer valueof i
replayer sendbuffer i  buffer
protected map<integer  object> createmap int maximumsize
return new hashmap<integer  object> maximumsize
protected void onevictedbuffer int commandid  object buffer
if  listener    null
listener onbufferdiscarded commandid  buffer