/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq ra
import javax jms jmsexception
import javax resource resourceexception
import javax resource spi localtransaction
import javax transaction xa xaexception
import javax transaction xa xaresource
import javax transaction xa xid
import org apache activemq transactioncontext
/**
* used to provide a localtransaction and xaresource to a jms session.
*/
public class localandxatransaction implements xaresource  localtransaction
private final transactioncontext transactioncontext
private boolean inmanagedtx
public localandxatransaction transactioncontext transactioncontext
this transactioncontext   transactioncontext
public void setinmanagedtx boolean inmanagedtx  throws jmsexception
this inmanagedtx   inmanagedtx
if   inmanagedtx
transactioncontext cleanup
public void begin   throws resourceexception
try
transactioncontext begin
setinmanagedtx true
catch  jmsexception e
throw new resourceexception    e
public void commit   throws resourceexception
try
transactioncontext commit
catch  jmsexception e
throw new resourceexception    e
finally
try
setinmanagedtx false
catch  jmsexception e
throw new resourceexception    e
public void rollback   throws resourceexception
try
transactioncontext rollback
catch  jmsexception e
throw new resourceexception    e
finally
try
setinmanagedtx false
catch  jmsexception e
throw new resourceexception    e
public void commit xid arg0  boolean arg1  throws xaexception
transactioncontext commit arg0  arg1
public void end xid arg0  int arg1  throws xaexception
try
transactioncontext end arg0  arg1
finally
try
setinmanagedtx false
catch  jmsexception e
throw  xaexception new xaexception xaexception xaer_proto  initcause e
public void forget xid arg0  throws xaexception
transactioncontext forget arg0
public int gettransactiontimeout   throws xaexception
return transactioncontext gettransactiontimeout
public boolean issamerm xaresource xaresource  throws xaexception
if  xaresource    null
return false
// do we have to unwrap?
if  xaresource instanceof localandxatransaction
xaresource     localandxatransaction xaresource  transactioncontext
return transactioncontext issamerm xaresource
public int prepare xid arg0  throws xaexception
return transactioncontext prepare arg0
public xid recover int arg0  throws xaexception
return transactioncontext recover arg0
public void rollback xid arg0  throws xaexception
transactioncontext rollback arg0
public boolean settransactiontimeout int arg0  throws xaexception
return transactioncontext settransactiontimeout arg0
public void start xid arg0  int arg1  throws xaexception
transactioncontext start arg0  arg1
try
setinmanagedtx true
catch  jmsexception e
throw  xaexception new xaexception xaexception xaer_proto  initcause e
public boolean isinmanagedtx
return inmanagedtx
public void cleanup
transactioncontext cleanup
inmanagedtx   false