/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport https
import java net uri
import org apache activemq transport http httptransportserver
import org mortbay jetty security sslsocketconnector
public class httpstransportserver extends httptransportserver
private string keypassword   system getproperty
private string keystorepassword   system getproperty
private string keystore   system getproperty
private string keystoretype
private string securerandomcertficatealgorithm
private string trustcertificatealgorithm
private string keycertificatealgorithm
private string protocol
public httpstransportserver uri uri
super uri
public void dostart   throws exception
sslsocketconnector sslconnector   new sslsocketconnector
sslconnector setkeystore keystore
sslconnector setpassword keystorepassword
// if the keypassword hasn't been set, default it to the
// key store password
if  keypassword    null
sslconnector setkeypassword keystorepassword
if  keystoretype    null
sslconnector setkeystoretype keystoretype
if  securerandomcertficatealgorithm    null
sslconnector setsecurerandomalgorithm securerandomcertficatealgorithm
if  keycertificatealgorithm    null
sslconnector setsslkeymanagerfactoryalgorithm keycertificatealgorithm
if  trustcertificatealgorithm    null
sslconnector setssltrustmanagerfactoryalgorithm trustcertificatealgorithm
if  protocol    null
sslconnector setprotocol protocol
setconnector sslconnector
super dostart
// properties
// --------------------------------------------------------------------------------
public string getkeystore
return keystore
public void setkeystore string keystore
this keystore   keystore
public string getkeypassword
return keypassword
public void setkeypassword string keypassword
this keypassword   keypassword
public string getkeystoretype
return keystoretype
public void setkeystoretype string keystoretype
this keystoretype   keystoretype
public string getkeystorepassword
return keystorepassword
public void setkeystorepassword string keystorepassword
this keystorepassword   keystorepassword
public string getprotocol
return protocol
public void setprotocol string protocol
this protocol   protocol
public string getsecurerandomcertficatealgorithm
return securerandomcertficatealgorithm
public void setsecurerandomcertficatealgorithm string securerandomcertficatealgorithm
this securerandomcertficatealgorithm   securerandomcertficatealgorithm
public string getkeycertificatealgorithm
return keycertificatealgorithm
public void setkeycertificatealgorithm string keycertificatealgorithm
this keycertificatealgorithm   keycertificatealgorithm
public string gettrustcertificatealgorithm
return trustcertificatealgorithm
public void settrustcertificatealgorithm string trustcertificatealgorithm
this trustcertificatealgorithm   trustcertificatealgorithm