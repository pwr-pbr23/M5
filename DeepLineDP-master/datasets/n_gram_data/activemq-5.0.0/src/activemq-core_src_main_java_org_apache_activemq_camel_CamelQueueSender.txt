/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq camel
import javax jms jmsexception
import javax jms message
import javax jms queue
import javax jms queuesender
import org apache activemq activemqsession
import org apache camel endpoint
/**
* a jms {@link javax.jms.queuesender} which sends message exchanges to a camel
* {@link org.apache.camel.endpoint}
*
* @version $revision: $
*/
public class camelqueuesender extends camelmessageproducer implements queuesender
public camelqueuesender camelqueue destination  endpoint endpoint  activemqsession session  throws jmsexception
super destination  endpoint  session
/**
* gets the queue associated with this <code>queuesender</code>.
*
* @return this sender's queue
* @throws jmsexception if the jms provider fails to get the queue for this
*                 <code>queuesender</code> due to some internal error.
*/
public queue getqueue   throws jmsexception
return  queue super getdestination
/**
* sends a message to a queue for an unidentified message producer. uses the
* <code>queuesender</code>'s default delivery mode, priority, and time
* to live. <p/> <p/> typically, a message producer is assigned a queue at
* creation time; however, the jms api also supports unidentified message
* producers, which require that the queue be supplied every time a message
* is sent.
*
* @param queue the queue to send this message to
* @param message the message to send
* @throws jmsexception if the jms provider fails to send the message due to
*                 some internal error.
* @see javax.jms.messageproducer#getdeliverymode()
* @see javax.jms.messageproducer#gettimetolive()
* @see javax.jms.messageproducer#getpriority()
*/
public void send queue queue  message message  throws jmsexception
super send queue  message
/**
* sends a message to a queue for an unidentified message producer,
* specifying delivery mode, priority and time to live. <p/> <p/> typically,
* a message producer is assigned a queue at creation time; however, the jms
* api also supports unidentified message producers, which require that the
* queue be supplied every time a message is sent.
*
* @param queue the queue to send this message to
* @param message the message to send
* @param deliverymode the delivery mode to use
* @param priority the priority for this message
* @param timetolive the message's lifetime (in milliseconds)
* @throws jmsexception if the jms provider fails to send the message due to
*                 some internal error.
*/
public void send queue queue  message message  int deliverymode  int priority  long timetolive  throws jmsexception
super send queue  message  deliverymode  priority  timetolive