/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq jaas
import java io file
import java io ioexception
import java security principal
import java util enumeration
import java util hashset
import java util map
import java util properties
import java util set
import javax security auth subject
import javax security auth callback callback
import javax security auth callback callbackhandler
import javax security auth callback namecallback
import javax security auth callback passwordcallback
import javax security auth callback unsupportedcallbackexception
import javax security auth login failedloginexception
import javax security auth login loginexception
import javax security auth spi loginmodule
import org apache commons logging log
import org apache commons logging logfactory
/**
* @version $rev: $ $date: $
*/
public class propertiesloginmodule implements loginmodule
private static final string user_file
private static final string group_file
private static final log log   logfactory getlog propertiesloginmodule class
private subject subject
private callbackhandler callbackhandler
private boolean debug
private string usersfile
private string groupsfile
private properties users   new properties
private properties groups   new properties
private string user
private set<principal> principals   new hashset<principal>
private file basedir
public void initialize subject subject  callbackhandler callbackhandler  map sharedstate  map options
this subject   subject
this callbackhandler   callbackhandler
if  system getproperty       null
basedir   new file system getproperty     getparentfile
else
basedir   new file
debug     equalsignorecase  string options get
usersfile    string options get user_file
groupsfile    string options get group_file
if  debug
log debug     debug       usersfile       groupsfile       basedir
public boolean login   throws loginexception
file f   new file basedir  usersfile
try
java io fileinputstream in   new java io fileinputstream f
users load in
in close
catch  ioexception ioe
throw new loginexception     f
f   new file basedir  groupsfile
try
java io fileinputstream in   new java io fileinputstream f
groups load in
in close
catch  ioexception ioe
throw new loginexception     f
callback callbacks   new callback
callbacks   new namecallback
callbacks   new passwordcallback    false
try
callbackhandler handle callbacks
catch  ioexception ioe
throw new loginexception ioe getmessage
catch  unsupportedcallbackexception uce
throw new loginexception uce getmessage
user     namecallback callbacks  getname
char tmppassword     passwordcallback callbacks  getpassword
if  tmppassword    null
tmppassword   new char
string password   users getproperty user
if  password    null
throw new failedloginexception
if   password equals new string tmppassword
throw new failedloginexception
users clear
if  debug
log debug     user
return true
public boolean commit   throws loginexception
principals add new userprincipal user
for  enumeration enumeration   groups keys    enumeration hasmoreelements
string name    string enumeration nextelement
string userlist     string groups getproperty name       split
for  int i   0  i < userlist length  i
if  user equals userlist
principals add new groupprincipal name
break
subject getprincipals   addall principals
clear
if  debug
log debug
return true
public boolean abort   throws loginexception
clear
if  debug
log debug
return true
public boolean logout   throws loginexception
subject getprincipals   removeall principals
principals clear
if  debug
log debug
return true
private void clear
groups clear
user   null