/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq camel
import javax jms illegalstateexception
import javax jms jmsexception
import javax jms message
import javax jms messageconsumer
import javax jms messagelistener
import org apache activemq activemqsession
import org apache activemq util jmsexceptionsupport
import org apache camel consumer
import org apache camel endpoint
import org apache camel exchange
import org apache camel pollingconsumer
import org apache camel processor
/**
* a jms {@link javax.jms.messageconsumer} which consumes message exchanges from
* a camel {@link endpoint}
*
* @version $revision: $
*/
public class camelmessageconsumer implements messageconsumer
private final cameldestination destination
private final endpoint endpoint
private final activemqsession session
private final string messageselector
private final boolean nolocal
private messagelistener messagelistener
private consumer consumer
private pollingconsumer pollingconsumer
private boolean closed
public camelmessageconsumer cameldestination destination  endpoint endpoint  activemqsession session  string messageselector  boolean nolocal
this destination   destination
this endpoint   endpoint
this session   session
this messageselector   messageselector
this nolocal   nolocal
public void close   throws jmsexception
if   closed
closed   true
try
if  consumer    null
consumer stop
if  pollingconsumer    null
pollingconsumer stop
catch  jmsexception e
throw e
catch  exception e
throw jmsexceptionsupport create e
public messagelistener getmessagelistener   throws jmsexception
return messagelistener
public void setmessagelistener messagelistener messagelistener  throws jmsexception
this messagelistener   messagelistener
if  messagelistener    null    consumer    null
consumer   createconsumer
public message receive   throws jmsexception
exchange exchange   getpollingconsumer   receive
return createmessage exchange
public message receive long timeoutmillis  throws jmsexception
exchange exchange   getpollingconsumer   receive timeoutmillis
return createmessage exchange
public message receivenowait   throws jmsexception
exchange exchange   getpollingconsumer   receivenowait
return createmessage exchange
// properties
// -----------------------------------------------------------------------
public cameldestination getdestination
return destination
public endpoint getendpoint
return endpoint
public string getmessageselector
return messageselector
public boolean isnolocal
return nolocal
public activemqsession getsession
return session
// implementation methods
// -----------------------------------------------------------------------
protected pollingconsumer getpollingconsumer   throws jmsexception
try
if  pollingconsumer    null
pollingconsumer   endpoint createpollingconsumer
pollingconsumer start
return pollingconsumer
catch  jmsexception e
throw e
catch  exception e
throw jmsexceptionsupport create e
protected message createmessage exchange exchange  throws jmsexception
if  exchange    null
message message   destination getbinding   makejmsmessage exchange  session
return message
else
return null
protected consumer createconsumer   throws jmsexception
try
consumer answer   endpoint createconsumer new processor
public void process exchange exchange  throws exception
message message   createmessage exchange
getmessagelistener   onmessage message
answer start
return answer
catch  jmsexception e
throw e
catch  exception e
throw jmsexceptionsupport create e
protected void checkclosed   throws javax jms illegalstateexception
if  closed
throw new illegalstateexception