/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker jmx
import javax management openmbean compositedata
import javax management openmbean opendataexception
import org apache activemq broker connectioncontext
import org apache activemq broker region queue
import org apache activemq command activemqdestination
import org apache activemq command message
/**
* provides a jmx management view of a queue.
*/
public class queueview extends destinationview implements queueviewmbean
public queueview managedregionbroker broker  queue destination
super broker  destination
public compositedata getmessage string messageid  throws opendataexception
message rc     queue destination  getmessage messageid
if  rc    null
return null
return opentypesupport convert rc
public void purge   throws exception
queue destination  purge
public boolean removemessage string messageid  throws exception
return   queue destination  removemessage messageid
public int removematchingmessages string selector  throws exception
return   queue destination  removematchingmessages selector
public int removematchingmessages string selector  int maximummessages  throws exception
return   queue destination  removematchingmessages selector  maximummessages
public boolean copymessageto string messageid  string destinationname  throws exception
connectioncontext context   brokerview getconnectioncontext broker getcontextbroker
activemqdestination todestination   activemqdestination createdestination destinationname  activemqdestination queue_type
return   queue destination  copymessageto context  messageid  todestination
public int copymatchingmessagesto string selector  string destinationname  throws exception
connectioncontext context   brokerview getconnectioncontext broker getcontextbroker
activemqdestination todestination   activemqdestination createdestination destinationname  activemqdestination queue_type
return   queue destination  copymatchingmessagesto context  selector  todestination
public int copymatchingmessagesto string selector  string destinationname  int maximummessages  throws exception
connectioncontext context   brokerview getconnectioncontext broker getcontextbroker
activemqdestination todestination   activemqdestination createdestination destinationname  activemqdestination queue_type
return   queue destination  copymatchingmessagesto context  selector  todestination  maximummessages
public boolean movemessageto string messageid  string destinationname  throws exception
connectioncontext context   brokerview getconnectioncontext broker getcontextbroker
activemqdestination todestination   activemqdestination createdestination destinationname  activemqdestination queue_type
return   queue destination  movemessageto context  messageid  todestination
public int movematchingmessagesto string selector  string destinationname  throws exception
connectioncontext context   brokerview getconnectioncontext broker getcontextbroker
activemqdestination todestination   activemqdestination createdestination destinationname  activemqdestination queue_type
return   queue destination  movematchingmessagesto context  selector  todestination
public int movematchingmessagesto string selector  string destinationname  int maximummessages  throws exception
connectioncontext context   brokerview getconnectioncontext broker getcontextbroker
activemqdestination todestination   activemqdestination createdestination destinationname  activemqdestination queue_type
return   queue destination  movematchingmessagesto context  selector  todestination  maximummessages