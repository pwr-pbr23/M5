/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport multicast
import java io ioexception
import java net datagramsocket
import java net inetaddress
import java net inetsocketaddress
import java net multicastsocket
import java net socketaddress
import java net socketexception
import java net uri
import java net unknownhostexception
import org apache activemq openwire openwireformat
import org apache activemq transport udp commandchannel
import org apache activemq transport udp commanddatagramsocket
import org apache activemq transport udp datagramheadermarshaller
import org apache activemq transport udp udptransport
import org apache activemq util servicestopper
import org apache commons logging log
import org apache commons logging logfactory
/**
* a multicast based transport.
*
* @version $revision$
*/
public class multicasttransport extends udptransport
private static final log log   logfactory getlog multicasttransport class
private static final int default_idle_time   5000
private multicastsocket socket
private inetaddress mcastaddress
private int mcastport
private int timetolive   1
private boolean loopbackmode
private long keepaliveinterval   default_idle_time
public multicasttransport openwireformat wireformat  uri remotelocation  throws unknownhostexception  ioexception
super wireformat  remotelocation
public long getkeepaliveinterval
return keepaliveinterval
public void setkeepaliveinterval long keepaliveinterval
this keepaliveinterval   keepaliveinterval
public boolean isloopbackmode
return loopbackmode
public void setloopbackmode boolean loopbackmode
this loopbackmode   loopbackmode
public int gettimetolive
return timetolive
public void settimetolive int timetolive
this timetolive   timetolive
protected string getprotocolname
return
protected string getprotocolurischeme
return
protected void bind datagramsocket socket  socketaddress localaddress  throws socketexception
protected void dostop servicestopper stopper  throws exception
super dostop stopper
if  socket    null
try
socket leavegroup getmulticastaddress
catch  ioexception e
stopper onexception this  e
socket close
protected commandchannel createcommandchannel   throws ioexception
socket   new multicastsocket mcastport
socket setloopbackmode loopbackmode
socket settimetolive timetolive
log debug     getmulticastaddress
socket joingroup getmulticastaddress
socket setsotimeout  int keepaliveinterval
return new commanddatagramsocket this  getwireformat    getdatagramsize    gettargetaddress    createdatagramheadermarshaller    getsocket
protected inetaddress getmulticastaddress
return mcastaddress
protected multicastsocket getsocket
return socket
protected void setsocket multicastsocket socket
this socket   socket
protected inetsocketaddress createaddress uri remotelocation  throws unknownhostexception  ioexception
this mcastaddress   inetaddress getbyname remotelocation gethost
this mcastport   remotelocation getport
return new inetsocketaddress mcastaddress  mcastport
protected datagramheadermarshaller createdatagramheadermarshaller
return new multicastdatagramheadermarshaller     getport