/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq kaha impl container
import java util listiterator
import org apache activemq kaha storeentry
import org apache activemq kaha impl index indexitem
import org apache activemq kaha impl index indexlinkedlist
/**
* @version $revision: 1.2 $
*/
public class containerlistiterator extends containervaluecollectioniterator implements listiterator
protected containerlistiterator listcontainerimpl container  indexlinkedlist list  indexitem start
super container  list  start
/*
* (non-javadoc)
*
* @see java.util.listiterator#hasprevious()
*/
public boolean hasprevious
synchronized  container
nextitem    indexitem list refreshentry nextitem
return list getpreventry nextitem     null
/*
* (non-javadoc)
*
* @see java.util.listiterator#previous()
*/
public object previous
synchronized  container
nextitem    indexitem list refreshentry nextitem
nextitem   list getpreventry nextitem
return nextitem    null ? container getvalue nextitem    null
/*
* (non-javadoc)
*
* @see java.util.listiterator#nextindex()
*/
public int nextindex
int result    1
if  nextitem    null
synchronized  container
nextitem    indexitem list refreshentry nextitem
storeentry next   list getnextentry nextitem
if  next    null
result   container getinternallist   indexof next
return result
/*
* (non-javadoc)
*
* @see java.util.listiterator#previousindex()
*/
public int previousindex
int result    1
if  nextitem    null
synchronized  container
nextitem    indexitem list refreshentry nextitem
storeentry prev   list getpreventry nextitem
if  prev    null
result   container getinternallist   indexof prev
return result
/*
* (non-javadoc)
*
* @see java.util.listiterator#set(e)
*/
public void set object o
indexitem item     listcontainerimpl container  internalset previousindex     1  o
nextitem   item
/*
* (non-javadoc)
*
* @see java.util.listiterator#add(e)
*/
public void add object o
indexitem item     listcontainerimpl container  internaladd previousindex     1  o
nextitem   item