/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq util
import java util iterator
import java util list
import org apache activemq service
import org apache commons logging log
import org apache commons logging logfactory
/**
* a helper class used to stop a bunch of services, catching and logging any
* exceptions and then throwing the first exception when everything is stoped.
*
* @version $revision: 1.1 $
*/
public class servicestopper
private throwable firstexception
/**
* stops the given service, catching any exceptions that are thrown.
*/
public void stop service service
try
if  service    null
service stop
catch  exception e
onexception service  e
/**
* performs the given code to stop some service handling the exceptions
* which may be thrown properly
*/
public void run callback stopclosure
try
stopclosure execute
catch  throwable e
onexception stopclosure  e
/**
* stops a list of services
*/
public void stopservices list services
for  iterator iter   services iterator    iter hasnext
service service    service iter next
stop service
public void onexception object owner  throwable e
logerror owner  e
if  firstexception    null
firstexception   e
/**
* throws the first exception that was thrown if there was one.
*/
public void throwfirstexception   throws exception
if  firstexception    null
if  firstexception instanceof exception
exception e    exception firstexception
throw e
else if  firstexception instanceof runtimeexception
runtimeexception e    runtimeexception firstexception
throw e
else
throw new runtimeexception     firstexception  firstexception
protected void logerror object service  throwable e
log log   logfactory getlog service getclass
log error     service       e  e