/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq store kahadaptor
import java io ioexception
import java util arraylist
import java util list
import org apache activemq command basecommand
import org apache activemq command message
import org apache activemq command messageack
import org apache activemq store messagestore
import org apache commons logging log
import org apache commons logging logfactory
/**
* stores a messages/acknowledgements for a transaction
*
* @version $revision: 1.4 $
*/
class kahatransaction
protected list<txcommand> list   new arraylist<txcommand>
void add kahamessagestore store  basecommand command
txcommand tx   new txcommand
tx setcommand command
tx setmessagestorekey store getid
list add tx
message getmessages
list<basecommand> result   new arraylist<basecommand>
for  int i   0  i < list size    i
txcommand command   list get i
if  command isadd
result add command getcommand
message messages   new message
return result toarray messages
messageack getacks
list<basecommand> result   new arraylist<basecommand>
for  int i   0  i < list size    i
txcommand command   list get i
if  command isremove
result add command getcommand
messageack acks   new messageack
return result toarray acks
void prepare
void rollback
list clear
/**
* @throws ioexception
*/
void commit kahatransactionstore transactionstore  throws ioexception
for  int i   0  i < list size    i
txcommand command   list get i
messagestore ms   transactionstore getstorebyid command getmessagestorekey
if  command isadd
ms addmessage null   message command getcommand
for  int i   0  i < list size    i
txcommand command   list get i
messagestore ms   transactionstore getstorebyid command getmessagestorekey
if  command isremove
ms removemessage null   messageack command getcommand
list<txcommand> getlist
return new arraylist<txcommand> list
void setlist list<txcommand> list
this list   list