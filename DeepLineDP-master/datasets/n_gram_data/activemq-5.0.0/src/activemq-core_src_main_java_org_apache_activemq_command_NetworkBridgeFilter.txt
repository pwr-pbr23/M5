/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq command
import java io ioexception
import javax jms jmsexception
import org apache activemq filter booleanexpression
import org apache activemq filter messageevaluationcontext
import org apache activemq util jmsexceptionsupport
import org apache commons logging log
import org apache commons logging logfactory
/**
* @openwire:marshaller code="91"
* @version $revision: 1.12 $
*/
public class networkbridgefilter implements datastructure  booleanexpression
public static final byte data_structure_type   commandtypes network_bridge_filter
static final log log   logfactory getlog networkbridgefilter class
private brokerid networkbrokerid
private int networkttl
public networkbridgefilter
public networkbridgefilter brokerid remotebrokerpath  int networkttl
this networkbrokerid   remotebrokerpath
this networkttl   networkttl
public byte getdatastructuretype
return data_structure_type
public boolean ismarshallaware
return false
public boolean matches messageevaluationcontext mec  throws jmsexception
try
// for queues - the message can be acknowledged and dropped whilst
// still
// in the dispatch loop
// so need to get the reference to it
message message   mec getmessage
return message    null    matchesforwardingfilter message
catch  ioexception e
throw jmsexceptionsupport create e
public object evaluate messageevaluationcontext message  throws jmsexception
return matches message  ? boolean true   boolean false
protected boolean matchesforwardingfilter message message
if  contains message getbrokerpath    networkbrokerid
if  log istraceenabled
log trace     message
return false
int hops   message getbrokerpath      null ? 0   message getbrokerpath   length
if  hops >  networkttl
if  log istraceenabled
log trace     networkttl       message
return false
// don't propagate advisory messages about network subscriptions
if  message isadvisory      message getdatastructure      null    message getdatastructure   getdatastructuretype      commandtypes consumer_info
consumerinfo info    consumerinfo message getdatastructure
hops   info getbrokerpath      null ? 0   info getbrokerpath   length
if  hops >  networkttl
if  log istraceenabled
log trace     networkttl       message
return false
return true
public static boolean contains brokerid brokerpath  brokerid brokerid
if  brokerpath    null    brokerid    null
for  int i   0  i < brokerpath length  i
if  brokerid equals brokerpath
return true
return false
/**
* @openwire:property version=1
*/
public int getnetworkttl
return networkttl
public void setnetworkttl int networkttl
this networkttl   networkttl
/**
* @openwire:property version=1 cache=true
*/
public brokerid getnetworkbrokerid
return networkbrokerid
public void setnetworkbrokerid brokerid remotebrokerpath
this networkbrokerid   remotebrokerpath