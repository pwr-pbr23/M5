/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport stomp
import java io ioexception
import java util iterator
import java util linkedhashmap
import java util map
import java util map entry
import javax jms jmsexception
import org apache activemq command activemqdestination
import org apache activemq command activemqmessage
import org apache activemq command consumerinfo
import org apache activemq command messageack
import org apache activemq command messagedispatch
import org apache activemq command messageid
/**
* keeps track of the stomp susbscription so that acking is correctly done.
*
* @author <a href="http://hiramchirino.com">chirino</a>
*/
public class stompsubscription
public static final string auto_ack   stomp headers subscribe ackmodevalues auto
public static final string client_ack   stomp headers subscribe ackmodevalues client
private final protocolconverter protocolconverter
private final string subscriptionid
private final consumerinfo consumerinfo
private final linkedhashmap<string  messageid> dispatchedmessage   new linkedhashmap<string  messageid>
private string ackmode   auto_ack
private activemqdestination destination
public stompsubscription protocolconverter stomptransport  string subscriptionid  consumerinfo consumerinfo
this protocolconverter   stomptransport
this subscriptionid   subscriptionid
this consumerinfo   consumerinfo
void onmessagedispatch messagedispatch md  throws ioexception  jmsexception
activemqmessage message    activemqmessage md getmessage
if  ackmode    client_ack
synchronized  this
dispatchedmessage put message getjmsmessageid    message getmessageid
else if  ackmode    auto_ack
messageack ack   new messageack md  messageack standard_ack_type  1
protocolconverter gettransportfilter   sendtoactivemq ack
stompframe command   protocolconverter convertmessage message
command setaction stomp responses message
if  subscriptionid    null
command getheaders   put stomp headers message subscription  subscriptionid
protocolconverter gettransportfilter   sendtostomp command
synchronized messageack onstompmessageack string messageid
if   dispatchedmessage containskey messageid
return null
messageack ack   new messageack
ack setdestination consumerinfo getdestination
ack setacktype messageack standard_ack_type
ack setconsumerid consumerinfo getconsumerid
int count   0
for  iterator iter   dispatchedmessage entryset   iterator    iter hasnext
map entry entry    entry iter next
string id    string entry getkey
messageid msgid    messageid entry getvalue
if  ack getfirstmessageid      null
ack setfirstmessageid msgid
iter remove
count
if  id equals messageid
ack setlastmessageid msgid
break
ack setmessagecount count
return ack
public string getackmode
return ackmode
public void setackmode string ackmode
this ackmode   ackmode
public string getsubscriptionid
return subscriptionid
public void setdestination activemqdestination destination
this destination   destination
public activemqdestination getdestination
return destination
public consumerinfo getconsumerinfo
return consumerinfo