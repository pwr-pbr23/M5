/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport stomp
import java io ioexception
import java util hashmap
import java util map
import javax jms destination
import javax jms jmsexception
import org apache activemq command activemqdestination
import org apache activemq command activemqmessage
/**
* implementations of this interface are used to map back and forth from stomp
* to activemq. there are several standard mappings which are semantically the
* same, the inner class, helper, provides functions to copy those properties
* from one to the other
*/
public interface frametranslator
activemqmessage convertframe protocolconverter converter  stompframe frame  throws jmsexception  protocolexception
stompframe convertmessage protocolconverter converter  activemqmessage message  throws ioexception  jmsexception
string convertdestination protocolconverter converter  destination d
activemqdestination convertdestination protocolconverter converter  string name  throws protocolexception
/**
* helper class which holds commonly needed functions used when implementing
* frametranslators
*/
static final class helper
private helper
public static void copystandardheadersfrommessagetoframe protocolconverter converter  activemqmessage message  stompframe command  frametranslator ft  throws ioexception
final map<string  string> headers   command getheaders
headers put stomp headers message destination  ft convertdestination converter  message getdestination
headers put stomp headers message message_id  message getjmsmessageid
if  message getjmscorrelationid      null
headers put stomp headers message correlation_id  message getjmscorrelationid
headers put stomp headers message expiration_time      message getjmsexpiration
if  message getjmsredelivered
headers put stomp headers message redelivered
headers put stomp headers message prority      message getjmspriority
if  message getjmsreplyto      null
headers put stomp headers message reply_to  ft convertdestination converter  message getjmsreplyto
headers put stomp headers message timestamp      message getjmstimestamp
if  message getjmstype      null
headers put stomp headers message type  message getjmstype
// now lets add all the message headers
final map<string  object> properties   message getproperties
if  properties    null
for  map entry<string  object> prop   properties entryset
headers put prop getkey        prop getvalue
public static void copystandardheadersfromframetomessage protocolconverter converter  stompframe command  activemqmessage msg  frametranslator ft  throws protocolexception  jmsexception
final map<string  string> headers   new hashmap<string  string> command getheaders
final string destination   headers remove stomp headers send destination
msg setdestination ft convertdestination converter  destination
// the standard jms headers
msg setjmscorrelationid headers remove stomp headers send correlation_id
object o   headers remove stomp headers send expiration_time
if  o    null
msg setjmsexpiration long parselong  string o
o   headers remove stomp headers send priority
if  o    null
msg setjmspriority integer parseint  string o
o   headers remove stomp headers send type
if  o    null
msg setjmstype  string o
o   headers remove stomp headers send reply_to
if  o    null
msg setjmsreplyto ft convertdestination converter   string o
o   headers remove stomp headers send persistent
if  o    null
msg setpersistent   equals o
// now the general headers
msg setproperties headers