/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq filter
import javax jms jmsexception
/**
* a filter performing a comparison of two objects
*
* @version $revision: 1.2 $
*/
public abstract class logicexpression extends binaryexpression implements booleanexpression
/**
* @param left
* @param right
*/
public logicexpression booleanexpression left  booleanexpression right
super left  right
public static booleanexpression createor booleanexpression lvalue  booleanexpression rvalue
return new logicexpression lvalue  rvalue
public object evaluate messageevaluationcontext message  throws jmsexception
boolean lv    boolean left evaluate message
// can we do an or shortcut??
if  lv    null    lv booleanvalue
return boolean true
boolean rv    boolean right evaluate message
return rv    null ? null   rv
public string getexpressionsymbol
return
public static booleanexpression createand booleanexpression lvalue  booleanexpression rvalue
return new logicexpression lvalue  rvalue
public object evaluate messageevaluationcontext message  throws jmsexception
boolean lv    boolean left evaluate message
// can we do an and shortcut??
if  lv    null
return null
if   lv booleanvalue
return boolean false
boolean rv    boolean right evaluate message
return rv    null ? null   rv
public string getexpressionsymbol
return
public abstract object evaluate messageevaluationcontext message  throws jmsexception
public boolean matches messageevaluationcontext message  throws jmsexception
object object   evaluate message
return object    null    object    boolean true