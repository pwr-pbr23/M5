/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq advisory
import javax jms destination
import org apache activemq command activemqdestination
import org apache activemq command activemqtopic
public final class advisorysupport
public static final string advisory_topic_prefix
public static final activemqtopic connection_advisory_topic   new activemqtopic advisory_topic_prefix
public static final activemqtopic queue_advisory_topic   new activemqtopic advisory_topic_prefix
public static final activemqtopic topic_advisory_topic   new activemqtopic advisory_topic_prefix
public static final activemqtopic temp_queue_advisory_topic   new activemqtopic advisory_topic_prefix
public static final activemqtopic temp_topic_advisory_topic   new activemqtopic advisory_topic_prefix
public static final string producer_advisory_topic_prefix   advisory_topic_prefix
public static final string queue_producer_advisory_topic_prefix   producer_advisory_topic_prefix
public static final string topic_producer_advisory_topic_prefix   producer_advisory_topic_prefix
public static final string consumer_advisory_topic_prefix   advisory_topic_prefix
public static final string queue_consumer_advisory_topic_prefix   consumer_advisory_topic_prefix
public static final string topic_consumer_advisory_topic_prefix   consumer_advisory_topic_prefix
public static final string expired_topic_messages_topic_prefix   advisory_topic_prefix
public static final string expired_queue_messages_topic_prefix   advisory_topic_prefix
public static final string no_topic_consumers_topic_prefix   advisory_topic_prefix
public static final string no_queue_consumers_topic_prefix   advisory_topic_prefix
public static final string agent_topic
public static final string adivsory_message_type
public static final activemqtopic temp_destination_composite_advisory_topic   new activemqtopic temp_queue_advisory_topic       temp_topic_advisory_topic
private static final activemqtopic agent_topic_destination   new activemqtopic agent_topic
private advisorysupport
public static activemqtopic getconnectionadvisorytopic
return connection_advisory_topic
public static activemqtopic getconsumeradvisorytopic activemqdestination destination
if  destination isqueue
return new activemqtopic queue_consumer_advisory_topic_prefix   destination getphysicalname
else
return new activemqtopic topic_consumer_advisory_topic_prefix   destination getphysicalname
public static activemqtopic getproduceradvisorytopic activemqdestination destination
if  destination isqueue
return new activemqtopic queue_producer_advisory_topic_prefix   destination getphysicalname
else
return new activemqtopic topic_producer_advisory_topic_prefix   destination getphysicalname
public static activemqtopic getexpiredmessagetopic activemqdestination destination
if  destination isqueue
return getexpiredqueuemessageadvisorytopic destination
return getexpiredtopicmessageadvisorytopic destination
public static activemqtopic getexpiredtopicmessageadvisorytopic activemqdestination destination
string name   expired_topic_messages_topic_prefix   destination getphysicalname
return new activemqtopic name
public static activemqtopic getexpiredqueuemessageadvisorytopic activemqdestination destination
string name   expired_queue_messages_topic_prefix   destination getphysicalname
return new activemqtopic name
public static activemqtopic getnotopicconsumersadvisorytopic activemqdestination destination
string name   no_topic_consumers_topic_prefix   destination getphysicalname
return new activemqtopic name
public static activemqtopic getnoqueueconsumersadvisorytopic activemqdestination destination
string name   no_queue_consumers_topic_prefix   destination getphysicalname
return new activemqtopic name
public static activemqtopic getdestinationadvisorytopic activemqdestination destination
switch  destination getdestinationtype
case activemqdestination queue_type
return queue_advisory_topic
case activemqdestination topic_type
return topic_advisory_topic
case activemqdestination temp_queue_type
return temp_queue_advisory_topic
case activemqdestination temp_topic_type
return temp_topic_advisory_topic
default
throw new runtimeexception     destination getdestinationtype
public static boolean isdestinationadvisorytopic activemqdestination destination
if  destination iscomposite
activemqdestination compositedestinations   destination getcompositedestinations
for  int i   0  i < compositedestinations length  i
if  isdestinationadvisorytopic compositedestinations
return true
return false
else
return destination equals temp_queue_advisory_topic     destination equals temp_topic_advisory_topic     destination equals queue_advisory_topic
destination equals topic_advisory_topic
public static boolean isadvisorytopic activemqdestination destination
if  destination iscomposite
activemqdestination compositedestinations   destination getcompositedestinations
for  int i   0  i < compositedestinations length  i
if  isadvisorytopic compositedestinations
return true
return false
else
return destination istopic      destination getphysicalname   startswith advisory_topic_prefix
public static boolean isconnectionadvisorytopic activemqdestination destination
if  destination iscomposite
activemqdestination compositedestinations   destination getcompositedestinations
for  int i   0  i < compositedestinations length  i
if  isconnectionadvisorytopic compositedestinations
return true
return false
else
return destination equals connection_advisory_topic
public static boolean isproduceradvisorytopic activemqdestination destination
if  destination iscomposite
activemqdestination compositedestinations   destination getcompositedestinations
for  int i   0  i < compositedestinations length  i
if  isproduceradvisorytopic compositedestinations
return true
return false
else
return destination istopic      destination getphysicalname   startswith producer_advisory_topic_prefix
public static boolean isconsumeradvisorytopic activemqdestination destination
if  destination iscomposite
activemqdestination compositedestinations   destination getcompositedestinations
for  int i   0  i < compositedestinations length  i
if  isconsumeradvisorytopic compositedestinations
return true
return false
else
return destination istopic      destination getphysicalname   startswith consumer_advisory_topic_prefix
/**
* returns the agent topic which is used to send commands to the broker
*/
public static destination getagentdestination
return agent_topic_destination