/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq util
import java util concurrent atomic atomicboolean
import org apache activemq service
import org apache commons logging log
import org apache commons logging logfactory
/**
* a helper class for working with services together with a useful base class
* for service implementations.
*
* @version $revision: 1.1 $
*/
public abstract class servicesupport implements service
private static final log log   logfactory getlog servicesupport class
private atomicboolean started   new atomicboolean false
private atomicboolean stopping   new atomicboolean false
private atomicboolean stopped   new atomicboolean false
public static void dispose service service
try
service stop
catch  exception e
log debug     service       e  e
public void start   throws exception
if  started compareandset false  true
dostart
public void stop   throws exception
if  stopped compareandset false  true
stopping set true
servicestopper stopper   new servicestopper
try
dostop stopper
catch  exception e
stopper onexception this  e
stopped set true
started set false
stopping set false
stopper throwfirstexception
/**
* @return true if this service has been started
*/
public boolean isstarted
return started get
/**
* @return true if this service is in the process of closing
*/
public boolean isstopping
return stopping get
/**
* @return true if this service is closed
*/
public boolean isstopped
return stopped get
protected abstract void dostop servicestopper stopper  throws exception
protected abstract void dostart   throws exception