/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker
import java io file
import java io fileinputstream
import java io ioexception
import java io inputstream
import java net malformedurlexception
import java net uri
import java net url
import java util map
import java util properties
import org apache activemq util introspectionsupport
/**
* a {@link brokerfactoryhandler} which uses a properties file to configure the
* broker's various policies.
*
* @version $revision$
*/
public class propertiesbrokerfactory implements brokerfactoryhandler
public brokerservice createbroker uri brokeruri  throws exception
map properties   loadproperties brokeruri
brokerservice brokerservice   createbrokerservice brokeruri  properties
introspectionsupport setproperties brokerservice  properties
return brokerservice
/**
* lets load the properties from some external url or a relative file
*/
protected map loadproperties uri brokeruri  throws ioexception
// lets load a uri
string remaining   brokeruri getschemespecificpart
properties properties   new properties
file file   new file remaining
inputstream inputstream   null
if  file exists
inputstream   new fileinputstream file
else
url url   null
try
url   new url remaining
catch  malformedurlexception e
// lets now see if we can find the name on the classpath
inputstream   findresourceonclasspath remaining
if  inputstream    null
throw new ioexception     remaining       e
if  inputstream    null    url    null
inputstream   url openstream
if  inputstream    null
properties load inputstream
inputstream close
// should we append any system properties?
try
properties systemproperties   system getproperties
properties putall systemproperties
catch  exception e
// ignore security exception
return properties
protected inputstream findresourceonclasspath string remaining
inputstream answer   thread currentthread   getcontextclassloader   getresourceasstream remaining
if  answer    null
answer   getclass   getclassloader   getresourceasstream remaining
return answer
protected brokerservice createbrokerservice uri brokeruri  map properties
return new brokerservice