/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq openwire tool
import java io file
import java io printwriter
import java util iterator
import java util list
import org codehaus jam jclass
import org codehaus jam jproperty
/**
* @version $revision: 409828 $
*/
public class cppclassesgenerator extends multisourcegenerator
protected string targetdir
public object run
filepostfix   getfilepostfix
if  destdir    null
destdir   new file targetdir
return super run
protected string getfilepostfix
return
/**
* converts the java type to a c++ type name
*/
public string tocpptype jclass type
string name   type getsimplename
if  name equals
return
else if  type isarraytype
if  name equals
name
else if  name equals
name
return     name substring 0  name length     2
else if  name equals       name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals       name equals
return     name
else if   type isprimitivetype
return     name
else
return name
/**
* converts the java type to a c++ default value
*/
public string tocppdefaultvalue jclass type
string name   type getsimplename
if  name equals
return
else if   type isprimitivetype
return
else
return
/**
* converts the java type to the name of the c++ marshal method to be used
*/
public string tomarshalmethodname jclass type
string name   type getsimplename
if  name equals
return
else if  type isarraytype
if  type getarraycomponenttype   isprimitivetype      name equals
return
else
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if   type isprimitivetype
return
else
return name
/**
* converts the java type to the name of the c++ unmarshal method to be used
*/
public string tounmarshalmethodname jclass type
string name   type getsimplename
if  name equals
return
else if  type isarraytype
if  type getarraycomponenttype   isprimitivetype      name equals
return
else
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if  name equals
return
else if   type isprimitivetype
return
else
return name
/**
* converts the java type to a c++ pointer cast
*/
public string tounmarshalcast jclass type
string name   tocpptype type
if  name startswith
return     name substring 2
else if  name startswith        type isarraytype       type getarraycomponenttype   isprimitivetype        type getsimplename   equals
return     name substring 6
else
return
protected void generatelicence printwriter out
out println
out.println(" * licensed to the apache software foundation (asf) under one or more");
out.println(" * contributor license agreements.  see the notice file distributed with");
out.println(" * this work for additional information regarding copyright ownership.");
out.println(" * the asf licenses this file to you under the apache license, version 2.0");
out.println(" * (the \"license\"); you may not use this file except in compliance with");
out.println(" * the license.  you may obtain a copy of the license at");
out.println(" *");
out.println(" *      http://www.apache.org/licenses/license-2.0");
out.println(" *");
out.println(" * unless required by applicable law or agreed to in writing, software");
out.println(" * distributed under the license is distributed on an \"as is\" basis,");
out.println(" * without warranties or conditions of any kind, either express or implied.");
out.println(" * see the license for the specific language governing permissions and");
out.println(" * limitations under the license.");
out println
protected void generatefile printwriter out  throws exception
generatelicence out
out println  activemq command   hpp
out println
out println
out println
out println
out.println(" *");
out.println(" *  command and marshalling code for openwire format for " + classname + "");
out.println(" *");
out.println(" *");
out.println(" *  note!: this file is autogenerated - do not modify!");
out.println(" *         if you need to make a change, please see the groovy scripts in the");
out.println(" *         activemq-core module");
out.println(" *");
out println
out println     classname       classname
out println
list properties   getproperties
for  iterator iter   properties iterator    iter hasnext
jproperty property    jproperty iter next
string value   tocppdefaultvalue property gettype
string propertyname   property getsimplename
string parametername   decapitalize propertyname
out println     parametername       value
out println
out println
out println     classname       classname
out println
out println
out println
out println     classname
out println
out println     classname
out println
for  iterator iter   properties iterator    iter hasnext
jproperty property    jproperty iter next
string type   tocpptype property gettype
string propertyname   property getsimplename
string parametername   decapitalize propertyname
out println
out println
out println     type       classname       propertyname
out println
out println     parametername
out println
out println
out println     classname       propertyname       type       parametername
out println
out println     parametername       parametername
out println
out println
out println     classname
out println
out println
out println
out println     baseclass
for  iterator iter   properties iterator    iter hasnext
jproperty property    jproperty iter next
string marshalmethod   tomarshalmethodname property gettype
string propertyname   decapitalize property getsimplename
out println     marshalmethod       propertyname
out println
out println
out println
out println     classname
out println
out println     baseclass
for  iterator iter   properties iterator    iter hasnext
jproperty property    jproperty iter next
string cast   tounmarshalcast property gettype
string unmarshalmethod   tounmarshalmethodname property gettype
string propertyname   decapitalize property getsimplename
out println     propertyname       cast       unmarshalmethod
out println
public string gettargetdir
return targetdir
public void settargetdir string targetdir
this targetdir   targetdir