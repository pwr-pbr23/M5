/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq util
import java io bufferedinputstream
import java io ioexception
import java io inputstream
import java util properties
import java util concurrent concurrenthashmap
public class factoryfinder
private final string path
private final concurrenthashmap<string  class> classmap   new concurrenthashmap<string  class>
public factoryfinder string path
this path   path
/**
* creates a new instance of the given key
*
* @param key is the key to add to the path to find a text file containing
*                the factory name
* @return a newly created instance
*/
public object newinstance string key  throws illegalaccessexception  instantiationexception  ioexception  classnotfoundexception
return newinstance key  null
public object newinstance string key  string propertyprefix  throws illegalaccessexception  instantiationexception  ioexception  classnotfoundexception
if  propertyprefix    null
propertyprefix
class clazz   classmap get propertyprefix   key
if  clazz    null
clazz   newinstance dofindfactoryproperies key   propertyprefix
classmap put propertyprefix   key  clazz
return clazz newinstance
private class newinstance properties properties  string propertyprefix  throws classnotfoundexception  ioexception
string classname   properties getproperty propertyprefix
if  classname    null
throw new ioexception     propertyprefix
class clazz   null
classloader loader   thread currentthread   getcontextclassloader
if  loader    null
try
clazz   loader loadclass classname
catch  classnotfoundexception e
// ignore
if  clazz    null
clazz   factoryfinder class getclassloader   loadclass classname
return clazz
private properties dofindfactoryproperies string key  throws ioexception
string uri   path   key
// lets try the thread context class loader first
classloader classloader   thread currentthread   getcontextclassloader
if  classloader    null
classloader   getclass   getclassloader
inputstream in   classloader getresourceasstream uri
if  in    null
in   factoryfinder class getclassloader   getresourceasstream uri
if  in    null
throw new ioexception     uri
// lets load the file
bufferedinputstream reader   null
try
reader   new bufferedinputstream in
properties properties   new properties
properties load reader
return properties
finally
try
reader close
catch  exception e