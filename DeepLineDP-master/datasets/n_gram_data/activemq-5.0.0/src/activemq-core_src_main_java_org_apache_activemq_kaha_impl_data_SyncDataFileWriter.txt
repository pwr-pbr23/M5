/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq kaha impl data
import java io ioexception
import java io randomaccessfile
import org apache activemq kaha marshaller
import org apache activemq util databytearrayoutputstream
/**
* optimized store writer. synchronously marshalls and writes to the data file.
* simple but may introduce a bit of contention when put under load.
*
* @version $revision: 1.1.1.1 $
*/
public final class syncdatafilewriter
private databytearrayoutputstream buffer
private datamanagerimpl datamanager
/**
* construct a store writer
*
* @param fileid
*/
syncdatafilewriter datamanagerimpl filemanager
this datamanager   filemanager
this buffer   new databytearrayoutputstream
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.datafilewriter#storeitem(org.apache.activemq.kaha.marshaller,
*      java.lang.object, byte)
*/
public synchronized dataitem storeitem marshaller marshaller  object payload  byte type
throws ioexception
// write the packet our internal buffer.
buffer reset
buffer position datamanagerimpl item_head_size
marshaller writepayload payload  buffer
int size   buffer size
int payloadsize   size   datamanagerimpl item_head_size
buffer reset
buffer writebyte type
buffer writeint payloadsize
// find the position where this item will land at.
dataitem item   new dataitem
item setsize payloadsize
datafile datafile   datamanager findspacefordata item
// now splat the buffer to the file.
datafile getrandomaccessfile   seek item getoffset
datafile getrandomaccessfile   write buffer getdata    0  size
datafile setwriterdata boolean true      use as dirty marker
datamanager addinterestinfile datafile
return item
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.datafilewriter#updateitem(org.apache.activemq.kaha.storelocation,
*      org.apache.activemq.kaha.marshaller, java.lang.object, byte)
*/
public synchronized void updateitem dataitem item  marshaller marshaller  object payload  byte type
throws ioexception
// write the packet our internal buffer.
buffer reset
buffer position datamanagerimpl item_head_size
marshaller writepayload payload  buffer
int size   buffer size
int payloadsize   size   datamanagerimpl item_head_size
buffer reset
buffer writebyte type
buffer writeint payloadsize
item setsize payloadsize
datafile datafile   datamanager getdatafile item
randomaccessfile file   datafile getrandomaccessfile
file seek item getoffset
file write buffer getdata    0  size
datafile setwriterdata boolean true      use as dirty marker
public synchronized void force datafile datafile  throws ioexception
// if our dirty marker was set.. then we need to sync
if  datafile getwriterdata      null    datafile isdirty
datafile getrandomaccessfile   getfd   sync
datafile setwriterdata null
datafile setdirty false
public void close   throws ioexception