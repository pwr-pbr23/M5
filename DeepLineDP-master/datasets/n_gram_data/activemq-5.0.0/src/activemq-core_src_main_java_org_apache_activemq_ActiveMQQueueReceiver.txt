/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq
import javax jms jmsexception
import javax jms queue
import javax jms queuereceiver
import org apache activemq command activemqdestination
import org apache activemq command consumerid
/**
* a client uses a <code>queuereceiver</code> object to receive messages that
* have been delivered to a queue. <p/>
* <p>
* although it is possible to have multiple <code>queuereceiver</code> s for
* the same queue, the jms api does not define how messages are distributed
* between the <code>queuereceiver</code>s. <p/>
* <p>
* if a <code>queuereceiver</code> specifies a message selector, the messages
* that are not selected remain on the queue. by definition, a message selector
* allows a <code>queuereceiver</code> to skip messages. this means that when
* the skipped messages are eventually read, the total ordering of the reads
* does not retain the partial order defined by each message producer. only
* <code>queuereceiver</code> s without a message selector will read messages
* in message producer order. <p/>
* <p>
* creating a <code>messageconsumer</code> provides the same features as
* creating a <code>queuereceiver</code>. a <code>messageconsumer</code>
* object is recommended for creating new code. the <code>queuereceiver
* </code>
* is provided to support existing code.
*
* @see javax.jms.session#createconsumer(javax.jms.destination, string)
* @see javax.jms.session#createconsumer(javax.jms.destination)
* @see javax.jms.queuesession#createreceiver(queue, string)
* @see javax.jms.queuesession#createreceiver(queue)
* @see javax.jms.messageconsumer
*/
public class activemqqueuereceiver extends activemqmessageconsumer implements queuereceiver
/**
* @param thesession
* @param value
* @param destination
* @param messageselector
* @param prefetch
* @param asyncdispatch
* @throws jmsexception
*/
protected activemqqueuereceiver activemqsession thesession  consumerid consumerid
activemqdestination destination  string selector  int prefetch
int maximumpendingmessagecount  boolean asyncdispatch
throws jmsexception
super thesession  consumerid  destination  null  selector  prefetch  maximumpendingmessagecount
false  false  asyncdispatch  null
/**
* gets the <code>queue</code> associated with this queue receiver.
*
* @return this receiver's <code>queue</code>
* @throws jmsexception if the jms provider fails to get the queue for this
*                 queue receiver due to some internal error.
*/
public queue getqueue   throws jmsexception
checkclosed
return  queue super getdestination