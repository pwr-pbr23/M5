/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq store jpa
import java io ioexception
import java util list
import java util concurrent atomic atomiclong
import javax persistence entitymanager
import javax persistence query
import org apache activemq broker connectioncontext
import org apache activemq command activemqdestination
import org apache activemq command message
import org apache activemq command messageack
import org apache activemq command messageid
import org apache activemq store messagerecoverylistener
import org apache activemq store messagestore
import org apache activemq store jpa model storedmessage
import org apache activemq usage memoryusage
import org apache activemq usage systemusage
import org apache activemq util bytesequence
import org apache activemq util ioexceptionsupport
import org apache activemq wireformat wireformat
public class jpamessagestore implements messagestore
protected final jpapersistenceadapter adapter
protected final wireformat wireformat
protected final activemqdestination destination
protected final string destinationname
protected atomiclong lastmessageid   new atomiclong  1
public jpamessagestore jpapersistenceadapter adapter  activemqdestination destination
this adapter   adapter
this destination   destination
this destinationname   destination getqualifiedname
this wireformat   this adapter getwireformat
public void addmessage connectioncontext context  message message  throws ioexception
entitymanager manager   adapter beginentitymanager context
try
bytesequence sequence   wireformat marshal message
sequence compact
storedmessage sm   new storedmessage
sm setdestination destinationname
sm setid message getmessageid   getbrokersequenceid
sm setmessageid message getmessageid   tostring
sm setexiration message getexpiration
sm setdata sequence data
manager persist sm
catch  throwable e
adapter rollbackentitymanager context  manager
throw ioexceptionsupport create e
adapter commitentitymanager context  manager
public activemqdestination getdestination
return destination
public message getmessage messageid identity  throws ioexception
message rc
entitymanager manager   adapter beginentitymanager null
try
storedmessage message   null
if  identity getbrokersequenceid      0
message   manager find storedmessage class  identity getbrokersequenceid
else
query query   manager createquery
query setparameter 1  identity tostring
message    storedmessage query getsingleresult
rc    message wireformat unmarshal new bytesequence message getdata
catch  throwable e
adapter rollbackentitymanager null  manager
throw ioexceptionsupport create e
adapter commitentitymanager null  manager
return rc
public int getmessagecount   throws ioexception
long rc
entitymanager manager   adapter beginentitymanager null
try
query query   manager createquery
rc    long query getsingleresult
catch  throwable e
adapter rollbackentitymanager null  manager
throw ioexceptionsupport create e
adapter commitentitymanager null  manager
return rc intvalue
@suppresswarnings
public void recover messagerecoverylistener container  throws exception
entitymanager manager   adapter beginentitymanager null
try
query query   manager createquery
query setparameter 1  destinationname
for  storedmessage m    list<storedmessage> query getresultlist
message message    message wireformat unmarshal new bytesequence m getdata
container recovermessage message
catch  throwable e
adapter rollbackentitymanager null  manager
throw ioexceptionsupport create e
adapter commitentitymanager null  manager
@suppresswarnings
public void recovernextmessages int maxreturned  messagerecoverylistener listener  throws exception
entitymanager manager   adapter beginentitymanager null
try
query query   manager createquery
query setparameter 1  destinationname
query setparameter 2  lastmessageid get
query setmaxresults maxreturned
int count   0
for  storedmessage m    list<storedmessage> query getresultlist
message message    message wireformat unmarshal new bytesequence m getdata
listener recovermessage message
lastmessageid set m getid
count
if  count >  maxreturned
return
catch  throwable e
adapter rollbackentitymanager null  manager
throw ioexceptionsupport create e
adapter commitentitymanager null  manager
public void removeallmessages connectioncontext context  throws ioexception
entitymanager manager   adapter beginentitymanager context
try
query query   manager createquery
query setparameter 1  destinationname
query executeupdate
catch  throwable e
adapter rollbackentitymanager context  manager
throw ioexceptionsupport create e
adapter commitentitymanager context  manager
public void removemessage connectioncontext context  messageack ack  throws ioexception
entitymanager manager   adapter beginentitymanager context
try
query query   manager createquery
query setparameter 1  ack getlastmessageid   getbrokersequenceid
query executeupdate
catch  throwable e
adapter rollbackentitymanager context  manager
throw ioexceptionsupport create e
adapter commitentitymanager context  manager
public void resetbatching
lastmessageid set  1
public void setmemoryusage memoryusage memoeyusage
public void start   throws exception
public void stop   throws exception