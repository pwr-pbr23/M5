/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker region policy
import java io ioexception
import java util linkedlist
import org apache activemq broker region messagereference
/**
* a strategy for evicting messages from slow consumers.
*
* @version $revision$
*/
public interface messageevictionstrategy
/**
* find the message reference in the given list with oldest messages at the front and newer messages at the end
*
* @return the message that has been evicted.
* @throws ioexception if an exception occurs such as reading a message content (but should not ever happen
* as usually all the messages will be in ram when this method is called).
*/
messagereference evictmessages linkedlist messages  throws ioexception
/**
* returns the high water mark on which we will eagerly evict expired messages from ram
*/
int getevictexpiredmessageshighwatermark