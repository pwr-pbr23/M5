/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport http
import java io bufferedreader
import java io dataoutputstream
import java io ioexception
import java util hashmap
import java util map
import java util concurrent arrayblockingqueue
import java util concurrent timeunit
import javax servlet servletexception
import javax servlet http httpservlet
import javax servlet http httpservletrequest
import javax servlet http httpservletresponse
import org apache activemq command command
import org apache activemq command wireformatinfo
import org apache activemq transport transportacceptlistener
import org apache activemq transport util textwireformat
import org apache activemq transport xstream xstreamwireformat
import org apache commons logging log
import org apache commons logging logfactory
/**
* a servlet which handles server side http transport, delegating to the
* activemq broker. this servlet is designed for being embedded inside an
* activemq broker using an embedded jetty or tomcat instance.
*
* @version $revision$
*/
public class httptunnelservlet extends httpservlet
private static final long serialversionuid    3826714430767484333l
private static final log log   logfactory getlog httptunnelservlet class
private transportacceptlistener listener
private textwireformat wireformat
private map<string  blockingqueuetransport> clients   new hashmap<string  blockingqueuetransport>
private long requesttimeout   30000l
public void init   throws servletexception
super init
listener    transportacceptlistener getservletcontext   getattribute
if  listener    null
throw new servletexception
wireformat    textwireformat getservletcontext   getattribute
if  wireformat    null
wireformat   createwireformat
protected void dohead httpservletrequest request  httpservletresponse response  throws servletexception  ioexception
createtransportchannel request  response
protected void doget httpservletrequest request  httpservletresponse response  throws servletexception  ioexception
// lets return the next response
command packet   null
int count   0
try
blockingqueuetransport transportchannel   gettransportchannel request  response
if  transportchannel    null
return
packet    command transportchannel getqueue   poll requesttimeout  timeunit milliseconds
dataoutputstream stream   new dataoutputstream response getoutputstream
// while( packet !=null ) {
wireformat marshal packet  stream
count
// packet = (command) transportchannel.getqueue().poll(0,
// timeunit.milliseconds);
// }
catch  interruptedexception ignore
if  count    0
response setstatus httpservletresponse sc_request_timeout
protected void dopost httpservletrequest request  httpservletresponse response  throws servletexception  ioexception
// read the command directly from the reader
command command    command wireformat unmarshaltext request getreader
if  command instanceof wireformatinfo
wireformatinfo info    wireformatinfo command
if   canprocesswireformatversion info getversion
response senderror httpservletresponse sc_not_found      info getversion
else
blockingqueuetransport transport   gettransportchannel request  response
if  transport    null
return
transport doconsume command
private boolean canprocesswireformatversion int version
// todo:
return true
protected string readrequestbody httpservletrequest request  throws ioexception
stringbuffer buffer   new stringbuffer
bufferedreader reader   request getreader
while  true
string line   reader readline
if  line    null
break
else
buffer append line
buffer append
return buffer tostring
protected blockingqueuetransport gettransportchannel httpservletrequest request  httpservletresponse response  throws ioexception
string clientid   request getheader
if  clientid    null
response senderror httpservletresponse sc_bad_request
log warn
return null
synchronized  this
blockingqueuetransport answer   clients get clientid
if  answer    null
log warn     clientid
return null
return answer
protected blockingqueuetransport createtransportchannel httpservletrequest request  httpservletresponse response  throws ioexception
string clientid   request getheader
if  clientid    null
response senderror httpservletresponse sc_bad_request
log warn
return null
synchronized  this
blockingqueuetransport answer   clients get clientid
if  answer    null
response senderror httpservletresponse sc_bad_request      clientid
log warn     clientid
return null
answer   createtransportchannel
clients put clientid  answer
listener onaccept answer
return answer
protected blockingqueuetransport createtransportchannel
return new blockingqueuetransport new arrayblockingqueue 10
protected textwireformat createwireformat
return new xstreamwireformat