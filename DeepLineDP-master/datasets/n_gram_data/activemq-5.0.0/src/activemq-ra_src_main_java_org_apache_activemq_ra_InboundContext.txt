/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq ra
import javax jms jmsexception
import javax jms messageproducer
import javax jms session
/**
* represents an object which has-a {@link session} instance and
* an optional, lazily created {@link messageproducer} instance
* which can them be used by a pooling based jms provider for publishing
* messages using the session used by the current thread.
*
* @version $revision$
*/
public interface inboundcontext
/**
* returns the current session being used to process a jms message in the current thread.
*/
session getsession   throws jmsexception
/**
* lazily creates a message producer that can be used to send messages using the
* same jms session which is being used to dispatch messages which minimises the xa
* overheard of consuming and producing or allows jms transactions to be used for consuming
* and producing messages.
*
* @return the current message producer or a new one is lazily created, using a null
*         destination so the destination must be specified on a send() method.
* @throws javax.jms.jmsexception
*/
messageproducer getmessageproducer   throws jmsexception