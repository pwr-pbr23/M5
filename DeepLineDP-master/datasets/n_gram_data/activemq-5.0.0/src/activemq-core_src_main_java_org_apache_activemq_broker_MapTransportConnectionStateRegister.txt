/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker
import java util arraylist
import java util hashmap
import java util list
import java util map
import java util concurrent concurrenthashmap
import org apache activemq command connectionid
import org apache activemq command consumerid
import org apache activemq command producerid
import org apache activemq command sessionid
/**
* @version $revision: 1.8 $
*/
public class maptransportconnectionstateregister  implements transportconnectionstateregister
private  map <connectionid transportconnectionstate>connectionstates   new concurrenthashmap<connectionid transportconnectionstate>
public transportconnectionstate registerconnectionstate connectionid connectionid
transportconnectionstate state
transportconnectionstate rc   connectionstates put connectionid  state
return rc
public transportconnectionstate unregisterconnectionstate connectionid connectionid
transportconnectionstate rc   connectionstates remove connectionid
return rc
public list<transportconnectionstate> listconnectionstates
list<transportconnectionstate> rc   new arraylist<transportconnectionstate>
rc addall connectionstates values
return rc
public transportconnectionstate lookupconnectionstate string connectionid
return connectionstates get new connectionid connectionid
public transportconnectionstate lookupconnectionstate consumerid id
transportconnectionstate cs   lookupconnectionstate id getconnectionid
if  cs    null
throw new illegalstateexception
id getparentid   getparentid
return cs
public transportconnectionstate lookupconnectionstate producerid id
transportconnectionstate cs   lookupconnectionstate id getconnectionid
if  cs    null
throw new illegalstateexception
id getparentid   getparentid
return cs
public transportconnectionstate lookupconnectionstate sessionid id
transportconnectionstate cs   lookupconnectionstate id getconnectionid
if  cs    null
throw new illegalstateexception
id getparentid
return cs
public transportconnectionstate lookupconnectionstate connectionid connectionid
transportconnectionstate cs   connectionstates get connectionid
if  cs    null
throw new illegalstateexception
connectionid
return cs
public boolean doeshandlemultipleconnectionstates
return true
public boolean isempty
return connectionstates isempty
public void clear
connectionstates clear
public void intialize transportconnectionstateregister other
connectionstates clear
connectionstates putall other mapstates
public map<connectionid  transportconnectionstate> mapstates
hashmap<connectionid  transportconnectionstate> map   new hashmap<connectionid  transportconnectionstate> connectionstates
return map