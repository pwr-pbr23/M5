/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq advisory
import java util eventobject
import javax jms destination
import org apache activemq command consumerid
/**
* an event when the number of consumers on a given destination changes.
*
* @version $revision$
*/
public abstract class consumerevent extends eventobject
private static final long serialversionuid   2442156576867593780l
private final destination destination
private final consumerid consumerid
private final int consumercount
public consumerevent consumereventsource source  destination destination  consumerid consumerid  int consumercount
super source
this destination   destination
this consumerid   consumerid
this consumercount   consumercount
public consumereventsource getadvisor
return  consumereventsource  getsource
public destination getdestination
return destination
/**
* returns the current number of consumers active at the time this advisory was sent.
*
* note that this is not the number of consumers active when the consumer started consuming.
* it is usually more vital to know how many consumers there are now - rather than historically
* how many there were when a consumer started. so if you create a {@link consumerlistener}
* after many consumers have started, you will receive a consumerevent for each consumer. however the
* {@link #getconsumercount()} method will always return the current active consumer count on each event.
*/
public int getconsumercount
return consumercount
public consumerid getconsumerid
return consumerid
public abstract boolean isstarted