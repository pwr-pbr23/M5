/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq tool
import java util date
import javax jms connection
import javax jms deliverymode
import javax jms jmsexception
import javax jms messageproducer
import javax jms session
import javax jms textmessage
/**
* a simple tool for publishing messages
*
* @version $revision$
*/
public class producertool extends toolsupport
protected int messagecount   10
protected long sleeptime
protected boolean verbose   true
protected int messagesize   255
public static void main string args
runtool args  new producertool
protected static void runtool string args  producertool tool
if  args length > 0
tool url   args
if  args length > 1
tool topic   args equalsignorecase
if  args length > 2
tool subject   args
if  args length > 3
tool durable   args equalsignorecase
if  args length > 4
tool messagecount   integer parseint args
if  args length > 5
tool messagesize   integer parseint args
tool run
public void run
try
system out println     url
system out println     messagesize        topic ?              subject
system out println      durable ?
connection connection   createconnection
session session   createsession connection
messageproducer producer   createproducer session
// connection.start();
sendloop session  producer
system out println
close connection  session
catch  exception e
system out println     e
e printstacktrace
protected messageproducer createproducer session session  throws jmsexception
messageproducer producer   session createproducer destination
if  durable
producer setdeliverymode deliverymode persistent
else
producer setdeliverymode deliverymode non_persistent
return producer
protected void sendloop session session  messageproducer producer  throws exception
for  int i   0  i < messagecount  i
textmessage message   session createtextmessage createmessagetext i
if  verbose
string msg   message gettext
if  msg length   > 50
msg   msg substring 0  50
system out println     msg
producer send message
thread sleep sleeptime
producer send session createmessage
/**
* @param i
* @return
*/
private string createmessagetext int index
stringbuffer buffer   new stringbuffer messagesize
buffer append     index       new date
if  buffer length   > messagesize
return buffer substring 0  messagesize
for  int i   buffer length    i < messagesize  i
buffer append
return buffer tostring