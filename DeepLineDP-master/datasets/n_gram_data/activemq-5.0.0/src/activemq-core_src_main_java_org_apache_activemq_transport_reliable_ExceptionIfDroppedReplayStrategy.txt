/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport reliable
import java io ioexception
/**
* throws an exception if packets are dropped causing the transport to be
* closed.
*
* @version $revision$
*/
public class exceptionifdroppedreplaystrategy implements replaystrategy
private int maximumdifference   5
public exceptionifdroppedreplaystrategy
public exceptionifdroppedreplaystrategy int maximumdifference
this maximumdifference   maximumdifference
public boolean ondroppedpackets reliabletransport transport  int expectedcounter  int actualcounter  int nextavailablecounter  throws ioexception
int difference   actualcounter   expectedcounter
long count   math abs difference
if  count > maximumdifference
throw new ioexception     transport       count       expectedcounter       actualcounter
// lets discard old commands
return difference > 0
public void onreceivedpacket reliabletransport transport  long expectedcounter
public int getmaximumdifference
return maximumdifference
/**
* sets the maximum allowed difference between an expected packet and an
* actual packet before an error occurs
*/
public void setmaximumdifference int maximumdifference
this maximumdifference   maximumdifference