/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq security
import java util hashmap
import java util hashset
import java util iterator
import java util list
import java util map
import java util set
import java util stringtokenizer
import org apache activemq broker broker
import org apache activemq broker brokerplugin
import org apache activemq jaas groupprincipal
/**
* a simple authentication plugin
*
* @org.apache.xbean.xbean element="simpleauthenticationplugin"
*                         description="provides a simple authentication plugin
*                         configured with a map of user-passwords and a map of
*                         user-groups or a list of authentication users"
*
* @version $revision$
*/
public class simpleauthenticationplugin implements brokerplugin
private map<string  string> userpasswords
private map<string  set<groupprincipal>> usergroups
public simpleauthenticationplugin
public simpleauthenticationplugin list users
setusers users
public broker installplugin broker broker
return new simpleauthenticationbroker broker  userpasswords  usergroups
public map<string  set<groupprincipal>> getusergroups
return usergroups
/**
* sets individual users for authentication
*
* @org.apache.xbean.elementtype class="org.apache.activemq.security.authenticationuser"
*/
public void setusers list users
userpasswords   new hashmap<string  string>
usergroups   new hashmap<string  set<groupprincipal>>
for  iterator it   users iterator    it hasnext
authenticationuser user    authenticationuser it next
userpasswords put user getusername    user getpassword
set<groupprincipal> groups   new hashset<groupprincipal>
stringtokenizer iter   new stringtokenizer user getgroups
while  iter hasmoretokens
string name   iter nexttoken   trim
groups add new groupprincipal name
usergroups put user getusername    groups
/**
* sets the groups a user is in. the key is the user name and the value is a
* set of groups
*/
public void setusergroups map<string  set<groupprincipal>> usergroups
this usergroups   usergroups
public map<string  string> getuserpasswords
return userpasswords
/**
* sets the map indexed by user name with the value the password
*/
public void setuserpasswords map<string  string> userpasswords
this userpasswords   userpasswords