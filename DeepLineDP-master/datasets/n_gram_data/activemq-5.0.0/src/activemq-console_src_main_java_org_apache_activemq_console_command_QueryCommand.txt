/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console command
import java util arraylist
import java util enumeration
import java util hashset
import java util list
import java util properties
import java util set
import java util stringtokenizer
import org apache activemq console formatter globalwriter
import org apache activemq console util jmxmbeansutil
public class querycommand extends abstractjmxcommand
// predefined type=identifier query
private static final properties predefined_objname_query   new properties
static
predefined_objname_query setproperty
predefined_objname_query setproperty
predefined_objname_query setproperty
predefined_objname_query setproperty
predefined_objname_query setproperty
predefined_objname_query setproperty
protected string helpfile   new string
activemq advisory
private final list<string> queryaddobjects   new arraylist<string> 10
private final list<string> querysubobjects   new arraylist<string> 10
private final set queryviews   new hashset 10
/**
* queries the mbeans registered in the specified jmx context
*
* @param tokens - command arguments
* @throws exception
*/
protected void runtask list<string> tokens  throws exception
try
// query for the mbeans to add
list addmbeans   jmxmbeansutil querymbeans usejmxserviceurl    queryaddobjects  queryviews
// query for the mbeans to sub
if  querysubobjects size   > 0
list submbeans   jmxmbeansutil querymbeans usejmxserviceurl    querysubobjects  queryviews
addmbeans removeall submbeans
globalwriter printmbean jmxmbeansutil filtermbeansview addmbeans  queryviews
catch  exception e
globalwriter printexception new runtimeexception     e
throw new exception e
/**
* handle the -q, -xq, --objname, --xobjname, --view options.
*
* @param token - option token to handle
* @param tokens - succeeding command arguments
* @throws exception
*/
protected void handleoption string token  list<string> tokens  throws exception
// if token is a additive predefined query define option
if  token startswith
string key   token substring 2
string value
int pos   key indexof
if  pos >  0
value   key substring pos   1
key   key substring 0  pos
// if additive query
string predefquery   predefined_objname_query getproperty key
if  predefquery    null
globalwriter printexception new illegalargumentexception     key
return
string querystr   jmxmbeansutil createquerystring predefquery  value
stringtokenizer querytokens   new stringtokenizer querystr  command_option_delimeter
while  querytokens hasmoretokens
queryaddobjects add querytokens nexttoken
else if  token startswith
// if token is a substractive predefined query define option
string key   token substring 3
string value
int pos   key indexof
if  pos >  0
value   key substring pos   1
key   key substring 0  pos
// if subtractive query
string predefquery   predefined_objname_query getproperty key
if  predefquery    null
globalwriter printexception new illegalargumentexception     key
return
string querystr   jmxmbeansutil createquerystring predefquery  value
stringtokenizer querytokens   new stringtokenizer querystr  command_option_delimeter
while  querytokens hasmoretokens
querysubobjects add querytokens nexttoken
else if  token startswith
// if token is an additive object name query option
// if no object name query is specified, or next token is a new
// option
if  tokens isempty        string tokens get 0   startswith
globalwriter printexception new illegalargumentexception
return
stringtokenizer querytokens   new stringtokenizer  string tokens remove 0   command_option_delimeter
while  querytokens hasmoretokens
queryaddobjects add querytokens nexttoken
else if  token startswith
// if token is a substractive object name query option
// if no object name query is specified, or next token is a new
// option
if  tokens isempty        string tokens get 0   startswith
globalwriter printexception new illegalargumentexception
return
stringtokenizer querytokens   new stringtokenizer  string tokens remove 0   command_option_delimeter
while  querytokens hasmoretokens
querysubobjects add querytokens nexttoken
else if  token startswith
// if token is a view option
// if no view specified, or next token is a new option
if  tokens isempty        string tokens get 0   startswith
globalwriter printexception new illegalargumentexception
return
// add the attributes to view
enumeration viewtokens   new stringtokenizer  string tokens remove 0   command_option_delimeter
while  viewtokens hasmoreelements
queryviews add viewtokens nextelement
else
// let super class handle unknown option
super handleoption token  tokens
/**
* print the help messages for the browse command
*/
protected void printhelp
globalwriter printhelp helpfile