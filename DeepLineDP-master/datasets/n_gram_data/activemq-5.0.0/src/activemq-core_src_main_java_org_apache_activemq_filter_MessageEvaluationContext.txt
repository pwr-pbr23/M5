/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq filter
import java io ioexception
import org apache activemq broker region messagereference
import org apache activemq command activemqdestination
import org apache activemq command message
/**
* messageevaluationcontext is used to cache selection results. a message
* usually has multiple selectors applied against it. some selector have a high
* cost of evaluating against the message. those selectors may whish to cache
* evaluation results associated with the message in the
* messageevaluationcontext.
*
* @version $revision: 1.4 $
*/
public class messageevaluationcontext
private messagereference messagereference
private boolean loaded
private boolean dropped
private message message
private activemqdestination destination
public messageevaluationcontext
public boolean isdropped   throws ioexception
getmessage
return dropped
public message getmessage   throws ioexception
if   dropped     loaded
loaded   true
messagereference incrementreferencecount
message   messagereference getmessage
if  message    null
messagereference decrementreferencecount
dropped   true
loaded   false
return message
public void setmessagereference messagereference messagereference
if  this messagereference    messagereference
clearmessagecache
this messagereference   messagereference
public void clear
clearmessagecache
destination   null
public activemqdestination getdestination
return destination
public void setdestination activemqdestination destination
this destination   destination
/**
* a strategy hook to allow per-message caches to be cleared
*/
protected void clearmessagecache
if  loaded
messagereference decrementreferencecount
message   null
dropped   false
loaded   false