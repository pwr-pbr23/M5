/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console filter
import java lang reflect method
import java util enumeration
import java util hashmap
import java util iterator
import java util map
import java util properties
import javax jms deliverymode
import javax jms jmsexception
import javax management attribute
import javax management attributelist
import javax management objectinstance
import javax management objectname
import javax management openmbean compositedatasupport
import org apache activemq command activemqbytesmessage
import org apache activemq command activemqdestination
import org apache activemq command activemqmapmessage
import org apache activemq command activemqmessage
import org apache activemq command activemqobjectmessage
import org apache activemq command activemqstreammessage
import org apache activemq command activemqtextmessage
import org apache activemq console formatter globalwriter
import org apache activemq console util amqmessagesutil
public class maptransformfilter extends resulttransformfilter
/**
* creates a map transform filter that is able to transform a variety of
* objects to a properties map object
*
* @param next - the next query filter
*/
public maptransformfilter queryfilter next
super next
/**
* transform the given object to a map object
*
* @param object - object to transform
* @return map object
*/
protected object transformelement object object  throws exception
// use reflection to determine how the object should be transformed
try
method method   this getclass   getdeclaredmethod    new class
object getclass
return  map method invoke this  new object
object
catch  nosuchmethodexception e
globalwriter print     object getclass   getname
return null
/**
* transform an objectinstance mbean to a map
*
* @param obj - objectinstance format of an mbean
* @return map object
*/
protected map transformtomap objectinstance obj
return transformtomap obj getobjectname
/**
* transform an objectname mbean to a map
*
* @param objname - objectname format of an mbean
* @return map object
*/
protected map transformtomap objectname objname
properties props   new properties
// parse object properties
map objprops   objname getkeypropertylist
for  iterator i   objprops keyset   iterator    i hasnext
object key   i next
object val   objprops get key
if  val    null
props setproperty key tostring    val tostring
return props
/**
* transform an attribute list format of an mbean to a map
*
* @param list - attributelist format of an mbean
* @return map object
*/
protected map transformtomap attributelist list
properties props   new properties
for  iterator i   list iterator    i hasnext
attribute attrib    attribute i next
// if attribute is an objectname
if  attrib getname   equals mbeansattributequeryfilter key_object_name_attribute
props putall transformtomap  objectname attrib getvalue
else
if  attrib getvalue      null
props setproperty attrib getname    attrib getvalue   tostring
return props
/**
* transform an activemqtextmessage to a map
*
* @param msg - text message to trasnform
* @return map object
* @throws jmsexception
*/
protected map transformtomap activemqtextmessage msg  throws jmsexception
properties props   new properties
props putall transformtomap  activemqmessage msg
if  msg gettext      null
props setproperty amqmessagesutil jms_message_body_prefix      msg gettext
return props
/**
* transform an activemqbytesmessage to a map
*
* @param msg - bytes message to transform
* @return map object
* @throws jmsexception
*/
protected map transformtomap activemqbytesmessage msg  throws jmsexception
properties props   new properties
props putall transformtomap  activemqmessage msg
long bodylength   msg getbodylength
byte msgbody
int i   0
// create separate bytes messages
for  i   0  i <  bodylength   integer max_value   i
msgbody   new byte
props setproperty amqmessagesutil jms_message_body_prefix        i   1   new string msgbody
msgbody   new byte
props setproperty amqmessagesutil jms_message_body_prefix        i   1   new string msgbody
return props
/**
* transform an activemqmessage to a map
*
* @param msg - object message to transform
* @return map object
* @throws jmsexception
*/
protected map transformtomap activemqobjectmessage msg  throws jmsexception
properties props   new properties
props putall transformtomap  activemqmessage msg
if  msg getobject      null
// just add the class name and tostring value of the object
props setproperty amqmessagesutil jms_message_body_prefix      msg getobject   getclass   getname
props setproperty amqmessagesutil jms_message_body_prefix      msg getobject   tostring
return props
/**
* transform an activemqmapmessage to a map
*
* @param msg - map message to transform
* @return map object
* @throws jmsexception
*/
protected map transformtomap activemqmapmessage msg  throws jmsexception
properties props   new properties
props putall transformtomap  activemqmessage msg
// get map properties
enumeration e   msg getmapnames
while  e hasmoreelements
string key    string e nextelement
object val   msg getobject key
if  val    null
props setproperty amqmessagesutil jms_message_body_prefix   key  val tostring
return props
/**
* transform an activemqstreammessage to a map
*
* @param msg - stream message to transform
* @return map object
* @throws jmsexception
*/
protected map transformtomap activemqstreammessage msg  throws jmsexception
properties props   new properties
props putall transformtomap  activemqmessage msg
// just set the tostring of the message as the body of the stream
// message
props setproperty amqmessagesutil jms_message_body_prefix      msg tostring
return props
/**
* transform an activemqmessage to a map
*
* @param msg - message to transform
* @return map object
* @throws jmsexception
*/
protected map<string  string> transformtomap activemqmessage msg  throws jmsexception
map<string  string> props   new hashmap<string  string>
// get jms properties
if  msg getjmscorrelationid      null
props put amqmessagesutil jms_message_header_prefix      msg getjmscorrelationid
props put amqmessagesutil jms_message_header_prefix       msg getjmsdeliverymode      deliverymode persistent  ?
if  msg getjmsdestination      null
props put amqmessagesutil jms_message_header_prefix        activemqdestination msg getjmsdestination    getphysicalname
props put amqmessagesutil jms_message_header_prefix      long tostring msg getjmsexpiration
props put amqmessagesutil jms_message_header_prefix      msg getjmsmessageid
props put amqmessagesutil jms_message_header_prefix      integer tostring msg getjmspriority
props put amqmessagesutil jms_message_header_prefix      boolean tostring msg getjmsredelivered
if  msg getjmsreplyto      null
props put amqmessagesutil jms_message_header_prefix        activemqdestination msg getjmsreplyto    getphysicalname
props put amqmessagesutil jms_message_header_prefix      long tostring msg getjmstimestamp
if  msg getjmstype      null
props put amqmessagesutil jms_message_header_prefix      msg getjmstype
// get custom properties
enumeration e   msg getpropertynames
while  e hasmoreelements
string name    string e nextelement
if  msg getobjectproperty name     null
props put amqmessagesutil jms_message_custom_prefix   name  msg getobjectproperty name  tostring
return props
/**
* transform an openmbean composite data to a map
*
* @param data - composite data to transform
* @return map object
*/
protected map transformtomap compositedatasupport data
properties props   new properties
string typename   data getcompositetype   gettypename
// retrieve text message
if  typename equals activemqtextmessage class getname
props setproperty amqmessagesutil jms_message_body_prefix      data get    tostring
// retrieve byte preview
else if  typename equals activemqbytesmessage class getname
props setproperty amqmessagesutil jms_message_body_prefix      data get    tostring
props setproperty amqmessagesutil jms_message_body_prefix      new string  byte data get
// expand content map
else if  typename equals activemqmapmessage class getname
map contentmap    map data get
for  iterator i   contentmap keyset   iterator    i hasnext
string key    string i next
props setproperty amqmessagesutil jms_message_body_prefix   key  contentmap get key  tostring
// do nothing
else if  typename equals activemqobjectmessage class getname       typename equals activemqstreammessage class getname       typename equals activemqmessage class getname
// unrecognized composite data. throw exception.
else
throw new illegalargumentexception     typename
// process the jms message header values
props setproperty amqmessagesutil jms_message_header_prefix          data get
props setproperty amqmessagesutil jms_message_header_prefix          data get
props setproperty amqmessagesutil jms_message_header_prefix          data get
props setproperty amqmessagesutil jms_message_header_prefix          data get
props setproperty amqmessagesutil jms_message_header_prefix          data get
props setproperty amqmessagesutil jms_message_header_prefix          data get
props setproperty amqmessagesutil jms_message_header_prefix          data get
props setproperty amqmessagesutil jms_message_header_prefix          data get
props setproperty amqmessagesutil jms_message_header_prefix          data get
props setproperty amqmessagesutil jms_message_header_prefix          data get
// process the jms custom message properties
props setproperty amqmessagesutil jms_message_custom_prefix          data get
return props