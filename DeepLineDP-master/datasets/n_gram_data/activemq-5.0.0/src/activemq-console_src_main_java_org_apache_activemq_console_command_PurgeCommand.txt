/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console command
import java util arraylist
import java util iterator
import java util list
import java util stringtokenizer
import javax management mbeanserverconnection
import javax management objectinstance
import javax management objectname
import javax management openmbean compositedata
import javax management remote jmxconnector
import org apache activemq console formatter globalwriter
import org apache activemq console util jmxmbeansutil
public class purgecommand extends abstractjmxcommand
protected string helpfile   new string
private final list<string> queryaddobjects   new arraylist<string> 10
private final list<string> querysubobjects   new arraylist<string> 10
/**
* execute the purge command, which allows you to purge the messages in a
* given jms destination
*
* @param tokens - command arguments
* @throws exception
*/
protected void runtask list<string> tokens  throws exception
try
// if there is no queue name specified, let's select all
if  tokens isempty
tokens add
// iterate through the queue names
for  iterator<string> i   tokens iterator    i hasnext
list queuelist   jmxmbeansutil querymbeans usejmxserviceurl        i next
for  iterator j   queuelist iterator    j hasnext
objectname queuename     objectinstance j next    getobjectname
if  queryaddobjects isempty
purgequeue queuename
else
list messages   jmxmbeansutil createmessagequeryfilter usejmxserviceurl    queuename  query queryaddobjects
purgemessages queuename  messages
catch  exception e
globalwriter printexception new runtimeexception     e
throw new exception e
/**
* purge all the messages in the queue
*
* @param queue - objectname of the queue to purge
* @throws exception
*/
public void purgequeue objectname queue  throws exception
jmxconnector conn   createjmxconnector
mbeanserverconnection server   conn getmbeanserverconnection
globalwriter printinfo     queue getkeyproperty
server invoke queue     new object     new string
conn close
/**
* purge selected messages in the queue
*
* @param queue - objectname of the queue to purge the messages from
* @param messages - list of messages to purge
* @throws exception
*/
public void purgemessages objectname queue  list messages  throws exception
jmxconnector conn   createjmxconnector
mbeanserverconnection server   conn getmbeanserverconnection
object param   new object
for  iterator i   messages iterator    i hasnext
compositedata msg    compositedata i next
param       msg get
globalwriter printinfo     param       queue getkeyproperty
server invoke queue     param  new string
conn close
/**
* handle the --msgsel, --xmsgsel.
*
* @param token - option token to handle
* @param tokens - succeeding command arguments
* @throws exception
*/
protected void handleoption string token  list<string> tokens  throws exception
// if token is an additive message selector option
if  token startswith
// if no message selector is specified, or next token is a new
// option
if  tokens isempty        string tokens get 0   startswith
globalwriter printexception new illegalargumentexception
return
stringtokenizer querytokens   new stringtokenizer  string tokens remove 0   command_option_delimeter
while  querytokens hasmoretokens
queryaddobjects add querytokens nexttoken
else if  token startswith
// if token is a substractive message selector option
// if no message selector is specified, or next token is a new
// option
if  tokens isempty        string tokens get 0   startswith
globalwriter printexception new illegalargumentexception
return
stringtokenizer querytokens   new stringtokenizer  string tokens remove 0   command_option_delimeter
while  querytokens hasmoretokens
querysubobjects add querytokens nexttoken
else
// let super class handle unknown option
super handleoption token  tokens
/**
* print the help messages for the browse command
*/
protected void printhelp
globalwriter printhelp helpfile