/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq command
/**
* @openwire:marshaller code="110"
* @version $revision: 1.12 $
*/
public class messageid implements datastructure  comparable<messageid>
public static final byte data_structure_type   commandtypes message_id
protected producerid producerid
protected long producersequenceid
protected long brokersequenceid
private transient string key
private transient int hashcode
public messageid
this producerid   new producerid
public messageid producerinfo producerinfo  long producersequenceid
this producerid   producerinfo getproducerid
this producersequenceid   producersequenceid
public messageid string messagekey
setvalue messagekey
public messageid string producerid  long producersequenceid
this new producerid producerid   producersequenceid
public messageid producerid producerid  long producersequenceid
this producerid   producerid
this producersequenceid   producersequenceid
/**
* sets the value as a string
*/
public void setvalue string messagekey
key   messagekey
// parse off the sequenceid
int p   messagekey lastindexof
if  p >  0
producersequenceid   long parselong messagekey substring p   1
messagekey   messagekey substring 0  p
producerid   new producerid messagekey
/**
* sets the transient text view of the message which will be ignored if the
* message is marshaled on a transport; so is only for in-jvm changes to
* accommodate foreign jms message ids
*/
public void settextview string key
this key   key
public byte getdatastructuretype
return data_structure_type
public boolean equals object o
if  this    o
return true
if  o    null    o getclass      getclass
return false
messageid id    messageid o
return producersequenceid    id producersequenceid    producerid equals id producerid
public int hashcode
if  hashcode    0
hashcode   producerid hashcode   ^  int producersequenceid
return hashcode
public string tostring
if  key    null
key   producerid tostring         producersequenceid
return key
/**
* @openwire:property version=1 cache=true
*/
public producerid getproducerid
return producerid
public void setproducerid producerid producerid
this producerid   producerid
/**
* @openwire:property version=1
*/
public long getproducersequenceid
return producersequenceid
public void setproducersequenceid long producersequenceid
this producersequenceid   producersequenceid
/**
* @openwire:property version=1
*/
public long getbrokersequenceid
return brokersequenceid
public void setbrokersequenceid long brokersequenceid
this brokersequenceid   brokersequenceid
public boolean ismarshallaware
return false
public messageid copy
messageid copy   new messageid producerid  producersequenceid
copy key   key
copy brokersequenceid   brokersequenceid
return copy
/**
* @param o
* @return
* @see java.lang.comparable#compareto(java.lang.object)
*/
public int compareto messageid other
int result    1
if  other    null
result   this tostring   compareto other tostring
return result