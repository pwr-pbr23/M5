/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport
import java io ioexception
import java util arraylist
import java util hashmap
import java util iterator
import java util map
import org apache activemq command command
import org apache activemq command exceptionresponse
import org apache activemq command response
import org apache activemq util intsequencegenerator
import org apache commons logging log
import org apache commons logging logfactory
/**
* adds the incrementing sequence number to commands along with performing the
* corelation of responses to requests to create a blocking request-response
* semantics.
*
* @version $revision: 1.4 $
*/
public class responsecorrelator extends transportfilter
private static final log log   logfactory getlog responsecorrelator class
private final map<integer  futureresponse> requestmap   new hashmap<integer  futureresponse>
private intsequencegenerator sequencegenerator
private final boolean debug   log isdebugenabled
public responsecorrelator transport next
this next  new intsequencegenerator
public responsecorrelator transport next  intsequencegenerator sequencegenerator
super next
this sequencegenerator   sequencegenerator
public void oneway object o  throws ioexception
command command    command o
command setcommandid sequencegenerator getnextsequenceid
command setresponserequired false
next oneway command
public futureresponse asyncrequest object o  responsecallback responsecallback  throws ioexception
command command    command o
command setcommandid sequencegenerator getnextsequenceid
command setresponserequired true
futureresponse future   new futureresponse responsecallback
synchronized  requestmap
requestmap put new integer command getcommandid     future
next oneway command
return future
public object request object command  throws ioexception
futureresponse response   asyncrequest command  null
return response getresult
public object request object command  int timeout  throws ioexception
futureresponse response   asyncrequest command  null
return response getresult timeout
public void oncommand object o
command command    command o
if  command isresponse
response response    response command
futureresponse future   null
synchronized  requestmap
future   requestmap remove integer valueof response getcorrelationid
if  future    null
future set response
else
if  debug
log debug     response getcorrelationid
else
gettransportlistener   oncommand command
/**
* if an async exception occurs, then assume no responses will arrive for
* any of current requests. lets let them know of the problem.
*/
public void onexception ioexception error
// copy and clear the request map
arraylist<futureresponse> requests   new arraylist<futureresponse> requestmap values
requestmap clear
for  iterator<futureresponse> iter   requests iterator    iter hasnext
futureresponse fr   iter next
fr set new exceptionresponse error
super onexception error
public intsequencegenerator getsequencegenerator
return sequencegenerator
public string tostring
return next tostring