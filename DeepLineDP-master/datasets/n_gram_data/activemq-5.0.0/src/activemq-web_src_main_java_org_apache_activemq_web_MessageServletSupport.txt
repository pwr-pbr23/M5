/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq web
import java io bufferedreader
import java io ioexception
import java util hashmap
import java util iterator
import java util map
import javax jms destination
import javax jms jmsexception
import javax jms textmessage
import javax servlet servletconfig
import javax servlet servletexception
import javax servlet http httpservlet
import javax servlet http httpservletrequest
import org apache activemq command activemqdestination
import org apache activemq command activemqqueue
import org apache activemq command activemqtopic
import org apache commons logging log
import org apache commons logging logfactory
/**
* a useful base class for any jms related servlet; there are various ways to
* map jms operations to web requests so we put most of the common behaviour in
* a reusable base class. this servlet can be configured with the following init
* paramters
* <dl>
* <dt>topic</dt>
* <dd>set to 'true' if the servle should default to using topics rather than
* channels</dd>
* <dt>destination</dt>
* <dd>the default destination to use if one is not specifiied</dd>
* <dt></dt>
* <dd></dd>
* </dl>
*
* @version $revision: 1.1.1.1 $
*/
public abstract class messageservletsupport extends httpservlet
private static final transient log log   logfactory getlog messageservletsupport class
private boolean defaulttopicflag   true
private destination defaultdestination
private string destinationparameter
private string typeparameter
private string bodyparameter
private boolean defaultmessagepersistent   true
private int defaultmessagepriority   5
private long defaultmessagetimetolive
private string destinationoptions
public void init servletconfig servletconfig  throws servletexception
super init servletconfig
destinationoptions   servletconfig getinitparameter
string name   servletconfig getinitparameter
if  name    null
defaulttopicflag   asboolean name
if  log isdebugenabled
log debug     defaulttopicflag
name   servletconfig getinitparameter
if  name    null
if  defaulttopicflag
defaultdestination   new activemqtopic name
else
defaultdestination   new activemqqueue name
// lets check to see if there's a connection factory set
webclient initcontext getservletcontext
public static boolean asboolean string param
return asboolean param  false
public static boolean asboolean string param  boolean defaultvalue
if  param    null
return defaultvalue
else
return param equalsignorecase
protected void appendparameterstomessage httpservletrequest request  textmessage message  throws jmsexception
map parametermap   request getparametermap
if  parametermap    null
return
map parameters   new hashmap parametermap
string correlationid   asstring parameters remove
if  correlationid    null
message setjmscorrelationid correlationid
long expiration   aslong parameters remove
if  expiration    null
message setjmsexpiration expiration longvalue
destination replyto   asdestination parameters remove
if  replyto    null
message setjmsreplyto replyto
string type    string asstring parameters remove
if  correlationid    null
message setjmstype type
for  iterator iter   parameters entryset   iterator    iter hasnext
map entry entry    map entry iter next
string name    string entry getkey
if   destinationparameter equals name      typeparameter equals name      bodyparameter equals name        equals name        equals name
equals name
object value   entry getvalue
if  value instanceof object
object array    object value
if  array length    1
value   array
else
log warn     name       value getclass   getname
value   null
int size   array length
for  int i   0  i < size  i
log debug     i       array
if  value    null
message setobjectproperty name  value
protected long getsendtimetolive httpservletrequest request
string text   request getparameter
if  text    null
return aslong text
return defaultmessagetimetolive
protected int getsendpriority httpservletrequest request
string text   request getparameter
if  text    null
return asint text
return defaultmessagepriority
protected boolean issendpersistent httpservletrequest request
string text   request getparameter
if  text    null
return text trim   equalsignorecase
return defaultmessagepersistent
protected destination asdestination object value
if  value instanceof destination
return  destination value
if  value instanceof string
string text    string value
return activemqdestination createdestination text  activemqdestination queue_type
if  value instanceof string
string text     string value
if  text    null
return null
return activemqdestination createdestination text  activemqdestination queue_type
return null
protected integer asinteger object value
if  value instanceof integer
return  integer value
if  value instanceof string
return integer valueof  string value
if  value instanceof string
return integer valueof   string value
return null
protected long aslong object value
if  value instanceof long
return  long value
if  value instanceof string
return long valueof  string value
if  value instanceof string
return long valueof   string value
return null
protected long aslong string name
return long parselong name
protected int asint string name
return integer parseint name
protected string asstring object value
if  value instanceof string
return   string value
if  value    null
return value tostring
return null
/**
* @return the destination to use for the current request
*/
protected destination getdestination webclient client  httpservletrequest request  throws jmsexception
string destinationname   request getparameter destinationparameter
if  destinationname    null
if  defaultdestination    null
return getdestinationfromuri client  request
else
return defaultdestination
return getdestination client  request  destinationname
/**
* @return the destination to use for the current request using the relative
*         uri from where this servlet was invoked as the destination name
*/
protected destination getdestinationfromuri webclient client  httpservletrequest request  throws jmsexception
string uri   request getpathinfo
if  uri    null
return null
// replace uri separator with jms destination separator
if  uri startswith
uri   uri substring 1
if  uri length      0
return null
uri   uri replace
system err println     uri
return getdestination client  request  uri
/**
* @return the destination object for the given destination name
*/
protected destination getdestination webclient client  httpservletrequest request  string destinationname  throws jmsexception
// todo cache destinations ???
boolean istopic   defaulttopicflag
if  destinationname startswith
istopic   true
destinationname   destinationname substring 8
else if  destinationname startswith
istopic   false
destinationname   destinationname substring 10
else
istopic   istopic request
if  destinationoptions    null
destinationname        destinationoptions
if  istopic
return client getsession   createtopic destinationname
else
return client getsession   createqueue destinationname
/**
* @return true if the current request is for a topic destination, else
*         false if its for a queue
*/
protected boolean istopic httpservletrequest request
string typetext   request getparameter typeparameter
if  typetext    null
return defaulttopicflag
return typetext equalsignorecase
/**
* @return the text that was posted to the servlet which is used as the body
*         of the message to be sent
*/
protected string getpostedmessagebody httpservletrequest request  throws ioexception
string answer   request getparameter bodyparameter
if  answer    null      equals request getcontenttype
// lets read the message body instead
bufferedreader reader   request getreader
stringbuffer buffer   new stringbuffer
while  true
string line   reader readline
if  line    null
break
buffer append line
buffer append
return buffer tostring
return answer