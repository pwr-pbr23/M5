/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq command
import java io ioexception
import java io inputstream
import java net malformedurlexception
import java net url
import javax jms jmsexception
import org apache activemq blobmessage
import org apache activemq blob blobuploader
import org apache activemq util jmsexceptionsupport
/**
* an implementation of {@link blobmessage} for out of band blob transfer
*
* @version $revision: $
* @openwire:marshaller code="29"
*/
public class activemqblobmessage extends activemqmessage implements blobmessage
public static final byte data_structure_type   commandtypes activemq_blob_message
public static final string binary_mime_type
private string remotebloburl
private string mimetype
private string name
private boolean deletedbybroker
private transient blobuploader blobuploader
private transient url url
public message copy
activemqblobmessage copy   new activemqblobmessage
copy copy
return copy
private void copy activemqblobmessage copy
super copy copy
copy setremotebloburl getremotebloburl
copy setmimetype getmimetype
copy setdeletedbybroker isdeletedbybroker
public byte getdatastructuretype
return data_structure_type
/**
* @openwire:property version=3 cache=false
*/
public string getremotebloburl
return remotebloburl
public void setremotebloburl string remotebloburl
this remotebloburl   remotebloburl
url   null
/**
* the mime type of the blob which can be used to apply different content
* types to messages.
*
* @openwire:property version=3 cache=true
*/
public string getmimetype
if  mimetype    null
return binary_mime_type
return mimetype
public void setmimetype string mimetype
this mimetype   mimetype
public string getname
return name
/**
* the name of the attachment which can be useful information if
* transmitting files over activemq
*
* @openwire:property version=3 cache=false
*/
public void setname string name
this name   name
/**
* @openwire:property version=3 cache=false
*/
public boolean isdeletedbybroker
return deletedbybroker
public void setdeletedbybroker boolean deletedbybroker
this deletedbybroker   deletedbybroker
public string getjmsxmimetype
return getmimetype
public inputstream getinputstream   throws ioexception  jmsexception
url value   geturl
if  value    null
return null
return value openstream
public url geturl   throws jmsexception
if  url    null    remotebloburl    null
try
url   new url remotebloburl
catch  malformedurlexception e
throw jmsexceptionsupport create e
return url
public void seturl url url
this url   url
remotebloburl   url    null ? url toexternalform     null
public blobuploader getblobuploader
return blobuploader
public void setblobuploader blobuploader blobuploader
this blobuploader   blobuploader
public void onsend   throws jmsexception
super onsend
// lets ensure we upload the blob first out of band before we send the
// message
if  blobuploader    null
try
url value   blobuploader upload this
seturl value
catch  ioexception e
throw jmsexceptionsupport create e