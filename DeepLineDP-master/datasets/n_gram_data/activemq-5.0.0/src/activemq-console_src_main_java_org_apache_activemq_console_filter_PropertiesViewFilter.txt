/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console filter
import java util arraylist
import java util collection
import java util hashmap
import java util iterator
import java util list
import java util map
import java util set
public class propertiesviewfilter implements queryfilter
protected queryfilter next
protected set viewfilter
/**
* creates a filter that will select the properties of a map object to view
*
* @param next - the next query filter that will return a collection of maps
*/
public propertiesviewfilter queryfilter next
this null  next
/**
* creates a filter that will select the properties of a map object to view
*
* @param viewfilter - the properties to view
* @param next - the next query filter that will return a collection of maps
*/
public propertiesviewfilter set viewfilter  queryfilter next
this next   next
this viewfilter   viewfilter
/**
* filter the properties to view of the query result
*
* @param query - the query string
* @return list of objects that has been view filtered
*/
public list<map<object  object>> query string query  throws exception
return filterviewcollection next query query   viewfilter
/**
* filter the properties to view of the query result
*
* @param queries - the query map
* @return list of objects that has been view filtered
* @throws exception
*/
public list<map<object  object>> query list queries  throws exception
return filterviewcollection next query queries   viewfilter
/**
* filter the view of each element in the collection
*
* @param result - the lists to filter the view from
* @param viewfilter - the views to select
* @return list of objects whose view has been filtered
*/
protected list<map<object  object>> filterviewcollection collection<map<object  object>> result  set viewfilter
// use a list to allow duplicate entries
list<map<object  object>> newcollection   new arraylist<map<object  object>>
for  iterator<map<object  object>> i   result iterator    i hasnext
newcollection add filterview i next
return newcollection
/**
* select only the attributes to view from the map data
*
* @param data - data to filter the view from
* @return - data with the view filtered
*/
protected map<object  object> filterview map<object  object> data
// if no view specified, display all attributes
if  viewfilter    null    viewfilter isempty
return data
map<object  object> newdata
try
// lets try to use the same class as the original
newdata   data getclass   newinstance
catch  exception e
// lets use a default hashmap
newdata   new hashmap<object  object>
// filter the keys to view
for  iterator i   viewfilter iterator    i hasnext
object key   i next
object val   data get key
if  val    null
newdata put key  val
return newdata