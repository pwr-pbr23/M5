/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq kaha impl data
import java io file
import java io filenamefilter
import java io ioexception
import java util arraylist
import java util hashmap
import java util iterator
import java util list
import java util map
import java util concurrent atomic atomiclong
import org apache activemq kaha marshaller
import org apache activemq kaha storelocation
import org apache activemq kaha impl datamanager
import org apache activemq kaha impl index redostoreindexitem
import org apache activemq util ioexceptionsupport
import org apache commons logging log
import org apache commons logging logfactory
/**
* manages datafiles
*
* @version $revision: 1.1.1.1 $
*/
public final class datamanagerimpl implements datamanager
public static final int item_head_size   5     type   length
public static final byte data_item_type   1
public static final byte redo_item_type   2
public static final long max_file_length   1024   1024   32
private static final log log   logfactory getlog datamanagerimpl class
private static final string name_prefix
private final file directory
private final string name
private syncdatafilereader reader
private syncdatafilewriter writer
private datafile currentwritefile
private long maxfilelength   max_file_length
private map<integer  datafile> filemap   new hashmap<integer  datafile>
private marshaller redomarshaller   redostoreindexitem marshaller
private string datafileprefix
private final atomiclong storesize
public datamanagerimpl file dir  final string name atomiclong storesize
this directory   dir
this name   name
this storesize storesize
datafileprefix   name_prefix   name
// build up list of current datafiles
file files   dir listfiles new filenamefilter
public boolean accept file dir  string n
return dir equals directory     n startswith datafileprefix
if  files    null
for  int i   0  i < files length  i
file file   files
string n   file getname
string numstr   n substring datafileprefix length    n length
int num   integer parseint numstr
datafile datafile   new datafile file  num
storesize addandget datafile getlength
filemap put datafile getnumber    datafile
if  currentwritefile    null    currentwritefile getnumber   intvalue   < num
currentwritefile   datafile
private datafile createandadddatafile int num
string filename   datafileprefix   num
file file   new file directory  filename
datafile result   new datafile file  num
filemap put result getnumber    result
return result
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#getname()
*/
public string getname
return name
synchronized datafile findspacefordata dataitem item  throws ioexception
if  currentwritefile    null      currentwritefile getlength     item getsize    > maxfilelength
int nextnum   currentwritefile    null ? currentwritefile getnumber   intvalue     1   1
if  currentwritefile    null    currentwritefile isunused
removedatafile currentwritefile
currentwritefile   createandadddatafile nextnum
item setoffset currentwritefile getlength
item setfile currentwritefile getnumber   intvalue
int len   item getsize     item_head_size
currentwritefile incrementlength len
storesize addandget len
return currentwritefile
datafile getdatafile storelocation item  throws ioexception
integer key   integer valueof item getfile
datafile datafile   filemap get key
if  datafile    null
log error     key       filemap
throw new ioexception     name_prefix   name       item getfile
return datafile
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#readitem(org.apache.activemq.kaha.marshaller,
*      org.apache.activemq.kaha.storelocation)
*/
public synchronized object readitem marshaller marshaller  storelocation item  throws ioexception
return getreader   readitem marshaller  item
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#storedataitem(org.apache.activemq.kaha.marshaller,
*      java.lang.object)
*/
public synchronized storelocation storedataitem marshaller marshaller  object payload  throws ioexception
return getwriter   storeitem marshaller  payload  data_item_type
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#storeredoitem(java.lang.object)
*/
public synchronized storelocation storeredoitem object payload  throws ioexception
return getwriter   storeitem redomarshaller  payload  redo_item_type
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#updateitem(org.apache.activemq.kaha.storelocation,
*      org.apache.activemq.kaha.marshaller, java.lang.object)
*/
public synchronized void updateitem storelocation location  marshaller marshaller  object payload
throws ioexception
getwriter   updateitem  dataitem location  marshaller  payload  data_item_type
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#recoverredoitems(org.apache.activemq.kaha.impl.data.redolistener)
*/
public synchronized void recoverredoitems redolistener listener  throws ioexception
// nothing to recover if there is no current file.
if  currentwritefile    null
return
dataitem item   new dataitem
item setfile currentwritefile getnumber   intvalue
item setoffset 0
while  true
byte type
try
type   getreader   readdataitemsize item
catch  ioexception ignore
log trace     item
return
if  type    redo_item_type
// un-marshal the redo item
object object
try
object   readitem redomarshaller  item
catch  ioexception e1
log trace     item
return
try
listener onredoitem item  object
// in case the listener is holding on to item references,
// copy it
// so we don't change it behind the listener's back.
item   item copy
catch  exception e
throw ioexceptionsupport create     e  e
// move to the next item.
item setoffset item getoffset     item_head_size   item getsize
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#close()
*/
public synchronized void close   throws ioexception
getwriter   close
for  iterator<datafile> i   filemap values   iterator    i hasnext
datafile datafile   i next
getwriter   force datafile
datafile close
filemap clear
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#force()
*/
public synchronized void force   throws ioexception
for  iterator<datafile> i   filemap values   iterator    i hasnext
datafile datafile   i next
getwriter   force datafile
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#delete()
*/
public synchronized boolean delete   throws ioexception
boolean result   true
for  iterator<datafile> i   filemap values   iterator    i hasnext
datafile datafile   i next
storesize addandget  datafile getlength
result    datafile delete
filemap clear
return result
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#addinterestinfile(int)
*/
public synchronized void addinterestinfile int file  throws ioexception
if  file >  0
integer key   integer valueof file
datafile datafile   filemap get key
if  datafile    null
datafile   createandadddatafile file
addinterestinfile datafile
synchronized void addinterestinfile datafile datafile
if  datafile    null
datafile increment
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#removeinterestinfile(int)
*/
public synchronized void removeinterestinfile int file  throws ioexception
if  file >  0
integer key   integer valueof file
datafile datafile   filemap get key
removeinterestinfile datafile
synchronized void removeinterestinfile datafile datafile  throws ioexception
if  datafile    null
if  datafile decrement   <  0
if  datafile    currentwritefile
removedatafile datafile
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#consolidatedatafiles()
*/
public synchronized void consolidatedatafiles   throws ioexception
list<datafile> purgelist   new arraylist<datafile>
for  iterator<datafile> i   filemap values   iterator    i hasnext
datafile datafile   i next
if  datafile isunused      datafile    currentwritefile
purgelist add datafile
for  int i   0  i < purgelist size    i
datafile datafile   purgelist get i
removedatafile datafile
private void removedatafile datafile datafile  throws ioexception
filemap remove datafile getnumber
if  writer    null
writer force datafile
storesize addandget  datafile getlength
boolean result   datafile delete
log debug     datafile    result ?
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#getredomarshaller()
*/
public marshaller getredomarshaller
return redomarshaller
/*
* (non-javadoc)
*
* @see org.apache.activemq.kaha.impl.data.idatamanager#setredomarshaller(org.apache.activemq.kaha.marshaller)
*/
public void setredomarshaller marshaller redomarshaller
this redomarshaller   redomarshaller
/**
* @return the maxfilelength
*/
public long getmaxfilelength
return maxfilelength
/**
* @param maxfilelength the maxfilelength to set
*/
public void setmaxfilelength long maxfilelength
this maxfilelength   maxfilelength
public string tostring
return     name_prefix   name
public synchronized syncdatafilereader getreader
if  reader    null
reader   createreader
return reader
protected synchronized syncdatafilereader createreader
return new syncdatafilereader this
public synchronized void setreader syncdatafilereader reader
this reader   reader
public synchronized syncdatafilewriter getwriter
if  writer    null
writer   createwriter
return writer
private syncdatafilewriter createwriter
return new syncdatafilewriter this
public synchronized void setwriter syncdatafilewriter writer
this writer   writer