/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq ra
/**
* thrown to indicate that a messageendpoint is no longer valid
* and should be discarded.
*
* @author <a href="mailto:michael.gaffney@panacya.com">michael gaffney </a>
*/
public class invalidmessageendpointexception extends runtimeexception
private static final long serialversionuid    9007051892399939057l
/**
* constructs a new exception with <code>null</code> as its detail message.
* the cause is not initialized, and may subsequently be initialized by a
* call to {@link #initcause}.
*/
public invalidmessageendpointexception
super
/**
* constructs a new exception with the specified detail message.  the
* cause is not initialized, and may subsequently be initialized by
* a call to {@link #initcause}.
*
* @param message the detail message. the detail message is saved for
*                later retrieval by the {@link #getmessage()} method.
*/
public invalidmessageendpointexception final string message
super message
/**
* constructs a new exception with the specified detail message and
* cause.  <p>note that the detail message associated with
* <code>cause</code> is <i>not</i> automatically incorporated in
* this exception's detail message.
*
* @param message the detail message (which is saved for later retrieval
*                by the {@link #getmessage()} method).
* @param cause   the cause (which is saved for later retrieval by the
*                {@link #getcause()} method).  (a <tt>null</tt> value is
*                permitted, and indicates that the cause is nonexistent or
*                unknown.)
*/
public invalidmessageendpointexception final string message  final throwable cause
super message  cause
/**
* constructs a new exception with the specified cause and a detail
* message of <tt>(cause==null ? null : cause.tostring())</tt> (which
* typically contains the class and detail message of <tt>cause</tt>).
* this constructor is useful for exceptions that are little more than
* wrappers for other throwables (for example, {@link
* java.security.privilegedactionexception}).
*
* @param cause the cause (which is saved for later retrieval by the
*              {@link #getcause()} method).  (a <tt>null</tt> value is
*              permitted, and indicates that the cause is nonexistent or
*              unknown.)
*/
public invalidmessageendpointexception final throwable cause
super cause