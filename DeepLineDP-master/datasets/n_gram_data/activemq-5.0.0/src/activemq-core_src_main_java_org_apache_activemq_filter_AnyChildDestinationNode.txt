/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq filter
import java util arraylist
import java util collection
import java util iterator
import java util set
/**
* an implementation of {@link destinationnode} which navigates all the children of the given node
* ignoring the name of the current path (so for navigating using * in a wildcard).
*
* @version $revision$
*/
public class anychilddestinationnode implements destinationnode
private destinationnode node
public anychilddestinationnode destinationnode node
this node   node
public void appendmatchingvalues set answer  string paths  int startindex
iterator iter   getchildnodes   iterator
while  iter hasnext
destinationnode child    destinationnode  iter next
child appendmatchingvalues answer  paths  startindex
public void appendmatchingwildcards set answer  string paths  int startindex
iterator iter   getchildnodes   iterator
while  iter hasnext
destinationnode child    destinationnode  iter next
child appendmatchingwildcards answer  paths  startindex
public void appenddescendantvalues set answer
iterator iter   getchildnodes   iterator
while  iter hasnext
destinationnode child    destinationnode  iter next
child appenddescendantvalues answer
public destinationnode getchild string path
final collection list   new arraylist
iterator iter   getchildnodes   iterator
while  iter hasnext
destinationnode child    destinationnode  iter next
destinationnode answer   child getchild path
if  answer    null
list add answer
if   list isempty
return new anychilddestinationnode this
protected collection getchildnodes
return list
return null
public collection getdesendentvalues
collection answer   new arraylist
iterator iter   getchildnodes   iterator
while  iter hasnext
destinationnode child    destinationnode  iter next
answer addall child getdesendentvalues
return answer
public collection getvalues
collection answer   new arraylist
iterator iter   getchildnodes   iterator
while  iter hasnext
destinationnode child    destinationnode  iter next
answer addall child getvalues
return answer
public collection getchildren
collection answer   new arraylist
iterator iter   getchildnodes   iterator
while  iter hasnext
destinationnode child    destinationnode  iter next
answer addall child getchildren
return answer
public collection removedesendentvalues
collection answer   new arraylist
iterator iter   getchildnodes   iterator
while  iter hasnext
destinationnode child    destinationnode  iter next
answer addall child removedesendentvalues
return answer
public collection removevalues
collection answer   new arraylist
iterator iter   getchildnodes   iterator
while  iter hasnext
destinationnode child    destinationnode  iter next
answer addall child removevalues
return answer
protected collection getchildnodes
return node getchildren