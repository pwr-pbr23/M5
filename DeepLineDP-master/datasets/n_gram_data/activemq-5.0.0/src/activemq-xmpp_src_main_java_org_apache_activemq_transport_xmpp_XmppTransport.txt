/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport xmpp
import java io ioexception
import java io inputstream
import java io outputstream
import java net socket
import java net uri
import javax net socketfactory
import javax xml bind jaxbcontext
import javax xml bind jaxbexception
import javax xml bind marshaller
import javax xml bind unmarshaller
import javax xml namespace qname
import javax xml stream location
import javax xml stream xmleventreader
import javax xml stream xmlinputfactory
import javax xml stream xmloutputfactory
import javax xml stream xmlreporter
import javax xml stream xmlstreamexception
import javax xml stream xmlstreamwriter
import javax xml stream events attribute
import javax xml stream events startelement
import javax xml stream events xmlevent
import ietf params xml ns xmpp_sasl mechanisms
import org apache activemq command brokerinfo
import org apache activemq command command
import org apache activemq transport tcp tcpbufferedinputstream
import org apache activemq transport tcp tcpbufferedoutputstream
import org apache activemq transport tcp tcptransport
import org apache activemq util ioexceptionsupport
import org apache activemq util servicestopper
import org apache activemq wireformat wireformat
import org apache commons logging log
import org apache commons logging logfactory
import org jabber etherx streams features
/**
* @version $revision$
*/
public class xmpptransport extends tcptransport
protected static final qname attribute_to   new qname
private static final transient log log   logfactory getlog xmpptransport class
protected outputstream outputstream
protected inputstream inputstream
private jaxbcontext context
private xmleventreader xmlreader
private unmarshaller unmarshaller
private marshaller marshaller
private xmlstreamwriter xmlwriter
private string to
private protocolconverter converter
private string from
private string brokerid
public xmpptransport wireformat wireformat  socket socket  throws ioexception
super wireformat  socket
init
public xmpptransport wireformat wireformat  socketfactory socketfactory  uri uri  uri uri1  throws ioexception
super wireformat  socketfactory  uri  uri1
init
private void init
converter   new protocolconverter this
@override
public void oneway object object  throws ioexception
if  object instanceof command
command command    command object
if  command instanceof brokerinfo
brokerinfo brokerinfo    brokerinfo command
brokerid   brokerinfo getbrokerid   tostring
from   brokerinfo getbrokername
try
writeopenstream brokerid  from
catch  xmlstreamexception e
throw ioexceptionsupport create e
else
try
converter onactivemqcommad command
catch  ioexception e
throw e
catch  exception e
throw ioexceptionsupport create e
else
log warn     object
/**
* marshalls the given pojo to the client
*/
public void marshall object command  throws ioexception
if  isstopped      isstopping
log warn     command
return
try
marshaller marshal command  xmlwriter
xmlwriter flush
outputstream flush
catch  jaxbexception e
throw ioexceptionsupport create e
catch  xmlstreamexception e
throw ioexceptionsupport create e
@override
public void dorun   throws ioexception
log debug
try
xmlinputfactory xif   xmlinputfactory newinstance
xif setxmlreporter new xmlreporter
public void report string message  string errortype  object relatedinformation  location location  throws xmlstreamexception
log warn message       errortype       relatedinformation
xmlreader   xif createxmleventreader inputstream
xmlevent docstart   xmlreader nextevent
xmlevent rootelement   xmlreader nexttag
if  rootelement instanceof startelement
startelement startelement    startelement rootelement
attribute toattribute   startelement getattributebyname attribute_to
if  toattribute    null
to   toattribute getvalue
while  true
if  isstopped
break
xmlevent event   xmlreader peek
if  event isstartelement
// unmarshal a new object
object object   unmarshaller unmarshal xmlreader
if  object    null
converter onxmppcommand object
else
if  event geteventtype      xmlevent end_element
break
else if  event geteventtype      xmlevent end_element    event geteventtype      xmlevent end_document
break
else
xmlreader nextevent
catch  exception e
throw ioexceptionsupport create e
public string getfrom
return from
@override
protected void dostop servicestopper stopper  throws exception
if  xmlwriter    null
try
xmlwriter writeendelement
xmlwriter writeenddocument
xmlwriter close
catch  xmlstreamexception e
// the client may have closed first so ignore this
log info     e  e
if  xmlreader    null
try
xmlreader close
catch  xmlstreamexception e
// the client may have closed first so ignore this
log info     e  e
super dostop stopper
@override
protected void initializestreams   throws exception
// todo it would be preferable to use class discovery here!
context   jaxbcontext newinstance
/*
* + ":jabber.server" + ":jabber.iq.gateway" + ":jabber.iq.last" +
* ":jabber.iq.oob" + ":jabber.iq.pass" + ":jabber.iq.time" +
* ":jabber.iq.version" + ":org.jabber.protocol.activity" +
* ":org.jabber.protocol.address" + ":org.jabber.protocol.amp" +
* ":org.jabber.protocol.amp_errors" + ":org.jabber.protocol.muc_admin" +
* ":org.jabber.protocol.muc_unique"
*/
inputstream   new tcpbufferedinputstream socket getinputstream    8   1024
outputstream   new tcpbufferedoutputstream socket getoutputstream    16   1024
unmarshaller   context createunmarshaller
marshaller   context createmarshaller
marshaller setproperty marshaller jaxb_fragment  true
protected void writeopenstream string id  string from  throws ioexception  xmlstreamexception
log debug
xmloutputfactory factory   xmloutputfactory newinstance
// factory.setproperty(xmloutputfactory.is_repairing_namespaces, true);
xmlwriter   factory createxmlstreamwriter outputstream
// write the dummy start tag
xmlwriter writestartdocument
xmlwriter writestartelement
xmlwriter writedefaultnamespace
xmlwriter writenamespace
xmlwriter writeattribute
xmlwriter writeattribute    id
if  to    null
to
xmlwriter writeattribute    to
xmlwriter writeattribute    from
// now lets write the features
features features   new features
// todo support tls
// features.getany().add(new starttls());
mechanisms mechanisms   new mechanisms
// todo support sasl
// mechanisms.getmechanism().add("digest-md5");
// mechanisms.getmechanism().add("plain");
features getany   add mechanisms
marshall features
log debug