/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq
import java io serializable
import org apache commons logging log
import org apache commons logging logfactory
/**
* defines the prefetch message policies for different types of consumers
*
* @org.apache.xbean.xbean element="prefetchpolicy"
* @version $revision: 1.3 $
*/
public class activemqprefetchpolicy implements serializable
private static final log log   logfactory getlog activemqprefetchpolicy class
private static final int max_prefetch_size   short max_value   1
private int queueprefetch
private int queuebrowserprefetch
private int topicprefetch
private int durabletopicprefetch
private int optimizedurabletopicprefetch
private int inputstreamprefetch
private int maximumpendingmessagelimit
/**
* initialize default prefetch policies
*/
public activemqprefetchpolicy
this queueprefetch   1000
this queuebrowserprefetch   500
this topicprefetch   max_prefetch_size
this durabletopicprefetch   100
this optimizedurabletopicprefetch   1000
this inputstreamprefetch   100
/**
* @return returns the durabletopicprefetch.
*/
public int getdurabletopicprefetch
return durabletopicprefetch
/**
* @param durabletopicprefetch the durabletopicprefetch to set.
*/
public void setdurabletopicprefetch int durabletopicprefetch
this durabletopicprefetch   getmaxprefetchlimit durabletopicprefetch
/**
* @return returns the queueprefetch.
*/
public int getqueueprefetch
return queueprefetch
/**
* @param queueprefetch the queueprefetch to set.
*/
public void setqueueprefetch int queueprefetch
this queueprefetch   getmaxprefetchlimit queueprefetch
/**
* @return returns the queuebrowserprefetch.
*/
public int getqueuebrowserprefetch
return queuebrowserprefetch
/**
* @param queuebrowserprefetch the queuebrowserprefetch to set.
*/
public void setqueuebrowserprefetch int queuebrowserprefetch
this queuebrowserprefetch   getmaxprefetchlimit queuebrowserprefetch
/**
* @return returns the topicprefetch.
*/
public int gettopicprefetch
return topicprefetch
/**
* @param topicprefetch the topicprefetch to set.
*/
public void settopicprefetch int topicprefetch
this topicprefetch   getmaxprefetchlimit topicprefetch
/**
* @return returns the optimizedurabletopicprefetch.
*/
public int getoptimizedurabletopicprefetch
return optimizedurabletopicprefetch
/**
* @param optimizeacknowledgeprefetch the optimizedurabletopicprefetch to
*                set.
*/
public void setoptimizedurabletopicprefetch int optimizeacknowledgeprefetch
this optimizedurabletopicprefetch   optimizeacknowledgeprefetch
public int getmaximumpendingmessagelimit
return maximumpendingmessagelimit
/**
* sets how many messages a broker will keep around, above the prefetch
* limit, for non-durable topics before starting to discard older messages.
*/
public void setmaximumpendingmessagelimit int maximumpendingmessagelimit
this maximumpendingmessagelimit   maximumpendingmessagelimit
private int getmaxprefetchlimit int value
int result   math min value  max_prefetch_size
if  result < value
log warn     value       max_prefetch_size
return result
public void setall int i
this durabletopicprefetch   i
this queuebrowserprefetch   i
this queueprefetch   i
this topicprefetch   i
this inputstreamprefetch   1
this optimizedurabletopicprefetch   i
public int getinputstreamprefetch
return inputstreamprefetch
public void setinputstreamprefetch int inputstreamprefetch
this inputstreamprefetch   getmaxprefetchlimit inputstreamprefetch