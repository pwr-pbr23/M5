/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker view
import java io printwriter
import java util collection
import java util iterator
import org apache activemq broker broker
import org apache activemq broker connectioncontext
import org apache activemq broker region destination
import org apache activemq command activemqdestination
import org apache activemq filter destinationmap
import org apache activemq filter destinationmapnode
/**
* @version $revision: $
*/
public class destinationdotfileinterceptor extends dotfileinterceptorsupport
protected static final string id_separator
public destinationdotfileinterceptor broker next  string file
super next  file
public destination adddestination connectioncontext context  activemqdestination destination  throws exception
destination answer   super adddestination context  destination
generatefile
return answer
public void removedestination connectioncontext context  activemqdestination destination  long timeout  throws exception
super removedestination context  destination  timeout
generatefile
protected void generatefile printwriter writer  throws exception
activemqdestination destinations   getdestinations
// lets split into a tree
destinationmap map   new destinationmap
for  int i   0  i < destinations length  i
activemqdestination destination   destinations
map put destination  destination
// now lets navigate the tree
writer println  activemq destinations
writer println
writer println  rounded filled  helvetica oblique
writer println
writer println  topics
writer println  queues
writer println
writer println
writer println
writer println  queues
writer println
printnodelinks writer  map getqueuerootnode
writer println
writer println
writer println
writer println
writer println  topics
writer println
printnodelinks writer  map gettopicrootnode
writer println
writer println
printnodes writer  map getqueuerootnode
writer println
printnodes writer  map gettopicrootnode
writer println
writer println
protected void printnodes printwriter writer  destinationmapnode node  string prefix
string path   getpath node
writer print
writer print prefix
writer print id_separator
writer print path
string label   path
if  prefix equals
label
else if  prefix equals
label
writer print  "
writer print label
writer println   ] "
collection children   node getchildren
for  iterator iter   children iterator    iter hasnext
destinationmapnode child    destinationmapnode iter next
printnodes writer  child  prefix   id_separator   path
protected void printnodelinks printwriter writer  destinationmapnode node  string prefix
string path   getpath node
collection children   node getchildren
for  iterator iter   children iterator    iter hasnext
destinationmapnode child    destinationmapnode iter next
writer print
writer print prefix
writer print id_separator
writer print path
writer print
writer print prefix
writer print id_separator
writer print path
writer print id_separator
writer print getpath child
writer println
printnodelinks writer  child  prefix   id_separator   path
protected string getpath destinationmapnode node
string path   node getpath
if  path equals
return
return path