/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq command
import org apache activemq state commandvisitor
/**
* represents a partial command; a large command that has been split up into
* pieces.
*
* @openwire:marshaller code="60"
* @version $revision$
*/
public class partialcommand implements command
public static final byte data_structure_type   commandtypes partial_command
private int commandid
private byte data
private transient endpoint from
private transient endpoint to
public partialcommand
public byte getdatastructuretype
return data_structure_type
/**
* @openwire:property version=1
*/
public int getcommandid
return commandid
public void setcommandid int commandid
this commandid   commandid
/**
* the data for this part of the command
*
* @openwire:property version=1 mandatory=true
*/
public byte getdata
return data
public void setdata byte data
this data   data
public endpoint getfrom
return from
public void setfrom endpoint from
this from   from
public endpoint getto
return to
public void setto endpoint to
this to   to
public response visit commandvisitor visitor  throws exception
throw new illegalstateexception     this
public boolean isresponserequired
return false
public boolean isresponse
return false
public boolean isbrokerinfo
return false
public boolean ismessagedispatch
return false
public boolean ismessage
return false
public boolean ismessageack
return false
public boolean ismessagedispatchnotification
return false
public boolean isshutdowninfo
return false
public void setresponserequired boolean responserequired
public boolean iswireformatinfo
return false
public boolean ismarshallaware
return false
public string tostring
int size   0
if  data    null
size   data length
return     commandid       size