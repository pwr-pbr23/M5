/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport tcp
import java io ioexception
import java net inetaddress
import java net inetsocketaddress
import java net serversocket
import java net socket
import java net sockettimeoutexception
import java net uri
import java net urisyntaxexception
import java net unknownhostexception
import java util hashmap
import java util map
import javax net serversocketfactory
import org apache activemq command brokerinfo
import org apache activemq openwire openwireformatfactory
import org apache activemq transport transport
import org apache activemq transport transportserver
import org apache activemq transport transportserverthreadsupport
import org apache activemq util ioexceptionsupport
import org apache activemq util servicestopper
import org apache activemq wireformat wireformat
import org apache activemq wireformat wireformatfactory
import org apache commons logging log
import org apache commons logging logfactory
/**
* a tcp based implementation of {@link transportserver}
*
* @version $revision: 1.1 $
*/
public class tcptransportserver extends transportserverthreadsupport
private static final log log   logfactory getlog tcptransportserver class
protected serversocket serversocket
protected int backlog   5000
protected wireformatfactory wireformatfactory   new openwireformatfactory
protected final tcptransportfactory transportfactory
protected long maxinactivityduration   30000
protected int minmumwireformatversion
/**
* trace=true -> the transport stack where this tcptransport
* object will be, will have a transportlogger layer
* trace=false -> the transport stack where this tcptransport
* object will be, will not have a transportlogger layer, and therefore
* will never be able to print logging messages.
* this parameter is most probably set in connection or transportconnector uris.
*/
protected boolean trace   false
/**
* specifies if the transportlogger will be manageable by jmx or not.
* also, as long as there is at least 1 transportlogger which is manageable,
* a transportloggercontrol mbean will me created.
*/
protected boolean dynamicmanagement   false
/**
* startlogging=true -> the transportlogger object of the transport stack
* will initially write messages to the log.
* startlogging=false -> the transportlogger object of the transport stack
* will initially not write messages to the log.
* this parameter only has an effect if trace == true.
* this parameter is most probably set in connection or transportconnector uris.
*/
protected boolean startlogging   true
protected map<string  object> transportoptions
protected final serversocketfactory serversocketfactory
public tcptransportserver tcptransportfactory transportfactory  uri location  serversocketfactory serversocketfactory  throws ioexception  urisyntaxexception
super location
this transportfactory   transportfactory
this serversocketfactory   serversocketfactory
public void bind   throws ioexception
uri bind   getbindlocation
string host   bind gethost
host    host    null    host length      0  ?     host
inetaddress addr   inetaddress getbyname host
try
if  host trim   equals       addr equals inetaddress getlocalhost
this serversocket   serversocketfactory createserversocket bind getport    backlog
else
this serversocket   serversocketfactory createserversocket bind getport    backlog  addr
this serversocket setsotimeout 2000
catch  ioexception e
throw ioexceptionsupport create     bind       e  e
try
setconnecturi new uri bind getscheme    bind getuserinfo    resolvehostname bind gethost     serversocket getlocalport    bind getpath    bind getquery    bind
getfragment
catch  urisyntaxexception e
// it could be that the host name contains invalid characters such
// as _ on unix platforms
// so lets try use the ip address instead
try
setconnecturi new uri bind getscheme    bind getuserinfo    addr gethostaddress    serversocket getlocalport    bind getpath    bind getquery    bind getfragment
catch  urisyntaxexception e2
throw ioexceptionsupport create e2
/**
* @return returns the wireformatfactory.
*/
public wireformatfactory getwireformatfactory
return wireformatfactory
/**
* @param wireformatfactory the wireformatfactory to set.
*/
public void setwireformatfactory wireformatfactory wireformatfactory
this wireformatfactory   wireformatfactory
/**
* associates a broker info with the transport server so that the transport
* can do discovery advertisements of the broker.
*
* @param brokerinfo
*/
public void setbrokerinfo brokerinfo brokerinfo
public long getmaxinactivityduration
return maxinactivityduration
public void setmaxinactivityduration long maxinactivityduration
this maxinactivityduration   maxinactivityduration
public int getminmumwireformatversion
return minmumwireformatversion
public void setminmumwireformatversion int minmumwireformatversion
this minmumwireformatversion   minmumwireformatversion
public boolean istrace
return trace
public void settrace boolean trace
this trace   trace
public boolean isdynamicmanagement
return dynamicmanagement
public void setdynamicmanagement boolean usejmx
this dynamicmanagement   usejmx
public boolean isstartlogging
return startlogging
public void setstartlogging boolean startlogging
this startlogging   startlogging
/**
* pull sockets from the serversocket
*/
public void run
while   isstopped
socket socket   null
try
socket   serversocket accept
if  socket    null
if  isstopped      getacceptlistener      null
socket close
else
hashmap<string  object> options   new hashmap<string  object>
options put    long valueof maxinactivityduration
options put    integer valueof minmumwireformatversion
options put    boolean valueof trace
options put    boolean valueof dynamicmanagement
options put    boolean valueof startlogging
options putall transportoptions
wireformat format   wireformatfactory createwireformat
transport transport   createtransport socket  format
transport configuredtransport   transportfactory serverconfigure transport  format  options
getacceptlistener   onaccept configuredtransport
catch  sockettimeoutexception ste
// expect this to happen
catch  exception e
if   isstopping
onaccepterror e
else if   isstopped
log warn    e
onaccepterror e
/**
* allow derived classes to override the transport implementation that this
* transport server creates.
*
* @param socket
* @param format
* @return
* @throws ioexception
*/
protected transport createtransport socket socket  wireformat format  throws ioexception
return new tcptransport format  socket
/**
* @return pretty print of this
*/
public string tostring
return     getbindlocation
/**
* @param hostname
* @return real hostname
* @throws unknownhostexception
*/
protected string resolvehostname string hostname  throws unknownhostexception
string result   hostname
// hostname can be null for vm:// protocol ...
if  hostname    null     hostname equalsignorecase       hostname equals
result   inetaddress getlocalhost   gethostname
return result
protected void dostop servicestopper stopper  throws exception
super dostop stopper
if  serversocket    null
serversocket close
public inetsocketaddress getsocketaddress
return  inetsocketaddress serversocket getlocalsocketaddress
public void settransportoption map<string  object> transportoptions
this transportoptions   transportoptions