/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console filter
import java net uri
import java util collections
import java util iterator
import java util list
import javax jms connection
import javax jms destination
import javax jms jmsexception
import javax jms queuebrowser
import javax jms session
import org apache activemq activemqconnectionfactory
import org apache activemq command activemqqueue
import org apache activemq command activemqtopic
public class amqmessagesqueryfilter extends abstractqueryfilter
private uri brokerurl
private destination destination
/**
* create a jms message query filter
*
* @param brokerurl - broker url to connect to
* @param destination - jms destination to query
*/
public amqmessagesqueryfilter uri brokerurl  destination destination
super null
this brokerurl   brokerurl
this destination   destination
/**
* queries the specified destination using the message selector format query
*
* @param queries - message selector queries
* @return list messages that matches the selector
* @throws exception
*/
public list query list queries  throws exception
string selector
// convert to message selector
for  iterator i   queries iterator    i hasnext
selector   selector       i next   tostring
// remove last and
if   selector equals
selector   selector substring 0  selector length     5
if  destination instanceof activemqqueue
return querymessages  activemqqueue destination  selector
else
return querymessages  activemqtopic destination  selector
/**
* query the messages of a queue destination using a queue browser
*
* @param queue - queue destination
* @param selector - message selector
* @return list of messages that matches the selector
* @throws exception
*/
protected list querymessages activemqqueue queue  string selector  throws exception
connection conn   createconnection getbrokerurl
session sess   conn createsession false  session auto_acknowledge
queuebrowser browser   sess createbrowser queue  selector
list messages   collections list browser getenumeration
conn close
return messages
/**
* query the messages of a topic destination using a message consumer
*
* @param topic - topic destination
* @param selector - message selector
* @return list of messages that matches the selector
* @throws exception
*/
protected list querymessages activemqtopic topic  string selector  throws exception
// todo: should we use a durable subscriber or a retroactive non-durable
// subscriber?
// todo: if a durable subscriber is used, how do we manage it?
// subscribe/unsubscribe tasks?
return null
/**
* create and start a jms connection
*
* @param brokerurl - broker url to connect to.
* @return jms connection
* @throws jmsexception
*/
protected connection createconnection uri brokerurl  throws jmsexception
connection conn    new activemqconnectionfactory brokerurl   createconnection
conn start
return conn
/**
* get the broker url being used.
*
* @return broker url
*/
public uri getbrokerurl
return brokerurl
/**
* set the broker url to use.
*
* @param brokerurl - broker url
*/
public void setbrokerurl uri brokerurl
this brokerurl   brokerurl
/**
* get the destination being used.
*
* @return - jms destination
*/
public destination getdestination
return destination
/**
* set the destination to use.
*
* @param destination - jms destination
*/
public void setdestination destination destination
this destination   destination