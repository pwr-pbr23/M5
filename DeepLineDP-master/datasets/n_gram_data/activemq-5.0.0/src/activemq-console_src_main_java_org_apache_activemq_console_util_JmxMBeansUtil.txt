/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console util
import java util iterator
import java util list
import java util set
import javax management objectname
import javax management remote jmxserviceurl
import org apache activemq console filter grouppropertiesviewfilter
import org apache activemq console filter mbeansattributequeryfilter
import org apache activemq console filter mbeansobjectnamequeryfilter
import org apache activemq console filter mbeansregexqueryfilter
import org apache activemq console filter maptransformfilter
import org apache activemq console filter messagesqueryfilter
import org apache activemq console filter propertiesviewfilter
import org apache activemq console filter queryfilter
import org apache activemq console filter stubqueryfilter
import org apache activemq console filter wildcardtomsgselectortransformfilter
import org apache activemq console filter wildcardtoregextransformfilter
public final class jmxmbeansutil
private jmxmbeansutil
public static list getallbrokers jmxserviceurl jmxurl  throws exception
return  new mbeansobjectnamequeryfilter jmxurl   query
public static list getbrokersbyname jmxserviceurl jmxurl  string brokername  throws exception
return  new mbeansobjectnamequeryfilter jmxurl   query     brokername
public static list getallbrokers jmxserviceurl jmxurl  set attributes  throws exception
return  new mbeansattributequeryfilter jmxurl  attributes  new mbeansobjectnamequeryfilter jmxurl    query
public static list getbrokersbyname jmxserviceurl jmxurl  string brokername  set attributes  throws exception
return  new mbeansattributequeryfilter jmxurl  attributes  new mbeansobjectnamequeryfilter jmxurl    query     brokername
public static list querymbeans jmxserviceurl jmxurl  list querylist  throws exception
// if there is no query defined get all mbeans
if  querylist    null    querylist size      0
return creatembeansobjectnamequery jmxurl  query
// parse through all the query strings
else
return creatembeansobjectnamequery jmxurl  query querylist
public static list querymbeans jmxserviceurl jmxurl  list querylist  set attributes  throws exception
// if there is no query defined get all mbeans
if  querylist    null    querylist size      0
return creatembeansattributequery jmxurl  attributes  query
// parse through all the query strings
else
return creatembeansattributequery jmxurl  attributes  query querylist
public static list querymbeans jmxserviceurl jmxurl  string querystring  throws exception
return creatembeansobjectnamequery jmxurl  query querystring
public static list querymbeans jmxserviceurl jmxurl  string querystring  set attributes  throws exception
return creatembeansattributequery jmxurl  attributes  query querystring
public static list filtermbeansview list mbeans  set viewfilter  throws exception
return new propertiesviewfilter viewfilter  new maptransformfilter new stubqueryfilter mbeans    query
public static string createquerystring string query  string param
return query replaceall    param
public static string createquerystring string query  list params
string output   query
int count   1
for  iterator i   params iterator    i hasnext
output   output replaceall     count    i next   tostring
return output
public static queryfilter creatembeansobjectnamequery jmxserviceurl jmxurl
// let us be able to accept wildcard queries
// use regular expressions to filter the query results
// let us retrieve the mbeans object name specified by the query
return new wildcardtoregextransformfilter new mbeansregexqueryfilter new mbeansobjectnamequeryfilter jmxurl
public static queryfilter creatembeansattributequery jmxserviceurl jmxurl  set attributes
// let use be able to accept wildcard queries
// use regular expressions to filter the query result
// retrieve the attributes needed
// retrieve the mbeans object name specified by the query
return new wildcardtoregextransformfilter new mbeansregexqueryfilter new mbeansattributequeryfilter jmxurl  attributes  new mbeansobjectnamequeryfilter jmxurl
public static queryfilter createmessagequeryfilter jmxserviceurl jmxurl  objectname destname
return new wildcardtomsgselectortransformfilter new messagesqueryfilter jmxurl  destname
public static list filtermessagesview list messages  set groupviews  set attributeviews  throws exception
return  new propertiesviewfilter attributeviews  new grouppropertiesviewfilter groupviews  new maptransformfilter new stubqueryfilter messages      query