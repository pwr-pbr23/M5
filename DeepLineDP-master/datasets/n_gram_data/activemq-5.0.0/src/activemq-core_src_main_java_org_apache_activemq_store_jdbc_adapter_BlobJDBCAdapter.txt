/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq store jdbc adapter
import java io ioexception
import java io inputstream
import java io outputstream
import java sql blob
import java sql connection
import java sql preparedstatement
import java sql resultset
import java sql sqlexception
import javax jms jmsexception
import org apache activemq store jdbc transactioncontext
import org apache activemq util bytearrayoutputstream
/**
* this jdbcadapter inserts and extracts blob data using the getblob()/setblob()
* operations. this is a little more involved since to insert a blob you have
* to:
*
* 1: insert empty blob. 2: select the blob 3: finally update the blob with data
* value.
*
* the databases/jdbc drivers that use this adapter are:
* <ul>
* <li></li>
* </ul>
*
* @org.apache.xbean.xbean element="blobjdbcadapter"
*
* @version $revision: 1.2 $
*/
public class blobjdbcadapter extends defaultjdbcadapter
public void doaddmessage connection c  long seq  string messageid  string destinationname  byte data
throws sqlexception  jmsexception
preparedstatement s   null
resultset rs   null
try
// add the blob record.
s   c preparestatement statements getaddmessagestatement
s setlong 1  seq
s setstring 2  destinationname
s setstring 3  messageid
s setstring 4
if  s executeupdate      1
throw new jmsexception     messageid
s close
// select the blob record so that we can update it.
s   c preparestatement statements getfindmessagestatement
s setlong 1  seq
rs   s executequery
if   rs next
throw new jmsexception     messageid
// update the blob
blob blob   rs getblob 1
outputstream stream   blob setbinarystream data length
stream write data
stream close
s close
// update the row with the updated blob
s   c preparestatement statements getupdatemessagestatement
s setblob 1  blob
s setlong 2  seq
catch  ioexception e
throw  sqlexception new sqlexception     e  initcause e
finally
try
rs close
catch  throwable ignore
try
s close
catch  throwable ignore
public byte dogetmessage transactioncontext c  long seq  throws sqlexception
preparedstatement s   null
resultset rs   null
try
s   c getconnection   preparestatement statements getfindmessagestatement
s setlong 1  seq
rs   s executequery
if   rs next
return null
blob blob   rs getblob 1
inputstream is   blob getbinarystream
bytearrayoutputstream os   new bytearrayoutputstream  int blob length
int ch
while   ch   is read    >  0
os write ch
is close
os close
return os tobytearray
catch  ioexception e
throw  sqlexception new sqlexception     e  initcause e
finally
try
rs close
catch  throwable ignore
try
s close
catch  throwable ignore