/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq pool
import javax jms connection
import javax jms connectionconsumer
import javax jms connectionmetadata
import javax jms destination
import javax jms exceptionlistener
import javax jms jmsexception
import javax jms queue
import javax jms queueconnection
import javax jms queuesession
import javax jms serversessionpool
import javax jms session
import javax jms topic
import javax jms topicconnection
import javax jms topicsession
import org apache activemq activemqconnection
import org apache activemq activemqsession
import org apache activemq alreadyclosedexception
/**
* represents a proxy {@link connection} which is-a {@link topicconnection} and
* {@link queueconnection} which is pooled and on {@link #close()} will return
* itself to the sessionpool.
*
* <b>note</b> this implementation is only intended for use when sending
* messages. it does not deal with pooling of consumers; for that look at a
* library like <a href="http://jencks.org/">jencks</a> such as in <a
* href="http://jencks.org/message+driven+pojos">this example</a>
*
* @version $revision: 1.1.1.1 $
*/
public class pooledconnection implements topicconnection  queueconnection
private connectionpool pool
private boolean stopped
public pooledconnection connectionpool pool
this pool   pool
this pool incrementreferencecount
/**
* factory method to create a new instance.
*/
public pooledconnection newinstance
return new pooledconnection pool
public void close   throws jmsexception
if  this pool    null
this pool decrementreferencecount
this pool   null
public void start   throws jmsexception
assertnotclosed
pool start
public void stop   throws jmsexception
stopped   true
public connectionconsumer createconnectionconsumer destination destination  string selector
serversessionpool serversessionpool  int maxmessages
throws jmsexception
return getconnection
createconnectionconsumer destination  selector  serversessionpool  maxmessages
public connectionconsumer createconnectionconsumer topic topic  string s
serversessionpool serversessionpool  int maxmessages
throws jmsexception
return getconnection   createconnectionconsumer topic  s  serversessionpool  maxmessages
public connectionconsumer createdurableconnectionconsumer topic topic  string selector  string s1
serversessionpool serversessionpool  int i
throws jmsexception
return getconnection   createdurableconnectionconsumer topic  selector  s1  serversessionpool  i
public string getclientid   throws jmsexception
return getconnection   getclientid
public exceptionlistener getexceptionlistener   throws jmsexception
return getconnection   getexceptionlistener
public connectionmetadata getmetadata   throws jmsexception
return getconnection   getmetadata
public void setexceptionlistener exceptionlistener exceptionlistener  throws jmsexception
getconnection   setexceptionlistener exceptionlistener
public void setclientid string clientid  throws jmsexception
getconnection   setclientid clientid
public connectionconsumer createconnectionconsumer queue queue  string selector
serversessionpool serversessionpool  int maxmessages
throws jmsexception
return getconnection   createconnectionconsumer queue  selector  serversessionpool  maxmessages
// session factory methods
// -------------------------------------------------------------------------
public queuesession createqueuesession boolean transacted  int ackmode  throws jmsexception
return  queuesession createsession transacted  ackmode
public topicsession createtopicsession boolean transacted  int ackmode  throws jmsexception
return  topicsession createsession transacted  ackmode
public session createsession boolean transacted  int ackmode  throws jmsexception
return pool createsession transacted  ackmode
// implementation methods
// -------------------------------------------------------------------------
activemqconnection getconnection   throws jmsexception
assertnotclosed
return pool getconnection
protected void assertnotclosed   throws alreadyclosedexception
if  stopped    pool    null
throw new alreadyclosedexception
protected activemqsession createsession sessionkey key  throws jmsexception
return  activemqsession getconnection   createsession key istransacted    key getackmode
public string tostring
return     pool