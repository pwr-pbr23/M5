/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq security
import java util collections
import java util hashset
import java util set
import java util concurrent concurrenthashmap
import org apache activemq command activemqdestination
/**
* used to cache up authorizations so that subsequent requests are faster.
*
* @version $revision$
*/
public abstract class securitycontext
public static final securitycontext broker_security_context   new securitycontext
@override
public boolean isbrokercontext
return true
@suppresswarnings
public set<?> getprincipals
return collections empty_set
final string username
final concurrenthashmap<activemqdestination  activemqdestination> authorizedreaddests   new concurrenthashmap<activemqdestination  activemqdestination>
final concurrenthashmap<activemqdestination  activemqdestination> authorizedwritedests   new concurrenthashmap<activemqdestination  activemqdestination>
public securitycontext string username
this username   username
public boolean isinoneof set<?> allowedprincipals
hashset<?> set   new hashset<object> getprincipals
set retainall allowedprincipals
return set size   > 0
public abstract set<?> getprincipals
public string getusername
return username
public concurrenthashmap<activemqdestination  activemqdestination> getauthorizedreaddests
return authorizedreaddests
public concurrenthashmap<activemqdestination  activemqdestination> getauthorizedwritedests
return authorizedwritedests
public boolean isbrokercontext
return false