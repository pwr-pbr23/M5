/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport nio
import java io datainputstream
import java io dataoutputstream
import java io eofexception
import java io ioexception
import java net socket
import java net uri
import java net unknownhostexception
import java nio bytebuffer
import java nio channels selectionkey
import java nio channels socketchannel
import javax net socketfactory
import org apache activemq command command
import org apache activemq transport transport
import org apache activemq transport tcp tcptransport
import org apache activemq util ioexceptionsupport
import org apache activemq util servicestopper
import org apache activemq wireformat wireformat
/**
* an implementation of the {@link transport} interface using raw tcp/ip
*
* @version $revision$
*/
public class niotransport extends tcptransport
// private static final log log = logfactory.getlog(niotransport.class);
private socketchannel channel
private selectorselection selection
private bytebuffer inputbuffer
private bytebuffer currentbuffer
private int nextframesize
public niotransport wireformat wireformat  socketfactory socketfactory  uri remotelocation  uri locallocation  throws unknownhostexception  ioexception
super wireformat  socketfactory  remotelocation  locallocation
public niotransport wireformat wireformat  socket socket  throws ioexception
super wireformat  socket
protected void initializestreams   throws ioexception
channel   socket getchannel
channel configureblocking false
// listen for events telling us when the socket is readable.
selection   selectormanager getinstance   register channel  new selectormanager listener
public void onselect selectorselection selection
serviceread
public void onerror selectorselection selection  throwable error
if  error instanceof ioexception
onexception  ioexception error
else
onexception ioexceptionsupport create error
// send the data via the channel
// inputbuffer = bytebuffer.allocatedirect(8*1024);
inputbuffer   bytebuffer allocate 8   1024
currentbuffer   inputbuffer
nextframesize    1
currentbuffer limit 4
this dataout   new dataoutputstream new niooutputstream channel  16   1024
private void serviceread
try
while  true
int readsize   channel read currentbuffer
if  readsize     1
onexception new eofexception
selection close
break
if  readsize    0
break
if  currentbuffer hasremaining
continue
// are we trying to figure out the size of the next frame?
if  nextframesize     1
assert inputbuffer    currentbuffer
// if the frame is too big to fit in our direct byte buffer,
// then allocate a non direct byte buffer of the right size
// for it.
inputbuffer flip
nextframesize   inputbuffer getint     4
if  nextframesize > inputbuffer capacity
currentbuffer   bytebuffer allocate nextframesize
currentbuffer putint nextframesize
else
inputbuffer limit nextframesize
else
currentbuffer flip
object command   wireformat unmarshal new datainputstream new nioinputstream currentbuffer
doconsume  command command
nextframesize    1
inputbuffer clear
inputbuffer limit 4
currentbuffer   inputbuffer
catch  ioexception e
onexception e
catch  throwable e
onexception ioexceptionsupport create e
protected void dostart   throws exception
connect
selection setinterestops selectionkey op_read
selection enable
protected void dostop servicestopper stopper  throws exception
selection disable
super dostop stopper