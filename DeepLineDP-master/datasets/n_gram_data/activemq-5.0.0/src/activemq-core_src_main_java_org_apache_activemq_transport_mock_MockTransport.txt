/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport mock
import java io ioexception
import org apache activemq transport defaulttransportlistener
import org apache activemq transport futureresponse
import org apache activemq transport responsecallback
import org apache activemq transport transport
import org apache activemq transport transportfilter
import org apache activemq transport transportlistener
/**
* @version $revision: 1.5 $
*/
public class mocktransport extends defaulttransportlistener implements transport
protected transport next
protected transportlistener transportlistener
public mocktransport transport next
this next   next
/**
*/
public synchronized void settransportlistener transportlistener channellistener
this transportlistener   channellistener
if  channellistener    null
getnext   settransportlistener null
else
getnext   settransportlistener this
/**
* @see org.apache.activemq.service#start()
* @throws ioexception if the next channel has not been set.
*/
public void start   throws exception
if  getnext      null
throw new ioexception
if  transportlistener    null
throw new ioexception
getnext   start
/**
* @see org.apache.activemq.service#stop()
*/
public void stop   throws exception
getnext   stop
public void oncommand object command
gettransportlistener   oncommand command
/**
* @return returns the getnext().
*/
public synchronized transport getnext
return next
/**
* @return returns the packetlistener.
*/
public synchronized transportlistener gettransportlistener
return transportlistener
public string tostring
return getnext   tostring
public void oneway object command  throws ioexception
getnext   oneway command
public futureresponse asyncrequest object command  responsecallback responsecallback  throws ioexception
return getnext   asyncrequest command  null
public object request object command  throws ioexception
return getnext   request command
public object request object command  int timeout  throws ioexception
return getnext   request command  timeout
public void onexception ioexception error
gettransportlistener   onexception error
public <t> t narrow class<t> target
if  target isassignablefrom getclass
return target cast this
return getnext   narrow target
public synchronized void setnext transport next
this next   next
public void install transportfilter filter
filter settransportlistener this
getnext   settransportlistener filter
setnext filter
public string getremoteaddress
return getnext   getremoteaddress
/**
* @see org.apache.activemq.transport.transport#isfaulttolerant()
*/
public boolean isfaulttolerant
return getnext   isfaulttolerant