/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker
import java util hashmap
import java util iterator
import java util map
import org apache commons logging log
import org apache commons logging logfactory
/**
* @version $revision: 1.3 $
*/
public class brokerregistry
private static final log log   logfactory getlog brokerregistry class
private static final brokerregistry instance   new brokerregistry
private final object mutex   new object
private final map<string  brokerservice> brokers   new hashmap<string  brokerservice>
public static brokerregistry getinstance
return instance
/**
* @param brokername
* @return the brokerservice
*/
public brokerservice lookup string brokername
brokerservice result   null
synchronized  mutex
result   brokers get brokername
if  result    null    brokername    null    brokername equals brokerservice default_broker_name
result   findfirst
if  result    null
log warn     result getbrokername
return result
/**
* returns the first registered broker found
*
* @return the first brokerservice
*/
public brokerservice findfirst
synchronized  mutex
iterator<brokerservice> iter   brokers values   iterator
while  iter hasnext
return iter next
return null
/**
* @param brokername
* @param broker
*/
public void bind string brokername  brokerservice broker
synchronized  mutex
brokers put brokername  broker
/**
* @param brokername
*/
public void unbind string brokername
synchronized  mutex
brokers remove brokername
/**
* @return the mutex used
*/
public object getregistrymutext
return mutex