/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq util
import java io serializable
import java util arraylist
import java util iterator
import java util list
import javax jms connection
import javax jms destination
import javax jms jmsexception
import javax jms message
import javax jms messageproducer
import javax jms session
import javax naming namingexception
import org apache log4j appenderskeleton
import org apache log4j spi loggingevent
/**
* an abstract base class for implementation inheritence for a log4j jms
* appender
*
* @version $revision$
*/
public abstract class jmslogappendersupport extends appenderskeleton
public static final int jms_publish_error_code   61616
private connection connection
private session session
private messageproducer producer
private boolean allowtextmessages   true
private string subjectprefix
public jmslogappendersupport
public connection getconnection   throws jmsexception  namingexception
if  connection    null
connection   createconnection
return connection
public void setconnection connection connection
this connection   connection
public session getsession   throws jmsexception  namingexception
if  session    null
session   createsession
return session
public void setsession session session
this session   session
public messageproducer getproducer   throws jmsexception  namingexception
if  producer    null
producer   createproducer
return producer
public void setproducer messageproducer producer
this producer   producer
public void close
list<jmsexception> errors   new arraylist<jmsexception>
if  producer    null
try
producer close
catch  jmsexception e
errors add e
if  session    null
try
session close
catch  jmsexception e
errors add e
if  connection    null
try
connection close
catch  jmsexception e
errors add e
for  iterator<jmsexception> iter   errors iterator    iter hasnext
jmsexception e   iter next
geterrorhandler   error     e  e  jms_publish_error_code
public boolean requireslayout
return false
public void activateoptions
try
// lets ensure we're all created
getproducer
catch  exception e
geterrorhandler   error     e  e  jms_publish_error_code
// implementation methods
// -------------------------------------------------------------------------
protected abstract connection createconnection   throws jmsexception  namingexception
protected session createsession   throws jmsexception  namingexception
return getconnection   createsession false  session auto_acknowledge
protected messageproducer createproducer   throws jmsexception  namingexception
return getsession   createproducer null
protected void append loggingevent event
try
message message   createmessage event
destination destination   getdestination event
getproducer   send destination  message
catch  exception e
geterrorhandler   error     e  e  jms_publish_error_code  event
protected message createmessage loggingevent event  throws jmsexception  namingexception
message answer   null
object value   event getmessage
if  allowtextmessages    value instanceof string
answer   getsession   createtextmessage  string value
else
answer   getsession   createobjectmessage  serializable value
answer setstringproperty    event getlevel   tostring
answer setintproperty    event getlevel   toint
answer setstringproperty    event getthreadname
return answer
protected destination getdestination loggingevent event  throws jmsexception  namingexception
string name   subjectprefix   event getloggername
return getsession   createtopic name