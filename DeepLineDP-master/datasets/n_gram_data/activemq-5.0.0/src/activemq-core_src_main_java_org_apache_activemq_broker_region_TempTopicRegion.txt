/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker region
import javax jms jmsexception
import org apache activemq broker connectioncontext
import org apache activemq broker region policy policyentry
import org apache activemq command activemqdestination
import org apache activemq command consumerinfo
import org apache activemq thread taskrunnerfactory
import org apache activemq usage systemusage
import org apache commons logging log
import org apache commons logging logfactory
/**
* @version $revision: 1.7 $
*/
public class temptopicregion extends abstractregion
private static final log log   logfactory getlog temptopicregion class
public temptopicregion regionbroker broker  destinationstatistics destinationstatistics  systemusage memorymanager  taskrunnerfactory taskrunnerfactory
destinationfactory destinationfactory
super broker  destinationstatistics  memorymanager  taskrunnerfactory  destinationfactory
// we should allow the following to be configurable via a destination
// policy
// setautocreatedestinations(false);
protected subscription createsubscription connectioncontext context  consumerinfo info  throws jmsexception
if  info isdurable
throw new jmsexception
try
topicsubscription answer   new topicsubscription broker  context  info  usagemanager
// lets configure the subscription depending on the destination
activemqdestination destination   info getdestination
if  destination    null    broker getdestinationpolicy      null
policyentry entry   broker getdestinationpolicy   getentryfor destination
if  entry    null
entry configure broker  usagemanager  answer
answer init
return answer
catch  exception e
log error    e
jmsexception jmsex   new jmsexception
jmsex setlinkedexception e
throw jmsex
public string tostring
return     destinations size         subscriptions size         usagemanager getmemoryusage   getpercentusage
public void removedestination connectioncontext context  activemqdestination destination  long timeout  throws exception
// force a timeout value so that we don't get an error that
// there is still an active sub. temp destination may be removed
// while a network sub is still active which is valid.
if  timeout    0
timeout   1
super removedestination context  destination  timeout