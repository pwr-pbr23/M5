/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq command
import org apache activemq state commandvisitor
/**
* a general purpose replay command for some kind of producer where ranges of
* messages are asked to be replayed. this command is typically used over a
* non-reliable transport such as udp or multicast but could also be used on
* tcp/ip if a socket has been re-established.
*
* @openwire:marshaller code="65"
* @version $revision$
*/
public class replaycommand extends basecommand
public static final byte data_structure_type   commandtypes replay
private string producerid
private int firstacknumber
private int lastacknumber
private int firstnaknumber
private int lastnaknumber
public replaycommand
public byte getdatastructuretype
return data_structure_type
public string getproducerid
return producerid
/**
* is used to uniquely identify the producer of the sequence
*
* @openwire:property version=1 cache=false
*/
public void setproducerid string producerid
this producerid   producerid
public int getfirstacknumber
return firstacknumber
/**
* is used to specify the first sequence number being acknowledged as delivered on the transport
* so that it can be removed from cache
*
* @openwire:property version=1
*/
public void setfirstacknumber int firstsequencenumber
this firstacknumber   firstsequencenumber
public int getlastacknumber
return lastacknumber
/**
* is used to specify the last sequence number being acknowledged as delivered on the transport
* so that it can be removed from cache
*
* @openwire:property version=1
*/
public void setlastacknumber int lastsequencenumber
this lastacknumber   lastsequencenumber
public response visit commandvisitor visitor  throws exception
return null
/**
* is used to specify the first sequence number to be replayed
*
* @openwire:property version=1
*/
public int getfirstnaknumber
return firstnaknumber
public void setfirstnaknumber int firstnaknumber
this firstnaknumber   firstnaknumber
/**
* is used to specify the last sequence number to be replayed
*
* @openwire:property version=1
*/
public int getlastnaknumber
return lastnaknumber
public void setlastnaknumber int lastnaknumber
this lastnaknumber   lastnaknumber
public string tostring
return     getcommandid         getfirstnaknumber         getlastnaknumber