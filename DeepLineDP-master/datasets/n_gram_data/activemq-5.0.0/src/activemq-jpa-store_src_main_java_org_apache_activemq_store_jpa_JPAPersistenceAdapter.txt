/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq store jpa
import java io file
import java io ioexception
import java util hashset
import java util list
import java util properties
import java util set
import javax persistence entitymanager
import javax persistence entitymanagerfactory
import javax persistence persistence
import javax persistence query
import org apache activemq broker connectioncontext
import org apache activemq command activemqdestination
import org apache activemq command activemqqueue
import org apache activemq command activemqtopic
import org apache activemq openwire openwireformatfactory
import org apache activemq store messagestore
import org apache activemq store persistenceadapter
import org apache activemq store topicmessagestore
import org apache activemq store transactionstore
import org apache activemq store memory memorytransactionstore
import org apache activemq usage systemusage
import org apache activemq util ioexceptionsupport
import org apache activemq wireformat wireformat
import org apache commons logging log
import org apache commons logging logfactory
/**
* an implementation of {@link persistenceadapter} that uses jpa to store it's
* messages.
*
* @org.apache.xbean.xbean element="jpapersistenceadapter"
* @version $revision: 1.17 $
*/
public class jpapersistenceadapter implements persistenceadapter
string entitymanagername
properties entitymanagerproperties   system getproperties
entitymanagerfactory entitymanagerfactory
private wireformat wireformat
private memorytransactionstore transactionstore
public void begintransaction connectioncontext context  throws ioexception
if  context getlongtermstorecontext      null
throw new ioexception
entitymanager manager   getentitymanagerfactory   createentitymanager
manager gettransaction   begin
context setlongtermstorecontext manager
public void committransaction connectioncontext context  throws ioexception
entitymanager manager    entitymanager context getlongtermstorecontext
if  manager    null
throw new ioexception
context setlongtermstorecontext null
manager gettransaction   commit
manager close
public void rollbacktransaction connectioncontext context  throws ioexception
entitymanager manager    entitymanager context getlongtermstorecontext
if  manager    null
throw new ioexception
context setlongtermstorecontext null
manager gettransaction   rollback
manager close
public entitymanager beginentitymanager connectioncontext context
if  context    null    context getlongtermstorecontext      null
entitymanager manager   getentitymanagerfactory   createentitymanager
manager gettransaction   begin
return manager
else
return  entitymanager context getlongtermstorecontext
public void commitentitymanager connectioncontext context  entitymanager manager
if  context    null    context getlongtermstorecontext      null
manager gettransaction   commit
manager close
public void rollbackentitymanager connectioncontext context  entitymanager manager
if  context    null    context getlongtermstorecontext      null
manager gettransaction   rollback
manager close
public messagestore createqueuemessagestore activemqqueue destination  throws ioexception
messagestore rc   new jpamessagestore this  destination
if  transactionstore    null
rc   transactionstore proxy rc
return rc
public topicmessagestore createtopicmessagestore activemqtopic destination  throws ioexception
topicmessagestore rc   new jpatopicmessagestore this  destination
if  transactionstore    null
rc   transactionstore proxy rc
return rc
public transactionstore createtransactionstore   throws ioexception
if  transactionstore    null
transactionstore   new memorytransactionstore
return this transactionstore
public void deleteallmessages   throws ioexception
entitymanager manager   beginentitymanager null
try
query query   manager createquery
query executeupdate
query   manager createquery
query executeupdate
catch  throwable e
rollbackentitymanager null  manager
throw ioexceptionsupport create e
commitentitymanager null  manager
public set<activemqdestination> getdestinations
hashset<activemqdestination> rc   new hashset<activemqdestination>
entitymanager manager   beginentitymanager null
try
query query   manager createquery
for  string dest    list<string> query getresultlist
rc add activemqdestination createdestination dest  activemqdestination queue_type
catch  runtimeexception e
rollbackentitymanager null  manager
throw e
commitentitymanager null  manager
return rc
public long getlastmessagebrokersequenceid   throws ioexception
long rc   0
entitymanager manager   beginentitymanager null
try
query query   manager createquery
long t    long query getsingleresult
if  t    null
rc   t
catch  throwable e
rollbackentitymanager null  manager
throw ioexceptionsupport create e
commitentitymanager null  manager
return rc
public boolean isuseexternalmessagereferences
return false
public void setusagemanager systemusage usagemanager
public void start   throws exception
public void stop   throws exception
if  entitymanagerfactory    null
entitymanagerfactory close
public entitymanagerfactory getentitymanagerfactory
if  entitymanagerfactory    null
entitymanagerfactory   createentitymanagerfactory
return entitymanagerfactory
protected entitymanagerfactory createentitymanagerfactory
return persistence createentitymanagerfactory getentitymanagername    getentitymanagerproperties
public void setentitymanagerfactory entitymanagerfactory entitymanagerfactory
this entitymanagerfactory   entitymanagerfactory
public properties getentitymanagerproperties
return entitymanagerproperties
public void setentitymanagerproperties properties entitymanagerproperties
this entitymanagerproperties   entitymanagerproperties
public string getentitymanagername
return entitymanagername
public void setentitymanagername string entitymanager
this entitymanagername   entitymanager
public wireformat getwireformat
if  wireformat    null
wireformat   createwireformat
return wireformat
private wireformat createwireformat
openwireformatfactory wff   new openwireformatfactory
return wff createwireformat
public void setwireformat wireformat wireformat
this wireformat   wireformat
public void checkpoint boolean sync  throws ioexception
public void setbrokername string brokername
public void setdirectory file dir
public long size
return 0