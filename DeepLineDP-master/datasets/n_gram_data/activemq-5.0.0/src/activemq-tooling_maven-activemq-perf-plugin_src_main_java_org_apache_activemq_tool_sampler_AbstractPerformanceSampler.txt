/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq tool sampler
import java util concurrent atomic atomicboolean
import org apache activemq tool properties abstractobjectproperties
import org apache activemq tool reports performancereportwriter
public abstract class abstractperformancesampler extends abstractobjectproperties implements performancesampler
protected long rampuptime   30   1000     30 secs
protected long rampdowntime   30   1000     30 secs
protected long duration   5   60   1000     5 mins
protected long interval   1000     1 sec
protected performancereportwriter perfreportwriter
protected performanceeventlistener perfeventlistener
protected final atomicboolean isrunning   new atomicboolean false
protected long sampleindex
public long getrampuptime
return rampuptime
public void setrampuptime long rampuptime
this rampuptime   rampuptime
public long getrampdowntime
return rampdowntime
public void setrampdowntime long rampdowntime
this rampdowntime   rampdowntime
public long getduration
return duration
public void setduration long duration
this duration   duration
public long getinterval
return interval
public void setinterval long interval
this interval   interval
public performancereportwriter getperfreportwriter
return perfreportwriter
public void setperfreportwriter performancereportwriter perfreportwriter
this perfreportwriter   perfreportwriter
public performanceeventlistener getperfeventlistener
return perfeventlistener
public void setperfeventlistener performanceeventlistener perfeventlistener
this perfeventlistener   perfeventlistener
public void startsampler
isrunning set true
thread t   new thread this
t start
public void run
try
onrampupstart
if  perfeventlistener    null
perfeventlistener onrampupstart this
try
thread sleep rampuptime
catch  interruptedexception e
e printstacktrace
onsamplerstart
if  perfeventlistener    null
perfeventlistener onsamplerstart this
sample
onsamplerend
if  perfeventlistener    null
perfeventlistener onsamplerend this
try
thread sleep rampdowntime
catch  interruptedexception e
e printstacktrace
onrampdownend
if  perfeventlistener    null
perfeventlistener onrampdownend this
finally
isrunning set false
synchronized  isrunning
isrunning notifyall
protected void sample
// compute for the actual duration window of the sampler
long endtime   system currenttimemillis     duration   rampdowntime   rampuptime
while  system currenttimemillis   < endtime
try
thread sleep interval
catch  interruptedexception e
e printstacktrace
sampledata
sampleindex
public abstract void sampledata
public boolean isrunning
return isrunning get
public void waituntildone
while  isrunning
try
synchronized  isrunning
isrunning wait 0
catch  interruptedexception e
e printstacktrace
// call back functions to customize behavior of thread.
protected void onrampupstart
protected void onsamplerstart
protected void onsamplerend
protected void onrampdownend