/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker
import java net uri
import java util collections
import java util map
import java util set
import org apache activemq broker region destination
import org apache activemq broker region messagereference
import org apache activemq broker region subscription
import org apache activemq command activemqdestination
import org apache activemq command brokerid
import org apache activemq command brokerinfo
import org apache activemq command connectioninfo
import org apache activemq command consumerinfo
import org apache activemq command destinationinfo
import org apache activemq command message
import org apache activemq command messageack
import org apache activemq command messagedispatch
import org apache activemq command messagedispatchnotification
import org apache activemq command messagepull
import org apache activemq command producerinfo
import org apache activemq command removesubscriptioninfo
import org apache activemq command response
import org apache activemq command sessioninfo
import org apache activemq command transactionid
import org apache activemq kaha store
/**
* implementation of the broker where all it's methods throw an
* brokerstoppedexception.
*
* @version $revision$
*/
public class errorbroker implements broker
private final string message
public errorbroker string message
this message   message
@suppresswarnings
public map<activemqdestination  destination> getdestinationmap
return collections empty_map
public set getdestinations activemqdestination destination
return collections empty_set
public broker getadaptor class type
if  type isinstance this
return this
return null
public brokerid getbrokerid
throw new brokerstoppedexception this message
public string getbrokername
throw new brokerstoppedexception this message
public void addconnection connectioncontext context  connectioninfo info  throws exception
throw new brokerstoppedexception this message
public void removeconnection connectioncontext context  connectioninfo info  throwable error  throws exception
throw new brokerstoppedexception this message
public void addsession connectioncontext context  sessioninfo info  throws exception
throw new brokerstoppedexception this message
public void removesession connectioncontext context  sessioninfo info  throws exception
throw new brokerstoppedexception this message
public void addproducer connectioncontext context  producerinfo info  throws exception
throw new brokerstoppedexception this message
public void removeproducer connectioncontext context  producerinfo info  throws exception
throw new brokerstoppedexception this message
public connection getclients   throws exception
throw new brokerstoppedexception this message
public activemqdestination getdestinations   throws exception
throw new brokerstoppedexception this message
public transactionid getpreparedtransactions connectioncontext context  throws exception
throw new brokerstoppedexception this message
public void begintransaction connectioncontext context  transactionid xid  throws exception
throw new brokerstoppedexception this message
public int preparetransaction connectioncontext context  transactionid xid  throws exception
throw new brokerstoppedexception this message
public void rollbacktransaction connectioncontext context  transactionid xid  throws exception
throw new brokerstoppedexception this message
public void committransaction connectioncontext context  transactionid xid  boolean onephase  throws exception
throw new brokerstoppedexception this message
public void forgettransaction connectioncontext context  transactionid transactionid  throws exception
throw new brokerstoppedexception this message
public destination adddestination connectioncontext context  activemqdestination destination  throws exception
throw new brokerstoppedexception this message
public void removedestination connectioncontext context  activemqdestination destination  long timeout  throws exception
throw new brokerstoppedexception this message
public subscription addconsumer connectioncontext context  consumerinfo info  throws exception
throw new brokerstoppedexception this message
public void removeconsumer connectioncontext context  consumerinfo info  throws exception
throw new brokerstoppedexception this message
public void removesubscription connectioncontext context  removesubscriptioninfo info  throws exception
throw new brokerstoppedexception this message
public void send producerbrokerexchange producerexchange  message message  throws exception
throw new brokerstoppedexception this message
public void acknowledge consumerbrokerexchange consumerexchange  messageack ack  throws exception
throw new brokerstoppedexception this message
public void gc
throw new brokerstoppedexception this message
public void start   throws exception
throw new brokerstoppedexception this message
public void stop   throws exception
throw new brokerstoppedexception this message
public void addbroker connection connection  brokerinfo info
throw new brokerstoppedexception this message
public void removebroker connection connection  brokerinfo info
throw new brokerstoppedexception this message
public brokerinfo getpeerbrokerinfos
throw new brokerstoppedexception this message
public void preprocessdispatch messagedispatch messagedispatch
throw new brokerstoppedexception this message
public void postprocessdispatch messagedispatch messagedispatch
throw new brokerstoppedexception this message
public void processdispatchnotification messagedispatchnotification messagedispatchnotification  throws exception
throw new brokerstoppedexception this message
public boolean isstopped
return true
public set<activemqdestination> getdurabledestinations
throw new brokerstoppedexception this message
public void adddestinationinfo connectioncontext context  destinationinfo info  throws exception
throw new brokerstoppedexception this message
public void removedestinationinfo connectioncontext context  destinationinfo info  throws exception
throw new brokerstoppedexception this message
public boolean isfaulttolerantconfiguration
throw new brokerstoppedexception this message
public connectioncontext getadminconnectioncontext
throw new brokerstoppedexception this message
public void setadminconnectioncontext connectioncontext adminconnectioncontext
throw new brokerstoppedexception this message
public response messagepull connectioncontext context  messagepull pull
throw new brokerstoppedexception this message
public store gettempdatastore
throw new brokerstoppedexception this message
public uri getvmconnectoruri
throw new brokerstoppedexception this message
public void brokerservicestarted
throw new brokerstoppedexception this message
public brokerservice getbrokerservice
throw new brokerstoppedexception this message
public boolean isexpired messagereference messagereference
throw new brokerstoppedexception this message
public void messageexpired connectioncontext context  messagereference message
throw new brokerstoppedexception this message
public void sendtodeadletterqueue connectioncontext context  messagereference messagereference
throw new brokerstoppedexception this message
public broker getroot
throw new brokerstoppedexception this message