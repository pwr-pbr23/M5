/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq network jms
import javax jms connection
import javax jms destination
import javax jms jmsexception
import javax jms message
import javax jms messageconsumer
import javax jms messageproducer
import javax jms session
import javax jms topic
import javax jms topicconnection
import javax jms topicpublisher
import javax jms topicsession
/**
* a destination bridge is used to bridge between to different jms systems
*
* @version $revision: 1.1.1.1 $
*/
class topicbridge extends destinationbridge
protected topic consumertopic
protected topic producertopic
protected topicsession consumersession
protected topicsession producersession
protected string consumername
protected string selector
protected topicpublisher producer
protected topicconnection consumerconnection
protected topicconnection producerconnection
public void stop   throws exception
super stop
if  consumersession    null
consumersession close
if  producersession    null
producersession close
protected messageconsumer createconsumer   throws jmsexception
// set up the consumer
consumersession   consumerconnection createtopicsession false  session client_acknowledge
messageconsumer consumer   null
if  consumername    null    consumername length   > 0
if  selector    null    selector length   > 0
consumer   consumersession createdurablesubscriber consumertopic  consumername  selector
false
else
consumer   consumersession createdurablesubscriber consumertopic  consumername
else
if  selector    null    selector length   > 0
consumer   consumersession createsubscriber consumertopic  selector  false
else
consumer   consumersession createsubscriber consumertopic
return consumer
protected synchronized messageproducer createproducer   throws jmsexception
producersession   producerconnection createtopicsession false  session auto_acknowledge
producer   producersession createpublisher null
return producer
protected synchronized void sendmessage message message  throws jmsexception
if  producer    null
createproducer
producer publish producertopic  message
/**
* @return returns the consumerconnection.
*/
public topicconnection getconsumerconnection
return consumerconnection
/**
* @param consumerconnection the consumerconnection to set.
*/
public void setconsumerconnection topicconnection consumerconnection
this consumerconnection   consumerconnection
/**
* @return returns the subscriptionname.
*/
public string getconsumername
return consumername
/**
* @param subscriptionname the subscriptionname to set.
*/
public void setconsumername string consumername
this consumername   consumername
/**
* @return returns the consumertopic.
*/
public topic getconsumertopic
return consumertopic
/**
* @param consumertopic the consumertopic to set.
*/
public void setconsumertopic topic consumertopic
this consumertopic   consumertopic
/**
* @return returns the producerconnection.
*/
public topicconnection getproducerconnection
return producerconnection
/**
* @param producerconnection the producerconnection to set.
*/
public void setproducerconnection topicconnection producerconnection
this producerconnection   producerconnection
/**
* @return returns the producertopic.
*/
public topic getproducertopic
return producertopic
/**
* @param producertopic the producertopic to set.
*/
public void setproducertopic topic producertopic
this producertopic   producertopic
/**
* @return returns the selector.
*/
public string getselector
return selector
/**
* @param selector the selector to set.
*/
public void setselector string selector
this selector   selector
protected connection getconnnectionforconsumer
return getconsumerconnection
protected connection getconnectionforproducer
return getproducerconnection