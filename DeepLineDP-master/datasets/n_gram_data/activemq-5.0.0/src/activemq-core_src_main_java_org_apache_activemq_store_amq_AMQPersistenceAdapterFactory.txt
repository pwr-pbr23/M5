/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq store amq
import java io file
import org apache activemq kaha impl async asyncdatamanager
import org apache activemq store persistenceadapter
import org apache activemq store persistenceadapterfactory
import org apache activemq store referencestoreadapter
import org apache activemq thread taskrunnerfactory
import org apache activemq util iohelper
/**
* an implementation of {@link persistenceadapterfactory}
*
* @org.apache.xbean.xbean element="amqpersistenceadapterfactory"
*
* @version $revision: 1.17 $
*/
public class amqpersistenceadapterfactory implements persistenceadapterfactory
private taskrunnerfactory taskrunnerfactory
private file datadirectory
private int journalthreadpriority   thread max_priority
private string brokername
private referencestoreadapter referencestoreadapter
private boolean synconwrite
private boolean persistentindex true
private boolean usenio   true
private int maxfilelength   asyncdatamanager default_max_file_length
/**
* @return a amqpersistenceadapter
* @see org.apache.activemq.store.persistenceadapterfactory#createpersistenceadapter()
*/
public persistenceadapter createpersistenceadapter
amqpersistenceadapter result   new amqpersistenceadapter
result setdirectory getdatadirectory
result settaskrunnerfactory gettaskrunnerfactory
result setbrokername getbrokername
result setsynconwrite issynconwrite
result setpersistentindex ispersistentindex
result setreferencestoreadapter getreferencestoreadapter
result setusenio isusenio
result setmaxfilelength getmaxfilelength
return result
/**
* @return the datadirectory
*/
public file getdatadirectory
if  this datadirectory    null
this datadirectory   new file iohelper getdefaultdatadirectory    iohelper tofilesystemsafename brokername
return this datadirectory
/**
* @param datadirectory the datadirectory to set
*/
public void setdatadirectory file datadirectory
this datadirectory   datadirectory
/**
* @return the taskrunnerfactory
*/
public taskrunnerfactory gettaskrunnerfactory
if  taskrunnerfactory    null
taskrunnerfactory   new taskrunnerfactory    journalthreadpriority
true  1000
return taskrunnerfactory
/**
* @param taskrunnerfactory the taskrunnerfactory to set
*/
public void settaskrunnerfactory taskrunnerfactory taskrunnerfactory
this taskrunnerfactory   taskrunnerfactory
/**
* @return the journalthreadpriority
*/
public int getjournalthreadpriority
return this journalthreadpriority
/**
* @param journalthreadpriority the journalthreadpriority to set
*/
public void setjournalthreadpriority int journalthreadpriority
this journalthreadpriority   journalthreadpriority
/**
* @return the brokername
*/
public string getbrokername
return this brokername
/**
* @param brokername the brokername to set
*/
public void setbrokername string brokername
this brokername   brokername
/**
* @return the referencestoreadapter
*/
public referencestoreadapter getreferencestoreadapter
return this referencestoreadapter
/**
* @param referencestoreadapter the referencestoreadapter to set
*/
public void setreferencestoreadapter referencestoreadapter referencestoreadapter
this referencestoreadapter   referencestoreadapter
public boolean ispersistentindex
return persistentindex
public void setpersistentindex boolean persistentindex
this persistentindex   persistentindex
public boolean issynconwrite
return synconwrite
public void setsynconwrite boolean synconwrite
this synconwrite   synconwrite
public boolean isusenio
return usenio
public void setusenio boolean usenio
this usenio   usenio
public int getmaxfilelength
return maxfilelength
public void setmaxfilelength int maxfilelength
this maxfilelength   maxfilelength