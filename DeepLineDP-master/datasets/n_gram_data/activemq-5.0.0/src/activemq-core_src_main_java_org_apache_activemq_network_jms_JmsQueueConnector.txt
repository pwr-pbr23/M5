/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq network jms
import javax jms connection
import javax jms destination
import javax jms jmsexception
import javax jms queue
import javax jms queueconnection
import javax jms queueconnectionfactory
import javax jms queuesession
import javax jms session
import javax naming namingexception
import org apache commons logging log
import org apache commons logging logfactory
/**
* a bridge to other jms queue providers
*
* @org.apache.xbean.xbean
*
* @version $revision: 1.1.1.1 $
*/
public class jmsqueueconnector extends jmsconnector
private static final log log   logfactory getlog jmsqueueconnector class
private string outboundqueueconnectionfactoryname
private string localconnectionfactoryname
private queueconnectionfactory outboundqueueconnectionfactory
private queueconnectionfactory localqueueconnectionfactory
private queueconnection outboundqueueconnection
private queueconnection localqueueconnection
private inboundqueuebridge inboundqueuebridges
private outboundqueuebridge outboundqueuebridges
public boolean init
boolean result   super init
if  result
try
initializeforeignqueueconnection
initializelocalqueueconnection
initializeinboundjmsmessageconvertor
initializeoutboundjmsmessageconvertor
initializeinboundqueuebridges
initializeoutboundqueuebridges
catch  exception e
log error    e
return result
/**
* @return returns the inboundqueuebridges.
*/
public inboundqueuebridge getinboundqueuebridges
return inboundqueuebridges
/**
* @param inboundqueuebridges the inboundqueuebridges to set.
*/
public void setinboundqueuebridges inboundqueuebridge inboundqueuebridges
this inboundqueuebridges   inboundqueuebridges
/**
* @return returns the outboundqueuebridges.
*/
public outboundqueuebridge getoutboundqueuebridges
return outboundqueuebridges
/**
* @param outboundqueuebridges the outboundqueuebridges to set.
*/
public void setoutboundqueuebridges outboundqueuebridge outboundqueuebridges
this outboundqueuebridges   outboundqueuebridges
/**
* @return returns the localqueueconnectionfactory.
*/
public queueconnectionfactory getlocalqueueconnectionfactory
return localqueueconnectionfactory
/**
* @param localqueueconnectionfactory the localqueueconnectionfactory to
*                set.
*/
public void setlocalqueueconnectionfactory queueconnectionfactory localconnectionfactory
this localqueueconnectionfactory   localconnectionfactory
/**
* @return returns the outboundqueueconnectionfactory.
*/
public queueconnectionfactory getoutboundqueueconnectionfactory
return outboundqueueconnectionfactory
/**
* @return returns the outboundqueueconnectionfactoryname.
*/
public string getoutboundqueueconnectionfactoryname
return outboundqueueconnectionfactoryname
/**
* @param outboundqueueconnectionfactoryname the
*                outboundqueueconnectionfactoryname to set.
*/
public void setoutboundqueueconnectionfactoryname string foreignqueueconnectionfactoryname
this outboundqueueconnectionfactoryname   foreignqueueconnectionfactoryname
/**
* @return returns the localconnectionfactoryname.
*/
public string getlocalconnectionfactoryname
return localconnectionfactoryname
/**
* @param localconnectionfactoryname the localconnectionfactoryname to set.
*/
public void setlocalconnectionfactoryname string localconnectionfactoryname
this localconnectionfactoryname   localconnectionfactoryname
/**
* @return returns the localqueueconnection.
*/
public queueconnection getlocalqueueconnection
return localqueueconnection
/**
* @param localqueueconnection the localqueueconnection to set.
*/
public void setlocalqueueconnection queueconnection localqueueconnection
this localqueueconnection   localqueueconnection
/**
* @return returns the outboundqueueconnection.
*/
public queueconnection getoutboundqueueconnection
return outboundqueueconnection
/**
* @param outboundqueueconnection the outboundqueueconnection to set.
*/
public void setoutboundqueueconnection queueconnection foreignqueueconnection
this outboundqueueconnection   foreignqueueconnection
/**
* @param outboundqueueconnectionfactory the outboundqueueconnectionfactory
*                to set.
*/
public void setoutboundqueueconnectionfactory queueconnectionfactory foreignqueueconnectionfactory
this outboundqueueconnectionfactory   foreignqueueconnectionfactory
public void restartproducerconnection   throws namingexception  jmsexception
outboundqueueconnection   null
initializeforeignqueueconnection
protected void initializeforeignqueueconnection   throws namingexception  jmsexception
if  outboundqueueconnection    null
// get the connection factories
if  outboundqueueconnectionfactory    null
// look it up from jndi
if  outboundqueueconnectionfactoryname    null
outboundqueueconnectionfactory    queueconnectionfactory jndioutboundtemplate
lookup outboundqueueconnectionfactoryname  queueconnectionfactory class
if  outboundusername    null
outboundqueueconnection   outboundqueueconnectionfactory
createqueueconnection outboundusername  outboundpassword
else
outboundqueueconnection   outboundqueueconnectionfactory createqueueconnection
else
throw new jmsexception
else
if  outboundusername    null
outboundqueueconnection   outboundqueueconnectionfactory
createqueueconnection outboundusername  outboundpassword
else
outboundqueueconnection   outboundqueueconnectionfactory createqueueconnection
outboundqueueconnection start
protected void initializelocalqueueconnection   throws namingexception  jmsexception
if  localqueueconnection    null
// get the connection factories
if  localqueueconnectionfactory    null
if  embeddedconnectionfactory    null
// look it up from jndi
if  localconnectionfactoryname    null
localqueueconnectionfactory    queueconnectionfactory jndilocaltemplate
lookup localconnectionfactoryname  queueconnectionfactory class
if  localusername    null
localqueueconnection   localqueueconnectionfactory
createqueueconnection localusername  localpassword
else
localqueueconnection   localqueueconnectionfactory createqueueconnection
else
throw new jmsexception
else
localqueueconnection   embeddedconnectionfactory createqueueconnection
else
if  localusername    null
localqueueconnection   localqueueconnectionfactory createqueueconnection localusername
localpassword
else
localqueueconnection   localqueueconnectionfactory createqueueconnection
localqueueconnection start
protected void initializeinboundjmsmessageconvertor
inboundmessageconvertor setconnection localqueueconnection
protected void initializeoutboundjmsmessageconvertor
outboundmessageconvertor setconnection outboundqueueconnection
protected void initializeinboundqueuebridges   throws jmsexception
if  inboundqueuebridges    null
queuesession outboundsession   outboundqueueconnection
createqueuesession false  session auto_acknowledge
queuesession localsession   localqueueconnection createqueuesession false
session auto_acknowledge
for  int i   0  i < inboundqueuebridges length  i
inboundqueuebridge bridge   inboundqueuebridges
string localqueuename   bridge getlocalqueuename
queue activemqqueue   createactivemqqueue localsession  localqueuename
string queuename   bridge getinboundqueuename
queue foreignqueue   createforeignqueue outboundsession  queuename
bridge setconsumerqueue foreignqueue
bridge setproducerqueue activemqqueue
bridge setproducerconnection localqueueconnection
bridge setconsumerconnection outboundqueueconnection
if  bridge getjmsmessageconvertor      null
bridge setjmsmessageconvertor getinboundmessageconvertor
bridge setjmsconnector this
addinboundbridge bridge
outboundsession close
localsession close
protected void initializeoutboundqueuebridges   throws jmsexception
if  outboundqueuebridges    null
queuesession outboundsession   outboundqueueconnection
createqueuesession false  session auto_acknowledge
queuesession localsession   localqueueconnection createqueuesession false
session auto_acknowledge
for  int i   0  i < outboundqueuebridges length  i
outboundqueuebridge bridge   outboundqueuebridges
string localqueuename   bridge getlocalqueuename
queue activemqqueue   createactivemqqueue localsession  localqueuename
string queuename   bridge getoutboundqueuename
queue foreignqueue   createforeignqueue outboundsession  queuename
bridge setconsumerqueue activemqqueue
bridge setproducerqueue foreignqueue
bridge setproducerconnection outboundqueueconnection
bridge setconsumerconnection localqueueconnection
if  bridge getjmsmessageconvertor      null
bridge setjmsmessageconvertor getoutboundmessageconvertor
bridge setjmsconnector this
addoutboundbridge bridge
outboundsession close
localsession close
protected destination createreplytobridge destination destination  connection replytoproducerconnection
connection replytoconsumerconnection
queue replytoproducerqueue    queue destination
boolean isinbound   replytoproducerconnection equals localqueueconnection
if  isinbound
inboundqueuebridge bridge    inboundqueuebridge replytobridges get replytoproducerqueue
if  bridge    null
bridge   new inboundqueuebridge
protected destination processreplytodestination destination destination
return null
try
queuesession replytoconsumersession     queueconnection replytoconsumerconnection
createqueuesession false  session auto_acknowledge
queue replytoconsumerqueue   replytoconsumersession createtemporaryqueue
replytoconsumersession close
bridge setconsumerqueue replytoconsumerqueue
bridge setproducerqueue replytoproducerqueue
bridge setproducerconnection  queueconnection replytoproducerconnection
bridge setconsumerconnection  queueconnection replytoconsumerconnection
bridge setdohandlereplyto false
if  bridge getjmsmessageconvertor      null
bridge setjmsmessageconvertor getinboundmessageconvertor
bridge setjmsconnector this
bridge start
log info     replytoproducerqueue
catch  exception e
log error     replytoproducerqueue  e
return null
replytobridges put replytoproducerqueue  bridge
return bridge getconsumerqueue
else
outboundqueuebridge bridge    outboundqueuebridge replytobridges get replytoproducerqueue
if  bridge    null
bridge   new outboundqueuebridge
protected destination processreplytodestination destination destination
return null
try
queuesession replytoconsumersession     queueconnection replytoconsumerconnection
createqueuesession false  session auto_acknowledge
queue replytoconsumerqueue   replytoconsumersession createtemporaryqueue
replytoconsumersession close
bridge setconsumerqueue replytoconsumerqueue
bridge setproducerqueue replytoproducerqueue
bridge setproducerconnection  queueconnection replytoproducerconnection
bridge setconsumerconnection  queueconnection replytoconsumerconnection
bridge setdohandlereplyto false
if  bridge getjmsmessageconvertor      null
bridge setjmsmessageconvertor getoutboundmessageconvertor
bridge setjmsconnector this
bridge start
log info     replytoproducerqueue
catch  exception e
log error     replytoproducerqueue  e
return null
replytobridges put replytoproducerqueue  bridge
return bridge getconsumerqueue
protected queue createactivemqqueue queuesession session  string queuename  throws jmsexception
return session createqueue queuename
protected queue createforeignqueue queuesession session  string queuename  throws jmsexception
queue result   null
try
result   session createqueue queuename
catch  jmsexception e
// look-up the queue
try
result    queue jndioutboundtemplate lookup queuename  queue class
catch  namingexception e1
string errstr       queuename
log error errstr  e
jmsexception jmsex   new jmsexception errstr
jmsex setlinkedexception e1
throw jmsex
return result