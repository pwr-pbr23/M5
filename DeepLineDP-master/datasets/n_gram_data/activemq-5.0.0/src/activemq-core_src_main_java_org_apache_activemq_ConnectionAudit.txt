/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq
import java util linkedhashmap
import org apache activemq command activemqdestination
import org apache activemq command message
import org apache activemq util lrucache
/**
* an auditor class for a connection that looks for duplicates
*/
class connectionaudit
private boolean checkforduplicates
private linkedhashmap<activemqdestination  activemqmessageaudit> destinations   new lrucache<activemqdestination  activemqmessageaudit> 1000
private linkedhashmap<activemqdispatcher  activemqmessageaudit> dispatchers   new lrucache<activemqdispatcher  activemqmessageaudit> 1000
synchronized void removedispatcher activemqdispatcher dispatcher
dispatchers remove dispatcher
synchronized boolean isduplicate activemqdispatcher dispatcher  message message
if  checkforduplicates    message    null
activemqdestination destination   message getdestination
if  destination    null
if  destination isqueue
activemqmessageaudit audit   destinations get destination
if  audit    null
audit   new activemqmessageaudit
destinations put destination  audit
boolean result   audit isduplicate message
return result
activemqmessageaudit audit   dispatchers get dispatcher
if  audit    null
audit   new activemqmessageaudit
dispatchers put dispatcher  audit
boolean result   audit isduplicate message
return result
return false
protected void rollbackduplicate activemqdispatcher dispatcher  message message
if  checkforduplicates    message    null
activemqdestination destination   message getdestination
if  destination    null
if  destination isqueue
activemqmessageaudit audit   destinations get destination
if  audit    null
audit rollback message
else
activemqmessageaudit audit   dispatchers get dispatcher
if  audit    null
audit rollback message
/**
* @return the checkforduplicates
*/
boolean ischeckforduplicates
return this checkforduplicates
/**
* @param checkforduplicates the checkforduplicates to set
*/
void setcheckforduplicates boolean checkforduplicates
this checkforduplicates   checkforduplicates