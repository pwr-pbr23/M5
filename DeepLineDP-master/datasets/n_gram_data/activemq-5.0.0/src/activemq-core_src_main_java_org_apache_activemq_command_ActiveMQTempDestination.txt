/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq command
import javax jms jmsexception
import org apache activemq activemqconnection
import org apache commons logging log
import org apache commons logging logfactory
/**
* @openwire:marshaller
* @version $revision: 1.5 $
*/
public abstract class activemqtempdestination extends activemqdestination
private static final log log   logfactory getlog activemqtempdestination class
protected transient activemqconnection connection
protected transient string connectionid
protected transient int sequenceid
public activemqtempdestination
public activemqtempdestination string name
super name
public activemqtempdestination string connectionid  long sequenceid
super connectionid       sequenceid
public boolean istemporary
return true
public void delete   throws jmsexception
connection deletetempdestination this
public activemqconnection getconnection
return connection
public void setconnection activemqconnection connection
this connection   connection
public void setphysicalname string physicalname
super setphysicalname physicalname
if   iscomposite
// parse off the sequenceid off the end.
// this can fail if the temp destination is
// generated by another jms system via the jms<->jms bridge
int p   this physicalname lastindexof
if  p >  0
string seqstr   this physicalname substring p   1  trim
if  seqstr    null    seqstr length   > 0
try
sequenceid   integer parseint seqstr
catch  numberformatexception e
log debug     physicalname
// the rest should be the connection id.
connectionid   this physicalname substring 0  p
public string getconnectionid
return connectionid
public void setconnectionid string connectionid
this connectionid   connectionid
public int getsequenceid
return sequenceid