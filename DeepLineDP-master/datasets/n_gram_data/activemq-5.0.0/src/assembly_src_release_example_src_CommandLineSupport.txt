/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java util arraylist
import org apache activemq util introspectionsupport
/**
* helper utility that can be used to set the properties on any object using
* command line arguments.
*
* @author <a href="http://hiramchirino.com">hiram chirino</a>
*/
public final class commandlinesupport
private commandlinesupport
/**
* sets the properties of an object given the command line args.
*
* if args contains: --ack-mode=auto --url=tcp://localhost:61616 --persistent
*
* then it will try to call the following setters on the target object.
*
* target.setackmode("auto");
* target.seturl(new uri("tcp://localhost:61616") );
* target.setpersistent(true);
*
* notice the the proper conversion for the argument is determined by examining the
* setter arguement type.
*
* @param target the object that will have it's properties set
* @param args the commline options
* @return any arguments that are not valid options for the target
*/
public static string setoptions object target  string args
arraylist<string> rc   new arraylist<string>
for  int i   0  i < args length  i
if  args    null
continue
if  args startswith
// --options without a specified value are considered boolean
// flags that are enabled.
string value
string name   args substring 2
// if --option=value case
int p   name indexof
if  p > 0
value   name substring p   1
name   name substring 0  p
// name not set, then it's an unrecognized option
if  name length      0
rc add args
continue
string propname   convertoptiontopropertyname name
if   introspectionsupport setproperty target  propname  value
rc add args
continue
string r   new string
rc toarray r
return r
/**
* converts strings like: test-enabled to testenabled
*
* @param name
* @return
*/
private static string convertoptiontopropertyname string name
string rc
// look for '-' and strip and then convert the subsequent char to
// uppercase
int p   name indexof
while  p > 0
// strip
rc    name substring 0  p
name   name substring p   1
// can i convert the next char to upper?
if  name length   > 0
rc    name substring 0  1  touppercase
name   name substring 1
p   name indexof
return rc   name