/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq command
import org apache activemq state commandvisitor
/**
*
* @openwire:marshaller code="3"
* @version $revision: 1.11 $
*/
public class connectioninfo extends basecommand
public static final byte data_structure_type   commandtypes connection_info
protected connectionid connectionid
protected string clientid
protected string username
protected string password
protected brokerid brokerpath
protected boolean brokermasterconnector
protected boolean manageable
protected boolean clientmaster   true
protected transient object transportcontext
public connectioninfo
public connectioninfo connectionid connectionid
this connectionid   connectionid
public byte getdatastructuretype
return data_structure_type
public void copy connectioninfo copy
super copy copy
copy clientid   clientid
copy username   username
copy password   password
copy brokerpath   brokerpath
copy brokermasterconnector   brokermasterconnector
copy manageable   manageable
/**
* @openwire:property version=1 cache=true
*/
public connectionid getconnectionid
return connectionid
public void setconnectionid connectionid connectionid
this connectionid   connectionid
/**
* @openwire:property version=1
*/
public string getclientid
return clientid
public void setclientid string clientid
this clientid   clientid
public removeinfo createremovecommand
removeinfo command   new removeinfo getconnectionid
command setresponserequired isresponserequired
return command
/**
* @openwire:property version=1
*/
public string getpassword
return password
public void setpassword string password
this password   password
/**
* @openwire:property version=1
*/
public string getusername
return username
public void setusername string username
this username   username
/**
* the route of brokers the command has moved through.
*
* @openwire:property version=1 cache=true
*/
public brokerid getbrokerpath
return brokerpath
public void setbrokerpath brokerid brokerpath
this brokerpath   brokerpath
public response visit commandvisitor visitor  throws exception
return visitor processaddconnection this
/**
* @openwire:property version=1
*/
public boolean isbrokermasterconnector
return brokermasterconnector
/**
* @param brokermasterconnector the brokermasterconnector to set.
*/
public void setbrokermasterconnector boolean slavebroker
this brokermasterconnector   slavebroker
/**
* @openwire:property version=1
*/
public boolean ismanageable
return manageable
/**
* @param manageable the manageable to set.
*/
public void setmanageable boolean manageable
this manageable   manageable
/**
* transports may wish to associate additional data with the connection. for
* example, an ssl transport may use this field to attach the client
* certificates used when the conection was established.
*
* @return the transport context.
*/
public object gettransportcontext
return transportcontext
/**
* transports may wish to associate additional data with the connection. for
* example, an ssl transport may use this field to attach the client
* certificates used when the conection was established.
*
* @param transportcontext value used to set the transport context
*/
public void settransportcontext object transportcontext
this transportcontext   transportcontext
/**
* @openwire:property version=2
* @return the clientmaster
*/
public boolean isclientmaster
return this clientmaster
/**
* @param clientmaster the clientmaster to set
*/
public void setclientmaster boolean clientmaster
this clientmaster   clientmaster