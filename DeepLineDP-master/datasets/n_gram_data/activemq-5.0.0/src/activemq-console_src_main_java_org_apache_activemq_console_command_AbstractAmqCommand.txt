/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console command
import java net uri
import java net urisyntaxexception
import java util arraylist
import java util iterator
import java util list
import javax jms connection
import javax jms connectionfactory
import javax jms jmsexception
import org apache activemq activemqconnectionfactory
import org apache activemq console formatter globalwriter
public abstract class abstractamqcommand extends abstractcommand
private uri brokerurl
private connectionfactory factory
private final list<connection> connections   new arraylist<connection>
/**
* establishes a connection to the remote broker specified by the broker
* url.
*
* @return - connection to the broker
* @throws jmsexception
*/
protected connection createconnection   throws jmsexception
if  getbrokerurl      null
globalwriter
printexception new illegalstateexception
return null
if  factory    null
factory   new activemqconnectionfactory getbrokerurl
connection conn   factory createconnection
connections add conn
return conn
/**
* establishes a connection to the remote broker specified by the broker
* url.
*
* @param username - username for the connection
* @param password - password for the connection
* @return - connection to the broker
* @throws jmsexception
*/
protected connection createconnection string username  string password  throws jmsexception
if  getbrokerurl      null
globalwriter
printexception new illegalstateexception
return null
if  factory    null
factory   new activemqconnectionfactory getbrokerurl
connection conn   factory createconnection username  password
connections add conn
conn start
return conn
/**
* close all created connections.
*/
protected void closeallconnections
for  iterator<connection> i   connections iterator    i hasnext
try
i next   close
catch  exception e
connections clear
/**
* handle the --amqurl option.
*
* @param token - current option
* @param tokens - succeeding list of arguments
* @throws exception
*/
protected void handleoption string token  list tokens  throws exception
// try to handle the options first
if  token equals
// if no broker url specified, or next token is a new option
if  tokens isempty        string tokens get 0   startswith
globalwriter printexception new illegalargumentexception
tokens clear
return
// if broker url already specified
if  getbrokerurl      null
globalwriter
printexception new illegalargumentexception
tokens clear
return
string strbrokerurl    string tokens remove 0
try
setbrokerurl new uri strbrokerurl
catch  urisyntaxexception e
globalwriter printexception e
tokens clear
return
else
// let the super class handle the option
super handleoption token  tokens
/**
* set the broker url.
*
* @param brokerurl - new broker url
*/
protected void setbrokerurl uri brokerurl
this brokerurl   brokerurl
/**
* set the broker url.
*
* @param address - address of the new broker url
* @throws urisyntaxexception
*/
protected void setbrokerurl string address  throws urisyntaxexception
this brokerurl   new uri address
/**
* get the current broker url.
*
* @return current broker url
*/
protected uri getbrokerurl
return brokerurl