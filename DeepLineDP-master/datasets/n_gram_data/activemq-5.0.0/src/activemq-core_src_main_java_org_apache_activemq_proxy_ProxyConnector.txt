/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq proxy
import java io ioexception
import java net uri
import java net urisyntaxexception
import java util iterator
import java util concurrent copyonwritearraylist
import org apache activemq service
import org apache activemq transport compositetransport
import org apache activemq transport transport
import org apache activemq transport transportacceptlistener
import org apache activemq transport transportfactory
import org apache activemq transport transportfilter
import org apache activemq transport transportserver
import org apache activemq util servicestopper
import org apache commons logging log
import org apache commons logging logfactory
/**
* @org.apache.xbean.xbean
*
* @version $revision$
*/
public class proxyconnector implements service
private static final log log   logfactory getlog proxyconnector class
private transportserver server
private uri bind
private uri remote
private uri localuri
private string name
private copyonwritearraylist<proxyconnection> connections   new copyonwritearraylist<proxyconnection>
public void start   throws exception
this getserver   setacceptlistener new transportacceptlistener
public void onaccept transport localtransport
try
transport remotetransport   createremotetransport
proxyconnection connection   new proxyconnection localtransport  remotetransport
connections add connection
connection start
catch  exception e
onaccepterror e
public void onaccepterror exception error
log error     error  error
getserver   start
log info     getname
public void stop   throws exception
servicestopper ss   new servicestopper
if  this server    null
ss stop this server
for  iterator<proxyconnection> iter   connections iterator    iter hasnext
log info
ss stop iter next
ss throwfirstexception
log info     getname
// properties
// -------------------------------------------------------------------------
public uri getlocaluri
return localuri
public void setlocaluri uri localuri
this localuri   localuri
public uri getbind
return bind
public void setbind uri bind
this bind   bind
public uri getremote
return remote
public void setremote uri remote
this remote   remote
public transportserver getserver   throws ioexception  urisyntaxexception
if  server    null
server   createserver
return server
public void setserver transportserver server
this server   server
protected transportserver createserver   throws ioexception  urisyntaxexception
if  bind    null
throw new illegalargumentexception
return transportfactory bind null  bind
private transport createremotetransport   throws exception
transport transport   transportfactory compositeconnect remote
compositetransport ct    compositetransport transport narrow compositetransport class
if  ct    null    localuri    null
ct add new uri  localuri
// add a transport filter so that can track the transport life cycle
transport   new transportfilter transport
public void stop   throws exception
log info
super stop
connections remove this
return transport
public string getname
if  name    null
if  server    null
name   server getconnecturi   tostring
else
name
return name
public void setname string name
this name   name