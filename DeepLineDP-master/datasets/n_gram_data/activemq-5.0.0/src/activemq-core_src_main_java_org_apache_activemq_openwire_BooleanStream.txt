/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq openwire
import java io datainput
import java io dataoutput
import java io ioexception
import java nio bytebuffer
public final class booleanstream
byte data   new byte
short arraylimit
short arraypos
byte bytepos
public boolean readboolean   throws ioexception
assert arraypos <  arraylimit
byte b   data
boolean rc     b >> bytepos    0x01     0
bytepos
if  bytepos >  8
bytepos   0
arraypos
return rc
public void writeboolean boolean value  throws ioexception
if  bytepos    0
arraylimit
if  arraylimit >  data length
// re-grow the array.
byte d   new byte
system arraycopy data  0  d  0  data length
data   d
if  value
data    0x01 << bytepos
bytepos
if  bytepos >  8
bytepos   0
arraypos
public void marshal dataoutput dataout  throws ioexception
if  arraylimit < 64
dataout writebyte arraylimit
else if  arraylimit < 256       max value of unsigned byte
dataout writebyte 0xc0
dataout writebyte arraylimit
else
dataout writebyte 0x80
dataout writeshort arraylimit
dataout write data  0  arraylimit
clear
public void marshal bytebuffer dataout
if  arraylimit < 64
dataout put  byte arraylimit
else if  arraylimit < 256       max value of unsigned byte
dataout put  byte 0xc0
dataout put  byte arraylimit
else
dataout put  byte 0x80
dataout putshort arraylimit
dataout put data  0  arraylimit
public void unmarshal datainput datain  throws ioexception
arraylimit    short  datain readbyte     0xff
if  arraylimit    0xc0
arraylimit    short  datain readbyte     0xff
else if  arraylimit    0x80
arraylimit   datain readshort
if  data length < arraylimit
data   new byte
datain readfully data  0  arraylimit
clear
public void clear
arraypos   0
bytepos   0
public int marshalledsize
if  arraylimit < 64
return 1   arraylimit
else if  arraylimit < 256
return 2   arraylimit
else
return 3   arraylimit