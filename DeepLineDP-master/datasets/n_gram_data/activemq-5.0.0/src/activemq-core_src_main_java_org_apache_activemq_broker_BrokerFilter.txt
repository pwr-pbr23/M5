/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker
import java net uri
import java util map
import java util set
import org apache activemq broker region destination
import org apache activemq broker region messagereference
import org apache activemq broker region subscription
import org apache activemq command activemqdestination
import org apache activemq command brokerid
import org apache activemq command brokerinfo
import org apache activemq command connectioninfo
import org apache activemq command consumerinfo
import org apache activemq command destinationinfo
import org apache activemq command message
import org apache activemq command messageack
import org apache activemq command messagedispatch
import org apache activemq command messagedispatchnotification
import org apache activemq command messagepull
import org apache activemq command producerinfo
import org apache activemq command removesubscriptioninfo
import org apache activemq command response
import org apache activemq command sessioninfo
import org apache activemq command transactionid
import org apache activemq kaha store
/**
* allows you to intercept broker operation so that features such as security
* can be implemented as a pluggable filter.
*
* @version $revision: 1.10 $
*/
public class brokerfilter implements broker
protected final broker next
public brokerfilter broker next
this next   next
public broker getadaptor class type
if  type isinstance this
return this
return next getadaptor type
public map<activemqdestination  destination> getdestinationmap
return next getdestinationmap
public set getdestinations activemqdestination destination
return next getdestinations destination
public void acknowledge consumerbrokerexchange consumerexchange  messageack ack  throws exception
next acknowledge consumerexchange  ack
public response messagepull connectioncontext context  messagepull pull  throws exception
return next messagepull context  pull
public void addconnection connectioncontext context  connectioninfo info  throws exception
next addconnection context  info
public subscription addconsumer connectioncontext context  consumerinfo info  throws exception
return next addconsumer context  info
public void addproducer connectioncontext context  producerinfo info  throws exception
next addproducer context  info
public void committransaction connectioncontext context  transactionid xid  boolean onephase  throws exception
next committransaction context  xid  onephase
public void removesubscription connectioncontext context  removesubscriptioninfo info  throws exception
next removesubscription context  info
public transactionid getpreparedtransactions connectioncontext context  throws exception
return next getpreparedtransactions context
public int preparetransaction connectioncontext context  transactionid xid  throws exception
return next preparetransaction context  xid
public void removeconnection connectioncontext context  connectioninfo info  throwable error  throws exception
next removeconnection context  info  error
public void removeconsumer connectioncontext context  consumerinfo info  throws exception
next removeconsumer context  info
public void removeproducer connectioncontext context  producerinfo info  throws exception
next removeproducer context  info
public void rollbacktransaction connectioncontext context  transactionid xid  throws exception
next rollbacktransaction context  xid
public void send producerbrokerexchange producerexchange  message messagesend  throws exception
next send producerexchange  messagesend
public void begintransaction connectioncontext context  transactionid xid  throws exception
next begintransaction context  xid
public void forgettransaction connectioncontext context  transactionid transactionid  throws exception
next forgettransaction context  transactionid
public connection getclients   throws exception
return next getclients
public destination adddestination connectioncontext context  activemqdestination destination  throws exception
return next adddestination context  destination
public void removedestination connectioncontext context  activemqdestination destination  long timeout  throws exception
next removedestination context  destination  timeout
public activemqdestination getdestinations   throws exception
return next getdestinations
public void start   throws exception
next start
public void stop   throws exception
next stop
public void addsession connectioncontext context  sessioninfo info  throws exception
next addsession context  info
public void removesession connectioncontext context  sessioninfo info  throws exception
next removesession context  info
public brokerid getbrokerid
return next getbrokerid
public string getbrokername
return next getbrokername
public void gc
next gc
public void addbroker connection connection  brokerinfo info
next addbroker connection  info
public void removebroker connection connection  brokerinfo info
next removebroker connection  info
public brokerinfo getpeerbrokerinfos
return next getpeerbrokerinfos
public void preprocessdispatch messagedispatch messagedispatch
next preprocessdispatch messagedispatch
public void postprocessdispatch messagedispatch messagedispatch
next postprocessdispatch messagedispatch
public void processdispatchnotification messagedispatchnotification messagedispatchnotification  throws exception
next processdispatchnotification messagedispatchnotification
public boolean isstopped
return next isstopped
public set<activemqdestination> getdurabledestinations
return next getdurabledestinations
public void adddestinationinfo connectioncontext context  destinationinfo info  throws exception
next adddestinationinfo context  info
public void removedestinationinfo connectioncontext context  destinationinfo info  throws exception
next removedestinationinfo context  info
public boolean isfaulttolerantconfiguration
return next isfaulttolerantconfiguration
public connectioncontext getadminconnectioncontext
return next getadminconnectioncontext
public void setadminconnectioncontext connectioncontext adminconnectioncontext
next setadminconnectioncontext adminconnectioncontext
public store gettempdatastore
return next gettempdatastore
public uri getvmconnectoruri
return next getvmconnectoruri
public void brokerservicestarted
next brokerservicestarted
public brokerservice getbrokerservice
return next getbrokerservice
public boolean isexpired messagereference messagereference
return next isexpired messagereference
public void messageexpired connectioncontext context  messagereference message
next messageexpired context  message
public void sendtodeadletterqueue connectioncontext context  messagereference messagereference
next sendtodeadletterqueue context  messagereference
public broker getroot
return next getroot