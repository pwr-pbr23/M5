/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport discovery
import java net uri
import java net urisyntaxexception
import java util concurrent concurrenthashmap
import org apache activemq command discoveryevent
import org apache activemq transport compositetransport
import org apache activemq transport transportfilter
import org apache activemq util servicestopper
import org apache commons logging log
import org apache commons logging logfactory
/**
* a {@link reliabletransportchannel} which uses a {@link discoveryagent} to
* discover remote broker instances and dynamically connect to them.
*
* @version $revision$
*/
public class discoverytransport extends transportfilter implements discoverylistener
private static final log log   logfactory getlog discoverytransport class
private final compositetransport next
private discoveryagent discoveryagent
private final concurrenthashmap<string  uri> serviceuris   new concurrenthashmap<string  uri>
public discoverytransport compositetransport next
super next
this next   next
public void start   throws exception
if  discoveryagent    null
throw new illegalstateexception
// lets pass into the agent the broker name and connection details
discoveryagent setdiscoverylistener this
discoveryagent start
next start
public void stop   throws exception
servicestopper ss   new servicestopper
ss stop discoveryagent
ss stop next
ss throwfirstexception
public void onserviceadd discoveryevent event
string url   event getservicename
if  url    null
try
uri uri   new uri url
serviceuris put event getservicename    uri
log info     uri
next add new uri  uri
catch  urisyntaxexception e
log warn     url       e  e
public void onserviceremove discoveryevent event
uri uri   serviceuris get event getservicename
if  uri    null
next remove new uri  uri
public discoveryagent getdiscoveryagent
return discoveryagent
public void setdiscoveryagent discoveryagent discoveryagent
this discoveryagent   discoveryagent