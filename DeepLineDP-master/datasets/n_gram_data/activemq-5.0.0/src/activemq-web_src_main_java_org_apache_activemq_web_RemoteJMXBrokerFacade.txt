/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq web
import java io ioexception
import java util arraylist
import java util collection
import java util hashmap
import java util list
import java util set
import javax management mbeanserverconnection
import javax management mbeanserverinvocationhandler
import javax management malformedobjectnameexception
import javax management objectname
import javax management remote jmxconnector
import javax management remote jmxconnectorfactory
import javax management remote jmxserviceurl
import org apache activemq broker jmx brokerviewmbean
import org apache activemq broker jmx managementcontext
import org apache activemq broker jmx queueviewmbean
import org apache activemq command activemqdestination
import org apache commons logging log
import org apache commons logging logfactory
/**
* a {@link brokerfacade} which uses a jmx-connection to communicate with a
* broker
*
* @version $revision: 1.1 $
*/
public class remotejmxbrokerfacade extends brokerfacadesupport
private static final transient log log   logfactory getlog remotejmxbrokerfacade class
private string jmxurl
private string jmxrole
private string jmxpassword
private string brokername
private jmxconnector connector
public void setbrokername string brokername
this brokername   brokername
public void setjmxurl string url
this jmxurl   url
public void setjmxrole string role
this jmxrole   role
public void setjmxpassword string password
this jmxpassword   password
/**
* shutdown this facade aka close any open connection.
*/
public void shutdown
closeconnection
public brokerviewmbean getbrokeradmin   throws exception
mbeanserverconnection connection   getconnection
set brokers   findbrokers connection
if  brokers size      0
throw new ioexception
objectname name    objectname brokers iterator   next
brokerviewmbean mbean    brokerviewmbean mbeanserverinvocationhandler newproxyinstance connection  name  brokerviewmbean class  true
return mbean
protected mbeanserverconnection getconnection   throws ioexception
jmxconnector connector   this connector
if  isconnectionactive connector
return connector getmbeanserverconnection
synchronized  this
closeconnection
log debug
this connector   createconnection
return this connector getmbeanserverconnection
protected boolean isconnectionactive jmxconnector connector
if  connector    null
return false
try
mbeanserverconnection connection   connector getmbeanserverconnection
int brokercount   findbrokers connection  size
return brokercount > 0
catch  exception e
return false
protected jmxconnector createconnection
string urls   this jmxurl split
hashmap env   new hashmap
env put    new string
this jmxrole  this jmxpassword
if  urls    null    urls length    0
urls   new string
this jmxurl
exception exception   null
for  int i   0  i < urls length  i
try
jmxconnector connector   jmxconnectorfactory connect new jmxserviceurl urls   env
connector connect
mbeanserverconnection connection   connector getmbeanserverconnection
set brokers   findbrokers connection
if  brokers size   > 0
log info     urls
return connector
catch  exception e
// keep the exception for later
exception   e
if  exception    null
if  exception instanceof runtimeexception
throw  runtimeexception exception
else
throw new runtimeexception exception
throw new illegalstateexception     this jmxurl
protected synchronized void closeconnection
if  connector    null
try
log debug     connector getconnectionid
connector close
catch  ioexception e
// ignore the exception, since it most likly won't matter
// anymore
/**
* finds all activemq-brokers registered on a certain jmx-server or, if a
* jmx-brokername has been set, the broker with that name.
*
* @param connection not <code>null</code>
* @return set with objectname-elements
* @throws ioexception
* @throws malformedobjectnameexception
*/
protected set findbrokers mbeanserverconnection connection  throws ioexception  malformedobjectnameexception
objectname name
if  this brokername    null
name   new objectname
else
name   new objectname     this brokername
set brokers   connection querynames name  null
return brokers
public void purgequeue activemqdestination destination  throws exception
queueviewmbean queue   getqueue destination getphysicalname
queue purge
public managementcontext getmanagementcontext
throw new illegalstateexception
protected collection getmanagedobjects objectname names  class type
mbeanserverconnection connection
try
connection   getconnection
catch  ioexception e
throw new runtimeexception e
list answer   new arraylist
if  connection    null
for  int i   0  i < names length  i
objectname name   names
object value   mbeanserverinvocationhandler newproxyinstance connection  name  type  true
if  value    null
answer add value
return answer