/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq openwire tool
import org codehaus jam jannotation
import org codehaus jam jannotationvalue
import org codehaus jam jclass
import org codehaus jam jfield
import org codehaus jam jmethod
import org codehaus jam jproperty
import org codehaus jam jamclassiterator
import org codehaus jam jamservice
/**
* @version $revision$
*/
public abstract class openwiregenerator
protected int openwireversion
protected string filepostfix
protected jamservice jam
public boolean isvalidproperty jproperty it
jmethod getter   it getgetter
return getter    null    it getsetter      null     getter isstatic      getter getannotation       null
public boolean iscachedproperty jproperty it
jmethod getter   it getgetter
if   isvalidproperty it
return false
jannotationvalue value   getter getannotation    getvalue
return value    null    value asboolean
public boolean isabstract jclass j
jfield fields   j getfields
for  int i   0  i < fields length  i
jfield field   fields
if  field isstatic      field ispublic      field isfinal      field getsimplename   equals
return false
return true
public boolean isthrowable jclass j
if  j getqualifiedname   equals throwable class getname
return true
return j getsuperclass      null    isthrowable j getsuperclass
public boolean ismarshallaware jclass j
if  filepostfix endswith
jclass interfaces   j getinterfaces
for  int i   0  i < interfaces length  i
if  interfaces getqualifiedname   equals
return true
return false
else
string simplename   j getsimplename
return simplename equals       simplename equals
/*
* else { // is it a message type string simplename = j.getsimplename();
* jclass superclass = j.getsuperclass(); return
* simplename.equals("activemqmessage") || (superclass != null &&
* superclass.getsimplename().equals("activemqmessage")); }
*/
public jamservice getjam
return jam
public jamclassiterator getclasses
return getjam   getclasses
public int getopenwireversion
return openwireversion
public void setopenwireversion int openwireversion
this openwireversion   openwireversion
/**
* converts the java type to a c# type name
*/
public string tocsharptype jclass type
string name   type getsimplename
if  name equals
return
else if  name equals       name equals
return
else if  name equals
return
else if  name equals
return
else
return name
public string getopenwireopcode jclass element
if  element    null
jannotation annotation   element getannotation
return stringvalue annotation
return
protected string stringvalue jannotation annotation  string name
return stringvalue annotation  name  null
protected string stringvalue jannotation annotation  string name  string defaultvalue
if  annotation    null
jannotationvalue value   annotation getvalue name
if  value    null
return value asstring
return defaultvalue
public void setjam jamservice jam
this jam   jam
public string decapitalize string text
if  text    null
return null
return text substring 0  1  tolowercase     text substring 1
public string capitalize string text
if  text    null
return null
return text substring 0  1  touppercase     text substring 1