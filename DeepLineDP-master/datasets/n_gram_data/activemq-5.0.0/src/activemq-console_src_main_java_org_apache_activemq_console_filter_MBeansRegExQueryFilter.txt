/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console filter
import java lang reflect method
import java util iterator
import java util map
import java util regex pattern
import javax management attribute
import javax management attributelist
import javax management objectinstance
import javax management objectname
public class mbeansregexqueryfilter extends regexqueryfilter
/**
* creates a regular expression query that is able to match the values of
* specific mbeans
*
* @param next - next query filter
*/
public mbeansregexqueryfilter queryfilter next
super next
/**
* try to match the object data using the regular expression map. the regex
* map contains a key-value mapping of an attribute key to a regular
* expression the value of the key should match. the basic rule of matching
* is that the data must contain a property key that is included in the
* regex map, and that the value of the property key should match the regex
* specified.
*
* @param data - object data to match
* @param regex - regex map
* @return true if the data matches the regex map specified
* @throws exception
*/
protected boolean matches object data  map regex  throws exception
// todo why not just use instanceof?
// use reflection to determine where the object should go
try
method method   this getclass   getdeclaredmethod    new class
data getclass    map class
return   boolean method invoke this  new object
data  regex
booleanvalue
catch  nosuchmethodexception e
return false
/**
* try to match the object instance using the regular expression map
*
* @param data - object instance to match
* @param regex - regex map
* @return true if the object instance matches the regex map
*/
protected boolean matches objectinstance data  map regex
return matches data getobjectname    regex
/**
* try to match the object name instance using the regular expression map
*
* @param data - object name to match
* @param regex - regex map
* @return true if the object name matches the regex map
*/
protected boolean matches objectname data  map regex
for  iterator i   regex keyset   iterator    i hasnext
string key    string i next
string target   data getkeyproperty key
// try to match the value of the property of the object name
if  target    null       pattern regex get key   matcher target  matches
return false
return true
/**
* try to match the attribute list using the regular expression map
*
* @param data - attribute list to match
* @param regex - regex map
* @return true if the attribute list matches the regex map
*/
protected boolean matches attributelist data  map regex
for  iterator i   regex keyset   iterator    i hasnext
string key    string i next
// try to match each regex to the attributes of the mbean including
// its objectname
for  iterator j   data iterator    j hasnext
attribute attrib    attribute j next
// try to match to the properties of the objectname
if  attrib getname   equals mbeansattributequeryfilter key_object_name_attribute
string target     objectname attrib getvalue    getkeyproperty key
if  target    null       pattern regex get key   matcher target  matches
return false
else
// if match skip to the next regex
break
// try to match to the mbean attributes
else if  attrib getname   equals key
if     pattern regex get key   matcher attrib getvalue   tostring    matches
return false
else
// if match skip to the next regex
break
// if mbean does not contain the specified attribute
else
return false
return true