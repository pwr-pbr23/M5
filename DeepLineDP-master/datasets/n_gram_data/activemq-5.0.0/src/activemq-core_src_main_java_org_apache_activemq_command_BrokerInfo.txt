/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq command
import org apache activemq state commandvisitor
/**
* when a client connects to a broker, the broker send the client a brokerinfo
* so that the client knows which broker node he's talking to and also any peers
* that the node has in his cluster. this is the broker helping the client out
* in discovering other nodes in the cluster.
*
* @openwire:marshaller code="2"
* @version $revision: 1.7 $
*/
public class brokerinfo extends basecommand
public static final byte data_structure_type   commandtypes broker_info
brokerid brokerid
string brokerurl
boolean slavebroker
boolean masterbroker
boolean faulttolerantconfiguration
boolean networkconnection
boolean duplexconnection
brokerinfo peerbrokerinfos
string brokername
long connectionid
string brokeruploadurl
string networkproperties
public boolean isbrokerinfo
return true
public byte getdatastructuretype
return data_structure_type
/**
* @openwire:property version=1 cache=true
*/
public brokerid getbrokerid
return brokerid
public void setbrokerid brokerid brokerid
this brokerid   brokerid
/**
* @openwire:property version=1
*/
public string getbrokerurl
return brokerurl
public void setbrokerurl string brokerurl
this brokerurl   brokerurl
/**
* @openwire:property version=1 testsize=0
*/
public brokerinfo getpeerbrokerinfos
return peerbrokerinfos
public void setpeerbrokerinfos brokerinfo peerbrokerinfos
this peerbrokerinfos   peerbrokerinfos
/**
* @openwire:property version=1
*/
public string getbrokername
return brokername
public void setbrokername string brokername
this brokername   brokername
public response visit commandvisitor visitor  throws exception
return visitor processbrokerinfo this
/**
* @openwire:property version=1
*/
public boolean isslavebroker
return slavebroker
public void setslavebroker boolean slavebroker
this slavebroker   slavebroker
/**
* @openwire:property version=1
*/
public boolean ismasterbroker
return masterbroker
/**
* @param masterbroker the masterbroker to set.
*/
public void setmasterbroker boolean masterbroker
this masterbroker   masterbroker
/**
* @openwire:property version=1
* @return returns the faulttolerantconfiguration.
*/
public boolean isfaulttolerantconfiguration
return faulttolerantconfiguration
/**
* @param faulttolerantconfiguration the faulttolerantconfiguration to set.
*/
public void setfaulttolerantconfiguration boolean faulttolerantconfiguration
this faulttolerantconfiguration   faulttolerantconfiguration
/**
* @openwire:property version=2
* @return the duplexconnection
*/
public boolean isduplexconnection
return this duplexconnection
/**
* @param duplexconnection the duplexconnection to set
*/
public void setduplexconnection boolean duplexconnection
this duplexconnection   duplexconnection
/**
* @openwire:property version=2
* @return the networkconnection
*/
public boolean isnetworkconnection
return this networkconnection
/**
* @param networkconnection the networkconnection to set
*/
public void setnetworkconnection boolean networkconnection
this networkconnection   networkconnection
/**
* the broker assigns a each connection it accepts a connection id.
*
* @openwire:property version=2
*/
public long getconnectionid
return connectionid
public void setconnectionid long connectionid
this connectionid   connectionid
/**
* the url to use when uploading blobs to the broker or some other external
* file/http server
*
* @openwire:property version=3
*/
public string getbrokeruploadurl
return brokeruploadurl
public void setbrokeruploadurl string brokeruploadurl
this brokeruploadurl   brokeruploadurl
/**
* @openwire:property version=3 cache=false
* @return the networkproperties
*/
public string getnetworkproperties
return this networkproperties
/**
* @param networkproperties the networkproperties to set
*/
public void setnetworkproperties string networkproperties
this networkproperties   networkproperties