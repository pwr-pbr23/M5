/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java util arrays
import javax jms bytesmessage
import javax jms connection
import javax jms deliverymode
import javax jms jmsexception
import javax jms message
import javax jms messagelistener
import javax jms messageproducer
import javax jms session
import javax jms textmessage
import javax jms topic
import org apache activemq activemqconnectionfactory
/**
* use in conjunction with topiclistener to test the performance of activemq
* topics.
*/
public class topicpublisher implements messagelistener
private static final char data     tochararray
private final object mutex   new object
private connection connection
private session session
private messageproducer publisher
private topic topic
private topic control
private string url
private int size   256
private int subscribers   1
private int remaining
private int messages   10000
private long delay
private int batch   40
private byte payload
public static void main string argv  throws exception
topicpublisher p   new topicpublisher
string unknown   commandlinesupport setoptions p  argv
if  unknown length > 0
system out println     arrays tostring unknown
system exit  1
p run
private void run   throws exception
activemqconnectionfactory factory   new activemqconnectionfactory url
connection   factory createconnection
session   connection createsession false  session auto_acknowledge
topic   session createtopic
control   session createtopic
publisher   session createproducer topic
publisher setdeliverymode deliverymode non_persistent
payload   new byte
for  int i   0  i < size  i
payload    byte data
session createconsumer control  setmessagelistener this
connection start
long times   new long
for  int i   0  i < batch  i
if  i > 0
thread sleep delay   1000
times   batch messages
system out println      i   1        batch       times
long min   min times
long max   max times
system out println     min       max       avg times  min  max
// request shutdown
publisher send session createtextmessage
connection stop
connection close
private long batch int msgcount  throws exception
long start   system currenttimemillis
remaining   subscribers
publish
waitforcompletion
return system currenttimemillis     start
private void publish   throws exception
// send events
bytesmessage msg   session createbytesmessage
msg writebytes payload
for  int i   0  i < messages  i
publisher send msg
if   i   1  % 1000    0
system out println      i   1
// request report
publisher send session createtextmessage
private void waitforcompletion   throws exception
system out println
synchronized  mutex
while  remaining > 0
mutex wait
public void onmessage message message
synchronized  mutex
system out println     getreport message          remaining
if  remaining    0
mutex notify
object getreport message m
try
return   textmessage m  gettext
catch  jmsexception e
e printstacktrace system out
return e tostring
static long min long times
long min   times length > 0 ? times   0
for  int i   0  i < times length  i
min   math min min  times
return min
static long max long times
long max   times length > 0 ? times   0
for  int i   0  i < times length  i
max   math max max  times
return max
static long avg long times  long min  long max
long sum   0
for  int i   0  i < times length  i
sum    times
sum    min
sum    max
return sum   times length   2
public void setbatch int batch
this batch   batch
public void setdelay long delay
this delay   delay
public void setmessages int messages
this messages   messages
public void setsize int size
this size   size
public void setsubscribers int subscribers
this subscribers   subscribers
public void seturl string url
this url   url