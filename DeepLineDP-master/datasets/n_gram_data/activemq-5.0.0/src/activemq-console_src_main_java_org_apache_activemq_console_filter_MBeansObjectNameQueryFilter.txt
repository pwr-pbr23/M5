/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console filter
import java io ioexception
import java net malformedurlexception
import java util arraylist
import java util iterator
import java util list
import javax management mbeanserverconnection
import javax management malformedobjectnameexception
import javax management objectname
import javax management queryexp
import javax management remote jmxconnector
import javax management remote jmxconnectorfactory
import javax management remote jmxserviceurl
public class mbeansobjectnamequeryfilter extends abstractqueryfilter
public static final string default_jmx_domain
public static final string query_exp_prefix
private jmxserviceurl jmxserviceurl
/**
* creates an mbeans object name query filter that will query on the given
* jmx service url
*
* @param jmxurl - jmx service url to connect to
* @throws malformedurlexception
*/
public mbeansobjectnamequeryfilter string jmxurl  throws malformedurlexception
this new jmxserviceurl jmxurl
/**
* creates an mbeans objecet name query filter that will query on the given
* jmx service url
*
* @param jmxurl - jmx service url to connect to
*/
public mbeansobjectnamequeryfilter jmxserviceurl jmxurl
super null
this jmxserviceurl   jmxurl
/**
* queries the jmx service using a mapping of keys and values to construct
* the object name
*
* @param queries - mapping of keys and values
* @return collection of objectinstance that matches the query
* @throws malformedobjectnameexception - if the given string is an invalid
*                 object name
* @throws ioexception - if there is a problem querying the jmx context
*/
public list query list queries  throws malformedobjectnameexception  ioexception
// query all mbeans
if  queries    null    queries isempty
return querymbeans new objectname default_jmx_domain       null
// constructs object name query
string objnamequery
string queryexp
for  iterator i   queries iterator    i hasnext
string key    string i next
string val
int pos   key indexof
if  pos >  0
val   key substring pos   1
key   key substring 0  pos
if  val startswith query_exp_prefix
// do nothing as of the moment
else if   key equals        val equals
objnamequery   objnamequery   key       val
// append * to object name
objnamequery   objnamequery
return querymbeans new objectname default_jmx_domain       objnamequery   queryexp
/**
* advance query that enables you to specify both the object name and the
* query expression to use. note: query expression is currently unsupported.
*
* @param objname - object name to use for query
* @param queryexpstr - query expression string
* @return set of mbeans that matches the query
* @throws ioexception - if there is a problem querying the jmx context
*/
protected list querymbeans objectname objname  string queryexpstr  throws ioexception
jmxconnector jmxconn   createjmxconnector
mbeanserverconnection server   jmxconn getmbeanserverconnection
queryexp queryexp   createqueryexp queryexpstr
// convert mbeans set to list to make it standard throughout the query
// filter
list mbeans   new arraylist server querymbeans objname  queryexp
jmxconn close
return mbeans
/**
* get the jmx service url the query is connecting to.
*
* @return jmx service url
*/
public jmxserviceurl getjmxserviceurl
return jmxserviceurl
/**
* sets the jmx service url the query is going to connect to.
*
* @param jmxserviceurl - new jmx service url
*/
public void setjmxserviceurl jmxserviceurl jmxserviceurl
this jmxserviceurl   jmxserviceurl
/**
* sets the jmx service url the query is going to connect to.
*
* @param jmxserviceurl - new jmx service url
*/
public void setjmxserviceurl string jmxserviceurl  throws malformedurlexception
setjmxserviceurl new jmxserviceurl jmxserviceurl
/**
* creates a jmx connector
*
* @return jmx connector
* @throws ioexception
*/
protected jmxconnector createjmxconnector   throws ioexception
return jmxconnectorfactory connect getjmxserviceurl
/**
* creates a query expression based on the query expression string note:
* currently unsupported
*
* @param queryexpstr - query expression string
* @return the created query expression
*/
protected queryexp createqueryexp string queryexpstr
// currently unsupported
return null