/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq ra
import java io printwriter
import java util iterator
import java util set
import javax jms jmsexception
import javax resource resourceexception
import javax resource spi connectionmanager
import javax resource spi connectionrequestinfo
import javax resource spi managedconnection
import javax resource spi managedconnectionfactory
import javax resource spi resourceadapter
import javax resource spi resourceadapterassociation
import javax security auth subject
/**
* @version $revisio n$ todo: must override equals and hashcode (jca spec 16.4)
* @org.apache.xbean.xbean element="managedconnectionfactory"
*/
public class activemqmanagedconnectionfactory implements managedconnectionfactory  resourceadapterassociation
private static final long serialversionuid   6196921962230582875l
private messageresourceadapter adapter
private printwriter logwriter
private activemqconnectionrequestinfo info   new activemqconnectionrequestinfo
/**
* @see javax.resource.spi.resourceadapterassociation#setresourceadapter(javax.resource.spi.resourceadapter)
*/
public void setresourceadapter resourceadapter adapter  throws resourceexception
if    adapter instanceof messageresourceadapter
throw new resourceexception     messageresourceadapter class getname
this adapter    messageresourceadapter adapter
activemqconnectionrequestinfo baseinfo   this adapter getinfo   copy
if  info getclientid      null
info setclientid baseinfo getclientid
if  info getpassword      null
info setpassword baseinfo getpassword
if  info getserverurl      null
info setserverurl baseinfo getserverurl
if  info getuseinboundsession      null
info setuseinboundsession baseinfo getuseinboundsession
if  info getusername      null
info setusername baseinfo getusername
/**
* @see java.lang.object#equals(java.lang.object)
*/
@override
public boolean equals object object
if  object    null    object getclass      activemqmanagedconnectionfactory class
return false
return   activemqmanagedconnectionfactory object  info equals info
/**
* @see java.lang.object#hashcode()
*/
@override
public int hashcode
return info hashcode
/**
* @see javax.resource.spi.resourceadapterassociation#getresourceadapter()
*/
public resourceadapter getresourceadapter
return adapter
/**
* @see javax.resource.spi.managedconnectionfactory#createconnectionfactory(javax.resource.spi.connectionmanager)
*/
public object createconnectionfactory connectionmanager manager  throws resourceexception
return new activemqconnectionfactory this  manager  info
/**
* this is used when not running in an app server. for now we are creating a
* connectionfactory that has our simpleconnectionmanager implementation but
* it may be a better idea to not support this. the jms api will have many
* quirks the user may not expect when running through the resource adapter.
*
* @see javax.resource.spi.managedconnectionfactory#createconnectionfactory()
*/
public object createconnectionfactory   throws resourceexception
return new activemqconnectionfactory this  new simpleconnectionmanager    info
/**
* @see javax.resource.spi.managedconnectionfactory#createmanagedconnection(javax.security.auth.subject,
*      javax.resource.spi.connectionrequestinfo)
*/
public managedconnection createmanagedconnection subject subject  connectionrequestinfo info  throws resourceexception
try
if  info    null
info   this info
activemqconnectionrequestinfo amqinfo    activemqconnectionrequestinfo info
return new activemqmanagedconnection subject  adapter makeconnection amqinfo   amqinfo
catch  jmsexception e
throw new resourceexception    e
/**
* @see javax.resource.spi.managedconnectionfactory#matchmanagedconnections(java.util.set,
*      javax.security.auth.subject,
*      javax.resource.spi.connectionrequestinfo)
*/
public managedconnection matchmanagedconnections set connections  subject subject  connectionrequestinfo info  throws resourceexception
iterator iterator   connections iterator
while  iterator hasnext
activemqmanagedconnection c    activemqmanagedconnection iterator next
if  c matches subject  info
try
c associate subject   activemqconnectionrequestinfo info
return c
catch  jmsexception e
throw new resourceexception e
return null
/**
* @see javax.resource.spi.managedconnectionfactory#setlogwriter(java.io.printwriter)
*/
public void setlogwriter printwriter logwriter  throws resourceexception
this logwriter   logwriter
/**
* @see javax.resource.spi.managedconnectionfactory#getlogwriter()
*/
public printwriter getlogwriter   throws resourceexception
return logwriter
// /////////////////////////////////////////////////////////////////////////
//
// bean setters and getters.
//
// /////////////////////////////////////////////////////////////////////////
/**
*
*/
public string getclientid
return info getclientid
/**
*
*/
public string getpassword
return info getpassword
/**
*
*/
public string getusername
return info getusername
/**
*
*/
public void setclientid string clientid
info setclientid clientid
/**
*
*/
public void setpassword string password
info setpassword password
/**
*
*/
public void setusername string userid
info setusername userid
/**
*
*/
/**
*
*/
public boolean getuseinboundsession
return info getuseinboundsession
/**
*
*/
public void setuseinboundsession boolean useinboundsession
info setuseinboundsession useinboundsession
/**
*
*/
public boolean isuseinboundsessionenabled
return info isuseinboundsessionenabled
// redelivery policy configuration
/**
*
*/
public long getinitialredeliverydelay
return info getinitialredeliverydelay
/**
*
*/
public integer getmaximumredeliveries
return info getmaximumredeliveries
/**
*
*/
public short getredeliverybackoffmultiplier
return info getredeliverybackoffmultiplier
/**
*
*/
public boolean getredeliveryuseexponentialbackoff
return info getredeliveryuseexponentialbackoff
/**
*
*/
public void setinitialredeliverydelay long value
info setinitialredeliverydelay value
/**
*
*/
public void setmaximumredeliveries integer value
info setmaximumredeliveries value
/**
*
*/
public void setredeliverybackoffmultiplier short value
info setredeliverybackoffmultiplier value
/**
*
*/
public void setredeliveryuseexponentialbackoff boolean value
info setredeliveryuseexponentialbackoff value
// prefetch policy configuration
/**
*
*/
public integer getdurabletopicprefetch
return info getdurabletopicprefetch
/**
*
*/
public integer getinputstreamprefetch
return info getinputstreamprefetch
/**
*
*/
public integer getqueuebrowserprefetch
return info getqueuebrowserprefetch
/**
*
*/
public integer getqueueprefetch
return info getqueueprefetch
/**
*
*/
public integer gettopicprefetch
return info gettopicprefetch
/**
*
*/
public void setallprefetchvalues integer i
info setallprefetchvalues i
/**
*
*/
public void setdurabletopicprefetch integer durabletopicprefetch
info setdurabletopicprefetch durabletopicprefetch
/**
*
*/
public void setinputstreamprefetch integer inputstreamprefetch
info setinputstreamprefetch inputstreamprefetch
/**
*
*/
public void setqueuebrowserprefetch integer queuebrowserprefetch
info setqueuebrowserprefetch queuebrowserprefetch
/**
*
*/
public void setqueueprefetch integer queueprefetch
info setqueueprefetch queueprefetch
/**
* @param topicprefetch
*/
public void settopicprefetch integer topicprefetch
info settopicprefetch topicprefetch