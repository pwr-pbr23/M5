/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 ola bini <ola.bini@gmail.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby internal runtime methods
import org jruby ruby
import org jruby rubymodule
import org jruby exceptions jumpexception
import org jruby parser staticscope
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime frame
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
import org jruby ast executable rubiniusmachine
import org jruby ast executable rubiniuscmethod
import org jruby internal runtime jumptarget
import org jruby runtime eventhook
import org jruby lexer yacc isourceposition
/**
* @author <a href="mailto:ola.bini@ki.se">ola bini</a>
*/
public class rubiniusmethod extends dynamicmethod implements jumptarget
private rubiniuscmethod cmethod
private staticscope staticscope
private arity arity
public rubiniusmethod rubymodule implementationclass  rubiniuscmethod cmethod  staticscope staticscope  visibility visibility
super implementationclass  visibility  callconfiguration frame_and_scope
this staticscope   staticscope
this cmethod   cmethod
this arity   arity optional
public irubyobject call threadcontext context  irubyobject self  rubymodule klazz  string name  irubyobject args  block block
assert args    null
//        system.err.println("--- entering " + cmethod.name);
ruby runtime   context getruntime
callconfig pre context  self  klazz  getarity    name  args  block  staticscope  this
try
if  runtime haseventhooks
tracecall context  runtime  name
return rubiniusmachine instance exec context  self  cmethod code  cmethod literals  args
catch  jumpexception returnjump rj
if  rj gettarget      this  return  irubyobject  rj getvalue
throw rj
finally
if  runtime haseventhooks
tracereturn context  runtime  name
callconfig post context
//              system.err.println("--- returning from " + cmethod.name);
private void tracereturn threadcontext context  ruby runtime  string name
if   runtime haseventhooks
return
frame frame   context getpreviousframe
runtime calleventhooks context  eventhook ruby_event_return  frame getfile    frame getline    name  getimplementationclass
private void tracecall threadcontext context  ruby runtime  string name
if   runtime haseventhooks
return
runtime calleventhooks context  eventhook ruby_event_call  context getfile    context getline    name  getimplementationclass
public arity getarity
return this arity
public dynamicmethod dup
return new rubiniusmethod getimplementationclass    cmethod  staticscope  getvisibility
rubiniusmethod