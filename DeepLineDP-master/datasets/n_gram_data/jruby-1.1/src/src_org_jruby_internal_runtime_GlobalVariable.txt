/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2002-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby internal runtime
import java util arraylist
import org jruby ruby
import org jruby rubyproc
import org jruby runtime iaccessor
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
/**
*
* @author jpetersen
*/
public final class globalvariable
private iaccessor accessor
private arraylist<irubyobject> traces   null
private boolean tracing
public globalvariable iaccessor accessor
this accessor   accessor
public static globalvariable newundefined ruby runtime  string name
globalvariable variable   new globalvariable null
variable setaccessor new undefinedaccessor runtime  variable  name
return variable
public iaccessor getaccessor
return accessor
public arraylist gettraces
return traces
public void addtrace rubyproc command
if  traces    null
traces   new arraylist<irubyobject>
traces add command
public boolean removetrace irubyobject command
if  traces    null     traces contains command
return false
traces remove command
return true
public void removetraces
traces   null
public void setaccessor iaccessor accessor
this accessor   accessor
public boolean istracing
return tracing
public void trace irubyobject value
if  traces    null  return
threadcontext context   value getruntime   getcurrentcontext
if  context iswithintrace    return
try
context setwithintrace true
for  int i   0  i < traces size    i
rubyproc traces get i   call context  new irubyobject  value
finally
context setwithintrace false