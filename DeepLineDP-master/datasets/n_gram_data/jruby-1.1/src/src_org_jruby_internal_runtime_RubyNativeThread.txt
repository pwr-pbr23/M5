/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 charles o nutter <headius@headius.com>
* copyright (c) 2004 jan arne petersen <jpetersen@uni-bonn.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby internal runtime
import org jruby ruby
import org jruby rubyproc
import org jruby rubythread
import org jruby rubythreadgroup
import org jruby exceptions jumpexception
import org jruby exceptions raiseexception
import org jruby exceptions threadkill
import org jruby runtime block
import org jruby runtime frame
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
public class rubynativethread extends thread
private ruby runtime
private frame currentframe
private rubyproc proc
private irubyobject arguments
private rubythread rubythread
public rubynativethread rubythread rubythread  irubyobject args  block currentblock
super rubythread getruntime   getthreadservice   getrubythreadgroup        rubythread hash
setdaemon true
this rubythread   rubythread
this runtime   rubythread getruntime
threadcontext tc   runtime getcurrentcontext
proc   runtime newproc block type thread  currentblock
currentframe   tc getcurrentframe
this arguments   args
public rubythread getrubythread
return rubythread
public void run
threadcontext context   runtime getthreadservice   registernewthread rubythread
context prerunthread currentframe
// call the thread's code
try
irubyobject result   proc call context  arguments
rubythread cleanterminate result
catch  threadkill tk
// notify any killer waiting on our thread that we're going bye-bye
synchronized  rubythread killlock
rubythread killlock notifyall
catch  jumpexception returnjump rj
rubythread exceptionraised runtime newthreaderror
catch  raiseexception e
rubythread exceptionraised e
finally
runtime getthreadservice   setcritical false
runtime getthreadservice   unregisterthread rubythread
rubythreadgroup rubythread group    remove rubythread