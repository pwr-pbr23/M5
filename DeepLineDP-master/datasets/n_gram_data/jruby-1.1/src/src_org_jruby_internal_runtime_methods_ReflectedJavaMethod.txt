/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 peter brant <peter.brant@gmail.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby internal runtime methods
import java lang reflect invocationtargetexception
import java lang reflect method
import java lang reflect modifier
import org jruby ruby
import org jruby rubymodule
import org jruby anno jrubymethod
import org jruby exceptions jumpexception
import org jruby exceptions raiseexception
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime eventhook
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
public class reflectedjavamethod extends javamethod
private final method method
private final boolean needsblock
private final boolean isstatic
private final int required
private final int optional
private final boolean rest
private final int max
private final boolean argsasis
private final boolean needsthreadcontext
public reflectedjavamethod
rubymodule implementationclass  method method  jrubymethod annotation
super implementationclass  annotation visibility
this method   method
class<?> params   method getparametertypes
this needsblock   params length > 0    params    block class
this isstatic   modifier isstatic method getmodifiers
arity arity   arity fromannotation annotation  params  this isstatic
setarity arity
this required   arity getvalue   >  0 ? arity getvalue     math abs arity getvalue    1
this optional   annotation optional
this rest   annotation rest
this needsthreadcontext   params length > 0    params    threadcontext class
this argsasis     isstatic    optional    0     rest     needsblock     needsthreadcontext
if  rest
max    1
else
max   required   optional
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name
irubyobject args  block block
ruby runtime   context getruntime
arity checkargumentcount runtime  args  required  max
callconfig pre context  self  getimplementationclass    arity  name  args  block  null  this
try
if    isstatic      method getdeclaringclass   isassignablefrom self getclass
throw new classcastexception
self getclass   getname
method getdeclaringclass   getname
if  argsasis
boolean istrace   runtime haseventhooks
try
if  istrace
runtime calleventhooks context  eventhook ruby_event_c_call  context getfile    context getline    name  getimplementationclass
return  irubyobject method invoke self   object args
finally
if  istrace
runtime calleventhooks context  eventhook ruby_event_c_return  context getfile    context getline    name  getimplementationclass
else
int argslength   calcargslength
object params   new object
int offset   0
if  needsthreadcontext
params   context
if  isstatic
params   self
if  optional    0     rest
for  int i   0  i < args length  i
params   args
else
params   args
if  needsblock
params   block
boolean istrace   runtime haseventhooks
try
if  istrace
runtime calleventhooks context  eventhook ruby_event_c_call  context getfile    context getline    name  getimplementationclass
if  isstatic
return  irubyobject method invoke null  params
else
return  irubyobject method invoke self  params
finally
if  istrace
runtime calleventhooks context  eventhook ruby_event_c_return  context getfile    context getline    name  getimplementationclass
catch  illegalargumentexception e
throw raiseexception createnativeraiseexception runtime  e
catch  illegalaccessexception e
throw raiseexception createnativeraiseexception runtime  e
catch  invocationtargetexception e
throwable cause   e getcause
if  cause instanceof jumpexception returnjump
jumpexception flowcontrolexception f    jumpexception flowcontrolexception cause
if  f gettarget      this
return  irubyobject f getvalue
else
throw f
else if  cause instanceof jumpexception redojump
throw runtime newlocaljumperror    runtime getnil
else if  cause instanceof runtimeexception
throw  runtimeexception cause
else if  cause instanceof error
throw  error cause
else
throw raiseexception createnativeraiseexception runtime  cause
finally
callconfig post context
private int calcargslength
int argslength   0
if  needsthreadcontext
argslength
if  isstatic
argslength
if  optional    0     rest
argslength    required
else
argslength
if  needsblock
argslength
return argslength