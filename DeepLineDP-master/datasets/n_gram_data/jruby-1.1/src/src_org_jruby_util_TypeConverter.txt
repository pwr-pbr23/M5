/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby util
import org jruby rubyboolean
import org jruby rubyclass
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
public class typeconverter
/**
* converts this object to type 'targettype' using 'convertmethod' method (mri: convert_type).
*
* @param targettype is the type we are trying to convert to
* @param convertmethod is the method to be called to try and convert to targetype
* @param raiseonerror will throw an error if conversion does not work
* @return the converted value
*/
public static final irubyobject converttotype irubyobject obj  rubyclass target  int convertmethodindex  string convertmethod  boolean raise
if   obj respondsto convertmethod
if  raise
string type
if  obj isnil
type
else if  obj instanceof rubyboolean
type   obj istrue   ?
else
type   obj getmetaclass   getrealclass   getname
throw obj getruntime   newtypeerror     type       target
else
return obj getruntime   getnil
return obj callmethod obj getruntime   getcurrentcontext    convertmethodindex  convertmethod
/**
* converts this object to type 'targettype' using 'convertmethod' method and raises typeerror exception on failure (mri: rb_convert_type).
*
* @param targettype is the type we are trying to convert to
* @param convertmethod is the method to be called to try and convert to targetype
* @return the converted value
*/
public static final irubyobject converttotype irubyobject obj  rubyclass target  int convertmethodindex  string convertmethod
if  target isinstance obj   return obj
irubyobject val   converttotype obj  target  convertmethodindex  convertmethod  true
if   target isinstance val   throw obj getruntime   newtypeerror obj getmetaclass         convertmethod       target getname
return val
/**
* higher level conversion utility similar to converttotype but it can throw an
* additional typeerror during conversion (mri: rb_check_convert_type).
*
* @param targettype is the type we are trying to convert to
* @param convertmethod is the method to be called to try and convert to targetype
* @return the converted value
*/
public static final irubyobject converttotypewithcheck irubyobject obj  rubyclass target  int convertmethodindex  string convertmethod
if  target isinstance obj   return obj
irubyobject val   typeconverter converttotype obj  target  convertmethodindex  convertmethod  false
if  val isnil    return val
if   target isinstance val   throw obj getruntime   newtypeerror obj getmetaclass         convertmethod       target getname
return val