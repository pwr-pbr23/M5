/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2006 ola bini <ola.bini@ki.se>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby util
import java io inputstream
import java io ioexception
import org jruby rubyfixnum
import org jruby rubyio
import org jruby rubystring
import org jruby runtime callsite
import org jruby runtime calltype
import org jruby runtime builtin irubyobject
/**
* this class wraps a irubyobject in an inputstream. depending on which messages
* the irubyobject answers to, it will have different functionality.
*
* the point is that the irubyobject could exhibit duck typing, in the style of io versus stringio, for example.
*
* at the moment, the only functionality supported is reading, and the only requirement on the io-object is
* that it responds to read() like io.
*/
public class ioinputstream extends inputstream
private irubyobject io
private inputstream in
private final irubyobject numone
private callsite readadapter   new callsite inlinecachingcallsite    calltype functional
/**
* creates a new inputstream with the object provided.
*
* @param io the ruby object
*/
public ioinputstream irubyobject io
if   io respondsto
throw new illegalargumentexception     io    read
this io   io
if  io instanceof rubyio
in     rubyio io  getinstream
this numone   rubyfixnum one this io getruntime
@override
public void close   throws ioexception
if  in    null
in close
// note: this method produces meaningful results
// only for rubyio objects. for everything else returns 0.
@override
public int available   throws ioexception
if  in    null
return in available
else
return 0
public int read   throws ioexception
irubyobject readvalue   readadapter call io getruntime   getcurrentcontext    io  numone
int returnvalue    1
if   readvalue isnil
returnvalue   readvalue tostring   charat 0
return returnvalue
public int read byte b  throws ioexception
irubyobject readvalue   readadapter call io getruntime   getcurrentcontext    io  io getruntime   newfixnum b length
int returnvalue    1
if   readvalue isnil
bytelist str     rubystring readvalue  getbytelist
system arraycopy str bytes  str begin  b  0  str realsize
returnvalue   str realsize
return returnvalue
public int read byte b  int off  int len  throws ioexception
irubyobject readvalue   readadapter call io getruntime   getcurrentcontext    io  io getruntime   newfixnum len
int returnvalue    1
if   readvalue isnil
bytelist str     rubystring readvalue  getbytelist
system arraycopy str bytes  str begin  b  off  str realsize
returnvalue   str realsize
return returnvalue