/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 thomas e enebo <enebo@acm.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby runtime
import org jruby rubymodule
import org jruby ast iternode
import org jruby runtime builtin irubyobject
/**
* represents the live state of a for or end construct in ruby.  this is different from an
* ordinary block in that it does not have its own scoped variables.  it leeches those from
* the next outer scope.  because of this we do not set up, clone, nor tear down scope-related
* stuff.  also because of this we do not need to clone the block since it state does not change.
*
*/
public class sharedscopeblock extends interpretedblock
protected sharedscopeblock iternode iternode
super iternode  asargumenttype getargumenttypewackyhack iternode
public static block newinterpretedsharedscopeclosure threadcontext context  iternode iternode  dynamicscope dynamicscope  irubyobject self
binding binding   new binding self
context getcurrentframe   duplicate
context getcurrentframe   getvisibility
context getrubyclass
dynamicscope
blockbody body   new sharedscopeblock iternode
return new block body  binding
protected void pre threadcontext context  rubymodule klass  binding binding
context preforblock binding  klass
public irubyobject call threadcontext context  irubyobject args  irubyobject replacementself  binding binding  block type type
return yield context  context getruntime   newarraynocopy args   null  null  true  binding  type
public block cloneblock binding binding
return new block this  binding