package org jruby demo
import java awt color
import java awt point
import java awt event keyevent
import java awt event keylistener
import java io ioexception
import java io outputstream
import java io unsupportedencodingexception
import java util iterator
import java util linkedlist
import java util list
import javax swing defaultlistcellrenderer
import javax swing jcombobox
import javax swing plaf basic basiccombopopup
import javax swing text abstractdocument
import javax swing text attributeset
import javax swing text badlocationexception
import javax swing text documentfilter
import javax swing text jtextcomponent
import javax swing text mutableattributeset
import javax swing text simpleattributeset
import javax swing text styleconstants
import org jruby ruby
import org jruby rubyio
import org jruby rubymodule
import org jruby rubystring
import org jruby ext readline
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime builtin irubyobject
import org jruby runtime callback callback
public class textareareadline extends outputstream implements keylistener
jtextcomponent area
private int startpos
private string currentline
private object amediting   new object
public mutableattributeset promptstyle
public mutableattributeset inputstyle
public mutableattributeset outputstyle
public mutableattributeset resultstyle
private jcombobox completecombo
private basiccombopopup completepopup
private int start
private int end
private volatile boolean finished   false
public textareareadline jtextcomponent area
this area  null
public textareareadline jtextcomponent area  final string message
this area   area
area addkeylistener this
// no editing before startpos
if  area getdocument   instanceof abstractdocument
abstractdocument  area getdocument    setdocumentfilter
new documentfilter
public void insertstring documentfilter filterbypass fb  int offset  string string  attributeset attr  throws badlocationexception
if  offset >  startpos  super insertstring fb  offset  string  attr
public void remove documentfilter filterbypass fb  int offset  int length  throws badlocationexception
if  offset >  startpos  super remove fb  offset  length
public void replace documentfilter filterbypass fb  int offset  int length  string text  attributeset attrs  throws badlocationexception
if  offset >  startpos  super replace fb  offset  length  text  attrs
promptstyle   new simpleattributeset
styleconstants setforeground promptstyle  new color 0xa4  0x00  0x00
inputstyle   new simpleattributeset
styleconstants setforeground inputstyle  new color 0x20  0x4a  0x87
outputstyle   new simpleattributeset
styleconstants setforeground outputstyle  color darkgray
resultstyle   new simpleattributeset
styleconstants setitalic resultstyle  true
styleconstants setforeground resultstyle  new color 0x20  0x4a  0x87
completecombo   new jcombobox
completecombo setrenderer new defaultlistcellrenderer        no silly ticks
completepopup   new basiccombopopup completecombo
if  message    null
final mutableattributeset messagestyle   new simpleattributeset
styleconstants setbackground messagestyle  area getforeground
styleconstants setforeground messagestyle  area getbackground
append message  messagestyle
private ruby runtime
public void hookintoruntime final ruby runtime
this runtime   runtime
/* hack in to replace usual readline with this */
runtime getloadservice   require
rubymodule readlinem   runtime fastgetmodule
rubyio out   new rubyio runtime  this
runtime getglobalvariables   set    out
runtime getglobalvariables   set    out
readlinem definemodulefunction    new callback
public irubyobject execute irubyobject recv  irubyobject args  block block
return rubystring newunicodestring runtime  readline args tostring
public arity getarity     return arity twoarguments
protected void completeaction keyevent event
if  readline getcompletor readline getholder runtime      null  return
event consume
if  completepopup isvisible    return
list candidates   new linkedlist
string bufstr   null
try
bufstr   area gettext startpos  area getcaretposition     startpos
catch  badlocationexception e
return
int cursor   area getcaretposition     startpos
int position   readline getcompletor readline getholder runtime   complete bufstr  cursor  candidates
// no candidates? fail.
if  candidates isempty
return
if  candidates size      1
replacetext startpos   position  area getcaretposition     string  candidates get 0
return
start   startpos   position
end   area getcaretposition
point pos   area getcaret   getmagiccaretposition
// bit risky if someone changes completor, but useful for method calls
int cutoff   bufstr substring position  lastindexof      1
start    cutoff
if  candidates size   < 10
completepopup getlist   setvisiblerowcount candidates size
else
completepopup getlist   setvisiblerowcount 10
completecombo removeallitems
for  iterator i   candidates iterator    i hasnext
string item    string  i next
if  cutoff    0  item   item substring cutoff
completecombo additem item
completepopup show area  pos x  pos y   area getfontmetrics area getfont    getheight
protected void backaction keyevent event
if  area getcaretposition   <  startpos
event consume
protected void upaction keyevent event
event consume
if  completepopup isvisible
int selected   completecombo getselectedindex     1
if  selected < 0  return
completecombo setselectedindex selected
return
if   readline gethistory readline getholder runtime   next       at end
currentline   getline
else
readline gethistory readline getholder runtime   previous       undo check
if   readline gethistory readline getholder runtime   previous    return
string oldline   readline gethistory readline getholder runtime   current   trim
replacetext startpos  area getdocument   getlength    oldline
protected void downaction keyevent event
event consume
if  completepopup isvisible
int selected   completecombo getselectedindex     1
if  selected    completecombo getitemcount    return
completecombo setselectedindex selected
return
if   readline gethistory readline getholder runtime   next    return
string oldline
if   readline gethistory readline getholder runtime   next       at end
oldline   currentline
else
readline gethistory readline getholder runtime   previous       undo check
oldline   readline gethistory readline getholder runtime   current   trim
replacetext startpos  area getdocument   getlength    oldline
protected void replacetext int start  int end  string replacement
try
area getdocument   remove start  end   start
area getdocument   insertstring start  replacement  inputstyle
catch  badlocationexception e
e printstacktrace
protected string getline
try
return area gettext startpos  area getdocument   getlength     startpos
catch  badlocationexception e
e printstacktrace
return null
protected void enteraction keyevent event
event consume
if  completepopup isvisible
if  completecombo getselecteditem      null
replacetext start  end   string  completecombo getselecteditem
completepopup setvisible false
return
append    null
synchronized  amediting
amediting notify
void notifyfinished
synchronized  amediting
finished   true
amediting notify
public string readline final string prompt
append prompt trim    promptstyle
append    inputstyle      hack to get right style for input
area setcaretposition area getdocument   getlength
startpos   area getdocument   getlength
readline gethistory readline getholder runtime   movetoend
synchronized  amediting
if  finished  return
try
amediting wait
catch  interruptedexception e
string result   finished?    getline   trim
return result
public void keypressed keyevent event
int code   event getkeycode
switch  code
case keyevent vk_tab  completeaction event   break
case keyevent vk_left
case keyevent vk_back_space
backaction event   break
case keyevent vk_up  upaction event   break
case keyevent vk_down  downaction event   break
case keyevent vk_enter  enteraction event   break
case keyevent vk_home  event consume    area setcaretposition startpos   break
if  completepopup isvisible
code     keyevent vk_tab
code    keyevent vk_up
code    keyevent vk_down
completepopup setvisible false
public void keyreleased keyevent arg0
public void keytyped keyevent arg0
/** output methods **/
protected void append string toappend  attributeset style
try
area getdocument   insertstring area getdocument   getlength    toappend  style
catch  badlocationexception e
public void writeline final string line
if  line startswith     append line  resultstyle
else append line  outputstyle
public void write int b  throws ioexception
writeline     b
public void write byte b  int off  int len
try
writeline new string b  off  len
catch  unsupportedencodingexception ex
writeline new string b  off  len
public void write byte b
try
writeline new string b
catch  unsupportedencodingexception ex
writeline new string b