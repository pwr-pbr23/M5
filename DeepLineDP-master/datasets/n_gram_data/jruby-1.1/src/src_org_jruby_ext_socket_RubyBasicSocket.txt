/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 ola bini <ola@ologix.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby ext socket
import java io eofexception
import java io ioexception
import java nio channels channel
import java nio channels socketchannel
import java nio channels serversocketchannel
import java nio channels datagramchannel
import java net socket
import java net serversocket
import java net datagramsocket
import java net socketaddress
import java net inetsocketaddress
import org jruby util io openfile
import org jruby ruby
import org jruby rubyboolean
import org jruby rubyclass
import org jruby rubynumeric
import org jruby rubyio
import org jruby rubystring
import org jruby runtime callbackfactory
import org jruby runtime objectallocator
import org jruby runtime builtin irubyobject
import org jruby util io baddescriptorexception
import org jruby util io channelstream
import org jruby util io modeflags
import org jruby util io channeldescriptor
/**
* @author <a href="mailto:ola.bini@ki.se">ola bini</a>
*/
public class rubybasicsocket extends rubyio
private static objectallocator basicsocket_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new rubybasicsocket runtime  klass
static void createbasicsocket ruby runtime
rubyclass rb_cbasicsocket   runtime defineclass    runtime getio    basicsocket_allocator
callbackfactory cfact   runtime callbackfactory rubybasicsocket class
rb_cbasicsocket definefastmethod    cfact getfastoptmethod
rb_cbasicsocket definefastmethod    cfact getfastoptmethod
rb_cbasicsocket definefastmethod    cfact getfastoptmethod
rb_cbasicsocket definefastmethod    cfact getfastmethod
rb_cbasicsocket definefastmethod    cfact getfastmethod
rb_cbasicsocket definefastmethod    cfact getfastmethod
rb_cbasicsocket definefastmethod    cfact getfastmethod
rb_cbasicsocket definefastmethod    cfact getfastmethod    irubyobject class  irubyobject class
rb_cbasicsocket definefastmethod    cfact getfastmethod    irubyobject class  irubyobject class  irubyobject class
rb_cbasicsocket getmetaclass   definefastmethod    cfact getfastsingletonmethod
rb_cbasicsocket getmetaclass   definefastmethod    cfact getfastsingletonmethod    irubyobject class
public rubybasicsocket ruby runtime  rubyclass type
super runtime  type
protected void initsocket channeldescriptor descriptor
openfile   new openfile
try
openfile setmainstream channelstream fdopen getruntime    descriptor  new modeflags modeflags rdonly
openfile setpipestream channelstream fdopen getruntime    descriptor  new modeflags modeflags wronly
openfile getpipestream   setsync true
catch  org jruby util io invalidvalueexception ex
throw getruntime   newerrnoeinvalerror
openfile setmode openfile readwrite   openfile sync
@override
public irubyobject close_write
try
socketchannel openfile getwritestream   getdescriptor   getchannel    socket   shutdownoutput
openfile getwritestream   fclose
catch  baddescriptorexception ex
throw getruntime   newerrnoebadferror
catch  ioexception e
throw getruntime   newioerror e getmessage
return getruntime   getnil
public irubyobject write_send irubyobject args
return syswrite args
public irubyobject recv irubyobject args
openfile openfile   getopenfilechecked
try
return rubystring newstring getruntime    openfile getmainstream   read rubynumeric fix2int args
catch  baddescriptorexception e
throw getruntime   newerrnoebadferror
catch  eofexception e
// recv returns nil on eof
return getruntime   getnil
catch  ioexception e
// all errors to sysread should be systemcallerrors, but on a closed stream
// ruby returns an ioerror.  java throws same exception for all errors so
// we resort to this hack...
if    equals e getmessage
throw getruntime   newioerror e getmessage
throw getruntime   newsystemcallerror e getmessage
protected inetsocketaddress getlocalsocket
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if  socketchannel instanceof socketchannel
return  inetsocketaddress   socketchannel socketchannel  socket   getlocalsocketaddress
else if  socketchannel instanceof serversocketchannel
return  inetsocketaddress   serversocketchannel  socketchannel  socket   getlocalsocketaddress
else
return null
protected inetsocketaddress getremotesocket
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
return  inetsocketaddress   socketchannel socketchannel  socket   getremotesocketaddress
else
return null
private socket assocket
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if   socketchannel instanceof socketchannel
throw getruntime   newerrnoenoprotoopterror
return   socketchannel socketchannel  socket
private serversocket asserversocket
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if   socketchannel instanceof serversocketchannel
throw getruntime   newerrnoenoprotoopterror
return   serversocketchannel socketchannel  socket
private datagramsocket asdatagramsocket
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if   socketchannel instanceof datagramchannel
throw getruntime   newerrnoenoprotoopterror
return   datagramchannel socketchannel  socket
private irubyobject getbroadcast   throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return truefalse  socketchannel instanceof datagramchannel  ? asdatagramsocket   getbroadcast     false
private void setbroadcast irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof datagramchannel
asdatagramsocket   setbroadcast asboolean val
private void setkeepalive irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
assocket   setkeepalive asboolean val
private void setreuseaddr irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof serversocketchannel
asserversocket   setreuseaddress asboolean val
private void setrcvbuf irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
assocket   setreceivebuffersize asnumber val
else if socketchannel instanceof serversocketchannel
asserversocket   setreceivebuffersize asnumber val
else if socketchannel instanceof datagramchannel
asdatagramsocket   setreceivebuffersize asnumber val
private void settimeout irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
assocket   setsotimeout asnumber val
else if socketchannel instanceof serversocketchannel
asserversocket   setsotimeout asnumber val
else if socketchannel instanceof datagramchannel
asdatagramsocket   setsotimeout asnumber val
private void setsndbuf irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
assocket   setsendbuffersize asnumber val
else if socketchannel instanceof datagramchannel
asdatagramsocket   setsendbuffersize asnumber val
private void setlinger irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
if val instanceof rubyboolean     val istrue
assocket   setsolinger false  0
else
int num   asnumber val
if num     1
assocket   setsolinger false  0
else
assocket   setsolinger true  num
private void setoobinline irubyobject val  throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
if socketchannel instanceof socketchannel
assocket   setoobinline asboolean val
private int asnumber irubyobject val
if val instanceof rubynumeric
return rubynumeric fix2int val
else
return stringasnumber val
private int stringasnumber irubyobject val
string str   val converttostring   tostring
int res   0
res     str charat 0 <<24
res     str charat 1 <<16
res     str charat 2 <<8
res     str charat 3
return res
protected boolean asboolean irubyobject val
if val instanceof rubystring
return stringasnumber val     0
else if val instanceof rubynumeric
return rubynumeric fix2int val     0
else
return val istrue
private irubyobject getkeepalive   throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return truefalse
socketchannel instanceof socketchannel  ? assocket   getkeepalive     false
private irubyobject getlinger   throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return number
socketchannel instanceof socketchannel  ? assocket   getsolinger     0
private irubyobject getoobinline   throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return truefalse
socketchannel instanceof socketchannel  ? assocket   getoobinline     false
private irubyobject getrcvbuf   throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return number
socketchannel instanceof socketchannel  ? assocket   getreceivebuffersize
socketchannel instanceof serversocketchannel  ? asserversocket   getreceivebuffersize
asdatagramsocket   getreceivebuffersize
private irubyobject getsndbuf   throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return number
socketchannel instanceof socketchannel  ? assocket   getsendbuffersize
socketchannel instanceof datagramchannel  ? asdatagramsocket   getsendbuffersize     0
private irubyobject getreuseaddr   throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return truefalse
socketchannel instanceof serversocketchannel  ? asserversocket   getreuseaddress     false
private irubyobject gettimeout   throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return number
socketchannel instanceof socketchannel  ? assocket   getsotimeout
socketchannel instanceof serversocketchannel  ? asserversocket   getsotimeout
socketchannel instanceof datagramchannel  ? asdatagramsocket   getsotimeout     0
protected int getsotypedefault
return 0
private irubyobject getsotype   throws ioexception
channel socketchannel   openfile getmainstream   getdescriptor   getchannel
return number
socketchannel instanceof socketchannel  ? rubysocket sock_stream
socketchannel instanceof serversocketchannel  ? rubysocket sock_stream
socketchannel instanceof datagramchannel  ? rubysocket sock_dgram   getsotypedefault
private irubyobject truefalse boolean val
return getruntime   newstring  val ?
private irubyobject number long s
stringbuffer result   new stringbuffer
result append  char    s>>24   0xff   append  char    s>>16   0xff
result append  char    s >> 8    0xff   append  char   s   0xff
return getruntime   newstring result tostring
public irubyobject getsockopt irubyobject lev  irubyobject optname
int level   rubynumeric fix2int lev
int opt   rubynumeric fix2int optname
try
switch level
case rubysocket sol_ip
case rubysocket sol_socket
case rubysocket sol_tcp
case rubysocket sol_udp
switch opt
case rubysocket so_broadcast
return getbroadcast
case rubysocket so_keepalive
return getkeepalive
case rubysocket so_linger
return getlinger
case rubysocket so_oobinline
return getoobinline
case rubysocket so_rcvbuf
return getrcvbuf
case rubysocket so_reuseaddr
return getreuseaddr
case rubysocket so_sndbuf
return getsndbuf
case rubysocket so_rcvtimeo
case rubysocket so_sndtimeo
return gettimeout
case rubysocket so_type
return getsotype
// can't support the rest with java
case rubysocket so_rcvlowat
return number 1
case rubysocket so_sndlowat
return number 2048
case rubysocket so_debug
case rubysocket so_error
case rubysocket so_dontroute
case rubysocket so_timestamp
return truefalse false
default
throw getruntime   newerrnoenoprotoopterror
default
throw getruntime   newerrnoenoprotoopterror
catch ioexception e
throw getruntime   newerrnoenoprotoopterror
public irubyobject setsockopt irubyobject lev  irubyobject optname  irubyobject val
int level   rubynumeric fix2int lev
int opt   rubynumeric fix2int optname
try
switch level
case rubysocket sol_ip
case rubysocket sol_socket
case rubysocket sol_tcp
case rubysocket sol_udp
switch opt
case rubysocket so_broadcast
setbroadcast val
break
case rubysocket so_keepalive
setkeepalive val
break
case rubysocket so_linger
setlinger val
break
case rubysocket so_oobinline
setoobinline val
break
case rubysocket so_rcvbuf
setrcvbuf val
break
case rubysocket so_reuseaddr
setreuseaddr val
break
case rubysocket so_sndbuf
setsndbuf val
break
case rubysocket so_rcvtimeo
case rubysocket so_sndtimeo
settimeout val
break
// can't support the rest with java
case rubysocket so_type
case rubysocket so_rcvlowat
case rubysocket so_sndlowat
case rubysocket so_debug
case rubysocket so_error
case rubysocket so_dontroute
case rubysocket so_timestamp
break
default
throw getruntime   newerrnoenoprotoopterror
break
default
throw getruntime   newerrnoenoprotoopterror
catch ioexception e
throw getruntime   newerrnoenoprotoopterror
return getruntime   newfixnum 0
public irubyobject getsockname
socketaddress sock   getlocalsocket
if null    sock
throw getruntime   newioerror
return getruntime   newstring sock tostring
public irubyobject getpeername
socketaddress sock   getremotesocket
if null    sock
throw getruntime   newioerror
return getruntime   newstring sock tostring
public irubyobject shutdown irubyobject args
if  getruntime   getsafelevel   >  4    tainted_p   isfalse
throw getruntime   newsecurityerror
int how   2
if  args length > 0
how   rubynumeric fix2int args
if  how < 0    2 < how
throw getruntime   newargumenterror
if  how    2
throw getruntime   newnotimplementederror
return close
public static irubyobject do_not_reverse_lookup irubyobject recv
return recv getruntime   isdonotreverselookupenabled   ? recv getruntime   gettrue     recv getruntime   getfalse
public static irubyobject set_do_not_reverse_lookup irubyobject recv  irubyobject flag
recv getruntime   setdonotreverselookupenabled flag istrue
return recv getruntime   isdonotreverselookupenabled   ? recv getruntime   gettrue     recv getruntime   getfalse
rubybasicsocket