package org jruby ext posix util
import java io file
import java io ioexception
import java lang reflect invocationtargetexception
import java lang reflect method
/**
* honor semantics of chmod as best we can in pure java.  note, this uses reflection to be
* more tolerant of different java versions.
*/
public class chmod
private static final boolean chmod_api_available
private static final method setwritable
private static final method setreadable
private static final method setexecutable
static
boolean apiavailable   false
method setwritablevar   null
method setreadablevar   null
method setexecutablevar   null
try
setwritablevar   file class getmethod    new class  boolean type  boolean type
setreadablevar   file class getmethod    new class  boolean type  boolean type
setexecutablevar   file class getmethod    new class  boolean type  boolean type
apiavailable   true
catch  exception e
// failed to load methods, no chmod api available
setwritable   setwritablevar
setreadable   setreadablevar
setexecutable   setexecutablevar
chmod_api_available   apiavailable
public static int chmod file file  string mode
if  chmod_api_available
// fast version
char other
if  mode length   >  1
other   mode charat mode length     1
//char group = mode.charat(mode.length() - 2);
char user
if  mode length   >  3
user   mode charat mode length     3
//char setuidgid = mode.charat(mode.length() - 3);
// group and setuid/gid are ignored, no way to do them fast. should we fall back on slow?
if   setpermissions file  other  false   return  1
if   setpermissions file  user  true   return  1
else
// slow version
try
process chmod   runtime getruntime   exec     mode       file getabsolutepath
chmod waitfor
return chmod exitvalue
catch  ioexception ioe
// fixme: ignore?
catch  interruptedexception ie
// fixme: ignore?
return  1
private static boolean setpermissions file file  char permchar  boolean useronly
int permvalue   character digit permchar  8
try
if   permvalue   1     0
setexecutable invoke file  new object  boolean true  boolean valueof useronly
else
setexecutable invoke file  new object  boolean false  boolean valueof useronly
if   permvalue   2     0
setwritable invoke file  new object  boolean true  boolean valueof useronly
else
setwritable invoke file  new object  boolean false  boolean valueof useronly
if   permvalue   4     0
setreadable invoke file  new object  boolean true  boolean valueof useronly
else
setreadable invoke file  new object  boolean false  boolean valueof useronly
return true
catch  illegalaccessexception iae
// ignore, return false below
catch  invocationtargetexception ite
// ignore, return false below
return false