/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2006 thomas e enebo <enebo@acm.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby parser
import org jruby ast assignablenode
import org jruby ast localasgnnode
import org jruby ast localvarnode
import org jruby ast node
import org jruby ast vcallnode
import org jruby lexer yacc isourceposition
public class localstaticscope extends staticscope
private static final long serialversionuid   2204064248888411628l
private static final string no_names   new string
public localstaticscope staticscope enclosingscope
this enclosingscope  no_names
public localstaticscope staticscope enclosingscope  string names
super enclosingscope  names
// local scopes are argument scopes by default
setargumentscope true
public staticscope getlocalscope
return this
public int isdefined string name  int depth
return  depth << 16    exists name
/**
* @see org.jruby.parser.staticscope#getallnamesinscope()
*/
public string getallnamesinscope
return getvariables
public assignablenode assign isourceposition position  string name  node value
staticscope topscope  int depth
int slot   exists name
// we can assign if we already have variable of that name here or we are the only
// scope in the chain (which local scopes always are).
if  slot >  0
//system.out.println("lasgn1: " + name + ", l: " + depth + ", i: " + slot);
// mark as captured if from containing scope
if  depth > 0  capture slot
return new localasgnnode position  name    depth << 16    slot   value
else if  topscope    this
slot   addvariable name
//system.out.println("lasgn2: " + name + ", l: " + depth + ", i: " + slot);
return new localasgnnode position  name  slot   value
// we know this is a block scope because a local scope cannot be within a local scope
// if topscope was itself it would have created a localasgnnode above.
return   blockstaticscope  topscope  addassign position  name  value
public node declare isourceposition position  string name  int depth
int slot   exists name
if  slot >  0
// mark as captured if from containing scope
if  depth > 0  capture slot
//system.out.println("lvar: " + name + ", l: " + depth + ", i: " + slot);
return new localvarnode position    depth << 16    slot   name
return new vcallnode position  name