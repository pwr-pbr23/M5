/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 ola bini <ola@ologix.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import org jruby anno jrubymethod
import org jruby javasupport util runtimehelpers
import org jruby runtime block
import org jruby runtime calltype
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
import org jruby util signalfacade
import org jruby util nofunctionalitysignalfacade
public class rubysignal
private final static signalfacade signals   getsignalfacade
private final static signalfacade getsignalfacade
try
class realfacadeclass   class forname
return  signalfacade realfacadeclass newinstance
catch throwable e
return new nofunctionalitysignalfacade
// note: the indicies here match exactly the signal values; do not reorder
public static final string names
public static void createsignal ruby runtime
rubymodule msignal   runtime definemodule
msignal defineannotatedmethods rubysignal class
@jrubymethod name      required   1  optional   1  frame   true  meta   true
public static irubyobject trap threadcontext context  irubyobject recv  irubyobject args  block block
ruby runtime   recv getruntime
runtime getloadservice   require
return runtimehelpers invoke context  runtime getkernel       args  calltype functional  block
@jrubymethod name      meta   true
public static irubyobject list threadcontext context  irubyobject recv
ruby runtime   recv getruntime
rubyhash names   rubyhash newhash runtime
for  int i   0  i < names length  i
names op_aset context  runtime newstring names   runtime newfixnum i
// iot is also 6
names op_aset context  runtime newstring     runtime newfixnum 6
// cld is also 20
names op_aset context  runtime newstring     runtime newfixnum 20
return names
@jrubymethod name      required   3 meta   true
public static irubyobject __jtrap_kernel final irubyobject recv  irubyobject arg1  irubyobject arg2  irubyobject arg3
return signals trap recv  arg1  arg2  arg3
rubysignal