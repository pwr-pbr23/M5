/*
**** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2004 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 jan arne petersen <jpetersen@uni-bonn.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import org jruby anno jrubymethod
import org jruby ext posix posix
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime blockcallback
import org jruby runtime callblock
import org jruby runtime callbackfactory
import org jruby runtime methodindex
import org jruby runtime objectallocator
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
import org jruby runtime callback callback
/**
*/
public class rubyprocess
public static rubymodule createprocessmodule ruby runtime
rubymodule process   runtime definemodule
runtime setprocess process
// todo: not_allocatable_allocator is probably ok here. confirm. jruby-415
rubyclass process_status   process defineclassunder    runtime getobject    objectallocator not_allocatable_allocator
runtime setprocstatus process_status
rubymodule process_uid   process definemoduleunder
runtime setprocuid process_uid
rubymodule process_gid   process definemoduleunder
runtime setprocgid process_gid
rubymodule process_sys   process definemoduleunder
runtime setprocsys process_sys
callbackfactory process_statuscallbackfactory   runtime callbackfactory rubyprocess rubystatus class
process defineannotatedmethods rubyprocess class
process_status defineannotatedmethods rubystatus class
process_uid defineannotatedmethods userid class
process_gid defineannotatedmethods groupid class
process_sys defineannotatedmethods sys class
process defineconstant    runtime newfixnum 0
process defineconstant    runtime newfixnum 1
process defineconstant    runtime newfixnum 2
process defineconstant    runtime newfixnum 1
// process::status methods
callback notimplemented   process_statuscallbackfactory getfastmethod
process_status definemethod    process_statuscallbackfactory getfastmethod    irubyobject class
process_status definemethod    notimplemented
process_status definemethod    notimplemented
process_status definemethod    notimplemented
process_status definemethod    notimplemented
process_status definemethod    notimplemented
process_status definemethod    notimplemented
process_status definemethod    notimplemented
process_status definemethod    notimplemented
return process
public static class rubystatus extends rubyobject
private long status   0l
private static final long exit_success   0l
public rubystatus ruby runtime  rubyclass metaclass  long status
super runtime  metaclass
this status   status
public static rubystatus newprocessstatus ruby runtime  long status
return new rubystatus runtime  runtime getprocstatus    status
public irubyobject not_implemented
string error       getruntime   getcurrentcontext   getframename
throw getruntime   newnotimplementederror error
public irubyobject not_implemented1 irubyobject arg
string error       getruntime   getcurrentcontext   getframename
throw getruntime   newnotimplementederror error
@jrubymethod name
public irubyobject exitstatus
return getruntime   newfixnum status
@jrubymethod name      required   1
public irubyobject op_rshift irubyobject other
long shiftvalue   other converttointeger   getlongvalue
return getruntime   newfixnum status >> shiftvalue
@jrubymethod name      required   1
public irubyobject op_equal threadcontext context  irubyobject other
return other callmethod context  methodindex equalequal     this to_i
@jrubymethod name
public irubyobject to_i
return getruntime   newfixnum shiftedvalue
@jrubymethod name
public irubyobject to_s
return getruntime   newstring string valueof shiftedvalue
@jrubymethod name
public irubyobject inspect
return getruntime   newstring     string valueof status
@jrubymethod name
public irubyobject success_p
return getruntime   newboolean status    exit_success
private long shiftedvalue
return status << 8
public static class userid
@jrubymethod name      required   1  module   true
public static irubyobject change_privilege irubyobject self  irubyobject arg
throw self getruntime   newnotimplementederror
@jrubymethod name      module   true
public static irubyobject eid irubyobject self
return euid self
@jrubymethod name      required   1  module   true
public static irubyobject eid irubyobject self  irubyobject arg
return euid_set self  arg
@jrubymethod name      required   1  module   true
public static irubyobject grant_privilege irubyobject self  irubyobject arg
throw self getruntime   newnotimplementederror
@jrubymethod name      module   true
public static irubyobject re_exchange threadcontext context  irubyobject self
return switch_rb context  self  block null_block
@jrubymethod name      module   true
public static irubyobject re_exchangeable_p irubyobject self
throw self getruntime   newnotimplementederror
@jrubymethod name      module   true
public static irubyobject rid irubyobject self
return uid self
@jrubymethod name      module   true
public static irubyobject sid_available_p irubyobject self
throw self getruntime   newnotimplementederror
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject switch_rb threadcontext context  irubyobject self  block block
ruby runtime   self getruntime
int uid   runtime getposix   getuid
int euid   runtime getposix   geteuid
if  block isgiven
try
runtime getposix   seteuid uid
runtime getposix   setuid euid
return block yield context  runtime getnil
finally
runtime getposix   seteuid euid
runtime getposix   setuid uid
else
runtime getposix   seteuid uid
runtime getposix   setuid euid
return rubyfixnum zero runtime
public static class groupid
@jrubymethod name      required   1  module   true
public static irubyobject change_privilege irubyobject self  irubyobject arg
throw self getruntime   newnotimplementederror
@jrubymethod name      module   true
public static irubyobject eid irubyobject self
return egid self
@jrubymethod name      required   1  module   true
public static irubyobject eid irubyobject self  irubyobject arg
return rubyprocess egid_set self  arg
@jrubymethod name      required   1  module   true
public static irubyobject grant_privilege irubyobject self  irubyobject arg
throw self getruntime   newnotimplementederror
@jrubymethod name      module   true
public static irubyobject re_exchange threadcontext context  irubyobject self
return switch_rb context  self  block null_block
@jrubymethod name      module   true
public static irubyobject re_exchangeable_p irubyobject self
throw self getruntime   newnotimplementederror
@jrubymethod name      module   true
public static irubyobject rid irubyobject self
return gid self
@jrubymethod name      module   true
public static irubyobject sid_available_p irubyobject self
throw self getruntime   newnotimplementederror
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject switch_rb threadcontext context  irubyobject self  block block
ruby runtime   self getruntime
int gid   runtime getposix   getgid
int egid   runtime getposix   getegid
if  block isgiven
try
runtime getposix   setegid gid
runtime getposix   setgid egid
return block yield context  runtime getnil
finally
runtime getposix   setegid egid
runtime getposix   setgid gid
else
runtime getposix   setegid gid
runtime getposix   setgid egid
return rubyfixnum zero runtime
public static class sys
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject getegid irubyobject self
return egid self
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject geteuid irubyobject self
return euid self
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject getgid irubyobject self
return gid self
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject getuid irubyobject self
return uid self
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject setegid irubyobject recv  irubyobject arg
return egid_set recv  arg
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject seteuid irubyobject recv  irubyobject arg
return euid_set recv  arg
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject setgid irubyobject recv  irubyobject arg
return gid_set recv  arg
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject setuid irubyobject recv  irubyobject arg
return uid_set recv  arg
@jrubymethod name      optional   1  module   true  visibility   visibility private
public static irubyobject abort threadcontext context  irubyobject recv  irubyobject args
return rubykernel abort context  recv  args
@jrubymethod name      optional   1  module   true  visibility   visibility private
public static irubyobject exit_bang irubyobject recv  irubyobject args
return rubykernel exit_bang recv  args
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject groups irubyobject recv
throw recv getruntime   newnotimplementederror
@jrubymethod name      rest   true  module   true  visibility   visibility private
public static irubyobject setrlimit irubyobject recv  irubyobject args
throw recv getruntime   newnotimplementederror
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject getpgrp irubyobject recv
return recv getruntime   newfixnum recv getruntime   getposix   getpgrp
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject groups_set irubyobject recv  irubyobject arg
throw recv getruntime   newnotimplementederror
@jrubymethod name      rest   true  module   true  visibility   visibility private
public static irubyobject waitpid irubyobject recv  irubyobject args
ruby runtime   recv getruntime
int pid    1
int flags   0
if  args length > 0
pid    int args converttointeger   getlongvalue
if  args length > 1
flags    int args converttointeger   getlongvalue
int status   new int
pid   runtime getposix   waitpid pid  status  flags
if  pid     1
throw runtime newerrnoechilderror
runtime getglobalvariables   set
rubyprocess rubystatus newprocessstatus runtime  status
return runtime newfixnum pid
@jrubymethod name      rest   true  module   true  visibility   visibility private
public static irubyobject wait irubyobject recv  irubyobject args
ruby runtime   recv getruntime
if  args length > 0
return waitpid recv  args
int status   new int
int pid   runtime getposix   wait status
if  pid     1
throw runtime newerrnoechilderror
runtime getglobalvariables   set
rubyprocess rubystatus newprocessstatus runtime  status
return runtime newfixnum pid
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject waitall irubyobject recv
ruby runtime   recv getruntime
posix posix   runtime getposix
rubyarray results   recv getruntime   newarray
int status   new int
int result   posix wait status
while  result     1
results append runtime newarray runtime newfixnum result   rubyprocess rubystatus newprocessstatus runtime  status
result   posix wait status
return results
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject setsid irubyobject recv
return recv getruntime   newfixnum recv getruntime   getposix   setsid
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject setpgrp irubyobject recv
return recv getruntime   newfixnum recv getruntime   getposix   setpgid 0  0
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject egid_set irubyobject recv  irubyobject arg
recv getruntime   getposix   setegid  int arg converttointeger   getlongvalue
return rubyfixnum zero recv getruntime
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject euid irubyobject recv
return recv getruntime   newfixnum recv getruntime   getposix   geteuid
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject uid_set irubyobject recv  irubyobject arg
recv getruntime   getposix   setuid  int arg converttointeger   getlongvalue
return rubyfixnum zero recv getruntime
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject gid irubyobject recv
return recv getruntime   newfixnum recv getruntime   getposix   getgid
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject maxgroups irubyobject recv
throw recv getruntime   newnotimplementederror
@jrubymethod name      required   2  module   true  visibility   visibility private
public static irubyobject getpriority irubyobject recv  irubyobject arg1  irubyobject arg2
int which    int arg1 converttointeger   getlongvalue
int who    int arg2 converttointeger   getlongvalue
int result   recv getruntime   getposix   getpriority which  who
return recv getruntime   newfixnum result
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject uid irubyobject recv
return recv getruntime   newfixnum recv getruntime   getposix   getuid
@jrubymethod name      rest   true  module   true  visibility   visibility private
public static irubyobject waitpid2 irubyobject recv  irubyobject args
ruby runtime   recv getruntime
int pid    1
int flags   0
if  args length > 0
pid    int args converttointeger   getlongvalue
if  args length > 1
flags    int args converttointeger   getlongvalue
int status   new int
pid   runtime getposix   waitpid pid  status  flags
if  pid     1
throw runtime newerrnoechilderror
return runtime newarray runtime newfixnum pid   rubyprocess rubystatus newprocessstatus runtime  status
@jrubymethod name      required   2  module   true  visibility   visibility private
public static irubyobject initgroups irubyobject recv  irubyobject arg1  irubyobject arg2
throw recv getruntime   newnotimplementederror
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject maxgroups_set irubyobject recv  irubyobject arg
throw recv getruntime   newnotimplementederror
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject ppid irubyobject recv
return recv getruntime   newfixnum recv getruntime   getposix   getppid
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject gid_set irubyobject recv  irubyobject arg
return recv getruntime   newfixnum recv getruntime   getposix   setgid  int arg converttointeger   getlongvalue
@jrubymethod name      rest   true  module   true  visibility   visibility private
public static irubyobject wait2 irubyobject recv  irubyobject args
return waitpid2 recv  args
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject euid_set irubyobject recv  irubyobject arg
recv getruntime   getposix   seteuid  int arg converttointeger   getlongvalue
return rubyfixnum zero recv getruntime
@jrubymethod name      required   3  module   true  visibility   visibility private
public static irubyobject setpriority irubyobject recv  irubyobject arg1  irubyobject arg2  irubyobject arg3
int which    int arg1 converttointeger   getlongvalue
int who    int arg2 converttointeger   getlongvalue
int prio    int arg3 converttointeger   getlongvalue
int result   recv getruntime   getposix   setpriority which  who  prio
return recv getruntime   newfixnum result
@jrubymethod name      required   2  module   true  visibility   visibility private
public static irubyobject setpgid irubyobject recv  irubyobject arg1  irubyobject arg2
int pid    int arg1 converttointeger   getlongvalue
int gid    int arg2 converttointeger   getlongvalue
return recv getruntime   newfixnum recv getruntime   getposix   setpgid pid  gid
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject getpgid irubyobject recv  irubyobject arg
return recv getruntime   newfixnum recv getruntime   getposix   getpgid  int arg converttointeger   getlongvalue
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject getrlimit irubyobject recv  irubyobject arg
throw recv getruntime   newnotimplementederror
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject egid irubyobject recv
return recv getruntime   newfixnum recv getruntime   getposix   getegid
private static string signals   new string
private static int parsesignalstring ruby runtime  string value
int startindex   0
boolean negative   value startswith
if  negative  startindex
boolean signalstring   value startswith    startindex
if  signalstring  startindex    3
string signalname   value substring startindex
// fixme: this table will get moved into posix library so we can get all actual supported
// signals.  this is a quick fix to support basic signals until that happens.
for  int i   0  i < signals length  i
if  signals equals signalname   return negative ?  i   i
throw runtime newargumenterror     signalname
@jrubymethod name      rest   true  module   true  visibility   visibility private
public static irubyobject kill irubyobject recv  irubyobject args
if  args length < 2
throw recv getruntime   newargumenterror
ruby runtime   recv getruntime
int signal
if  args instanceof rubyfixnum
signal    int    rubyfixnum  args  getlongvalue
else if  args instanceof rubysymbol
signal   parsesignalstring runtime  args tostring
else if  args instanceof rubystring
signal   parsesignalstring runtime  args tostring
else
signal   parsesignalstring runtime  args checkstringtype   tostring
boolean processgroupkill   signal < 0
if  processgroupkill  signal    signal
posix posix   runtime getposix
for  int i   1  i < args length  i
int pid   rubynumeric num2int args
// fixme: it may be possible to killpg on systems which support it.  posix library
// needs to tell whether a particular method works or not
if  pid    0  pid   runtime getposix   getpid
posix kill processgroupkill ?  pid   pid  signal
return runtime newfixnum args length   1
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject detach threadcontext context  irubyobject recv  irubyobject arg
final int pid    int arg converttointeger   getlongvalue
ruby runtime   recv getruntime
blockcallback callback   new blockcallback
public irubyobject call threadcontext context  irubyobject args  block block
int status   new int
int result   context getruntime   getposix   waitpid pid  status  0
return context getruntime   newfixnum result
return rubythread newinstance
runtime getthread
irubyobject null_array
callblock newcallclosure recv   rubymodule recv  arity no_arguments  callback  context
@jrubymethod name      frame   true  module   true  visibility   visibility private
public static irubyobject times irubyobject recv  block unusedblock
ruby runtime   recv getruntime
double currenttime   system currenttimemillis     1000 0
double starttime   runtime getstarttime     1000 0
rubyfloat zero   runtime newfloat 0 0
return rubystruct newstruct runtime gettmsstruct
new irubyobject   runtime newfloat currenttime   starttime   zero  zero  zero
block null_block
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject pid irubyobject recv
return recv getruntime   newfixnum recv getruntime   getposix   getpid
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject fork threadcontext context  irubyobject recv  block block
return rubykernel fork context  recv  block
@jrubymethod name      optional   1  module   true  visibility   visibility private
public static irubyobject exit irubyobject recv  irubyobject args
return rubykernel exit recv  args