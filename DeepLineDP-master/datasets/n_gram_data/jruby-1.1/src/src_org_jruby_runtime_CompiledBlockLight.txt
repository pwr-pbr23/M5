/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 charles o nutter <headius@headius.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby runtime
import org jruby rubyarray
import org jruby rubymodule
import org jruby ast util argsutil
import org jruby common irubywarnings id
import org jruby exceptions jumpexception
import org jruby parser staticscope
import org jruby runtime builtin irubyobject
/**
* a block implemented using a java-based blockcallback implementation
* rather than with an icallable. for lightweight block logic within
* java code.
*/
public class compiledblocklight extends blockbody
protected final compiledblockcallback callback
protected final boolean hasmultipleargshead
protected final arity arity
protected final dynamicscope dummyscope
public static block newcompiledclosurelight irubyobject self  frame frame  visibility visibility  rubymodule klass
dynamicscope dynamicscope  arity arity  staticscope scope  compiledblockcallback callback  boolean hasmultipleargshead  int argumenttype
binding binding   new binding self  frame  visibility  klass  dynamicscope
blockbody body   new compiledblocklight arity  dynamicscope newdynamicscope scope  dynamicscope   callback  hasmultipleargshead  argumenttype
return new block body  binding
public static block newcompiledclosurelight threadcontext context  irubyobject self  arity arity
staticscope scope  compiledblockcallback callback  boolean hasmultipleargshead  int argumenttype
return newcompiledclosurelight
self
context getcurrentframe
visibility public
context getrubyclass
context getcurrentscope
arity
scope
callback
hasmultipleargshead
argumenttype
protected compiledblocklight arity arity  dynamicscope dummyscope  compiledblockcallback callback  boolean hasmultipleargshead  int argumenttype
super argumenttype
this arity   arity
this callback   callback
this hasmultipleargshead   hasmultipleargshead
this dummyscope   dummyscope
public irubyobject call threadcontext context  irubyobject args  binding binding  block type type
args   prepareargumentsforcall context  args  type
return yield context  context getruntime   newarraynocopy args   null  null  true  binding  type
@override
public irubyobject yield threadcontext context  irubyobject value  binding binding  block type type
return yield context  value  null  null  false  binding  type
public irubyobject yield threadcontext context  irubyobject args  irubyobject self  rubymodule klass  boolean avalue  binding binding  block type type
if  klass    null
self   binding getself
binding getframe   setself self
// handle as though it's just an array coming in...i.e. it should be multiassigned or just
// assigned as is to var 0.
// fixme for now, since masgn isn't supported, this just wraps args in an irubyobject[],
// since single vars will want that anyway
visibility oldvis   binding getframe   getvisibility
irubyobject realargs   avalue ?
setupblockargs context  args  self    setupblockarg context  args  self
pre context  klass  binding
try
return callback call context  self  realargs
catch  jumpexception breakjump bj
if  bj gettarget      null
bj settarget this
throw bj
catch  jumpexception nextjump nj
// a 'next' is like a local return from the block, ending this call or yield.
return type    block type lambda ? context getruntime   getnil      irubyobject nj getvalue
finally
binding getframe   setvisibility oldvis
post context  binding
protected void pre threadcontext context  rubymodule klass  binding binding
context preyieldlightblock binding  dummyscope  klass
protected void post threadcontext context  binding binding
context postyieldlight binding
private irubyobject setupblockargs threadcontext context  irubyobject value  irubyobject self
switch  argumenttype
case zero_args
return irubyobject null_array
case multiple_assignment
case single_restarg
return new irubyobject  value
default
int length   arraylength value
switch  length
case 0
value   context getruntime   getnil
break
case 1
value     rubyarray value  eltinternal 0
break
default
context getruntime   getwarnings   warn id multiple_values_for_block
length
return new irubyobject  value
private irubyobject setupblockarg threadcontext context  irubyobject value  irubyobject self
switch  argumenttype
case zero_args
return irubyobject null_array
case multiple_assignment
case single_restarg
return new irubyobject  argsutil converttorubyarray context getruntime    value  hasmultipleargshead
default
if  value    null
context getruntime   getwarnings   warn id multiple_values_for_block
return new irubyobject  context getruntime   getnil
return new irubyobject  value
public staticscope getstaticscope
return dummyscope getstaticscope
public block cloneblock binding binding
binding   new binding binding getself
binding getframe   duplicate
binding getvisibility
binding getklass
binding getdynamicscope
return new block this  binding
@override
public arity arity
return arity