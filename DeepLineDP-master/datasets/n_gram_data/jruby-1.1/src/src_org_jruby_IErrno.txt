/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2002 jan arne petersen <jpetersen@uni-bonn.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
/**
* error numbers.
* @fixme
* this interface is a big hack defining a bunch of arbitrary valor as system call error numbers
* this is actually because i need them but will probably need to be changed to something smarter
* sooner or later.
* the purpose of this class it to help implement the errno module which in turn in needed by rubicon.
* @author benoit cerrina
**/
public interface ierrno
int eperm   1
int enoent   2
int esrch   3
int eintr   4
int eio   5
int enxio   6
int e2big   7
int enoexec   8
int ebadf   9
int echild   10
int edeadlk   11
int enomem   12
int eacces   13
int efault   14
int enotblk   15
int ebusy   16
int eexist   17
int exdev   18
int enodev   19
int enotdir   20
int eisdir   21
int einval   22
int enfile   23
int emfile   24
int enotty   25
int etxtbsy   26
int efbig   27
int enospc   28
int espipe   29
int erofs   30
int emlink   31
int epipe   32
int edom   33
int erange   34
int ewouldblock   35
int eagain   35
int einprogress   36
int ealready   37
int enotsock   38
int edestaddrreq   39
int emsgsize   40
int eprototype   41
int enoprotoopt   42
int eprotonosupport   43
int esocktnosupport   44
int eopnotsupp   45
int epfnosupport   46
int eafnosupport   47
int eaddrinuse   48
int eaddrnotavail   49
int enetdown   50
int enetunreach   51
int enetreset   52
int econnaborted   53
int econnreset   54
int enobufs   55
int eisconn   56
int enotconn   57
int eshutdown   58
int etoomanyrefs   59
int etimedout   60
int econnrefused   61
int eloop   62
int enametoolong   63
int ehostdown   64
int ehostunreach   65
int enotempty   66
int eusers   68
int edquot   69
int estale   70
int eremote   71
int enolck   77
int enosys   78
int eoverflow   84
int eidrm   90
int enomsg   91
int eilseq   92
int ebadmsg   94
int emultihop   95
int enodata   96
int enolink   97
int enosr   98
int enostr   99
int eproto   100
int etime   101
int eopnotsupp_darwin   102