/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 charles o nutter <headius@headius.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby compiler impl
import org jruby compiler compilercallback
import org jruby compiler notcompilableexception
import org jruby parser staticscope
import org jruby runtime dynamicscope
import org jruby runtime builtin irubyobject
import static org jruby util codegenutils
/**
*
* @author headius
*/
public class stackbasedvariablecompiler extends abstractvariablecompiler
private int scopeindex     the index of the dynamic scope for higher scopes
private int basevariableindex
public stackbasedvariablecompiler
standardasmcompiler abstractmethodcompiler methodcompiler
skinnymethodadapter method
int scopeindex
int argsindex
int closureindex
int firsttempindex
super methodcompiler  method  argsindex  closureindex  firsttempindex
this basevariableindex   firsttempindex
this scopeindex   scopeindex
public void beginmethod compilercallback argscallback  staticscope scope
// fill in all vars with nil so compiler is happy about future accesses
if  scope getnumberofvariables   > 0
methodcompiler loadnil
for  int i   0  i < scope getnumberofvariables    i
assignlocalvariable i
method pop
// temp locals must start after last real local
tempvariableindex    scope getnumberofvariables
if  argscallback    null
argscallback call methodcompiler
public void beginclass compilercallback bodyprep  staticscope scope
throw new notcompilableexception
public void beginclosure compilercallback argscallback  staticscope scope
// store the local vars in a local variable
methodcompiler loadthreadcontext
methodcompiler invokethreadcontext    sig dynamicscope class
method astore scopeindex
if  scope    null
methodcompiler loadnil
for  int i   0  i < scope getnumberofvariables    i
assignlocalvariable i
method pop
// temp locals must start after last real local
tempvariableindex    scope getnumberofvariables
if  argscallback    null
// load args[0] which will be the irubyobject representing block args
method aload argsindex
method ldc new integer 0
method arrayload
argscallback call methodcompiler
method pop       clear remaining value on the stack
public void assignlocalvariable int index
method dup
method astore basevariableindex   index
public void assignlocalvariable int index  int depth
if  depth    0
assignlocalvariable index
else
method dup
method aload scopeindex
method swap
method ldc new integer index
method swap
method ldc new integer depth
method invokevirtual p dynamicscope class      sig void type  params integer type  irubyobject class  integer type
public void retrievelocalvariable int index
method aload basevariableindex   index
public void retrievelocalvariable int index  int depth
if  depth    0
retrievelocalvariable index
else
method aload scopeindex
method ldc new integer index
method ldc new integer depth
methodcompiler loadnil
method invokevirtual p dynamicscope class      sig irubyobject class  params integer type  integer type  irubyobject class