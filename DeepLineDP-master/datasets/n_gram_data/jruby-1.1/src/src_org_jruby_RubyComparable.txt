/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2001-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
* copyright (c) 2005 charles o nutter <headius@headius.com>
* copyright (c) 2006 miguel covarrubias <mlcovarrubias@gmail.com>
* copyright (c) 2006 thomas e enebo <enebo@acm.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import org jruby anno jrubymethod
import org jruby exceptions raiseexception
import org jruby runtime methodindex
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
/** implementation of the comparable module.
*
*/
public class rubycomparable
public static rubymodule createcomparable ruby runtime
rubymodule comparablemodule   runtime definemodule
runtime setcomparable comparablemodule
comparablemodule defineannotatedmethods rubycomparable class
return comparablemodule
/*  ================
*  utility methods
*  ================
*/
/** rb_cmpint
*
*/
public static int cmpint threadcontext context  irubyobject val  irubyobject a  irubyobject b
if  val isnil
cmperr a  b
if  val instanceof rubyfixnum
return rubynumeric fix2int  rubyfixnum  val
if  val instanceof rubybignum
if    rubybignum  val  getvalue   signum       1
return 1
return  1
final ruby runtime   val getruntime
final rubyfixnum zero   rubyfixnum zero runtime
if  val callmethod context  methodindex op_gt     zero  istrue
return 1
if  val callmethod context  methodindex op_lt     zero  istrue
return  1
return 0
/** rb_cmperr
*
*/
public static void cmperr irubyobject recv  irubyobject other
irubyobject target
if  other isimmediate        other isnil      other istrue      other    recv getruntime   getfalse
target   other inspect
else
target   other gettype
throw recv getruntime   newargumenterror     recv gettype         target
/*  ================
*  module methods
*  ================
*/
/** cmp_equal (cmp_eq inlined here)
*
*/
@jrubymethod name      required   1
public static irubyobject op_equal threadcontext context  irubyobject recv  irubyobject other
if  recv    other
return recv getruntime   gettrue
ruby runtime   recv getruntime
irubyobject result   null
try
result   recv callmethod context  methodindex op_spaceship     other
catch  raiseexception e
if  e getexception   kind_of_p recv getruntime   getstandarderror    istrue
return recv getruntime   getnil
else
throw e
if   result instanceof rubyinteger
return runtime getnil
return rubyboolean newboolean runtime  cmpint context  result  recv  other     0
/** cmp_gt
*
*/
// <=> may return nil in many circumstances, e.g. 3 <=> nan
@jrubymethod name      required   1
public static rubyboolean op_gt threadcontext context  irubyobject recv  irubyobject other
final ruby runtime   recv getruntime
irubyobject result   recv callmethod context  methodindex op_spaceship     other
if  result isnil
cmperr recv  other
return rubyboolean newboolean runtime  cmpint context  result  recv  other  > 0
/** cmp_ge
*
*/
@jrubymethod name      required   1
public static rubyboolean op_ge threadcontext context  irubyobject recv  irubyobject other
final ruby runtime   recv getruntime
irubyobject result   recv callmethod context  methodindex op_spaceship     other
if  result isnil
cmperr recv  other
return rubyboolean newboolean runtime  cmpint context  result  recv  other  >  0
/** cmp_lt
*
*/
@jrubymethod name      required   1
public static rubyboolean op_lt threadcontext context  irubyobject recv  irubyobject other
final ruby runtime   recv getruntime
irubyobject result   recv callmethod context  methodindex op_spaceship     other
if  result isnil
cmperr recv  other
return rubyboolean newboolean runtime  cmpint context  result  recv  other  < 0
/** cmp_le
*
*/
@jrubymethod name      required   1
public static rubyboolean op_le threadcontext context  irubyobject recv  irubyobject other
final ruby runtime   recv getruntime
irubyobject result   recv callmethod context  methodindex op_spaceship     other
if  result isnil
cmperr recv  other
return rubyboolean newboolean runtime  cmpint context  result  recv  other  <  0
/** cmp_between
*
*/
@jrubymethod name      required   2
public static rubyboolean between_p threadcontext context  irubyobject recv  irubyobject first  irubyobject second
return recv getruntime   newboolean op_lt context  recv  first  isfalse      op_gt context  recv  second  isfalse