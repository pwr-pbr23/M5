/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2001-2002 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2001-2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2004-2006 thomas e enebo <enebo@acm.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby ast
import java util list
import org jruby ast visitor nodevisitor
import org jruby evaluator instruction
import org jruby lexer yacc isourceposition
import org jruby parser staticscope
import org jruby runtime arity
import org jruby runtime blockbody
import org jruby runtime interpretedblock
/**
* represents a block.
*/
public class iternode extends node
private final node varnode
private final node bodynode
// what static scoping relationship exists when it comes into being.
private staticscope scope
private interpretedblock blockbody
public iternode isourceposition position  node varnode  staticscope scope  node bodynode
this position  varnode  scope  bodynode  nodetype iternode
public iternode isourceposition position  node varnode  staticscope scope  node bodynode
nodetype id
super position  id
this varnode   varnode
this scope   scope
this bodynode   bodynode
nodetype argsnodeid   blockbody getargumenttypewackyhack this
this blockbody   new interpretedblock this  arity procarityof varnode   blockbody asargumenttype argsnodeid
/**
* accept for the visitor pattern.
* @param ivisitor the visitor
**/
public instruction accept nodevisitor ivisitor
return ivisitor visititernode this
public staticscope getscope
return scope
/**
* gets the bodynode.
* @return returns a node
*/
public node getbodynode
return bodynode
/**
* gets the varnode.
* @return returns a node
*/
public node getvarnode
return varnode
public interpretedblock getblockbody
return blockbody
public list<node> childnodes
return node createlist varnode  bodynode