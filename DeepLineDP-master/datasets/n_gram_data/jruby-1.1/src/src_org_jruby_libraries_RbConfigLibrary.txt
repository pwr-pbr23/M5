/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
* copyright (c) 2005 charles o nutter
* copyright (c) 2006 nick sieger
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby libraries
import java io ioexception
import java net url
import java util hashmap
import java util map
import java util regex matcher
import java util regex pattern
import org jruby ruby
import org jruby rubyhash
import org jruby rubymodule
import org jruby ext posix util platform
import org jruby runtime constants
import org jruby runtime load library
import org jruby util normalizedfile
public class rbconfiglibrary implements library
// ruby's designation for some platforms, minus version numbers in some cases
private static final string ruby_darwin
private static final string ruby_linux
private static final string ruby_win32
private static final string ruby_solaris
private static final string ruby_freebsd
private static final string ruby_aix
/** this is a map from java's "friendly" os names to those used by ruby */
public static final map<string  string> ruby_os_names   new hashmap<string  string>
static
ruby_os_names put    ruby_darwin
ruby_os_names put    ruby_darwin
ruby_os_names put    ruby_linux
ruby_os_names put    ruby_win32
ruby_os_names put    ruby_win32
ruby_os_names put    ruby_win32
ruby_os_names put    ruby_win32
ruby_os_names put    ruby_win32
ruby_os_names put    ruby_win32
ruby_os_names put    ruby_win32
ruby_os_names put    ruby_solaris
ruby_os_names put    ruby_freebsd
ruby_os_names put    ruby_aix
public static string getosname
string osname   platform getosname
string theosname   ruby_os_names get osname
return theosname    null ? osname   theosname
/**
* just enough configuration settings (most don't make sense in java) to run the rubytests
* unit tests. the tests use <code>bindir</code>, <code>ruby_install_name</code> and
* <code>exeext</code>.
*/
public void load ruby runtime  boolean wrap
rubymodule configmodule   runtime definemodule
rubyhash confighash   rubyhash newhash runtime
configmodule defineconstant    confighash
runtime getobject   defineconstant    configmodule
string versionparts   constants ruby_version split
setconfig confighash     versionparts
setconfig confighash     versionparts
setconfig confighash     versionparts
setconfig confighash     versionparts       versionparts
// rubygems is too specific on host cpu so until we have real need lets default to universal
//setconfig(confighash, "arch", system.getproperty("os.arch") + "-java" + system.getproperty("java.specification.version"));
setconfig confighash         system getproperty
string normalizedhome
if  ruby issecurityrestricted
normalizedhome
else
normalizedhome   runtime getjrubyhome
setconfig confighash     new normalizedfile normalizedhome     getpath
setconfig confighash     jrubyscript
setconfig confighash     jrubyscript
setconfig confighash     jrubyshell
setconfig confighash     normalizedhome
setconfig confighash     normalizedhome
setconfig confighash     platform getosname
setconfig confighash     system getproperty
setconfig confighash     platform arch
setconfig confighash     platform getosname
setconfig confighash     platform arch
string jrubyjarfile
url jrubypropertiesurl   ruby class getclassloader   getresource
if  jrubypropertiesurl    null
pattern jarfile   pattern compile
matcher jarmatcher   jarfile matcher jrubypropertiesurl tostring
jarmatcher find
if  jarmatcher matches
jrubyjarfile   jarmatcher group 1
setconfig confighash     jrubyjarfile
setconfig confighash     jrubyjarfile
setconfig confighash     constants build
setconfig confighash     constants target
string libdir   system getproperty
if  libdir    null
libdir   new normalizedfile normalizedhome     getpath
else
try
// our shell scripts pass in non-canonicalized paths, but even if we didn't
// anyone who did would become unhappy because ruby apps expect no relative
// operators in the pathname (rubygems, for example).
libdir   new normalizedfile libdir  getcanonicalpath
catch  ioexception e
libdir   new normalizedfile libdir  getabsolutepath
setconfig confighash     libdir
setconfig confighash         new normalizedfile libdir     getpath
setconfig confighash            new normalizedfile libdir     getpath
setconfig confighash         new normalizedfile libdir     getpath
setconfig confighash        new normalizedfile libdir     getpath
setconfig confighash        new normalizedfile libdir     getpath
setconfig confighash
setconfig confighash     new normalizedfile normalizedhome     getpath
setconfig confighash     new normalizedfile normalizedhome     getpath
setconfig confighash     new normalizedfile normalizedhome     getpath
setconfig confighash     new normalizedfile normalizedhome     getpath
setconfig confighash
if  platform is_windows
setconfig confighash
else
setconfig confighash
private static void setconfig rubyhash confighash  string key  string value
ruby runtime   confighash getruntime
confighash op_aset runtime getcurrentcontext    runtime newstring key   runtime newstring value
public static string jrubyscript
return system getproperty    platform is_windows ?        replace
// todo: note lack of command.com support for win 9x...
public static string jrubyshell
return system getproperty    platform is_windows ?        replace