/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2006 charles o nutter <headius@headius.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby compiler
import org jruby parser staticscope
/**
* compiler represents the current state of a compiler and all appropriate
* transitions and modifications that can be made within it. the methods here begin
* and end a class for a given compile run, begin and end methods for the script being
* compiled, set line number information, and generate code for all the basic
* operations necessary for a script to run.
*
* the intent of this interface is to provide a library-neutral set of functions for
* compiling a given script using any backend or any output format.
*/
public interface scriptcompiler
/**
* begin compilation for a script, preparing all necessary context and code
* to support this script's compiled representation.
*/
public void startscript staticscope scope
/**
* end compilation for the current script, closing all context and structures
* used for the compilation.
*/
public void endscript boolean generaterun  boolean generateload  boolean generatemain
/**
* begin compilation for a method that has the specified number of local variables.
* the returned value is a token that can be used to end the method later.
*
* @param friendlyname the outward user-readable name of the method. a unique name will be generated based on this.
* @param arity the arity of the method's argument list
* @param localvarcount the number of local variables that will be used by the method.
* @return an object that represents the method within this compiler. used in calls to
* endmethod once compilation for this method is completed.
*/
public methodcompiler startmethod string friendlyname  compilercallback argshandler  staticscope scope  astinspector inspector