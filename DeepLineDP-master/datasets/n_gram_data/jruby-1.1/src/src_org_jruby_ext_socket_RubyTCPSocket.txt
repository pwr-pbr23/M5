/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 ola bini <ola@ologix.com>
* copyright (c) 2007 thomas e enebo <enebo@acm.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby ext socket
import java io filedescriptor
import java io ioexception
import java net connectexception
import java net inetaddress
import java net inetsocketaddress
import java net socket
import java net unknownhostexception
import java nio channels socketchannel
import org jruby ruby
import org jruby rubyclass
import org jruby rubyio
import org jruby rubynumeric
import org jruby rubystring
import org jruby runtime arity
import org jruby runtime callbackfactory
import org jruby runtime block
import org jruby runtime objectallocator
import org jruby runtime builtin irubyobject
import org jruby util io modeflags
import org jruby util io channeldescriptor
import org jruby util io invalidvalueexception
public class rubytcpsocket extends rubyipsocket
static void createtcpsocket ruby runtime
rubyclass rb_ctcpsocket   runtime defineclass    runtime fastgetclass     tcpsocket_allocator
callbackfactory cfact   runtime callbackfactory rubytcpsocket class
rb_ctcpsocket includemodule runtime fastgetclass    fastgetconstant
rb_ctcpsocket definefastmethod    cfact getfastoptmethod
rb_ctcpsocket getmetaclass   definefastmethod    cfact getfastsingletonmethod    irubyobject class
rb_ctcpsocket getmetaclass   definemethod    cfact getoptsingletonmethod
runtime getobject   fastsetconstant   rb_ctcpsocket
private static objectallocator tcpsocket_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new rubytcpsocket runtime  klass
public rubytcpsocket ruby runtime  rubyclass type
super runtime  type
private int getportfrom irubyobject arg
return rubynumeric fix2int arg instanceof rubystring ?
rubynumeric str2inum getruntime     rubystring  arg  0  true    arg
public irubyobject initialize irubyobject args
arity checkargumentcount getruntime    args  2  4
string remotehost   args isnil  ?     args converttostring   tostring
int remoteport   getportfrom args
string localhost   args length >  3 ? args converttostring   tostring     null
int localport   args length    4 ? getportfrom args    0
try
socketchannel channel   null
if localhost    null
inetsocketaddress addr   new inetsocketaddress inetaddress getbyname remotehost   remoteport
channel   socketchannel open addr
else
channel   socketchannel open
socket socket   channel socket
socket bind new inetsocketaddress inetaddress getbyname localhost   localport
socket connect new inetsocketaddress inetaddress getbyname remotehost   remoteport
channel finishconnect
initsocket new channeldescriptor channel  rubyio getnewfileno    new modeflags modeflags rdwr   new filedescriptor
catch  invalidvalueexception ex
throw getruntime   newerrnoeinvalerror
catch connectexception e
throw getruntime   newerrnoeconnrefusederror
catch unknownhostexception e
throw sockerr this
catch ioexception e
throw sockerr this
return this
public static irubyobject open irubyobject recv  irubyobject args  block block
rubytcpsocket sock    rubytcpsocket recv callmethod recv getruntime   getcurrentcontext     args
if   block isgiven    return sock
try
return block yield recv getruntime   getcurrentcontext    sock
finally
if  sock openfile isopen    sock close
public static irubyobject gethostbyname irubyobject recv  irubyobject hostname
try
irubyobject ret   new irubyobject
ruby r   recv getruntime
inetaddress addr   inetaddress getbyname hostname converttostring   tostring
ret   r newstring addr getcanonicalhostname
ret   r newarray
ret   r newfixnum 2     af_inet
ret   r newstring addr gethostaddress
return r newarraynocopy ret
catch unknownhostexception e
throw sockerr recv