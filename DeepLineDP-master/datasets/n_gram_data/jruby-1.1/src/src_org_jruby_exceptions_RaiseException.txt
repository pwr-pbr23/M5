/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2001 alan moore <alan_moore@gmx.net>
* copyright (c) 2001-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2004 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 joey gibson <joey@joeygibson.com>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
* copyright (c) 2005 charles o nutter <headius@headius.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby exceptions
import java io bytearrayoutputstream
import java io printstream
import java io printwriter
import java io stringwriter
import org jruby
import org jruby runtime block
import org jruby runtime eventhook
import org jruby runtime methodindex
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
public class raiseexception extends jumpexception
public static final boolean debug   false
private static final long serialversionuid    7612079169559973951l
private rubyexception exception
public raiseexception rubyexception actexception
this actexception  false
public raiseexception ruby runtime  rubyclass excptnclass  string msg  boolean nativeexception
super msg
if  msg    null
msg
if  debug
thread dumpstack
setexception  rubyexception  excptnclass callmethod runtime getcurrentcontext       new irubyobject  excptnclass getruntime   newstring msg    block null_block   nativeexception
public raiseexception rubyexception exception  boolean isnativeexception
super
if  debug
thread dumpstack
setexception exception  isnativeexception
public static raiseexception createnativeraiseexception ruby runtime  throwable cause
nativeexception nativeexception   new nativeexception runtime  runtime getclass nativeexception class_name   cause
return new raiseexception cause  nativeexception
private static string buildmessage throwable exception
stringbuffer sb   new stringbuffer
stringwriter stacktrace   new stringwriter
exception printstacktrace new printwriter stacktrace
sb append    append exception getclass    append
sb append    append exception getmessage    append
sb append    append stacktrace getbuffer   tostring
return sb tostring
public raiseexception throwable cause  nativeexception nativeexception
super buildmessage cause   cause
setexception nativeexception  false
/**
* gets the exception
* @return returns a rubyexception
*/
public rubyexception getexception
return exception
/**
* sets the exception
* @param newexception the exception to set
*/
protected void setexception rubyexception newexception  boolean nativeexception
ruby runtime   newexception getruntime
threadcontext context   runtime getcurrentcontext
if   context iswithindefined
runtime getglobalvariables   set    newexception
if  runtime haseventhooks
runtime calleventhooks
context
eventhook ruby_event_raise
context getfile
context getline
context getframename
context getframeklazz
this exception   newexception
if  runtime getstacktraces   > 5
return
runtime setstacktraces runtime getstacktraces     1
newexception setbacktraceframes context createbacktrace 0  nativeexception
newexception getbacktrace
runtime setstacktraces runtime getstacktraces     1
public void printstacktrace
printstacktrace system err
public void printstacktrace printstream ps
stacktraceelement trace   getstacktrace
int externalindex   0
for  int i   trace length   1  i > 0  i
if  trace getclassname   indexof    >  0
break
externalindex   i
irubyobject backtrace   exception backtrace
ruby runtime   backtrace getruntime
if  runtime getnil      backtrace
string firstline   backtrace callmethod runtime getcurrentcontext       callmethod runtime getcurrentcontext    methodindex to_s     tostring
ps print firstline
ps println exception message       exception getmetaclass   tostring
exception printbacktrace ps
ps println
for  int i   externalindex  i < trace length  i
ps println     trace tostring
public void printstacktrace printwriter pw
bytearrayoutputstream baos   new bytearrayoutputstream
printstacktrace new printstream baos
pw print baos tostring