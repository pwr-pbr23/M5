/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import org jruby anno jrubymethod
import org jruby runtime block
import org jruby runtime objectallocator
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
public class rubysystemexit extends rubyexception
irubyobject status
private static objectallocator systemexit_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new rubysystemexit runtime  klass
public static rubyclass createsystemexitclass ruby runtime  rubyclass exceptionclass
rubyclass systemexitclass   runtime defineclass    exceptionclass  systemexit_allocator
systemexitclass defineannotatedmethods rubysystemexit class
return systemexitclass
public static rubysystemexit newinstance ruby runtime  int status
rubyclass exc   runtime fastgetclass
irubyobject exargs   new irubyobject
runtime newfixnum status
runtime newstring
return  rubysystemexit  exc newinstance runtime getcurrentcontext    exargs  block null_block
protected rubysystemexit ruby runtime  rubyclass exceptionclass
super runtime  exceptionclass
status   runtime getnil
@jrubymethod name      optional   2  frame   true  visibility   visibility private
public irubyobject initialize irubyobjectargs  block block
status   rubyfixnum zero getruntime
if  args length > 0    args instanceof rubyfixnum
status   args
irubyobjecttmpargs   new irubyobject
system arraycopy args  1  tmpargs  0  tmpargs length
args   tmpargs
super initialize args  block
return this
@jrubymethod name
public irubyobject status
return status
@jrubymethod name
public irubyobject success_p
if  status isnil    return getruntime   gettrue
if  status equals rubyfixnum zero getruntime      return getruntime   gettrue
return getruntime   getfalse