/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby util collections
import java util
/**
* a simple set that uses weak references to ensure that its elements can be garbage collected.
* see weakhashmap.
*
* @author <a href="http://www.cs.auckland.ac.nz/~robert/">robert egglestone</a>
*/
public class weakhashset<t> implements set<t>
private weakhashmap<t t> map
public weakhashset
map   new weakhashmap<t t>
public boolean add t o
t previousvalue   map put o  null
return previousvalue    null
public iterator<t> iterator
return map keyset   iterator
public int size
return map size
public boolean isempty
return map isempty
public boolean contains object o
return map containskey o
public boolean remove object o
boolean contains   contains o
map remove o
return contains
public boolean removeall collection collection
return map keyset   removeall collection
public boolean retainall collection collection
return map keyset   retainall collection
public void clear
map clear
public object toarray
return map keyset   toarray
public boolean containsall collection arg0
return map keyset   containsall arg0
public boolean addall collection<? extends t> arg0
boolean added   false
for  t i  arg0
add i
added   true
return added
public <t> t toarray t arg0
return map keyset   toarray arg0