/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 charles o nutter <headius@headius.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby runtime
import org jruby rubyclass
import org jruby rubyfixnum
import org jruby exceptions jumpexception
import org jruby exceptions jumpexception breakjump
import org jruby internal runtime methods dynamicmethod
import org jruby javasupport util runtimehelpers
import org jruby runtime builtin irubyobject
/**
*
*/
public abstract class callsite
public final int methodid
public final string methodname
protected final calltype calltype
private static int callcount   0
public callsite int methodid  string methodname  calltype calltype
this methodid   methodid
this methodname   methodname
this calltype   calltype
// no block
public abstract irubyobject call threadcontext context  irubyobject self
public abstract irubyobject call threadcontext context  irubyobject self  irubyobject arg1
public abstract irubyobject call threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2
public abstract irubyobject call threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2  irubyobject arg3
public abstract irubyobject call threadcontext context  irubyobject self  irubyobject args
// with block
public abstract irubyobject call threadcontext context  irubyobject self  block block
public abstract irubyobject call threadcontext context  irubyobject self  irubyobject arg1  block block
public abstract irubyobject call threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2  block block
public abstract irubyobject call threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2  irubyobject arg3  block block
public abstract irubyobject call threadcontext context  irubyobject self  irubyobject args  block block
public static class inlinecachingcallsite extends callsite implements cachemap cachesite
dynamicmethod cachedmethod
rubyclass cachedtype
public inlinecachingcallsite string methodname  calltype calltype
super methodindex getindex methodname   methodname  calltype
protected irubyobject cacheandcall rubyclass selftype  block block  irubyobject args  threadcontext context  irubyobject self
dynamicmethod method   selftype searchmethod methodname
if  method isundefined        methodname equals        method iscallablefrom context getframeself    calltype
return runtimehelpers callmethodmissing context  self  method  methodname  args  context getframeself    calltype  block
cachedmethod   method
cachedtype   selftype
selftype getruntime   getcachemap   add method  this
return method call context  self  selftype  methodname  args  block
protected irubyobject cacheandcall rubyclass selftype  irubyobject args  threadcontext context  irubyobject self
dynamicmethod method   selftype searchmethod methodname
if  method isundefined        methodname equals        method iscallablefrom context getframeself    calltype
return runtimehelpers callmethodmissing context  self  method  methodname  args  context getframeself    calltype  block null_block
cachedmethod   method
cachedtype   selftype
selftype getruntime   getcachemap   add method  this
return method call context  self  selftype  methodname  args
protected irubyobject cacheandcall rubyclass selftype  threadcontext context  irubyobject self
dynamicmethod method   selftype searchmethod methodname
if  method isundefined        methodname equals        method iscallablefrom context getframeself    calltype
return runtimehelpers callmethodmissing context  self  method  methodname  irubyobject null_array  context getframeself    calltype  block null_block
cachedmethod   method
cachedtype   selftype
selftype getruntime   getcachemap   add method  this
return method call context  self  selftype  methodname
protected irubyobject cacheandcall rubyclass selftype  block block  threadcontext context  irubyobject self
dynamicmethod method   selftype searchmethod methodname
if  method isundefined        methodname equals        method iscallablefrom context getframeself    calltype
return runtimehelpers callmethodmissing context  self  method  methodname  irubyobject null_array  context getframeself    calltype  block
cachedmethod   method
cachedtype   selftype
selftype getruntime   getcachemap   add method  this
return method call context  self  selftype  methodname  block
protected irubyobject cacheandcall rubyclass selftype  threadcontext context  irubyobject self  irubyobject arg
dynamicmethod method   selftype searchmethod methodname
if  method isundefined        methodname equals        method iscallablefrom context getframeself    calltype
return runtimehelpers callmethodmissing context  self  method  methodname  new irubyobject  arg   context getframeself    calltype  block null_block
cachedmethod   method
cachedtype   selftype
selftype getruntime   getcachemap   add method  this
return method call context  self  selftype  methodname  arg
protected irubyobject cacheandcall rubyclass selftype  block block  threadcontext context  irubyobject self  irubyobject arg
dynamicmethod method   selftype searchmethod methodname
if  method isundefined        methodname equals        method iscallablefrom context getframeself    calltype
return runtimehelpers callmethodmissing context  self  method  methodname  new irubyobject  arg   context getframeself    calltype  block
cachedmethod   method
cachedtype   selftype
selftype getruntime   getcachemap   add method  this
return method call context  self  selftype  methodname  arg  block
protected irubyobject cacheandcall rubyclass selftype  threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2
dynamicmethod method   selftype searchmethod methodname
if  method isundefined        methodname equals        method iscallablefrom context getframeself    calltype
return runtimehelpers callmethodmissing context  self  method  methodname  new irubyobject  arg1 arg2   context getframeself    calltype  block null_block
cachedmethod   method
cachedtype   selftype
selftype getruntime   getcachemap   add method  this
return method call context  self  selftype  methodname  arg1  arg2
protected irubyobject cacheandcall rubyclass selftype  block block  threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2
dynamicmethod method   selftype searchmethod methodname
if  method isundefined        methodname equals        method iscallablefrom context getframeself    calltype
return runtimehelpers callmethodmissing context  self  method  methodname  new irubyobject  arg1 arg2   context getframeself    calltype  block
cachedmethod   method
cachedtype   selftype
selftype getruntime   getcachemap   add method  this
return method call context  self  selftype  methodname  arg1  arg2  block
protected irubyobject cacheandcall rubyclass selftype  threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2  irubyobject arg3
dynamicmethod method   selftype searchmethod methodname
if  method isundefined        methodname equals        method iscallablefrom context getframeself    calltype
return runtimehelpers callmethodmissing context  self  method  methodname  new irubyobject  arg1 arg2 arg3   context getframeself    calltype  block null_block
cachedmethod   method
cachedtype   selftype
selftype getruntime   getcachemap   add method  this
return method call context  self  selftype  methodname  arg1  arg2  arg3
protected irubyobject cacheandcall rubyclass selftype  block block  threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2  irubyobject arg3
dynamicmethod method   selftype searchmethod methodname
if  method isundefined        methodname equals        method iscallablefrom context getframeself    calltype
return runtimehelpers callmethodmissing context  self  method  methodname  new irubyobject  arg1 arg2 arg3   context getframeself    calltype  block
cachedmethod   method
cachedtype   selftype
selftype getruntime   getcachemap   add method  this
return method call context  self  selftype  methodname  arg1  arg2  arg3  block
public void removecachedmethod
cachedtype   null
cachedmethod   null
private void pollthreadevents threadcontext context
if   callcount     0xff     0  context pollthreadevents
public irubyobject call threadcontext context  irubyobject self  irubyobject args
pollthreadevents context
rubyclass selftype   self getmetaclass
if  cachedtype    selftype    cachedmethod    null
return cachedmethod call context  self  selftype  methodname  args
return cacheandcall selftype  args  context  self
public irubyobject call threadcontext context  irubyobject self  irubyobject args  block block
pollthreadevents context
try
rubyclass selftype   self getmetaclass
if  cachedtype    selftype    cachedmethod    null
return cachedmethod call context  self  selftype  methodname  args  block
return cacheandcall selftype  block  args  context  self
catch  jumpexception breakjump bj
return handlebreakjump bj  block
catch  jumpexception retryjump rj
throw context getruntime   newlocaljumperror    context getruntime   getnil
catch  stackoverflowerror soe
throw context getruntime   newsystemstackerror
public irubyobject call threadcontext context  irubyobject self
pollthreadevents context
rubyclass selftype   self getmetaclass
if  cachedtype    selftype    cachedmethod    null
return cachedmethod call context  self  selftype  methodname
return cacheandcall selftype  context  self
public irubyobject call threadcontext context  irubyobject self  block block
pollthreadevents context
try
rubyclass selftype   self getmetaclass
if  cachedtype    selftype    cachedmethod    null
return cachedmethod call context  self  selftype  methodname  block
return cacheandcall selftype  block  context  self
catch  jumpexception breakjump bj
return handlebreakjump bj  block
catch  jumpexception retryjump rj
throw context getruntime   newlocaljumperror    context getruntime   getnil
catch  stackoverflowerror soe
throw context getruntime   newsystemstackerror
public irubyobject call threadcontext context  irubyobject self  irubyobject arg1
pollthreadevents context
rubyclass selftype   self getmetaclass
if  cachedtype    selftype    cachedmethod    null
return cachedmethod call context  self  selftype  methodname  arg1
return cacheandcall selftype  context  self  arg1
public irubyobject call threadcontext context  irubyobject self  irubyobject arg1  block block
pollthreadevents context
try
rubyclass selftype   self getmetaclass
if  cachedtype    selftype    cachedmethod    null
return cachedmethod call context  self  selftype  methodname  arg1  block
return cacheandcall selftype  block  context  self  arg1
catch  jumpexception breakjump bj
return handlebreakjump bj  block
catch  jumpexception retryjump rj
throw context getruntime   newlocaljumperror    context getruntime   getnil
catch  stackoverflowerror soe
throw context getruntime   newsystemstackerror
public irubyobject call threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2
pollthreadevents context
rubyclass selftype   self getmetaclass
if  cachedtype    selftype    cachedmethod    null
return cachedmethod call context  self  selftype  methodname  arg1  arg2
return cacheandcall selftype  context  self  arg1  arg2
public irubyobject call threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2  block block
pollthreadevents context
try
rubyclass selftype   self getmetaclass
if  cachedtype    selftype    cachedmethod    null
return cachedmethod call context  self  selftype  methodname  arg1  arg2  block
return cacheandcall selftype  block  context  self  arg1  arg2
catch  jumpexception breakjump bj
return handlebreakjump bj  block
catch  jumpexception retryjump rj
throw context getruntime   newlocaljumperror    context getruntime   getnil
catch  stackoverflowerror soe
throw context getruntime   newsystemstackerror
public irubyobject call threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2  irubyobject arg3
pollthreadevents context
rubyclass selftype   self getmetaclass
if  cachedtype    selftype    cachedmethod    null
return cachedmethod call context  self  selftype  methodname  arg1  arg2  arg3
return cacheandcall selftype  context  self  arg1  arg2  arg3
public irubyobject call threadcontext context  irubyobject self  irubyobject arg1  irubyobject arg2  irubyobject arg3  block block
pollthreadevents context
try
rubyclass selftype   self getmetaclass
if  cachedtype    selftype    cachedmethod    null
return cachedmethod call context  self  selftype  methodname  arg1  arg2  arg3  block
return cacheandcall selftype  block  context  self  arg1  arg2  arg3
catch  jumpexception breakjump bj
return handlebreakjump bj  block
catch  jumpexception retryjump rj
throw context getruntime   newlocaljumperror    context getruntime   getnil
catch  stackoverflowerror soe
throw context getruntime   newsystemstackerror
private irubyobject handlebreakjump breakjump bj  block block  throws breakjump
// jruby-530, kernel#loop case:
if  bj isbreakinkernelloop
// consume and rethrow or just keep rethrowing?
if  block getbody      bj gettarget
bj setbreakinkernelloop false
throw bj
return  irubyobject  bj getvalue
public static class pluscallsite extends inlinecachingcallsite
public pluscallsite
super    calltype normal
public irubyobject call threadcontext context  irubyobject self  irubyobject arg
if  self instanceof rubyfixnum
return   rubyfixnum self  op_plus context  arg
return super call context  self  arg
public static class minuscallsite extends inlinecachingcallsite
public minuscallsite
super    calltype normal
public irubyobject call threadcontext context  irubyobject self  irubyobject arg
if  self instanceof rubyfixnum
return   rubyfixnum self  op_minus context  arg
return super call context  self  arg
public static class mulcallsite extends inlinecachingcallsite
public mulcallsite
super    calltype normal
public irubyobject call threadcontext context  irubyobject self  irubyobject arg
if  self instanceof rubyfixnum
return   rubyfixnum self  op_mul context  arg
return super call context  self  arg
public static class divcallsite extends inlinecachingcallsite
public divcallsite
super    calltype normal
public irubyobject call threadcontext context  irubyobject self  irubyobject arg
if  self instanceof rubyfixnum
return   rubyfixnum self  op_div context  arg
return super call context  self  arg
public static class ltcallsite extends inlinecachingcallsite
public ltcallsite
super    calltype normal
public irubyobject call threadcontext context  irubyobject self  irubyobject arg
if  self instanceof rubyfixnum
return   rubyfixnum self  op_lt context  arg
return super call context  self  arg
public static class lecallsite extends inlinecachingcallsite
public lecallsite
super    calltype normal
public irubyobject call threadcontext context  irubyobject self  irubyobject arg
if  self instanceof rubyfixnum
return   rubyfixnum self  op_le context  arg
return super call context  self  arg
public static class gtcallsite extends inlinecachingcallsite
public gtcallsite
super    calltype normal
public irubyobject call threadcontext context  irubyobject self  irubyobject arg
if  self instanceof rubyfixnum
return   rubyfixnum self  op_gt context  arg
return super call context  self  arg
public static class gecallsite extends inlinecachingcallsite
public gecallsite
super    calltype normal
public irubyobject call threadcontext context  irubyobject self  irubyobject arg
if  self instanceof rubyfixnum
return   rubyfixnum self  op_ge context  arg
return super call context  self  arg