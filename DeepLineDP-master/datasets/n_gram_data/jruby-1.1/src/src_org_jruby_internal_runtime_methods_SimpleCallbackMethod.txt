/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2002-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004-2005 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby internal runtime methods
import org jruby ruby
import org jruby rubymodule
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime eventhook
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
import org jruby runtime callback callback
/**
*/
public class simplecallbackmethod extends dynamicmethod
private callback callback
public simplecallbackmethod rubymodule implementationclass  callback callback  visibility visibility
super implementationclass  visibility  callconfiguration no_frame_no_scope
this callback   callback
public irubyobject call threadcontext context  irubyobject self  rubymodule klazz  string name  irubyobject args  block block
assert args    null
ruby runtime   context getruntime
if  runtime haseventhooks
runtime calleventhooks context  eventhook ruby_event_c_call  context getfile    context getline    name  getimplementationclass
try
return callback execute self  args  block
finally
runtime calleventhooks context  eventhook ruby_event_c_return  context getfile    context getline    name  getimplementationclass
return callback execute self  args  block
public callback getcallback
return callback
public arity getarity
return getcallback   getarity
public dynamicmethod dup
return new simplecallbackmethod getimplementationclass    callback  getvisibility