/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2006 ola bini <ola@ologix.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby runtime load
import java io ioexception
import org jruby ruby
/**
* the classextensionlibrary wraps a class which implements basiclibraryservice,
* and when asked to load the service, does a basicload of the basiclibraryservice.
*
* when the time comes to add other loading mechanisms for loading a class, this
* is the place where they will be added. the load method will check interface
* you can load a class with, and do the right thing.
*/
public class classextensionlibrary implements library
private class theclass
public classextensionlibrary class extension
theclass   extension
public void load ruby runtime  boolean wrap  throws ioexception
if basiclibraryservice class isassignablefrom theclass
try
basiclibraryservice theclass newinstance    basicload runtime
catch final exception ee
throw new runtimeexception ee getmessage   ee