/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004-2006 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import java lang ref softreference
import org jruby runtime builtin irubyobject
public final class metaclass extends rubyclass
private softreference<irubyobject> attached   new softreference<irubyobject> null
/** newobj (in rubyobject#getsingletonclassclone())
*
*/
public metaclass ruby runtime
super runtime  null  false
/** rb_class_boot (for metaclasses) (in makemetaclass(rubyclass))
*
*/
public metaclass ruby runtime  rubyclass superclass
super runtime  superclass  false
index   superclass index     use same classindex as metaclass  since we're technically still of that type
public boolean issingleton
return true
/**
* if an object uses an anonymous class 'class << obj', then this grabs the original
* metaclass and not the one that get injected as a result of 'class << obj'.
*/
public rubyclass getrealclass
return superclass getrealclass
public final irubyobject allocate
throw getruntime   newtypeerror
public irubyobject getattached
return attached get
public void setattached irubyobject attached
this attached   new softreference<irubyobject> attached