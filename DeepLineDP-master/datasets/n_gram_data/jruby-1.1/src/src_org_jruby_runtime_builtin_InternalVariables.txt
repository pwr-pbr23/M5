/*
* to change this template, choose tools | templates
* and open the template in the editor.
*/
package org jruby runtime builtin
import java util list
/**
*
* @author headius
*/
public interface internalvariables
/**
* returns true if object has the named internal variable.  use only
* for internal variables (not ivar/cvar/constant).
*
* @param name the name of an internal variable
* @return true if object has the named internal variable.
*/
boolean hasinternalvariable string name
/**
* returns true if object has the named internal variable.  use only
* for internal variables (not ivar/cvar/constant). the supplied
* name <em>must</em> have been previously interned.
*
* @param internedname the interned name of an internal variable
* @return true if object has the named internal variable, else false
*/
boolean fasthasinternalvariable string internedname
/**
* returns the named internal variable if present, else null.  use only
* for internal variables (not ivar/cvar/constant).
*
* @param name the name of an internal variable
* @return the named internal variable if present, else null
*/
irubyobject getinternalvariable string name
/**
* returns the named internal variable if present, else null.  use only
* for internal variables (not ivar/cvar/constant). the supplied
* name <em>must</em> have been previously interned.
*
* @param internedname the interned name of an internal variable
* @return he named internal variable if present, else null
*/
irubyobject fastgetinternalvariable string internedname
/**
* sets the named internal variable to the specified value.  use only
* for internal variables (not ivar/cvar/constant).
*
* @param name the name of an internal variable
* @param value the value to be set
*/
void setinternalvariable string name  irubyobject value
/**
* sets the named internal variable to the specified value.  use only
* for internal variables (not ivar/cvar/constant). the supplied
* name <em>must</em> have been previously interned.
*
* @param internedname the interned name of an internal variable
* @param value the value to be set
*/
void fastsetinternalvariable string internedname  irubyobject value
/**
* removes the named internal variable, if present, returning its
* value.  use only for internal variables (not ivar/cvar/constant).
*
* @param name the name of the variable to remove
* @return the value of the remove variable, if present; else null
*/
irubyobject removeinternalvariable string name
/**
* @return only internal variables (not ivar/cvar/constant)
*/
list<variable<irubyobject>> getinternalvariablelist