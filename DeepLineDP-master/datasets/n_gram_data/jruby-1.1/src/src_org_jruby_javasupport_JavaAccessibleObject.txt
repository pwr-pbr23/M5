/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
* copyright (c) 2004 david corbin <dcorbin@users.sourceforge.net>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby javasupport
import java lang reflect accessibleobject
import java lang reflect member
import org jruby ruby
import org jruby rubyboolean
import org jruby rubyclass
import org jruby rubyfixnum
import org jruby rubyobject
import org jruby rubystring
import org jruby runtime callbackfactory
import org jruby runtime builtin irubyobject
public abstract class javaaccessibleobject extends rubyobject
protected javaaccessibleobject ruby runtime  rubyclass rubyclass
super runtime  rubyclass
public static void registerrubymethods ruby runtime  rubyclass result
callbackfactory callbackfactory   runtime callbackfactory javaaccessibleobject class
result definefastmethod    callbackfactory getfastmethod    irubyobject class
result definefastmethod    callbackfactory getfastmethod    irubyobject class
result definefastmethod    callbackfactory getfastmethod    irubyobject class
result definefastmethod    callbackfactory getfastmethod
result definefastmethod    callbackfactory getfastmethod
result definefastmethod    callbackfactory getfastmethod    irubyobject class
result definefastmethod    callbackfactory getfastmethod
result definefastmethod    callbackfactory getfastmethod
result definefastmethod    callbackfactory getfastmethod
result definefastmethod    callbackfactory getfastmethod    irubyobject class
result definefastmethod    callbackfactory getfastmethod    irubyobject class
result definefastmethod    callbackfactory getfastmethod
result definefastmethod    callbackfactory getfastmethod
result definefastmethod    callbackfactory getfastmethod
result definefastmethod    callbackfactory getfastmethod
result definefastmethod    callbackfactory getfastmethod
result definefastmethod    callbackfactory getfastmethod
protected abstract accessibleobject accessibleobject
public boolean equals object other
return other instanceof javaaccessibleobject
this accessibleobject        javaaccessibleobject other  accessibleobject
public int hashcode
return this accessibleobject   hashcode
public rubyfixnum hash
return getruntime   newfixnum hashcode
public irubyobject op_equal irubyobject other
return other instanceof javaaccessibleobject    accessibleobject   equals   javaaccessibleobject other  accessibleobject    ? getruntime   gettrue     getruntime   getfalse
public irubyobject same irubyobject other
return getruntime   newboolean equals other
public rubyboolean isaccessible
return new rubyboolean getruntime   accessibleobject   isaccessible
public irubyobject setaccessible irubyobject object
accessibleobject   setaccessible object istrue
return object
@suppresswarnings
public irubyobject annotation irubyobject annoclass
if    annoclass instanceof javaclass
throw getruntime   newtypeerror annoclass  getruntime   getjavasupport   getjavaclassclass
return java getinstance getruntime    accessibleobject   getannotation   javaclass annoclass  javaclass
public irubyobject annotations
return java getinstance getruntime    accessibleobject   getannotations
public rubyboolean annotations_p
return getruntime   newboolean accessibleobject   getannotations   length > 0
public irubyobject declared_annotations
return java getinstance getruntime    accessibleobject   getdeclaredannotations
public rubyboolean declared_annotations_p
return getruntime   newboolean accessibleobject   getdeclaredannotations   length > 0
public irubyobject annotation_present_p irubyobject annoclass
if    annoclass instanceof javaclass
throw getruntime   newtypeerror annoclass  getruntime   getjavasupport   getjavaclassclass
return getruntime   newboolean this accessibleobject   isannotationpresent   javaclass annoclass  javaclass
// for our purposes, accessibles are also members, and vice-versa,
// so we'll include member methods here.
public irubyobject declaring_class
class<?> clazz     member accessibleobject    getdeclaringclass
if  clazz    null
return javaclass get getruntime    clazz
return getruntime   getnil
public irubyobject modifiers
return getruntime   newfixnum   member accessibleobject    getmodifiers
public irubyobject name
return getruntime   newstring   member accessibleobject    getname
public irubyobject synthetic_p
return getruntime   newboolean   member accessibleobject    issynthetic
public rubystring to_string
return getruntime   newstring accessibleobject   tostring