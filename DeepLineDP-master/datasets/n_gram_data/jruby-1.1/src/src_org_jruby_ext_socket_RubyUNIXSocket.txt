/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2008 ola bini <ola.bini@gmail.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby ext socket
import java io ioexception
import java nio buffer
import java nio bytebuffer
import java nio channels readablebytechannel
import java nio channels writablebytechannel
import com sun jna library
import com sun jna native
import com sun jna structure
import com sun jna union
import com sun jna ptr intbyreference
import org jruby ruby
import org jruby rubyclass
import org jruby rubyexception
import org jruby rubymodule
import org jruby rubynumeric
import org jruby rubystring
import org jruby exceptions raiseexception
import org jruby ext posix util platform
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime callbackfactory
import org jruby runtime objectallocator
import org jruby runtime builtin irubyobject
import org jruby util io channeldescriptor
import org jruby util io channelstream
import org jruby util io modeflags
import org jruby util bytelist
/**
* @author <a href="mailto:ola.bini@gmail.com">ola bini</a>
*/
public class rubyunixsocket extends rubybasicsocket
protected static libcsocket instance   null
/**
* implements reading and writing to a socket fd using recv and send
*/
private static class unixdomainsocketchannel implements readablebytechannel  writablebytechannel
private final int fd
private boolean open   true
public unixdomainsocketchannel int fd
this fd   fd
public void close   throws ioexception
open   false
public boolean isopen
return open
public int read bytebuffer dst  throws ioexception
int max   dst remaining
int v   instance recv fd  dst  max  0
if v     1
dst position dst position   v
return v
public int write bytebuffer src  throws ioexception
int max   src remaining
int v   instance send fd  src  max  0
if v     1
src position src position   v
return v
public static boolean tryunixdomainsocket
if instance    null
return true
try
synchronized rubyunixsocket class
if instance    null
return true
instance    libcsocket native loadlibrary    libcsocket class
return true
catch throwable e
return false
public static interface libcsocket extends library
int socketpair int d  int type  int protocol  int sv
int socket int domain  int type  int protocol
int connect int s  sockaddr_un name  int namelen
int bind int s  sockaddr_un name  int namelen
int listen int s  int backlog
int accept int s  sockaddr_un addr  intbyreference addrlen
int getsockname int s  sockaddr_un addr  intbyreference addrlen
int getpeername int s  sockaddr_un addr  intbyreference addrlen
int getsockopt int s  int level  int optname  byte optval  intbyreference optlen
int setsockopt int s  int level  int optname  byte optval  int optlen
int recv int s  buffer buf  int len  int flags
int recvfrom int s  buffer buf  int len  int flags  sockaddr_un from  intbyreference fromlen
int send int s  buffer msg  int len  int flags
int fcntl int fd  int cmd  int arg
int unlink string path
int close int s
void perror string arg
// sockaddr_un has different structure on different platforms.
// see jruby-2213 for more details.
public static class sockaddr_un extends structure
public final static int length   106
public final static boolean haslen   platform is_bsd
public header sun_header
public byte sun_path   new byte
public static final class header extends union
public static final class famlen extends structure
public byte sun_len
public byte sun_family
public famlen famlen
public short sun_family
public header
settype haslen ? famlen class   short class
public void setfamily int family
if haslen
sun_header famlen sun_family    byte  family
else
sun_header sun_family    short  family
public int getfamily
if haslen
return sun_header famlen sun_family
else
return sun_header sun_family
private static objectallocator unixsocket_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new rubyunixsocket runtime  klass
static void createunixsocket ruby runtime
rubyclass rb_cunixsocket   runtime defineclass    runtime fastgetclass     unixsocket_allocator
runtime getobject   fastsetconstant    rb_cunixsocket
callbackfactory cfact   runtime callbackfactory rubyunixsocket class
rb_cunixsocket definefastmethod    cfact getfastmethod    irubyobject class
rb_cunixsocket definefastmethod    cfact getfastmethod
rb_cunixsocket definefastmethod    cfact getfastmethod
rb_cunixsocket definefastmethod    cfact getfastmethod
rb_cunixsocket definefastmethod    cfact getfastoptmethod
rb_cunixsocket definefastmethod    cfact getfastmethod    irubyobject class
rb_cunixsocket definefastmethod    cfact getfastoptmethod
rb_cunixsocket getmetaclass   definefastmethod    cfact getfastoptsingletonmethod
rb_cunixsocket getmetaclass   definefastmethod    cfact getfastoptsingletonmethod
rb_cunixsocket getmetaclass   definefastmethod    cfact getfastsingletonmethod    irubyobject class
public rubyunixsocket ruby runtime  rubyclass type
super runtime  type
protected int fd
protected string fpath
protected void rb_sys_fail string message
rb_sys_fail getruntime    message
protected static void rb_sys_fail ruby runtime  string message
int n   native getlasterror
native setlasterror 0
irubyobject arg    message    null  ? runtime newstring message    runtime getnil
rubyclass instance   runtime geterrno n
if instance    null
instance   runtime fastgetclass
throw new raiseexception  rubyexception  instance newinstance runtime getcurrentcontext    new irubyobject arg  runtime newfixnum n    block null_block
else
throw new raiseexception  rubyexception  instance newinstance runtime getcurrentcontext    new irubyobject arg   block null_block
protected final static int f_getfl   3
protected final static int f_setfl   4
protected final static int o_nonblock   0x0004
protected void init_unixsock irubyobject _path  boolean server  throws exception
int status
fd    1
try
fd   instance socket rubysocket af_unix  rubysocket sock_stream  0
catch  unsatisfiedlinkerror ule
if  fd < 0
rb_sys_fail
libcsocket sockaddr_un sockaddr   new libcsocket sockaddr_un
sockaddr setfamily rubysocket af_unix
bytelist path   _path converttostring   getbytelist
fpath   path tostring
if sockaddr sun_path length <  path realsize
throw getruntime   newargumenterror      sockaddr sun_path length 1
system arraycopy path bytes  path begin  sockaddr sun_path  0  path realsize
if server
status   instance bind fd  sockaddr  libcsocket sockaddr_un length
else
try
status   instance connect fd  sockaddr  libcsocket sockaddr_un length
catch runtimeexception e
instance close fd
throw e
if status < 0
instance close fd
rb_sys_fail fpath
if server
instance listen fd  5
init_sock
if server
openfile setpath fpath
@override
public irubyobject setsockopt irubyobject lev  irubyobject optname  irubyobject val
int level   rubynumeric fix2int lev
int opt   rubynumeric fix2int optname
switch level
case rubysocket sol_socket
switch opt
case rubysocket so_keepalive
int res   instance setsockopt fd  level  opt  asboolean val  ? new byte 32 0 0 0    new byte 0 0 0 0   4
if res     1
rb_sys_fail openfile getpath
break
default
throw getruntime   newerrnoenoprotoopterror
break
default
throw getruntime   newerrnoenoprotoopterror
return getruntime   newfixnum 0
protected void init_sock   throws exception
modeflags modes   new modeflags modeflags rdwr
openfile setmainstream new channelstream getruntime    new channeldescriptor new unixdomainsocketchannel fd   getnewfileno    modes  new java io filedescriptor
openfile setpipestream openfile getmainstream
openfile setmode modes getopenfileflags
openfile getmainstream   setsync true
public irubyobject initialize irubyobject path  throws exception
init_unixsock path  false
return this
private string unixpath libcsocket sockaddr_un addr  intbyreference len  throws exception
int firstzero   0
for int i 0 i<addr sun_path length i
if addr sun_path    0
firstzero   i
break
if len getvalue  >0
return new string addr sun_path  0  firstzero
else
return
private irubyobject unixaddr libcsocket sockaddr_un addr  intbyreference len  throws exception
return getruntime   newarraynocopy new irubyobject getruntime   newstring     getruntime   newstring unixpath addr  len
public irubyobject path   throws exception
if openfile getpath      null
libcsocket sockaddr_un addr   new libcsocket sockaddr_un
intbyreference len   new intbyreference libcsocket sockaddr_un length
if instance getsockname fd  addr  len  < 0
rb_sys_fail null
openfile setpath unixpath addr  len
return getruntime   newstring openfile getpath
public irubyobject addr   throws exception
libcsocket sockaddr_un addr   new libcsocket sockaddr_un
intbyreference len   new intbyreference libcsocket sockaddr_un length
if instance getsockname fd  addr  len  < 0
rb_sys_fail
return unixaddr addr  len
public irubyobject peeraddr   throws exception
libcsocket sockaddr_un addr   new libcsocket sockaddr_un
intbyreference len   new intbyreference libcsocket sockaddr_un length
if instance getpeername fd  addr  len  < 0
rb_sys_fail
return unixaddr addr  len
public irubyobject recvfrom irubyobject args  throws exception
bytebuffer str   bytebuffer allocatedirect 1024
libcsocket sockaddr_un buf   new libcsocket sockaddr_un
intbyreference alen   new intbyreference libcsocket sockaddr_un length
irubyobject len  flg
int flags
if arity checkargumentcount getruntime    args  1  2     2
flg   args
else
flg   getruntime   getnil
len   args
if flg isnil
flags   0
else
flags   rubynumeric fix2int flg
int buflen   rubynumeric fix2int len
int slen   instance recvfrom fd  str  buflen  flags  buf  alen
if slen < 0
rb_sys_fail
if slen < buflen
buflen   slen
byte outp   new byte
str get outp
rubystring _str   getruntime   newstring new bytelist outp  0  buflen  false
return getruntime   newarraynocopy new irubyobject _str  unixaddr buf  alen
public irubyobject send_io irubyobject path
//todo: implement, won't do this now
return  getruntime   getnil
public irubyobject recv_io irubyobject args
//todo: implement, won't do this now
return  getruntime   getnil
@override
public irubyobject close
super close
instance close fd
return getruntime   getnil
public static irubyobject open irubyobject recv  irubyobject path
return recv callmethod recv getruntime   getcurrentcontext       new irubyobject path   block null_block
private static int getsockettype irubyobject tp
if tp instanceof rubystring
string str   tp tostring
if   equals str
return rubysocket sock_stream
else if   equals str
return rubysocket sock_dgram
else if   equals str
return rubysocket sock_raw
else
return  1
return rubynumeric fix2int tp
public static irubyobject socketpair irubyobject recv  irubyobject args  throws exception
int domain   rubysocket pf_unix
arity checkargumentcount recv getruntime    args  0  2
int type
if args length    0
type   rubysocket sock_stream
else
type   getsockettype args
int protocol
if args length <  1
protocol   0
else
protocol   rubynumeric fix2int args
int sp   new int
int ret    1
try
ret   instance socketpair domain  type  protocol  sp
catch  unsatisfiedlinkerror ule
if  ret < 0
rb_sys_fail recv getruntime
rubyunixsocket sock    rubyunixsocket  recv getruntime   fastgetclass    callmethod recv getruntime   getcurrentcontext       new irubyobject
sock fd   sp
sock init_sock
rubyunixsocket sock2    rubyunixsocket  recv getruntime   fastgetclass    callmethod recv getruntime   getcurrentcontext       new irubyobject
sock2 fd   sp
sock2 init_sock
return recv getruntime   newarraynocopy new irubyobject sock  sock2