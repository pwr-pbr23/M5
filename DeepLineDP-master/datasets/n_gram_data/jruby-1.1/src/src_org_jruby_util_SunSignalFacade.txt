/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 ola bini <ola.bini@gmail.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby util
import org jruby ruby
import org jruby rubymodule
import org jruby rubyproc
import org jruby exceptions raiseexception
import org jruby runtime builtin irubyobject
import org jruby runtime callblock
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime blockcallback
import org jruby runtime threadcontext
import sun misc signal
import sun misc signalhandler
/**
* @author <a href="mailto:ola.bini@gmail.com">ola bini</a>
*/
public class sunsignalfacade implements signalfacade
private final static class jrubysignalhandler implements signalhandler
public ruby runtime
public irubyobject block
public irubyobject signal_object
public string signal
public void handle signal signal
try
block callmethod runtime getcurrentcontext       new irubyobject
catch raiseexception e
try
runtime getthread   callmethod runtime getcurrentcontext       new irubyobject
callmethod runtime getcurrentcontext       new irubyobject e getexception
catch exception ignored
finally
signal handle new signal this signal   this
public irubyobject trap final irubyobject recv  irubyobject arg1  irubyobject arg2  irubyobject arg3
final jrubysignalhandler handler   new jrubysignalhandler
handler runtime   recv getruntime
handler block   arg1
handler signal_object   arg2
handler signal   arg3 tostring
final signalhandler oldhandler
try
oldhandler   signal handle new signal handler signal   handler
catch  exception e
throw recv getruntime   newargumenterror e getmessage
if oldhandler instanceof jrubysignalhandler
return   jrubysignalhandler oldhandler  block
else
return rubyproc newproc recv getruntime    callblock newcallclosure recv   rubymodule recv
arity noarguments    new blockcallback
public irubyobject call threadcontext context  irubyobject args  block block
oldhandler handle new signal handler signal
return recv getruntime   getnil
recv getruntime   getcurrentcontext     block type normal
sunsignalfacade