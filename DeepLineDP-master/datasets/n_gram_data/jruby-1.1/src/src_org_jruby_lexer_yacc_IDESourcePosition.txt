/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2004 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby lexer yacc
import java io serializable
import java util collection
import org jruby ast commentnode
import org jruby ast node
/**
*
* position within a source.  this could have column as well, but it currently
* does not.  a normal ruby intrepretter does not use this information in
* error/warning information.  an ide using this may need it though.  this is
* trivially added if need be.
*
* @see org.jruby.lexer.yacc.isourceposition
*/
public class idesourceposition implements isourceposition  serializable
private static final long serialversionuid   3762529027281400377l
// the file of the source
private final string file
// the state/end rows of the source
private final int startline
private final int endline
// the start/end offsets of the source
private int startoffset
private final int endoffset
private collection<commentnode> comments   node empty_comment_list
/**
* creates a default source position - required for serialization.
*/
public idesourceposition
this    0  0
/**
* creates a new source position.
*
* @param file location of the source (must not be null)
* @param endline what line within the source
*/
public idesourceposition string file  int startline  int endline
if  file    null      otherwise equals   and getinstance   will fail
throw new nullpointerexception
this file   file
this startline   startline
this endline   endline
this startoffset   0
this endoffset   0
/**
* creates a new source position.
*
* @param file location of the source (must not be null)
* @param line what line within the source
*/
public idesourceposition string file  int startline  int endline  int startoffset  int endoffset
if  file    null      otherwise equals   and getinstance   will fail
throw new nullpointerexception
this file   file
this startline   startline
this endline   endline
this startoffset   startoffset
this endoffset   endoffset
/**
* @see org.jruby.lexer.yacc.isourceposition#getfile()
*/
public string getfile
return file
/**
* not used in interpreter
*
* @see org.jruby.lexer.yacc.isourceposition#getstartline()
*/
public int getstartline
return startline
/**
* @see org.jruby.lexer.yacc.isourceposition#getendline()
*/
public int getendline
return endline
/**
* @param object the object which should be compared
* @return simple object.equals() implementation
*/
public boolean equals object object
if  object    this
return true
if    object instanceof idesourceposition
return false
idesourceposition other    idesourceposition  object
return file equals other file     endline    other endline
/**
* something we can use for identity in hashing, etc...
*
* @see java.lang.object#hashcode()
*/
public int hashcode
return file hashcode   ^ endline
/**
* @see java.lang.object#tostring()
*/
public string tostring
return file       startline       endline
getstartoffset         getendoffset
/**
* @see org.jruby.lexer.yacc.isourceposition#adjuststartoffset(int)
*/
public void adjuststartoffset int relativevalue
startoffset    relativevalue
if startoffset < 0  startoffset   0
/**
* not used in interpreter
*
* @see org.jruby.lexer.yacc.isourceposition#getstartoffset()
*/
public int getstartoffset
return startoffset
/**
* not used in interpreter
*
* @see org.jruby.lexer.yacc.isourceposition#getendoffset()
*/
public int getendoffset
return endoffset
/**
* @see org.jruby.lexer.yacc.isourceposition#union(isourceposition)
*/
public isourceposition union isourceposition other
// enebo: all ast nodes but iternode are in ascending order position-wise.  we should not
// need to safe-guard that other is a smaller source position
return new idesourceposition file  startline  other getendline    startoffset  other getendoffset
/**
* not used in interpreter
* creates a new position the encloses both parameter positions.
*
* @param the positions providing the boundaries for the new position.
*/
public static idesourceposition combineposition isourceposition firstpos  isourceposition secondpos
string filename   firstpos getfile
int startoffset   firstpos getstartoffset
int endoffset   firstpos getendoffset
int startline   firstpos getstartline
int endline   firstpos getendline
if startoffset > secondpos getstartoffset
startoffset   secondpos getstartoffset
startline   secondpos getstartline
if endoffset < secondpos getendoffset
endoffset   secondpos getendoffset
endline   secondpos getendline
idesourceposition combinedposition   new idesourceposition filename  startline  endline  startoffset  endoffset
return combinedposition
public collection<commentnode> getcomments
return comments
public void setcomments collection<commentnode> comments
this comments   comments