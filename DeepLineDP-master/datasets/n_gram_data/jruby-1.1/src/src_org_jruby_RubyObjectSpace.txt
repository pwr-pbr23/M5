/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2001 alan moore <alan_moore@gmx.net>
* copyright (c) 2001-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2004 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import java util iterator
import java util list
import org jruby anno jrubymethod
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
import org jruby util typeconverter
public class rubyobjectspace
/** create the objectspace module and add it to the ruby runtime.
*
*/
public static rubymodule createobjectspacemodule ruby runtime
rubymodule objectspacemodule   runtime definemodule
runtime setobjectspacemodule objectspacemodule
objectspacemodule defineannotatedmethods rubyobjectspace class
return objectspacemodule
@jrubymethod name      required   1  optional   1  frame   true  module   true  visibility   visibility private
public static irubyobject define_finalizer irubyobject recv  irubyobject args  block block
ruby runtime   recv getruntime
irubyobject finalizer   null
if  args length    2
finalizer   args
if   finalizer respondsto
throw runtime newargumenterror
finalizer gettype
else
finalizer   runtime newproc block type proc  block
irubyobject obj   args
runtime getobjectspace   addfinalizer obj  finalizer
return recv
@jrubymethod name      required   1  frame   true  module   true  visibility   visibility private
public static irubyobject undefine_finalizer irubyobject recv  irubyobject arg1  block block
recv getruntime   getobjectspace   removefinalizers rubynumeric fix2long arg1 id
return recv
@jrubymethod name      required   1  module   true  visibility   visibility private
public static irubyobject id2ref irubyobject recv  irubyobject id
ruby runtime   id getruntime
if    id instanceof rubyfixnum
throw recv getruntime   newtypeerror id  recv getruntime   getfixnum
rubyfixnum idfixnum    rubyfixnum  id
long longid   idfixnum getlongvalue
if  longid    0
return runtime getfalse
else if  longid    2
return runtime gettrue
else if  longid    4
return runtime getnil
else if  longid % 2    0
// odd
return runtime newfixnum  longid   1    2
else
irubyobject object   runtime getobjectspace   id2ref longid
if  object    null
return runtime getnil
return object
@jrubymethod name      optional   1  frame   true  module   true  visibility   visibility private
public static irubyobject each_object threadcontext context  irubyobject recv  irubyobject args  block block
rubymodule rubyclass
if  args length    0
rubyclass   recv getruntime   getobject
else
if    args instanceof rubymodule   throw recv getruntime   newtypeerror
rubyclass    rubymodule  args
ruby runtime   recv getruntime
int count   0
if  rubyclass    runtime getclassclass
if   runtime isobjectspaceenabled
throw runtime newruntimeerror
iterator iter   recv getruntime   getobjectspace   iterator rubyclass
irubyobject obj   null
while   obj    irubyobject iter next       null
count
block yield context  obj
else
iterator iter   runtime getobject   subclasses true  iterator
while  iter hasnext
count
block yield context   irubyobject iter next
return recv getruntime   newfixnum count
@jrubymethod name      module   true  visibility   visibility private
public static irubyobject garbage_collect irubyobject recv
return rubygc start recv