/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2006 ola bini <ola@ologix.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
/**
* $id$
*/
package org jruby util
import java io file
import java io filefilter
import java io filenamefilter
import java io ioexception
import org jruby ruby
/**
* <p>this file acts as an alternative to normalizedfile, due to the problems with current working
* directory.</p>
*
*/
public class jrubyfile extends file
private static final long serialversionuid   435364547567567l
public static jrubyfile create string cwd  string pathname
try
pathname   new string pathname getbytes
catch  java io unsupportedencodingexception ex
// not reached here
return createnounicodeconversion cwd  pathname
private static jrubyfile createnounicodeconversion string cwd  string pathname
if  pathname    null    pathname equals       ruby issecurityrestricted
return jrubynonexistentfile not_exist
file internal   new file pathname
if  internal isabsolute
internal   new file cwd pathname
if  internal isabsolute
throw new illegalargumentexception   cwd   pathname
return new jrubyfile internal
public static string getfileproperty string property
string value   safepropertyaccessor getproperty property
return value replace file separatorchar
private jrubyfile file file
this file getabsolutepath
protected jrubyfile string filename
super filename
public string getabsolutepath
return new file super getpath    getabsolutepath   replace file separatorchar
public string getcanonicalpath   throws ioexception
string canonicalpath   super getcanonicalpath   replace file separatorchar
// java 1.4 canonicalpath does not strip off '.'
if  canonicalpath endswith
canonicalpath   canonicalpath substring 0  canonicalpath length     1
return canonicalpath
public string getpath
return super getpath   replace file separatorchar
public string tostring
return super tostring   replace file separatorchar
public file getabsolutefile
return new jrubyfile getabsolutepath
public file getcanonicalfile   throws ioexception
return new jrubyfile getcanonicalpath
public string getparent
string par   super getparent
if  par    null
par   par replace file separatorchar
return par
public file getparentfile
string par   getparent
if  par    null
return this
else
return new jrubyfile par
public static file listroots
file roots   file listroots
jrubyfile smartroots   new jrubyfile
for int i   0  j   roots length  i < j  i
smartroots   new jrubyfile roots getpath
return smartroots
public static file createtempfile string prefix  string suffix  file directory  throws ioexception
return new jrubyfile file createtempfile prefix  suffix directory
public static file createtempfile string prefix  string suffix  throws ioexception
return new jrubyfile file createtempfile prefix  suffix
public string list filenamefilter filter
string files   super list filter
if  files    null
return null
string smartfiles   new string
for  int i   0  i < files length  i
smartfiles   files replace file separatorchar
return smartfiles
public file listfiles
file files   super listfiles
if  files    null
return null
jrubyfile smartfiles   new jrubyfile
for  int i   0  j   files length  i < j  i
smartfiles   createnounicodeconversion super getabsolutepath    files getpath
return smartfiles
public file listfiles final filefilter filter
final file files   super listfiles filter
if  files    null
return null
jrubyfile smartfiles   new jrubyfile
for  int i   0 j   files length  i < j  i
smartfiles   createnounicodeconversion super getabsolutepath    files getpath
return smartfiles
public file listfiles final filenamefilter filter
final file files   super listfiles filter
if  files    null
return null
jrubyfile smartfiles   new jrubyfile
for  int i   0 j   files length  i < j  i
smartfiles   createnounicodeconversion super getabsolutepath    files getpath
return smartfiles