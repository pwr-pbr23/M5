/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2001-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2004-2007 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby runtime
import org jruby rubyarray
import org jruby rubymodule
import org jruby ast iternode
import org jruby ast multipleasgnnode
import org jruby ast nodetype
import org jruby common irubywarnings id
import org jruby internal runtime jumptarget
import org jruby parser staticscope
import org jruby runtime block type
import org jruby runtime builtin irubyobject
/**
*  internal live representation of a block ({...} or do ... end).
*/
public abstract class blockbody implements jumptarget
// fixme: maybe not best place, but move it to a good home
public static final int zero_args   0
public static final int multiple_assignment   1
public static final int array   2
public static final int single_restarg   3
protected final int argumenttype
public static final blockbody null_body   new blockbody zero_args
@override
public irubyobject call threadcontext context  irubyobject args  binding binding  type type
return null
@override
public irubyobject yield threadcontext context  irubyobject value  binding binding  type type
return null
@override
public irubyobject yield threadcontext context  irubyobject value  irubyobject self  rubymodule klass  boolean avalue  binding binding  type type
return null
@override
public staticscope getstaticscope
return null
@override
public block cloneblock binding binding
return null
@override
public arity arity
return null
public blockbody int argumenttype
this argumenttype   argumenttype
public abstract irubyobject call threadcontext context  irubyobject args  binding binding  block type type
public abstract irubyobject yield threadcontext context  irubyobject value  binding binding  block type type
public abstract irubyobject yield threadcontext context  irubyobject value  irubyobject self
rubymodule klass  boolean avalue  binding binding  block type type
protected int arraylength irubyobject node
return node instanceof rubyarray ?   rubyarray node  getlength     0
public abstract staticscope getstaticscope
public abstract block cloneblock binding binding
/**
* what is the arity of this block?
*
* @return the arity
*/
public abstract arity arity
/**
* is the current block a real yield'able block instead a null one
*
* @return true if this is a valid block or false otherwise
*/
public boolean isgiven
return true
/**
* compiled codes way of examining arguments
*
* @param nodeid to be considered
* @return something not linked to ast and a constant to make compiler happy
*/
public static int asargumenttype nodetype nodeid
if  nodeid    null  return zero_args
switch  nodeid
case zeroargnode  return zero_args
case multipleasgnnode  return multiple_assignment
case svaluenode  return single_restarg
return array
public irubyobject prepareargumentsforcall threadcontext context  irubyobject args  block type type
switch  type
case normal
assert false
if  args length    1    args instanceof rubyarray
if  argumenttype    multiple_assignment    argumenttype    single_restarg
args     rubyarray  args  tojavaarray
break
case proc
if  args length    1    args instanceof rubyarray
if  argumenttype    multiple_assignment    argumenttype    single_restarg
args     rubyarray  args  tojavaarray
break
case lambda
if  argumenttype    array    args length    1
context getruntime   getwarnings   warn id multiple_values_for_block      args length       arity   getvalue
if  args length    0
args   new irubyobject  context getruntime   getnil
else
args   new irubyobject  context getruntime   newarraynocopy args
else
arity   checkarity context getruntime    args
break
return args
public static nodetype getargumenttypewackyhack iternode iternode
nodetype argsnodeid   null
if  iternode getvarnode      null    iternode getvarnode   nodeid    nodetype zeroargnode
// if we have multiple asgn with just *args, need a special type for that
argsnodeid   iternode getvarnode   nodeid
if  argsnodeid    nodetype multipleasgnnode
multipleasgnnode multipleasgnnode    multipleasgnnode iternode getvarnode
if  multipleasgnnode getheadnode      null    multipleasgnnode getargsnode      null
// fixme: this is gross. don't do this.
argsnodeid   nodetype svaluenode
return argsnodeid