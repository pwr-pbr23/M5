/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2002-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
* copyright (c) 2005 charles o nutter <headius@headius.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import java util list
import org jruby anno jrubymethod
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime callbackfactory
import org jruby runtime frame
import org jruby runtime methodindex
import org jruby runtime objectallocator
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
import org jruby runtime marshal marshalstream
import org jruby runtime marshal unmarshalstream
import org jruby util idutil
import org jruby common irubywarnings id
import org jruby exceptions raiseexception
import org jruby internal runtime methods callconfiguration
import org jruby internal runtime methods dynamicmethod
import org jruby runtime classindex
import org jruby runtime callback callback
/**
* @author  jpetersen
*/
public class rubystruct extends rubyobject
private irubyobject values
/**
* constructor for rubystruct.
* @param runtime
* @param rubyclass
*/
public rubystruct ruby runtime  rubyclass rubyclass
super runtime  rubyclass
public static rubyclass createstructclass ruby runtime
// todo: not_allocatable_allocator may be ok here, but it's unclear how structs
// work with marshalling. confirm behavior and ensure we're doing this correctly. jruby-415
rubyclass structclass   runtime defineclass    runtime getobject    objectallocator not_allocatable_allocator
runtime setstructclass structclass
structclass index   classindex struct
structclass includemodule runtime getenumerable
structclass defineannotatedmethods rubystruct class
return structclass
@override
public int getnativetypeindex
return classindex struct
private static irubyobject getinternalvariable rubyclass type  string internedname
rubyclass structclass   type getruntime   getstructclass
irubyobject variable
while  type    null    type    structclass
if   variable   type fastgetinternalvariable internedname      null
return variable
type   type getsuperclass
return type getruntime   getnil
private rubyclass classof
return getmetaclass   instanceof metaclass ? getmetaclass   getsuperclass     getmetaclass
private void modify
testfrozen
if   istaint      getruntime   getsafelevel   >  4
throw getruntime   newsecurityerror
@jrubymethod
public rubyfixnum hash threadcontext context
ruby runtime   getruntime
int h   getmetaclass   getrealclass   hashcode
for  int i   0  i < values length  i
h    h << 1     h < 0 ? 1   0
h ^  rubynumeric num2long values callmethod context  methodindex hash
return runtime newfixnum h
private irubyobject setbyname string name  irubyobject value
rubyarray member    rubyarray  getinternalvariable classof
assert  member isnil
modify
for  int i   0 k member getlength    i < k  i
if  member eltinternal i  asjavastring   equals name
return values   value
throw notstructmembererror name
private irubyobject getbyname string name
rubyarray member    rubyarray  getinternalvariable classof
assert  member isnil
for  int i   0 k member getlength    i < k  i
if  member eltinternal i  asjavastring   equals name
return values
throw notstructmembererror name
// struct methods
/** create new struct class.
*
* mri: rb_struct_s_def / make_struct
*
*/
@jrubymethod name      required   1  rest   true  frame   true  meta   true
public static rubyclass newinstance irubyobject recv  irubyobject args  block block
string name   null
boolean nilname   false
ruby runtime   recv getruntime
if  args length > 0
irubyobject firstargasstring   args checkstringtype
if   firstargasstring isnil
name     rubystring firstargasstring  getbytelist   tostring
else if  args isnil
nilname   true
rubyarray member   runtime newarray
for  int i    name    null     nilname  ? 0   1  i < args length  i
member append runtime newsymbol args asjavastring
rubyclass newstruct
rubyclass superclass    rubyclass recv
if  name    null    nilname
newstruct   rubyclass newclass runtime  superclass
newstruct setallocator struct_instance_allocator
newstruct makemetaclass superclass getmetaclass
newstruct inherit superclass
else
if   idutil isconstant name
throw runtime newnameerror     name      name
irubyobject type   superclass getconstantat name
if  type    null
frame frame   runtime getcurrentcontext   getcurrentframe
runtime getwarnings   warn id struct_constant_redefined  frame getfile    frame getline        name  name
superclass remove_const runtime newstring name
newstruct   superclass defineclassunder name  superclass  struct_instance_allocator
newstruct index   classindex struct
newstruct fastsetinternalvariable    member length
newstruct fastsetinternalvariable    member
callbackfactory callbackfactory   runtime callbackfactory rubystruct class
newstruct getsingletonclass   definemethod    callbackfactory getoptsingletonmethod
newstruct getsingletonclass   definemethod    callbackfactory getoptsingletonmethod
newstruct getsingletonclass   definemethod    callbackfactory getsingletonmethod
// define access methods.
for  int i    name    null     nilname  ? 0   1  i < args length  i
final string membername   args asjavastring
// if we are storing a name as well, index is one too high for values
final int index    name    null     nilname  ? i   i   1
newstruct addmethod membername  new dynamicmethod newstruct  visibility public  callconfiguration no_frame_no_scope
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
arity checkargumentcount self getruntime    args  0  0
return   rubystruct self  get index
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name
return   rubystruct self  get index
@override
public dynamicmethod dup
return this
newstruct addmethod membername      new dynamicmethod newstruct  visibility public  callconfiguration no_frame_no_scope
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
arity checkargumentcount self getruntime    args  1  1
return   rubystruct self  set args  index
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg
return   rubystruct self  set arg  index
@override
public dynamicmethod dup
return this
if  block isgiven
// struct bodies should be public by default, so set block visibility to public. jruby-1185.
block getbinding   setvisibility visibility public
block yield runtime getcurrentcontext    null  newstruct  newstruct  false
return newstruct
/** create new structure.
*
* mri: struct_alloc
*
*/
public static rubystruct newstruct irubyobject recv  irubyobject args  block block
rubystruct struct   new rubystruct recv getruntime     rubyclass  recv
int size   rubynumeric fix2int getinternalvariable  rubyclass  recv
struct values   new irubyobject
for  int i   0  i < size  i
struct values   recv getruntime   getnil
struct callinit args  block
return struct
@jrubymethod rest   true  frame   true  visibility   visibility private
public irubyobject initialize irubyobject args  block unusedblock
modify
int size   rubynumeric fix2int getinternalvariable getmetaclass
if  args length > size
throw getruntime   newargumenterror     args length      size
for  int i   0  i < args length  i
values   args
return getruntime   getnil
public static rubyarray members irubyobject recv  block block
rubyarray member    rubyarray  getinternalvariable  rubyclass  recv
assert  member isnil
rubyarray result   recv getruntime   newarray member getlength
for  int i   0 k member getlength    i < k  i
result append recv getruntime   newstring member eltinternal i  asjavastring
return result
@jrubymethod
public rubyarray members
return members classof    block null_block
@jrubymethod
public rubyarray select threadcontext context  block block
rubyarray array   rubyarray newarray context getruntime
for  int i   0  i < values length  i
if  block yield context  values  istrue
array append values
return array
public irubyobject set irubyobject value  int index
rubyarray member    rubyarray  getinternalvariable classof
assert  member isnil
modify
return values   value
private raiseexception notstructmembererror string name
return getruntime   newnameerror name      name
public irubyobject get int index
rubyarray member    rubyarray  getinternalvariable classof
assert  member isnil
return values
@override
public void copyspecialinstancevariables irubyobject clone
rubystruct struct    rubystruct clone
struct values   new irubyobject
system arraycopy values  0  struct values  0  values length
@jrubymethod name      required   1
public irubyobject op_equal threadcontext context  irubyobject other
if  this    other  return getruntime   gettrue
if    other instanceof rubystruct   return getruntime   getfalse
if  getmetaclass   getrealclass      other getmetaclass   getrealclass    return getruntime   getfalse
ruby runtime   getruntime
rubystruct otherstruct    rubystruct other
for  int i   0  i < values length  i
if   equalinternal context  values  otherstruct values  istrue    return runtime getfalse
return runtime gettrue
@jrubymethod name      required   1
public irubyobject eql_p threadcontext context  irubyobject other
if  this    other  return getruntime   gettrue
if    other instanceof rubystruct   return getruntime   getfalse
if  getmetaclass      other getmetaclass    return getruntime   getfalse
ruby runtime   getruntime
rubystruct otherstruct    rubystruct other
for  int i   0  i < values length  i
if   eqlinternal context  values  otherstruct values   return runtime getfalse
return runtime gettrue
@jrubymethod name
public irubyobject to_s
return inspect
@jrubymethod name
public irubyobject inspect
rubyarray member    rubyarray  getinternalvariable classof
assert  member isnil
stringbuffer sb   new stringbuffer 100
sb append    append getmetaclass   getrealclass   getname    append
for  int i   0 k member getlength    i < k  i
if  i > 0
sb append
sb append member eltinternal i  asjavastring    append
sb append values callmethod getruntime   getcurrentcontext
sb append
return getruntime   newstring sb tostring        obj_infect
@jrubymethod name
public rubyarray to_a
return getruntime   newarray values
@jrubymethod name
public rubyfixnum size
return getruntime   newfixnum values length
@jrubymethod name      backtrace   true
public irubyobject each threadcontext context  block block
for  int i   0  i < values length  i
block yield context  values
return this
@jrubymethod frame   true
public irubyobject each_pair threadcontext context  block block
rubyarray member    rubyarray  getinternalvariable classof
assert  member isnil
for  int i   0  i < values length  i
block yield context  getruntime   newarraynocopy new irubyobject member eltinternal i   values
return this
@jrubymethod name      required   1
public irubyobject aref irubyobject key
if  key instanceof rubystring    key instanceof rubysymbol
return getbyname key asjavastring
int idx   rubynumeric fix2int key
idx   idx < 0 ? values length   idx   idx
if  idx < 0
throw getruntime   newindexerror     idx       values length
else if  idx >  values length
throw getruntime   newindexerror     idx       values length
return values
@jrubymethod name      required   2
public irubyobject aset irubyobject key  irubyobject value
if  key instanceof rubystring    key instanceof rubysymbol
return setbyname key asjavastring    value
int idx   rubynumeric fix2int key
idx   idx < 0 ? values length   idx   idx
if  idx < 0
throw getruntime   newindexerror     idx       values length
else if  idx >  values length
throw getruntime   newindexerror     idx       values length
modify
return values   value
// fixme: this is copied code from rubyarray.  both re, struct, and array should share one impl
// this is also hacky since i construct ruby objects to access ruby arrays through aref instead
// of something lower.
@jrubymethod rest   true
public irubyobject values_at irubyobject args
long olen   values length
rubyarray result   getruntime   newarray args length
for  int i   0  i < args length  i
if  args instanceof rubyfixnum
result append aref args
continue
long beglen
if    args instanceof rubyrange
else if   beglen     rubyrange  args  beglen olen  0      null
continue
else
int beg    int  beglen
int len    int  beglen
int end   len
for  int j   0  j < end  j
result append aref getruntime   newfixnum j   beg
continue
result append aref getruntime   newfixnum rubynumeric num2long args
return result
public static void marshalto rubystruct struct  marshalstream output  throws java io ioexception
output registerlinktarget struct
output dumpdefaultobjectheader    struct getmetaclass
list members     rubyarray  getinternalvariable struct classof        getlist
output writeint members size
for  int i   0  i < members size    i
rubysymbol name    rubysymbol  members get i
output dumpobject name
output dumpobject struct values
public static rubystruct unmarshalfrom unmarshalstream input  throws java io ioexception
ruby runtime   input getruntime
rubysymbol classname    rubysymbol  input unmarshalobject
rubyclass rbclass   pathtoclass runtime  classname asjavastring
if  rbclass    null
throw runtime newnameerror     classname  classname asjavastring
rubyarray mem   members rbclass  block null_block
int len   input unmarshalint
irubyobject values   new irubyobject
for int i   0  i < len  i
values   runtime getnil
rubystruct result   newstruct rbclass  values  block null_block
input registerlinktarget result
for int i   0  i < len  i
irubyobject slot   input unmarshalobject
if  mem eltinternal i  tostring   equals slot tostring
throw runtime newtypeerror     rbclass getname         slot       mem eltinternal i
result aset runtime newfixnum i   input unmarshalobject
return result
private static rubyclass pathtoclass ruby runtime  string path
// fixme: throw the right argumenterror's if the class is missing
// or if it's a module.
return  rubyclass  runtime getclassfrompath path
private static objectallocator struct_instance_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
rubystruct instance   new rubystruct runtime  klass
instance setmetaclass klass
return instance
@override
@jrubymethod required   1
public irubyobject initialize_copy irubyobject arg
if  this    arg  return this
rubystruct original    rubystruct  arg
values   new irubyobject
system arraycopy original values  0  values  0  original values length
return this