/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2006, 2007 ola bini <ola@ologix.com>
* copyright (c) 2007 nick sieger <nicksieger@gmail.com>
* copyright (c) 2008 vladimir sizikov <vsizikov@gmail.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import java security provider
import java security messagedigest
import java security nosuchalgorithmexception
import org jruby anno jrubymethod
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime objectallocator
import org jruby runtime builtin irubyobject
import org jruby runtime callback callback
import org jruby util bytelist
/**
* @author <a href="mailto:ola.bini@ki.se">ola bini</a>
*/
public class rubydigest
private static provider provider   null
public static void createdigest ruby runtime
try
provider    provider  class forname    newinstance
catch exception e
// provider is not available
rubymodule mdigest   runtime definemodule
rubyclass cdigestbase   mdigest defineclassunder   runtime getobject    base base_allocator
cdigestbase defineannotatedmethods base class
private static messagedigest createmessagedigest ruby runtime  string providername  throws nosuchalgorithmexception
if provider    null
try
return messagedigest getinstance providername  provider
catch nosuchalgorithmexception e
// bouncy castle doesn't support algorithm
// fall back to system jca providers
return messagedigest getinstance providername
public static void createdigestmd5 ruby runtime
runtime getloadservice   require
rubymodule mdigest   runtime fastgetmodule
rubyclass cdigestbase   mdigest fastgetclass
rubyclass cdigest_md5   mdigest defineclassunder   cdigestbase cdigestbase getallocator
cdigest_md5 definefastmethod    new callback
public arity getarity
return arity no_arguments
public irubyobject execute irubyobject recv  irubyobject args  block block
return rubyfixnum newfixnum recv getruntime    64
cdigest_md5 setinternalmodulevariable   runtime newstring
public static void createdigestrmd160 ruby runtime
runtime getloadservice   require
if provider    null
throw runtime newloaderror
rubymodule mdigest   runtime fastgetmodule
rubyclass cdigestbase   mdigest fastgetclass
rubyclass cdigest_rmd160   mdigest defineclassunder   cdigestbase cdigestbase getallocator
cdigest_rmd160 setinternalmodulevariable   runtime newstring
public static void createdigestsha1 ruby runtime
runtime getloadservice   require
rubymodule mdigest   runtime fastgetmodule
rubyclass cdigestbase   mdigest fastgetclass
rubyclass cdigest_sha1   mdigest defineclassunder   cdigestbase cdigestbase getallocator
cdigest_sha1 setinternalmodulevariable   runtime newstring
public static void createdigestsha2 ruby runtime
runtime getloadservice   require
try
createmessagedigest runtime
catch nosuchalgorithmexception e
throw runtime newloaderror
rubymodule mdigest   runtime fastgetmodule
rubyclass cdigestbase   mdigest fastgetclass
rubyclass cdigest_sha2_256   mdigest defineclassunder   cdigestbase cdigestbase getallocator
cdigest_sha2_256 setinternalmodulevariable   runtime newstring
rubyclass cdigest_sha2_384   mdigest defineclassunder   cdigestbase cdigestbase getallocator
cdigest_sha2_384 setinternalmodulevariable   runtime newstring
rubyclass cdigest_sha2_512   mdigest defineclassunder   cdigestbase cdigestbase getallocator
cdigest_sha2_512 setinternalmodulevariable   runtime newstring
public static class base extends rubyobject
protected static final objectallocator base_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new base runtime  klass
@jrubymethod name      required   1  meta   true
public static irubyobject s_digest irubyobject recv  irubyobject str
ruby runtime   recv getruntime
string name     rubyclass recv  searchinternalmodulevariable    tostring
try
messagedigest md   createmessagedigest runtime  name
return rubystring newstring runtime  md digest str converttostring   getbytes
catch nosuchalgorithmexception e
throw recv getruntime   newnotimplementederror     name
@jrubymethod name      required   1  meta   true
public static irubyobject s_hexdigest irubyobject recv  irubyobject str
ruby runtime   recv getruntime
string name     rubyclass recv  searchinternalmodulevariable    tostring
try
messagedigest md   createmessagedigest runtime  name
return rubystring newstring runtime  bytelist plain tohex md digest str converttostring   getbytes
catch nosuchalgorithmexception e
throw recv getruntime   newnotimplementederror     name
private messagedigest algo
private stringbuffer data
public base ruby runtime  rubyclass type
super runtime type
data   new stringbuffer
if type    runtime fastgetmodule    fastgetclass
throw runtime newnotimplementederror
if  type hasinternalmodulevariable
throw runtime newnotimplementederror     type
try
setalgorithm type searchinternalmodulevariable
catch nosuchalgorithmexception e
throw runtime newnotimplementederror     type
@jrubymethod name      optional   1  frame   true
public irubyobject initialize irubyobject args  block unusedblock
if args length > 0     args isnil
update args
return this
@jrubymethod name      required   1
public irubyobject initialize_copy irubyobject obj
if this    obj
return this
rubyobject obj  checkfrozen
data   new stringbuffer   base obj  data tostring
string name     base obj  algo getalgorithm
try
algo   createmessagedigest getruntime    name
catch nosuchalgorithmexception e
throw getruntime   newnotimplementederror     name
return this
@jrubymethod name           required   1
public irubyobject update irubyobject obj
data append obj
return this
@jrubymethod name      optional   1
public irubyobject digest irubyobject args
if  args length    1
reset
data append args
irubyobject digest   getdigest
if  args length    1
reset
return digest
private irubyobject getdigest
algo reset
return rubystring newstring getruntime    algo digest bytelist plain data
@jrubymethod name
public irubyobject digest_bang
algo reset
byte digest   algo digest bytelist plain data
reset
return rubystring newstring getruntime    digest
@jrubymethod name        optional   1
public irubyobject hexdigest irubyobject args
algo reset
if  args length    1
reset
data append args
byte digest   bytelist plain tohex algo digest bytelist plain data
if  args length    1
reset
return rubystring newstring getruntime    digest
@jrubymethod name
public irubyobject to_s
algo reset
return rubystring newstring getruntime    bytelist plain tohex algo digest bytelist plain data
@jrubymethod name
public irubyobject hexdigest_bang
algo reset
byte digest   bytelist plain tohex algo digest bytelist plain data
reset
return rubystring newstring getruntime    digest
@jrubymethod name
public irubyobject inspect
algo reset
return rubystring newstring getruntime    bytelist plain     getmetaclass   getrealclass   getname         tohex algo digest bytelist plain data
@jrubymethod name      required   1
public irubyobject op_equal irubyobject oth
boolean ret   this    oth
if  ret
if  oth instanceof base
base b    base oth
ret   this algo getalgorithm   equals b algo getalgorithm
this getdigest   equals b getdigest
else
irubyobject str   oth converttostring
ret   this to_s   equals str
return ret ? getruntime   gettrue     getruntime   getfalse
@jrubymethod name
public irubyobject length
return rubyfixnum newfixnum getruntime    algo getdigestlength
@jrubymethod name
public irubyobject block_length
throw getruntime   newruntimeerror
this getmetaclass
@jrubymethod name
public irubyobject reset
algo reset
data   new stringbuffer
return getruntime   getnil
private void setalgorithm irubyobject algo  throws nosuchalgorithmexception
this algo   createmessagedigest getruntime    algo tostring
private static string tohex byte val
stringbuffer out   new stringbuffer
for int i 0 j val length i<j i
string ve   integer tostring    int   char val     0xff  16
if ve length      1
ve       ve
out append ve
return out tostring
rubydigest