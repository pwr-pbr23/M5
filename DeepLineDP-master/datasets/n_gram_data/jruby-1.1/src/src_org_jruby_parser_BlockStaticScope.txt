/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2006 thomas e enebo <enebo@acm.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby parser
import org jruby ast assignablenode
import org jruby ast dasgnnode
import org jruby ast dvarnode
import org jruby ast node
import org jruby lexer yacc isourceposition
public class blockstaticscope extends staticscope
private static final long serialversionuid    3882063260379968149l
public blockstaticscope staticscope parentscope
super parentscope  new string
public blockstaticscope staticscope parentscope  string names
super parentscope  names
public staticscope getlocalscope
return enclosingscope getlocalscope
public int isdefined string name  int depth
int slot   exists name
if  slot >  0  return  depth << 16    slot
return enclosingscope isdefined name  depth   1
/**
* @see org.jruby.parser.staticscope#getallnamesinscope()
*/
public string getallnamesinscope
string variables   enclosingscope getallnamesinscope
string ourvariables   getvariables
// we know variables cannot be null since localstaticscope will create a 0 length one.
int newsize   variables length   ourvariables length
string names   new string
system arraycopy variables  0  names  0  variables length
system arraycopy ourvariables  0  names  variables length  ourvariables length
return names
protected assignablenode assign isourceposition position  string name  node value
staticscope topscope  int depth
int slot   exists name
if  slot >  0
// mark as captured if from containing scope
if  depth > 0  capture slot
return new dasgnnode position  name    depth << 16    slot   value
return enclosingscope assign position  name  value  topscope  depth   1
public assignablenode addassign isourceposition position  string name  node value
int slot   addvariable name
// no bit math to store level since we know level is zero for this case
return new dasgnnode position  name  slot  value
public node declare isourceposition position  string name  int depth
int slot   exists name
if  slot >  0
// mark as captured if from containing scope
if  depth > 0  capture slot
return new dvarnode position    depth << 16    slot   name
return enclosingscope declare position  name  depth   1