/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 ola bini <ola@ologix.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby internal runtime methods
import java util arraylist
import org jruby ruby
import org jruby rubyarray
import org jruby rubymodule
import org jruby exceptions jumpexception
import org jruby parser staticscope
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime dynamicscope
import org jruby runtime frame
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
import org jruby ast executable yarvmachine
import org jruby internal runtime jumptarget
import org jruby runtime eventhook
/**
* @author <a href="mailto:ola.bini@ki.se">ola bini</a>
* @version $revision: 1.2 $
*/
public class yarvmethod extends dynamicmethod implements jumptarget
private yarvmachine instructionsequence iseq
private staticscope staticscope
private arity arity
public yarvmethod rubymodule implementationclass  yarvmachine instructionsequence iseq  staticscope staticscope  visibility visibility
super implementationclass  visibility  callconfiguration frame_and_scope
this staticscope   staticscope
this iseq   iseq
boolean opts   iseq args_arg_opts > 0    iseq args_rest > 0
boolean req   iseq args_argc > 0
if  req     opts
this arity   arity noarguments
else if req     opts
this arity   arity fixed iseq args_argc
else if opts     req
this arity   arity optional
else
this arity   arity required iseq args_argc
public irubyobject call threadcontext context  irubyobject self  rubymodule klazz  string name  irubyobject args  block block
assert args    null
ruby runtime   context getruntime
callconfig pre context  self  klazz  getarity    name  args  block  staticscope  this
try
preparearguments context  runtime  args
getarity   checkarity runtime  args
if  runtime haseventhooks    tracecall context  runtime  name
dynamicscope scope   context getcurrentscope
// why not setargvalues
scope setargvalues args  args length
return yarvmachine instance exec context  self  iseq body
catch  jumpexception returnjump rj
if  rj gettarget      this  return  irubyobject  rj getvalue
throw rj
finally
if  runtime haseventhooks    tracereturn context  runtime  name
callconfig post context
private void preparearguments threadcontext context  ruby runtime  irubyobject args
context setfile iseq filename
context setline  1
int expectedargscount   iseq args_argc
int restarg   iseq args_rest
boolean hasoptargs   iseq args_arg_opts > 0
if  expectedargscount > args length
throw runtime newargumenterror     args length       expectedargscount
// optargs and restargs require more work, so isolate them and arraylist creation here
if  hasoptargs    restarg     1
prepareoptorrestargs context  runtime  args  expectedargscount  restarg  hasoptargs
private irubyobject prepareoptorrestargs threadcontext context  ruby runtime  irubyobject args  int expectedargscount  int restarg  boolean hasoptargs
if  restarg    0    hasoptargs
int opt   expectedargscount   iseq args_arg_opts
if  opt < args length
throw runtime newargumenterror     args length       opt
int count   expectedargscount   iseq args_arg_opts   iseq args_rest
arraylist<irubyobject> allargs   new arraylist<irubyobject>
// combine static and optional args into a single list allargs
for  int i   0  i < count    i < args length  i
allargs add args
if  restarg    0
for  int i   expectedargscount  i < args length  i
allargs add args
// only set in scope if named
if  restarg >  0
rubyarray array   runtime newarray args length   expectedargscount
for  int i   expectedargscount  i < args length  i
array append args
context getcurrentscope   setvalue restarg  array  0
args    irubyobject allargs toarray new irubyobject
return args
private void tracereturn threadcontext context  ruby runtime  string name
if   runtime haseventhooks
return
frame frame   context getpreviousframe
runtime calleventhooks context  eventhook ruby_event_return  frame getfile    frame getline    name  getimplementationclass
private void tracecall threadcontext context  ruby runtime  string name
if   runtime haseventhooks
return
runtime calleventhooks context  eventhook ruby_event_call  context getfile    context getline    name  getimplementationclass
public arity getarity
return this arity
public dynamicmethod dup
return new yarvmethod getimplementationclass    iseq  staticscope  getvisibility
yarvmethod