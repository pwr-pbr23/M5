/*
**** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 jruby community
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby ext
import java io ioexception
import org jruby ruby
import org jruby runtime load library
public class lateloadinglibrary implements library
private string libraryname
private string classname
private classloader classloader
public lateloadinglibrary string libraryname  string classname  classloader classloader
this libraryname   libraryname
this classname   classname
this classloader   classloader
public synchronized void load ruby runtime  boolean wrap  throws ioexception
try
if  classloader    null    ruby issecurityrestricted
classloader   runtime getinstanceconfig   getloader
library library    library  classloader loadclass classname  newinstance
library load runtime  wrap
catch  throwable e
throw runtime newloaderror     libraryname       e