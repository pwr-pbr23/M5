/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2002-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 charles o nutter <headius@headius.com>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
* copyright (c) 2006 ola bini <ola.bini@ki.se>
* copyright (c) 2007 william n dortch <bill.dortch@gmail.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby runtime builtin
import java util list
import org jruby ruby
import org jruby rubyarray
import org jruby rubyclass
import org jruby rubyfloat
import org jruby rubyhash
import org jruby rubyinteger
import org jruby rubystring
import org jruby runtime block
import org jruby runtime threadcontext
/** object is the parent class of all classes in ruby. its methods are
* therefore available to all objects unless explicitly overridden.
*/
public interface irubyobject
/**
*
*/
public static final irubyobject null_array   new irubyobject
public irubyobject callsuper threadcontext context  irubyobject args  block block
public irubyobject callmethod threadcontext context  string name
public irubyobject callmethod threadcontext context  string name  irubyobject arg
public irubyobject callmethod threadcontext context  string name  irubyobject args
public irubyobject callmethod threadcontext context  string name  irubyobject args  block block
public irubyobject callmethod threadcontext context  int methodindex  string name
public irubyobject callmethod threadcontext context  int methodindex  string name  irubyobject arg
/**
* rubymethod isnil.
* @return boolean
*/
boolean isnil
/**
*
* @return
*/
boolean istrue
/**
* rubymethod istaint.
* @return boolean
*/
boolean istaint
/**
* rubymethod settaint.
* @param b
*/
void settaint boolean b
/**
* infect this object using the taint of another object
* @param obj
* @return
*/
irubyobject infectby irubyobject obj
/**
* rubymethod isfrozen.
* @return boolean
*/
boolean isfrozen
/**
* rubymethod setfrozen.
* @param b
*/
void setfrozen boolean b
/**
*
* @return
*/
boolean isimmediate
/**
* rubymethod getrubyclass.
* @return
*/
rubyclass getmetaclass
/**
* rubymethod getsingletonclass.
* @return rubyclass
*/
rubyclass getsingletonclass
/**
* rubymethod gettype.
* @return rubyclass
*/
rubyclass gettype
/**
* rubymethod respondsto.
* @param string
* @return boolean
*/
boolean respondsto string string
/**
* rubymethod getruntime.
* @return
*/
ruby getruntime
/**
* rubymethod getjavaclass.
* @return class
*/
class getjavaclass
/**
* convert the object into a symbol name if possible.
*
* @return string the symbol name
*/
string asjavastring
/** rb_obj_as_string
* @return
*/
rubystring asstring
/**
* methods which perform to_xxx if the object has such a method
* @return
*/
rubyarray converttoarray
/**
*
* @return
*/
rubyhash converttohash
/**
*
* @return
*/
rubyfloat converttofloat
/**
*
* @return
*/
rubyinteger converttointeger
/**
*
* @return
*/
rubyinteger converttointeger int convertmethodindex  string convertmethod
/**
*
* @return
*/
rubystring converttostring
/**
*
* @return
*/
irubyobject anytostring
/**
*
* @return
*/
irubyobject checkstringtype
/**
*
* @return
*/
irubyobject checkarraytype
/**
* rubymethod dup.
* @return
*/
irubyobject dup
/**
* rubymethod inspect.
* @return string
*/
irubyobject inspect
/**
* rubymethod rbclone.
* @return irubyobject
*/
irubyobject rbclone
/**
* @return true if an object is ruby module instance (note that it will return false for ruby classes).
* if is_a? semantics is required, use <code>(someobject instanceof rubymodule)</code> instead.
*/
boolean ismodule
/**
* @return true if an object is ruby class instance (note that it will return false for ruby singleton classes).
* if is_a? semantics is required, use <code>(someobject instanceof rubyclass/metaclass)</code> instead.
*/
boolean isclass
/**
* our version of data_wrap_struct.
*
* this method will just set a private pointer to the object provided. this pointer is transient
* and will not be accessible from ruby.
*
* @param obj the object to wrap
*/
void datawrapstruct object obj
/**
* our version of data_get_struct.
*
* returns a wrapped data value if there is one, otherwise returns null.
*
* @return the object wrapped.
*/
object datagetstruct
/**
*
* @return
*/
irubyobject id
public irubyobject op_equal threadcontext context  irubyobject other
public irubyobject op_eqq threadcontext context  irubyobject other
public boolean eql irubyobject other
public void addfinalizer irubyobject finalizer
public void removefinalizers
//
// common variable methods
//
/**
* returns true if object has any variables, defined as:
* <ul>
* <li> instance variables
* <li> class variables
* <li> constants
* <li> internal variables, such as those used when marshalling ranges and exceptions
* </ul>
* @return true if object has any variables, else false
*/
boolean hasvariables
/**
* @return the count of all variables (ivar/cvar/constant/internal)
*/
int getvariablecount
/**
* sets object's variables to those in the supplied list,
* removing/replacing any previously defined variables.  applies
* to all variable types (ivar/cvar/constant/internal).
*
* @param variables the variables to be set for object
*/
void syncvariables list<variable<irubyobject>> variables
/**
* @return a list of all variables (ivar/cvar/constant/internal)
*/
list<variable<irubyobject>> getvariablelist
//
// instance variable methods
//
instancevariables getinstancevariables
//
// internal variable methods
//
internalvariables getinternalvariables
/**
* @return a list of all variable names (ivar/cvar/constant/internal)
*/
list<string> getvariablenamelist