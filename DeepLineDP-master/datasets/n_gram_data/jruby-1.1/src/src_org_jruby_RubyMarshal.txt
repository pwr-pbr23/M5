/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2002 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2002-2007 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2003 thomas e enebo <enebo@acm.org>
* copyright (c) 2004-2005 charles o nutter <headius@headius.com>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import java io bytearrayinputstream
import java io bytearrayoutputstream
import java io eofexception
import java io ioexception
import java io inputstream
import java io outputstream
import org jruby anno jrubymethod
import org jruby javasupport util runtimehelpers
import org jruby runtime block
import org jruby runtime constants
import org jruby runtime methodindex
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
import org jruby runtime marshal marshalstream
import org jruby runtime marshal unmarshalstream
import org jruby util bytelist
import org jruby util ioinputstream
import org jruby util iooutputstream
/**
* marshal module
*
* @author anders
*/
public class rubymarshal
public static rubymodule createmarshalmodule ruby runtime
rubymodule module   runtime definemodule
runtime setmarshal module
module defineannotatedmethods rubymarshal class
module defineconstant    runtime newfixnum constants marshal_major
module defineconstant    runtime newfixnum constants marshal_minor
return module
@jrubymethod name      required   1  optional   2  frame   true  module   true
public static irubyobject dump irubyobject recv  irubyobject args  block unusedblock
if  args length < 1
throw recv getruntime   newargumenterror
irubyobject objecttodump   args
irubyobject io   null
int depthlimit    1
if  args length >  2
if  args respondsto
io   args
else if  args instanceof rubyfixnum
depthlimit    int    rubyfixnum  args  getlongvalue
else
throw recv getruntime   newtypeerror
if  args length    3
depthlimit    int    rubyfixnum  args  getlongvalue
try
if  io    null
dumptostream objecttodump  outputstream io   depthlimit
return io
bytearrayoutputstream stringoutput   new bytearrayoutputstream
dumptostream objecttodump  stringoutput  depthlimit
return rubystring newstring recv getruntime    new bytelist stringoutput tobytearray   false
catch  ioexception ioe
throw recv getruntime   newioerrorfromexception ioe
private static outputstream outputstream irubyobject out
setbinmodeifpossible out
if  out instanceof rubyio
return   rubyio  out  getoutstream
return new iooutputstream out
private static void setbinmodeifpossible irubyobject io
if  io respondsto
io callmethod io getruntime   getcurrentcontext
@jrubymethod name           required   1  optional   1  frame   true  module   true
public static irubyobject load threadcontext context  irubyobject recv  irubyobject args  block unusedblock
try
if  args length < 1
throw recv getruntime   newargumenterror
if  args length > 2
throw recv getruntime   newargumenterror     args length
irubyobject in   null
irubyobject proc   null
switch  args length
case 2
proc   args
case 1
in   args
inputstream rawinput
if  in    null    in respondsto
rawinput   inputstream in
else if  in    null    in respondsto
rubystring instring    rubystring  runtimehelpers invoke context  in  methodindex to_str     irubyobject null_array
bytelist bytes   instring getbytelist
rawinput   new bytearrayinputstream bytes unsafebytes    bytes begin    bytes length
else
throw recv getruntime   newtypeerror
unmarshalstream input   new unmarshalstream recv getruntime    rawinput  proc
return input unmarshalobject
catch  eofexception ee
throw recv getruntime   neweoferror
catch  ioexception ioe
throw recv getruntime   newioerrorfromexception ioe
private static inputstream inputstream irubyobject in
setbinmodeifpossible in
if  in instanceof rubyio
return   rubyio  in  getinstream
return new ioinputstream in
private static void dumptostream irubyobject object  outputstream rawoutput  int depthlimit
throws ioexception
marshalstream output   new marshalstream object getruntime    rawoutput  depthlimit
output dumpobject object