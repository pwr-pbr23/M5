/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2002-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby javasupport
import java lang reflect array
import org jruby ruby
import org jruby rubyclass
import org jruby rubyfixnum
import org jruby rubyinteger
import org jruby rubymodule
import org jruby runtime objectallocator
import org jruby runtime builtin irubyobject
public class javaarray extends javaobject
public javaarray ruby runtime  object array
super runtime  runtime getjavasupport   getjavaarrayclass    array
assert array getclass   isarray
public static rubyclass createjavaarrayclass ruby runtime  rubymodule javamodule
// fixme: not_allocatable_allocator is probably not right here, since we might
// eventually want javaarray to be marshallable. jruby-414
return javamodule defineclassunder    javamodule fastgetclass     objectallocator not_allocatable_allocator
public rubyfixnum length
return getruntime   newfixnum getlength
private int getlength
return array getlength getvalue
public boolean equals object other
return other instanceof javaarray
this getvalue        javaarray other  getvalue
public irubyobject aref irubyobject index
if     index instanceof rubyinteger
throw getruntime   newtypeerror index  getruntime   getinteger
int intindex    int    rubyinteger  index  getlongvalue
if  intindex < 0    intindex >  getlength
throw getruntime   newargumenterror
intindex
getlength
object result   array get getvalue    intindex
if  result    null
return getruntime   getnil
return javaobject wrap getruntime    result
public irubyobject aset irubyobject index  irubyobject value
if     index instanceof rubyinteger
throw getruntime   newtypeerror index  getruntime   getinteger
int intindex    int    rubyinteger  index  getlongvalue
if     value instanceof javaobject
throw getruntime   newtypeerror     value
object javaobject     javaobject  value  getvalue
try
array set getvalue    intindex  javaobject
catch  indexoutofboundsexception e
throw getruntime   newargumenterror
intindex
getlength
catch  arraystoreexception e
throw getruntime   newargumenterror
javaobject getclass
getvalue   getclass
return value
public irubyobject afill irubyobject beginindex  irubyobject endindex  irubyobject value
if     beginindex instanceof rubyinteger
throw getruntime   newtypeerror beginindex  getruntime   getinteger
int intindex    int    rubyinteger  beginindex  getlongvalue
if     endindex instanceof rubyinteger
throw getruntime   newtypeerror endindex  getruntime   getinteger
int intendindex    int    rubyinteger  endindex  getlongvalue
if     value instanceof javaobject
throw getruntime   newtypeerror     value
object javaobject     javaobject  value  getvalue
object self   getvalue
try
for     intindex < intendindex  intindex
array set self  intindex  javaobject
catch  indexoutofboundsexception e
throw getruntime   newargumenterror
intindex
getlength
catch  arraystoreexception e
throw getruntime   newargumenterror
javaobject getclass
getvalue   getclass
return value