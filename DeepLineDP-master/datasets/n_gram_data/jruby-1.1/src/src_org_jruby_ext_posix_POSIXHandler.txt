package org jruby ext posix
import java io file
import java io inputstream
import java io printstream
/**
* the posixhandler class allows you do implement the runtime-specific behavior you need in
* such a way that it is insulated from the implementation of the posix library.  implementing
* each of the methods in this interface should give you are working posix implementation.
*
*/
public interface posixhandler
public enum warning_id
dummy_value_used
private string messageid
warning_id string messageid
this messageid   messageid
public void error posix errors error  string extradata
/**
* specify that posix method is unimplemented.  in jruby we generate an
* exception with this.
*/
public void unimplementederror string methodname
public void warn warning_id id  string message  object    data
/**
* should we provide verbose output about posix activities
*/
public boolean isverbose
/**
* get current working directory of your runtime.
*/
public file getcurrentworkingdirectory
/**
* get current set of environment variables of your runtime.
*/
public string getenv
/**
* get your runtime's current inputstream
*/
public inputstream getinputstream
/**
* get your runtime's current outputstream
*/
public printstream getoutputstream
/**
* get your runtimes process id.  this is only intended for non-native posix support (e.g.
* environments where jna cannot load or security restricted environments).  in jruby we
* found a number of packages which would rather have some identity for the runtime than
* nothing.
*
* note: if you do not want this to work you impl can just call unimplementederror(string).
*/
public int getpid
/**
* get your runtime's current errorstream
*/
public printstream geterrorstream