/*
**** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2005 thomas e enebo <enebo@acm.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import java io ioexception
import java io printwriter
import java io stringwriter
import org jruby anno jrubymethod
import org jruby javasupport java
import org jruby javasupport javaobject
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime builtin irubyobject
import org jruby runtime load library
import org jruby internal runtime methods dynamicmethod
import org jruby ast node
import org jruby compiler astinspector
import org jruby compiler astcompiler
import org jruby compiler impl standardasmcompiler
import org jruby runtime interpretedblock
import org jruby runtime threadcontext
import org objectweb asm classreader
import org objectweb asm util traceclassvisitor
/**
* module which defines jruby-specific methods for use.
*/
public class rubyjruby
public static rubymodule createjruby ruby runtime
threadcontext context   runtime getcurrentcontext
runtime getkernel   callmethod context     runtime newstring
rubymodule jrubymodule   runtime definemodule
jrubymodule defineannotatedmethods rubyjruby class
rubyclass compiledscriptclass   jrubymodule defineclassunder   runtime getobject    runtime getobject   getallocator
compiledscriptclass attr_accessor context  new irubyobject runtime newsymbol     runtime newsymbol     runtime newsymbol     runtime newsymbol
compiledscriptclass defineannotatedmethods jrubycompiledscript class
return jrubymodule
public static rubymodule createjrubyext ruby runtime
runtime getkernel   callmethod runtime getcurrentcontext      runtime newstring
rubymodule mjrubyext   runtime getorcreatemodule    definemoduleunder
mjrubyext defineannotatedmethods jrubyextensions class
runtime getobject   includemodule mjrubyext
return mjrubyext
public static class extlibrary implements library
public void load ruby runtime  boolean wrap  throws ioexception
rubyjruby createjrubyext runtime
@jrubymethod name      frame   true  module   true
public static irubyobject runtime irubyobject recv  block unusedblock
return java java_to_ruby recv  javaobject wrap recv getruntime    recv getruntime     block null_block
@jrubymethod name      frame   true  module   true
public static irubyobject getobjectspaceenabled irubyobject recv  block b
ruby runtime   recv getruntime
return rubyboolean newboolean
runtime  runtime isobjectspaceenabled
@jrubymethod name      required   1  frame   true  module   true
public static irubyobject setobjectspaceenabled
irubyobject recv  irubyobject arg  block b
ruby runtime   recv getruntime
runtime setobjectspaceenabled arg istrue
return runtime getnil
@jrubymethod name           optional   3  frame   true  module   true
public static irubyobject parse irubyobject recv  irubyobject args  block block
if block isgiven
if block getbody   instanceof org jruby runtime compiledblock
throw new runtimeexception
arity checkargumentcount recv getruntime   args 0 0
return java java_to_ruby recv  javaobject wrap recv getruntime      interpretedblock block getbody    getiternode   getbodynode     block null_block
else
arity checkargumentcount recv getruntime   args 1 3
string filename
boolean extrapositioninformation   false
rubystring content   args converttostring
if args length>1
filename   args converttostring   tostring
if args length>2
extrapositioninformation   args istrue
return java java_to_ruby recv  javaobject wrap recv getruntime
recv getruntime   parse content getbytelist    filename  null  0  extrapositioninformation    block null_block
@jrubymethod name      optional   3  frame   true  module   true
public static irubyobject compile irubyobject recv  irubyobject args  block block
node node
string filename
rubystring content   recv getruntime   newstring
if block isgiven
arity checkargumentcount recv getruntime   args 0 0
if block getbody   instanceof org jruby runtime compiledblock
throw new runtimeexception
node bnode     interpretedblock block getbody    getiternode   getbodynode
node   new org jruby ast rootnode bnode getposition    block getbinding   getdynamicscope    bnode
filename       node getposition   getfile
else
arity checkargumentcount recv getruntime   args 1 3
filename
boolean extrapositioninformation   false
content   args converttostring
if args length>1
filename   args converttostring   tostring
if args length>2
extrapositioninformation   args istrue
node   recv getruntime   parse content getbytelist    filename  null  0  extrapositioninformation
string classname
if  filename equals
classname
else
classname   filename replace       replaceall       replaceall
astinspector inspector   new astinspector
inspector inspect node
standardasmcompiler asmcompiler   new standardasmcompiler classname  filename
astcompiler compiler   new astcompiler
compiler compileroot node  asmcompiler  inspector
byte bts   asmcompiler getclassbytearray
irubyobject compiledscript     rubymodule recv  fastgetconstant    callmethod recv getruntime   getcurrentcontext
compiledscript callmethod recv getruntime   getcurrentcontext       recv getruntime   newstring filename
compiledscript callmethod recv getruntime   getcurrentcontext       recv getruntime   newstring classname
compiledscript callmethod recv getruntime   getcurrentcontext       content
compiledscript callmethod recv getruntime   getcurrentcontext       java java_to_ruby recv  javaobject wrap recv getruntime    bts   block null_block
return compiledscript
@jrubymethod name      required   1  module   true
public static irubyobject reference irubyobject recv  irubyobject obj
return java wrap recv getruntime   getjavasupport   getjavautilitiesmodule
javaobject wrap recv getruntime    obj
public static class jrubycompiledscript
@jrubymethod name
public static irubyobject compiled_script_to_s irubyobject recv
return recv getinstancevariables   fastgetinstancevariable
@jrubymethod name
public static irubyobject compiled_script_inspect irubyobject recv
return recv getruntime   newstring     recv getinstancevariables   fastgetinstancevariable
@jrubymethod name
public static irubyobject compiled_script_inspect_bytecode irubyobject recv
stringwriter sw   new stringwriter
classreader cr   new classreader  byte org jruby javasupport javautil convertrubytojava recv getinstancevariables   fastgetinstancevariable    byte class
traceclassvisitor cv   new traceclassvisitor new printwriter sw
cr accept cv  classreader skip_debug
return recv getruntime   newstring sw tostring
public static class jrubyextensions
@jrubymethod name      required   2  module   true
public static irubyobject steal_method irubyobject recv  irubyobject type  irubyobject methodname
rubymodule to_add   null
if recv instanceof rubymodule
to_add    rubymodule recv
else
to_add   recv getsingletonclass
string name   methodname tostring
if   type instanceof rubymodule
throw recv getruntime   newargumenterror
dynamicmethod method     rubymodule type  searchmethod name
if method    null    method isundefined
throw recv getruntime   newargumenterror     name       type
to_add addmethod name  method
return recv getruntime   getnil
@jrubymethod name      required   1  rest   true  module   true
public static irubyobject steal_methods irubyobject recv  irubyobject args
irubyobject type   args
for int i 1 i<args length i
steal_method recv  type  args
return recv getruntime   getnil