/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2002 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2004 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby ast
import org jruby rubyregexp
import org jruby ast types iliteralnode
import org jruby ast visitor nodevisitor
import org jruby evaluator instruction
import org jruby lexer yacc isourceposition
/**
* a regexp which contains some expressions which will need to be evaluated everytime the regexp
* is used for a match.
*/
public class dregexpnode extends listnode implements iliteralnode
private final int options
private final boolean once
private rubyregexp onceregexp
public dregexpnode isourceposition position
this position  0  false
public dregexpnode isourceposition position  dstrnode node  int options  boolean once
this position  options  once
addall node
public dregexpnode isourceposition position  int options  boolean once
super position  nodetype dregexpnode
this options   options
this once   once
/**
* accept for the visitor pattern.
* @param ivisitor the visitor
**/
public instruction accept nodevisitor ivisitor
return ivisitor visitdregxnode this
/**
* gets the once.
* @return returns a boolean
*/
public boolean getonce
return once
/**
* gets the options.
* @return returns a int
*/
public int getoptions
return options
/**
* for regular expressions with /o flag
* @return
*/
public rubyregexp getonceregexp
return onceregexp
/**
* for regular expressions with /o flag, the value in here can be used for subsequent evaluations.
* setting will only succeed if it is a regular expression with /o flag, and the value hasn't been already set.
* @param regexp
*/
public void setonceregexp rubyregexp regexp
if  once    onceregexp    null  this onceregexp   regexp