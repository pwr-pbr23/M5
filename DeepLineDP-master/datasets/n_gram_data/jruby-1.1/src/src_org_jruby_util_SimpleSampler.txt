/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 ola bini <ola.bini@gmail.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby util
import java util arraylist
import java util collections
import java util comparator
import java util list
import java util map
import java util hashmap
import java util weakhashmap
import org jruby runtime frame
import org jruby runtime threadcontext
/**
* @author <a href="mailto:ola.bini@gmail.com">ola bini</a>
*/
public class simplesampler
private final static map<threadcontext  object> current   new weakhashmap<threadcontext  object>
private static boolean reported   false
private final static map<string  integer> samples   new hashmap<string  integer>
private final static list<list<string>> traces   new arraylist<list<string>>
public static void registerthreadcontext threadcontext tc
synchronized current
current put tc  null
public static void startsamplethread
new thread new runnable
public void run
simplesampler runsampling
start
public static void report
if  reported
system err println
system err println
list<string> samples   new arraylist<string>
samples addall samples keyset
collections sort samples  new comparator<string>
public int compare string o1  string o2
return samples get o2    samples get o1
for list<string> ls   traces
if ls size   > 1
system err println     system identityhashcode ls
for string ss   ls
system err println     ss
system err println
string blanks
for string ss   samples
int len   math max 60   ss length    0
system err println     ss   blanks substring 0 len         samples get ss
reported   true
private static void runsampling
long interval   long parselong system getproperty
int depth   integer parseint system getproperty
system err println
system err println     interval
system err println     depth
synchronized current
while  reported
try
current wait interval
catch interruptedexception e
try
for threadcontext tc   current keyset
if tc    null
frame frames   tc createbacktrace 1  false
if frames    null
list<string> trace   new arraylist<string> depth
for int i    math max frames length   depth 0    i<frames length  i
frame f   frames
string name   f getklazz         f getname
if  f isbindingframe       name equals
trace add name
integer v   samples get name
if v    null
v   1
else
v
samples put name  v
traces add trace
catch exception e
simplesampler