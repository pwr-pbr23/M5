/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 ola bini <ola@ologix.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby ext socket
import java io filedescriptor
import java io ioexception
import java net inetaddress
import java net unknownhostexception
import java nio channels datagramchannel
import java nio channels socketchannel
import java util arraylist
import java util list
import java util regex matcher
import java util regex pattern
import org jruby ruby
import org jruby rubyarray
import org jruby rubyclass
import org jruby rubyio
import org jruby rubymodule
import org jruby rubynumeric
import org jruby rubystring
import org jruby exceptions raiseexception
import org jruby runtime arity
import org jruby runtime callbackfactory
import org jruby runtime objectallocator
import org jruby runtime builtin irubyobject
import org jruby runtime load library
import org jruby util bytelist
import org jruby util io modeflags
import org jruby util io channeldescriptor
import org jruby util io invalidvalueexception
/**
* @author <a href="mailto:ola.bini@ki.se">ola bini</a>
*/
public class rubysocket extends rubybasicsocket
public static class service implements library
public void load final ruby runtime  boolean wrap  throws ioexception
runtime defineclass   runtime fastgetclass     runtime fastgetclass    getallocator
rubybasicsocket createbasicsocket runtime
rubysocket createsocket runtime
if runtime getinstanceconfig   nativeenabled    rubyunixsocket tryunixdomainsocket
rubyunixsocket createunixsocket runtime
rubyunixserver createunixserver runtime
rubyipsocket createipsocket runtime
rubytcpsocket createtcpsocket runtime
rubytcpserver createtcpserver runtime
rubyudpsocket createudpsocket runtime
private static objectallocator socket_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new rubysocket runtime  klass
public static final int ni_dgram   16
public static final int ni_maxhost   1025
public static final int ni_maxserv   32
public static final int ni_namereqd   4
public static final int ni_nofqdn   1
public static final int ni_numerichost   2
public static final int ni_numericserv   8
public static final int sol_ip   0
public static final int sol_socket   65535
public static final int sol_tcp   6
public static final int sol_udp   17
public static final int so_broadcast   32
public static final int so_debug   1
public static final int so_dontroute   16
public static final int so_error   4103
public static final int so_keepalive   8
public static final int so_linger   128
public static final int so_oobinline   256
public static final int so_rcvbuf   4098
public static final int so_rcvlowat   4100
public static final int so_rcvtimeo   4102
public static final int so_reuseaddr   4
public static final int so_sndbuf   4097
public static final int so_sndlowat   4099
public static final int so_sndtimeo   4101
public static final int so_timestamp   1024
public static final int so_type   4104
public static final int sock_stream   1
public static final int sock_dgram   2
public static final int sock_raw   3
public static final int af_unspec   0
public static final int pf_unspec   0
public static final int af_unix   1
public static final int pf_unix   1
public static final int af_inet   2
public static final int pf_inet   2
public static final int ipproto_ip   0
public static final int ipproto_icmp   1
public static final int ipproto_tcp   6
public static final int ipproto_udp   17
static void createsocket ruby runtime
rubyclass rb_csocket   runtime defineclass    runtime fastgetclass     socket_allocator
callbackfactory cfact   runtime callbackfactory rubysocket class
rubymodule rb_mconstants   rb_csocket definemoduleunder
// we don't have to define any that we don't support; see socket.c
rb_mconstants fastsetconstant    runtime newfixnum sock_stream
rb_mconstants fastsetconstant    runtime newfixnum sock_dgram
rb_mconstants fastsetconstant    runtime newfixnum sock_raw
rb_mconstants fastsetconstant    runtime newfixnum pf_unspec
rb_mconstants fastsetconstant    runtime newfixnum af_unspec
rb_mconstants fastsetconstant    runtime newfixnum pf_inet
rb_mconstants fastsetconstant    runtime newfixnum af_inet
// mandatory constants we haven't implemented
rb_mconstants fastsetconstant    runtime newfixnum 0x01
rb_mconstants fastsetconstant    runtime newfixnum sol_socket
rb_mconstants fastsetconstant    runtime newfixnum sol_ip
rb_mconstants fastsetconstant    runtime newfixnum sol_tcp
rb_mconstants fastsetconstant    runtime newfixnum sol_udp
rb_mconstants fastsetconstant    runtime newfixnum 0
rb_mconstants fastsetconstant    runtime newfixnum 1
rb_mconstants fastsetconstant    runtime newfixnum 6
rb_mconstants fastsetconstant    runtime newfixnum 17
//  ipproto_raw = 255
rb_mconstants fastsetconstant    runtime newfixnum 0x00000000
rb_mconstants fastsetconstant    runtime newfixnum 0xffffffff
rb_mconstants fastsetconstant    runtime newfixnum 0x7f000001
rb_mconstants fastsetconstant    runtime newfixnum 0xe0000000
rb_mconstants fastsetconstant    runtime newfixnum 0xe0000001
rb_mconstants fastsetconstant    runtime newfixnum 0xe00000ff
rb_mconstants fastsetconstant    runtime newfixnum 0xffffffff
rb_mconstants fastsetconstant    runtime newfixnum 0
rb_mconstants fastsetconstant    runtime newfixnum 1
rb_mconstants fastsetconstant    runtime newfixnum 2
// constants webrick crashes without
rb_mconstants fastsetconstant    runtime newfixnum 1
// constants from macos x 10.4
rb_mconstants fastsetconstant    runtime newfixnum so_broadcast
rb_mconstants fastsetconstant    runtime newfixnum so_debug
rb_mconstants fastsetconstant    runtime newfixnum so_dontroute
rb_mconstants fastsetconstant    runtime newfixnum so_error
rb_mconstants fastsetconstant    runtime newfixnum so_keepalive
rb_mconstants fastsetconstant    runtime newfixnum so_linger
rb_mconstants fastsetconstant    runtime newfixnum so_oobinline
rb_mconstants fastsetconstant    runtime newfixnum so_rcvbuf
rb_mconstants fastsetconstant    runtime newfixnum so_rcvlowat
rb_mconstants fastsetconstant    runtime newfixnum so_rcvtimeo
rb_mconstants fastsetconstant    runtime newfixnum so_reuseaddr
rb_mconstants fastsetconstant    runtime newfixnum so_sndbuf
rb_mconstants fastsetconstant    runtime newfixnum so_sndlowat
rb_mconstants fastsetconstant    runtime newfixnum so_sndtimeo
rb_mconstants fastsetconstant    runtime newfixnum so_timestamp
rb_mconstants fastsetconstant    runtime newfixnum so_type
// drb needs defined
rb_mconstants fastsetconstant    runtime newfixnum 1
// flags/limits used by net::ssh
rb_mconstants fastsetconstant    runtime newfixnum ni_dgram
rb_mconstants fastsetconstant    runtime newfixnum ni_maxhost
rb_mconstants fastsetconstant    runtime newfixnum ni_maxserv
rb_mconstants fastsetconstant    runtime newfixnum ni_namereqd
rb_mconstants fastsetconstant    runtime newfixnum ni_nofqdn
rb_mconstants fastsetconstant    runtime newfixnum ni_numerichost
rb_mconstants fastsetconstant    runtime newfixnum ni_numericserv
rb_csocket includemodule rb_mconstants
rb_csocket definefastmethod    cfact getfastmethod    irubyobject class  irubyobject class  irubyobject class
rb_csocket getmetaclass   definefastmethod    cfact getfastsingletonmethod
rb_csocket getmetaclass   definefastmethod    cfact getfastoptsingletonmethod
rb_csocket getmetaclass   definefastmethod    cfact getfastsingletonmethod    irubyobject class
rb_csocket getmetaclass   definefastmethod    cfact getfastoptsingletonmethod
rb_csocket getmetaclass   definefastmethod    cfact getfastoptsingletonmethod
rb_csocket getmetaclass   definefastmethod    cfact getfastoptsingletonmethod
rb_csocket getmetaclass   definefastmethod    cfact getfastsingletonmethod    irubyobject class  irubyobject class
rb_csocket getmetaclass   definefastmethod    cfact getfastsingletonmethod    irubyobject class  irubyobject class
rb_csocket getmetaclass   definefastmethod    cfact getfastsingletonmethod    irubyobject class
rb_csocket getmetaclass   definefastmethod    cfact getfastsingletonmethod    irubyobject class
rb_csocket getmetaclass   definefastmethod    cfact getfastsingletonmethod    irubyobject class
public rubysocket ruby runtime  rubyclass type
super runtime  type
protected int getsotypedefault
return sotype
private int sodomain
private int sotype
private int soprotocol
public irubyobject initialize irubyobject domain  irubyobject type  irubyobject protocol
try
if domain instanceof rubystring
string domainstring   domain tostring
if domainstring equals
sodomain   af_inet
else if domainstring equals
sodomain   pf_inet
else
throw sockerr this      domainstring
else
sodomain   rubynumeric fix2int domain
if type instanceof rubystring
string typestring   type tostring
if typestring equals
sotype   sock_stream
else if typestring equals
sotype   sock_dgram
else
throw sockerr this      typestring
else
sotype   rubynumeric fix2int type
soprotocol   rubynumeric fix2int protocol
if sotype    sock_stream
socketchannel channel   socketchannel open
initsocket new channeldescriptor channel  rubyio getnewfileno    new modeflags modeflags rdwr   new filedescriptor
else if sotype    sock_dgram
datagramchannel channel   datagramchannel open
initsocket new channeldescriptor channel  rubyio getnewfileno    new modeflags modeflags rdwr   new filedescriptor
catch  invalidvalueexception ex
throw getruntime   newerrnoeinvalerror
catch ioexception e
throw sockerr this      e tostring
return this
private static runtimeexception sockerr irubyobject recv  string msg
return new raiseexception recv getruntime    recv getruntime   fastgetclass     msg  true
public static irubyobject gethostname irubyobject recv
try
return recv getruntime   newstring inetaddress getlocalhost   gethostname
catch unknownhostexception e
try
return recv getruntime   newstring inetaddress getbyaddress new byte 0 0 0 0   gethostname
catch unknownhostexception e2
throw sockerr recv
private static inetaddress intoaddress irubyobject recv  string s
try
byte bs   bytelist plain s
return inetaddress getbyaddress bs
catch exception e
throw sockerr recv      e tostring
private static string intostring irubyobject recv  inetaddress as
try
return new string bytelist plain as getaddress
catch exception e
throw sockerr recv      e tostring
public static irubyobject gethostbyaddr irubyobject recv  irubyobject args
ruby runtime   recv getruntime
irubyobject ret   new irubyobject
ret   runtime newstring intoaddress recv args converttostring   tostring    getcanonicalhostname
ret   runtime newarray
ret   runtime newfixnum 2      af_inet
ret   args
return runtime newarraynocopy ret
public static irubyobject getservbyname irubyobject recv  irubyobject args
ruby runtime   recv getruntime
int argc   arity checkargumentcount runtime  args  1  2
string name   args converttostring   tostring
string service   argc    1 ?     args converttostring   tostring
integer port   iana servicetoport get name       service
if port    null
throw sockerr recv      name       service
return runtime newfixnum port intvalue
public static irubyobject pack_sockaddr_un irubyobject recv  irubyobject filename
stringbuffer sb   new stringbuffer
sb append  char 0
sb append  char 1
string str   filename converttostring   tostring
sb append str
for int i str length   i<104 i
sb append  char 0
return recv getruntime   newstring sb tostring
public static irubyobject pack_sockaddr_in irubyobject recv  irubyobject port  irubyobject host
stringbuffer sb   new stringbuffer
sb append  char 16
sb append  char 2
int iport   rubynumeric fix2int port
sb append  char   iport >> 8    0xff
sb append  char   iport   0xff
try
string str   host isnil   ? null   host converttostring   tostring
if str    null      equals str
sb append  char 0
sb append  char 0
sb append  char 0
sb append  char 0
else
inetaddress addrs   inetaddress getallbyname str
byte addr   addrs getaddress
sb append  char addr
sb append  char addr
sb append  char addr
sb append  char addr
catch unknownhostexception e
throw sockerr recv
sb append  char 0
sb append  char 0
sb append  char 0
sb append  char 0
sb append  char 0
sb append  char 0
sb append  char 0
sb append  char 0
return recv getruntime   newstring sb tostring
public static irubyobject unpack_sockaddr_in irubyobject recv  irubyobject addr
string val   addr converttostring   tostring
if val charat 0     16    val charat 1     2
throw recv getruntime   newargumenterror
int port    val charat 2  << 8     val charat 3
stringbuffer sb   new stringbuffer
sb append  int val charat 4
sb append
sb append  int val charat 5
sb append
sb append  int val charat 6
sb append
sb append  int val charat 7
irubyobject result   new irubyobject
recv getruntime   newfixnum port
recv getruntime   newstring sb tostring
return recv getruntime   newarraynocopy result
public static irubyobject gethostbyname irubyobject recv  irubyobject hostname
try
inetaddress addr   inetaddress getbyname hostname converttostring   tostring
ruby runtime   recv getruntime
irubyobject ret   new irubyobject
ret   runtime newstring addr getcanonicalhostname
ret   runtime newarray
ret   runtime newfixnum 2      af_inet
ret   runtime newstring intostring recv addr
return runtime newarraynocopy ret
catch unknownhostexception e
throw sockerr recv
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)
public static irubyobject getaddrinfo irubyobject recv  irubyobject args
args   arity scanargs recv getruntime   args 2 4
try
ruby r   recv getruntime
irubyobject host   args
irubyobject port   args
if port instanceof rubystring
port   getservbyname recv  new irubyobject port
//irubyobject family = args[2];
irubyobject socktype   args
//irubyobject protocol = args[4];
//irubyobject flags = args[5];
boolean sock_stream   true
boolean sock_dgram   true
if  socktype isnil
int val   rubynumeric fix2int socktype
if val    1
sock_dgram   false
else if val    2
sock_stream   false
inetaddress addrs   inetaddress getallbyname host isnil   ? null   host converttostring   tostring
list<irubyobject> l   new arraylist<irubyobject>
for int i 0 i<addrs length i
irubyobject c
if sock_dgram
c   new irubyobject
c   r newstring
c   port
c   r newstring addrs getcanonicalhostname
c   r newstring addrs gethostaddress
c   r newfixnum pf_inet
c   r newfixnum sock_dgram
c   r newfixnum ipproto_udp
l add r newarraynocopy c
if sock_stream
c   new irubyobject
c   r newstring
c   port
c   r newstring addrs getcanonicalhostname
c   r newstring addrs gethostaddress
c   r newfixnum pf_inet
c   r newfixnum sock_stream
c   r newfixnum ipproto_tcp
l add r newarraynocopy c
return r newarray l
catch unknownhostexception e
throw sockerr recv
// fixme: may need to broaden for ipv6 ip address strings
private static final pattern string_address_pattern
pattern compile
private static final int host_group   3
private static final int port_group   5
public static irubyobject getnameinfo irubyobject recv  irubyobject args
ruby runtime   recv getruntime
int argc   arity checkargumentcount runtime  args  1  2
int flags   argc    2 ? rubynumeric num2int args    0
irubyobject arg0   args
string host  port
if  arg0 instanceof rubyarray
list list     rubyarray arg0  getlist
int len   list size
if  len < 3    len > 4
throw runtime newargumenterror   len
// todo: validate port as numeric
host   list get 2  tostring
port   list get 1  tostring
else if  arg0 instanceof rubystring
string arg     rubystring arg0  tostring
matcher m   string_address_pattern matcher arg
if   m matches
throw runtime newargumenterror
if   host   m group host_group      null    host length      0
port   m group port_group      null    port length      0
throw runtime newargumenterror
else
throw runtime newargumenterror
inetaddress addr
try
addr   inetaddress getbyname host
catch  unknownhostexception e
throw sockerr recv     host
if   flags   ni_numerichost     0
host   addr getcanonicalhostname
else
host   addr gethostaddress
return runtime newarray runtime newstring host   runtime newstring port
rubysocket