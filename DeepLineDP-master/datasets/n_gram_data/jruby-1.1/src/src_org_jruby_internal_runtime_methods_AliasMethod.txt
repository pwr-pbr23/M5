/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2002-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004-2005 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby internal runtime methods
import org jruby rubymodule
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
/**
*
* @author  jpetersen
*/
public class aliasmethod extends dynamicmethod
private dynamicmethod oldmethod
private string oldname
/*
* this code used to try and optimize the case of when oldmethod is an aliasmethod.
* this seems a little overkill.
*/
public aliasmethod rubymodule implementationclass  dynamicmethod oldmethod  string oldname
super implementationclass  oldmethod getvisibility    null
this oldname   oldname
this oldmethod   oldmethod
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
return oldmethod call context  self  clazz  oldname  args  block
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  block block
return oldmethod call context  self  clazz  oldname  block
public dynamicmethod dup
return new aliasmethod implementationclass  oldmethod  oldname
public arity getarity
return oldmethod getarity
public dynamicmethod getrealmethod
return oldmethod getrealmethod