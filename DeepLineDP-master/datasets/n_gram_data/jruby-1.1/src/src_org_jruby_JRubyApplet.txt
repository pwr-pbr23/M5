/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 charles nutter <charles.o.nutter@sun.com>
* copyright (c) 2008 mentalguy <mental@rydia.net>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import java applet applet
import java awt borderlayout
import java awt color
import java awt font
import java awt insets
import java awt graphics
import java awt graphicsconfiguration
import java awt graphicsenvironment
import java awt image volatileimage
import java io inputstream
import java io ioexception
import java io pipedinputstream
import java io printstream
import java io printwriter
import java io stringwriter
import java net url
import java util arrays
import java lang reflect invocationtargetexception
import org jruby ruby
import org jruby rubyinstanceconfig
import org jruby rubymodule
import org jruby rubyproc
import org jruby anno jrubymethod
import org jruby demo textareareadline
import org jruby javasupport javaobject
import org jruby javasupport javautil
import org jruby runtime block
import org jruby runtime callbackfactory
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
import javax swing jcomponent
import javax swing jpanel
import javax swing jscrollpane
import javax swing jtextarea
import javax swing jtextpane
import javax swing swingutilities
/**
* @author <a href="mailto:mental@rydia.net">mentalguy</a>
*
* the jrubyapplet class provides a simple way to write java applets using
* jruby without needing to create a custom java applet class.  at applet
* initialization time, jrubyapplet starts up a jruby runtime, then evaluates
* the scriptlet given as the "eval" applet parameter.
*
* the java applet instance is available to the ruby script as
* jruby_applet; the script can define callbacks for applet start, stop,
* and destroy by passing blocks to jruby_applet.on_start,
* jruby_applet.on_stop, and jruby_applet.on_destroy, respectively.
*
* ruby code can install a custom paint callback using jruby_applet.on_paint
* (the graphics2d object is passed as an argument to the callback).  by
* default, jrubyapplet painting is double-buffered, but you can select
* single-buffered painting via jruby_applet.double_buffered = false.
*
* the applet's background color can be set via jruby_applet.background_color=.
* you may want to set it to nil if you're not using double-buffering, so that
* no background color will be drawn (your own paint code is then responsible
* for filling the area).
*
* beyond these things, you should be able to use jruby's java integration
* to do whatever you would do in java with the applet instance.
*
*/
public class jrubyapplet extends applet
private ruby runtime
private boolean doublebuffered   true
private color backgroundcolor   color white
private irubyobject rubyobject
private rubyproc startproc
private rubyproc stopproc
private rubyproc destroyproc
private rubyproc paintproc
private graphics priorgraphics
private irubyobject wrappedgraphics
private volatileimage backbuffer
private graphics backbuffergraphics
private facade facade
private interface facade
public inputstream getinputstream
public printstream getoutputstream
public printstream geterrorstream
public void attach ruby runtime  applet applet
private static rubyproc blocktoproc ruby runtime  block block
if  block isgiven
rubyproc proc   block getprocobject
if  proc    null
proc   rubyproc newproc runtime  block  block type
return proc
else
return null
private boolean getbooleanparameter string name  boolean default_value
string value   getparameter name
if   value    null
return value equals
else
return default_value
private inputstream getcoderesourceasstream string name
if  name    null
return null
try
final url directurl   new url getcodebase    name
return directurl openstream
catch  ioexception e
return jrubyapplet class getclassloader   getresourceasstream name
public static class rubymethods
@jrubymethod
public static irubyobject on_start irubyobject recv  block block
jrubyapplet applet    jrubyapplet recv datagetstruct
synchronized  applet
applet startproc   blocktoproc applet runtime  block
return recv
@jrubymethod
public static irubyobject on_stop irubyobject recv  block block
jrubyapplet applet    jrubyapplet recv datagetstruct
synchronized  applet
applet stopproc   blocktoproc applet runtime  block
return recv
@jrubymethod
public static irubyobject on_destroy irubyobject recv  block block
jrubyapplet applet    jrubyapplet recv datagetstruct
synchronized  applet
applet destroyproc   blocktoproc applet runtime  block
return recv
@jrubymethod
public static irubyobject on_paint irubyobject recv  block block
jrubyapplet applet    jrubyapplet recv datagetstruct
synchronized  applet
applet paintproc   blocktoproc applet runtime  block
applet repaint
return recv
@override
public void init
super init
if  getbooleanparameter    false
facade   new consolefacade
else
facade   new trivialfacade
synchronized  this
if  runtime    null
return
final rubyinstanceconfig config   new rubyinstanceconfig
setinput facade getinputstream
setoutput facade getoutputstream
seterror facade geterrorstream
setobjectspaceenabled getbooleanparameter    false
ruby setsecurityrestricted true
runtime   ruby newinstance config
rubyobject   javautil convertjavatousablerubyobject runtime  this
rubyobject datawrapstruct this
runtime defineglobalconstant    rubyobject
rubyobject getmetaclass   defineannotatedmethods rubymethods class
final string scriptname   getparameter
final inputstream scriptstream   getcoderesourceasstream scriptname
final string evalstring   getparameter
try
final jrubyapplet applet   this
swingutilities invokeandwait new runnable
public void run
applet setlayout new borderlayout
applet facade attach applet runtime  applet
if  scriptstream    null
applet runtime runfrommain scriptstream  scriptname
if  evalstring    null
applet runtime evalscriptlet evalstring
catch  interruptedexception e
catch  invocationtargetexception e
throw new runtimeexception    e getcause
private void invokecallback final rubyproc proc  final irubyobject args
if  proc    null
return
final ruby runtime   this runtime
try
swingutilities invokeandwait new runnable
public void run
threadcontext context   runtime getcurrentcontext
proc call context  args  block null_block
catch  interruptedexception e
catch  invocationtargetexception e
throw new runtimeexception    e getcause
public synchronized void setbackgroundcolor color color
backgroundcolor   color
repaint
public synchronized color getbackgroundcolor
return backgroundcolor
public synchronized boolean isdoublebuffered
return doublebuffered
public synchronized void setdoublebuffered boolean shouldbuffer
doublebuffered   shouldbuffer
repaint
@override
public synchronized void start
super start
invokecallback startproc  new irubyobject
@override
public synchronized void stop
invokecallback stopproc  new irubyobject
super stop
@override
public synchronized void destroy
try
invokecallback destroyproc  new irubyobject
finally
final ruby runtime   this runtime
this runtime   null
rubyobject   null
startproc   null
stopproc   null
destroyproc   null
paintproc   null
priorgraphics   null
wrappedgraphics   null
runtime teardown
super destroy
@override
public void update graphics g
paint g
@override
public synchronized void paint graphics g
if  doublebuffered
paintbuffered g
else
paintunbuffered g
private synchronized void paintbuffered graphics g
do
graphicsconfiguration config   getgraphicsconfiguration
int width   getwidth
int height   getheight
if  backbuffer    null    width    backbuffer getwidth      height    backbuffer getheight      backbuffer validate config     volatileimage image_incompatible
if  backbuffer    null
backbuffergraphics dispose
backbuffer flush
backbuffer   config createcompatiblevolatileimage width  height
backbuffergraphics   backbuffer creategraphics
backbuffergraphics setclip g getclip
paintunbuffered backbuffergraphics
while  backbuffer contentslost
g drawimage backbuffer  0  0  this
private synchronized void paintunbuffered graphics g
if  backgroundcolor    null
g setcolor backgroundcolor
g fillrect 0  0  getwidth    getheight
if  paintproc    null
if  priorgraphics    g
wrappedgraphics   javautil convertjavatousablerubyobject runtime  g
priorgraphics   g
threadcontext context   runtime getcurrentcontext
paintproc call context  new irubyobject  wrappedgraphics   block null_block
super paint g
private static class trivialfacade implements facade
public trivialfacade
public inputstream getinputstream     return system in
public printstream getoutputstream     return system out
public printstream geterrorstream     return system err
public void attach ruby runtime  applet applet
private static class consolefacade implements facade
private jtextpane textpane
private jscrollpane scrollpane
private textareareadline adaptor
private inputstream inputstream
private printstream outputstream
private printstream errorstream
public consolefacade
textpane   new jtextpane
textpane setmargin new insets 4  4  0  4
textpane setcaretcolor new color 0xa4  0x00  0x00
textpane setbackground new color 0xf2  0xf2  0xf2
textpane setforeground new color 0xa4  0x00  0x00
font font   findfont    font plain  14
new string
textpane setfont font
scrollpane   new jscrollpane textpane
scrollpane setdoublebuffered true
adaptor   new textareareadline textpane
inputstream   new pipedinputstream
outputstream   new printstream adaptor
errorstream   new printstream adaptor
public inputstream getinputstream     return inputstream
public printstream getoutputstream     return outputstream
public printstream geterrorstream     return errorstream
public void attach ruby runtime  applet applet
adaptor hookintoruntime runtime
applet add scrollpane
applet validate
private font findfont string otherwise  int style  int size  string families
string fonts   graphicsenvironment getlocalgraphicsenvironment   getavailablefontfamilynames
arrays sort fonts
for  int i   0  i < families length  i
if  arrays binarysearch fonts  families  >  0
return new font families  style  size
return new font otherwise  style  size