/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
*
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
/**
* $id: $
*/
package org jruby ext posix util
import java util hashmap
import java util map
public class platform
public static final string os_name   system getproperty
public static final string os_name_lc   os_name tolowercase
// generic windows designation
private static final string windows
// for windows 95, 98... would these platforms actually work?
private static final string windows_9x
// todo: windows me?
private static final string windows_nt
private static final string windows_20x
private static final string windows_xp
// todo:  for windows server 2003, 2008
private static final string windows_vista
private static final string mac_os
private static final string darwin
private static final string freebsd
private static final string linux
private static final string solaris
// todo: investigate supported platforms for openjdk7?
public static final boolean is_windows   os_name_lc indexof windows      1
public static final boolean is_windows_9x   os_name_lc indexof windows_9x  >  1
public static final boolean is_windows_nt   is_windows    os_name_lc indexof windows_nt  >  1
public static final boolean is_windows_20x   os_name_lc indexof windows_20x  >  1
public static final boolean is_windows_xp   os_name_lc indexof windows_xp  >  1
public static final boolean is_windows_vista   is_windows    os_name_lc indexof windows_vista  >  1
public static final boolean is_mac   os_name_lc startswith mac_os     os_name_lc startswith darwin
public static final boolean is_freebsd   os_name_lc startswith freebsd
public static final boolean is_linux   os_name_lc startswith linux
public static final boolean is_solaris   os_name_lc startswith solaris
public static final boolean is_bsd   is_mac    is_freebsd
public static final string envcommand
if  is_windows
if  is_windows_9x
return
else if  is_windows_nt    is_windows_20x    is_windows_xp    is_windows_vista
return
return
public static final boolean is_32_bit     equals getproperty
public static final boolean is_64_bit     equals getproperty
public static final string arch   system getproperty
public static final map<string  string> os_names   new hashmap<string  string>
static
os_names put    darwin
os_names put    darwin
os_names put    linux
public static string getosname
string theosname   os_names get os_name
return theosname    null ? os_name   theosname
/**
* an extension over <code>system.getproperty</code> method.
* handles security restrictions, and returns the default
* value if the access to the property is restricted.
* @param property the system property name.
* @param defvalue the default value.
* @return the value of the system property,
*         or the default value.
*/
public static string getproperty string property  string defvalue
try
return system getproperty property  defvalue
catch  securityexception se
return defvalue