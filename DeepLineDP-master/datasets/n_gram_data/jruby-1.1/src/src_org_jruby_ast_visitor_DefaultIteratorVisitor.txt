/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2002 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2004-2007 thomas e enebo <enebo@acm.org>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby ast visitor
import org jruby ast aliasnode
import org jruby ast andnode
import org jruby ast argscatnode
import org jruby ast argsnode
import org jruby ast argspushnode
import org jruby ast arraynode
import org jruby ast attrassignnode
import org jruby ast backrefnode
import org jruby ast beginnode
import org jruby ast bignumnode
import org jruby ast blockargnode
import org jruby ast blocknode
import org jruby ast blockpassnode
import org jruby ast breaknode
import org jruby ast callnode
import org jruby ast casenode
import org jruby ast classnode
import org jruby ast classvarasgnnode
import org jruby ast classvardeclnode
import org jruby ast classvarnode
import org jruby ast colon2node
import org jruby ast colon3node
import org jruby ast constdeclnode
import org jruby ast constnode
import org jruby ast dasgnnode
import org jruby ast dregexpnode
import org jruby ast dstrnode
import org jruby ast dsymbolnode
import org jruby ast dvarnode
import org jruby ast dxstrnode
import org jruby ast definednode
import org jruby ast defnnode
import org jruby ast defsnode
import org jruby ast dotnode
import org jruby ast ensurenode
import org jruby ast evstrnode
import org jruby ast fcallnode
import org jruby ast falsenode
import org jruby ast fixnumnode
import org jruby ast flipnode
import org jruby ast floatnode
import org jruby ast fornode
import org jruby ast globalasgnnode
import org jruby ast globalvarnode
import org jruby ast hashnode
import org jruby ast ifnode
import org jruby ast instasgnnode
import org jruby ast instvarnode
import org jruby ast iternode
import org jruby ast localasgnnode
import org jruby ast localvarnode
import org jruby ast match2node
import org jruby ast match3node
import org jruby ast matchnode
import org jruby ast modulenode
import org jruby ast multipleasgnnode
import org jruby ast newlinenode
import org jruby ast nextnode
import org jruby ast nilnode
import org jruby ast notnode
import org jruby ast nthrefnode
import org jruby ast opasgnandnode
import org jruby ast opasgnnode
import org jruby ast opasgnornode
import org jruby ast opelementasgnnode
import org jruby ast ornode
import org jruby ast postexenode
import org jruby ast preexenode
import org jruby ast redonode
import org jruby ast regexpnode
import org jruby ast rescuebodynode
import org jruby ast rescuenode
import org jruby ast retrynode
import org jruby ast returnnode
import org jruby ast rootnode
import org jruby ast sclassnode
import org jruby ast svaluenode
import org jruby ast selfnode
import org jruby ast splatnode
import org jruby ast strnode
import org jruby ast supernode
import org jruby ast symbolnode
import org jruby ast toarynode
import org jruby ast truenode
import org jruby ast undefnode
import org jruby ast untilnode
import org jruby ast valiasnode
import org jruby ast vcallnode
import org jruby ast whennode
import org jruby ast whilenode
import org jruby ast xstrnode
import org jruby ast yieldnode
import org jruby ast zarraynode
import org jruby ast zsupernode
import org jruby evaluator instruction
/**
* default iterator visitor. this visitor will iterate over all the nodes using
* the semantic which is used when compiling or interpreting the tree. this
* visitor will then used call the accept method for each node with its payload
* as the visitor to accept.
*
* @see nodevisitor
* @author benoit cerrina
*/
public class defaultiteratorvisitor implements nodevisitor
protected nodevisitor _payload
/**
* constructs a defaultiteratorvisitor. the payload visitor will be accepted
* by each node wich the iteratorvisitor iterates over.
*
* @param ipayload
*            the payload for this visitor
*/
public defaultiteratorvisitor nodevisitor ipayload
_payload   ipayload
public instruction visitaliasnode aliasnode ivisited
ivisited accept _payload
return null
public instruction visitandnode andnode ivisited
ivisited getfirstnode   accept this
ivisited accept _payload
ivisited getsecondnode   accept this
return null
public instruction visitargsnode argsnode ivisited
ivisited accept _payload
if  ivisited getoptargs      null
ivisited getoptargs   accept this
return null
public instruction visitargscatnode argscatnode ivisited
ivisited accept _payload
if  ivisited getfirstnode      null
ivisited getfirstnode   accept this
if  ivisited getsecondnode      null
ivisited getsecondnode   accept this
return null
public instruction visitargspushnode argspushnode ivisited
ivisited accept _payload
if  ivisited getfirstnode      null
ivisited getfirstnode   accept this
if  ivisited getsecondnode      null
ivisited getsecondnode   accept this
return null
public instruction visitattrassignnode attrassignnode ivisited
ivisited accept _payload
if ivisited getargsnode      null
ivisited getargsnode   accept this
if ivisited getreceivernode      null
ivisited getreceivernode   accept this
return null
public instruction visitarraynode arraynode ivisited
ivisited accept _payload
for  int i   0  i < ivisited size    i
ivisited get i  accept this
return null
public instruction visitbackrefnode backrefnode ivisited
ivisited accept _payload
return null
public instruction visitbeginnode beginnode ivisited
ivisited accept _payload
return null
public instruction visitblockargnode blockargnode ivisited
ivisited accept _payload
return null
public instruction visitblocknode blocknode ivisited
ivisited accept _payload
for  int i   0  i < ivisited size    i
ivisited get i  accept this
return null
public instruction visitblockpassnode blockpassnode ivisited
ivisited accept _payload
return null
public instruction visitbreaknode breaknode ivisited
ivisited accept _payload
return null
public instruction visitconstdeclnode constdeclnode ivisited
ivisited accept _payload
ivisited getvaluenode   accept this
return null
public instruction visitclassvarasgnnode classvarasgnnode ivisited
ivisited accept _payload
ivisited getvaluenode   accept this
return null
public instruction visitclassvardeclnode classvardeclnode ivisited
ivisited accept _payload
return null
public instruction visitclassvarnode classvarnode ivisited
ivisited accept _payload
return null
public instruction visitcallnode callnode ivisited
ivisited getreceivernode   accept this
if ivisited getargsnode      null
ivisited getargsnode   accept this
if ivisited getiternode      null
ivisited getiternode   accept this
ivisited accept _payload
return null
public instruction visitcasenode casenode ivisited
ivisited accept _payload
return null
public instruction visitclassnode classnode ivisited
ivisited accept _payload
if  ivisited getsupernode      null
ivisited getsupernode   accept this
//note: suprised that this is not used
// it can be used.
ivisited getbodynode   accept this
return null
public instruction visitcolon2node colon2node ivisited
if  ivisited getleftnode      null
ivisited getleftnode   accept this
ivisited accept _payload
return null
public instruction visitcolon3node colon3node ivisited
ivisited accept _payload
return null
public instruction visitconstnode constnode ivisited
ivisited accept _payload
return null
public instruction visitdasgnnode dasgnnode ivisited
ivisited accept _payload
ivisited getvaluenode   accept this
return null
public instruction visitdregxnode dregexpnode ivisited
ivisited accept _payload
return null
public instruction visitdstrnode dstrnode ivisited
ivisited accept _payload
return null
/**
* @see nodevisitor#visitdsymbolnode(dsymbolnode)
*/
public instruction visitdsymbolnode dsymbolnode ivisited
ivisited accept _payload
return null
public instruction visitdvarnode dvarnode ivisited
ivisited accept _payload
return null
public instruction visitdxstrnode dxstrnode ivisited
ivisited accept _payload
return null
public instruction visitdefinednode definednode ivisited
ivisited accept _payload
return null
public instruction visitdefnnode defnnode ivisited
ivisited accept _payload
ivisited getbodynode   accept this
return null
public instruction visitdefsnode defsnode ivisited
ivisited accept _payload
ivisited getreceivernode   accept this
ivisited getbodynode   accept this
return null
public instruction visitdotnode dotnode ivisited
ivisited accept _payload
return null
public instruction visitensurenode ensurenode ivisited
ivisited accept _payload
return null
public instruction visitevstrnode evstrnode ivisited
ivisited accept _payload
return null
public instruction visitfcallnode fcallnode ivisited
ivisited accept _payload
if ivisited getargsnode      null
ivisited getargsnode   accept this
if ivisited getiternode      null
ivisited getiternode   accept this
return null
public instruction visitfalsenode falsenode ivisited
ivisited accept _payload
return null
public instruction visitflipnode flipnode ivisited
ivisited accept _payload
return null
public instruction visitfornode fornode ivisited
ivisited accept _payload
return null
public instruction visitglobalasgnnode globalasgnnode ivisited
ivisited accept _payload
ivisited getvaluenode   accept this
return null
public instruction visitglobalvarnode globalvarnode ivisited
ivisited accept _payload
return null
public instruction visithashnode hashnode ivisited
ivisited accept _payload
return null
public instruction visitinstasgnnode instasgnnode ivisited
ivisited accept _payload
ivisited getvaluenode   accept this
return null
public instruction visitinstvarnode instvarnode ivisited
ivisited accept _payload
return null
public instruction visitifnode ifnode ivisited
ivisited accept _payload
ivisited getcondition   accept this
ivisited getthenbody   accept this
if  ivisited getelsebody      null
ivisited getelsebody   accept this
return null
public instruction visititernode iternode ivisited
ivisited accept _payload
return null
public instruction visitlocalasgnnode localasgnnode ivisited
ivisited accept _payload
ivisited getvaluenode   accept this
return null
public instruction visitlocalvarnode localvarnode ivisited
ivisited accept _payload
return null
public instruction visitmultipleasgnnode multipleasgnnode ivisited
ivisited accept _payload
return null
public instruction visitmatch2node match2node ivisited
ivisited accept _payload
return null
public instruction visitmatch3node match3node ivisited
ivisited accept _payload
return null
public instruction visitmatchnode matchnode ivisited
ivisited accept _payload
return null
public instruction visitmodulenode modulenode ivisited
ivisited accept _payload
ivisited getbodynode   accept this
return null
public instruction visitnewlinenode newlinenode ivisited
ivisited accept _payload
ivisited getnextnode   accept this
return null
public instruction visitnextnode nextnode ivisited
ivisited accept _payload
return null
public instruction visitnilnode nilnode ivisited
ivisited accept _payload
return null
public instruction visitnotnode notnode ivisited
ivisited accept _payload
ivisited getconditionnode   accept this
return null
public instruction visitnthrefnode nthrefnode ivisited
ivisited accept _payload
return null
public instruction visitopelementasgnnode opelementasgnnode ivisited
ivisited accept _payload
return null
public instruction visitopasgnnode opasgnnode ivisited
ivisited accept _payload
return null
public instruction visitopasgnandnode opasgnandnode ivisited
ivisited accept _payload
return null
public instruction visitopasgnornode opasgnornode ivisited
ivisited accept _payload
return null
public instruction visitornode ornode ivisited
ivisited getfirstnode   accept this
ivisited accept _payload
ivisited getsecondnode   accept this
return null
public instruction visitpostexenode postexenode ivisited
ivisited accept _payload
return null
public instruction visitpreexenode preexenode ivisited
ivisited accept _payload
return null
public instruction visitredonode redonode ivisited
ivisited accept _payload
return null
public instruction visitrescuebodynode rescuebodynode ivisited
ivisited accept _payload
// xxx ivisited.getbodynode().accept(this);
return null
public instruction visitrescuenode rescuenode ivisited
ivisited accept _payload
/*
* xxx ivisited.getheadnode().accept(this); node lelsenode =
* ivisited.getelsenode(); if (lelsenode != null)
* lelsenode.accept(this); for (node body = ivisited.getresqnode(); body !=
* null; body = ivisited.getheadnode()) { node largsnode =
* body.getargsnode(); for (; largsnode != null; largsnode =
* largsnode.getnextnode()) largsnode.getheadnode().accept(this);
* body.accept(this); }
*/
return null
public instruction visitretrynode retrynode ivisited
ivisited accept _payload
return null
public instruction visitrootnode rootnode ivisited
ivisited accept _payload
ivisited getbodynode   accept this
return null
public instruction visitreturnnode returnnode ivisited
ivisited accept _payload
return null
public instruction visitsclassnode sclassnode ivisited
ivisited accept _payload
return null
public instruction visitselfnode selfnode ivisited
ivisited accept _payload
return null
public instruction visitsplatnode splatnode ivisited
ivisited accept _payload
return null
public instruction visitstrnode strnode ivisited
ivisited accept _payload
return null
public instruction visitsvaluenode svaluenode ivisited
ivisited accept _payload
return null
public instruction visitsupernode supernode ivisited
ivisited accept _payload
return null
public instruction visittoarynode toarynode ivisited
ivisited accept _payload
return null
public instruction visittruenode truenode ivisited
ivisited accept _payload
return null
public instruction visitundefnode undefnode ivisited
ivisited accept _payload
return null
public instruction visituntilnode untilnode ivisited
ivisited accept _payload
return null
public instruction visitvaliasnode valiasnode ivisited
ivisited accept _payload
return null
public instruction visitvcallnode vcallnode ivisited
ivisited accept _payload
return null
public instruction visitwhennode whennode ivisited
ivisited accept _payload
/*
* xxx ivisited.getconditionnode().accept(this);
* ivisited.getbodynode().accept(this);
*/
return null
public instruction visitwhilenode whilenode ivisited
ivisited accept _payload
return null
public instruction visitxstrnode xstrnode ivisited
ivisited accept _payload
return null
public instruction visityieldnode yieldnode ivisited
ivisited accept _payload
return null
public instruction visitzarraynode zarraynode ivisited
ivisited accept _payload
return null
public instruction visitzsupernode zsupernode ivisited
ivisited accept _payload
return null
/**
* @see nodevisitor#visitbignumnode(bignumnode)
*/
public instruction visitbignumnode bignumnode ivisited
ivisited accept _payload
return null
/**
* @see nodevisitor#visitfixnumnode(fixnumnode)
*/
public instruction visitfixnumnode fixnumnode ivisited
ivisited accept _payload
return null
/**
* @see nodevisitor#visitfloatnode(floatnode)
*/
public instruction visitfloatnode floatnode ivisited
ivisited accept _payload
return null
/**
* @see nodevisitor#visitregexpnode(regexpnode)
*/
public instruction visitregexpnode regexpnode ivisited
ivisited accept _payload
return null
/**
* @see nodevisitor#visitsymbolnode(symbolnode)
*/
public instruction visitsymbolnode symbolnode ivisited
ivisited accept _payload
return null