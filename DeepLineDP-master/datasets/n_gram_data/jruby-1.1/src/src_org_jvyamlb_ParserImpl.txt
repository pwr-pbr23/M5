/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2007 ola bini <ola@ologix.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jvyamlb
import java io inputstream
import java io fileinputstream
import java util hashmap
import java util iterator
import java util linkedlist
import java util list
import java util map
import java util regex pattern
import org jvyamlb events
import org jvyamlb tokens
import org jruby util bytelist
/**
* @author <a href="mailto:ola.bini@ki.se">ola bini</a>
*/
public class parserimpl implements parser
// memnonics for the production table
private final static int p_stream   0
private final static int p_stream_start   1     terminal
private final static int p_stream_end   2     terminal
private final static int p_implicit_document   3
private final static int p_explicit_document   4
private final static int p_document_start   5
private final static int p_document_start_implicit   6
private final static int p_document_end   7
private final static int p_block_node   8
private final static int p_block_content   9
private final static int p_properties   10
private final static int p_properties_end   11
private final static int p_flow_content   12
private final static int p_block_sequence   13
private final static int p_block_mapping   14
private final static int p_flow_sequence   15
private final static int p_flow_mapping   16
private final static int p_scalar   17
private final static int p_block_sequence_entry   18
private final static int p_block_mapping_entry   19
private final static int p_block_mapping_entry_value   20
private final static int p_block_node_or_indentless_sequence   21
private final static int p_block_sequence_start   22
private final static int p_block_sequence_end   23
private final static int p_block_mapping_start   24
private final static int p_block_mapping_end   25
private final static int p_indentless_block_sequence   26
private final static int p_block_indentless_sequence_start   27
private final static int p_indentless_block_sequence_entry   28
private final static int p_block_indentless_sequence_end   29
private final static int p_flow_sequence_start   30
private final static int p_flow_sequence_entry   31
private final static int p_flow_sequence_end   32
private final static int p_flow_mapping_start   33
private final static int p_flow_mapping_entry   34
private final static int p_flow_mapping_end   35
private final static int p_flow_internal_mapping_start   36
private final static int p_flow_internal_content   37
private final static int p_flow_internal_value   38
private final static int p_flow_internal_mapping_end   39
private final static int p_flow_entry_marker   40
private final static int p_flow_node   41
private final static int p_flow_mapping_internal_content   42
private final static int p_flow_mapping_internal_value   43
private final static int p_alias   44
private final static int p_empty_scalar   45
private final static string productionnames   new string
static
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
productionnames
private final static event document_end_true   new documentendevent true
private final static event document_end_false   new documentendevent false
private final static event mapping_end   new mappingendevent
private final static event sequence_end   new sequenceendevent
private final static event stream_end   new streamendevent
private final static event stream_start   new streamstartevent
private static class productionenvironment
private list tags
private list anchors
private map taghandles
private int yamlversion
private int defaultyamlversion
public productionenvironment final yamlconfig cfg
this tags   new linkedlist
this anchors   new linkedlist
this taghandles   new hashmap
this yamlversion   null
this defaultyamlversion   new int
this defaultyamlversion   integer parseint cfg version   substring 0 cfg version   indexof
this defaultyamlversion   integer parseint cfg version   substring cfg version   indexof    1
public list gettags
return this tags
public list getanchors
return this anchors
public map gettaghandles
return this taghandles
public int getyamlversion
return this yamlversion
public int getfinalyamlversion
if null    this yamlversion
return this defaultyamlversion
return this yamlversion
public void setyamlversion final int yamlversion
this yamlversion   yamlversion
public event produce final int current  final intstack parsestack  final scanner scanner
switch current
case p_stream
parsestack push p_stream_end
parsestack push p_explicit_document
parsestack push p_implicit_document
parsestack push p_stream_start
return null
case p_stream_start
scanner gettoken
return stream_start
case p_stream_end
scanner gettoken
return stream_end
case p_implicit_document
final token curr   scanner peektoken
if   curr instanceof directivetoken    curr instanceof documentstarttoken    curr instanceof streamendtoken
parsestack push p_document_end
parsestack push p_block_node
parsestack push p_document_start_implicit
return null
case p_explicit_document
if   scanner peektoken   instanceof streamendtoken
parsestack push p_explicit_document
parsestack push p_document_end
parsestack push p_block_node
parsestack push p_document_start
return null
case p_document_start
token tok   scanner peektoken
final object directives   processdirectives this scanner
if   scanner peektoken   instanceof documentstarttoken
throw new parserexception null     tok getclass   getname   null
scanner gettoken
return new documentstartevent true  int directives  map directives
case p_document_start_implicit
final object directives   processdirectives this scanner
return new documentstartevent false  int directives  map directives
case p_document_end
token tok   scanner peektoken
boolean explicit   false
while scanner peektoken   instanceof documentendtoken
scanner gettoken
explicit   true
return explicit ? document_end_true   document_end_false
case p_block_node
final token curr   scanner peektoken
if curr instanceof directivetoken    curr instanceof documentstarttoken    curr instanceof documentendtoken    curr instanceof streamendtoken
parsestack push p_empty_scalar
else
if curr instanceof aliastoken
parsestack push p_alias
else
parsestack push p_properties_end
parsestack push p_block_content
parsestack push p_properties
return null
case p_block_content
final token tok   scanner peektoken
if tok instanceof blocksequencestarttoken
parsestack push p_block_sequence
else if tok instanceof blockmappingstarttoken
parsestack push p_block_mapping
else if tok instanceof flowsequencestarttoken
parsestack push p_flow_sequence
else if tok instanceof flowmappingstarttoken
parsestack push p_flow_mapping
else if tok instanceof scalartoken
parsestack push p_scalar
else
// part of solution for jruby-718
boolean implicit   new boolean false false
return new scalarevent  string this getanchors   get 0   string this gettags   get 0  implicit new bytelist new byte false
return null
case p_properties
string anchor   null
object tag   null
if scanner peektoken   instanceof anchortoken
anchor     anchortoken scanner gettoken    getvalue
if scanner peektoken   instanceof tagtoken
tag     tagtoken scanner gettoken    getvalue
else if scanner peektoken   instanceof tagtoken
tag     tagtoken scanner gettoken    getvalue
if scanner peektoken   instanceof anchortoken
anchor     anchortoken scanner gettoken    getvalue
if tag    null     tag equals
final string handle   scannerimpl into   bytelist tag
string suffix   scannerimpl into   bytelist tag
int ix    1
if  ix   suffix indexof         1
suffix   suffix substring 0 ix    suffix substring ix 1
if handle    null
if  this gettaghandles   containskey handle
throw new parserexception       handle null
if  ix   suffix indexof         1
string before   suffix substring 0 ix
string after   suffix substring ix 1
if only_word matcher before  matches
tag       before       after
else
if before startswith
tag   before       after
else
tag       before       after
else
tag     string this gettaghandles   get handle     suffix
else
tag   suffix
this getanchors   add 0 anchor
this gettags   add 0 tag
return null
case p_properties_end
this getanchors   remove 0
this gettags   remove 0
return null
case p_flow_content
final token tok   scanner peektoken
if tok instanceof flowsequencestarttoken
parsestack push p_flow_sequence
else if tok instanceof flowmappingstarttoken
parsestack push p_flow_mapping
else if tok instanceof scalartoken
parsestack push p_scalar
else
throw new parserexception       tok getclass   getname   null
return null
case p_block_sequence
parsestack push p_block_sequence_end
parsestack push p_block_sequence_entry
parsestack push p_block_sequence_start
return null
case p_block_mapping
parsestack push p_block_mapping_end
parsestack push p_block_mapping_entry
parsestack push p_block_mapping_start
return null
case p_flow_sequence
parsestack push p_flow_sequence_end
parsestack push p_flow_sequence_entry
parsestack push p_flow_sequence_start
return null
case p_flow_mapping
parsestack push p_flow_mapping_end
parsestack push p_flow_mapping_entry
parsestack push p_flow_mapping_start
return null
case p_scalar
final scalartoken tok    scalartoken scanner gettoken
boolean implicit   null
if  tok getplain      this gettags   get 0     null       equals this gettags   get 0
implicit   new boolean true false
else if this gettags   get 0     null
implicit   new boolean false true
else
implicit   new boolean false false
return new scalarevent  string this getanchors   get 0   string this gettags   get 0  implicit tok getvalue   tok getstyle
case p_block_sequence_entry
if scanner peektoken   instanceof blockentrytoken
scanner gettoken
if   scanner peektoken   instanceof blockentrytoken    scanner peektoken   instanceof blockendtoken
parsestack push p_block_sequence_entry
parsestack push p_block_node
else
parsestack push p_block_sequence_entry
parsestack push p_empty_scalar
return null
case p_block_mapping_entry
if scanner peektoken   instanceof keytoken    scanner peektoken   instanceof valuetoken
if scanner peektoken   instanceof keytoken
scanner gettoken
final token curr   scanner peektoken
if   curr instanceof keytoken    curr instanceof valuetoken    curr instanceof blockendtoken
parsestack push p_block_mapping_entry
parsestack push p_block_mapping_entry_value
parsestack push p_block_node_or_indentless_sequence
else
parsestack push p_block_mapping_entry
parsestack push p_block_mapping_entry_value
parsestack push p_empty_scalar
else
parsestack push p_block_mapping_entry
parsestack push p_block_mapping_entry_value
parsestack push p_empty_scalar
return null
case p_block_mapping_entry_value
if scanner peektoken   instanceof keytoken    scanner peektoken   instanceof valuetoken
if scanner peektoken   instanceof valuetoken
scanner gettoken
final token curr   scanner peektoken
if   curr instanceof keytoken    curr instanceof valuetoken    curr instanceof blockendtoken
if curr instanceof scalartoken    scanner peektoken 1  instanceof blockentrytoken
//                                system.err.println("warning, possibly invalid yaml, eating token: " + curr);
scanner gettoken
parsestack push p_block_node_or_indentless_sequence
else
parsestack push p_empty_scalar
else
parsestack push p_empty_scalar
return null
case p_block_node_or_indentless_sequence
if scanner peektoken   instanceof aliastoken
parsestack push p_alias
else
if scanner peektoken   instanceof blockentrytoken
parsestack push p_indentless_block_sequence
parsestack push p_properties
else
parsestack push p_block_content
parsestack push p_properties
return null
case p_block_sequence_start
final boolean implicit   this gettags   get 0     null    this gettags   get 0  equals
scanner gettoken
return new sequencestartevent  string this getanchors   get 0    string this gettags   get 0   implicit false
case p_block_sequence_end
token tok   null
if   scanner peektoken   instanceof blockendtoken
tok   scanner peektoken
throw new parserexception       tok getclass   getname   null
scanner gettoken
return sequence_end
case p_block_mapping_start
final boolean implicit   this gettags   get 0     null    this gettags   get 0  equals
scanner gettoken
return new mappingstartevent  string this getanchors   get 0    string this gettags   get 0   implicit false
case p_block_mapping_end
token tok   null
if   scanner peektoken   instanceof blockendtoken
tok   scanner peektoken
throw new parserexception       tok getclass   getname   null
scanner gettoken
return mapping_end
case p_indentless_block_sequence
parsestack push p_block_indentless_sequence_end
parsestack push p_indentless_block_sequence_entry
parsestack push p_block_indentless_sequence_start
return null
case p_block_indentless_sequence_start
final boolean implicit   this gettags   get 0     null    this gettags   get 0  equals
return new sequencestartevent  string this getanchors   get 0    string this gettags   get 0   implicit  false
case p_indentless_block_sequence_entry
if scanner peektoken   instanceof blockentrytoken
scanner gettoken
final token curr   scanner peektoken
if   curr instanceof blockentrytoken    curr instanceof keytoken    curr instanceof valuetoken    curr instanceof blockendtoken
parsestack push p_indentless_block_sequence_entry
parsestack push p_block_node
else
parsestack push p_indentless_block_sequence_entry
parsestack push p_empty_scalar
return null
case p_block_indentless_sequence_end
return sequence_end
case p_flow_sequence_start
final boolean implicit   this gettags   get 0     null    this gettags   get 0  equals
scanner gettoken
return new sequencestartevent  string this getanchors   get 0    string this gettags   get 0   implicit true
case p_flow_sequence_entry
if   scanner peektoken   instanceof flowsequenceendtoken
if scanner peektoken   instanceof keytoken
parsestack push p_flow_sequence_entry
parsestack push p_flow_entry_marker
parsestack push p_flow_internal_mapping_end
parsestack push p_flow_internal_value
parsestack push p_flow_internal_content
parsestack push p_flow_internal_mapping_start
else
parsestack push p_flow_sequence_entry
parsestack push p_flow_node
parsestack push p_flow_entry_marker
return null
case p_flow_sequence_end
scanner gettoken
return sequence_end
case p_flow_mapping_start
final boolean implicit   this gettags   get 0     null    this gettags   get 0  equals
scanner gettoken
return new mappingstartevent  string this getanchors   get 0    string this gettags   get 0   implicit true
case p_flow_mapping_entry
if   scanner peektoken   instanceof flowmappingendtoken
if scanner peektoken   instanceof keytoken
parsestack push p_flow_mapping_entry
parsestack push p_flow_entry_marker
parsestack push p_flow_mapping_internal_value
parsestack push p_flow_mapping_internal_content
else
parsestack push p_flow_mapping_entry
parsestack push p_empty_scalar
parsestack push p_flow_node
parsestack push p_flow_entry_marker
return null
case p_flow_mapping_end
scanner gettoken
return mapping_end
case p_flow_internal_mapping_start
scanner gettoken
return new mappingstartevent null null true true
case p_flow_internal_content
final token curr   scanner peektoken
if   curr instanceof valuetoken    curr instanceof flowentrytoken    curr instanceof flowsequenceendtoken
parsestack push p_flow_node
else
parsestack push p_empty_scalar
return null
case p_flow_internal_value
if scanner peektoken   instanceof valuetoken
scanner gettoken
if    scanner peektoken   instanceof flowentrytoken      scanner peektoken   instanceof flowsequenceendtoken
parsestack push p_flow_node
else
parsestack push p_empty_scalar
else
parsestack push p_empty_scalar
return null
case p_flow_internal_mapping_end
return mapping_end
case p_flow_entry_marker
if scanner peektoken   instanceof flowentrytoken
scanner gettoken
return null
case p_flow_node
if scanner peektoken   instanceof aliastoken
parsestack push p_alias
else
parsestack push p_properties_end
parsestack push p_flow_content
parsestack push p_properties
return null
case p_flow_mapping_internal_content
final token curr   scanner peektoken
if   curr instanceof valuetoken    curr instanceof flowentrytoken    curr instanceof flowmappingendtoken
scanner gettoken
parsestack push p_flow_node
else
parsestack push p_empty_scalar
return null
case p_flow_mapping_internal_value
if scanner peektoken   instanceof valuetoken
scanner gettoken
if   scanner peektoken   instanceof flowentrytoken    scanner peektoken   instanceof flowmappingendtoken
parsestack push p_flow_node
else
parsestack push p_empty_scalar
else
parsestack push p_empty_scalar
return null
case p_alias
final aliastoken tok    aliastoken scanner gettoken
return new aliasevent tok getvalue
case p_empty_scalar
return processemptyscalar
return null
private final static map default_tags_1_0   new hashmap
private final static map default_tags_1_1   new hashmap
static
default_tags_1_0 put
default_tags_1_0 put
default_tags_1_1 put
default_tags_1_1 put
private final static pattern only_word   pattern compile
private static event processemptyscalar
return new scalarevent null null new boolean true false  new bytelist bytelist null_array   char 0
private static object processdirectives final productionenvironment env  final scanner scanner
while scanner peektoken   instanceof directivetoken
final directivetoken tok    directivetoken scanner gettoken
if tok getname   equals
if env getyamlversion      null
throw new parserexception null   null
final int major   integer parseint tok getvalue
final int minor   integer parseint tok getvalue
if major    1
throw new parserexception null   null
env setyamlversion new int major minor
else if tok getname   equals
final string handle   tok getvalue
final string prefix   tok getvalue
if env gettaghandles   containskey handle
throw new parserexception null     handle null
env gettaghandles   put handle prefix
object value   new object
value   env getfinalyamlversion
if  env gettaghandles   isempty
value   new hashmap env gettaghandles
final map basetags     int value     0 ? default_tags_1_0   default_tags_1_1
for final iterator iter   basetags keyset   iterator   iter hasnext
final object key   iter next
if  env gettaghandles   containskey key
env gettaghandles   put key basetags get key
return value
private scanner scanner   null
private yamlconfig cfg   null
public parserimpl final scanner scanner
this scanner  yaml config
public parserimpl final scanner scanner  final yamlconfig cfg
this scanner   scanner
this cfg   cfg
private event currentevent   null
public boolean checkevent final class choices
parsestream
if this currentevent    null
this currentevent   parsestreamnext
if this currentevent    null
if choices length    0
return true
for int i 0 j choices length i<j i
if choices isinstance this currentevent
return true
return false
public event peekevent
parsestream
if this currentevent    null
this currentevent   parsestreamnext
return this currentevent
public event getevent
parsestream
if this currentevent    null
this currentevent   parsestreamnext
final event value   this currentevent
this currentevent   null
return value
private class eventiterator implements iterator
public boolean hasnext
return null    peekevent
public object next
return getevent
public void remove
public iterator eachevent
return new eventiterator
public iterator iterator
return eachevent
private intstack parsestack   null
private productionenvironment penv   null
public void parsestream
if null    parsestack
this parsestack   new intstack
this parsestack push p_stream
this penv   new productionenvironment cfg
public event parsestreamnext
while  parsestack isempty
final event value   this penv produce this parsestack pop    this parsestack  this scanner
if null    value
return value
this penv   null
return null
public static void tmainx final string args  throws exception
final string filename   args
system out println
final bytelist input   new bytelist 1024
final inputstream reader   new fileinputstream filename
byte buff   new byte
int read   0
while true
read   reader read buff
input append buff 0 read
if read < 1024
break
reader close
final long before   system currenttimemillis
for int i 0 i<1 i
final parser pars   new parserimpl new scannerimpl input
for final iterator iter   pars eachevent   iter hasnext   iter next
final long after   system currenttimemillis
final long time   after before
final double times    after before  1000 0
system out println     filename       time       times
public static void tmain final string args  throws exception
final string filename   args
system out println
final inputstream reader   new fileinputstream filename
final long before   system currenttimemillis
for int i 0 i<1 i
final parser pars   new parserimpl new scannerimpl reader
for final iterator iter   pars eachevent   iter hasnext   iter next
reader close
final long after   system currenttimemillis
final long time   after before
final double times    after before  1000 0
system out println     filename       time       times
public static void main final string args  throws exception
final string filename   args
final parser pars   new parserimpl new scannerimpl new fileinputstream filename
for final iterator iter   pars eachevent   iter hasnext
system out println iter next
parserimpl