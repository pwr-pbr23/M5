/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket extensions breadcrumb
import java util arraylist
import java util iterator
import java util list
import org apache wicket iclusterable
/**
* utility class for working with
* {@link ibreadcrumbmodellistener bread crumb model listeners}.
*
* @author eelco hillenius
*/
public final class breadcrumbmodellistenersupport implements iclusterable
private static final long serialversionuid   1l
/** listeners for bread crumb events. */
private final list listeners   new arraylist 1
/**
* adds a bread crumb model listener.
*
* @param listener
*            the listener to add
*/
public final void addlistener ibreadcrumbmodellistener listener
if  listener    null
throw new illegalargumentexception
listeners add listener
/**
* notifies all listeners that a bread crumb was activated.
*
* @param previousparticipant
*            the previously active participant
*
* @param breadcrumbparticipant
*            the activated bread crumb
*/
public final void firebreadcrumbactivated ibreadcrumbparticipant previousparticipant
ibreadcrumbparticipant breadcrumbparticipant
for  iterator i   listeners iterator    i hasnext
ibreadcrumbmodellistener listener    ibreadcrumbmodellistener i next
listener breadcrumbactivated previousparticipant  breadcrumbparticipant
/**
* notifies all listeners that a new bread crumb was added.
*
* @param breadcrumbparticipant
*            the newly added bread crumb
*/
public final void firebreadcrumbadded ibreadcrumbparticipant breadcrumbparticipant
for  iterator i   listeners iterator    i hasnext
ibreadcrumbmodellistener listener    ibreadcrumbmodellistener i next
listener breadcrumbadded breadcrumbparticipant
/**
* notifies all listeners that a bread crumb was removed.
*
* @param breadcrumbparticipant
*            the removed bread crumb
*/
public final void firebreadcrumbremoved ibreadcrumbparticipant breadcrumbparticipant
for  iterator i   listeners iterator    i hasnext
ibreadcrumbmodellistener listener    ibreadcrumbmodellistener i next
listener breadcrumbremoved breadcrumbparticipant
/**
* removes a bread crumb model listener.
*
* @param listener
*            the listener to remove
*/
public final void removelistener ibreadcrumbmodellistener listener
if  listener    null
listeners remove listener