/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket
import org apache wicket request requestparameters
/**
* causes wicket to interrupt current request processing and immediately
* redirect to an intercept page.
* <p>
* similar to calling redirecttointeceptpage(page) with the difference that this
* exception will interrupt processing of the current request.
*
* @see org.apache.wicket.pagemap#redirecttointerceptpage(page)
* @see org.apache.wicket.component#redirecttointerceptpage(page)
*
* @author igor vaynberg (ivaynberg)
* @author jonathan locke
* @author philip chapman
*/
public class restartresponseatinterceptpageexception extends abstractrestartresponseexception
private static final long serialversionuid   1l
/**
* redirects to the specified intercept page.
*
* @param interceptpage
*            redirect page
*/
public restartresponseatinterceptpageexception final page interceptpage
if  interceptpage    null
throw new illegalstateexception
redirecttointerceptpage interceptpage
/**
* redirects to the specified intercept page, this will result in a bookmarkable redirect.
*
* @param interceptpageclass
*            class of intercept page to instantiate
*/
public restartresponseatinterceptpageexception final class interceptpageclass
if  interceptpageclass    null
throw new illegalstateexception
redirecttointerceptpage interceptpageclass
/**
* redirects to intercept page using the page map for the current request
*
* @param interceptpage
*            the intercept page to redirect to
*/
private void redirecttointerceptpage final page interceptpage
final page requestpage   requestcycle get   getrequest   getpage
/*
* requestpage can be null if we throw the restart response exception
* before any page is instantiated in user's session. if this happens we
* switch to the pagemap of the interceptpage
*/
final ipagemap pagemap
if  requestpage    null
pagemap   requestpage getpagemap
else
pagemap   interceptpage getpagemap
pagemap redirecttointerceptpage interceptpage
/**
* redirects to intercept page using the page map for the current request
*
* @param interceptpageclass
*            the intercept page class to redirect to
*/
private void redirecttointerceptpage final class interceptpageclass
final requestcycle cycle   requestcycle get
final page requestpage   cycle getrequest   getpage
/*
* requestpage can be null if we throw the restart response exception
* before any page is instantiated in user's session. if this happens we
* switch to the pagemap of the request.
*/
final ipagemap pagemap
if  requestpage    null
pagemap   requestpage getpagemap
else
requestparameters parameters   cycle getrequest   getrequestparameters
pagemap   pagemap forname parameters getpagemapname
pagemap redirecttointerceptpage interceptpageclass