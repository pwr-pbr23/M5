/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util upload
import java io file
/**
* <p>
* the default {@link org.apache.wicket.util.upload.fileitemfactory} implementation. this
* implementation creates {@link org.apache.wicket.util.upload.fileitem} instances which
* keep their content either in memory, for smaller items, or in a temporary
* file on disk, for larger items. the size threshold, above which content will
* be stored on disk, is configurable, as is the directory in which temporary
* files will be created.
* </p>
*
* <p>
* if not otherwise configured, the default configuration values are as follows:
* <ul>
* <li>size threshold is 10kb.</li>
* <li>repository is the system default temp directory, as returned by
* <code>system.getproperty("java.io.tmpdir")</code>.</li>
* </ul>
* </p>
*
* @author <a href="mailto:martinc@apache.org">martin cooper</a>
*/
public class diskfileitemfactory implements fileitemfactory
// ----------------------------------------------------- manifest constants
/**
* the default threshold above which uploads will be stored on disk.
*/
public static final int default_size_threshold   10240
// ----------------------------------------------------- instance variables
/**
* the directory in which uploaded files will be stored, if stored on disk.
*/
private file repository
/**
* the threshold above which uploads will be stored on disk.
*/
private int sizethreshold   default_size_threshold
// ----------------------------------------------------------- constructors
/**
* constructs an unconfigured instance of this class. the resulting factory
* may be configured by calling the appropriate setter methods.
*/
public diskfileitemfactory
/**
* constructs a preconfigured instance of this class.
*
* @param sizethreshold
*            the threshold, in bytes, below which items will be retained in
*            memory and above which they will be stored as a file.
* @param repository
*            the data repository, which is the directory in which files
*            will be created, should the item size exceed the threshold.
*/
public diskfileitemfactory int sizethreshold  file repository
this sizethreshold   sizethreshold
this repository   repository
// ------------------------------------------------------------- properties
/**
* returns the directory used to temporarily store files that are larger
* than the configured size threshold.
*
* @return the directory in which temporary files will be located.
*
* @see #setrepository(java.io.file)
*
*/
public file getrepository
return repository
/**
* sets the directory used to temporarily store files that are larger than
* the configured size threshold.
*
* @param repository
*            the directory in which temporary files will be located.
*
* @see #getrepository()
*
*/
public void setrepository file repository
this repository   repository
/**
* returns the size threshold beyond which files are written directly to
* disk. the default value is 1024 bytes.
*
* @return the size threshold, in bytes.
*
* @see #setsizethreshold(int)
*/
public int getsizethreshold
return sizethreshold
/**
* sets the size threshold beyond which files are written directly to disk.
*
* @param sizethreshold
*            the size threshold, in bytes.
*
* @see #getsizethreshold()
*
*/
public void setsizethreshold int sizethreshold
this sizethreshold   sizethreshold
// --------------------------------------------------------- public methods
/**
* create a new {@link org.apache.wicket.util.upload.diskfileitem} instance from the
* supplied parameters and the local factory configuration.
*
* @param fieldname
*            the name of the form field.
* @param contenttype
*            the content type of the form field.
* @param isformfield
*            <code>true</code> if this is a plain form field;
*            <code>false</code> otherwise.
* @param filename
*            the name of the uploaded file, if any, as supplied by the
*            browser or other client.
*
* @return the newly created file item.
*/
public fileitem createitem string fieldname  string contenttype  boolean isformfield
string filename
return new diskfileitem fieldname  contenttype  isformfield  filename  sizethreshold
repository