/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup repeater util
import java util iterator
import org apache wicket markup repeater refreshingview
import org apache wicket model imodel
/**
* iterator adapter that wraps adaptee's elements with a model. convinient when
* implementing {@link refreshingview}.
*
* @author igor vaynberg (ivaynberg)
*
*/
public abstract class modeliteratoradapter implements iterator
private iterator delegate
/**
* constructor
*
* @param delegate
*            iterator that will be wrapped
*/
public modeliteratoradapter iterator delegate
this delegate   delegate
/**
* @see java.util.iterator#hasnext()
*/
public boolean hasnext
return delegate hasnext
/**
* @see java.util.iterator#next()
*/
public object next
return model delegate next
/**
* @see java.util.iterator#remove()
*/
public void remove
delegate remove
/**
* this method is used to wrap the provided object with an implementation of
* imodel. the provided object is guaranteed to be returned from the
* delegate iterator.
*
* @param object
*            object to be wrapped
* @return imodel wrapper for the object
*/
abstract protected imodel model object object