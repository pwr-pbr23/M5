/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket protocol http request urlcompressing
import java io ioexception
import java lang ref referencequeue
import java lang ref weakreference
import java util iterator
import org apache wicket component
import org apache wicket iclusterable
import org apache wicket util collections inthashmap
import org apache wicket util collections inthashmap entry
/**
* this class generates uid for component/interface combinations when used in
* conjunction with {@link urlcompressingwebcodingstrategy}
*
* use it like this:
*
* <pre>
* protected irequestcycleprocessor newrequestcycleprocessor()
* {
* 	return new urlcompressingwebrequestprocessor();
* }
* </pre>
*
* @since 1.2
*
* @see urlcompressingwebcodingstrategy
* @see urlcompressingwebrequestprocessor
*
* @author jcompagner
*/
public class urlcompressor implements iclusterable
/**
* @author jcompagner
*/
public static class componentandinterface
private static final long serialversionuid   1l
private final intkeyweakreference ref
private final string interfacename
private componentandinterface intkeyweakreference ref  string interfacename
this ref   ref
this interfacename   interfacename
/**
* @return component the component that should be used to call the
*         interface
*/
public component getcomponent
return  component ref get
/**
* @return string the interface name which should be called on the
*         component
*/
public string getinterfacename
return interfacename
private static class intkeyweakreference extends weakreference
private int uid
/**
* @param uid
* @param referent
* @param q
*/
public intkeyweakreference int uid  object referent  referencequeue q
super referent  q
this uid   uid
private static final long serialversionuid   1l
private transient referencequeue queue   new referencequeue
private transient inthashmap directcomponentrefs   new inthashmap       uid >component interface
private int uid   1
/**
* gets the combination
*
* @param uidstring
* @return componentandinterface
*/
public componentandinterface getcomponentandinterfaceforuid string uidstring
intkeyweakreference ref   null
while   ref    intkeyweakreference queue poll       null
directcomponentrefs remove ref uid
int uid   integer parseint uidstring
componentandinterface cai    componentandinterface directcomponentrefs get uid
return cai
/**
* @return the next uid for this url compressor
*/
public int getnewuid
return uid
/**
* returns a uid for the combination component and the to call interface.
* will return the same uid if it was already called for this specific
* combination.
*
* @param component
*            the component
* @param interfacename
*            the interface name
* @return int the uid for the component/interfacename combination
*/
public int getuidforcomponentandinterface component component  string interfacename
int uid   0
iterator it   directcomponentrefs entryset   iterator
while  it hasnext
inthashmap entry entry    inthashmap entry it next
componentandinterface cai    componentandinterface entry getvalue
if  cai getinterfacename   equals interfacename     cai getcomponent      component
uid   entry getkey
break
if  uid    0
uid   getnewuid
intkeyweakreference ref   new intkeyweakreference uid  component  queue
directcomponentrefs put uid  new componentandinterface ref  interfacename
return uid
private void readobject java io objectinputstream s  throws ioexception  classnotfoundexception
s defaultreadobject
int size   s readint
queue   new referencequeue
directcomponentrefs   new inthashmap  int  size   1 25
while    size >  0
int uid   s readint
component component    component s readobject
string interfacename   s readutf
intkeyweakreference ref   new intkeyweakreference uid  component  queue
directcomponentrefs put uid  new componentandinterface ref  interfacename
private void writeobject java io objectoutputstream s  throws ioexception
intkeyweakreference ref   null
while   ref    intkeyweakreference queue poll       null
directcomponentrefs remove ref uid
s defaultwriteobject
s writeint directcomponentrefs size
iterator it   directcomponentrefs entryset   iterator
while  it hasnext
inthashmap entry entry    entry it next
s writeint entry getkey
componentandinterface cai    componentandinterface entry getvalue
s writeobject cai getcomponent
s writeutf cai getinterfacename