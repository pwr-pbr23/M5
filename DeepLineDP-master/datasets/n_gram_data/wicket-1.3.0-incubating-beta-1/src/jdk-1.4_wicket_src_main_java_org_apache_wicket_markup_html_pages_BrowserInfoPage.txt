/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html pages
import java io serializable
import org apache commons logging log
import org apache commons logging logfactory
import org apache wicket attributemodifier
import org apache wicket iclusterable
import org apache wicket pageparameters
import org apache wicket requestcycle
import org apache wicket response
import org apache wicket markup html webcomponent
import org apache wicket markup html webmarkupcontainer
import org apache wicket markup html webpage
import org apache wicket markup html form form
import org apache wicket markup html form textfield
import org apache wicket model compoundpropertymodel
import org apache wicket model model
import org apache wicket protocol http clientproperties
import org apache wicket protocol http webrequestcycle
import org apache wicket protocol http websession
import org apache wicket protocol http request webclientinfo
import org apache wicket request clientinfo
import org apache wicket request target component bookmarkablepagerequesttarget
import org apache wicket settings irequestcyclesettings
/**
* <p>
* this page uses a form post right after the page has loaded in the browser,
* using javascript or alternative means to detect and pass on settings to the
* embedded form. the form submit method updates this session's
* {@link org.apache.wicket.request.clientinfo} object and then redirects to the
* original location as was passed in as a url argument in the constructor.
* </p>
* <p>
* this page is being used by the default implementation of
* {@link webrequestcycle#newclientinfo}, which in turn uses
* {@link irequestcyclesettings#getgatherextendedbrowserinfo() a setting} to
* determine whether this page should be redirected to (it does when it is
* true).
* </p>
*
* @author eelco hillenius
*/
public class browserinfopage extends webpage
/**
* holds properties of the client.
*/
public static class clientpropertiesbean implements iclusterable
private static final long serialversionuid   1l
private string navigatorappcodename
private string navigatorappname
private string navigatorappversion
private boolean navigatorcookieenabled   boolean false
private boolean navigatorjavaenabled   boolean false
private string navigatorlanguage
private string navigatorplatform
private string navigatoruseragent
private string screencolordepth
private string screenheight
private string screenwidth
private string utcoffset
private string browserwidth
private string browserheight
/**
* gets browserheight.
*
* @return browserheight
*/
public string getbrowserheight
return browserheight
/**
* gets browserwidth.
*
* @return browserwidth
*/
public string getbrowserwidth
return browserwidth
/**
* gets navigatorappcodename.
*
* @return navigatorappcodename
*/
public string getnavigatorappcodename
return navigatorappcodename
/**
* gets navigatorappname.
*
* @return navigatorappname
*/
public string getnavigatorappname
return navigatorappname
/**
* gets navigatorappversion.
*
* @return navigatorappversion
*/
public string getnavigatorappversion
return navigatorappversion
/**
* gets navigatorcookieenabled.
*
* @return navigatorcookieenabled
*/
public boolean getnavigatorcookieenabled
return navigatorcookieenabled
/**
* gets navigatorjavaenabled.
*
* @return navigatorjavaenabled
*/
public boolean getnavigatorjavaenabled
return navigatorjavaenabled
/**
* gets navigatorlanguage.
*
* @return navigatorlanguage
*/
public string getnavigatorlanguage
return navigatorlanguage
/**
* gets navigatorplatform.
*
* @return navigatorplatform
*/
public string getnavigatorplatform
return navigatorplatform
/**
* gets navigatoruseragent.
*
* @return navigatoruseragent
*/
public string getnavigatoruseragent
return navigatoruseragent
/**
* gets screencolordepth.
*
* @return screencolordepth
*/
public string getscreencolordepth
return screencolordepth
/**
* gets screenheight.
*
* @return screenheight
*/
public string getscreenheight
return screenheight
/**
* gets screenwidth.
*
* @return screenwidth
*/
public string getscreenwidth
return screenwidth
/**
* gets utcoffset.
*
* @return utcoffset
*/
public string getutcoffset
return utcoffset
/**
* merge this with the given properties object.
*
* @param properties
*            the properties object to merge with
*/
public void merge clientproperties properties
properties setnavigatorappname navigatorappname
properties setnavigatorappversion navigatorappversion
properties setnavigatorappcodename navigatorappcodename
properties setcookiesenabled  navigatorcookieenabled    null  ? navigatorcookieenabled
booleanvalue     false
properties setjavaenabled  navigatorjavaenabled    null  ? navigatorjavaenabled
booleanvalue     false
properties setnavigatorlanguage navigatorlanguage
properties setnavigatorplatform navigatorplatform
properties setnavigatoruseragent navigatoruseragent
properties setscreenwidth getint screenwidth
properties setscreenheight getint screenheight
properties setbrowserwidth getint browserwidth
properties setbrowserheight getint browserheight
properties setscreencolordepth getint screencolordepth
properties setutcoffset utcoffset
/**
* sets browserheight.
*
* @param browserheight
*            browserheight
*/
public void setbrowserheight string browserheight
this browserheight   browserheight
/**
* sets browserwidth.
*
* @param browserwidth
*            browserwidth
*/
public void setbrowserwidth string browserwidth
this browserwidth   browserwidth
/**
* sets navigatorappcodename.
*
* @param navigatorappcodename
*            navigatorappcodename
*/
public void setnavigatorappcodename string navigatorappcodename
this navigatorappcodename   navigatorappcodename
/**
* sets navigatorappname.
*
* @param navigatorappname
*            navigatorappname
*/
public void setnavigatorappname string navigatorappname
this navigatorappname   navigatorappname
/**
* sets navigatorappversion.
*
* @param navigatorappversion
*            navigatorappversion
*/
public void setnavigatorappversion string navigatorappversion
this navigatorappversion   navigatorappversion
/**
* sets navigatorcookieenabled.
*
* @param navigatorcookieenabled
*            navigatorcookieenabled
*/
public void setnavigatorcookieenabled boolean navigatorcookieenabled
this navigatorcookieenabled   navigatorcookieenabled
/**
* sets navigatorjavaenabled.
*
* @param navigatorjavaenabled
*            navigatorjavaenabled
*/
public void setnavigatorjavaenabled boolean navigatorjavaenabled
this navigatorjavaenabled   navigatorjavaenabled
/**
* sets navigatorlanguage.
*
* @param navigatorlanguage
*            navigatorlanguage
*/
public void setnavigatorlanguage string navigatorlanguage
this navigatorlanguage   navigatorlanguage
/**
* sets navigatorplatform.
*
* @param navigatorplatform
*            navigatorplatform
*/
public void setnavigatorplatform string navigatorplatform
this navigatorplatform   navigatorplatform
/**
* sets navigatoruseragent.
*
* @param navigatoruseragent
*            navigatoruseragent
*/
public void setnavigatoruseragent string navigatoruseragent
this navigatoruseragent   navigatoruseragent
/**
* sets screencolordepth.
*
* @param screencolordepth
*            screencolordepth
*/
public void setscreencolordepth string screencolordepth
this screencolordepth   screencolordepth
/**
* sets screenheight.
*
* @param screenheight
*            screenheight
*/
public void setscreenheight string screenheight
this screenheight   screenheight
/**
* sets screenwidth.
*
* @param screenwidth
*            screenwidth
*/
public void setscreenwidth string screenwidth
this screenwidth   screenwidth
/**
* sets utcoffset.
*
* @param utcoffset
*            utcoffset
*/
public void setutcoffset string utcoffset
this utcoffset   utcoffset
private int getint string value
int intvalue    1
try
intvalue   integer parseint value
catch  numberformatexception e
// do nothing
return intvalue
/**
* form for posting javascript properties.
*/
private final class postbackform extends form
private static final long serialversionuid   1l
/**
* construct.
*
* @param id
*            component id
*/
public postbackform string id
super id  new compoundpropertymodel new clientpropertiesbean
add new textfield
add new textfield
add new textfield
add new textfield
add new textfield
add new textfield
add new textfield
add new textfield
add new textfield
add new textfield
add new textfield
add new textfield
add new textfield
add new textfield
/**
* @see org.apache.wicket.markup.html.form.form#onsubmit()
*/
protected void onsubmit
clientpropertiesbean propertiesbean    clientpropertiesbean getmodelobject
webrequestcycle requestcycle    webrequestcycle getrequestcycle
websession session    websession getsession
clientinfo clientinfo   session getclientinfo
if  clientinfo    null
clientinfo   new webclientinfo requestcycle
getsession   setclientinfo clientinfo
if  clientinfo instanceof webclientinfo
webclientinfo info    webclientinfo clientinfo
clientproperties properties   info getproperties
propertiesbean merge properties
else
warnnotusingwebclientinfo clientinfo
continuetoprevious
/** log. */
private static final log log   logfactory getlog browserinfopage class
private static final long serialversionuid   1l
/** the url to continue to after this page. */
private string continueto
/**
* bookmarkable constructor. this is not for normal framework client use. it
* will be called whenever javascript is not supported, and the browser info
* page's meta refresh fires to this page. prior to this, the other
* constructor should already have been called.
*
* @param parameters
*            page parameters with the original url in it
*/
public browserinfopage pageparameters parameters
string to    string parameters get
if  to    null
throw new illegalargumentexception
setcontinueto to
initcomps
webrequestcycle requestcycle    webrequestcycle getrequestcycle
websession session    websession getsession
clientinfo clientinfo   session getclientinfo
if  clientinfo    null
clientinfo   new webclientinfo requestcycle
getsession   setclientinfo clientinfo
else if  clientinfo instanceof webclientinfo
webclientinfo info    webclientinfo clientinfo
clientproperties properties   info getproperties
properties setjavaenabled false
else
warnnotusingwebclientinfo clientinfo
continuetoprevious
/**
* constructor. the page will redirect to the given url after waiting for
* the given number of seconds.
*
* @param continueto
*            the url to redirect to when the browser info is handled
*/
public browserinfopage final string continueto
if  continueto    null
throw new illegalargumentexception
setcontinueto continueto
initcomps
/**
* @see org.apache.wicket.component#isversioned()
*/
public boolean isversioned
return false
/**
* adds components.
*/
private final void initcomps
webcomponent meta   new webcomponent
pageparameters parameters   new pageparameters
parameters put    continueto
charsequence url   urlfor new bookmarkablepagerequesttarget browserinfopage class
parameters
meta add new attributemodifier    true  new model     url
add meta
webmarkupcontainer link   new webmarkupcontainer
link add new attributemodifier    true  new model  serializable url
add link
add new postbackform
/**
* log a warning that for in order to use this page, you should really be
* using {@link webclientinfo}.
*
* @param clientinfo
*            the actual client info object
*/
private void warnnotusingwebclientinfo clientinfo clientinfo
log warn     getclass   getname
webclientinfo class getname
clientinfo getclass   getname
/**
* continue to the location previous to this interception.
*/
protected final void continuetoprevious
// continue to original distination
requestcycle requestcycle   getrequestcycle
// since we are explicitly redirecting to a page already, we do not
// want a second redirect to occur automatically
requestcycle setredirect false
// redirect there
response response   requestcycle getresponse
response reset
response redirect continueto
/**
* set the url to continue to after this page.
*
* @param continueto
*            the url
*/
protected final void setcontinueto string continueto
this continueto   continueto