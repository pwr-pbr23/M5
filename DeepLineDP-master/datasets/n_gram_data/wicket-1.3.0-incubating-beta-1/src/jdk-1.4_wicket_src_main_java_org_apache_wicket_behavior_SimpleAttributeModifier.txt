/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket behavior
import org apache wicket component
import org apache wicket markup componenttag
/**
* a lightweight version of the attribute modifier. this is convenient for
* simpler situations where you know the value upfront and you do not need a
* pull-based model.
*
* @author igor vaynberg (ivaynberg)
*/
public class simpleattributemodifier extends abstractbehavior
private static final long serialversionuid   1l
/** the attribute */
private string attribute
/** the value to set */
private charsequence value
/**
* construct.
*
* @param attribute
*            the attribute
* @param value
*            the value
*/
public simpleattributemodifier final string attribute  final charsequence value
if  attribute    null
throw new illegalargumentexception
if  value    null
throw new illegalargumentexception
this attribute   attribute
this value   value
/**
* @see org.apache.wicket.behavior.abstractbehavior#oncomponenttag(org.apache.wicket.component,
*      org.apache.wicket.markup.componenttag)
*/
public void oncomponenttag final component component  final componenttag tag
if  isenabled component
tag getattributes   put attribute  value
/**
* this method is depricated use the isenabled(component)
* @return true
* @deprecated use isenabled(component) now.
*/
public final boolean isenabled
return true