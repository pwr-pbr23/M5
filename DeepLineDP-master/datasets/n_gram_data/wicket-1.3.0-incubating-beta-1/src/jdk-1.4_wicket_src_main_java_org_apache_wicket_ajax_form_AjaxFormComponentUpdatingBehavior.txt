/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket ajax form
import org apache wicket wicketruntimeexception
import org apache wicket ajax ajaxeventbehavior
import org apache wicket ajax ajaxrequesttarget
import org apache wicket markup html form formcomponent
import org apache wicket markup html form persistence ivaluepersister
import org apache wicket markup html form validation iformvalidator
import org apache wicket util string appendingstringbuffer
/**
* a behavior that updates the hosting formcomponent via ajax when an event it
* is attached to is triggered. this behavior encapsulates the entire
* form-processing workflow as relevant only to this component so if validation
* is successfull the component's model will be updated according to the
* submitted value.
* <p>
* note: this behavior does not support persisting form component values into
* cookie or other {@link ivaluepersister}. if this is necessary please add a
* request for enhancement.
* <p>
* note: this behavior does not validate any {@link iformvalidator}s attached
* to this form even though they may reference the component being updated.
*
* @since 1.2
*
* @author igor vaynberg (ivaynberg)
*/
public abstract class ajaxformcomponentupdatingbehavior extends ajaxeventbehavior
/**
* construct.
*
* @param event
*            event to trigger this behavior
*/
public ajaxformcomponentupdatingbehavior final string event
super event
/**
*
* @see org.apache.wicket.behavior.abstractajaxbehavior#onbind()
*/
protected void onbind
super onbind
if    getcomponent   instanceof formcomponent
throw new wicketruntimeexception     getclass   getname
/**
*
* @return formcomponent
*/
protected final formcomponent getformcomponent
return  formcomponent getcomponent
/**
* @see org.apache.wicket.ajax.ajaxeventbehavior#geteventhandler()
*/
protected final charsequence geteventhandler
return getcallbackscript new appendingstringbuffer    append
getcallbackurl true  false   append
getcomponent   getmarkupid
null  null
/**
* @see org.apache.wicket.ajax.ajaxeventbehavior#oncheckevent(java.lang.string)
*/
protected void oncheckevent string event
if    equalsignorecase event
throw new illegalargumentexception
/**
*
* @see org.apache.wicket.ajax.ajaxeventbehavior#onevent(org.apache.wicket.ajax.ajaxrequesttarget)
*/
protected final void onevent final ajaxrequesttarget target
final formcomponent formcomponent   getformcomponent
try
formcomponent inputchanged
formcomponent validate
if  formcomponent haserrormessage
formcomponent invalid
onerror target  null
else
formcomponent valid
formcomponent updatemodel
onupdate target
catch  runtimeexception e
onerror target  e
/**
* listener invoked on the ajax request. this listener is invoked after the
* component's model has been updated.
*
* @param target
*/
protected abstract void onupdate ajaxrequesttarget target
/**
* called to handle any error resulting from updating form component. errors
* thrown from {@link #onupdate(ajaxrequesttarget)} will not be caught here.
*
* the runtimeexception will be null if it was just a validation or conversion
* error of the formcomponent
*
* @param target
* @param e
*/
protected void onerror ajaxrequesttarget target  runtimeexception e
if e    null  throw e