/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html form
import org apache wicket markup componenttag
import org apache wicket model imodel
/**
* a simple text field.
*
* @author jonathan locke
*/
public class textfield extends abstracttextcomponent
private static final long serialversionuid   1l
/**
* @see org.apache.wicket.component#component(string)
*/
public textfield final string id
super id
/**
* @param id
*            see component
* @param type
*            type for field validation
*/
public textfield final string id  final class type
super id
settype type
/**
* @see org.apache.wicket.component#component(string, imodel)
*/
public textfield final string id  final imodel object
super id  object
/**
* @param id
*            see component
* @param model
*            see component
* @param type
*            the type to use when updating the model for this text field
* @see org.apache.wicket.component#component(string, imodel)
*/
public textfield final string id  imodel model  class type
super id  model
settype type
/**
* processes the component tag.
*
* @param tag
*            tag to modify
* @see org.apache.wicket.component#oncomponenttag(componenttag)
*/
protected void oncomponenttag final componenttag tag
// must be attached to an input tag
checkcomponenttag tag
// check for text type
string inputtype   getinputtype
if inputtype    null
checkcomponenttagattribute tag     inputtype
else
if tag getattributes   containskey
checkcomponenttagattribute tag
// no validation errors
tag put    getvalue
// default handling for component tag
super oncomponenttag tag
/**
* subclass should override this method if this textfields mappes on a different
* input type as text. like passwordfield or hiddenfield.
*
* @return the input type of this textfield, default is 'text'
*/
protected string getinputtype
return null