/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util string
import org apache wicket response
/**
* provide some helpers to write javascript related tags to the response object.
*
* @author juergen donnerstag
*/
public class javascriptutils
/** script open tag */
public final static string script_open_tag    text javascript
/** script close tag */
public final static string script_close_tag
/** script open tag */
public final static string script_content_prefix
/** script close tag */
public final static string script_content_suffix
/** the response object */
private response response
/**
* construct.
*
* @param response
*            the response object
* @param id
*/
public javascriptutils final response response  string id
this response   response
writeopentag response  id
/**
* constructor without id for backward compatibility
*
* @param response
*            the response object
* @param id
*/
public javascriptutils final response response
this response   response
writeopentag response
/**
* escape quotes and double quotes so that they can be part of e.g. an alert
* call.
*
* @param input
*            input
* @return escaped version of the input
*/
public static charsequence escapequotes final charsequence input
charsequence s   input
if  s    null
s   strings replaceall s
return s
/**
* write a reference to a javascript file to the response object
*
* @param response
*            the http response
* @param url
*            the javascript file url
* @param id
*            unique identifier of element
*/
public static void writejavascripturl final response response  final charsequence url  final string id
response write  text javascript
if  id    null
response write
response write  "
response write url
response println  >< script>"
/**
* write a reference to a javascript file to the response object
*
* @param response
*            the http response
* @param url
*            the javascript file url
*/
public static void writejavascripturl final response response  final charsequence url
writejavascripturl response  url  null
/**
* write the simple text to the response object surrounded by a script tag.
*
* @param response
*            the http: response
* @param text
*            the text to added in between the script tags
* @param id
*            unique identifier of element
*/
public static void writejavascript final response response  final charsequence text  string id
writeopentag response  id
response write text
writeclosetag response
/**
* write the simple text to the response object surrounded by a script tag.
*
* @param response
*            the http: response
* @param text
*            the text to added in between the script tags
*/
public static void writejavascript final response response  final charsequence text
writejavascript response  text  null
/**
*
* @param response
* @param id
*/
public static void writeopentag final response response  string id
response write  text javascript
if  id    null
response write
response write
response write script_content_prefix
/**
*
* @param response
*/
public static void writeopentag final response response
writeopentag response  null
/**
*
* @param response
*/
public static void writeclosetag final response response
response write script_content_suffix
response println
/**
* @see response#write(java.lang.charsequence)
* @param script
*/
public void write final charsequence script
response write script
/**
* @see response#println(java.lang.charsequence)
* @param script
*/
public void println final charsequence script
response println script
/**
* write the script close tag to the response. the response output stream
* remains open.
*/
public void close
writeclosetag response