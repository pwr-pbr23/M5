/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples frames
import java io serializable
import org apache wicket attributemodifier
import org apache wicket pagemap
import org apache wicket requestcycle
import org apache wicket markup html webcomponent
import org apache wicket markup html webpage
import org apache wicket model model
/**
* body frame page for the frames example.
*
* @author eelco hillenius
*/
public class bodyframe extends webpage
/**
* model that returns the url to the bookmarkable page that is set in the
* current frame target.
*/
private final class framemodel extends model
/**
* @see org.apache.wicket.model.model#getobject()
*/
public object getobject
return requestcycle get   urlfor pagemap forname right_frame_name
frametarget getframeclass    null
/** name for page map etc. */
public static final string right_frame_name
private final frametarget frametarget   new frametarget page1 class
/**
* constructor
*/
public bodyframe
// create a new page instance, passing this 'master page' as an argument
leftframe leftframe   new leftframe this
// get the url to that page
charsequence leftframesrc   requestcycle get   urlfor leftframe
// and create a simple component that modifies it's src attribute to
// hold the url to that frame
webcomponent leftframetag   new webcomponent
leftframetag add new attributemodifier    new model  serializable leftframesrc
add leftframetag
// make a simple component for the right frame tag
webcomponent rightframetag   new webcomponent
// and this time, set a model which retrieves the url to the currently
// set frame class in the frame target
rightframetag add new attributemodifier    new framemodel
add rightframetag
/**
* gets frametarget.
*
* @return frametarget
*/
public frametarget getframetarget
return frametarget
/**
* @see org.apache.wicket.component#isversioned()
*/
public boolean isversioned
return false