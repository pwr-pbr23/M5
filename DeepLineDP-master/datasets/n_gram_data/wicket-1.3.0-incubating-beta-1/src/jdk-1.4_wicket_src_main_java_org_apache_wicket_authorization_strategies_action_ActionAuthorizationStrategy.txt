/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket authorization strategies action
import java util hashmap
import java util map
import org apache wicket component
import org apache wicket authorization action
import org apache wicket authorization iauthorizationstrategy
/**
* an authorization strategy which allows the use of a command pattern for users
* that want to authorize a variety of different types of actions throughout an
* application.
*
* @author jonathan locke
* @since wicket 1.2
*/
public class actionauthorizationstrategy implements iauthorizationstrategy
/** map from action keys to iactionauthorizer implementations. */
private final map actionauthorizerforaction   new hashmap
/**
* adds an action authorizer.
*
* @param authorizer
*            the action authorizer to add
*/
public void addactionauthorizer iactionauthorizer authorizer
actionauthorizerforaction put authorizer getaction    authorizer
/**
* @see org.apache.wicket.authorization.iauthorizationstrategy#isinstantiationauthorized(java.lang.class)
*/
public boolean isinstantiationauthorized class componentclass
return true
/**
* @see org.apache.wicket.authorization.iauthorizationstrategy#isactionauthorized(org.apache.wicket.component,
*      org.apache.wicket.authorization.action)
*/
public boolean isactionauthorized component component  action action
iactionauthorizer authorizer    iactionauthorizer actionauthorizerforaction get action
if  authorizer    null
return authorizer authorizeaction component
return false