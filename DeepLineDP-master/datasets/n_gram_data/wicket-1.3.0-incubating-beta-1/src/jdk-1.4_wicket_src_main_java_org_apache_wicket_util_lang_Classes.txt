/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util lang
import org apache wicket application
import org apache wicket util string strings
/**
* utilities for dealing with classes.
*
* @author jonathan locke
*/
public final class classes
/**
* gets the name of the given class or null if the class is null.
*
* @param c
*            the class
* @return the class name
*/
public static string name final class c
return  c    null  ? c getname     null
/**
* takes a class and a relative path to a class and returns any class at
* that relative path. for example, if the given class was java.lang.system
* and the relative path was "../util/list", then the java.util.list class
* would be returned.
*
* @param scope
*            the package to start at
* @param path
*            the relative path to the class
* @return the class
* @throws classnotfoundexception
*/
public static class relativeclass final class scope  final string path
throws classnotfoundexception
return class forname packages absolutepath scope  path  replace
/**
* @param classname
*            class to resolve
* @return resolved class
*/
public static class resolveclass final string classname
if  application isattached
return application get   getapplicationsettings   getclassresolver   resolveclass
classname
try
return class forname classname
catch  classnotfoundexception e
e printstacktrace
return null
/**
* gets the name of a given class without the prefixed package path
*
* @param c
*            the class
* @return the class name
*/
public static string simplename final class c
return strings lastpathcomponent c getname
/**
* instantiation not allowed
*/
private classes