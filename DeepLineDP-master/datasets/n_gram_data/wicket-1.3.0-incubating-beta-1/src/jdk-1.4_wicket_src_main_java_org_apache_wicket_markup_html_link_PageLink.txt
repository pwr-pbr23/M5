/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html link
import org apache wicket page
/**
* links to a given page via an object implementing the ipagelink delayed
* linking interface. pagelinks can be constructed directly with an ipagelink
* interface or with a page class object. in the latter case, an ipagelink
* implementation is provided which constructs a page of the given class when
* the link is clicked. a default no-args constructor must be available in this
* case or a wicketruntimeexception will be thrown when wicket fails to
* instantiate the class.
*
* @see ipagelink
* @author jonathan locke
*/
public class pagelink extends link
private static final long serialversionuid   1l
/** the delayed linking page source. */
private final ipagelink pagelink
/**
* constructs a link that instantiates the given page class when the link is
* clicked. the instantiated page is used to render a response to the user.
*
* @param id
*            see component
* @param c
*            page class
*/
public pagelink final string id  final class c
super id
// ensure that c is a subclass of page
if   page class isassignablefrom c
throw new illegalargumentexception     c
this pagelink   new ipagelink
private static final long serialversionuid   1l
public page getpage
// create page using page factory
return pagelink this getpage   getpagefactory   newpage c
public class getpageidentity
return c
/**
* this constructor is ideal for constructing pages lazily.
*
* constructs a link which invokes the getpage() method of the ipagelink
* interface when the link is clicked. whatever page objects is returned by
* this method will be rendered back to the user.
*
* @param id
*            see component
* @param pagelink
*            an implementation of ipagelink which will create the page
*            linked to if and when this hyperlink is clicked at a later
*            time.
*/
public pagelink final string id  final ipagelink pagelink
super id
this pagelink   pagelink
/**
* this constructor is ideal if a page object was passed in from a previous
* page. construct a link to the page. warning: do not use this for
* constructing links to pages you didn't already have an instance of. this
* constructor is strongly discouraged for anything other than linking back
* to the same page.
*
* @param id
*            see component
* @param page
*            the page
* @deprecated rather than using this class/ constructor, use normal
*             {@link link links} and call setresponsepage in their
*             {@link link#onclick() onclick} methods.
*/
public pagelink final string id  final page page
super id
this pagelink   new ipagelink
private static final long serialversionuid   1l
public page getpage
// create page using page factory
return page
public class getpageidentity
return page getclass
/**
* returns true if the given page is of the same class as the (delayed)
* destination of this page link.
*
* @see org.apache.wicket.markup.html.link.link#linksto(org.apache.wicket.page)
*/
public boolean linksto final page page
return page getclass      pagelink getpageidentity
/**
* handles a link click by asking for a concrete page instance through the
* ipagelink.getpage() delayed linking interface. this call will normally
* cause the destination page to be created.
*
* @see org.apache.wicket.markup.html.link.link#onclick()
*/
public void onclick
// set page source's page as response page
setresponsepage pagelink getpage