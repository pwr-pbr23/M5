/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup repeater util
import java util iterator
import org apache wicket model imodel
/**
* iterator over an array. implementation must provide
* {@link arrayiteratoradapter#model(object) } method to wrap each item in a
* model before it is returned through {@link arrayiteratoradapter#next() }
* method.
*
* @author igor vaynberg (ivaynberg)
*
*/
public abstract class arrayiteratoradapter implements iterator
private object array
private int pos   0
/**
* constructor
*
* @param array
*/
public arrayiteratoradapter object array
this array   array
/**
* @see java.util.iterator#remove()
*/
public void remove
throw new unsupportedoperationexception
/**
* @see java.util.iterator#hasnext()
*/
public boolean hasnext
return pos < array length
/**
* @see java.util.iterator#next()
*/
public object next
return model array
/**
* resets the iterator position back to the beginning of the array
*/
public void reset
pos   0
/**
* this method is used to wrap the provided object with an implementation of
* imodel. the provided object is guaranteed to be returned from the
* delegate iterator.
*
* @param object
*            object to be wrapped
* @return imodel wrapper for the object
*/
abstract protected imodel model object object