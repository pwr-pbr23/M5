/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html tree
import java util collection
import javax swing tree treenode
/**
* tree state holds information about a tree such as which nodes are expanded /
* collapsed and which nodes are selected, it can also fire callbacks on
* listener in case any of the information changed.
*
* @author matej knopp
*/
public interface itreestate
/**
* adds a tree state listener. on state change events on the listener are
* fired.
*
* @param l
*            listener to add
*/
void addtreestatelistener itreestatelistener l
/**
* collapses all nodes of the tree.
*/
void collapseall
/**
* collapses the given node.
*
* @param node
*            node to collapse
*/
void collapsenode treenode node
/**
* expands all nodes of the tree.
*/
void expandall
/**
* expands the given node.
*
* @param node
*            node to expand
*/
void expandnode treenode node
/**
* returns the collection of all selected nodes.
*
* @return the collection of selected nodes
*/
collection getselectednodes
/**
* returns whether multiple nodes can be selected.
*
* @return true if mutliple nodes can be selected
*/
boolean isallowselectmultiple
/**
* returns true if the given node is expanded.
*
* @param node
*            the node to inspect
* @return true if the node is expanded
*/
boolean isnodeexpanded treenode node
/**
* returns true if the given node is selected, false otherwise.
*
* @param node
*            the node to inspect
* @return true if the node is selected
*/
boolean isnodeselected treenode node
/**
* removes a tree state listener.
*
* @param l
*            the listener to remove
*/
void removetreestatelistener itreestatelistener l
/**
* marks given node as selected (or unselected) according to the selected
* value.
* <p>
* if tree is in single selection mode and a new node is selected, old node
* is automatically unselected (and the event is fired on listeners).
*
* @param node
*            the node to select or deselect
* @param selected
*            if true, the node will be selected, otherwise, the node will
*            be unselected
*/
void selectnode treenode node  boolean selected
/**
* sets whether multiple nodes can be selected.
*
* @param value
*            if true, multiple nodes can be selected. if false, only one
*            node at a time can be selected
*/
void setallowselectmultiple boolean value