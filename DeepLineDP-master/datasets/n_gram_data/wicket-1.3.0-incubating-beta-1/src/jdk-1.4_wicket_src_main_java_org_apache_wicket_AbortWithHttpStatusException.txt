/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket
import javax servlet http httpservletresponse
import org apache wicket protocol http webresponse
import org apache wicket request target basic emptyrequesttarget
/**
* causes wicket to abort processing and set the specified http status code. an
* {@link illegalstateexception} will be thrown if http status code could not be
* set and the optional parameter is specified as false.
*
* this exception can be thrown from a page or a resource.
*
* @author igor vaynberg (ivaynberg)
* @author gili tzabari
* @see httpservletresponse
* @deprecated moves to package org.apache.wicket.protocol.http.servlet in 2.0
*/
public class abortwithhttpstatusexception extends abortexception
private static final long serialversionuid   1l
private final int status
/**
* constructor
*
* @param status
*            the http response status code
* @param statuscodeoptional
*            if true and http status could not be set, an
*            illegalstateexception will be thrown
*/
public abortwithhttpstatusexception int status  boolean statuscodeoptional
this status   status
requestcycle rc   requestcycle get
if  rc    null
if   statuscodeoptional
throw new illegalstateexception
else
response r   rc getresponse
if    r instanceof webresponse
throw new illegalstateexception
webresponse wr    webresponse r
wr gethttpservletresponse   setstatus status
// abort any further response processing
rc setrequesttarget emptyrequesttarget getinstance
/**
*
* @return the response status code
*/
public final int getstatus
return status