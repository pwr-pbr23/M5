/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket injection
import java lang reflect field
import java util arraylist
import java util list
import org apache wicket component
import org apache wicket markupcontainer
import org apache wicket page
import org apache wicket markup html webpage
import org apache wicket markup html panel panel
import org apache wicket util concurrent concurrenthashmap
/**
* injector scans fields of an object instance and checks if the specified
* {@link ifieldvaluefactory} can provide a value for a field; if it can, the
* field is set to that value. injector will ignore all non-null fields.
*
* @author igor vaynberg (ivaynberg)
*
*/
public class injector
private static injector instance   new injector
private concurrenthashmap   <class  field>   classtofields   new concurrenthashmap
/**
* @return static instance of proxyinjector
*/
public static injector getinstance
return instance
/**
* when the initializer traverses the hierarchy of the specified object it
* will stop if it encounters a boundary class.
*
* by default, more common wicket classes are defined as boundaries so that
* the initializer does not waste time traversing them.
*
* @param clazz
*            class to be tested for being a boundary class
* @return true if the class is a boundary class, false otherwise
*/
protected boolean isboundaryclass class clazz
if  clazz equals webpage class
clazz equals page class     clazz equals panel class
clazz equals markupcontainer class     clazz equals component class
return true
return false
/**
* traverse fields in the class hierarchy of the object and set their value
* with a locator provided by the locator factory.
*
* @param object
* @param factory
* @return object that was injected - used for chaining
*/
public object inject object object  ifieldvaluefactory factory
class clazz   object getclass
field fields
fields    field  classtofields get clazz
if  fields    null
fields   findfields clazz  factory
classtofields put clazz  fields
for  int i   0  i < fields length  i
final field field   fields
if   field isaccessible
field setaccessible true
try
if  field get object     null
object value   factory getfieldvalue field  object
if  value    null
field set object  value
catch  illegalargumentexception e
throw new runtimeexception
object tostring         object getclass   getname
e
catch  illegalaccessexception e
throw new runtimeexception
object tostring         object getclass   getname
e
return object
/**
* returns an array of fields that can be injected using the given field
* value factory
*
* @param clazz
* @param factory
* @return an array of fields that can be injected using the given field
*         value factory
*/
private field findfields class clazz  ifieldvaluefactory factory
list   <field>   matched   new arraylist
while  clazz    null     isboundaryclass clazz
field fields   clazz getdeclaredfields
for  int i   0  i < fields length  i
final field field   fields
if  factory supportsfield field
matched add field
clazz   clazz getsuperclass
return  field  matched toarray new field