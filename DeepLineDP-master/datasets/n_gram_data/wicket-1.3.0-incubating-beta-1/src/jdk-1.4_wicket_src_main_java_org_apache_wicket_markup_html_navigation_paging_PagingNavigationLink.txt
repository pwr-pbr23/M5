/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html navigation paging
import org apache wicket page
import org apache wicket markup html link link
/**
* a link to a page of a pageablelistview.
*
* @author jonathan locke
* @author eelco hillenius
* @author martijn dashorst
*/
public class pagingnavigationlink extends link
private static final long serialversionuid   1l
/** the pageable list view. */
protected final ipageable pageable
/** the page of the pageablelistview this link is for. */
private final int pagenumber
/**
* constructor.
*
* @param id
*            see component
* @param pageable
*            the pageable component for this page link
* @param pagenumber
*            the page number in the pageablelistview that this link links
*            to. negative pagenumbers are relative to the end of the list.
*/
public pagingnavigationlink final string id
final ipageable pageable  final int pagenumber
super id
setautoenable true
this pagenumber   pagenumber
this pageable   pageable
/**
* @see org.apache.wicket.markup.html.link.link#onclick()
*/
public void onclick
pageable setcurrentpage getpagenumber
// we do not need to redirect
setredirect false
setresponsepage getpage
/**
* get pagenumber.
*
* @return pagenumber.
*/
public final int getpagenumber
int idx   pagenumber
if  idx < 0
idx   pageable getpagecount     idx
if  idx >  pageable getpagecount     1
idx   pageable getpagecount     1
if  idx < 0
idx   0
return idx
/**
* @return true if this page is the first page of the containing
*         pageablelistview
*/
public final boolean isfirst
return getpagenumber      0
/**
* @return true if this page is the last page of the containing
*         pageablelistview
*/
public final boolean islast
return getpagenumber       pageable getpagecount     1
/**
* returns true if this pageablelistview navigation link links to the given
* page.
*
* @param page
*            the page
* @return true if this link links to the given page
* @see org.apache.wicket.markup.html.link.pagelink#linksto(org.apache.wicket.page)
*/
public final boolean linksto final page page
return getpagenumber      pageable getcurrentpage