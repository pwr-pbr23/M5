/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html image resource
import java awt image bufferedimage
import java util locale
/**
* a dynamicimageresource subclass that holds a bufferedimage generated by code
* elsewhere. the image is held in a non-transient field, and so if this
* resource is clustered, the entire image will be serialized and copied. if you
* can regenerate your image by drawing on a graphics2d, you should prefer the
* rendereddynamicimageresource class instead since its image data is transient
* and therefore it is very lightweight when clustered.
* <p>
* the format of the image (and therefore the resource's extension) can be
* specified with setformat(string). the default format is "png" because jpeg is
* lossy and makes generated images look bad and gif has patent issues.
*
* @see org.apache.wicket.markup.html.image.resource.rendereddynamicimageresource
* @author jonathan locke
*/
public class buffereddynamicimageresource extends dynamicimageresource
private static final long serialversionuid   1l
/** the byte array holding the contents of the dynamic image */
private byte imagedata
/**
* construct.
*/
public buffereddynamicimageresource
/**
* construct.
* @param locale
*/
public buffereddynamicimageresource locale locale
super locale
/**
* construct.
* @param format
* @param locale
*/
public buffereddynamicimageresource string format  locale locale
super format  locale
/**
* construct.
* @param format
*/
public buffereddynamicimageresource string format
super format
/**
* @param image
*            the image to set
*/
public synchronized void setimage final bufferedimage image
imagedata   toimagedata image
protected byte getimagedata
return imagedata