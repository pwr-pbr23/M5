/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html tree
import java io serializable
import java util arraylist
import java util collection
import java util collections
import java util hashset
import java util iterator
import java util list
import java util set
import javax swing tree treenode
/**
* default implementation of treestate.
* <p>
* this implementation tries to be as lightweight as possible.
*
* @author matej knopp
*/
public class defaulttreestate implements itreestate  serializable
private static final long serialversionuid   1l
/** whether multiple selections can be done. */
private boolean allowselectmultiple   false
/** tree state listeners. */
private final list listeners   new arraylist 1
/**
* set of nodes which are collapsed or expanded (depends on nodescollapsed
* veriable).
*/
private final set nodes   new hashset
/** whether the nodes set should be treated as collapsed or expanded. */
private boolean nodescollapsed   true
/** set selected nodes. */
private final set selectednodes   new hashset
/**
* @see org.apache.wicket.markup.html.tree.itreestate#addtreestatelistener(org.apache.wicket.markup.html.tree.itreestatelistener)
*/
public void addtreestatelistener itreestatelistener l
if  listeners contains l     false
listeners add l
/**
* @see org.apache.wicket.markup.html.tree.itreestate#collapseall()
*/
public void collapseall
if  nodes isempty      nodescollapsed    false
// all nodes are already collapsed, do nothing
else
// clear all nodes from the set and sets the nodes as expanded
nodes clear
nodescollapsed   false
object listenerscopy   listeners toarray
for int i   0  i < listenerscopy length  i
itreestatelistener l    itreestatelistener listenerscopy
l allnodescollapsed
/**
* @see org.apache.wicket.markup.html.tree.itreestate#collapsenode(javax.swing.tree.treenode)
*/
public void collapsenode treenode node
if  nodescollapsed    true
nodes add node
else
nodes remove node
object listenerscopy   listeners toarray
for int i   0  i < listenerscopy length  i
itreestatelistener l    itreestatelistener listenerscopy
l nodecollapsed node
/**
* @see org.apache.wicket.markup.html.tree.itreestate#expandall()
*/
public void expandall
if  nodes isempty      nodescollapsed    true
// all nodes are already expanded, do nothing
else
// clear node set and set nodes policy as collapsed
nodes clear
nodescollapsed   true
object listenerscopy   listeners toarray
for int i   0  i < listenerscopy length  i
itreestatelistener l    itreestatelistener listenerscopy
l allnodescollapsed
/**
* @see org.apache.wicket.markup.html.tree.itreestate#expandnode(javax.swing.tree.treenode)
*/
public void expandnode treenode node
if  nodescollapsed    false
nodes add node
else
nodes remove node
object listenerscopy   listeners toarray
for int i   0  i < listenerscopy length  i
itreestatelistener l    itreestatelistener listenerscopy
l nodeexpanded node
/**
* @see org.apache.wicket.markup.html.tree.itreestate#getselectednodes()
*/
public collection getselectednodes
return collections unmodifiablelist new arraylist selectednodes
/**
* @see org.apache.wicket.markup.html.tree.itreestate#isallowselectmultiple()
*/
public boolean isallowselectmultiple
return allowselectmultiple
/**
* @see org.apache.wicket.markup.html.tree.itreestate#isnodeexpanded(javax.swing.tree.treenode)
*/
public boolean isnodeexpanded treenode node
if  nodescollapsed    false
return nodes contains node
else
return nodes contains node     false
/**
* @see org.apache.wicket.markup.html.tree.itreestate#isnodeselected(javax.swing.tree.treenode)
*/
public boolean isnodeselected treenode node
return selectednodes contains node
/**
* @see org.apache.wicket.markup.html.tree.itreestate#removetreestatelistener(org.apache.wicket.markup.html.tree.itreestatelistener)
*/
public void removetreestatelistener itreestatelistener l
listeners remove l
/**
* @see org.apache.wicket.markup.html.tree.itreestate#selectnode(javax.swing.tree.treenode,
*      boolean)
*/
public void selectnode treenode node  boolean selected
if  selected    true    selectednodes contains node     false
if  isallowselectmultiple      false    selectednodes size   > 0
for  iterator i   selectednodes iterator    i hasnext
treenode current    treenode i next
i remove
object listenerscopy   listeners toarray
for int j   0  j < listenerscopy length  j
itreestatelistener l    itreestatelistener listenerscopy
l nodeunselected current
selectednodes add node
object listenerscopy   listeners toarray
for int i   0  i < listenerscopy length  i
itreestatelistener l    itreestatelistener listenerscopy
l nodeselected node
else if  selected    false    selectednodes contains node     true
selectednodes remove node
object listenerscopy   listeners toarray
for int i   0  i < listenerscopy length  i
itreestatelistener l    itreestatelistener listenerscopy
l nodeunselected node
/**
* @see org.apache.wicket.markup.html.tree.itreestate#setallowselectmultiple(boolean)
*/
public void setallowselectmultiple boolean value
this allowselectmultiple   value