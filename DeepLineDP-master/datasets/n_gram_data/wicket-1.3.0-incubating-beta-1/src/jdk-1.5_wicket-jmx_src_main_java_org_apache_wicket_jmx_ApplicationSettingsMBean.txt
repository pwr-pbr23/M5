/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket jmx
import org apache wicket settings iapplicationsettings
/**
* application settings.
*
* @author eelcohillenius
*/
public interface applicationsettingsmbean
/**
* gets the access denied page class.
*
* @return returns the accessdeniedpage.
* @see iapplicationsettings#setaccessdeniedpage(class)
*/
string getaccessdeniedpage
/**
* gets the default resolver to use when finding classes
*
* @return default class resolver
*/
string getclassresolver
/**
* gets context path to use for absolute path generation. for example an
* application server that is used as a virtual server on a webserver:
*
* <pre>
*           appserver.com/context mapped to webserver/ (context path should be '/')
* </pre>
*
* @return the context path
*
* @see iapplicationsettings#setcontextpath(string) what the possible values
*      can be.
*/
string getcontextpath
/**
* gets the converter factory.
*
* @return the converter factory
*/
string getconverterlocatorfactory
/**
* gets internal error page class.
*
* @return returns the internalerrorpage.
* @see iapplicationsettings#setinternalerrorpage(class)
*/
string getinternalerrorpage
/**
* gets the page expired page class.
*
* @return returns the pageexpirederrorpage.
* @see iapplicationsettings#setpageexpirederrorpage(class)
*/
string getpageexpirederrorpage
/**
* gets the unexpected exception display.
*
* @return the unexpected exception display
*/
string getunexpectedexceptiondisplay