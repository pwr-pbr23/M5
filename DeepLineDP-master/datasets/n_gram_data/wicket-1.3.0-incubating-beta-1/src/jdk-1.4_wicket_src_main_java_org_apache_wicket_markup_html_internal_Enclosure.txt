/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html internal
import org apache commons logging log
import org apache commons logging logfactory
import org apache wicket component
import org apache wicket markupcontainer
import org apache wicket wicketruntimeexception
import org apache wicket markup componenttag
import org apache wicket markup markupexception
import org apache wicket markup markupstream
import org apache wicket markup html webmarkupcontainer
import org apache wicket markup parser filter enclosurehandler
import org apache wicket markup resolver enclosureresolver
/**
* an enclosure are automatically created by wicket. do not create it yourself.
* an enclosure container is created if &lt;wicket:enclosure&gt; is found in the
* markup. it is meant to solve the following situation. instead of
*
* <pre>
*    &lt;table wicket:id=&quot;label-container&quot; class=&quot;notify&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;span wicket:id=&quot;label&quot;&gt;[[notification]]&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
*
*    webmarkupcontainer container=new webmarkupcontainer(&quot;label-container&quot;)
*    {
*       public boolean isvisible()
*       {
*           return hasnotification();
*       }
*    };
*    add(container);
*     container.add(new label(&quot;label&quot;, notificationmodel));
* </pre>
*
* with enclosure you are able to do the following:
*
* <pre>
*    &lt;wicket:enclosure&gt;
*      &lt;table class=&quot;notify&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;span wicket:id=&quot;label&quot;&gt;[[notification]]&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
*    &lt;/wicket:enclosure&gt;
*
*    add(new label(&quot;label&quot;, notificationmodel))
*    {
*       public boolean isvisible()
*       {
*           return hasnotification();
*       }
*    }
* </pre>
*
* @see enclosureresolver
* @see enclosurehandler
*
* @author juergen donnerstag
*/
public class enclosure extends webmarkupcontainer
private static final long serialversionuid   1l
private static final log log   logfactory getlog enclosure class
/** the child component to delegate the isvisible() call to */
private component childcomponent
/** id of the child component that will control visibility of the enclosure */
private final charsequence childid
/**
* construct.
*
* @param parent
* @param id
* @param childid
*/
public enclosure final string id  final charsequence childid
super id
this childid   childid
/**
*
* @see org.apache.wicket.markupcontainer#istransparentresolver()
*/
public boolean istransparentresolver
return true
/**
*
* @param childid
* @return child component
*/
private component getchildcomponent final charsequence childid
markupcontainer parent   getparent
while   parent    null     parent istransparentresolver
parent   parent getparent
if  parent    null
throw new wicketruntimeexception
if  childid    null
throw new markupexception
final component child   parent get childid tostring
if  child    null
throw new markupexception
childid       this tostring
return child
/**
*
* @see org.apache.wicket.markupcontainer#oncomponenttagbody(org.apache.wicket.markup.markupstream,
*      org.apache.wicket.markup.componenttag)
*/
protected void oncomponenttagbody markupstream markupstream  componenttag opentag
if  childcomponent    null
childcomponent   getchildcomponent childid
if  childcomponent    this
throw new wicketruntimeexception
else if  childcomponent    null
// delegate to child component
setvisible childcomponent isvisible
if  isvisible      true
super oncomponenttagbody markupstream  opentag
else
markupstream skipuntil opentag getname