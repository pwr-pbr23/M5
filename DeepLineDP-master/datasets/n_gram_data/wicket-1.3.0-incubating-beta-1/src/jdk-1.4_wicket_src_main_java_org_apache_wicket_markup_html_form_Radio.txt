/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html form
import org apache wicket component
import org apache wicket wicketruntimeexception
import org apache wicket markup componenttag
import org apache wicket markup html webmarkupcontainer
import org apache wicket model imodel
import org apache wicket util lang objects
/**
* component representing a single radio choice in a
* org.apache.wicket.markup.html.form.radiogroup.
*
* must be attached to an &lt;input type=&quot;radio&quot; ... &gt; markup.
*
* @see org.apache.wicket.markup.html.form.radiogroup
*
* @author igor vaynberg (ivaynberg@users.sf.net)
* @author sven meier (svenmeier)
*
*/
public class radio extends webmarkupcontainer
private static final string attr_disabled
/**
*
*/
private static final long serialversionuid   1l
/**
* page-scoped uuid of this check. this property must not be accessed
* directly, instead {@link #getvalue()} must be used
*/
private short uuid    1
/**
* @see webmarkupcontainer#webmarkupcontainer(string)
*/
public radio string id
super id
/**
* @see webmarkupcontainer#webmarkupcontainer(string, imodel)
*/
public radio string id  imodel model
super id  model
/**
* form submission value used for this radio component. this string will
* appear as the value of the <code>value</code> html attribute for the
* <code>input</code> tag.
*
* @return form submission value
*/
public final string getvalue
if  uuid < 0
uuid   getpage   getautoindex
return     uuid
/**
* @see component#oncomponenttag(componenttag)
* @param tag
*            the abstraction representing html tag of this component
*/
protected void oncomponenttag final componenttag tag
// default handling for component tag
super oncomponenttag tag
// must be attached to <input type="radio" .../> tag
checkcomponenttag tag
checkcomponenttagattribute tag
final string value   getvalue
radiogroup group    radiogroup findparent radiogroup class
if  group    null
throw new wicketruntimeexception
getpath
// assign name and value
tag put    group getinputname
tag put    value
// compare the model objects of the group and self, if the same add the
// checked attribute, first check if there was a raw input on the group.
if  group hasrawinput
string rawinput   group getrawinput
if  rawinput    null    rawinput equals value
tag put
else if  objects equal group getmodelobject    getmodelobject
tag put
if  group wantonselectionchangednotifications
// url that points to this components ionchangelistener method
final charsequence url   group urlfor ionchangelistener interface
form form    form group findparent form class
if  form    null
tag put    form getjsforinterfaceurl url
else
// note: do not encode the url as that would give invalid
// javascript
tag put        url       group getinputname
if   isactionauthorized enable      isenabled       group isenabled
tag put attr_disabled  attr_disabled