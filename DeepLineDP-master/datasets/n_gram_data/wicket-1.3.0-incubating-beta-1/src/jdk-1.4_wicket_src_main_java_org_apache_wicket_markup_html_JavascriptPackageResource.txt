/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html
import java io bytearrayinputstream
import java io bytearrayoutputstream
import java io ioexception
import java io inputstream
import java lang ref softreference
import java util locale
import org apache commons logging log
import org apache commons logging logfactory
import org apache wicket application
import org apache wicket sharedresources
import org apache wicket util io streams
import org apache wicket util resource iresourcestream
import org apache wicket util resource resourcestreamnotfoundexception
import org apache wicket util string javascriptstripper
import org apache wicket util time time
/**
* package resource for javascript files. it strips comments and whitespaces
* from javascript and gzips the content. the stripped and gzipped version is
* cached.
*
* @author matej knopp
*/
public class javascriptpackageresource extends compressedpackageresource
/**
* resource stream that caches the stripped content.
*
* @author matej knopp
*/
protected abstract class filteringresourcestream implements iresourcestream
private static final long serialversionuid   1l
/** cache for compressed data */
private softreference cache   new softreference null
/** timestamp of the cache */
private time timestamp   null
/**
* @see org.apache.wicket.util.resource.iresourcestream#close()
*/
public void close   throws ioexception
/**
* @see org.apache.wicket.util.resource.iresourcestream#getcontenttype()
*/
public string getcontenttype
return getoriginalresourcestream   getcontenttype
/**
* @see org.apache.wicket.util.resource.iresourcestream#getinputstream()
*/
public inputstream getinputstream   throws resourcestreamnotfoundexception
return new bytearrayinputstream getfilteredcontent
/**
* @see org.apache.wicket.util.resource.iresourcestream#getlocale()
*/
public locale getlocale
return getoriginalresourcestream   getlocale
/**
* @see org.apache.wicket.util.watch.imodifiable#lastmodifiedtime()
*/
public time lastmodifiedtime
return getoriginalresourcestream   lastmodifiedtime
/**
* @see org.apache.wicket.util.resource.iresourcestream#length()
*/
public long length
return getfilteredcontent   length
/**
* @see org.apache.wicket.util.resource.iresourcestream#setlocale(java.util.locale)
*/
public void setlocale locale locale
getoriginalresourcestream   setlocale locale
/**
* @return compressed content
*/
private byte getfilteredcontent
iresourcestream stream   getoriginalresourcestream
try
byte ret    byte cache get
if  ret    null    timestamp    null
if  timestamp equals stream lastmodifiedtime
return ret
int length    int stream length
bytearrayoutputstream out   new bytearrayoutputstream length > 0 ? length   0
streams copy stream getinputstream    out
stream close
ret   filtercontent out tobytearray
timestamp   stream lastmodifiedtime
cache   new softreference ret
return ret
catch  ioexception e
throw new runtimeexception e
catch  resourcestreamnotfoundexception e
throw new runtimeexception e
protected abstract byte filtercontent byte input
protected abstract iresourcestream getoriginalresourcestream
private static final long serialversionuid   1l
private static final log log   logfactory getlog javascriptpackageresource class
/**
* gets the resource for a given set of criteria. only one resource will be
* loaded for the same criteria.
*
* @param scope
*            this argument will be used to get the class loader for loading
*            the package resource, and to determine what package it is in.
*            typically this is the class in which you call this method
* @param path
*            the path to the resource
* @param locale
*            the locale of the resource
* @param style
*            the style of the resource (see {@link org.apache.wicket.session})
* @return the resource
* @throws packageresourceblockedexception
*             when the target resource is not accepted by
*             {@link ipackageresourceguard the package resource guard}.
*/
public static packageresource get final class scope  final string path  final locale locale
final string style
final sharedresources sharedresources   application get   getsharedresources
packageresource resource    packageresource sharedresources get scope  path  locale  style
true
if  resource    null
resource   new javascriptpackageresource scope  path  locale  style
sharedresources add scope  path  locale  style  resource
return resource
/**
* creates a new javascript package resource.
*
* @param scope
* @param path
* @param locale
* @param style
*/
public javascriptpackageresource class scope  string path  locale locale  string style
super scope  path  locale  style
/**
* @see org.apache.wicket.markup.html.compressedpackageresource#newresourcestream()
*/
protected iresourcestream newresourcestream
final filteringresourcestream filteringstream   new filteringresourcestream
private static final long serialversionuid   1l
protected byte filtercontent byte input
try
if  application get   getresourcesettings
getstripjavascriptcommentsandwhitespace
string s   new string input
return javascriptstripper stripcommentsandwhitespace s  getbytes
else
// don't strip the comments, just return original input
return input
catch  exception e
log error    e
return input
protected iresourcestream getoriginalresourcestream
return getpackageresourcestream
return new compressingresourcestream
private static final long serialversionuid   1l
protected iresourcestream getoriginalresourcestream
return filteringstream