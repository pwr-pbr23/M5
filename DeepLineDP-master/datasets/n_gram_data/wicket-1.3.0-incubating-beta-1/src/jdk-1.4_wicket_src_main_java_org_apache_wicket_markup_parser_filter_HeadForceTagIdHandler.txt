/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup parser filter
import java text parseexception
import org apache wicket markup componenttag
import org apache wicket markup markupelement
import org apache wicket markup wickettag
import org apache wicket markup parser abstractmarkupfilter
import org apache wicket util string appendingstringbuffer
/**
* handler that sets unique tag id for every inline script and style element in
* &lt;wicket:head&gt;, unless the element already has one. <br/> this is needed
* to be able to dedect multiple ajax header contribution. tags that are not
* inline (stript with src attribute set and link with href attribute set) do
* not require id, because the detection is done by comparing urls.
* <p>
* tags with wicket:id are <strong>not processed</strong>. to
* setoutputwicketid(true) on attached component is developer's responsibility.
* fixme: really? and if so, document properly
*
* @author matej knopp
*/
public class headforcetagidhandler extends abstractmarkupfilter
/** common prefix for all id's generated by this filter */
private final string headelementidprefix
/** unique value per markup file */
private int counter   0
/** we are in wicket:head */
private boolean inhead   false
/**
* construct.
*
* @param parent
* @param markupfileclass used to generated the a common prefix for the id
*/
public headforcetagidhandler final class markupfileclass
// generate the prefix from class name
final appendingstringbuffer buffer   new appendingstringbuffer markupfileclass getname
for  int i   0  i < buffer getvalue   length    i
if  character isletterordigit buffer getvalue       false
buffer getvalue
buffer append
this headelementidprefix   buffer tostring
/**
* @see org.apache.wicket.markup.parser.imarkupfilter#nexttag()
*/
public markupelement nexttag   throws parseexception
final componenttag tag    componenttag getparent   nexttag
if  tag    null
// is it a <wicket:head> tag?
if  tag instanceof wickettag      wickettag tag  isheadtag
this inhead   tag isopen
// no, it's not. are we in <wicket:head> ?
else if  this inhead    true
// is the tag open and has empty wicket:id?
if   tag instanceof wickettag    false      tag getid      null
tag isopen      tag isopenclose       needid tag
if  tag getattributes   get       null
tag getattributes   put    headelementidprefix   nextvalue
tag setmodified true
return tag
/**
*
* @param tag
* @return true, if id is needed
*/
private final boolean needid final componenttag tag
final string name   tag getname   tolowercase
if  name equals       tag getattributes   containskey       false
return true
else if  name equals       tag getattributes   containskey       false
return true
return false
/**
*
* @return the next value
*/
private final int nextvalue
return counter