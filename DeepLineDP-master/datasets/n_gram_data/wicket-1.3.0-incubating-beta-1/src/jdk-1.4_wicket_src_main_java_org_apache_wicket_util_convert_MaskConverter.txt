/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util convert
import java text parseexception
import java util locale
import javax swing text maskformatter
import org apache wicket component
import org apache wicket wicketruntimeexception
/**
* a converter that takes a mask into account. it is specifically meant for
* overrides on individual components, that provide their own converter by
* returning it from {@link component#getconverter(class)}. it uses an instance
* of {@link maskformatter} to delegate the masking and unmasking to.
* <p>
* the following characters can be specified (adopted from the maskformatter
* documentation):
*
* <table border=1 summary="valid characters and their descriptions">
* <tr>
* <th>character&nbsp;</th>
* <th>
* <p align="left">
* description
* </p>
* </th>
* </tr>
* <tr>
* <td>#</td>
* <td>any valid number, uses <code>character.isdigit</code>.</td>
* </tr>
* <tr>
* <td>'</td>
* <td>escape character, used to escape any of the special formatting
* characters.</td>
* </tr>
* <tr>
* <td>u</td>
* <td>any character (<code>character.isletter</code>). all lowercase
* letters are mapped to upper case.</td>
* </tr>
* <tr>
* <td>l</td>
* <td>any character (<code>character.isletter</code>). all upper case
* letters are mapped to lower case.</td>
* </tr>
* <tr>
* <td>a</td>
* <td>any character or number (<code>character.isletter</code> or
* <code>character.isdigit</code>)</td>
* </tr>
* <tr>
* <td>?</td>
* <td>any character (<code>character.isletter</code>).</td>
* </tr>
* <tr>
* <td>*</td>
* <td>anything.</td>
* </tr>
* <tr>
* <td>h</td>
* <td>any hex character (0-9, a-f or a-f).</td>
* </tr>
* </table>
*
* <p>
* typically characters correspond to one char, but in certain languages this is
* not the case. the mask is on a per character basis, and will thus adjust to
* fit as many chars as are needed.
* </p>
*
* @see maskformatter
*
* @author eelco hillenius
*/
public class maskconverter implements iconverter
private static final long serialversionuid   1l
/** object that knows all about masks. */
private final maskformatter maskformatter
/**
* construct.
*
* @param maskformatter
*            the mask formatter to use for masking and unmasking values
*/
public maskconverter maskformatter maskformatter
if  maskformatter    null
throw new illegalargumentexception
this maskformatter   maskformatter
/**
* construct; converts to strings.
*
* @param mask
*            the mask to use for this converter instance
* @see maskformatter
*/
public maskconverter string mask
this mask  string class
/**
* construct.
*
* @param mask
*            the mask to use for this converter instance
* @param type
*            the type to convert string values to.
* @see maskformatter
*/
public maskconverter string mask  class   <?>   type
try
maskformatter   new maskformatter mask
maskformatter setvalueclass type
maskformatter setallowsinvalid true
maskformatter setvaluecontainsliteralcharacters true
catch  parseexception e
throw new wicketruntimeexception e
/**
* converts a string to an object using
* {@link maskformatter#stringtovalue(string)}.
*
* @see org.apache.wicket.util.convert.iconverter#converttoobject(java.lang.string,
*      locale)
*/
public object converttoobject string value  locale locale
try
return maskformatter stringtovalue value
catch  parseexception e
throw new conversionexception e
/**
* converts the value to a string using
* {@link maskformatter#valuetostring(object)}.
*
* @see org.apache.wicket.util.convert.iconverter#converttostring(java.lang.object,
*      locale)
*/
public string converttostring object value  locale locale
try
return maskformatter valuetostring value
catch  parseexception e
throw new conversionexception e