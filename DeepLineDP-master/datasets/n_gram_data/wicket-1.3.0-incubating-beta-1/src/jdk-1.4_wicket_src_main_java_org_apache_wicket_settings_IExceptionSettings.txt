/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket settings
import org apache wicket util lang enumeratedtype
/**
* settings interface for configuring exception handling related settings.
* <p>
* <i>unexpectedexceptiondisplay </i> (defaults to show_exception_page) -
* determines how exceptions are displayed to the developer or user
* <p>
* <i>throwexceptiononmissingresource </i> (defaults to true) - set to true to
* throw a runtime exception if a required string resource is not found. set to
* false to return the requested resource key surrounded by pairs of question
* mark characters (e.g. "??missingkey??")
*
* @author igor vaynberg (ivaynberg)
*/
public interface iexceptionsettings
/**
* enumerated type for different ways of displaying unexpected exceptions.
*/
public static final class unexpectedexceptiondisplay extends enumeratedtype
private static final long serialversionuid   1l
unexpectedexceptiondisplay final string name
super name
/**
* indicates that an exception page appropriate to development should be
* shown when an unexpected exception is thrown.
*/
public static final unexpectedexceptiondisplay show_exception_page   new unexpectedexceptiondisplay
/**
* indicates a generic internal error page should be shown when an
* unexpected exception is thrown.
*/
public static final unexpectedexceptiondisplay show_internal_error_page   new unexpectedexceptiondisplay
/**
* indicates that no exception page should be shown when an unexpected
* exception is thrown.
*/
public static final unexpectedexceptiondisplay show_no_exception_page   new unexpectedexceptiondisplay
/**
* @return whether to throw an exception when a missing resource is
*         requested
* @deprecated use
*             {@link iresourcesettings#getthrowexceptiononmissingresource()}
*             instead
*/
boolean getthrowexceptiononmissingresource
/**
* @return returns the unexpectedexceptiondisplay.
*/
unexpectedexceptiondisplay getunexpectedexceptiondisplay
/**
* @param throwexceptiononmissingresource
*            whether to throw an exception when a missing resource is
*            requested
* @deprecated use
*             {@link iresourcesettings#setthrowexceptiononmissingresource(boolean)}
*             instead
*/
void setthrowexceptiononmissingresource final boolean throwexceptiononmissingresource
/**
* the exception display type determines how the framework displays
* exceptions to you as a developer or user.
* <p>
* the default value for exception display type is show_exception_page. when
* this value is set and an unhandled runtime exception is thrown by a page,
* a redirect to a helpful exception display page will occur.
* <p>
* this is a developer feature, however, and you may want to instead show an
* internal error page without developer details that allows a user to start
* over at the application's home page. this can be accomplished by setting
* the exception display type to show_internal_error_page.
* <p>
* finally, if you are having trouble with the exception display pages
* themselves, you can disable exception displaying entirely with the value
* show_no_exception_page. this will cause the framework to re-throw any
* unhandled runtime exceptions after wrapping them in a servletexception
* wrapper.
*
* @param unexpectedexceptiondisplay
*            the unexpectedexceptiondisplay to set.
*/
void setunexpectedexceptiondisplay unexpectedexceptiondisplay unexpectedexceptiondisplay