/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket ajax markup html navigation paging
import org apache wicket component
import org apache wicket markupcontainer
import org apache wicket ajax ajaxrequesttarget
import org apache wicket markup html link link
import org apache wicket markup html list listview
import org apache wicket markup html navigation paging ipageable
import org apache wicket markup html navigation paging ipaginglabelprovider
import org apache wicket markup html navigation paging pagingnavigation
import org apache wicket markup html navigation paging pagingnavigator
import org apache wicket markup repeater abstractrepeater
/**
* a wicket panel component to draw and maintain a complete page navigator,
* meant to be easily added to any pageablelistview. a navigation which contains
* links to the first and last page, the current page +- some increment and
* which supports paged navigation bars (@see
* pageablelistviewnavigationwithmargin).
* <p>
* <strong>note</strong> to use the, you <i>have</i> to put your listview in a
* webmarkupcontainer, otherwise it is not possible to update the contents of
* the listview using ajax.
*
* @since 1.2
*
* @author martijn dashorst
*/
public class ajaxpagingnavigator extends pagingnavigator
private static final long serialversionuid   1l
/** the pageable component that needs to be updated. */
private ipageable pageable
/**
* constructor.
*
* @param id
*            see component
* @param pageable
*            the pageable component the page links are referring to.
*/
public ajaxpagingnavigator final string id  final ipageable pageable
this id  pageable  null
/**
* constructor.
*
* @param id
*            see component
* @param pageable
*            the pageable component the page links are referring to.
* @param labelprovider
*            the label provider for the link text.
*/
public ajaxpagingnavigator final string id  final ipageable pageable
final ipaginglabelprovider labelprovider
super id  pageable  labelprovider
this pageable   pageable
setoutputmarkupid true
/**
* create a new increment link. may be subclassed to make use of specialized
* links, e.g. ajaxian links.
*
* @param id
*            the link id
* @param pageable
*            the pageable to control
* @param increment
*            the increment
* @return the increment link
*/
protected link newpagingnavigationincrementlink string id  ipageable pageable  int increment
return new ajaxpagingnavigationincrementlink id  pageable  increment
/**
* create a new pagenumber link. may be subclassed to make use of
* specialized links, e.g. ajaxian links.
*
* @param id
*            the link id
* @param pageable
*            the pageable to control
* @param pagenumber
*            the page to jump to
* @return the pagenumber link
*/
protected link newpagingnavigationlink string id  ipageable pageable  int pagenumber
return new ajaxpagingnavigationlink id  pageable  pagenumber
/**
* create a new pagingnavigation. may be subclassed to make us of
* specialized pagingnavigation.
*
* @param pageable
*            the pageable component
* @param labelprovider
*            the label provider for the link text.
* @return the navigation object
*/
protected pagingnavigation newnavigation final ipageable pageable
final ipaginglabelprovider labelprovider
return new ajaxpagingnavigation    pageable  labelprovider
/**
* override this method to specify the markup container where your ipageable
* is part of. this implementation is a default implementation that tries to
* find a parent markup container and update that container. this is
* necessary as listviews can't be updated themselves.
*
* @param target
*            the request target to add the components that need to be
*            updated in the ajax event.
*/
protected void onajaxevent ajaxrequesttarget target
// update the container (parent) of the pageable, this assumes that
// the pageable is a component, and that it is a child of a web
// markup container.
component container     component pageable
// no need for a nullcheck as there is bound to be a non-repeater
// somewhere higher in the hierarchy
while  container instanceof abstractrepeater
container   container getparent
target addcomponent container
// in case the navigator is not contained by the container, we have
// to add it to the response
if    markupcontainer container  contains this  true     false
target addcomponent this