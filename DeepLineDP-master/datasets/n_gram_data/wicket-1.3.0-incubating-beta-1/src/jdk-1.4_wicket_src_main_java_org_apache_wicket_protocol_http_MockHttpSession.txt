/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket protocol http
import java io serializable
import java rmi server uid
import java util collections
import java util enumeration
import javax servlet servletcontext
import javax servlet http httpsession
import org apache wicket util value valuemap
/**
* mock implementation of the <code>websession</code> interface for use by the
* test harnesses.
*
* @author chris turner
*/
public class mockhttpsession implements httpsession  serializable
private static final long serialversionuid   1l
private final valuemap attributes   new valuemap
private final servletcontext context
private final long creationtime   system currenttimemillis
private final string id    new uid    tostring
private long lastaccessedtime   0
/**
* create the session.
*
* @param context
*/
public mockhttpsession final servletcontext context
this context   context
/**
* get the attribute with the given name.
*
* @param name
*            the attribute name
* @return the value or null
*/
public object getattribute final string name
return attributes get name
/**
* get the names of the attributes in the session.
*
* @return the attribute names
*/
public enumeration getattributenames
return collections enumeration attributes keyset
/**
* get the creation time of the session.
*
* @return the creation time
*/
public long getcreationtime
return creationtime
/**
* return the id of this session.
*
* @return the id
*/
public string getid
return id
/**
* get the time the session was last accessed.
*
* @return the last accessed time
*/
public long getlastaccessedtime
return lastaccessedtime
/**
* not used. sessions never expire in the test harness.
*
* @return always returns 0
*/
public int getmaxinactiveinterval
return 0
/**
* return the servlet context for the session.
*
* @return the servlet context
*/
public servletcontext getservletcontext
return context
/**
* not used.
*
* @return always null
* @deprecated
*/
public javax servlet http httpsessioncontext getsessioncontext
return null
/**
* get the value for the given name.
*
* @param name
*            the name
* @return the value or null
* @deprecated use getattribute(string) instead
*/
public object getvalue final string name
return getattribute name
/**
* get the names of the values in the session.
*
* @return the names of the attributes
* @deprecated use getattributenames() instead
*/
public string getvaluenames
string result   new string
return  string attributes keyset   toarray result
/**
* invalidate the session.
*/
public void invalidate
attributes clear
/**
* check if the session is new.
*
* @return always false
*/
public boolean isnew
return false
/**
* set a value.
*
* @param name
*            the name of the value
* @param o
*            the value
* @deprecated use setattribute(string, object) instead
*/
public void putvalue final string name  final object o
setattribute name  o
/**
* remove an attribute.
*
* @param name
*            the name of the attribute
*/
public void removeattribute final string name
attributes remove name
/**
* remove a value.
*
* @param name
*            the name of the value
* @deprecated use removeattribute(string) instead
*/
public void removevalue string name
removeattribute name
/**
* set an attribute.
*
* @param name
*            the name of the attribute to set
* @param o
*            the value to set
*/
public void setattribute final string name  final object o
attributes put name  o
/**
* not used. sessions never expire in the test harness.
*
* @param i
*            the value
*/
public void setmaxinactiveinterval final int i
/**
* set the last accessed time for the session.
*/
public void timestamp
lastaccessedtime   system currenttimemillis