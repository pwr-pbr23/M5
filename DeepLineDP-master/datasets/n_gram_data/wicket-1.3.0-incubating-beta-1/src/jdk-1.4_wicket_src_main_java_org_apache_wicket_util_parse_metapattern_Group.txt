/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util parse metapattern
import java util regex matcher
/**
* a group is a piece of a regular expression (referenced by some java field or
* local variable) that forms a "capturing group" within the larger regular
* expression. a group is bound to a regular expression metapattern when a
* matcher is retrieved for the pattern by calling one of the matcher() methods.
* once bound, a group cannot be rebound.
*
* @author jonathan locke
*/
public class group extends metapattern
private static final long serialversionuid   1l
/** the capturing group that this group is bound to. */
private int group    1
/**
* constructor.
*
* @param pattern
*            metapattern to capture
*/
public group final metapattern pattern
super pattern
/**
* threadsafe method to retrieve contents of this captured group.
*
* @param matcher
*            the matcher from which to retrieve this group's group
* @return the captured characters
*/
public final string get final matcher matcher
if  group     1
throw new groupnotboundexception
return matcher group group
/**
* @see java.lang.object#tostring()
*/
public string tostring
return     super tostring
/**
* binds this capture expression if not already bound.
*
* @param bindto
*            the group to bind to
* @throws groupalreadyboundexception
*             thrown if this group is already bound
*/
final void bind final int bindto
if  this group     1
this group   bindto
else
throw new groupalreadyboundexception