/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket protocol http
import java io bytearrayoutputstream
import java io ioexception
import java io outputstream
import java io outputstreamwriter
import java io printwriter
import java util arraylist
import java util hashmap
import java util iterator
import java util list
import java util locale
import java util map
import javax servlet servletoutputstream
import javax servlet http cookie
import javax servlet http httpservletresponse
import org apache wicket response
import org apache wicket wicketruntimeexception
import org apache wicket util io stringbufferwriter
import org apache wicket util string appendingstringbuffer
/**
* implementation of {@link httpservletresponse} that saves the output in a
* string buffer. this is used in redirect_to_buffer render strategy to create
* the buffer of the output that can be held on to until the redirect part of
* the render strategy.
*
* @author jcompagner
*/
class bufferedhttpservletresponse implements httpservletresponse
/** the print writer for the response */
private stringbufferwriter sbw   new stringbufferwriter
private printwriter pw   new printwriter sbw
/** cookies list */
private list cookies
/** status code */
private int status    1
/** headers map */
private map headers
/** the real response for encoding the url */
private httpservletresponse realresponse
private string redirect
private string contenttype
private byte bytebuffer
private locale locale
private string encoding
/**
* constructor.
*
* @param realresponse
*            the real response for encoding the url
*/
public bufferedhttpservletresponse httpservletresponse realresponse
this realresponse   realresponse
/**
* @see javax.servlet.http.httpservletresponse#addcookie(javax.servlet.http.cookie)
*/
public void addcookie cookie cookie
isopen
if  cookies    null
cookies   new arraylist 2
cookies add cookie
/**
* @see javax.servlet.http.httpservletresponse#containsheader(java.lang.string)
*/
public boolean containsheader string name
isopen
if  headers    null
return false
return headers containskey name
/**
* @see javax.servlet.http.httpservletresponse#encodeurl(java.lang.string)
*/
public string encodeurl string url
isopen
return realresponse encodeurl url
/**
* @see javax.servlet.http.httpservletresponse#encoderedirecturl(java.lang.string)
*/
public string encoderedirecturl string url
isopen
return realresponse encoderedirecturl url
/**
* @see javax.servlet.http.httpservletresponse#encodeurl(java.lang.string)
* @deprecated
*/
public string encodeurl string url
isopen
return realresponse encodeurl url
/**
* @see javax.servlet.http.httpservletresponse#encoderedirecturl(java.lang.string)
* @deprecated
*/
public string encoderedirecturl string url
isopen
return realresponse encoderedirecturl url
/**
* @see javax.servlet.http.httpservletresponse#senderror(int,
*      java.lang.string)
*/
public void senderror int sc  string msg  throws ioexception
isopen
realresponse senderror sc  msg
/**
* @see javax.servlet.http.httpservletresponse#senderror(int)
*/
public void senderror int sc  throws ioexception
isopen
realresponse senderror sc
/**
* @see javax.servlet.http.httpservletresponse#sendredirect(java.lang.string)
*/
public void sendredirect string location  throws ioexception
isopen
this redirect   location
/**
* @return the redirect url
*/
public string getredirecturl
isopen
return redirect
private void testandcreateheaders
isopen
if  headers    null
headers   new hashmap
private void isopen
if  realresponse    null
throw new wicketruntimeexception
private void addheaderobject string name  object object
object previousobject   headers get name
if  previousobject    null
headers put name  object
else if  previousobject instanceof list
list previousobject  add object
else
arraylist list   new arraylist
list add previousobject
list add object
headers put name  list
/**
* @see javax.servlet.http.httpservletresponse#setdateheader(java.lang.string,
*      long)
*/
public void setdateheader string name  long date
testandcreateheaders
headers put name  new long date
/**
* @see javax.servlet.http.httpservletresponse#adddateheader(java.lang.string,
*      long)
*/
public void adddateheader string name  long date
testandcreateheaders
addheaderobject name  new long date
/**
* @see javax.servlet.http.httpservletresponse#setheader(java.lang.string,
*      java.lang.string)
*/
public void setheader string name  string value
testandcreateheaders
headers put name  value
/**
* @see javax.servlet.http.httpservletresponse#addheader(java.lang.string,
*      java.lang.string)
*/
public void addheader string name  string value
testandcreateheaders
addheaderobject name  value
/**
* @see javax.servlet.http.httpservletresponse#setintheader(java.lang.string,
*      int)
*/
public void setintheader string name  int value
testandcreateheaders
headers put name  new integer value
/**
* @see javax.servlet.http.httpservletresponse#addintheader(java.lang.string,
*      int)
*/
public void addintheader string name  int value
testandcreateheaders
addheaderobject name  new integer value
/**
* @see javax.servlet.http.httpservletresponse#setstatus(int)
*/
public void setstatus int statuscode
status   statuscode
/**
* @see javax.servlet.http.httpservletresponse#setstatus(int,
*      java.lang.string)
* @deprecated use setstatus(int) instead
*/
public void setstatus int sc  string sm
throw new unsupportedoperationexception
/**
* @see javax.servlet.servletresponse#getcharacterencoding()
*/
public string getcharacterencoding
isopen
return encoding
/**
* set the charackter encoding to use for the output.
*
* @param encoding
*/
public void setcharacterencoding string encoding
this encoding   encoding
/**
* @see javax.servlet.servletresponse#getoutputstream()
*/
public servletoutputstream getoutputstream   throws ioexception
throw new unsupportedoperationexception
/**
* @see javax.servlet.servletresponse#getwriter()
*/
public printwriter getwriter   throws ioexception
isopen
return pw
/**
* @see javax.servlet.servletresponse#setcontentlength(int)
*/
public void setcontentlength int len
isopen
// ignored will be calculated when the buffer is really streamed.
/**
* @see javax.servlet.servletresponse#setcontenttype(java.lang.string)
*/
public void setcontenttype string type
isopen
this contenttype   type
/**
* @see javax.servlet.servletresponse#setbuffersize(int)
*/
public void setbuffersize int size
isopen
// ignored every thing will be buffered
/**
* @see javax.servlet.servletresponse#getbuffersize()
*/
public int getbuffersize
isopen
return integer max_value
/**
* @see javax.servlet.servletresponse#flushbuffer()
*/
public void flushbuffer   throws ioexception
isopen
/**
* @see javax.servlet.servletresponse#resetbuffer()
*/
public void resetbuffer
isopen
sbw reset
/**
* @see javax.servlet.servletresponse#iscommitted()
*/
public boolean iscommitted
return pw    null
/**
* @see javax.servlet.servletresponse#reset()
*/
public void reset
resetbuffer
headers   null
cookies   null
/**
* @see javax.servlet.servletresponse#setlocale(java.util.locale)
*/
public void setlocale locale loc
isopen
this locale   loc
/**
* @see javax.servlet.servletresponse#getlocale()
*/
public locale getlocale
isopen
if  this locale    null
return realresponse getlocale
return this locale
/**
* @return the length of the complete string buffer
*/
public int getcontentlength
isopen
return sbw getstringbuffer   length
/**
* this method is not part of the wicket public api.
*
* @param response
*/
public final void filter response response
isopen
appendingstringbuffer buffer   sbw getstringbuffer
if  redirect    null    buffer length      0
buffer   response filter buffer
sbw setstringbuffer buffer
/**
*
*/
public void close
isopen
this pw close
this bytebuffer   converttocharset sbw getstringbuffer    getcharacterencoding
this pw   null
this sbw   null
this realresponse   null
/**
* convert the string into the output encoding required
*
* @param output
*
* @param encoding
*            the output encoding
* @return byte[] the encoded characters converted into bytes
*/
private static byte converttocharset final appendingstringbuffer output  final string encoding
if  encoding    null
throw new wicketruntimeexception
final bytearrayoutputstream baos   new bytearrayoutputstream  int  output length     1 2
final outputstreamwriter osw
final byte bytes
try
osw   new outputstreamwriter baos  encoding
osw write output getvalue    0  output length
osw close
bytes   baos tobytearray
catch  exception ex
throw new wicketruntimeexception     encoding  ex
return bytes
/**
* @param servletresponse
* @throws ioexception
*/
public void writeto httpservletresponse servletresponse  throws ioexception
if  status     1
servletresponse setstatus status
if  headers    null
iterator it   headers entryset   iterator
while  it hasnext
map entry entry    map entry it next
string name    string entry getkey
object value   entry getvalue
if  value instanceof list
list lst    list value
for  int i   0  i < lst size    i
addheader name  lst get i   servletresponse
else
setheader name  value  servletresponse
if  cookies    null
for  int i   0  i < this cookies size    i
cookie cookie    cookie this cookies get i
servletresponse addcookie cookie
if  locale    null
servletresponse setlocale locale
// got a buffered response; now write it
servletresponse setcontentlength this bytebuffer length
servletresponse setcontenttype this contenttype
final outputstream out   servletresponse getoutputstream
out write this bytebuffer
out close
/**
* @param name
*            name of the header to set
* @param value
*            the value can be string/long/int
* @param servletresponse
*            the response to set it to.
*/
private static void setheader string name  object value  httpservletresponse servletresponse
if  value instanceof string
servletresponse setheader name   string value
else if  value instanceof long
servletresponse setdateheader name    long value  longvalue
else if  value instanceof integer
servletresponse setintheader name    integer value  intvalue
/**
* @param name
*            name of the header to set
* @param value
*            the value can be string/long/int
* @param servletresponse
*            the response to set it to.
*/
private static void addheader string name  object value  httpservletresponse servletresponse
if  value instanceof string
servletresponse addheader name   string value
else if  value instanceof long
servletresponse adddateheader name    long value  longvalue
else if  value instanceof integer
servletresponse addintheader name    integer value  intvalue