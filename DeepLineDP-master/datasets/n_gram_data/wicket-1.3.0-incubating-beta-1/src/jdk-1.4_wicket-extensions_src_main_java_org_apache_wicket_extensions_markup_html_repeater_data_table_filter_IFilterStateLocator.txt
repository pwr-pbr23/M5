/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket extensions markup html repeater data table filter
import org apache wicket iclusterable
/**
* locator that locates the object that represents the state of the filter.
* usually it is convinient to let the data provider object implement this
* interface so that the data provider can be itself used to locate the filter
* state object. this also makes it easy for the data provider to locate the
* filter state which it will most likely need to filter the data.
* <p>
* example
*
* <pre>
*    class userdataprovider extends sortabledataprovider implements ifilterstatelocator {
*      private user filterbean=new user;
*
*      public getfilterstate() { return filterbean; }
*      public setfilterstate(object o) { filterbean=(user)o; }
*
*      public iterator iterate(int start, int count) {
*        getuserdao().find(start, count, filterbean);
*      }
*    }
* </pre>
*
*
* @author igor
*
*/
public interface ifilterstatelocator extends iclusterable
/**
* @return object that represents the state of the filter toolbar
*/
object getfilterstate
/**
* setter for the filter state object
*
* @param state
*            filter state object
*/
void setfilterstate object state