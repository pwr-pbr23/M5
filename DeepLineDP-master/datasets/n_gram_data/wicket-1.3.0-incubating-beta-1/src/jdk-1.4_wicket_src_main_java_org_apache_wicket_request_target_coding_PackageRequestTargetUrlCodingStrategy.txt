/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket request target coding
import org apache commons logging log
import org apache commons logging logfactory
import org apache wicket irequesttarget
import org apache wicket pageparameters
import org apache wicket session
import org apache wicket protocol http request webrequestcodingstrategy
import org apache wicket request requestparameters
import org apache wicket request target component bookmarkablepagerequesttarget
import org apache wicket request target component ibookmarkablepagerequesttarget
import org apache wicket util lang classes
import org apache wicket util lang packagename
import org apache wicket util string appendingstringbuffer
/**
* encodes and decodes mounts for a whole package.
*
* @author eelco hillenius
* @author igor vaynberg
*/
public class packagerequesttargeturlcodingstrategy extends abstractrequesttargeturlcodingstrategy
private static final log log   logfactory getlog packagerequesttargeturlcodingstrategy class
/** package for this mount. */
private final packagename packagename
/**
* construct.
*
* @param path
*            the mount path
* @param packagename
*            the name of the package to mount
*/
public packagerequesttargeturlcodingstrategy final string path  packagename packagename
super path
this packagename   packagename
/**
* @see org.apache.wicket.request.target.coding.irequesttargeturlcodingstrategy#decode(org.apache.wicket.request.requestparameters)
*/
public irequesttarget decode requestparameters requestparameters
log debug   requestparameters getpath
string remainder   requestparameters getpath   substring getmountpath   length
log debug   remainder
final string parametersfragment
int ix   remainder indexof    1
if  ix     1
ix   remainder length
parametersfragment
else
parametersfragment   remainder substring ix
if  remainder startswith
remainder   remainder substring 1
ix
else
// there is nothing after the mount path!
return null
log debug   remainder
log debug   parametersfragment
final string bookmarkablepageclassname   packagename       remainder substring 0  ix
class bookmarkablepageclass   session get   getclassresolver   resolveclass
bookmarkablepageclassname
pageparameters parameters   new pageparameters decodeparameters parametersfragment
requestparameters getparameters
final string pagemapname    string parameters remove webrequestcodingstrategy pagemap
requestparameters setpagemapname pagemapname
bookmarkablepagerequesttarget target   new bookmarkablepagerequesttarget pagemapname
bookmarkablepageclass  parameters
return target
/**
* @see org.apache.wicket.request.target.coding.irequesttargeturlcodingstrategy#encode(org.apache.wicket.irequesttarget)
*/
public final charsequence encode irequesttarget requesttarget
if    requesttarget instanceof ibookmarkablepagerequesttarget
throw new illegalargumentexception
ibookmarkablepagerequesttarget class getname
appendingstringbuffer url   new appendingstringbuffer 40
url append getmountpath
ibookmarkablepagerequesttarget target    ibookmarkablepagerequesttarget requesttarget
url append    append classes simplename target getpageclass
pageparameters pageparameters   target getpageparameters
if  target getpagemapname      null
pageparameters put webrequestcodingstrategy pagemap  target getpagemapname
appendparameters url  pageparameters
return url
/**
* @see org.apache.wicket.request.target.coding.irequesttargeturlcodingstrategy#matches(org.apache.wicket.irequesttarget)
*/
public boolean matches irequesttarget requesttarget
if  requesttarget instanceof ibookmarkablepagerequesttarget
ibookmarkablepagerequesttarget target    ibookmarkablepagerequesttarget requesttarget
if  packagename equals packagename forclass target getpageclass
return true
return false
/**
* @see java.lang.object#tostring()
*/
public string tostring
return     packagename