/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket injection web
import org apache wicket injection configurableinjector
/**
* holds a reference to the injector that will be used to automatically
* initialize components that are used. usually the application class should set
* the injector in the holder when it initializes.
* <p>
* this class can be used for unit-testing to switch the standard injector with
* an injector that will lookup dependencies from a mock application context.
* <p>
*
* <pre>
* class mockspringinjector extends springinjector
* {
* 	protected ispringcontextlocator getcontextlocator()
* 	{
* 		return new mockcontextlocator();
* 	}
* }
*
* injectorholder.setinjector(new mockspringinjector());
*
* //from this point on injectablewebpage and injectablepanel
* //will be injected using the mockspringinjector
* </pre>
*
* @author igor vaynberg (ivaynberg)
*
* todo shouldn't we move this class to org.apache.wicket.injection ?
*/
public class injectorholder
private static configurableinjector injector   null
/**
* gets an injector
*
* notice this method is not thread safe if setinjector() is used
*
* @return injector
*/
public static configurableinjector getinjector
if  injector    null
throw new illegalstateexception
return injector
/**
* sets an injector
*
* notice this method is not thread safe.
*
* @param newinjector
*            new injector
*/
public static void setinjector configurableinjector newinjector
injector   newinjector