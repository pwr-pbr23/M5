/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples ajax builtin tree
import javax swing tree treenode
import org apache wicket component
import org apache wicket markupcontainer
import org apache wicket markup html tree table columnlocation
import org apache wicket markup html tree table icolumn
import org apache wicket markup html tree table irenderable
import org apache wicket markup html tree table propertyrenderablecolumn
import org apache wicket model propertymodel
/**
* column, that either shows a readonly cell or an editable panel, depending on whether
* the current row is selected.
*
* @author matej knopp
*/
public class propertyeditablecolumn extends propertyrenderablecolumn
/**
* column constructor.
* @param location
* @param header
* @param propertyexpression
*/
public propertyeditablecolumn columnlocation location  string header  string propertyexpression
super location  header  propertyexpression
/**
* @see icolumn#newcell(markupcontainer, string, treenode, int)
*/
public component newcell markupcontainer parent  string id  treenode node  int level
return new editablepanel id  new propertymodel node  getpropertyexpression
/**
* @see icolumn#newcell(treenode, int)
*/
public irenderable newcell treenode node  int level
if  gettreetable   gettreestate   isnodeselected node
return null
else
return super newcell node  level