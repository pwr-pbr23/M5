/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket model
import org apache wicket component
import org apache wicket iclusterable
/**
* implementations of this interface compare model object.
* the component is given so that a developer can choose what the previous object is
* the default implementation for form components is just component.getmodelobject();
* but developers can choose to keep the last rendered value for that component and compare
* this value with the newobject. so that it doesn't overwrite values for an object that was
* changed by another session if the current session didn't touch that specific value.
*
* @author jcompagner
* @author jonathan locke
*/
public interface imodelcomparator extends iclusterable
/**
* @param component
*            the component which received the new object
* @param newobject
*            the newobject
* @return true if the previous components object is the same as the newobject.
*/
boolean compare component component  object newobject