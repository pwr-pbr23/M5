/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket request target coding
import org apache wicket component
import org apache wicket irequesttarget
import org apache wicket pageparameters
import org apache wicket wicketruntimeexception
import org apache wicket protocol http request webrequestcodingstrategy
import org apache wicket request requestparameters
import org apache wicket request target component bookmarkablelistenerinterfacerequesttarget
import org apache wicket request target component bookmarkablepagerequesttarget
import org apache wicket request target component ibookmarkablepagerequesttarget
import org apache wicket util string appendingstringbuffer
import org apache wicket util string strings
/**
* encodes and decodes mounts for a single bookmarkable page class.
*
* @author eelco hillenius
*/
public class bookmarkablepagerequesttargeturlcodingstrategy
extends
abstractrequesttargeturlcodingstrategy
/** bookmarkable page class. */
private final class bookmarkablepageclass
/** page map name. */
private final string pagemapname
/**
* construct.
*
* @param mountpath
*            the mount path
* @param bookmarkablepageclass
*            the class of the bookmarkable page
* @param pagemapname
*            the page map name if any
*/
public bookmarkablepagerequesttargeturlcodingstrategy final string mountpath
final class bookmarkablepageclass  string pagemapname
super mountpath
if  bookmarkablepageclass    null
throw new illegalargumentexception
this bookmarkablepageclass   bookmarkablepageclass
this pagemapname   pagemapname
/**
* @see org.apache.wicket.request.target.coding.irequesttargeturlcodingstrategy#decode(org.apache.wicket.request.requestparameters)
*/
public irequesttarget decode requestparameters requestparameters
final string parametersfragment   requestparameters getpath   substring
getmountpath   length
final pageparameters parameters   new pageparameters decodeparameters parametersfragment
requestparameters getparameters
string pagemapname    string parameters remove webrequestcodingstrategy pagemap
if  requestparameters getpagemapname      null
requestparameters setpagemapname pagemapname
else
pagemapname   requestparameters getpagemapname
final bookmarkablepagerequesttarget target
final string bookmarkableinterfacelistener    string parameters
remove webrequestcodingstrategy interface_parameter_name
// do the parameters contain component path and listener interface?
if  bookmarkableinterfacelistener    null
// todo check if the page already exists and reuse that?
// try to parse component path and listener interface
final string pathcomponents   strings split bookmarkableinterfacelistener
component path_separator
// there must be at least 4 path components
if  pathcomponents length < 4
throw new wicketruntimeexception
webrequestcodingstrategy interface_parameter_name
bookmarkableinterfacelistener
final string interfacename   pathcomponents
int start    pagemapname    null  ? pagemapname length     1   1
final string componentpath   bookmarkableinterfacelistener substring start
bookmarkableinterfacelistener length     interfacename length     2
target   new bookmarkablelistenerinterfacerequesttarget pagemapname
bookmarkablepageclass  parameters  componentpath  interfacename
else
target   new bookmarkablepagerequesttarget pagemapname  bookmarkablepageclass
parameters
return target
/**
* @see org.apache.wicket.request.target.coding.irequesttargeturlcodingstrategy#encode(org.apache.wicket.irequesttarget)
*/
public final charsequence encode final irequesttarget requesttarget
if    requesttarget instanceof ibookmarkablepagerequesttarget
throw new illegalargumentexception
ibookmarkablepagerequesttarget class getname
final appendingstringbuffer url   new appendingstringbuffer 40
url append getmountpath
final ibookmarkablepagerequesttarget target    ibookmarkablepagerequesttarget requesttarget
pageparameters pageparameters   target getpageparameters
string pagemap   pagemapname    null ? pagemapname   target getpagemapname
if  pagemap    null
if  pageparameters    null
pageparameters   new pageparameters
pageparameters put webrequestcodingstrategy pagemap  pagemap
appendparameters url  pageparameters
return url
/**
* @see org.apache.wicket.request.target.coding.irequesttargeturlcodingstrategy#matches(org.apache.wicket.irequesttarget)
*/
public boolean matches irequesttarget requesttarget
if  requesttarget instanceof ibookmarkablepagerequesttarget
ibookmarkablepagerequesttarget target    ibookmarkablepagerequesttarget requesttarget
if  bookmarkablepageclass equals target getpageclass
if  this pagemapname    null
return true
else
return this pagemapname equals target getpagemapname
return false
/**
* @see java.lang.object#tostring()
*/
public string tostring
return     bookmarkablepageclass