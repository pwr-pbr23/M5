/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html tree table
import javax swing tree treenode
import org apache wicket component
import org apache wicket markupcontainer
/**
* convenience class for building tree columns, i.e. columns that contain the
* actual tree.
*
* @author matej knopp
*/
public abstract class abstracttreecolumn extends abstractcolumn
/**
* creates new column. checks if the column is not aligned in middle. in
* case it is, throws an exception.
*
* @param location
*            specifies how the column should be aligned and what his size
*            should be
*
* @param header
*            header caption
*
*/
public abstracttreecolumn columnlocation location  string header
super location  header
/**
* @see icolumn#newcell(markupcontainer, string, treenode, int)
*/
public component newcell markupcontainer parent  string id  treenode node  int level
return treetable newtreecell parent  id  node  level  new treetable irendernodecallback
private static final long serialversionuid   1l
public string rendernode treenode node
return abstracttreecolumn this rendernode node
gettreetable
/**
* @see icolumn#newcell(treenode, int)
*/
public irenderable newcell treenode node  int level
return null
/**
* returns the string representation of the node.
*
* @param node
*            the node
* @return the string representation of the node
*/
public abstract string rendernode treenode node