/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket request target resource
import javax servlet http httpservletresponse
import org apache commons logging log
import org apache commons logging logfactory
import org apache wicket component
import org apache wicket irequesttarget
import org apache wicket page
import org apache wicket requestcycle
import org apache wicket requestlistenerinterface
import org apache wicket response
import org apache wicket wicketruntimeexception
import org apache wicket protocol http webresponse
/**
* an implemenation of irequesttarget that is used for the iresourcelistener
* event request.
*
* @author jcompagner
*/
public final class componentresourcerequesttarget implements irequesttarget
private static final log log   logfactory getlog componentresourcerequesttarget class
private final page page
private final component component
private final requestlistenerinterface listener
/**
* construct.
*
* @param page
* @param component
* @param listener
*/
public componentresourcerequesttarget page page  component component
requestlistenerinterface listener
this page   page
this component   component
this listener   listener
/**
* @see org.apache.wicket.irequesttarget#respond(org.apache.wicket.requestcycle)
*/
public void respond requestcycle requestcycle
try
// invoke the interface method on the component
listener getmethod   invoke component  new object
catch  exception e
response response   requestcycle getresponse
if  response instanceof webresponse
webresponse response  gethttpservletresponse   setstatus
httpservletresponse sc_internal_server_error
log error     component
page       listener getname
e getmessage    e
return
else
throw new wicketruntimeexception     listener getname
listener getmethod   getdeclaringclass
component      e
/**
* @see org.apache.wicket.irequesttarget#detach(org.apache.wicket.requestcycle)
*/
public void detach requestcycle requestcycle
page detach
/**
* @see java.lang.object#equals(java.lang.object)
*/
public boolean equals object obj
if  obj instanceof componentresourcerequesttarget
componentresourcerequesttarget that    componentresourcerequesttarget obj
return page equals that page     component equals that component
return false
/**
* @see java.lang.object#hashcode()
*/
public int hashcode
int result   getclass   hashcode
result    page hashcode
result    component hashcode
return 17   result
/**
* @see java.lang.object#tostring()
*/
public string tostring
stringbuffer b   new stringbuffer getclass   getname    append    append hashcode
append page  append    append component getid    append
return b tostring