/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket authorization strategies role annotations
import java lang annotation documented
import java lang annotation elementtype
import java lang annotation inherited
import java lang annotation retention
import java lang annotation retentionpolicy
import java lang annotation target
/**
* groups a set (technically an array) of {@link authorizeaction}s for
* authorization. this annotation works on a class level, and can be used like
* this:
*
* <pre>
* // a panel that is only visible for users with role admin
* &#64;authorizeaction(action = &quot;render&quot;, roles = { &quot;admin&quot;, &quot;user&quot; })
* public class foradminsandusers extends panel
* {
* 	public foradminsandusers(string id)
* 	{
* 		super(id);
* 	}
* }
* </pre>
*
* @see org.apache.wicket.authorization.iauthorizationstrategy
* @see org.apache.wicket.authorization.strategies.role.annotations.annotationsroleauthorizationstrategy
* @see org.apache.wicket.authorization.strategies.role.annotations.authorizeaction
* @see org.apache.wicket.authorization.strategies.role.annotations.authorizeinstantiation
* @author eelco hillenius
*/
@retention retentionpolicy runtime
@target    elementtype type
@documented
@inherited
public @interface authorizeactions
/**
* the actions that are allowed.
*
* @return the allowed actions
*/
authorizeaction actions