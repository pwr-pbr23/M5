/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket protocol http
import java util list
import org apache wicket application
import org apache wicket irequesttarget
import org apache wicket protocol http requestlogger sessiondata
import org apache wicket session isessionstore
/**
* interface for the request logger and viewer.
* @see application#setrequestlogger(irequestlogger)
*
* @author jcompagner
*/
public interface irequestlogger
/**
* @return the total created sessions counter
*/
public abstract int gettotalcreatedsessions
/**
* @return the peak sessions counter
*/
public abstract int getpeaksessions
/**
* this method returns a list of the current requests that are in mem.
* this is a readonly list.
*
* @return collection of the current requests
*/
public abstract list getrequests
/**
* @return collection of live sessions data
*/
public sessiondata getlivesessions
/**
* @return the current active requests
*/
public int getcurrentactiverequestcount
/**
* called when the session is created and has an id.
* (for http it means that the http session is created)
*
* @param id
*/
public abstract void sessioncreated string id
/**
* method used to cleanup a livesession when the session was
* invalidated by the webcontainer
*
* @param sessionid
*/
public abstract void sessiondestroyed string sessionid
/**
* this method is called when the request is over this will
* set the total time a request takes and cleans up the current
* request data.
*
* @param timetaken
*/
public abstract void requesttime long timetaken
/**
* called to monitor removals of objects out of the {@link isessionstore}
*
* @param value
*/
public abstract void objectremoved object value
/**
* called to monitor updates of objects in the {@link isessionstore}
*
* @param value
*/
public abstract void objectupdated object value
/**
* called to monitor additions of objects in the {@link isessionstore}
*
* @param value
*/
public abstract void objectcreated object value
/**
* sets the target that was the response target for the current request
*
* @param target
*/
public abstract void logresponsetarget irequesttarget target
/**
* sets the target that was the event target for the current request
*
* @param target
*/
public abstract void logeventtarget irequesttarget target