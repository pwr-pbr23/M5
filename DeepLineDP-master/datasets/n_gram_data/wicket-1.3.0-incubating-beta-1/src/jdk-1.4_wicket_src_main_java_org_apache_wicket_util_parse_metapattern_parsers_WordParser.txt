/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util parse metapattern parsers
import org apache wicket util parse metapattern group
import org apache wicket util parse metapattern metapattern
/**
* matches a 'word' surrounded by whitespace. see <a
* href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/regex/pattern.html">java.util.regex.pattern
* </a> for more details on what 'word' means.
*
* @author jonathan locke
*/
public final class wordparser extends metapatternparser
/**
* make it a group to be able to access the word without surrounding
* whitespace
*/
private static final group word   new group metapattern word
/** parse word surrounded by whitespace */
private static final metapattern wordpattern   new metapattern new metapattern
metapattern optional_whitespace  word  metapattern optional_whitespace
/**
* construct.
*
* @param input
*            to parse
*/
public wordparser final charsequence input
super wordpattern  input
/**
* gets the word including the optional whitespaces surrounding the word.
*
* @return the word surrounded by whitespace
*/
public string getword
return word get matcher