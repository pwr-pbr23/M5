/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket extensions wizard
import org apache wicket component
import org apache wicket iclusterable
/**
* models one step in a wizard, and is the equivalent of one panel in a wizard
* from an end-user's perspective.
* <p>
* typically, you would extend {@link wizardstep panel based wizard steps} and
* provide a custom panel for the step instead of directly implementing this
* interface.
* </p>
*
* <p>
* <a href="https://wizard-framework.dev.java.net/">swing wizard framework</a>
* served as a valuable source of inspiration.
* </p>
*
* @author eelco hillenius
*/
public interface iwizardstep extends iclusterable
/**
* this method is called whenever the user presses next while this step is
* active.
* <p>
* this method will only be called if {@link iwizardmodel#isnextavailable}
* and {@link #iscomplete} return true.
*/
void applystate
/**
* gets the header component for this step. this component is displayed in a
* special section of the wizard.
*
* @param id
*            the id that the component should be created with
* @param parent
*            the parent component (for post 1.2)
* @param wizard
*            the wizard component the header will be placed on
* @return the header component
*/
component getheader string id  component parent  iwizard wizard
/**
* returns the current view this step is displaying. this component will be
* displayed in the main section of the wizard with this step is active.
* this may changed at any time by as long as an appropriate property change
* event is fired.
*
* @param id
*            the id that the component should be created with
* @param parent
*            the parent component (for post 1.2)
* @param wizard
*            the wizard component the header will be placed on
* @return the current view of the step.
*/
component getview string id  component parent  iwizard wizard
/**
* initializes this step with the model it will belong to.
*
* @param wizardmodel
*            the owning wizard model
*/
void init iwizardmodel wizardmodel
/**
* checks if this step is compete. this method should return true if the
* wizard can proceed to the next step.
*
* @return <tt>true</tt> if the wizard can proceed from this step,
*         <tt>false</tt> otherwise.
*/
boolean iscomplete