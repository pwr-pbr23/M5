/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket spring common web
import org apache wicket spring springwebapplication
import org apache wicket spring common contactdao
import org apache wicket spring injection annot springcomponentinjector
/**
* application class for our examples
*
* @author igor vaynberg (ivaynberg)
*
*/
public class exampleapplication extends springwebapplication
/**
* this field holds a contact dao proxy that is safe to use in wicket
* components
*/
private contactdao contactdaoproxy
/**
* this field holds the actual contact dao retrieved from spring context.
* this object should never be serialized because it will take the container
* with it, so be careful when using this.
*/
private contactdao contactdao
@override
protected void init
// this line is important - it installs the component injector that will
// inject newly created components with their spring dependencies
addcomponentinstantiationlistener new springcomponentinjector this
/**
* retrieves contact dao bean. this bean should not be serialized so be
* careful when using it.
*
* @return contact dao bean
*/
public contactdao getcontactdao
if  contactdao    null
synchronized  this
if  contactdao    null
contactdao    contactdao  internalgetapplicationcontext
getbean    contactdao class
return contactdao
/**
* returns a lazy init proxy for the dao bean. this proxy is safe to
* serialize and will take up very little space when serialized.
*
* @return a lazy init proxy for the dao bean
*/
public contactdao getcontactdaoproxy
if  contactdaoproxy    null
synchronized  this
if  contactdaoproxy    null
contactdaoproxy    contactdao  createspringbeanproxy
contactdao class
return contactdaoproxy
public class gethomepage
return homepage class