/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html form upload
import org apache wicket component
import org apache wicket request
import org apache wicket markup componenttag
import org apache wicket markup html form formcomponent
import org apache wicket model imodel
import org apache wicket protocol http imultipartwebrequest
import org apache wicket util upload fileitem
/**
* form component that corresponds to a &lt;input type=&quot;file&quot;&gt;.
* when a fileinput component is nested in a
* {@link org.apache.wicket.markup.html.form.form}, that has multipart == true, its model
* is updated with the {@link org.apache.wicket.util.upload.fileitem}for this component.
*
* @author eelco hillenius
*/
public class fileuploadfield extends formcomponent
private static final long serialversionuid   1l
/** true if a model has been set explicitly */
private boolean hasexplicitmodel
private transient fileupload fileupload
/**
* @see org.apache.wicket.component#component(string)
*/
public fileuploadfield final string id
super id
/**
* @param id
*            see component
* @param model
*            see component
*/
public fileuploadfield final string id  imodel model
super id  model
hasexplicitmodel   true
/**
* @return the uploaded file
*/
public fileupload getfileupload
// get request
final request request   getrequest
// if we successfully installed a multipart request
if  request instanceof imultipartwebrequest
// get the item for the path
final fileitem item     imultipartwebrequest request  getfile getinputname
// only update the model when there is a file (larger than zero
// bytes)
if  item    null    item getsize   > 0
if  fileupload    null
fileupload   new fileupload item
return fileupload
return null
/**
* @see org.apache.wicket.component#setmodel(org.apache.wicket.model.imodel)
*/
public component setmodel imodel model
hasexplicitmodel   true
return super setmodel model
/**
* @see org.apache.wicket.markup.html.form.formcomponent#updatemodel()
*/
public void updatemodel
// only update the model if one was passed in
if  hasexplicitmodel
setmodelobject getfileupload
/**
* @see org.apache.wicket.markup.html.form.formcomponent#getinputasarray()
*/
public string getinputasarray
fileupload fu   getfileupload
if  fu    null
return new string   fu getclientfilename
return null
/**
* @see org.apache.wicket.markup.html.form.formcomponent#ismultipart()
*/
public boolean ismultipart
return true
/**
* @see org.apache.wicket.component#oncomponenttag(org.apache.wicket.markup.componenttag)
*/
protected void oncomponenttag componenttag tag
// must be attached to an input tag
checkcomponenttag tag
// check for file type
checkcomponenttagattribute tag
// default handling for component tag
super oncomponenttag tag
/**
* fileinputs cannot be persisted; returns false.
*
* @see org.apache.wicket.markup.html.form.formcomponent#supportspersistence()
*/
protected boolean supportspersistence
return false
/**
* clean up at the end of the request. this means closing all inputstreams
* which might have been opened from the fileupload.
*
* @see org.apache.wicket.component#ondetach()
*/
protected void ondetach
if  fileupload    null
fileupload closestreams
fileupload   null
super ondetach