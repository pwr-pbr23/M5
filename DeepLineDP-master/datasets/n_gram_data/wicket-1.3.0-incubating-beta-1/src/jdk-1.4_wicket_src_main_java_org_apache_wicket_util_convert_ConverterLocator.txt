/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util convert
import java util date
import java util hashmap
import java util locale
import java util map
import org apache wicket iconverterlocator
import org apache wicket util convert converters booleanconverter
import org apache wicket util convert converters byteconverter
import org apache wicket util convert converters characterconverter
import org apache wicket util convert converters dateconverter
import org apache wicket util convert converters doubleconverter
import org apache wicket util convert converters floatconverter
import org apache wicket util convert converters integerconverter
import org apache wicket util convert converters longconverter
import org apache wicket util convert converters shortconverter
import org apache wicket util convert converters sqldateconverter
import org apache wicket util convert converters sqltimeconverter
import org apache wicket util convert converters sqltimestampconverter
import org apache wicket util lang objects
/**
* implementation of {@link iconverterlocator} interface, which locates
* converters for a given type. it serves as a registry for {@link iconverter}
* instances stored by type, and is the default locator for wicket.
*
* @see iconverterlocatorfactory
* @author eelco hillenius
* @author jonathan locke
*/
public class converterlocator implements iconverterlocator
/**
* coverterlocator that is to be used when no registered converter is found.
*/
private class defaultconverter implements iconverter
private static final long serialversionuid   1l
private class   ?   type
/**
* construct.
*
* @param type
*/
public defaultconverter class   ?   type
this type   type
/**
* @see org.apache.wicket.util.convert.iconverter#converttoobject(java.lang.string,
*      java.util.locale)
*/
public object converttoobject string value  locale locale
if  value    null
return null
if    equals value
if  type    string class
return
return null
try
return objects convertvalue value  type
catch  exception e
throw new conversionexception e getmessage    e  setsourcevalue value
/**
* @see org.apache.wicket.util.convert.iconverter#converttostring(java.lang.object,
*      java.util.locale)
*/
public string converttostring object value  locale locale
if  value    null      equals value
return
return  string objects convertvalue value  string class
private static final long serialversionuid   1l
/** maps classes to itypeconverters. */
private final map   class<?>  iconverter   classtoconverter   new hashmap
* class<?>,
* iconverter
/**
* constructor
*/
public converterlocator
set boolean type  booleanconverter instance
set boolean class  booleanconverter instance
set byte type  byteconverter instance
set byte class  byteconverter instance
set character type  characterconverter instance
set character class  characterconverter instance
set double type  doubleconverter instance
set double class  doubleconverter instance
set float type  floatconverter instance
set float class  floatconverter instance
set integer type  integerconverter instance
set integer class  integerconverter instance
set long type  longconverter instance
set long class  longconverter instance
set short type  shortconverter instance
set short class  shortconverter instance
set date class  new dateconverter
set java sql date class  new sqldateconverter
set java sql time class  new sqltimeconverter
set java sql timestamp class  new sqltimestampconverter
/**
* gets the type converter that is registered for class c.
*
* @param c
*            the class to get the type converter for
* @return the type converter that is registered for class c or null if no
*         type converter was registered for class c
*/
public final iconverter get class   ?   c
return  iconverter classtoconverter get c
/**
* converts the given value to class c.
*
* @param type
*            class to get the converter for.
*
* @return the converter for the given type
*
* @see org.apache.wicket.util.convert.iconverter#convert(java.lang.object,
*      java.lang.class, locale)
*/
public final iconverter getconverter class type
// null is always converted to null
if  type    null
return new defaultconverter string class
// get type converter for class
final iconverter converter   get type
if  converter    null
return new defaultconverter type
return converter
/**
* removes the type converter currently registered for class c.
*
* @param c
*            the class for which the converter registration should be
*            removed
* @return the converter that was registered for class c before removal or
*         null if none was registered
*/
public final iconverter remove class   ?   c
return  iconverter classtoconverter remove c
/**
* registers a converter for use with class c.
*
* @param converter
*            the converter to add
* @param c
*            the class for which the converter should be used
* @return the previous registered converter for class c or null if none was
*         registered yet for class c
*/
public final iconverter set final class   ?   c  final iconverter converter
if  converter    null
throw new illegalargumentexception
if  c    null
throw new illegalargumentexception
return  iconverter classtoconverter put c  converter