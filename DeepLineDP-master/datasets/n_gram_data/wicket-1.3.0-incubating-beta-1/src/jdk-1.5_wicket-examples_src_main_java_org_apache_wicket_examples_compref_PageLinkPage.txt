/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples compref
import org apache wicket page
import org apache wicket examples wicketexamplepage
import org apache wicket markup html link ipagelink
import org apache wicket markup html link pagelink
/**
* page with examples on {@link org.apache.wicket.markup.html.link.pagelink}.
*
* @author eelco hillenius
*/
public class pagelinkpage extends wicketexamplepage
/**
* constructor
*/
public pagelinkpage
// add a page link. you can use pagelink in several ways.
// an alternative option would have been to use the constructor with
// the page instance argument like:
//
// add(new pagelink("pagelink", new nonbookmarkablepage(this)));
//
// the disadvantage of that is that you need to create an instance right
// away, which
// will be kept as session data. instead, we use the more verbose
// ipagelink
// anonymous class, which will create the page instance only when
// needed.
add new pagelink    new ipagelink
public page getpage
return new nonbookmarkablepage pagelinkpage this
public class getpageidentity
return nonbookmarkablepage class
// note that this would have had the same effect, except that the link
// wouldn't check
// whether it points to the current page and thus should be 'turned off'
// (but actually
// we don't need that check here, as we are certain that is not the
// case)
//
// add(new link("navigatebacklink")
// {
// public void onclick()
// {
// setresponsepage(return new nonbookmarkablepage(pagelinkpage.this););
// }
// });
/**
* override base method to provide an explanation
*/
protected void explain
string html    pagelink
string code    pagelink
add new explainpanel html  code