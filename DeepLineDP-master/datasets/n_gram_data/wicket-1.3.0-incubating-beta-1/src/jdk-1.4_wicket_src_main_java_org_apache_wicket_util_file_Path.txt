/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util file
import java util arraylist
import java util list
import org apache wicket util resource fileresourcestream
import org apache wicket util resource iresourcestream
import org apache wicket util string stringlist
/**
* mantains a list of folders as a path.
*
* @author jonathan locke
*/
public final class path implements iresourcepath
/** the list of folders in the path */
private final list folders   new arraylist
/**
* constructor
*/
public path
/**
* constructor
*
* @param folder
*            a single folder to add to the path
*/
public path final folder folder
add folder
/**
* constructor
*
* @param folders
*            an array of folders to add to the path
*/
public path final folder folders
if  folders    null
for  int i 0  i < folders length  i
add folders
/**
* @param folder
*            folder to add to path
*/
public void add final folder folder
if   folder exists
throw new illegalargumentexception     folder
folders add folder
/**
* @param path
*            folder to add to path
* @see org.apache.wicket.util.file.iresourcepath#add(java.lang.string)
*/
public void add final string path
add new folder path
/**
*
* @see org.apache.wicket.util.file.iresourcefinder#find(class, string)
*/
public iresourcestream find final class clazz  final string pathname
for  int i 0  i < folders size    i
folder folder    folder  folders get i
final file file   new file folder  pathname
if  file exists
return new fileresourcestream file
return null
/**
* @return returns the folders.
*/
public list getfolders
return folders
/**
* @return number of folders on the path.
*/
public int size
return folders size
/**
* @see java.lang.object#tostring()
*/
public string tostring
return     stringlist valueof folders