/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket request target component
import org apache wicket component
import org apache wicket markupcontainer
import org apache wicket page
import org apache wicket requestcycle
import org apache wicket component ivisitor
import org apache wicket feedback ifeedback
/**
* default implementation of {@link org.apache.wicket.request.target.component.icomponentrequesttarget}.
* target that denotes a single component instance.
*
* @author eelco hillenius
*/
public class componentrequesttarget implements icomponentrequesttarget
/** the component instance. */
private final component component
/**
* construct.
*
* @param component
*            the component instance
*/
public componentrequesttarget final component component
if  component    null
throw new illegalargumentexception
this component   component
/**
* @see org.apache.wicket.irequesttarget#respond(org.apache.wicket.requestcycle)
*/
public void respond final requestcycle requestcycle
// initialize temporary variables
page page   component getpage
if  page    null
page startcomponentrender component
// let component render itself
if  component instanceof page
// use the default page request target, if component is a page
new pagerequesttarget  page component  respond requestcycle
else
// render the component
try
// collect feedback
if  component instanceof markupcontainer
markupcontainer container    markupcontainer component
container visitchildren ifeedback class  new ivisitor
public object component component component
ifeedback component  updatefeedback
return ivisitor continue_traversal
if  component instanceof ifeedback
ifeedback component  updatefeedback
// attach
component attach
// render the component
component rendercomponent
finally
component getpage   detach
if  page    null
page endcomponentrender component
/**
* @see org.apache.wicket.request.target.component.icomponentrequesttarget#getcomponent()
*/
public final component getcomponent
return component
/**
* @see org.apache.wicket.irequesttarget#detach(org.apache.wicket.requestcycle)
*/
public void detach final requestcycle requestcycle
/**
* @see java.lang.object#equals(java.lang.object)
*/
public boolean equals final object obj
if  obj instanceof componentrequesttarget
componentrequesttarget that    componentrequesttarget obj
return component equals that component
return false
/**
* @see java.lang.object#hashcode()
*/
public int hashcode
int result     hashcode
result    component hashcode
return 17   result
/**
* @see java.lang.object#tostring()
*/
public string tostring
return     hashcode         component