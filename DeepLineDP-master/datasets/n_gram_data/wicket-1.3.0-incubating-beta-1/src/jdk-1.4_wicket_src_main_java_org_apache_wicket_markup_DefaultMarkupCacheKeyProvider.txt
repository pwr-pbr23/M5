/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup
import java util locale
import org apache wicket markupcontainer
import org apache wicket util string appendingstringbuffer
/**
* wicket default implementation for the cache key used to reference the cached
* markup resource stream.
*
* @author jonathan locke
* @author juergen donnerstag
*/
public class defaultmarkupcachekeyprovider implements imarkupcachekeyprovider
/**
* constructor.
*/
public defaultmarkupcachekeyprovider
/**
* construct a proper key value for the cache
*
* @param container
*            the container requesting the markup
* @param clazz
*            the clazz to get the key for
* @return key that uniquely identifies any markup that might be associated
*         with this markup container.
*/
public charsequence getcachekey final markupcontainer container  final class clazz
final string classname   clazz getname
final locale locale   container getlocale
final string style   container getstyle
final string markuptype   container getmarkuptype
final appendingstringbuffer buffer   new appendingstringbuffer classname length     32
buffer append classname
if  locale    null
// todo what is wrong with locale.tostring()?!?
final boolean l   locale getlanguage   length      0
final boolean c   locale getcountry   length      0
final boolean v   locale getvariant   length      0
buffer append locale getlanguage
if  c     l    v
buffer append    append locale getcountry        this may just
// append '_'
if  v     l    c
buffer append    append locale getvariant
if  style    null
buffer append style
buffer append markuptype
return buffer