/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket authorization strategies role
import java util hashset
import org apache wicket iclusterable
import org apache wicket util string stringlist
/**
* utility class for working with roles.
*
* @author eelco hillenius
* @author jonathan locke
*/
public final class roles extends hashset<string> implements iclusterable
private static final long serialversionuid   1l
/** user role (for use in annotations) */
public static final string user
/** admin role (for use in annotations) */
public static final string admin
/**
* construct.
*/
public roles
/**
* construct.
*
* @param roles
*            roles as a comma separated list, like "admin, user"
*/
public roles final string roles
for  final string role   roles split
add role
/**
* construct.
*
* @param roles
*            roles
*/
public roles final string roles
for  final string role   roles
add role
/**
* whether this roles object containes the provided role.
*
* @param role
*            the role to check
* @return true if it contains the role, false otherwise
*/
public boolean hasrole final string role
if  role    null
return contains role
return false
/**
* whether this roles object contains any of the provided roles.
*
* @param roles
*            the roles to check
* @return true if it contains any of the roles, false otherwise
*/
public boolean hasanyrole roles roles
if  roles    null
for  string role   roles
if  hasrole role
return true
return false
/**
* whether this roles object contains all the provided roles.
*
* @param roles
*            the roles to check
* @return true if it contains all the roles or the provided roles object is
*         null, false otherwise
*/
public boolean hasallroles roles roles
if  roles    null
for  string role   roles
if   hasrole role
return false
return true
/**
* @see java.lang.object#tostring()
*/
@override
public string tostring
return stringlist valueof this  join