/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples ajax builtin
import java util arraylist
import java util date
import java util list
import org apache wicket component
import org apache wicket ajax ajaxrequesttarget
import org apache wicket ajax iajaxcalldecorator
import org apache wicket ajax calldecorator ajaxcalldecorator
import org apache wicket ajax form ajaxformsubmitbehavior
import org apache wicket examples guestbook comment
import org apache wicket markup html webmarkupcontainer
import org apache wicket markup html basic label
import org apache wicket markup html basic multilinelabel
import org apache wicket markup html form form
import org apache wicket markup html form textarea
import org apache wicket markup html list listitem
import org apache wicket markup html list listview
import org apache wicket model compoundpropertymodel
import org apache wicket model model
import org apache wicket model propertymodel
/**
* ajax enabled example for the guestbook.
*
* @author martijn dashorst
*/
public class guestbook extends basepage
/** a global list of all comments from all users across all sessions */
public static final list commentlist   new arraylist
/** the list view that shows comments */
private final listview commentlistview
/** container for the comments, used to update the listview.  */
private webmarkupcontainer comments
/** the textarea for entering the comments, is updated in the ajax call. */
private component text
/**
* constructor.
*/
public guestbook
// add comment form
commentform commentform   new commentform
add commentform
// the webmarkupcontainer is used to update the listview in an ajax call
comments   new webmarkupcontainer
add comments setoutputmarkupid true
// add commentlistview of existing comments
comments add commentlistview   new listview    new propertymodel this
public void populateitem final listitem listitem
final comment comment    comment listitem getmodelobject
listitem add new label    new model comment getdate
listitem add new multilinelabel    comment gettext
// we need to cancel the standard submit of the form in the onsubmit handler,
// otherwise we'll get double submits. to do so, we return false after the
// ajax submit has occurred.
// the ajaxformsubmitbehavior already calls the onsubmit of the form, all
// we need to do in the onsubmit(ajaxrequesttarget) handler is do our ajax
// specific stuff, like rendering our components.
commentform add new ajaxformsubmitbehavior commentform
protected iajaxcalldecorator getajaxcalldecorator
return new ajaxcalldecorator
public charsequence decoratescript charsequence script
return script
protected void onsubmit ajaxrequesttarget target
// add the list of components that need to be updated
target addcomponent comments
target addcomponent text
// focus the textarea again
target appendjavascript     text getmarkupid
/**
* a form that allows a user to add a comment.
*
* @author jonathan locke
*/
public final class commentform extends form
/**
* constructor
*
* @param id
*            the name of this component
*/
public commentform final string id
// construct form with no validation listener
super id  new compoundpropertymodel new comment
// add text entry widget
text   new textarea    setoutputmarkupid true
add text
/**
* show the resulting valid edit
*/
public final void onsubmit
// construct a copy of the edited comment
final comment comment    comment getmodelobject
final comment newcomment   new comment comment
// set date of comment to add
newcomment setdate new date
// add the component we edited to the list of comments
commentlist add 0  newcomment
// clear out the text component
comment settext
/**
* clears the comments.
*/
public static void clear
commentlist clear