/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup repeater
import java util comparator
import org apache wicket markup html webmarkupcontainer
import org apache wicket model imodel
import org apache wicket version undo change
/**
* container that holds components in a refreshingview. one item represents one
* entire row of the view. users should add all containing components to the
* item instead of the view, this is accomplished by implementing
* refreshingview.populateitem(item item).
*
* @see refreshingview
*
* @author igor vaynberg (ivaynberg)
*/
public class item extends webmarkupcontainer
private static final long serialversionuid   1l
/** relative index of this item */
private int index
/**
* @param id
*            component id
* @param index
*            relative index of this item in the pageable view
* @param model
*            model for this item
*/
public item final string id  int index  final imodel model
super id  model
this index   index
/**
* sets the index of this item
*
* @param index
*            new index
*/
public void setindex int index
if  this index    index
if  isversioned
addstatechange new change
final int oldindex   item this index
private static final long serialversionuid   1l
public void undo
item this index   oldindex
public string tostring
return     getpath         oldindex
this index   index
/**
* @return the index assigned to this item
*/
public int getindex
return index
/**
* @return the primary key assigned to this item
*/
public string getprimarykey
return getid
/**
* comparator that compares items by their index property
*
* @author igor vaynberg (ivaynberg)
*
*/
public static class indexcomparator implements comparator
private static final comparator instance   new indexcomparator
/**
* @return static instance of the comparator
*/
public static final comparator getinstance
return instance
/**
* @see java.util.comparator#compare(java.lang.object, java.lang.object)
*/
public int compare object o1  object o2
item lhs    item o1
item rhs    item o2
return lhs getindex     rhs getindex