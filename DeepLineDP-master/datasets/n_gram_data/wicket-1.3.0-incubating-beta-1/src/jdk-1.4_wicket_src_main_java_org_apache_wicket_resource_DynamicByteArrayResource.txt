/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket resource
import java io bytearrayinputstream
import java io ioexception
import java io inputstream
import java util locale
import org apache wicket markup html dynamicwebresource
import org apache wicket markup html webresource
import org apache wicket util resource iresourcestream
import org apache wicket util resource resourcestreamnotfoundexception
import org apache wicket util time duration
import org apache wicket util time time
/**
* byte array resource class that supports dynamic (database or on the fly
* generated) data.
*
* @author johan compagner
*
* @deprecated use {@link dynamicwebresource} now
*/
public abstract class dynamicbytearrayresource extends webresource
/**
* this is a resourcestate subclasses should return in the getresourcestate
* method. this resource state should be thread safe. so it shouldn't be
* altered after construction. even with syncronize blocks this is still not
* safe because the call getcontenttype() can not be sync together with the
* call getdata() they will happen after each other.
*
* @author jcompagner
*/
public static class resourcestate
/**
* @return the byte array for this resource
*/
public byte getdata
return null
/**
* @return the content type of this resource
*/
public string getcontenttype
return null
/**
* @return the last modified time of this resource
*/
public time lastmodifiedtime
return time now
/**
* @return the length of the data
*/
public int getlength
byte data   getdata
return data    null ? data length   0
/** the locale. */
private locale locale
/**
* creates a dynamic resource
*/
public dynamicbytearrayresource
super
setcacheable false
/**
* creates a dynamic resource
*
* @param locale
*            the locale of this resource
*/
public dynamicbytearrayresource locale locale
this locale   locale
/**
* creates a dynamic resource
*
* @param locale
*            the locale of this resource
* @param cachetimeout
*            the cache duration timeout
*/
public dynamicbytearrayresource locale locale  duration cachetimeout
this locale   locale
/**
* @return gets the image resource to attach to the component.
*/
public final iresourcestream getresourcestream
return new iresourcestream
private static final long serialversionuid   1l
private locale locale   dynamicbytearrayresource this locale
/** transient input stream to resource */
private transient inputstream inputstream   null
/**
* transient resourcestate of the resources, will always be deleted
* in the close
*/
private transient resourcestate data   null
/**
* @see org.apache.wicket.util.resource.iresourcestream#close()
*/
public void close   throws ioexception
if  inputstream    null
inputstream close
inputstream   null
data   null
/**
* @see org.apache.wicket.util.resource.iresourcestream#getcontenttype()
*/
public string getcontenttype
checkloaddata
return data getcontenttype
/**
* @see org.apache.wicket.util.resource.iresourcestream#getinputstream()
*/
public inputstream getinputstream   throws resourcestreamnotfoundexception
checkloaddata
if  inputstream    null
inputstream   new bytearrayinputstream data getdata
return inputstream
/**
* @see org.apache.wicket.util.watch.imodifiable#lastmodifiedtime()
*/
public time lastmodifiedtime
checkloaddata
return data lastmodifiedtime
/**
* @see org.apache.wicket.util.resource.iresourcestream#length()
*/
public long length
checkloaddata
return  data    null  ? data getlength     0
/**
* @see org.apache.wicket.util.resource.iresourcestream#getlocale()
*/
public locale getlocale
return locale
/**
* @see org.apache.wicket.util.resource.iresourcestream#setlocale(java.util.locale)
*/
public void setlocale locale loc
locale   loc
/**
* check whether the data was loaded yet. if not, load it now.
*/
private void checkloaddata
if  data    null
data   getresourcestate
/**
* @see org.apache.wicket.resource#invalidate()
*/
public void invalidate
super invalidate
/**
* gets the byte array for our dynamic resource. if the subclass regenerates
* the data, it should set the lastmodifiedtime too. this ensures that image
* caching works correctly.
*
* @return the byte array for this dynamic resource.
*/
protected abstract resourcestate getresourcestate