/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples nested
import java util arraylist
import java util iterator
import java util list
import javax swing tree defaultmutabletreenode
import javax swing tree defaulttreemodel
import javax swing tree treemodel
import javax swing tree treenode
import org apache wicket pageparameters
import org apache wicket examples wicketexamplepage
import org apache wicket examples ajax builtin tree simpletreepage
import org apache wicket markup html link bookmarkablepagelink
import org apache wicket markup html link link
import org apache wicket markup html tree tree
import org apache wicket markup html tree defaultabstracttree linktype
/**
* examples that shows how you can display a tree like structure (in this case
* nested lists with string elements) using nested panels and using a tree
* component.
*
* @author eelco hillenius
*/
public class home extends wicketexamplepage
/**
* constructor.
*
* @param parameters
*            page parameters
*/
public home final pageparameters parameters
// create a list with sublists
list l1   new arraylist
l1 add
l1 add
list l2   new arraylist
l2 add
l2 add
l2 add
list l3   new arraylist
l3 add
l2 add l3
l2 add
l1 add l2
l1 add
// construct the panel
add new recursivepanel    l1
// create a tree
treemodel treemodel   converttotreemodel l1
final tree tree   new tree    treemodel
protected string rendernode treenode node
defaultmutabletreenode treenode    defaultmutabletreenode node
object userobject   treenode getuserobject
return  userobject instanceof list  ?     string valueof treenode
getuserobject
// disable ajax links in this example
tree setlinktype linktype regular
add tree
add new link
public void onclick
tree gettreestate   expandall
add new link
public void onclick
tree gettreestate   collapseall
add new bookmarkablepagelink    simpletreepage class
/**
* add a sublist to the parent.
*
* @param parent
*            the parent
* @param sub
*            the sub list
*/
private void add defaultmutabletreenode parent  list sub
for  iterator i   sub iterator    i hasnext
object o   i next
if  o instanceof list
defaultmutabletreenode child   new defaultmutabletreenode o
parent add child
add child   list o
else
defaultmutabletreenode child   new defaultmutabletreenode o
parent add child
/**
* convert the nested lists to a tree model
*
* @param list
*            the list
* @return tree model
*/
private treemodel converttotreemodel list list
treemodel model   null
defaultmutabletreenode rootnode   new defaultmutabletreenode
add rootnode  list
model   new defaulttreemodel rootnode
return model