/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html
import java io bytearrayinputstream
import java io bytearrayoutputstream
import java io ioexception
import java io inputstream
import java lang ref softreference
import java util locale
import java util zip gzipoutputstream
import org apache wicket application
import org apache wicket sharedresources
import org apache wicket markup html resources compressedresourcereference
import org apache wicket protocol http webrequest
import org apache wicket protocol http webrequestcycle
import org apache wicket protocol http webresponse
import org apache wicket util io streams
import org apache wicket util resource iresourcestream
import org apache wicket util resource resourcestreamnotfoundexception
import org apache wicket util time time
/**
* identical to packageresource, but supports gzip compression of data
*
* see {@link packageresource} and {@link compressedresourcereference}
*
* @author janne hietam&auml;ki
*/
public class compressedpackageresource extends packageresource
/**
* iresourcestream implementation which compresses the data with gzip if the
* requests header accept-encoding contains string gzip
*/
protected abstract class compressingresourcestream implements iresourcestream
private static final long serialversionuid   1l
/** cache for compressed data */
private softreference cache   new softreference null
/** timestamp of the cache */
private time timestamp   null
/**
* @see org.apache.wicket.util.resource.iresourcestream#close()
*/
public void close   throws ioexception
/**
* @see org.apache.wicket.util.resource.iresourcestream#getcontenttype()
*/
public string getcontenttype
return getoriginalresourcestream   getcontenttype
/**
* @see org.apache.wicket.util.resource.iresourcestream#getinputstream()
*/
public inputstream getinputstream   throws resourcestreamnotfoundexception
if  supportscompression
return new bytearrayinputstream getcompressedcontent
else
return getoriginalresourcestream   getinputstream
/**
* @see org.apache.wicket.util.resource.iresourcestream#getlocale()
*/
public locale getlocale
return getoriginalresourcestream   getlocale
/**
* @see org.apache.wicket.util.watch.imodifiable#lastmodifiedtime()
*/
public time lastmodifiedtime
return getoriginalresourcestream   lastmodifiedtime
/**
* @see org.apache.wicket.util.resource.iresourcestream#length()
*/
public long length
if  supportscompression
return getcompressedcontent   length
else
return getoriginalresourcestream   length
/**
* @see org.apache.wicket.util.resource.iresourcestream#setlocale(java.util.locale)
*/
public void setlocale locale locale
getoriginalresourcestream   setlocale locale
/**
* @return compressed content
*/
private byte getcompressedcontent
iresourcestream stream   getoriginalresourcestream
try
byte ret    byte cache get
if  ret    null    timestamp    null
if  timestamp equals stream lastmodifiedtime
return ret
bytearrayoutputstream out   new bytearrayoutputstream
gzipoutputstream zout   new gzipoutputstream out
streams copy stream getinputstream    zout
zout close
stream close
ret   out tobytearray
timestamp   stream lastmodifiedtime
cache   new softreference ret
return ret
catch  ioexception e
throw new runtimeexception e
catch  resourcestreamnotfoundexception e
throw new runtimeexception e
protected abstract iresourcestream getoriginalresourcestream
private static final long serialversionuid   1l
/**
* gets the resource for a given set of criteria. only one resource will be
* loaded for the same criteria.
*
* @param scope
*            this argument will be used to get the class loader for loading
*            the package resource, and to determine what package it is in.
*            typically this is the class in which you call this method
* @param path
*            the path to the resource
* @param locale
*            the locale of the resource
* @param style
*            the style of the resource (see {@link org.apache.wicket.session})
* @return the resource
* @throws packageresourceblockedexception
*             when the target resource is not accepted by
*             {@link ipackageresourceguard the package resource guard}.
*/
public static packageresource get final class scope  final string path  final locale locale
final string style
final sharedresources sharedresources   application get   getsharedresources
packageresource resource    packageresource sharedresources get scope  path  locale  style
true
if  resource    null
resource   new compressedpackageresource scope  path  locale  style
sharedresources add scope  path  locale  style  resource
return resource
private final iresourcestream resourcestream
/**
* hidden constructor.
*
* @param scope
*            this argument will be used to get the class loader for loading
*            the package resource, and to determine what package it is in
* @param path
*            the path to the resource
* @param locale
*            the locale of the resource
* @param style
*            the style of the resource
*/
protected compressedpackageresource class scope  string path  locale locale  string style
super scope  path  locale  style
resourcestream   newresourcestream
/**
* factory method for creating resource stream instance
* @return new stream instance
*/
protected iresourcestream newresourcestream
return new compressingresourcestream
private static final long serialversionuid   1l
protected iresourcestream getoriginalresourcestream
return getpackageresourcestream
/**
* returns the resource stream of package resource
* @return resource stream
*/
protected iresourcestream getpackageresourcestream
return compressedpackageresource super getresourcestream
/**
* iresourcestream implementation which compresses the data with gzip if the
* requests header accept-encoding contains string gzip
*
* @see org.apache.wicket.markup.html.packageresource#getresourcestream()
*/
public iresourcestream getresourcestream
return resourcestream
/**
* @return whether the client supports compression
*/
private boolean supportscompression
webrequest request    webrequest webrequestcycle get   getrequest
string s   request gethttpservletrequest   getheader
if  s    null
return false
else
return s indexof    >  0
/**
* @see org.apache.wicket.markup.html.webresource#setheaders(org.apache.wicket.protocol.http.webresponse)
*/
protected void setheaders webresponse response
super setheaders response
if  supportscompression
response setheader