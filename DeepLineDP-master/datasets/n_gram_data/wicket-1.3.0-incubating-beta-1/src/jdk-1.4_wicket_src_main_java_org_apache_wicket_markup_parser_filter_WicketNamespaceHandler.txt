/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup parser filter
import java text parseexception
import java util iterator
import java util map
import org apache wicket application
import org apache wicket markup componenttag
import org apache wicket markup markup
import org apache wicket markup markupelement
import org apache wicket markup parser abstractmarkupfilter
import org apache wicket util value ivaluemap
/**
* this is a markup inline filter. it determines the wicket namespace name from
* the markup examples are xmlns:wicket or
* xmlns:wicket="http://wicket.apache.org".
*
* @see org.apache.wicket.markup.markupparser
* @author juergen donnerstag
*/
public final class wicketnamespacehandler extends abstractmarkupfilter
/** wicket uri */
private static final string wicket_uri
/** the markup created by reading the markup file */
private final markup markup
/**
* namespace prefix: e.g. <html
* xmlns:wicket="http://wicket.apache.org">
*/
private static final string xmlns
/**
* construct.
*
* @param markup
*            the markup created by reading the markup file
*/
public wicketnamespacehandler final markup markup
this markup   markup
/**
* get the next tag from the next markupfilter in the chain and search for
* wicket specific tags.
*
* @see org.apache.wicket.markup.parser.imarkupfilter#nexttag()
* @return the next tag from markup to be processed. if null, no more tags
*         are available
*/
public markupelement nexttag   throws parseexception
// get the next tag from the markup.
// if null, no more tags are available
final componenttag tag   nextcomponenttag
if  tag    null
return tag
if  tag isopen        equals tag getname   tolowercase
final string namespace   determinewicketnamespace tag
if  namespace    null
markup setwicketnamespace namespace
return tag
/**
* determine wicket namespace from xmlns:wicket or
* xmlns:wicket="http://wicket.apache.org"
*
* @param tag
* @return wicket namespace
*/
private string determinewicketnamespace final componenttag tag
// for all tags attributes
final ivaluemap attributes   tag getattributes
final iterator it   attributes entryset   iterator
while  it hasnext
final map entry entry    map entry it next
// find attributes with namespace "xmlns"
final string attributename    string entry getkey
if  attributename startswith xmlns
final string xmlnsurl    string entry getvalue
// if wicket relevant ...
if   xmlnsurl    null      xmlnsurl trim   length      0
xmlnsurl startswith wicket_uri
// set the wicket namespace for wicket tags (e.g.
// <wicket:panel>) and attributes (e.g. wicket:id)
final string namespace   attributename substring xmlns length
if  application get   getmarkupsettings   getstripwickettags
attributes remove attributename
// make sure the parser knows it has been changed
tag setmodified true
return namespace
return null