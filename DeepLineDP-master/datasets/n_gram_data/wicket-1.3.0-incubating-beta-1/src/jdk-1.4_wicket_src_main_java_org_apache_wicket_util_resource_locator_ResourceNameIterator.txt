/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util resource locator
import java util iterator
import java util locale
import org apache wicket wicketruntimeexception
/**
* contains the logic to locate a resource based on a path, a style (see
* {@link org.apache.wicket.session}), a locale and a extension strings. the full filename
* will be built like:
* &lt;path&gt;_&lt;style&gt;_&lt;locale&gt;.&lt;extension&gt;.
* <p>
* resource matches will be attempted in the following order:
* <ol>
* <li>1. &lt;path&gt;_&lt;style&gt;_&lt;locale&gt;.&lt;extension&gt;</li>
* <li>2. &lt;path&gt;_&lt;locale&gt;.&lt;extension&gt;</li>
* <li>3. &lt;path&gt;_&lt;style&gt;.&lt;extension&gt;</li>
* <li>4. &lt;path&gt;.&lt;extension&gt;</li>
* </ol>
* <p>
* locales may contain a language, a country and a region or variant.
* combinations of these components will be attempted in the following order:
* <ol>
* <li>locale.tostring() see javadoc for locale for more details</li>
* <li>&lt;language&gt;_&lt;country&gt;</li>
* <li>&lt;language&gt;</li>
* </ol>
* <p>
* extensions may be a comma separated list of extensions, e.g. "properties,xml"
*
* @author juergen donnerstag
*/
public class resourcenameiterator implements iterator
// the locale to search for the resource file
private final locale locale
// the extensions (comma separated) to search for the resource file
private final string extensions
// the various iterators used to locate the resource file
private iterator styleiterator
private localeresourcenameiterator localeiterator
private iterator extenstionsiterator
// the latest exact locale used
private locale currentlocale
/**
* construct.
*
* @param path
*            the path of the resource without extension
* @param style
*            a theme or style (see {@link org.apache.wicket.session})
* @param locale
*            the locale to apply
* @param extensions
*            the filname's extensions (comma separated)
*/
public resourcenameiterator string path  final string style  final locale locale
final string extensions
this locale   locale
this extensions   extensions
this styleiterator   new styleandvariationresourcenameiterator path  style  null
/**
* get the exact locale which has been used for the latest resource path.
*
* @return current locale
*/
public final locale getlocale
return this currentlocale
/**
* @see java.util.iterator#hasnext()
*/
public boolean hasnext
// most inner loop. loop through all extensions provided
if  this extenstionsiterator    null
if  this extenstionsiterator hasnext      true
return true
// if there are no more extensions, than return to the next outer
// loop (locale), get the next value from that loop and start
// over again with the first extension in the list.
extenstionsiterator   null
// 2nd inner loop: loop through all locale combinations
if  this localeiterator    null
while  this localeiterator hasnext
// get the next locale from the iterator and start the next
// inner iterator over again.
string newpath    string  this localeiterator next
this currentlocale   this localeiterator getlocale
this extenstionsiterator   new extensionresourcenameiterator newpath
this extensions
if  this extenstionsiterator hasnext      true
return true
this localeiterator   null
// most outer loop: loop through all combinations of styles and
// variations
while  this styleiterator hasnext
string newpath    string  this styleiterator next
this localeiterator   new localeresourcenameiterator newpath  this locale
while  this localeiterator hasnext
newpath    string  this localeiterator next
this currentlocale   this localeiterator getlocale
this extenstionsiterator   new extensionresourcenameiterator newpath
this extensions
if  this extenstionsiterator hasnext      true
return true
// no more combinations found. end of iteration.
return false
/**
* @see java.util.iterator#next()
*/
public object next
if  extenstionsiterator    null
return extenstionsiterator next
throw new wicketruntimeexception
/**
* @see java.util.iterator#remove()
*/
public void remove
// ignore