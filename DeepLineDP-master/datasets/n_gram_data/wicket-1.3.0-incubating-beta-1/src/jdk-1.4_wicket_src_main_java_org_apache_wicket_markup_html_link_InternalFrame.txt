/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html link
import org apache wicket ipagemap
import org apache wicket page
import org apache wicket pagemap
import org apache wicket requestcycle
import org apache wicket session
import org apache wicket markup componenttag
import org apache wicket markup html webmarkupcontainer
import org apache wicket util string strings
/**
* implementation of an <a
* href="http://www.w3.org/tr/rec-html40/present/frames.html#h-16.5">inline
* frame</a> component. must be used with an iframe (&lt;iframe src...)
* element. the src attribute will be generated.
*
* @author sven meier
* @author ralf ebert
*
* @deprecated will be replaced by {@link inlineframe} in wicket 2.0 as that's a
*             better name for it.
*/
public class internalframe extends webmarkupcontainer implements ilinklistener
private static final long serialversionuid   1l
/** the link. */
private final ipagelink pagelink
/**
* the pagemap name where the page that will be created by this inline frame
* will be created in.
*/
private final string pagemapname
/**
* constructs an inline frame that instantiates the given page class when
* the content of the inline frame is requested. the instantiated page is
* used to render a response to the user.
*
* @param id
*            see component
* @param pagemap
*            the pagemap where the page of the inline frame must be in
* @param c
*            page class
*/
public internalframe final string id  final ipagemap pagemap  final class c
this id  pagemap  new ipagelink
private static final long serialversionuid   1l
public page getpage
// create page using page factory
return session get   getpagefactory   newpage c
public class getpageidentity
return c
// ensure that c is a subclass of page
if   page class isassignablefrom c
throw new illegalargumentexception     c
/**
* this constructor is ideal if a page object was passed in from a previous
* page. construct an inline frame containing the given page.
*
* @param id
*            see component
* @param pagemap
*            the pagemap where the page of the inline frame must be in
* @param page
*            the page
*/
public internalframe final string id  final ipagemap pagemap  final page page
this id  pagemap  new ipagelink
private static final long serialversionuid   1l
public page getpage
// use given page
return page
public class getpageidentity
return page getclass
/**
* this constructor is ideal for constructing pages lazily.
*
* constructs an inline frame which invokes the getpage() method of the
* ipagelink interface when the content of the inline frame is requested.
* whatever page objects is returned by this method will be rendered back to
* the user.
*
* @param id
*            see component
* @param pagemap
*            the pagemap where the page of the inline frame must be in
* @param pagelink
*            an implementation of ipagelink which will create the page to
*            be contained in the inline frame if and when the content is
*            requested
*/
public internalframe final string id  final ipagemap pagemap  ipagelink pagelink
super id
this pagemapname   pagemap getname
this pagelink   pagelink
/**
* gets the url to use for this link.
*
* @return the url that this link links to
*/
protected charsequence geturl
return urlfor ilinklistener interface
/**
* handles this frame's tag.
*
* @param tag
*            the component tag
* @see org.apache.wicket.component#oncomponenttag(componenttag)
*/
protected final void oncomponenttag final componenttag tag
checkcomponenttag tag
// set href to link to this frame's framerequested method
charsequence url   geturl
// generate the src attribute
tag put    strings replaceall url
super oncomponenttag tag
/**
* @see org.apache.wicket.markup.html.link.ilinklistener#onlinkclicked()
*/
public final void onlinkclicked
requestcycle get   getrequest   getrequestparameters   setpagemapname pagemapname
setresponsepage pagelink getpage
/**
* returns the pagemap.
*
* @return pagemap
*/
public final ipagemap getpagemap
return pagemap forname this pagemapname