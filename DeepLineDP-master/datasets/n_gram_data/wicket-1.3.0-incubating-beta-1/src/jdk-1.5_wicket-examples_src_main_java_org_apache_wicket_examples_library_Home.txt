/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples library
import java util arraylist
import java util list
import org apache wicket pageparameters
import org apache wicket markup html basic label
import org apache wicket markup html list listitem
import org apache wicket markup html list pageablelistview
import org apache wicket markup html navigation paging pagingnavigator
import org apache wicket model model
import org apache wicket model propertymodel
/**
* page that displays a list of books and lets the user re-order them.
*
* @author jonathan locke
*/
public final class home extends authenticatedwebpage
/**
* constructor
*
* @param parameters
*/
public home final pageparameters parameters
// add table of books
final pageablelistview listview
add listview   new pageablelistview    new propertymodel this      4
public void populateitem final listitem listitem
final book book    book listitem getmodelobject
listitem add bookdetails link    book  getlocalizer   getstring
this
listitem add new label    new model book
listitem add moveuplink    listitem
listitem add movedownlink    listitem
listitem add removelink    listitem
listitem add editbook link    book getid
add new pagingnavigator    listview
/**
*
* @return list of books
*/
public list getbooks
// note: checkaccess() (and thus login etc.) happen after the page
// has been instantiated. thus, you can not realy on user != null.
// note2: in any case, all components must be associated with a
// wicket tag.
user user   getlibrarysession   getuser
if  user    null
return new arraylist
return user getbooks