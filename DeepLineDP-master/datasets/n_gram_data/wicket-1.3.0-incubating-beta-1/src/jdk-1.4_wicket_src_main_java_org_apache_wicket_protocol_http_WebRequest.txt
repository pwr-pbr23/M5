/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket protocol http
import java util locale
import java util map
import javax servlet http cookie
import javax servlet http httpservletrequest
import org apache wicket request
import org apache wicket util lang bytes
/**
* subclass of request for http protocol requests which holds an underlying
* httpservletrequest object. a variety of convenience methods are available
* that operate on the httpservletrequest object. these methods do things such
* as providing access to parameters, cookies, urls and path information.
*
* @author jonathan locke
*/
public abstract class webrequest extends request
/**
* gets the application context path.
*
* @return application context path
*/
public abstract string getcontextpath
/**
* get the requests' cookies
*
* @return cookies
*/
public cookie getcookies
return gethttpservletrequest   getcookies
/**
* gets the wrapped http servlet request object.
* <p>
* warning: it is usually a bad idea to depend on the http servlet request
* directly. please use the classes and methods that are exposed by wicket
* (such as {@link org.apache.wicket.session} instead. send an email to the mailing
* list in case it is not clear how to do things or you think you miss
* functionality which causes you to depend on this directly.
* </p>
*
* @return the wrapped http serlvet request object.
*/
public abstract httpservletrequest gethttpservletrequest
/**
* returns the preferred <code>locale</code> that the client will accept
* content in, based on the accept-language header. if the client request
* doesn't provide an accept-language header, this method returns the
* default locale for the server.
*
* @return the preferred <code>locale</code> for the client
*/
public abstract locale getlocale
/**
* gets the request parameter with the given key.
*
* @param key
*            parameter name
* @return parameter value
*/
public abstract string getparameter final string key
/**
* gets the request parameters.
*
* @return map of parameters
*/
public abstract map getparametermap
/**
* gets the request parameters with the given key.
*
* @param key
*            parameter name
* @return parameter values
*/
public abstract string getparameters final string key
/**
* gets the servlet path.
*
* @return servlet path
*/
public abstract string getservletpath
/**
* retrieves the url of this request for local use.
*
* @return the request url for local use, which is the context path + the
*         relative url
*/
public string geturl
/*
* servlet 2.3 specification : context path: the path prefix associated
* with the servletcontext that this servlet is a part of. if this
* context is the default context rooted at the base of the web server's
* url namespace, this path will be an empty string. otherwise, this
* path starts with a "/" character but does not end with a "/"
* character.
*/
return getcontextpath         getrelativeurl
/**
* create a runtime context type specific (e.g. servlet or portlet)
* multipartwebrequest wrapper for handling multipart content uploads.
*
* @param maxsize
*            the maximum size this request may be
* @return new webrequest wrapper implementing multipartwebrequest
*/
public abstract webrequest newmultipartwebrequest bytes maxsize
/**
* is the request an ajax request?
*
* @return true if the ajax is an ajax request. false if it's not.
*/
public abstract boolean isajax