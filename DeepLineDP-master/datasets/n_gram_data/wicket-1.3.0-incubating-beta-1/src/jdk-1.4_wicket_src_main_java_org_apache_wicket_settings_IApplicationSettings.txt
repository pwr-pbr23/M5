/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket settings
import org apache wicket application
import org apache wicket application iclassresolver
import org apache wicket protocol http webapplication
import org apache wicket protocol http webrequest
import org apache wicket util convert iconverterlocatorfactory
/**
* settings interface for application settings.
* <p>
* <i>internalerrorpage </i>- you can override this with your own page class to
* display internal errors in a different way.
* <p>
* <i>pageexpirederrorpage </i>- you can override this with your own
* bookmarkable page class to display expired page errors in a different way.
* you can set property homepagerenderstrategy to choose from different ways the
* home page url shows up in your browser.
* <p>
* <b>a converter factory </b>- by overriding getconverterfactory(), you can
* provide your own factory which creates locale sensitive converter instances.
*
* @author jonathan locke
*/
public interface iapplicationsettings
/**
* gets the access denied page class.
*
* @return returns the accessdeniedpage.
* @see iapplicationsettings#setaccessdeniedpage(class)
*/
class getaccessdeniedpage
/**
* gets the default resolver to use when finding classes
*
* @return default class resolver
*/
iclassresolver getclassresolver
/**
* gets context path to use for absolute path generation. for example an
* application server that is used as a virtual server on a webserver:
*
* <pre>
*      appserver.com/context mapped to webserver/ (context path should be '/')
* </pre>
*
* @return the context path
*
* @see iapplicationsettings#setcontextpath(string) what the possible values
*      can be.
*/
string getcontextpath
/**
* gets the converter locator factory.
*
* @return the converter locator factory
*/
iconverterlocatorfactory getconverterlocatorfactory
/**
* gets internal error page class.
*
* @return returns the internalerrorpage.
* @see iapplicationsettings#setinternalerrorpage(class)
*/
class getinternalerrorpage
/**
* gets the page expired page class.
*
* @return returns the pageexpirederrorpage.
* @see iapplicationsettings#setpageexpirederrorpage(class)
*/
class getpageexpirederrorpage
/**
* sets the access denied page class. the class must be bookmarkable and
* must extend page.
*
* @param accessdeniedpage
*            the accessdeniedpage to set.
*/
void setaccessdeniedpage final class accessdeniedpage
/**
* sets the default class resolver to use when finding classes.
*
* @param defaultclassresolver
*            the default class resolver
*/
void setclassresolver final iclassresolver defaultclassresolver
/**
* sets context path to use for absolute path generation. for example an
* application server that is used as a virtual server on a webserver:
*
* <pre>
*      appserver.com/context mapped to webserver/ (context path should be '/')
* </pre>
*
* this method can be called in the init phase of the application with the
* servlet init parameter {@link application#contextpath} if it is specified
* or by the developer itself in the {@link webapplication} init() method.
* if it is not set in the init phase of the application it will be set
* automatically on the context path of the request
* {@link webrequest#getcontextpath()}
*
* @param contextpath
*            the context path to use.
*/
void setcontextpath string contextpath
/**
* sets the coverterlocatorfactory
*
* @param factory
*/
public void setconverterlocatorfactory iconverterlocatorfactory factory
/**
* sets internal error page class. the class must be bookmarkable and must
* extend page.
*
* @param internalerrorpage
*            the internalerrorpage to set.
*/
void setinternalerrorpage final class internalerrorpage
/**
* sets the page expired page class. the class must be bookmarkable and must
* extend page.
*
* @param pageexpirederrorpage
*            the pageexpirederrorpage to set.
*/
void setpageexpirederrorpage final class pageexpirederrorpage