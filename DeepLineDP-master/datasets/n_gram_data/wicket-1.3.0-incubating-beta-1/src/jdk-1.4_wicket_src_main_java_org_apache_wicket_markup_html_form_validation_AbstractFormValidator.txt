/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html form validation
import java util hashmap
import java util map
import org apache wicket markup html form formcomponent
import org apache wicket model imodel
import org apache wicket util lang classes
import org apache wicket validation ivalidatable
import org apache wicket validation ivalidationerror
import org apache wicket validation validationerror
/**
* base class for {@link org.apache.wicket.markup.html.form.validation.iformvalidator}s.
*
* @author igor vaynberg (ivaynberg)
*/
public abstract class abstractformvalidator implements iformvalidator
/**
* deprecated/unsupported
*
* gets the default variables for interpolation.
*
* @return a map with the variables for interpolation
*
* @deprecated use {@link #variablesmap(ivalidatable)} instead
* @throws unsupportedoperationexception
*
* fixme 2.0: remove asap
*/
protected final map messagemodel
throw new unsupportedoperationexception
/**
* reports an error against validatable using the map returned by
* {@link #variablesmap(ivalidatable)}for variable interpolations and
* message key returned by {@link #resourcekey()}.
*
* @param fc
*            form component against which the error is reported
*
*/
public void error formcomponent fc
error fc  resourcekey    variablesmap
/**
* reports an error against the validatalbe using the given resource key
*
* @param fc
*            form component against which the error is reported
* @param resourcekey
*            the message resource key to use
*/
public void error formcomponent fc  final string resourcekey
if  resourcekey    null
throw new illegalargumentexception
error fc  resourcekey  variablesmap
/**
* reports an error against the validatalbe using the given map for variable
* interpolations and message resource key provided by
* {@link #resourcekey()}
*
* @param fc
*            form component against which the error is reported
* @param vars
*            variables for variable interpolation
*/
public void error formcomponent fc  final map vars
if  vars    null
throw new illegalargumentexception
error fc  resourcekey    vars
/**
* reports an error against the validatable using the specified resource key
* and variable map
*
* @param fc
*            form component against which the error is reported
*
* @param validatable
*            validatble being validated
* @param resourcekey
*            the message resource key to use
* @param vars
*            the model for variable interpolation
*/
public void error formcomponent fc  final string resourcekey  map vars
if  fc    null
throw new illegalargumentexception
if  vars    null
throw new illegalargumentexception
if  resourcekey    null
throw new illegalargumentexception
validationerror error   new validationerror   addmessagekey resourcekey
final string defaultkey   classes simplename getclass
if   resourcekey equals defaultkey
error addmessagekey defaultkey
error setvariables vars
fc error  ivalidationerror error
/**
* gets the default variables for interpolation. these are for every
* component:
* <ul>
* <li>${input(n)}: the user's input</li>
* <li>${name(n)}: the name of the component</li>
* <li>${label(n)}: the label of the component - either comes from
* formcomponent.labelmodel or resource key [form-id].[form-component-id] in
* that order</li>
* </ul>
*
* @return a map with the variables for interpolation
*/
protected map variablesmap
formcomponent formcomponents   getdependentformcomponents
if  formcomponents    null    formcomponents length > 0
map args   new hashmap formcomponents length   3
for  int i   0  i < formcomponents length  i
final formcomponent formcomponent   formcomponents
string arg       i
imodel label   formcomponent getlabel
if  label    null
args put arg  label getobject
else
args put arg  formcomponent getlocalizer   getstring formcomponent getid
formcomponent getparent    formcomponent getid
args put     i  formcomponent getinput
args put     i  formcomponent getid
return args
else
return new hashmap 2
/**
* gets the resource key for validator's error message from the
* applicationsettings class.
*
* @return the resource key based on the form component
*/
protected string resourcekey
return classes simplename getclass