/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util diff
import java io fileoutputstream
import java io ioexception
import java io inputstream
import java io printwriter
import java net url
import junit framework assert
import org apache commons logging log
import org apache commons logging logfactory
import org apache wicket markup markup
import org apache wicket markup markupparser
import org apache wicket markup parser xmlpullparser
import org apache wicket util io streams
import org apache wicket util resource resourcestreamnotfoundexception
import org apache wicket util string stringlist
/**
* this is a utility class. it serves two purposes.
* <p>
* first: compare a string output generated by wicket with a file's
* content (expected result).
* <p>
* second: create/replace the expected result file with the new content, if a
* system property has be made available like
* -dwicket.replace.expected.results=true
*
* @author juergen donnerstag
*/
public final class diffutil
private static final log log   logfactory getlog diffutil class
/**
* replace the expected result file with the current output.
*
* @param document
*            how the expected result should look like
* @param clazz
*            used to load the file (relativ to clazz package)
* @param file
*            the name of the expected result file to be created
* @throws ioexception
*/
public final static void replaceexpectedresultfile final string document  final class clazz
final string file  throws ioexception
string filename   clazz getpackage   getname
filename   filename replace
filename        file
final url url   clazz getclassloader   getresource filename
filename   url getfile
filename   filename replaceall
printwriter out   new printwriter new fileoutputstream filename
out print document
out close
/**
* compare the output generated by wicket ("document") with the a previously
* generated file which contains the expected result.
*
* @param document
*            current output
* @param file
*            expected output
* @param clazz
*            used to load the file (relative to clazz package)
* @param wickettestcase
* @param failwithassert
* @return true, if equal
* @throws ioexception
*/
public static final boolean validatepage string document  final class clazz  final string file
boolean failwithassert  throws ioexception
string filename   clazz getpackage   getname
filename   filename replace
filename        file
inputstream in   clazz getclassloader   getresourceasstream filename
if  in    null
throw new ioexception     filename
string reference   streams readstring in
// replace all line endings with unix style line ending
reference   reference replaceall
reference   reference replaceall
// replace all line endings with unix style line ending
document   document replaceall
document   document replaceall
boolean equals   comparemarkup document  reference
if  equals    false
// change the condition to true, if you want to make the new output
// the reference output for future tests. that is, it is regarded as
// correct. it'll replace the current reference files. thus change
// it only for one test-run.
// -dwicket.replace.expected.results=true
if  boolean getboolean
in close
in   null
replaceexpectedresultfile document  clazz  file
return true
log error     file
/*  */
log error
log error reference
log error
log error document
log error
/* */
string test1   stringlist tokenize reference     toarray
string test2   stringlist tokenize document     toarray
diff df   new diff test1
revision r
try
r   df diff test2
catch  differentiationfailedexception e
throw new runtimeexception e
system out println r tostring
if  failwithassert
assert assertequals filename  reference  document
return equals
/**
* @param a
*            string a
* @param b
*            string b
* @return true if the two strings have the same markup tags
*/
private static boolean comparemarkup final string a  final string b
try
// parse a and b into markup and compare
final markup amarkup   new markupparser new xmlpullparser    parse a
final markup bmarkup   new markupparser new xmlpullparser    parse b
return amarkup equalto bmarkup
catch  ioexception e
e printstacktrace
catch  resourcestreamnotfoundexception e
e printstacktrace
return false