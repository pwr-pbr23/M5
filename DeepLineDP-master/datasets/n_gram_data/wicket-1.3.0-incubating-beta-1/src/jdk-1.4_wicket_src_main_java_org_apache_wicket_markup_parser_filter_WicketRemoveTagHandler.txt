/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup parser filter
import java text parseexception
import org apache wicket markup componenttag
import org apache wicket markup markupelement
import org apache wicket markup wickettag
import org apache wicket markup parser abstractmarkupfilter
/**
* this is a markup inline filter. it identifies preview regions useful for html
* designers to design the page. but they must be removed prior to sending the
* markup to the client. preview regions are enclosed by &lt;wicket:remove&gt;
* tags.
*
* @author juergen donnerstag
*/
public final class wicketremovetaghandler extends abstractmarkupfilter
/** flag value to use as component name for ignored components */
public static final string ignore
static
// register "wicket:remove"
wickettagidentifier registerwellknowntagname
/**
* construct.
*/
public wicketremovetaghandler
/**
* removes preview regions enclosed by &lt;wicket:remove&gt; tags. note that
* for obvious reasons, nested components are not allowed.
*
* @see org.apache.wicket.markup.parser.imarkupfilter#nexttag()
* @return the next tag to be processed. null, if not more tags are
*         available
*/
public final markupelement nexttag   throws parseexception
// get the next tag from the next markupfilter in the chain
// if null, no more tags are available
final componenttag opentag    componenttag getparent   nexttag
if  opentag    null
return opentag
// if it is not a remove tag, than we are finished
if    opentag instanceof wickettag
wickettag opentag  isremovetag
return opentag
// remove tag must not be open-close tags
if  opentag isopenclose
throw new parseexception
opentag touserdebugstring    opentag getpos
// find the corresponding close tag and remove all tags in between
componenttag closetag
while  null     closetag    componenttag getparent   nexttag
// no wicket component tags are allowed within the preview region.
// wicket components will a component name assigned.
if  closetag getid      null
continue
// the first wicket component following the preview region open
// tag, must be it's corresponding close tag.
if  closetag closes opentag
// component's named with the ignore component name will be ignored
// by markupparser and not added to the markup.
opentag setid ignore
return opentag
throw new parseexception
closetag touserdebugstring    closetag getpos
throw new parseexception
opentag touserdebugstring    opentag getpos