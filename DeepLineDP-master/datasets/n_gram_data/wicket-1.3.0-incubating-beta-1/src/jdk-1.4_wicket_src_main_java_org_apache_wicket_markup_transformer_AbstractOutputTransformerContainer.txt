/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup transformer
import org apache wicket component
import org apache wicket markupcontainer
import org apache wicket response
import org apache wicket wicketruntimeexception
import org apache wicket markup componenttag
import org apache wicket markup markupstream
import org apache wicket model imodel
import org apache wicket response stringresponse
/**
* this abstract container provides the means to post-process the markup
* generated by its child components (excluding the containers tag)
* <p>
* please see <code>ibehavior</code> for an alternativ based on ibehavior
*
* @see org.apache.wicket.markup.transformer.abstracttransformerbehavior
* @see org.apache.wicket.markup.transformer.itransformer
*
* @author juergen donnerstag
*/
public abstract class abstractoutputtransformercontainer extends markupcontainer
implements
itransformer
private static final long serialversionuid   1l
/** whether the containers tag shall be transformed as well */
private boolean transformbodyonly   true
/**
* construct
*
* @see org.apache.wicket.component#component(string)
*/
public abstractoutputtransformercontainer final string id
super id
/**
* construct
*
* @see org.apache.wicket.component#component(string, imodel)
*/
public abstractoutputtransformercontainer final string id  final imodel model
super id  model
/**
* you can choose whether the body of the tag excluding the tag shall be
* transformed or including the tag.
*
* @param value
*            if true, only the body is applied to transformation.
* @return this
*/
public markupcontainer settransformbodyonly final boolean value
this transformbodyonly   value
return this
/**
* create a new response object which is used to store the markup generated
* by the child objects.
*
* @return response object. must not be null
*/
protected response newresponse
return new stringresponse
/**
*
* @see org.apache.wicket.markup.transformer.itransformer#transform(org.apache.wicket.component,
*      java.lang.string)
*/
public abstract charsequence transform final component component  final string output
throws exception
/**
* @see org.apache.wicket.component#oncomponenttagbody(org.apache.wicket.markup.markupstream,
*      org.apache.wicket.markup.componenttag)
*/
protected final void oncomponenttagbody final markupstream markupstream
final componenttag opentag
if  this transformbodyonly    true
execute new runnable
public void run
// invoke default execution
abstractoutputtransformercontainer super oncomponenttagbody markupstream  opentag
else
super oncomponenttagbody markupstream  opentag
/**
* @see org.apache.wicket.component#onrender(markupstream)
*/
protected final void onrender final markupstream markupstream
if  this transformbodyonly    false
execute new runnable
public void run
// invoke default execution
abstractoutputtransformercontainer super onrender markupstream
else
super onrender markupstream
/**
*
* @param code
*/
private final void execute final runnable code
// temporarily replace the web response with a string response
final response webresponse   this getresponse
try
// create a new response object
final response response   newresponse
if  response    null
throw new illegalstateexception
// and make it the current one
this getrequestcycle   setresponse response
// invoke default execution
code run
try
// tranform the data
// todo post 1.2 transform also just charsequence, is this 1.2 or 1.1??
charsequence output   transform this  response tostring
webresponse write output
catch  exception ex
throw new wicketruntimeexception     this  ex
finally
// restore the original response
this getrequestcycle   setresponse webresponse