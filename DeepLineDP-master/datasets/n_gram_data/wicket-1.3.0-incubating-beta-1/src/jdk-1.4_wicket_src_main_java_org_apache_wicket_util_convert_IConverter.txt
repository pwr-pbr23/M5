/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util convert
import java util date
import java util locale
import org apache wicket iclusterable
/**
* converts input to output and vice versa. converters are needed in web
* applications because we have to switch between java objects on the server and
* strings in the browser output and input.
* <p>
* output conversion, which is handled by
* {@link #converttostring(object, locale)}, is typically used by components
* when they render, so that a date can be displayed as '12/12/2007'. input
* conversion, handled by {@link #converttoobject(string, locale)}, is
* typically used by form components to interpret incoming values such values
* are strings as they are send as request parameters from browsers. an incoming
* value could be the string '12/12/2007' which could be translated to a
* corresponding {@link date} object.
* </p>
*
* @author eelco hillenius
* @author jonathan locke
*/
public interface iconverter extends iclusterable
/**
* converts the given string value to class c.
*
* @param value
*            the string value to convert
* @param locale
*            the locale used to convert the value
* @return the converted value
*/
object converttoobject string value  locale locale
/**
* converts the given value to a string.
*
* @param value
*            the value to convert
* @param locale
*            the locale used to convert the value
*
* @return the converted string value
*/
string converttostring object value  locale locale