/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket request target component
import org apache wicket component
import org apache wicket page
import org apache wicket pageparameters
import org apache wicket requestcycle
import org apache wicket requestlistenerinterface
import org apache wicket wicketruntimeexception
import org apache wicket protocol http request webrequestcodingstrategy
import org apache wicket util string appendingstringbuffer
import org apache wicket util string strings
/**
* request target for bookmarkable page links that also contain component path
* and interface name. this is used for stateless forms and stateless links.
*
* @author matej knopp
*/
public class bookmarkablelistenerinterfacerequesttarget extends bookmarkablepagerequesttarget
private string componentpath
private string interfacename
/**
* this constructor is called when a stateless link is clicked on but the
* page wasn't found in the session. then this class will recreate the page
* and call the interface method on the component that is targetted with the
* component path.
*
* @param pagemapname
* @param pageclass
* @param pageparameters
* @param componentpath
* @param interfacename
*/
public bookmarkablelistenerinterfacerequesttarget string pagemapname  class pageclass
pageparameters pageparameters  string componentpath  string interfacename
super pagemapname  pageclass  pageparameters
this componentpath   componentpath
this interfacename   interfacename
/**
* this constructor is called for generating the urls
* (requestcycle.urlfor()) so it will alter the pageparameters to include
* the 2 org.apache.wicket params
* {@link webrequestcodingstrategy#bookmarkable_page_parameter_name} and
* {@link webrequestcodingstrategy#interface_parameter_name}
*
* @param pagemapname
* @param pageclass
* @param pageparameters
* @param component
* @param listenerinterface
*/
public bookmarkablelistenerinterfacerequesttarget string pagemapname  class pageclass
pageparameters pageparameters  component component
requestlistenerinterface listenerinterface
this pagemapname  pageclass  pageparameters  component getpath    listenerinterface
getname
int version   component getpage   getcurrentversionnumber
// add the wicket:interface param to the params.
appendingstringbuffer param   new appendingstringbuffer 4   componentpath length
interfacename length
if  pagemapname    null
param append pagemapname
param append component path_separator
param append getcomponentpath
param append component path_separator
if  version    0
param append version
param append component path_separator
param append getinterfacename
param append component path_separator
pageparameters put webrequestcodingstrategy interface_parameter_name  param tostring
public void processevents requestcycle requestcycle
page page   getpage requestcycle
final string pagerelativecomponentpath   strings afterfirstpathcomponent componentpath
component path_separator
component component   page get pagerelativecomponentpath
if  component    null
throw new wicketruntimeexception
pagerelativecomponentpath       page
requestlistenerinterface listenerinterface   requestlistenerinterface
forname interfacename
if  listenerinterface    null
throw new wicketruntimeexception     interfacename
listenerinterface invoke page  component
public void respond requestcycle requestcycle
getpage requestcycle  renderpage
/**
* @return the component path.
*/
public string getcomponentpath
return componentpath
/**
* @return the interface name
*/
public string getinterfacename
return interfacename