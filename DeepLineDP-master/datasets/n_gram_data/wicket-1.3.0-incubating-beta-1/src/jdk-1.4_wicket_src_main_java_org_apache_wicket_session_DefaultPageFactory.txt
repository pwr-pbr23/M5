/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket session
import java lang reflect constructor
import java lang reflect invocationtargetexception
import java util map
import org apache wicket abortexception
import org apache wicket ipagefactory
import org apache wicket page
import org apache wicket pageparameters
import org apache wicket wicketruntimeexception
import org apache wicket authorization authorizationexception
import org apache wicket markup markupexception
import org apache wicket util concurrent concurrenthashmap
/**
* a factory that constructs pages.
*
* @see org.apache.wicket.settings.isessionsettings#setpagefactory(ipagefactory)
* @see ipagefactory
*
* @author juergen donnerstag
* @author jonathan locke
*/
public final class defaultpagefactory implements ipagefactory
/** map of constructors for page subclasses */
private final map constructorforclass   new concurrenthashmap
/**
* @see ipagefactory#newpage(class)
*/
public final page newpage final class pageclass
try
// throw an exception in case default constructor is missing
// => improved error message
pageclass getconstructor  class null
return  page pageclass newinstance
catch  nosuchmethodexception e
// a bit of a hack here..
constructor constructor   constructor pageclass  pageparameters class
if  constructor    null
return newpage constructor  new pageparameters
else
throw new wicketruntimeexception     pageclass
e
catch  instantiationexception e
throw new wicketruntimeexception     pageclass  e
catch  illegalaccessexception e
throw new wicketruntimeexception     pageclass  e
/**
* @see ipagefactory#newpage(class, pageparameters)
*/
public final page newpage final class pageclass  final pageparameters parameters
// try to get constructor that takes pageparameters
constructor constructor   constructor pageclass  pageparameters class
// if we got a pageparameters constructor
if  constructor    null
// return new page(parameters)
return newpage constructor  parameters
// always try default constructor if one exists
return newpage pageclass
/**
* looks up a one-arg page constructor by class and argument type.
*
* @param pageclass
*            the class of page
* @param argumenttype
*            the argument type
* @return the page constructor, or null if no one-arg constructor can be
*         found taking the given argument type.
*/
private final constructor constructor final class pageclass  final class argumenttype
// get constructor for page class from cache
constructor constructor    constructor constructorforclass get pageclass
// need to look up?
if  constructor    null
try
// try to find the constructor
constructor   pageclass getconstructor new class   argumenttype
// store it in the cache
constructorforclass put pageclass  constructor
catch  nosuchmethodexception e
return null
return constructor
/**
* creates a new page using the given constructor and argument.
*
* @param constructor
*            the constructor to invoke
* @param argument
*            the argument to pass to the constructor
* @return the new page
* @throws wicketruntimeexception
*             thrown if the page cannot be instantiated using the given
*             constructor and argument.
*/
private final page newpage final constructor constructor  final object argument
try
return  page constructor newinstance new object   argument
catch  instantiationexception e
throw new wicketruntimeexception
constructor       argument  e
catch  illegalaccessexception e
throw new wicketruntimeexception
constructor       argument  e
catch  invocationtargetexception e
// honor redirect exception contract defined in ipagefactory
if  e gettargetexception   instanceof abortexception
e gettargetexception   instanceof authorizationexception
e gettargetexception   instanceof markupexception
throw  runtimeexception e gettargetexception
throw new wicketruntimeexception
constructor       argument  e