/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket ajax markup html navigation paging
import org apache wicket ajax ajaxrequesttarget
import org apache wicket ajax markup html iajaxlink
import org apache wicket markup html navigation paging ipageable
import org apache wicket markup html navigation paging pagingnavigationlink
/**
* an ajax version of a link to a page of a pageablelistview.
*
* @since 1.2
*
* @author martijn dashorst
*/
public class ajaxpagingnavigationlink extends pagingnavigationlink implements iajaxlink
private static final long serialversionuid   1l
/**
* constructor.
*
* @param id
*            see component
* @param pageable
*            the pageable component for this page link
* @param pagenumber
*            the page number in the pageablelistview that this link links
*            to. negative pagenumbers are relative to the end of the list.
*/
public ajaxpagingnavigationlink final string id  final ipageable pageable  final int pagenumber
super id  pageable  pagenumber
add new ajaxpagingnavigationbehavior this  pageable
setoutputmarkupid true
/**
* fallback event listener, will redisplay the current page.
*
* @see org.apache.wicket.markup.html.link.link#onclick()
*/
public void onclick
onclick null
// we do not need to redirect
setredirect false
// return the the current page.
setresponsepage getpage
/**
* performs the actual action of this component, performing a non-ajax
* fallback when there was no ajaxrequesttarget available.
*
* @param target
*            the request target, when <code>null</code>, a full page
*            refresh will be generated
*/
public void onclick ajaxrequesttarget target
pageable setcurrentpage getpagenumber