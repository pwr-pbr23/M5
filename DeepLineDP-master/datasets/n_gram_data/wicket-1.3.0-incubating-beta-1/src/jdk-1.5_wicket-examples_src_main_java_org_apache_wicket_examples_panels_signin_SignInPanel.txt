/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples panels signin
import org apache wicket pageparameters
import org apache wicket markup html webmarkupcontainer
import org apache wicket markup html form checkbox
import org apache wicket markup html form form
import org apache wicket markup html form passwordtextfield
import org apache wicket markup html form textfield
import org apache wicket markup html panel feedbackpanel
import org apache wicket markup html panel panel
import org apache wicket model propertymodel
import org apache wicket util value valuemap
/**
* reusable user sign in panel with username and password as well as support for
* cookie persistence of the both. when the signinpanel's form is submitted, the
* abstract method signin(string, string) is called, passing the username and
* password submitted. the signin() method should sign the user in and return
* null if no error ocurred, or a descriptive string in the event that the sign
* in fails.
*
* @author jonathan locke
* @author juergen donnerstag
* @author eelco hillenius
*/
public abstract class signinpanel extends panel
/** true if the panel should display a remember-me checkbox */
private boolean includerememberme   true
/** field for password. */
private passwordtextfield password
/** true if the user should be remembered via form persistence (cookies) */
private boolean rememberme   true
/** field for user name. */
private textfield username
/**
* sign in form.
*/
public final class signinform extends form
/** el-cheapo model for form. */
private final valuemap properties   new valuemap
/**
* constructor.
*
* @param id
*            id of the form component
*/
public signinform final string id
super id
// attach textfield components that edit properties map
// in lieu of a formal beans model
add username   new textfield    new propertymodel properties
add password   new passwordtextfield    new propertymodel properties
// markupcontainer row for remember me checkbox
webmarkupcontainer remembermerow   new webmarkupcontainer
add remembermerow
// add rememberme checkbox
remembermerow add new checkbox    new propertymodel signinpanel this
// make form values persistent
setpersistent rememberme
// show remember me checkbox?
remembermerow setvisible includerememberme
/**
* @see org.apache.wicket.markup.html.form.form#onsubmit()
*/
public final void onsubmit
if  signin getusername    getpassword
// if login has been called because the user was not yet
// logged in, than continue to the original destination,
// otherwise to the home page
if   continuetooriginaldestination
setresponsepage getapplication   getsessionsettings   getpagefactory   newpage
getapplication   gethomepage     pageparameters null
else
// try the component based localizer first. if not found try the
// application localizer. else use the default
final string errmsg   getlocalizer   getstring    this
error errmsg
/**
* @see org.apache.wicket.component#component(string)
*/
public signinpanel final string id
this id  true
/**
* @param id
*            see component constructor
* @param includerememberme
*            true if form should include a remember-me checkbox
* @see org.apache.wicket.component#component(string)
*/
public signinpanel final string id  final boolean includerememberme
super id
this includerememberme   includerememberme
// create feedback panel and add to page
final feedbackpanel feedback   new feedbackpanel
add feedback
// add sign-in form to page, passing feedback panel as
// validation error handler
add new signinform
/**
* removes persisted form data for the signin panel (forget me)
*/
public final void forgetme
// remove persisted user data. search for child component
// of type signinform and remove its related persistence values.
getpage   removepersistedformdata signinpanel signinform class  true
/**
* convenience method to access the password.
*
* @return the password
*/
public string getpassword
return password getmodelobjectasstring
/**
* get model object of the rememberme checkbox
*
* @return true if user should be remembered in the future
*/
public boolean getrememberme
return rememberme
/**
* convenience method to access the username.
*
* @return the user name
*/
public string getusername
return username getmodelobjectasstring
/**
* convenience method set persistence for username and password.
*
* @param enable
*            whether the fields should be persistent
*/
public void setpersistent boolean enable
username setpersistent enable
password setpersistent enable
/**
* set model object for rememberme checkbox
*
* @param rememberme
*/
public void setrememberme boolean rememberme
this rememberme   rememberme
this setpersistent rememberme
/**
* sign in user if possible.
*
* @param username
*            the username
* @param password
*            the password
* @return true if signin was successful
*/
public abstract boolean signin final string username  final string password