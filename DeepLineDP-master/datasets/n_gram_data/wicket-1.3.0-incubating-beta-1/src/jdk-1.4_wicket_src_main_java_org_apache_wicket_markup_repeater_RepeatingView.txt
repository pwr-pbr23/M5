/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup repeater
import java util iterator
import org apache wicket component
import org apache wicket model imodel
/**
* <p>
* a repeater view that renders all of its children, using its body markup, in
* the order they were added.
*
* </p>
* example:
* <p>
* <u>java:</u>
*
* <pre>
* repeatingview view = new repeatingview(&quot;repeater&quot;);
* view.add(new label(&quot;1&quot;, &quot;hello&quot;));
* view.add(new label(&quot;2&quot;, &quot;goodbye&quot;));
* view.add(new label(&quot;3&quot;, &quot;good morning&quot;));
* </pre>
*
* </p>
* <p>
* <u>markup:</u>
*
* <pre>
*  &lt;ul&gt;&lt;li wicket:id=&quot;repeater&quot;&gt;&lt;/li&gt;&lt;/ul&gt;
* </pre>
*
* </p>
* <p>
* <u>yields:</u>
*
* <pre>
*  &lt;ul&gt;&lt;li&gt;goodbye&lt;/li&gt;&lt;li&gt;hello&lt;/li&gt;&lt;li&gt;good morning&lt;/li&gt;&lt;/ul&gt;
* </pre>
*
* to expand a bit: the repeater itself produces no markup, instead every direct
* child inherits the entire markup of the repeater. in the example above
* reeaters's markup is:
*
* <pre>
*  &lt;li wicket:id=&quot;repeater&quot;&gt;&lt;/li&gt;
* </pre>
*
* and so this is the markup that is available to the direct children - the
* label components. so as each label renders it produces a line of the output
* that has the <code>li</code>tag.
*
*
* @author igor vaynberg ( ivaynberg )
*
*/
public class repeatingview extends abstractrepeater
/**
*
*/
private static final long serialversionuid   1l
/** counter used for generating unique child component ids. */
private long childidcounter   0
/** @see component#component(string) */
public repeatingview string id
super id
/** @see component#component(string, imodel) */
public repeatingview string id  imodel model
super id  model
/**
* generates a unique id string. this makes it easy to add items to be
* rendered w/out having to worry about generating unique id strings in your
* code.
*
* @return unique child id
*/
public string newchildid
childidcounter
if  childidcounter    long max_value
// mmm yeah...like this will ever happen
throw new runtimeexception
return string valueof childidcounter
/**
* @see org.apache.wicket.markup.repeater.abstractrepeater#renderiterator()
*/
protected iterator renderiterator
return iterator