/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples hangman
import org apache wicket attributemodifier
import org apache wicket markup html basic label
import org apache wicket markup html image image
import org apache wicket markup html link link
import org apache wicket markup html list listitem
import org apache wicket markup html list listview
import org apache wicket model model
import org apache wicket model propertymodel
/**
* the main guess page for the hangman application.
*
* @author chris turner
* @author jonathan locke
*/
public class guess extends hangmanpage
/**
* create the guess page.
*/
public guess
// components for displaying the guesses remaining & the hangman
add new label    new propertymodel getgame
// components for displaying the current word
add new label    new model
public object getobject
return getgame   getword   asstring true
// show the game's letters
add new listview    getgame   getletters
protected void populateitem final listitem listitem
final letter letter    letter listitem getmodelobject
final link link   new link
@override
protected void onattach
super onattach
// set enable state of link
setautoenable false
setenabled  letter isguessed
public void onclick
// guess the letter
getgame   guess letter
// is the game over?
if  getgame   iswon
// redirect to win page
setresponsepage new win
else if  getgame   islost
// redirect to lose page
setresponsepage new lose
else
// return to guess page with new state to display
link
add new attributemodifier    true  new model
letter asstring
link add new image    letter getsharedimageresource
listitem add link