/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util parse metapattern parsers
import org apache wicket util parse metapattern group
import org apache wicket util parse metapattern metapattern
import org apache wicket util parse metapattern optionalmetapattern
/**
* parses xml tag names and attribute names which may include optional
* namespaces like "namespace:name" or "name". both ":name" and "namespace:" are
* not allowed. both, the namespace and the name have to follow naming rules for
* variable names (identifier).
*
* @author jonathan locke
* @author juergen donnerstag
*/
public final class tagnameparser extends metapatternparser
/** namespaces must comply with variable name guidelines */
private static final group namespacegroup   new group metapattern variable_name
/** tag names must comply with xml ncname guidelines */
private static final group namegroup   new group metapattern xml_element_name
/** pattern for tag names with optional namespace: (namespace:)?name */
private static final metapattern pattern   new metapattern new metapattern
new optionalmetapattern new metapattern   namespacegroup  metapattern colon
namegroup
/**
* constructs a tag name parser for a given input character sequence.
*
* @param input
*            the input to parse
*/
public tagnameparser final charsequence input
super pattern  input
/**
* get the namespace part (eg 'html' in 'html:form') converted to all lower
* case characters.
*
* @return the namespace part. will be null, if optonal namespace was not
*         found
*/
public string getnamespace
final string namespace   namespacegroup get matcher
if  namespace    null
return namespace tolowercase
return namespace
/**
* gets the tag name part (eg 'form' in 'html:form' or 'form')
*
* @return the name part
*/
public string getname
return namegroup get matcher