/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html
import java util hashset
import java util set
import org apache wicket util lang packages
/**
* default implementation of {@link ipackageresourceguard}. by default, the
* extensions 'properties', 'html', 'class' and 'java' are blocked.
*
* @author eelcohillenius
*/
public class packageresourceguard implements ipackageresourceguard
/** set of extensions that are not allowed access. */
private set blockedextensions   new hashset 4
/**
* construct.
*/
public packageresourceguard
blockedextensions add
blockedextensions add
blockedextensions add
/**
* @see org.apache.wicket.markup.html.ipackageresourceguard#accept(java.lang.class,
*      java.lang.string)
*/
public boolean accept class scope  string path
string absolutepath   packages absolutepath scope  path
return acceptabsolutepath absolutepath
/**
* whether the provided absolute path is accepted.
*
* @param path
*            the absolute path, starting from the class root (packages are
*            seperated with forward slashes instead of dots).
* @return true if accepted, false otherwise.
*/
protected boolean acceptabsolutepath string path
int ixextension   path lastindexof
int len   path length
final string ext
if  ixextension <  0    ixextension    len     path lastindexof      1     ixextension
ext   null
else
ext   path substring ixextension   1  tolowercase
if    equals ext     getclass   getclassloader   getresource path replaceall           null
return false
return acceptextension ext
/**
* whether the provided extension is accepted.
*
* @param extension
*            the extension, starting from the class root (packages are
*            seperated with forward slashes instead of dots).
* @return true if accepted, false otherwise.
*/
protected boolean acceptextension string extension
return   blockedextensions contains extension
/**
* gets the set of extensions that are not allowed access.
*
* @return the set of extensions that are not allowed access
*/
protected final set getblockedextensions
return blockedextensions
/**
* sets the set of extensions that are not allowed access.
*
* @param blockedextensions
*            set of extensions that are not allowed access
*/
protected final void setblockedextensions set blockedextensions
this blockedextensions   blockedextensions