/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket protocol http
import org apache wicket wicketruntimeexception
/**
* factory that creates application objects based on the class name specified in
* the app_class_param context variable.
*
* @author igor vaynberg (ivaynberg)
*/
public class contextparamwebapplicationfactory implements iwebapplicationfactory
/**
* context parameter name that must contain the class name of the
* application
*/
public final string app_class_param
/** @see iwebapplicationfactory#createapplication(wicketfilter) */
public webapplication createapplication wicketfilter filter
final string applicationclassname   filter getfilterconfig   getinitparameter
app_class_param
if  applicationclassname    null
throw new wicketruntimeexception
app_class_param
wicketfilter app_fact_param
return createapplication applicationclassname
/**
* instantiates the application instance.
*
* @param applicationclassname
*            the classname of the application to create
* @return the web application
*/
private webapplication createapplication final string applicationclassname
try
classloader loader   thread currentthread   getcontextclassloader
if  loader    null
loader   getclass   getclassloader
final class applicationclass   loader loadclass applicationclassname
if  webapplication class isassignablefrom applicationclass
// construct webapplication subclass
return  webapplication applicationclass newinstance
else
throw new wicketruntimeexception     applicationclassname
catch  classnotfoundexception e
throw new wicketruntimeexception
applicationclassname  e
catch  instantiationexception e
throw new wicketruntimeexception
applicationclassname  e
catch  illegalaccessexception e
throw new wicketruntimeexception
applicationclassname  e
catch  securityexception e
throw new wicketruntimeexception
applicationclassname  e