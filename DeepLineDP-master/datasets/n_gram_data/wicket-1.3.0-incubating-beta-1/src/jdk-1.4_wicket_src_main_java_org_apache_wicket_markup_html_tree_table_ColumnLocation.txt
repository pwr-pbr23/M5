/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html tree table
import org apache wicket iclusterable
import org apache wicket util lang enumeratedtype
/**
* this class represents location of a column in tree table.
* <p>
* first attribute of location is <b>alignment</b>. alignment specifies,
* whether the column is located on the left side of the table, on the right
* side, or in the middle. columns in the middle of the table take all space
* between columns on the left and columns on the right.
* <p>
* next two attributes are <b>size</b> and <b>unit</b>:
* <ul>
* <li> for columns aligned to the left and to the right, the <b>size</b>
* represents the actual width of the column, according to chosen unit. possible
* units for left and right aligned columns are <em>px</em>, <em>em</em>
* and <em>percent</em>. </li>
* <li> for columns in the middle, the only valid unit is <em>proportional</em>.
* these columns take all available space between columns on the left and
* columns on the right. how this space is divided between middle columns is
* determined by the <b>size</b>. in this case the size can be understand as
* weight. columns with bigger size take more space than columns with smaller
* size. for example, if there are three columns and their sizes are 2, 1, 1,
* the first column thakes 50% of the space and the second two columns take 25%
* each. </li>
* </ul>
*
* @author matej knopp
*/
public class columnlocation implements iclusterable
/**
* alignment of the column.
*/
public static final class alignment extends enumeratedtype
/** align left. */
public static final alignment left   new alignment
/** align middle. */
public static final alignment middle   new alignment
/** align right. */
public static final alignment right   new alignment
private static final long serialversionuid   1l
/**
* construct.
*
* @param name
*/
public alignment string name
super name
/**
* units.
*/
public static final class unit extends enumeratedtype
/** size of letter m in the current font. */
public static unit em   new unit
/** percentage. */
public static unit percent   new unit
/** proportional. */
public static unit proportional   new unit
/** pixels. */
public static unit px   new unit
private static final long serialversionuid   1l
/**
* construct.
*
* @param name
*/
public unit string name
super name
private static final long serialversionuid   1l
private alignment alignment
private int size
private unit unit
/**
* constructs the columnlocation object.
*
* @param alignment
*            the column alignment
* @param size
*            the column size in expressed in the provided unit
* @param unit
*            the unit that the size argument is expressed in
* @throws illegalargumentexception
*             if the unit does not matche the alignment
*/
public columnlocation alignment alignment  int size  unit unit
this alignment   alignment
this size   size
this unit   unit
if  alignment    alignment middle    unit    unit proportional
throw new illegalargumentexception
else if  alignment    alignment middle    unit    unit proportional
throw new illegalargumentexception
/**
* returns the allignment of this column.
*
* @return the alignment of this column
*/
public alignment getalignment
return alignment
/**
* returns the size of this column.
*
* @return the size of this column
*/
public int getsize
return size
/**
* returns the unit of a column.
*
* @return the unit of this column
*/
public unit getunit
return unit