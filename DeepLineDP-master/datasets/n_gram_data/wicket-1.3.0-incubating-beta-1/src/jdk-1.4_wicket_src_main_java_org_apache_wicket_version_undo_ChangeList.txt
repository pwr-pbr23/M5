/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket version undo
import java util arraylist
import java util list
import org apache commons logging log
import org apache commons logging logfactory
import org apache wicket component
import org apache wicket iclusterable
/**
* a changelist is a sequence of changes that can be undone.
*
* @author jonathan locke
*/
class changelist implements iclusterable
private static final long serialversionuid   1l
/** log. */
private static final log log   logfactory getlog changelist class
/** the changes. */
private list changes   new arraylist
/**
* a component was added.
* @param component the added component
*/
void componentadded component component
changes add new add component
/**
* a model is about to change.
* @param component the component of which the model changed
*/
void componentmodelchanging component component
changes add new modelchange component
/**
* the state of a component is about to change.
* @param change the change object
*/
void componentstatechanging change change
if  log isdebugenabled
log debug     change
changes add change
/**
* a component was removed from its parent.
* @param component the component that was removed
*/
void componentremoved component component
changes add new remove component
void add changelist list
changes addall list changes
/**
* undo changes (rollback).
*/
void undo
// go through changes in reverse time order to undo
for  int i   changes size     1  i >  0  i
change changes get i   undo
/**
* @see java.lang.object#tostring()
*/
public string tostring
return changes tostring