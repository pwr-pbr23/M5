/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util upload
import java util list
import javax servlet http httpservletrequest
/**
* <p>
* high level api for processing file uploads.
* </p>
*
* <p>
* this class handles multiple files per single html widget, sent using
* <code>multipart/mixed</code> encoding type, as specified by <a
* href="http://www.ietf.org/rfc/rfc1867.txt">rfc 1867</a>. use {@link
* #parserequest(httpservletrequest)} to acquire a list of {@link
* org.apache.wicket.util.upload.fileitem}s associated with a given html widget.
* </p>
*
* <p>
* how the data for individual parts is stored is determined by the factory used
* to create them; a given part may be in memory, on disk, or somewhere else.
* </p>
*
* @author <a href="mailto:rafal.krzewski@e-point.pl">rafal krzewski</a>
* @author <a href="mailto:dlr@collab.net">daniel rall</a>
* @author <a href="mailto:jvanzyl@apache.org">jason van zyl</a>
* @author <a href="mailto:jmcnally@collab.net">john mcnally</a>
* @author <a href="mailto:martinc@apache.org">martin cooper</a>
* @author sean c. sullivan
*/
public class servletfileupload extends fileupload
// ---------------------------------------------------------- class methods
/**
* utility method that determines whether the request contains multipart
* content.
*
* @param request
*            the servlet request to be evaluated. must be non-null.
*
* @return <code>true</code> if the request is multipart;
*         <code>false</code> otherwise.
*/
public static final boolean ismultipartcontent httpservletrequest request
if     equals request getmethod   tolowercase
return false
return fileuploadbase ismultipartcontent new servletrequestcontext request
// ----------------------------------------------------------- constructors
/**
* constructs an uninitialised instance of this class. a factory must be
* configured, using <code>setfileitemfactory()</code>, before attempting
* to parse requests.
*/
public servletfileupload
super
/**
* constructs an instance of this class which uses the supplied factory to
* create <code>fileitem</code> instances.
*
* @param fileitemfactory
*/
public servletfileupload fileitemfactory fileitemfactory
super fileitemfactory
// --------------------------------------------------------- public methods
/**
* processes an <a href="http://www.ietf.org/rfc/rfc1867.txt">rfc 1867</a>
* compliant <code>multipart/form-data</code> stream.
*
* @param request
*            the servlet request to be parsed.
*
* @return a list of <code>fileitem</code> instances parsed from the
*         request, in the order that they were transmitted.
*
* @exception fileuploadexception
*                if there are problems reading/parsing the request or
*                storing files.
*/
public list    fileitem   parserequest httpservletrequest request  throws fileuploadexception
return parserequest new servletrequestcontext request