/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket settings
import java util list
import org apache wicket markup html webpage
import org apache wicket markup resolver autocomponentresolver
import org apache wicket markup resolver icomponentresolver
/**
* interface for page related settings.
*
* @author igor vaynberg (ivaynberg)
* @author eelco hillenius
*/
public interface ipagesettings
/**
* adds a component resolver to the list.
*
* @param resolver
*            the {@link icomponentresolver} that is added
*/
void addcomponentresolver icomponentresolver resolver
/**
* get the (modifiable) list of icomponentresolvers.
*
* @see autocomponentresolver for an example
* @return list of componentresolvers
*/
list getcomponentresolvers
/**
* gets whether wicket should try to support opening multiple windows for
* the same session transparently. if this is true - the default setting -,
* wicket tries to detect whether a new window was opened by a user (e.g. in
* internet explorer by pressing ctrl+n or ctrl+click on a link), and if it
* detects that, it creates a new page map for that window on the fly. as a
* page map represents the 'history' of one window, each window will then
* have their own history. if two windows would share the same page map, the
* non-bookmarkable links on one window could refer to stale state after
* working a while in the other window.
* <p>
* <strong> currently, wicket trying to do this is a best effort that is not
* completely fail safe. when the client does not support cookies, support
* gets tricky and incomplete. see {@link webpage}'s internals for the
* implementation. </strong>
* </p>
*
* @return whether wicket should try to support multiple windows
*         transparently
*/
boolean getautomaticmultiwindowsupport
/**
* @return returns the pagesversionedbydefault.
*/
boolean getversionpagesbydefault
/**
* @param pagesversionedbydefault
*            the pagesversionedbydefault to set.
*/
void setversionpagesbydefault boolean pagesversionedbydefault
/**
* sets whether wicket should try to support opening multiple windows for
* the same session transparently. if this is true - the default setting -,
* wicket tries to detect whether a new window was opened by a user (e.g. in
* internet explorer by pressing ctrl+n or ctrl+click on a link), and if it
* detects that, it creates a new page map for that window on the fly. as a
* page map represents the 'history' of one window, each window will then
* have their own history. if two windows would share the same page map, the
* non-bookmarkable links on one window could refer to stale state after
* working a while in the other window.
* <p>
* <strong> currently, wicket trying to do this is a best effort that is not
* completely fail safe. when the client does not support cookies, support
* gets tricky and incomplete. see {@link webpage}'s internals for the
* implementation. </strong>
* </p>
*
* @param automaticmultiwindowsupport
*            whether wicket should try to support multiple windows
*            transparently
*/
void setautomaticmultiwindowsupport boolean automaticmultiwindowsupport