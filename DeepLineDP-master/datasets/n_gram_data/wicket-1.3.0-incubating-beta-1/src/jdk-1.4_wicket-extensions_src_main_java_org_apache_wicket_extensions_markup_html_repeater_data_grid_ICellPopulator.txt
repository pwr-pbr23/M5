/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket extensions markup html repeater data grid
import org apache wicket iclusterable
import org apache wicket markup repeater item
import org apache wicket model idetachable
import org apache wicket model imodel
/**
* represents an object that is capable of populating an {@link item} container
* representing a cell in a {@link datagridview} with components.
* <p>
* example
* <p>
*
* <pre>
* class namepopulator implements icellpopulator
* {
* void populateitem(final item cellitem, final string componentid, final imodel rowmodel) {
*       user user=(user)rowmodel.getobject(cellitem);
*       string name=user.getfirstname()+&quot; &quot;+user.getlastname();
*       cellitem.add(new label(componentid, name);
*     }}
* </pre>
*
* in this example the idataprovider assigned to the datagridview retrieves user
* objects from the database. the cell populator adds a label to the cell that
* will display the full name of the user.
*
* @see datagridview
* @see item
*
* @author igor vaynberg (ivaynberg)
*
*/
public interface icellpopulator extends iclusterable  idetachable
/**
* method used to populate a cell in the {@link datagridview}
*
* <b>implementation must add a component to the cellitem using the
* component id provided by componentid argument, otherwise a
* wicketruntimeexception will be thrown</b>
*
* @param cellitem
*            the item representing the current table cell being rendered
* @param componentid
*            the id of the component used to render the cell (only one
*            component should be added to the cell)
* @param rowmodel
*            the model of the row item being rendered. this model usually
*            contains the model provided by the data provider.
*
* @see item
*/
void populateitem final item cellitem  final string componentid  final imodel rowmodel