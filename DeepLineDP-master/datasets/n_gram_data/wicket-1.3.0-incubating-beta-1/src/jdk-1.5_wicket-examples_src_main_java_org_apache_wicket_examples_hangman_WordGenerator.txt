/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples hangman
import java io ioexception
import java util arrays
import java util collections
import java util list
import java util locale
import org apache wicket iclusterable
import org apache wicket util io streams
import org apache wicket util resource iresourcestream
import org apache wicket util resource resourcestreamnotfoundexception
import org apache wicket util resource locator resourcestreamlocator
/**
* the word generator is responsible for reading in a list of words from a data
* file and serving them up in a random order. the generator keeps a state
* record of which words it has served and randomises them again when the last
* word has been served.
*
* @author chris turner
* @version 1.0
*/
public class wordgenerator implements iclusterable
/** list of words */
private final list words
/** index into words */
private int index
/**
* create the word generator, loading the words and preparing them for
* serving.
*/
public wordgenerator
try
final iresourcestream resource   new resourcestreamlocator   locate null
locale getdefault
final string wordlist   streams readstring resource getinputstream
this words   arrays aslist wordlist split
shuffle
catch  ioexception e
throw new runtimeexception
catch  resourcestreamnotfoundexception e
throw new runtimeexception
/**
* create the word generator using the supplied array of words as the word
* source to use.
*
* @param words
*            the words to use
*/
public wordgenerator final string words
this words   arrays aslist words
shuffle
/**
* returns the next word from the word generator.
*
* @return the next word
*/
public word next
if  index    words size
shuffle
return new word  string words get index
/**
* get the number of words that were discovered.
*
* @return the number of words
*/
public int size
return words size
/**
* randomises the list of loaded words and sets the index back to the
* beginning of the word list.
*/
private void shuffle
collections shuffle words
index   0