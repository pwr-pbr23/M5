/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util parse metapattern
import java util regex matcher
/**
* a group that captures floating point values (doubles and floats).
*
* @author jonathan locke
*/
public final class floatingpointgroup extends group
private static final long serialversionuid   1l
/**
* constructs an floatingpointgroup that parses strings that match the
* floating_point_number pattern.
*
* @see metapattern#floating_point_number
*/
public floatingpointgroup
super floating_point_number
/**
* @param matcher
*            the matcher
* @return the value
*/
public float getfloat final matcher matcher
return getfloat matcher   1
/**
* gets float by parsing the string matched by this capturing group.
*
* @param matcher
*            the matcher
* @param defaultvalue
*            the default value to use if this group is omitted because it
*            is optional
* @return the parsed value
*/
public float getfloat final matcher matcher  final float defaultvalue
final string value   get matcher
return value    null ? defaultvalue   float parsefloat value
/**
* @param matcher
*            the matcher
* @return the value
*/
public double getdouble final matcher matcher
return getdouble matcher   1
/**
* gets double by parsing the string matched by this capturing group.
*
* @param matcher
*            the matcher
* @param defaultvalue
*            the default value to use if this group is omitted because it
*            is optional
* @return the parsed value
*/
public double getdouble final matcher matcher  final double defaultvalue
final string value   get matcher
return value    null ? defaultvalue   double parsedouble value