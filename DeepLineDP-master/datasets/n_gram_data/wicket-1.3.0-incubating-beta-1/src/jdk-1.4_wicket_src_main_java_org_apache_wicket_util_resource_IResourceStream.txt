/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util resource
import java io ioexception
import java io inputstream
import java io serializable
import java util locale
import org apache wicket protocol http webresponse
import org apache wicket request target resource resourcestreamrequesttarget
import org apache wicket util watch imodifiable
/**
* interface to a streamed resource. the resource stream can be retrieved by
* calling getinputstream(), but the resource should later be closed by calling
* close() on the iresourcestream (as opposed to calling close on the
* inputstream returned by getinputstream()).
* <p>
* once a resource has been closed with a call to close(), it is normally
* possible to call getinputstream() again to retrieve a new input stream on the
* same resource.
* <p>
* implementations of this interface are typically unsafe for use from multiple
* threads.
*
* @author jonathan locke
*/
public interface iresourcestream extends imodifiable  serializable
/**
* gets the mime type of this resource
*
* @return the mime type of this resource, such as "image/jpeg" or
*         "text/html". return null to let
*         {@link resourcestreamrequesttarget} handle the content-type
*         automatically
* @see webresponse#detectcontenttype()
*/
string getcontenttype
/**
* gets the size of this resource
*
* @return the size of this resource in the number of bytes, or -1 if unknown
*/
long length
/**
* gets the resource stream. you should not directly close this stream.
* instead call the close() method on iresourcestream.
*
* @see iresourcestream#close()
* @return returns the inputstream.
* @throws resourcestreamnotfoundexception
*/
inputstream getinputstream   throws resourcestreamnotfoundexception
/**
* closes the resource. normally, this includes closing any underlying input
* stream returned by getinputstream().
*
* @throws ioexception
*/
void close   throws ioexception
/**
* @return the locale where this stream did resolve to
*/
locale getlocale
/**
* this method shouldn't be used for the outside, it is used by the loaders
* to set the resolved locale.
*
* @param locale
*            the locale where this stream did resolve to.
*/
void setlocale locale locale