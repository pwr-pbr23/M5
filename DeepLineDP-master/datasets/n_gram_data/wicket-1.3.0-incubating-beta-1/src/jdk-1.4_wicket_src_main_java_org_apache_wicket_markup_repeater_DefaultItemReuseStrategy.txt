/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup repeater
import java util iterator
import org apache wicket wicketruntimeexception
import org apache wicket model imodel
/**
* implementation of <code>iitemreusestrategy</code> that returns new items
* every time.
*
* @see org.apache.wicket.extensions.markup.html.repeater.refreshing.iitemreusestrategy
*
* @author igor vaynberg (ivaynberg)
*
*/
public class defaultitemreusestrategy implements iitemreusestrategy
private static final long serialversionuid   1l
private static final iitemreusestrategy instance   new defaultitemreusestrategy
/**
* @return static instance of this strategy
*/
public static iitemreusestrategy getinstance
return instance
/**
* @see org.apache.wicket.extensions.markup.html.repeater.refreshing.iitemreusestrategy#getitems(org.apache.wicket.extensions.markup.html.repeater.refreshing.iitemfactory,
*      java.util.iterator, java.util.iterator)
*/
public iterator getitems final iitemfactory factory  final iterator newmodels
final iterator existingitems
return new iterator
private int index   0
public void remove
throw new unsupportedoperationexception
public boolean hasnext
return newmodels hasnext
public object next
object next   newmodels next
if     next instanceof imodel
throw new wicketruntimeexception     imodel class getname         next getclass   getname
final imodel model    imodel next
item item   factory newitem index  model
index
return item