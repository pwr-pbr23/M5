/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html
import java util locale
import org apache wicket application
import org apache wicket resource
import org apache wicket resourcereference
/**
* a convenience class for creating resource references to static resources.
*
* @author jonathan locke
* @author eelco hillenius
*
* @deprecated use {@link resourcereference} instead. this class will be removed in wicket 2.0
*/
public class packageresourcereference extends resourcereference
private static final long serialversionuid   1l
/** pre-calculated has code for this immutable object. */
private int hash
/**
* constuctor to get a resource reference to a packaged resource.
*
* @param application
*            the application to bind to
* @param scope
*            the scope of the binding
* @param name
*            the name of the resource
* @param locale
*            the locale from which the search for the packageresource must
*            start
* @param style
*            the style of the packageresource
* @throws illegalargumentexception
*             when no corresponding resource is found
*
* @see resourcereference#resourcereference(class, string)
*/
public packageresourcereference application application  class scope  string name
locale locale  string style
super scope  name
checkexists scope  name  locale  style
sethash scope  name  locale  style
setlocale locale
setstyle style
bind application
if getresource   instanceof packageresource
setlocale    packageresource getresource    getlocale
/**
* constuctor to get a resource reference to a packaged resource.
*
* @param application
*            the application to bind to
* @param scope
*            the scope of the binding
* @param name
*            the name of the resource
* @throws illegalargumentexception
*             when no corresponding resource is found
* @see resourcereference#resourcereference(class, string)
*/
public packageresourcereference application application  class scope  string name
this application  scope  name  null  null
/**
* constuctor to get a resource reference to a packaged resource.
*
* the scope of this constructor will be the org.apache.wicket.application.class
* itself. so the shared resources key wil be "org.apache.wicket.application/name"
*
* @param application
*            the application to bind to
* @param name
*            the name of the resource
* @throws illegalargumentexception
*             when no corresponding resource is found
* @see resourcereference#resourcereference(class, string)
*/
public packageresourcereference application application  string name
this application  application class  name
/**
* constuctor to get a resource reference to a packaged resource that is
* already bound to the current applicaiton.
*
* @param scope
*            the scope of the binding
* @param name
*            the name of the resource
* @throws illegalargumentexception
*             when no corresponding resource is found
* @see resourcereference#resourcereference(class, string)
*/
public packageresourcereference class scope  string name
super scope  name
// this can't be done in the constructor because resourcereferences can
// be declared static in a class that is stored in the session.
// checkexists(scope, name, null, null);
sethash scope  name  null  null
/**
* @see java.lang.object#hashcode()
*/
public int hashcode
return hash
/**
* @see java.lang.object#equals(java.lang.object)
*/
public boolean equals object obj
if  obj instanceof packageresourcereference
packageresourcereference that    packageresourcereference obj
return checkequals this getscope    that getscope
checkequals this getname    that getname
checkequals this getlocale    that getlocale
checkequals this getstyle    that getstyle
return false
/**
* @see org.apache.wicket.resourcereference#newresource()
*/
protected resource newresource
packageresource packageresource   packageresource get getscope    getname    getlocale
getstyle
if  packageresource    null
locale   packageresource getlocale
else
throw new illegalargumentexception     getscope
getname         getlocale         getstyle
return packageresource
/**
* checks whether the packaged resource can be found. if it can't be found,
* an {@link illegalargumentexception} will be thrown. if it was found, this
* method just returns.
*
* @param scope
*            the scope of the resource
* @param name
*            the name of the resource
* @param locale
*            the optional locale for the resource
* @param style
*            the optional style for the resource
*/
private void checkexists class scope  string name  locale locale  string style
if   packageresource exists scope  name  locale  style
throw new illegalargumentexception     scope       name
locale       style
private final boolean checkequals object o1  object o2
if  o1    null
return o2    null
else if  o2    null
return false
else
return o1 equals o2
private final void sethash class scope  string name  locale locale  string style
int result   17
result   37   result    scope    null ? scope hashcode     0
result   37   result    name    null ? name hashcode     0
result   37   result    locale    null ? locale hashcode     0
result   37   result    style    null ? style hashcode     0
hash   result