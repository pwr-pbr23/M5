/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html internal
import java util arrays
import java util hashset
import java util list
import java util set
import org apache wicket requestcycle
import org apache wicket resourcereference
import org apache wicket markup html iheaderresponse
import org apache wicket markup html wicketeventreference
import org apache wicket util string javascriptutils
/**
* default implementation of the {@link iheaderresponse} interface.
*
* @author matej knopp
* @author igor vaynberg (ivaynberg)
*/
public abstract class headerresponse implements iheaderresponse
private static final long serialversionuid   1l
private final set rendered   new hashset
/**
* creates a new header response instance.
*
* @param response
*            response used to write the head elements
*/
public headerresponse
/**
* @see org.apache.wicket.markup.html.iheaderresponse#markrendered(java.lang.object)
*/
public final void markrendered object object
rendered add object
/**
* @see org.apache.wicket.markup.html.iheaderresponse#rendercssreference(org.apache.wicket.markup.html.resourcereference)
*/
public void rendercssreference resourcereference reference
charsequence url   requestcycle get   urlfor reference
rendercssreference url tostring    null
/**
* @see org.apache.wicket.markup.html.iheaderresponse#rendercssreference(org.apache.wicket.resourcereference,
*      java.lang.string)
*/
public void rendercssreference resourcereference reference  string media
charsequence url   requestcycle get   urlfor reference
rendercssreference url tostring    media
/**
* @see org.apache.wicket.markup.html.iheaderresponse#rendercssreference(java.lang.string)
*/
public void rendercssreference string url
rendercssreference url  null
/**
* @see org.apache.wicket.markup.html.iheaderresponse#rendercssreference(java.lang.string,
*      java.lang.string)
*/
public void rendercssreference string url  string media
list token   arrays aslist new object      url  media
if  wasrendered token     false
getresponse   write  stylesheet  text css  "
getresponse   write url
getresponse   write  "
if  media    null
getresponse   write  "
getresponse   write media
getresponse   write  "
getresponse   println
markrendered token
/**
* @see org.apache.wicket.markup.html.iheaderresponse#renderjavascriptreference(org.apache.wicket.markup.html.resourcereference)
*/
public void renderjavascriptreference resourcereference reference
charsequence url   requestcycle get   urlfor reference
renderjavascriptreference url tostring
/**
* @see org.apache.wicket.markup.html.iheaderresponse#renderjavascriptreference(java.lang.string)
*/
public void renderjavascriptreference string url
list token   arrays aslist new object      url
if  wasrendered token     false
javascriptutils writejavascripturl getresponse    url
markrendered token
/**
* @see org.apache.wicket.markup.html.iheaderresponse#renderjavascript(java.lang.charsequence,
*      java.lang.string)
*/
public void renderjavascript charsequence javascript  string id
list token   arrays aslist new object   javascript tostring    id
if  wasrendered token     false
javascriptutils writejavascript getresponse    javascript  id
markrendered token
/**
* @see org.apache.wicket.markup.html.iheaderresponse#renderstring(java.lang.charsequence)
*/
public void renderstring charsequence string
string token   string tostring
if  wasrendered token     false
getresponse   write string
markrendered token
/**
* @see org.apache.wicket.markup.html.iheaderresponse#wasrendered(java.lang.object)
*/
public final boolean wasrendered object object
return rendered contains object
/**
* @see org.apache.wicket.markup.html.iheaderresponse#renderondomreadyjavascript(java.lang.string)
*/
public void renderondomreadyjavascript string javascript
list token   arrays aslist new object         javascript
if  wasrendered token     false
renderjavascriptreference wicketeventreference instance
javascriptutils writejavascript getresponse
domready     javascript
markrendered token
/**
* @see org.apache.wicket.markup.html.iheaderresponse#renderonloadjavascript(java.lang.string)
*/
public void renderonloadjavascript string javascript
list token   arrays aslist new object         javascript
if  wasrendered token     false
renderjavascriptreference wicketeventreference instance
javascriptutils writejavascript getresponse
load     javascript
markrendered token