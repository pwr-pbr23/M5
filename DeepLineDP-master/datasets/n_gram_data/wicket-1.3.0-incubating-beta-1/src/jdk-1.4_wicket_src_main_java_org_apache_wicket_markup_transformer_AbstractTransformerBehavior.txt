/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup transformer
import org apache wicket component
import org apache wicket requestcycle
import org apache wicket response
import org apache wicket wicketruntimeexception
import org apache wicket behavior abstractbehavior
import org apache wicket markup componenttag
import org apache wicket response stringresponse
/**
* a ibehavior which can be added to any component. it allows to post-process
* (transform) the markup generated by the component.
*
* @see org.apache.wicket.markup.transformer.abstractoutputtransformercontainer
*
* @author juergen donnerstag
*/
public abstract class abstracttransformerbehavior extends abstractbehavior implements itransformer
private static final long serialversionuid   1l
private response webresponse
/**
* construct.
*/
public abstracttransformerbehavior
/**
* create a new response object which is used to store the markup generated
* by the child objects.
*
* @return response object. must not be null
*/
protected response newresponse
return new stringresponse
/**
* @see org.apache.wicket.behavior.ibehavior#oncomponenttag(org.apache.wicket.component,
*      org.apache.wicket.markup.componenttag)
*/
public void oncomponenttag final component component  final componenttag tag
tag put
final requestcycle requestcycle   requestcycle get
// temporarily replace the web response with a string response
this webresponse   requestcycle getresponse
// create a new response object
final response response   newresponse
if  response    null
throw new illegalstateexception
// and make it the current one
requestcycle setresponse response
/**
* @see org.apache.wicket.behavior.abstractbehavior#onrendered(org.apache.wicket.component)
*/
public void onrendered final component component
final requestcycle requestcycle   requestcycle get
try
response response   requestcycle getresponse
// tranform the data
// todo post 1.2 transform also just use a charsequence param instead of string
charsequence output   transform component  response tostring
this webresponse write output
catch  exception ex
throw new wicketruntimeexception     this  ex
finally
// restore the original response object
requestcycle setresponse this webresponse
/**
* @see org.apache.wicket.behavior.abstractbehavior#cleanup()
*/
public void cleanup
this webresponse   null
/**
* @see org.apache.wicket.behavior.abstractbehavior#onexception(org.apache.wicket.component, java.lang.runtimeexception)
*/
public void onexception component component  runtimeexception exception
if  this webresponse    null
final requestcycle requestcycle   requestcycle get
requestcycle setresponse this webresponse
/**
*
* @see org.apache.wicket.markup.transformer.itransformer#transform(org.apache.wicket.component,
*      java.lang.string)
*/
public abstract charsequence transform final component component  final string output
throws exception