/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html list
import java util list
import org apache wicket markup html navigation paging ipageable
import org apache wicket model imodel
import org apache wicket version undo change
/**
* pageablelistview is similar to listview but provides in addition pageable
* views. a pageablelistview holds pageable rows of information. the rows can be
* re-ordered and deleted, either one at a time or many at a time.
*
* @author jonathan locke
*/
public abstract class pageablelistview extends listview implements ipageable
/** the page to show. */
private int currentpage
/** number of rows per page of the list view. */
private int rowsperpage
/**
* constructor
*
* @param id
*            see component
* @param model
*            see component
* @param rowsperpage
*            number of rows to show on a page
*/
public pageablelistview final string id  final imodel model  int rowsperpage
super id  model
this rowsperpage   rowsperpage
/**
* creates a pagable list view having the given number of rows per page that
* uses the provided object as a simple model.
*
* @param id
*            see component
* @param list
*            see component
* @param rowsperpage
*            number of rows to show on a page
* @see listview#listview(string, list)
*/
public pageablelistview final string id  final list list  final int rowsperpage
super id  list
this rowsperpage   rowsperpage
/**
* gets the index of the current page being displayed by this list view.
*
* @return returns the currentpage.
*/
public final int getcurrentpage
// if first cell is out of range, bring page back into range
while   currentpage   rowsperpage  > getlist   size
currentpage
return currentpage
/**
* gets the number of pages in this list view.
*
* @return the number of pages in this list view
*/
public final int getpagecount
return   getlist   size     rowsperpage    1    rowsperpage
/**
* gets the maximum number of rows on each page.
*
* @return the maximum number of rows on each page.
*/
public final int getrowsperpage
return rowsperpage
/**
* sets the maximum number of rows on each page.
*
* @param rowsperpage the maximum number of rows on each page.
*/
public final void setrowsperpage int rowsperpage
if  rowsperpage < 0
rowsperpage   0
addstatechange new rowsperpagechange this rowsperpage
this rowsperpage   rowsperpage
/**
* @see org.apache.wicket.markup.html.list.listview#getviewsize()
*/
public int getviewsize
if  this getmodelobject      null
super setstartindex this getcurrentpage     this getrowsperpage
super setviewsize this getrowsperpage
return super getviewsize
/**
* sets the current page that this list view should show.
*
* @param currentpage
*            the currentpage to set.
*/
public final void setcurrentpage int currentpage
if  currentpage < 0
currentpage   0
int pagecount   getpagecount
if   currentpage > 0      currentpage >  pagecount
currentpage   pagecount   1
addstatechange new currentpagechange this currentpage
this currentpage   currentpage
/**
* prevent users from accidentially using it.
*
* @see org.apache.wicket.markup.html.list.listview#setstartindex(int)
* @throws unsupportedoperationexception always
*/
public listview setstartindex int startindex  throws unsupportedoperationexception
throw new unsupportedoperationexception
/**
* prevent users from accidentially using it.
*
* @param size
*            the view size
* @return this
* @throws unsupportedoperationexception always
* @see org.apache.wicket.markup.html.list.listview#setstartindex(int)
*/
public listview setviewsize int size  throws unsupportedoperationexception
throw new unsupportedoperationexception
/**
* records the changing of the current page.
*/
private class currentpagechange extends change
private static final long serialversionuid   1l
/** the former 'current' page. */
private int currentpage
/**
* construct.
* @param currentpage the former 'current' page
*/
currentpagechange int currentpage
this currentpage   currentpage
/**
* @see org.apache.wicket.version.undo.change#undo()
*/
public void undo
setcurrentpage currentpage
/**
* @see java.lang.object#tostring()
*/
public string tostring
return     currentpage
/**
* records the changing of the nbr of rows per page.
*/
private class rowsperpagechange extends change
private static final long serialversionuid   1l
/** the former nbr of rows per page. */
private int rowsperpage
/**
* construct.
* @param rowsperpage the former nbr of rows per page
*/
rowsperpagechange int rowsperpage
this rowsperpage   rowsperpage
/**
* @see org.apache.wicket.version.undo.change#undo()
*/
public void undo
setrowsperpage rowsperpage
/**
* @see java.lang.object#tostring()
*/
public string tostring
return     getpath         rowsperpage