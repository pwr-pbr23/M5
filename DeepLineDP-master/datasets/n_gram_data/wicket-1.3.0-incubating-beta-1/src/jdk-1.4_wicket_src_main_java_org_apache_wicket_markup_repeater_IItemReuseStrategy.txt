/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup repeater
import java util iterator
import org apache wicket iclusterable
/**
* interface for item reuse strategies.
* <p>
* <u>notice:</u> child items will be rendered in the order they are provided
* by the returned iterator, so it is important that the strategy preserve this
* order
* </p>
*
* @author igor vaynberg (ivaynberg)
*
*/
public interface iitemreusestrategy extends iclusterable
/**
* returns an iterator over items that will be added to the view. the
* iterator needs to return all the items because the old ones are removed
* prior to the new ones added.
*
* @param factory
*            implementation of iitemfactory
* @param newmodels
*            iterator over models for items
* @param existingitems
*            iterator over child items
* @return iterator over items that will be added after all the old items
*         are moved.
*/
iterator getitems iitemfactory factory  iterator newmodels  iterator existingitems