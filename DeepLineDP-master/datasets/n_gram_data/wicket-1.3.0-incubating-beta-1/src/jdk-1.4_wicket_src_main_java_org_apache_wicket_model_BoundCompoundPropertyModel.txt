/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket model
import java util arraylist
import org apache wicket component
import org apache wicket iclusterable
/**
* a compound property model that supports type conversions and property
* expression bindings.
*
* @author jonathan locke
*/
public class boundcompoundpropertymodel extends compoundpropertymodel
/**
* internal binding representation.
*
* @author jonathan locke
*/
private class binding implements iclusterable
private static final long serialversionuid   1l
private final component component
private final string propertyexpression
private binding final component component  final string propertyexpression
this component   component
this propertyexpression   propertyexpression
/**
* @see object#tostring()
*/
public string tostring
stringbuffer sb   new stringbuffer
sb append    append component  append
sb append    append propertyexpression  append
sb append
return sb tostring
private static final long serialversionuid   1l
/**
* list of bindings. although a map would be a more natural implementation
* here, a list is much more compact in terms of space. although it may take
* longer to find a component binding in theory, in practice it's unlikely
* that any boundcompoundpropertymodel will really have enough bindings to
* matter.
*/
private final arraylist bindings   new arraylist 1
/**
* constructor
*
* @param model
*            the model object, which may or may not implement imodel
*/
public boundcompoundpropertymodel final object model
super model
/**
* adds a property binding, using the component's id as the property
* expression.
*
* @param component
*            the component to bind
* @return the component, for convenience in adding components
*/
public component bind final component component
if  component    null
throw new illegalargumentexception
bindings add new binding component  component getid
return component
/**
* adds a property binding.
*
* @param component
*            the component to bind
* @param propertyexpression
*            a property expression pointing to the property in this model
* @return the component, for convenience in adding components
*/
public component bind final component component  final string propertyexpression
if  component    null
throw new illegalargumentexception
if  propertyexpression    null
throw new illegalargumentexception
bindings add new binding component  propertyexpression
return component
/**
* @see org.apache.wicket.model.compoundpropertymodel#detach()
*/
public void detach
super detach
// minimize the size of the bindings list
bindings trimtosize
/**
* @see org.apache.wicket.model.abstractdetachablemodel#tostring()
*/
public string tostring
stringbuffer sb   new stringbuffer super tostring
sb append
for  int i   0  size   this bindings size    i < size  i
if  i > 0
sb append
sb append bindings get i
sb append
return sb tostring
/**
* @param component
*            component to get binding for
* @return the binding information
*/
private binding getbinding final component component
for  int i   0  i < bindings size    i
final binding binding    binding bindings get i
if  component    binding component
return binding
return null
/**
* @see org.apache.wicket.model.abstractpropertymodel#propertyexpression(org.apache.wicket.component)
*/
protected string propertyexpression final component component
final binding binding   getbinding component
if  binding    null
return binding propertyexpression
else if  component    null
return component getid
return null