/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples unicodeconverter
import java util arrays
import java util list
import org apache wicket component
import org apache wicket examples wicketexamplepage
import org apache wicket markup html form dropdownchoice
import org apache wicket markup html form form
import org apache wicket markup html form textarea
import org apache wicket model compoundpropertymodel
import org apache wicket model model
import org apache wicket util string strings
/**
* converts between unescaped and escaped unicode and shows a custom model.
* handy for message bundles.
*
* @author eelco hillenius
*/
public class unicodeconverter extends wicketexamplepage
private static final string from_escaped_unicode
private static final string to_escaped_unicode
private static list translationtypes   arrays aslist new string   to_escaped_unicode
from_escaped_unicode
private string source
private string translationtype    string translationtypes get 0
/**
* model that does the conversion. note that as we 'pull' the value every
* time we render (we get the current value of message), we don't need to
* update the model itself. the alternative strategy would be to have a
* model with it's own, translated, string representation of the source,
* which should be updated on every form post (e.g. by overriding
* {@link form#onsubmit} and in that method explicitly setting the new
* value). but as you can see, this method is slighly easier, and if we
* wanted to use the translated value in e.g. a database, we could just
* query this model directly or indirectly by calling
* {@link component#getmodelobject()} on the component that holds it, and we
* would have a recent value.
*/
private final class convertermodel extends model
/**
* @see org.apache.wicket.model.imodel#getobject()
*/
public object getobject
string result
if  to_escaped_unicode equals translationtype
result   strings toescapedunicode source
else
result   strings fromescapedunicode source
return result
/**
* @see org.apache.wicket.model.imodel#setobject(java.lang.object)
*/
public void setobject object object
// ignore. we are not interested in updating any value,
// and we don't want to throw an exception like
// abstractreadonlymodel either. alternatively, we
// could have overriden updatemodel of forminputcomponent
// and ignore any input there.
/**
* constructor.
*/
public unicodeconverter
form form   new form    new compoundpropertymodel this
form add new textarea
form add new dropdownchoice    translationtypes
form add new textarea    new convertermodel
add form
/**
* @return the source to translate
*/
public string getsource
return source
/**
* @param source
*            the source to set
*/
public void setsource string source
this source   source
/**
* @return the selection
*/
public string gettranslationtype
return translationtype
/**
* @param translationtype
*            the selection
*/
public void settranslationtype string translationtype
this translationtype   translationtype