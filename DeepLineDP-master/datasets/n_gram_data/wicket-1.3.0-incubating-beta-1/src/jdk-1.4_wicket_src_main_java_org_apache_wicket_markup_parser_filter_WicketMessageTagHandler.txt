/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup parser filter
import java text parseexception
import org apache wicket component
import org apache wicket markupcontainer
import org apache wicket wicketruntimeexception
import org apache wicket behavior abstractbehavior
import org apache wicket behavior ibehavior
import org apache wicket markup componenttag
import org apache wicket markup markupelement
import org apache wicket markup markupstream
import org apache wicket markup html webcomponent
import org apache wicket markup html webmarkupcontainer
import org apache wicket markup parser abstractmarkupfilter
import org apache wicket markup resolver icomponentresolver
import org apache wicket util string strings
/**
* this is a markup inline filter and a component resolver. it identifies
* wicket:message attributes and adds an attribute modifier to the component tag
* that can localize
* wicket:message="attr-name:i18n-key,attr-name-2:i18n-key-2,..." expressions,
* replacing values of attributes specified by attr-name with a localizer lookup
* with key i18n-key. if an attribute being localized has a set value that value
* will be used as the default value for the localization lookup. this handler
* also resolves and localizes raw markup with wicket:message attribute.
*
* @author juergen donnerstag
* @author igor vaynberg
*/
public final class wicketmessagetaghandler extends abstractmarkupfilter
implements
icomponentresolver
/**
*
*/
private static final long serialversionuid   1l
/** todo post 1.2: general: namespace should not be a constant */
private final static string wicket_message_attribute_name
/**
* the id automatically assigned to tags with wicket:message attribute but
* without id
*/
public final static string wicket_message_container_id
/** singleton instance of {@link attributelocalizer} */
public static final ibehavior attribute_localizer   new attributelocalizer
/**
* construct.
*/
public wicketmessagetaghandler
/**
*
* @see org.apache.wicket.markup.parser.imarkupfilter#nexttag()
* @return the next tag to be processed. null, if not more tags are
*         available
*/
public final markupelement nexttag   throws parseexception
// get the next tag from the next markupfilter in the chain
// if null, no more tags are available
final componenttag tag   nextcomponenttag
if  tag    null
return tag
final string wicketmessageattribute   tag getattributes   getstring
wicket_message_attribute_name
if   wicketmessageattribute    null      wicketmessageattribute trim   length   > 0
// check if this tag is raw markup
if  tag getid      null
// if this is a raw tag we need to set the id to something so
// that wicket will not merge this as raw markup and instead
// pass it on to a resolver
tag setid wicket_message_container_id
// there is no point attaching the attributelocalizer to this
// tag because it will be represented by an auto component and
// they do not inherit the behaviors from their component tag
// unlike regular components, instead the attributelocalizer
// will be added by the code that creates the auto component
else
// if this is a component tag we attach a behavior to it that
// will in turn be attached to the component that is attached to
// this tag
tag addbehavior attribute_localizer
return tag
/**
* attribute localizing behavior. see the javadoc of
* {@link wicketmessagetaghandler} for details.
*
* @author igor vaynberg (ivaynberg)
*/
public static class attributelocalizer extends abstractbehavior
private static final long serialversionuid   1l
/**
* @see org.apache.wicket.behavior.abstractbehavior#oncomponenttag(org.apache.wicket.component,
*      org.apache.wicket.markup.componenttag)
*/
public void oncomponenttag final component component  final componenttag tag
string expr   tag getattributes   getstring wicket_message_attribute_name
if   strings isempty expr
expr   expr trim
string attrsandkeys   expr split
for  int i   0  i < attrsandkeys length  i
string attrandkey   attrsandkeys
int colon   attrandkey indexof
// make sure the attribute-key pair is valid
if  attrandkey length   < 3    colon < 1    colon > attrandkey length     2
throw new wicketruntimeexception
expr
string attr   attrandkey substring 0  colon
string key   attrandkey substring colon   1
string value
// we need to call the proper getstring() method based on
// whether or not we have a default value
if  tag getattributes   containskey attr
value   component getstring key  null  tag getattributes   getstring attr
else
value   component getstring key
tag put attr  value
public boolean resolve markupcontainer container  markupstream markupstream  componenttag tag
// localize any raw markup that has wicket:message attrs
if  wicket_message_container_id equals tag getid
component wc   null
if  tag isopenclose
wc   new webcomponent wicket_message_container_id
container getpage   getautoindex
else
wc   new webmarkupcontainer wicket_message_container_id
container getpage   getautoindex
wc add new attributelocalizer
container autoadd wc
return true
return false