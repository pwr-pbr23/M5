/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket extensions breadcrumb
import java util list
import org apache wicket iclusterable
import org apache wicket extensions breadcrumb panel breadcrumbpanel
/**
* bread crumbs provide a means to track certain history of client actions.
* bread crumbs are typically rendered as a list of links, and are useful when
* users 'dig deeper' into the site structure so that they can find their way
* back again and have a notion of where they currently are.
* <p>
* bread crumbs in the original sense just represent where people are in a site
* hierarchy. for example, when browsing a product site, bread crumbs could look
* like this:
*
* <pre>
*          home &gt; products &amp; solutions &gt; hardware &gt; desktop systems
* </pre>
*
* or
*
* <pre>
*          world &gt; europe &gt; the netherlands &gt; utrecht
* </pre>
*
* these items would be rendered as links to the corresponding site location.
* </p>
* classes that implement this interface are responsible for managing such a
* bread crumb structure. a {@link breadcrumbbar typical implementation} regards
* bread crumbs as a stack. when
* {@link #setactive(ibreadcrumbparticipant) a bread crumb is activated} that
* was not in the stack yet, it would add it to the stack, or when a bread crumb
* is activated that is already on the stack, it would roll back to the
* corresponding depth.
* <p>
* this model does not make any presumptions on how it should interact with
* components. just that there is a list of
* {@link ibreadcrumbparticipant bread crumb participants}, and the notion of a
* currently active bread crumb participant.
* </p>
* <p>
* a {@link ibreadcrumbparticipant bread crumb participant} is not an actual
* bread crump, but rather a proxy to components that represent a certain
* location relative to other bread crumbs in this model, and a means to get the
* bread crumb title, which is typically rendered as a link label of the actual
* bread crumb. the actual bread crumbs are supposed to be rendered by a
* component that works together with this model. i choose this model as this
* would suit what i think is one of the nicest patterns:
* {@link breadcrumbpanel bread crumb aware panels}.
* </p>
*
* @author eelco hillenius
*/
public interface ibreadcrumbmodel extends iclusterable
/**
* adds a bread crumb model listener.
*
* @param listener
*            the listener to add
*/
void addlistener ibreadcrumbmodellistener listener
/**
* lists the bread crumb participants in this model.
*
* @return the bread crumbs particpants, as list with
*         {@link ibreadcrumbparticipant bread crumb participants}.
*/
list allbreadcrumbparticipants
/**
* gets the currently active participant, if any.
*
* @return the currently active participant, may be null
*/
ibreadcrumbparticipant getactive
/**
* removes a bread crumb model listener.
*
* @param listener
*            the listener to remove
*/
void removelistener ibreadcrumbmodellistener listener
/**
* sets the {@link ibreadcrumbparticipant bread crumb} as the active one.
* implementations should call
* {@link ibreadcrumbmodellistener#breadcrumbadded(ibreadcrumbparticipant) bread crumb added}
* when the bread crumb was not yet part of the model, and
* {@link ibreadcrumbmodellistener#breadcrumbremoved(ibreadcrumbparticipant) bread crumb removed}
* for every crumb that was removed as the result of this call.
*
* @param breadcrumbparticipant
*            the bread crump that should be set as the currently active
*/
void setactive ibreadcrumbparticipant breadcrumbparticipant