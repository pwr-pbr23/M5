/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util file
import java io bufferedinputstream
import java io fileinputstream
import java io filewriter
import java io ioexception
import java io inputstream
import java net uri
import org apache wicket util io streams
import org apache wicket util time time
import org apache wicket util watch imodifiable
/**
* simple extension of file that adds an implementation of imodifiable for
* files. this allows the modificationwatcher class to watch files for
* modification. the imodifiable.lastmodifiedtime() method also returns a time
* object with a more convenient api than either date or a value in
* milliseconds.
*
* @author jonathan locke
*/
public class file extends java io file implements imodifiable
private static final long serialversionuid   1l
/**
* constructor.
*
* @param parent
*            parent
* @param child
*            child
*/
public file final file parent  final string child
super parent  child
/**
* construct.
* @param parent
* @param child
*/
public file final java io file parent  final string child
super parent  child
/**
* construct.
*
* @param file
*            file from java.io package
*/
public file final java io file file
super file getabsolutepath
/**
* constructor.
*
* @param pathname
*            path name
*/
public file final string pathname
super pathname
/**
* constructor.
*
* @param parent
*            parent
* @param child
*            child
*/
public file final string parent  final string child
super parent  child
/**
* constructor.
*
* @param uri
*            file uri
*/
public file final uri uri
super uri
/**
* @return file extension (whatever is after the last '.' in the file name)
*/
public string getextension
final int lastdot   getname   lastindexof
if  lastdot >  0
return getname   substring lastdot   1
return null
/**
* @return parent folder
*/
public folder getparentfolder
return new folder getparent
/**
* returns a time object representing the most recent time this file was
* modified.
*
* @return this file's lastmodified() value as a time object
*/
public final time lastmodifiedtime
return time milliseconds lastmodified
/**
* @return string read from this file
* @throws ioexception
*/
public final string readstring   throws ioexception
final inputstream in   new fileinputstream this
try
return streams readstring in
finally
in close
/**
* @return true if the file was removed
* @see java.io.file#delete()
*/
public boolean remove
return files remove this
/**
* force contents of file to physical storage
* @throws ioexception
*/
public void sync   throws ioexception
final fileinputstream in   new fileinputstream this
try
in getfd   sync
finally
in close
/**
* writes the given file to this one
*
* @param file
*            the file to copy
* @throws ioexception
*/
public final void write final file file  throws ioexception
final inputstream in   new bufferedinputstream new fileinputstream file
try
write in
finally
in close
/**
* writes the given input stream to this file
*
* @param input
*            the input
* @return number of bytes written
* @throws ioexception
*/
public final int write final inputstream input  throws ioexception
return files writeto this  input
/**
* write the given string to this file
*
* @param string
*            the string to write
* @throws ioexception
*/
public final void write final string string  throws ioexception
final filewriter out   new filewriter this
try
out write string
finally
out close