/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html basic
import org apache wicket markup componenttag
import org apache wicket markup markupstream
import org apache wicket markup html webcomponent
import org apache wicket model imodel
import org apache wicket model model
/**
* a label component replaces its body with the string version of its model
* object returned by getmodelobjectasstring().
* <p>
* exactly what is displayed as the body, depends on the model. the simplest
* case is a label with a static string model, which can be constructed like
* this:
*
* <pre>
* add(new label(&quot;mylabel&quot;, &quot;the string to display&quot;))
* </pre>
*
* a label with a dynamic model can be created like this:
*
* <pre>
*
*       add(new label(&quot;mylabel&quot;, new propertymodel(person, &quot;name&quot;));
*
* </pre>
*
* in this case, the label component will replace the body of the tag it is
* attached to with the 'name' property of the given person object, where person
* might look like:
*
* <pre>
* public class person
* {
* 	private string name;
*
* 	public string getname()
* 	{
* 		return name;
* 	}
*
* 	public void setname(string name)
* 	{
* 		this.name = name;
* 	}
* }
* </pre>
*
* @author jonathan locke
*/
public class label extends webcomponent
private static final long serialversionuid   1l
/**
* constructor
*
* @param id
*            see component
*/
public label final string id
super id
/**
* convenience constructor. same as label(string, new model(string))
*
* @param id
*            see component
* @param label
*            the label text
*
* @see org.apache.wicket.component#component(string, imodel)
*/
public label final string id  string label
this id  new model label
/**
* @see org.apache.wicket.component#component(string, imodel)
*/
public label final string id  imodel model
super id  model
/**
* @see org.apache.wicket.component#oncomponenttagbody(org.apache.wicket.markup.markupstream,
*      org.apache.wicket.markup.componenttag)
*/
protected void oncomponenttagbody final markupstream markupstream  final componenttag opentag
replacecomponenttagbody markupstream  opentag  getmodelobjectasstring