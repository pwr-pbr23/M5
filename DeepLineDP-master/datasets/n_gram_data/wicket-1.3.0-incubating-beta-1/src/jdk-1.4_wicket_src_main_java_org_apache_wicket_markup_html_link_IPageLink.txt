/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html link
import org apache wicket iclusterable
import org apache wicket page
/**
* interface that is used to implement delayed page linking. the getpage()
* method returns an instance of page when a link is actually clicked (thus
* avoiding the need to create a destination page object for every link on a
* given page in advance). the getpageidentity() method returns the subclass of
* page that getpage() will return if and when it is called.
* <p>
* this way of arranging things is useful in determining whether a link links to
* a given page, which is in turn useful for deciding how to display the link
* (because links in a navigation which link to a page itself are not useful and
* generally should instead indicate where the user is in the navigation).
* <p>
* to understand how getpageidentity() is used in this way, take a look at the
* link.linksto() method and its override in pagelink. also, see the
* documentation for getpageidentity() below.
*
* @see link#linksto(page)
* @see pagelink#linksto(page)
* @author jonathan locke
*/
public interface ipagelink extends iclusterable
/**
* gets the page to go to.
*
* @return the page to go to.
*/
page getpage
/**
* gets the class of the destination page, which serves as a form of
* identity that can be used to determine if a link is on the same page that
* it links to. when pages are parameterized, the link.linksto() method
* should be overridden instead.
* <p>
* a page's identity is important because links which are on the same page
* that they link to often need to be displayed in a different way to
* indicate that they are 'disabled' and don't go anywhere. links can be
* manually disabled by calling link.setdisabled(). links which have
* setautoenable(true) will automatically enable or disable themselves
* depending on whether or not link.linksto() returns true. the default
* implementation of pagelink.linksto() therefore looks like this:
*
* <pre>
* private final ipagelink pagelink;
*
* public boolean linksto(final page page)
* {
* 	return page.getclass() == pagelink.getpageidentity();
* }
* </pre>
*
* @return the class of page linked to, as a form of identity
* @see link#linksto(page)
*/
class getpageidentity