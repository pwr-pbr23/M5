/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket extensions markup html repeater data table
import java util list
import org apache wicket extensions markup html repeater util sortabledataprovider
import org apache wicket markup repeater item
import org apache wicket markup repeater oddevenitem
import org apache wicket model imodel
/**
* an implementation of the datatable that aims to solve the 90% usecase by
* adding navigation, headers, an no-records-found toolbars to a standard
* {@link datatable}.
* <p>
* the {@link navigationtoolbar} and the {@link headerstoolbar} are added as top
* toolbars, while the {@link norecordstoolbar} toolbar is added as a bottom
* toolbar.
*
* @see datatable
* @see headerstoolbar
* @see navigationtoolbar
* @see norecordstoolbar
*
* @author igor vaynberg ( ivaynberg )
*/
public class defaultdatatable extends datatable
private static final long serialversionuid   1l
/**
* constructor
*
* @param id
*            component id
* @param columns
*            list of columns
* @param dataprovider
*            data provider
* @param rowsperpage
*            number of rows per page
*/
public defaultdatatable string id  final list   <icolumn>   columns
sortabledataprovider dataprovider  int rowsperpage
this id   icolumn columns toarray new icolumn   dataprovider  rowsperpage
/**
* constructor
*
* @param id
*            component id
* @param columns
*            array of columns
* @param dataprovider
*            data provider
* @param rowsperpage
*            number of rows per page
*/
public defaultdatatable string id  final icolumn columns  sortabledataprovider dataprovider
int rowsperpage
super id  columns  dataprovider  rowsperpage
addtoptoolbar new navigationtoolbar this
addtoptoolbar new headerstoolbar this  dataprovider
addbottomtoolbar new norecordstoolbar this
protected item newrowitem string id  int index  imodel model
return new oddevenitem id  index  model