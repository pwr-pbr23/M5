/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket session pagemap
import org apache wicket iclusterable
import org apache wicket page
/**
* some source which produces a page. page implements ipagemapentry by simply
* returning "this", but other implementations are possible as well, allowing
* users to create ipagemapentry implementations that reconstruct full blown
* page objects from a limited set of data (for example, a details page from an
* id). the advantage of doing this is that you can save session memory (by
* trading off against the processing power required to reconstruct the page).
*
* @see org.apache.wicket.session.pagemap.abstractpagemapentry
* @author jonathan locke
*/
public interface ipagemapentry extends iclusterable
/**
* @return a stable identifier for this page map entry
*/
int getnumericid
/**
* @return gets the page, possibly creating it on the fly.
*/
page getpage
/**
* @return the class of page stored in this page map entry (which can be
*         used by an eviction strategy to prioritize evictions)
*/
class getpageclass
/**
* @param id
*            the numeric id for this entry
*/
void setnumericid int id