/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util listener
import java util hashset
import java util iterator
import java util set
/**
* holds a set of listeners implementing the ilistener tag interface. subclasses
* can implement notification methods that cast the listener to the correct
* subinterface and invoke the appropriate listener method.
*
* @author jonathan locke
*/
public abstract class listenerset
/** set of change listeners */
private final set listeners   new hashset
/**
* adds a listener to this set of listeners.
*
* @param listener
*            the listener to add
* @return  <tt>true</tt> if the set did not already contain the specified
* listener.
*/
public boolean add final ilistener listener
return listeners add listener
/**
* notifies each listener in this set by calling notifylistener.
*/
public void notifylisteners
// create a stable copy for iterating over
final set copy   new hashset listeners
// notify all listeners that the file changed
for  final iterator iterator   copy iterator    iterator hasnext
notifylistener  ilistener iterator next
/**
* removes a listener from this set.
*
* @param listener
*            the listener to remove
*/
public void remove final ilistener listener
listeners remove listener
/**
* notifies a listener.
*
* @param listener
*            the listener to notify
*/
protected abstract void notifylistener ilistener listener