/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup
/**
* holds markup as a resource (the stream that the markup came from) and a list
* of markupelements (the markup itself).
*
* @see markupelement
* @see componenttag
* @see org.apache.wicket.markup.rawmarkup
*
* @author jonathan locke
* @author juergen donnerstag
*/
public abstract interface imarkup
/** placeholder that indicates no markup */
public static final markup no_markup   new markup
/**
* find the markup element index of the component with 'path'
*
* @param path
*            the component path expression
* @param id
*            the component's id to search for
* @return -1, if not found
*/
int findcomponentindex final string path  final string id
/**
* for wicket it would be sufficient for this method to be package
* protected. however to allow wicket-bench easy access to the information
* ...
*
* @param index
*            index into markup list
* @return markup element
*/
markupelement get final int index
/**
* gets the markup encoding. a markup encoding may be specified in a markup
* file with an xml encoding specifier of the form &lt;?xml ...
* encoding="..." ?&gt;.
*
* @return encoding, or null if not found.
*/
string getencoding
/**
* gets the resource that contains this markup
*
* @return the resource where this markup came from
*/
markupresourcestream getresource
/**
* get the wicket namespace valid for this specific markup
*
* @return wicket namespace
*/
string getwicketnamespace
/**
* return the xml declaration string, in case if found in the markup.
*
* @return null, if not found.
*/
string getxmldeclaration
/**
* for wicket it would be sufficient for this method to be package
* protected. however to allow wicket-bench easy access to the information
* ...
*
* @return number of markup elements
*/
int size
/**
* @return string representation of markup list
*/
string todebugstring
/**
* @return string representation of markup list
*/
string tostring