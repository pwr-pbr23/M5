/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup resolver
import org apache wicket component
import org apache wicket markupcontainer
import org apache wicket markup componenttag
import org apache wicket markup markupstream
import org apache wicket markup wickettag
import org apache wicket markup html webmarkupcontainer
/**
* this is a tag resolver which handles &lt;wicket:link&gt; tags. because
* autolinks are already detected and handled, the only task of this
* resolver will be to add a "transparent" webmarkupcontainer to
* transparently handling child components.
*
* @author juergen donnerstag
*/
public class wicketlinkresolver implements icomponentresolver
private static final long serialversionuid   1l
/**
* try to resolve the tag, then create a component, add it to the container
* and render it.
*
* @see org.apache.wicket.markup.resolver.icomponentresolver#resolve(markupcontainer, markupstream,
*      componenttag)
*
* @param container
*            the container parsing its markup
* @param markupstream
*            the current markupstream
* @param tag
*            the current component tag while parsing the markup
* @return true, if componentid was handle by the resolver. false, otherwise
*/
public boolean resolve final markupcontainer container  final markupstream markupstream
final componenttag tag
if  tag instanceof wickettag
wickettag wtag    wickettag  tag
if  wtag islinktag       wtag getnamespace      null
final string id       container getpage   getautoindex
final component component   new webmarkupcontainer id
private static final long serialversionuid   1l
/**
* @see org.apache.wicket.markupcontainer#istransparentresolver()
*/
public boolean istransparentresolver
return true
container autoadd component
// yes, we handled the tag
return true
// we were not able to handle the tag
return false