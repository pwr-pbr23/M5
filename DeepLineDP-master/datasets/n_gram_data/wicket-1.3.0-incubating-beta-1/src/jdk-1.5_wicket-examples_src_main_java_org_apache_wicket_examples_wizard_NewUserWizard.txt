/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples wizard
import java util arrays
import java util list
import org apache wicket extensions wizard staticcontentstep
import org apache wicket extensions wizard wizard
import org apache wicket extensions wizard wizardmodel
import org apache wicket extensions wizard wizardstep
import org apache wicket extensions wizard wizardmodel icondition
import org apache wicket markup html form checkbox
import org apache wicket markup html form form
import org apache wicket markup html form formcomponent
import org apache wicket markup html form listmultiplechoice
import org apache wicket markup html form requiredtextfield
import org apache wicket markup html form textfield
import org apache wicket markup html form validation abstractformvalidator
import org apache wicket model compoundpropertymodel
import org apache wicket model imodel
import org apache wicket model model
import org apache wicket model resourcemodel
import org apache wicket model stringresourcemodel
import org apache wicket validation ivalidationerror
import org apache wicket validation validationerror
import org apache wicket validation validator emailaddressvalidator
/**
* this wizard shows some basic form use. it uses custom panels for the form
* elements, and a single domain object ({@link user}) as it's subject. also,
* {@link userrolesstep the user roles step} is an optional step, that will only
* be executed when assignroles is true (and that value is edited in the
* {@link userdetailsstep user details step}).
*
* @author eelco hillenius
*/
public class newuserwizard extends wizard
/**
* the confirmation step.
*/
private final class confirmationstep extends staticcontentstep
/**
* construct.
*/
public confirmationstep
super true
imodel usermodel   new model user
settitlemodel new resourcemodel
setsummarymodel new stringresourcemodel    this  usermodel
setcontentmodel new stringresourcemodel    this  usermodel
/**
* the user details step.
*/
private final class userdetailsstep extends wizardstep
/**
* construct.
*/
public userdetailsstep
super new resourcemodel     null
setsummarymodel new stringresourcemodel    this  new model user
add new requiredtextfield
add new requiredtextfield
add new textfield
add new checkbox
/**
* the user name step.
*/
private final class usernamestep extends wizardstep
/**
* construct.
*/
public usernamestep
super new resourcemodel     new resourcemodel
add new requiredtextfield
add new requiredtextfield    add emailaddressvalidator getinstance
/**
* the user details step.
*/
private final class userrolesstep extends wizardstep implements icondition
/**
* construct.
*/
public userrolesstep
super new resourcemodel     null
setsummarymodel new stringresourcemodel    this  new model user
final listmultiplechoice roleschoicefield   new listmultiplechoice
allroles
add roleschoicefield
final textfield rolessetnamefield   new textfield
add rolessetnamefield
add new abstractformvalidator
public formcomponent getdependentformcomponents
// name and roles don't have anything to validate,
// so might as well just skip them here
return null
public void validate form form
string rolesinput   roleschoicefield getinput
if  rolesinput    null        equals rolesinput
if    equals rolessetnamefield getinput
rolessetnamefield error  ivalidationerror new validationerror
addmessagekey
/**
* @see org.apache.wicket.extensions.wizard.wizardmodel.icondition#evaluate()
*/
public boolean evaluate
return assignroles
/** cheap ass roles database. */
private static final list allroles   arrays aslist new string
/** whether the assign roles step should be executed. */
private boolean assignroles   false
/** the user we are editing. */
private user user
/**
* construct.
*
* @param id
*            the component id
*/
public newuserwizard string id
super id
// create a blank user
user   new user
setmodel new compoundpropertymodel this
wizardmodel model   new wizardmodel
model add new usernamestep
model add new userdetailsstep
model add new userrolesstep
model add new confirmationstep
// initialize the wizard with the wizard model we just built
init model
/**
* gets user.
*
* @return user
*/
public user getuser
return user
/**
* gets assignroles.
*
* @return assignroles
*/
public boolean isassignroles
return assignroles
/**
* @see org.apache.wicket.extensions.wizard.wizard#oncancel()
*/
public void oncancel
setresponsepage index class
/**
* @see org.apache.wicket.extensions.wizard.wizard#onfinish()
*/
public void onfinish
setresponsepage index class
/**
* sets assignroles.
*
* @param assignroles
*            assignroles
*/
public void setassignroles boolean assignroles
this assignroles   assignroles
/**
* sets user.
*
* @param user
*            user
*/
public void setuser user user
this user   user