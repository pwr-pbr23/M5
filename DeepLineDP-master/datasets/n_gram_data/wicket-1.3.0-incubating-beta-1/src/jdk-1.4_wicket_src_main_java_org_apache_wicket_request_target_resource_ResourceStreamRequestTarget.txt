/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket request target resource
import org apache commons logging log
import org apache commons logging logfactory
import org apache wicket irequesttarget
import org apache wicket requestcycle
import org apache wicket response
import org apache wicket wicketruntimeexception
import org apache wicket protocol http webresponse
import org apache wicket util resource iresourcestream
import org apache wicket util resource resourcestreamnotfoundexception
/**
* request target that responds by sending it's resources stream.
*
* @author eelco hillenius
*/
public class resourcestreamrequesttarget implements irequesttarget
/** logger */
private static final log log   logfactory getlog resourcestreamrequesttarget class
/**
* optional filename, used to set the content disposition header. only
* meaningful when using with web requests.
*/
private string filename
/** the resource stream for the response. */
private final iresourcestream resourcestream
/**
* construct.
*
* @param resourcestream
*            the resource stream for the response
*/
public resourcestreamrequesttarget iresourcestream resourcestream
this resourcestream   resourcestream
/**
* @see org.apache.wicket.irequesttarget#detach(org.apache.wicket.requestcycle)
*/
public void detach requestcycle requestcycle
/**
* @see java.lang.object#equals(java.lang.object)
*/
public boolean equals object obj
if  obj instanceof resourcestreamrequesttarget
resourcestreamrequesttarget that    resourcestreamrequesttarget obj
return resourcestream equals that resourcestream
filename    null  ? filename equals this filename    true
return false
/**
* @return optional filename, used to set the content disposition header.
*         only meaningful when using with web requests.
*/
public string getfilename
return filename
/**
* gets the resource stream for the response.
*
* @return the resource stream for the response
*/
public final iresourcestream getresourcestream
return resourcestream
/**
* @see java.lang.object#hashcode()
*/
public int hashcode
int result     hashcode
result    resourcestream hashcode
result     filename    null  ? filename hashcode     0
return 17   result
/**
* responds by sending the contents of the resource stream.
*
* @see org.apache.wicket.irequesttarget#respond(org.apache.wicket.requestcycle)
*/
public void respond requestcycle requestcycle
// get servlet response to use when responding with resource
final response response   requestcycle getresponse
configure requestcycle  response  resourcestream
try
response write resourcestream getinputstream
catch  resourcestreamnotfoundexception e
throw new wicketruntimeexception e
/**
* @param filename
*            optional filename, used to set the content disposition header.
*            only meaningful when using with web requests.
*
* @return the this.
*/
public resourcestreamrequesttarget setfilename string filename
this filename   filename
return this
/**
* @see java.lang.object#tostring()
*/
public string tostring
return     resourcestream
filename
/**
* configures the response, default by setting the content type and length
* and content disposition (in case the filename property was set).
*
* @param requestcycle
* @param response
*            the response
* @param resourcestream
*            the resource stream that will be rendered
*/
protected void configure final requestcycle requestcycle  final response response  final iresourcestream resourcestream
// configure response with content type of resource, if available
string responsetype   resourcestream getcontenttype
if  responsetype    null
response setcontenttype responsetype       response getcharacterencoding
else
// otherwise detect content-type automatically
if  getfilename      null
response detectcontenttype requestcycle  getfilename
else
response detectcontenttype requestcycle  requestcycle getrequest   getrelativeurl
// wicket-473 allow iresourcestream.length() to return -1
if  resourcestream length   >  0
// and the content length
response setcontentlength resourcestream length
// and content disposition if any
string file   getfilename
if  file    null     response instanceof webresponse
webresponse response  setattachmentheader file