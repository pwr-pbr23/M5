/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html image resource
import java util locale
import org apache wicket iresourcefactory
import org apache wicket resource
import org apache wicket wicketruntimeexception
import org apache wicket util parse metapattern group
import org apache wicket util parse metapattern integergroup
import org apache wicket util parse metapattern metapattern
import org apache wicket util parse metapattern optionalmetapattern
import org apache wicket util parse metapattern parsers metapatternparser
/**
* a factory which creates default button images.
*
* @author jonathan locke
*/
public class defaultbuttonimageresourcefactory implements iresourcefactory
/**
* @see org.apache.wicket.iresourcefactory#newresource(java.lang.string, java.util.locale, java.lang.string)
*/
public resource newresource final string specification  final locale locale  final string style
final parser parser   new parser specification
if  parser matches
return new defaultbuttonimageresource parser getwidth    parser getheight    parser getlabel
else
throw new wicketruntimeexception     specification
/**
* parses image value specifications.
*
* @author jonathan locke
*/
private static final class parser extends metapatternparser
/** group value. */
private static final integergroup width   new integergroup
/** group value. */
private static final integergroup height   new integergroup
/** label */
private static final group label   new group metapattern anything
/** meta pattern. */
private static final metapattern pattern   new metapattern new metapattern
new optionalmetapattern new metapattern   width  metapattern comma  height
metapattern colon     label
/**
* construct.
*
* @param input
*            to parse
*/
public parser final charsequence input
super pattern  input
/**
* @return the label
*/
public string getlabel
return label get matcher
/**
* @return any width
*/
public int getwidth
return width getint matcher     1
/**
* @return any height
*/
public int getheight
return height getint matcher     1