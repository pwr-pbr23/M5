/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket extensions ajax markup html autocomplete
import org apache wicket response
/**
* a renderer that abstracts autoassist specific details and allows subclasses
* to only render the visual part of the assist instead of having to also render
* the necessary autoassist javascript hooks.
*
* @since 1.2
*
* @author igor vaynberg (ivaynberg)
*
*/
public abstract class abstractautocompleterenderer implements iautocompleterenderer
/**
* @see org.apache.wicket.extensions.ajax.markup.html.autocomplete.iautocompleterenderer#render(java.lang.object,
*      org.apache.wicket.response, string)
*/
public final void render object object  response response  string criteria
string textvalue   gettextvalue object
if  textvalue    null
throw new illegalstateexception
object tostring
textvalue   textvalue replaceall    quot "
response write
renderchoice object  response  criteria
response write
/**
* @see org.apache.wicket.extensions.ajax.markup.html.autocomplete.iautocompleterenderer#renderheader(org.apache.wicket.response)
*/
public final void renderheader response response
response write
/**
* @see org.apache.wicket.extensions.ajax.markup.html.autocomplete.iautocompleterenderer#renderfooter(org.apache.wicket.response)
*/
public final void renderfooter response response
response write
/**
* render the visual portion of the assist. usually the html representing
* the assist choice object is written out to the response use
* {@link response#write(charsequence)}
*
* @param object
*            current assist choice
* @param response
* @param criteria
*/
protected abstract void renderchoice object object  response response  string criteria
/**
* retrieves the text value that will be set on the textbox if this assist
* is selected
*
* @param object
*            assist choice object
* @return the text value that will be set on the textbox if this assist is
*         selected
*/
protected abstract string gettextvalue object object