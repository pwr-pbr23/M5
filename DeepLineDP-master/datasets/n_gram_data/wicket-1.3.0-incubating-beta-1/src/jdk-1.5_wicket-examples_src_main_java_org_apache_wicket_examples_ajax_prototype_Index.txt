/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples ajax prototype
import org apache wicket examples wicketexamplepage
import org apache wicket markup html basic label
import org apache wicket markup html link ilinklistener
import org apache wicket markup html link link
import org apache wicket model propertymodel
import org apache wicket request target component componentrequesttarget
import org apache wicket util string appendingstringbuffer
/**
* example displaying partial page rendering using the counting link example and
* prototype.js. prototype.js is a javascript library that provides several
* handy javascript functions, amongst others an ajax.updater function, which
* updates the html document with the response of the ajax call.
*
* @author ivaynberg
*/
public class index extends wicketexamplepage
/** click count. */
private int count   0
/** label showing count */
private final label counter
/**
* constructor.
*/
public index
// add the ajaxian link to the page...
add new link
/**
* handles a click on the link. this method is accessed normally
* using a standard http request, but in this example, we use ajax
* to perform the call.
*/
public void onclick
// increment count
count
// the response should refresh the label displaying the counter.
getrequestcycle   setrequesttarget new componentrequesttarget counter
/**
* alter the javascript 'onclick' event to emit the ajax call and
* update the counter label.
*/
protected string getonclickscript string url
return new appendingstringbuffer    append
urlfor ilinklistener interface
append    tostring
// add the label
add counter   new label    new propertymodel this
/**
* @return returns the count.
*/
public int getcount
return count