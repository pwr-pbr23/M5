/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket jmx
/**
* cookie persister settings.
*
* @author eelcohillenius
*/
public interface cookievaluepersistersettingsmbean
/**
* gets the cookie comment.
*
* @return the cookie comment
*/
string getcomment
/**
* gets the cookie domain name.
*
* @return the cookie domain name
*/
string getdomain
/**
* gets the max age. after
*
* @return the max age
*/
int getmaxage
/**
* returns true if the browser is sending cookies only over a secure
* protocol, or false if the browser can send cookies using any protocol.
*
* @return whether this cookie is secure
*/
boolean getsecure
/**
* returns the version of the protocol this cookie complies with. version 1
* complies with rfc 2109, and version 0 complies with the original cookie
* specification drafted by netscape. cookies provided by a browser use and
* identify the browser's cookie version.
*
* @return 0 if the cookie complies with the original netscape
*         specification; 1 if the cookie complies with rfc 2109
*/
int getversion
/**
* sets the cookie comment.
*
* @param comment
*            the cookie comment
*/
void setcomment string comment
/**
* sets the cookie domain name.
*
* @param domain
*            the cookie domain name
*/
void setdomain string domain
/**
* sets the maximum age of the cookie in seconds.
*
* @param maxage
*            the max age in secs.
*/
void setmaxage int maxage
/**
* indicates to the browser whether the cookie should only be sent using a
* secure protocol, such as https or ssl.
*
* @param secure
*            if true, sends the cookie from the browser to the server using
*            only when using a secure protocol; if false, sent on any
*            protocol
*/
void setsecure boolean secure
/**
* sets the version of the cookie protocol this cookie complies with.
* version 0 complies with the original netscape cookie specification.
* version 1 complies with rfc 2109. <br/>since rfc 2109 is still somewhat
* new, consider version 1 as experimental; do not use it yet on production
* sites.
*
* @param version
*            0 if the cookie should comply with the original netscape
*            specification; 1 if the cookie should comply with rfc 2109
*/
void setversion int version