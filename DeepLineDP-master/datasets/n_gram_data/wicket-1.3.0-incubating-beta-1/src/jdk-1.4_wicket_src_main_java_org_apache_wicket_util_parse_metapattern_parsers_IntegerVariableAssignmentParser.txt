/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util parse metapattern parsers
import org apache wicket util parse metapattern group
import org apache wicket util parse metapattern integergroup
import org apache wicket util parse metapattern metapattern
/**
* parses integer variable assignments, such as "x = 9" or "x=9".
*
* @author jonathan locke
*/
public final class integervariableassignmentparser extends metapatternparser
/** parse "variable = &lt;number&gt;". */
private static final group variable   new group metapattern variable_name
/** group value. */
private static final integergroup value   new integergroup
/** meta pattern. */
private static final metapattern pattern   new metapattern new metapattern   variable
metapattern optional_whitespace  metapattern equals  metapattern optional_whitespace
value
/**
* construct.
*
* @param input
*            to parse
*/
public integervariableassignmentparser final charsequence input
super pattern  input
/**
* gets the variable part (eg the 'x' from 'x = 9').
*
* @return the variable part
*/
public string getvariable
return variable get matcher
/**
* gets the int part (eg the '9' from 'x = 9').
*
* @return the int part.
*/
public int getintvalue
return value getint matcher
/**
* gets the int part as a long.
*
* @return the int part as a long
*/
public long getlongvalue
return value getlong matcher