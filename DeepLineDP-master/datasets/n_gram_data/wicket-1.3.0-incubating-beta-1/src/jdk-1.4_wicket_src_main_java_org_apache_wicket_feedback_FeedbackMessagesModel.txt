/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket feedback
import java io serializable
import java util collections
import java util comparator
import java util list
import org apache wicket component
import org apache wicket page
import org apache wicket session
import org apache wicket model imodel
/**
* model for extracting feedback messages.
*
* @author eelco hillenius
*/
public class feedbackmessagesmodel implements imodel
private static final long serialversionuid   1l
/** message filter */
private ifeedbackmessagefilter filter
/** lazy loaded, temporary list. */
private transient list messages
/** comparator used for sorting the messages. */
private comparator sortingcomparator
/** the page of component this model is attached to */
private final component component
/**
* constructor. creates a model for all feedback messages on the page.
*
* @param component
*            the component where the page will be get from for which
*            messages will be displayed usually the same page as the one
*            feedbackpanel is attached to
*/
public feedbackmessagesmodel component component
if  component    null
throw new illegalargumentexception
this component   component
/**
* constructor. creates a model for all feedback messags accepted by the
* given filter.
*
* @param filter
*            the filter to apply
* @param page
*            page for which messages will be displayed - usually the same
*            page as the one feedbackpanel is attached to
*
*/
public feedbackmessagesmodel page page  ifeedbackmessagefilter filter
this page
setfilter filter
/**
* @return the current message filter
*/
public final ifeedbackmessagefilter getfilter
return filter
/**
* @return the current sorting comparator
*/
public final comparator getsortingcomparator
return sortingcomparator
/**
* @see org.apache.wicket.model.imodel#getobject()
*/
public final object getobject
if  messages    null
// get filtered messages from page where component lives
messages   session get   getfeedbackmessages   messages filter
// sort the list before returning it
if  sortingcomparator    null
collections sort messages  sortingcomparator
// let subclass do any extra processing it wants to on the messages.
// it may want to do something special, such as removing a given
// message under some special condition or perhaps eliminate
// duplicate messages. it could even add a message under certain
// conditions.
messages   processmessages messages
return messages
/**
* @param filter
*            filter to apply to model
*/
public final void setfilter ifeedbackmessagefilter filter
this filter   filter
/**
* sets the comparator used for sorting the messages.
*
* @param sortingcomparator
*            comparator used for sorting the messages
*/
public final void setsortingcomparator comparator sortingcomparator
if    sortingcomparator instanceof serializable
throw new illegalargumentexception
this sortingcomparator   sortingcomparator
/**
* override this method to post process to the feedbackmessage list.
*
* @param messages
*            list of sorted and filtered feedbackmessages for further
*            processing
* @return the processed feedbackmessage list
*/
protected list processmessages final list messages
return messages
/**
*
* @see org.apache.wicket.model.imodel#setobject(java.lang.object)
*/
public void setobject object object
/**
*
* @see org.apache.wicket.model.idetachable#detach()
*/
public void detach
messages   null