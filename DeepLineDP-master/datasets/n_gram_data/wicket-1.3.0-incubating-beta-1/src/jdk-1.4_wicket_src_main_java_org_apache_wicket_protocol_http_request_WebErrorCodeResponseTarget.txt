/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket protocol http request
import java io ioexception
import javax servlet http httpservletresponse
import org apache wicket irequesttarget
import org apache wicket requestcycle
import org apache wicket wicketruntimeexception
import org apache wicket protocol http webrequestcycle
import org apache wicket protocol http webresponse
/**
* response target that is to be used in a servlet environment to send an error
* code and optionally a message. note: this target can only be used in a
* servlet environment with {@link org.apache.wicket.protocol.http.webrequestcycle}s.
*
* @author eelco hillenius
*/
public final class weberrorcoderesponsetarget implements irequesttarget
/** the servlet error code. */
private final int errorcode
/** the optional message to send to the client. */
private string message
/**
* construct.
*
* @param errorcode
*            the servlet error code; use one of the
*            {@link javax.servlet.http.httpservletresponse} constants
* @see javax.servlet.http.httpservletresponse
*/
public weberrorcoderesponsetarget int errorcode
this errorcode  null
/**
* construct.
*
* @param errorcode
*            the servlet error code; use one of the
*            {@link javax.servlet.http.httpservletresponse} constants
* @param message
*            the optional message to send to the client
* @see javax.servlet.http.httpservletresponse
*/
public weberrorcoderesponsetarget int errorcode  string message
this errorcode   errorcode
this message   message
/**
* respond by sending the set errorcode and optionally the message to the
* browser.
*
* @see org.apache.wicket.irequesttarget#respond(org.apache.wicket.requestcycle)
*/
public void respond requestcycle requestcycle
webresponse webresponse     webrequestcycle requestcycle  getwebresponse
httpservletresponse httpservletresponse   webresponse gethttpservletresponse
try
if  message    null
httpservletresponse senderror errorcode  message
else
httpservletresponse senderror errorcode
catch  ioexception e
throw new wicketruntimeexception e
/**
* gets the servlet error code.
*
* @return the servlet error code
*/
public final int geterrorcode
return errorcode
/**
* gets the optional message to send to the client.
*
* @return the optional message to send to the client
*/
public final string getmessage
return message
/**
* @see org.apache.wicket.irequesttarget#detach(org.apache.wicket.requestcycle)
*/
public void detach requestcycle requestcycle
/**
* @see java.lang.object#equals(java.lang.object)
*/
public boolean equals object obj
boolean equal   false
if  obj instanceof weberrorcoderesponsetarget
weberrorcoderesponsetarget that    weberrorcoderesponsetarget obj
if  errorcode    that errorcode
if  message    null
equal    that message    null    message equals that message
else
equal    that message    null
return equal
/**
* @see java.lang.object#hashcode()
*/
public int hashcode
int result     hashcode
result    message    null ? message hashcode     0
result    errorcode
return 17   result
/**
* @see java.lang.object#tostring()
*/
public string tostring
return     hashcode         geterrorcode
message    null  ?     message