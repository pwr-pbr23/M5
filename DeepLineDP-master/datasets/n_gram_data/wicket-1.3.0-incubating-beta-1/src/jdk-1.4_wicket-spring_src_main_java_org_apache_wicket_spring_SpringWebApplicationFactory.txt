/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket spring
import java util map
import javax servlet servletcontext
import org apache wicket protocol http iwebapplicationfactory
import org apache wicket protocol http webapplication
import org apache wicket protocol http wicketfilter
import org springframework context applicationcontext
import org springframework web context support webapplicationcontextutils
/**
* implementation of iwebapplicationfactory that pulls the webapplication object
* out of spring application context.
*
* configuration example:
*
* <pre>
*    &lt;servlet&gt;
*    &lt;servlet-name&gt;phonebook&lt;/servlet-name&gt;
*    &lt;servlet-class&gt;org.apache.wicket.protocol.http.wicketservlet&lt;/servlet-class&gt;
*    &lt;init-param&gt;
*    &lt;param-name&gt;applicationfactoryclassname&lt;/param-name&gt;
*    &lt;param-value&gt;org.apache.wicket.contrib.spring.springwebapplicationfactory&lt;/param-value&gt;
*    &lt;/init-param&gt;
*    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
*    &lt;/servlet&gt;
* </pre>
*
* beanname init parameter can be used if there are multiple webapplications
* defined on the spring application context.
*
* example:
*
* <pre>
*    &lt;servlet&gt;
*    &lt;servlet-name&gt;phonebook&lt;/servlet-name&gt;
*    &lt;servlet-class&gt;org.apache.wicket.protocol.http.wicketservlet&lt;/servlet-class&gt;
*    &lt;init-param&gt;
*    &lt;param-name&gt;applicationfactoryclassname&lt;/param-name&gt;
*    &lt;param-value&gt;org.apache.wicket.contrib.spring.springwebapplicationfactory&lt;/param-value&gt;
*    &lt;/init-param&gt;
*    &lt;init-param&gt;
*    &lt;param-name&gt;beanname&lt;/param-name&gt;
*    &lt;param-value&gt;phonebookapplication&lt;/param-value&gt;
*    &lt;/init-param&gt;
*    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
*    &lt;/servlet&gt;
* </pre>
*
*
* @author igor vaynberg (ivaynberg)
* @author janne hietam&auml;ki (jannehietamaki)
*
*/
public class springwebapplicationfactory implements iwebapplicationfactory
/**
* @see iwebapplicationfactory#createapplication(wicketfilter)
*/
public webapplication createapplication wicketfilter filter
servletcontext sc   filter getfilterconfig   getservletcontext
applicationcontext ac   webapplicationcontextutils
getrequiredwebapplicationcontext sc
string beanname   filter getfilterconfig   getinitparameter
return createapplication ac  beanname
private webapplication createapplication applicationcontext ac  string beanname
if  beanname    null
webapplication application    webapplication  ac getbean beanname
if  application    null
throw new illegalargumentexception
beanname
return application
else
map beans   ac getbeansoftype webapplication class  false  false
if  beans size      0
throw new illegalstateexception
webapplication class getname
if  beans size   > 1
throw new illegalstateexception
webapplication class getname
return  webapplication  beans values   iterator   next