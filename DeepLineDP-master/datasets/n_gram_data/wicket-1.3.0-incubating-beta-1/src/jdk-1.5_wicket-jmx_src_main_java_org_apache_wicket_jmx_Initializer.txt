/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket jmx
import java lang management managementfactory
import java util arraylist
import java util list
import javax management instancealreadyexistsexception
import javax management instancenotfoundexception
import javax management mbeanregistrationexception
import javax management mbeanserver
import javax management mbeanserverfactory
import javax management malformedobjectnameexception
import javax management notcompliantmbeanexception
import javax management objectname
import org apache commons logging log
import org apache commons logging logfactory
import org apache wicket idestroyer
import org apache wicket iinitializer
import org apache wicket wicketruntimeexception
/**
* registers wicket's mbeans.
* <p>
* users can specify the mbeanserver implementation in which to register the
* mbeans by setting the <code>org.apache.wicket.mbean.server.agentid</code> property to
* the agent id of the mbeanserver implementation they want, or by setting
* <code>org.apache.wicket.mbean.server.class</code> to the mbean server class they want
* (if both are provided, and the agent id returns a server, that one is used).
* this initializer will log an error when no mbean server with the provided
* agent id can be found, and will then fall back to use the platform mbean
* server. when no agent id is provided, the platform mbean server will be used.
*
* @author eelcohillenius
* @author david hosier
*/
public class initializer implements iinitializer  idestroyer
private static log log   logfactory getlog initializer class
// it's best to store a reference to the mbeanserver rather than getting it
// over and over
private mbeanserver mbeanserver   null
/**
* list of registered names
*/
private list<objectname> registered   new arraylist<objectname>
/**
* @see org.apache.wicket.idestroyer#destroy(org.apache.wicket.application)
*/
public void destroy org apache wicket application application
for  objectname objectname   registered
try
mbeanserver unregistermbean objectname
catch  instancenotfoundexception e
log error e getmessage    e
catch  mbeanregistrationexception e
log error e getmessage    e
/**
* @see org.apache.wicket.iinitializer#init(org.apache.wicket.application)
*/
@suppresswarnings
public void init org apache wicket application application
try
string name   application getname
string agentid   system getproperty
if  agentid    null
arraylist<mbeanserver> mbeanservers    arraylist<mbeanserver> mbeanserverfactory
findmbeanserver agentid
if   mbeanservers isempty
mbeanserver   mbeanservers get 0      get first
else
log error     agentid
if  mbeanserver    null
string impl   system getproperty
if  impl    null
arraylist<mbeanserver> mbeanservers    arraylist<mbeanserver> mbeanserverfactory
findmbeanserver null
if   mbeanservers isempty
for  mbeanserver mbs   mbeanservers
if  mbs getclass   getname   equals impl
mbeanserver   mbs
break
if  mbeanserver    null
log error     impl
if  mbeanserver    null
mbeanserver   managementfactory getplatformmbeanserver
// never null
log info     mbeanserver
// register top level application object, but first check whether
// multiple instances of the same application (name) are running and
// if so adjust the name
string domain       name
objectname appbeanname   new objectname domain
string tempdomain   domain
int i   0
while  mbeanserver isregistered appbeanname
tempdomain   name       i
appbeanname   new objectname tempdomain
domain   tempdomain
application appbean   new application application
register appbean  appbeanname
register new applicationsettings application   new objectname domain
register new debugsettings application   new objectname domain
register new markupsettings application   new objectname domain
register new resourcesettings application   new objectname domain
register new pagesettings application   new objectname domain
register new requestcyclesettings application   new objectname domain
register new securitysettings application   new objectname domain
register new sessionsettings application   new objectname domain
register new cookievaluepersistersettings application   new objectname domain
requestlogger sessionsbean   new requestlogger application
objectname sessionsbeanname   new objectname domain
register sessionsbean  sessionsbeanname
catch  malformedobjectnameexception e
throw new wicketruntimeexception e
catch  instancealreadyexistsexception e
throw new wicketruntimeexception e
catch  mbeanregistrationexception e
throw new wicketruntimeexception e
catch  notcompliantmbeanexception e
throw new wicketruntimeexception e
/**
* @see java.lang.object#tostring()
*/
@override
public string tostring
return
/**
* register mbean.
*
* @param o
*            mbean
* @param objectname
*            object name
*
* @throws notcompliantmbeanexception
* @throws mbeanregistrationexception
* @throws instancealreadyexistsexception
*/
private void register object o  objectname objectname  throws instancealreadyexistsexception
mbeanregistrationexception  notcompliantmbeanexception
mbeanserver registermbean o  objectname
registered add objectname