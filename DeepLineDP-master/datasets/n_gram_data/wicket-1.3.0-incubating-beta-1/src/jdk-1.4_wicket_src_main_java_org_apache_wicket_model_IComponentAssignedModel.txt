/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket model
import org apache wicket component
/**
* models that wish to substitute themselves with a wrapper when they are bound
* to a component (either through imodel parameter in a constructor or via a
* call to {@link component#setmodel(imodel)}) should implement this interface.
* one reason for a model to want to do this is if it needs to be aware of the
* component it is bound to.
*
* the algorithm wicket employs is similar to this:
*
* <pre>
* void component.setmodel(imodel model)
* {
*     if (model instanceof icomponentassignedmodel)
*     {
*        this.model = ((icomponentassignedmodel)model).wraponassignment(this);
*     }
*     else
*     {
*        this.model = model;
*     }
* }
* </pre>
*
* for an example see {@link resourcemodel}
*
* @author jcompagner
* @author igor vaynberg (ivaynberg)
*/
public interface icomponentassignedmodel extends imodel
/**
* @param component
* @return the wrapmodel that wraps this model
*/
iwrapmodel wraponassignment component component