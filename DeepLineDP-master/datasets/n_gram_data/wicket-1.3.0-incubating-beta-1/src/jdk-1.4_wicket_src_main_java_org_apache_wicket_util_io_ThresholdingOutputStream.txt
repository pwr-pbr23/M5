/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util io
import java io ioexception
import java io outputstream
/**
* an output stream which triggers an event when a specified number of bytes of data have
* been written to it. the event can be used, for example, to throw an exception if a
* maximum has been reached, or to switch the underlying stream type when the threshold is
* exceeded.
* <p>
* this class overrides all <code>outputstream</code> methods. however, these overrides
* ultimately call the corresponding methods in the underlying output stream
* implementation.
* <p>
* note: this implementation may trigger the event <em>before</em> the threshold is
* actually reached, since it triggers when a pending write operation would cause the
* threshold to be exceeded.
* @author <a href="mailto:martinc@apache.org">martin cooper</a>
* @version $id$
*/
public abstract class thresholdingoutputstream extends outputstream
// ----------------------------------------------------------- data members
/**
* the threshold at which the event will be triggered.
*/
private int threshold
/**
* the number of bytes written to the output stream.
*/
private long written
/**
* whether or not the configured threshold has been exceeded.
*/
private boolean thresholdexceeded
// ----------------------------------------------------------- constructors
/**
* constructs an instance of this class which will trigger an event at the specified
* threshold.
* @param threshold the number of bytes at which to trigger an event.
*/
public thresholdingoutputstream int threshold
this threshold   threshold
// --------------------------------------------------- outputstream methods
/**
* writes the specified byte to this output stream.
* @param b the byte to be written.
* @exception ioexception if an error occurs.
*/
public void write int b  throws ioexception
checkthreshold 1
getstream   write b
written
/**
* writes <code>b.length</code> bytes from the specified byte array to this output
* stream.
* @param b the array of bytes to be written.
* @exception ioexception if an error occurs.
*/
public void write byte b  throws ioexception
checkthreshold b length
getstream   write b
written    b length
/**
* writes <code>len</code> bytes from the specified byte array starting at offset
* <code>off</code> to this output stream.
* @param b the byte array from which the data will be written.
* @param off the start offset in the byte array.
* @param len the number of bytes to write.
* @exception ioexception if an error occurs.
*/
public void write byte b  int off  int len  throws ioexception
checkthreshold len
getstream   write b  off  len
written    len
/**
* flushes this output stream and forces any buffered output bytes to be written out.
* @exception ioexception if an error occurs.
*/
public void flush   throws ioexception
getstream   flush
/**
* closes this output stream and releases any system resources associated with this
* stream.
* @exception ioexception if an error occurs.
*/
public void close   throws ioexception
try
flush
catch  ioexception ignored
// ignore
getstream   close
// --------------------------------------------------------- public methods
/**
* returns the threshold, in bytes, at which an event will be triggered.
* @return the threshold point, in bytes.
*/
public int getthreshold
return threshold
/**
* returns the number of bytes that have been written to this output stream.
* @return the number of bytes written.
*/
public long getbytecount
return written
/**
* determines whether or not the configured threshold has been exceeded for this
* output stream.
* @return <code>true</code> if the threshold has been reached; <code>false</code>
*         otherwise.
*/
public boolean isthresholdexceeded
return  written > threshold
// ------------------------------------------------------ protected methods
/**
* checks to see if writing the specified number of bytes would cause the configured
* threshold to be exceeded. if so, triggers an event to allow a concrete
* implementation to take action on this.
* @param count the number of bytes about to be written to the underlying output
*            stream.
* @exception ioexception if an error occurs.
*/
protected void checkthreshold int count  throws ioexception
if   thresholdexceeded     written   count > threshold
thresholdreached
thresholdexceeded   true
// ------------------------------------------------------- abstract methods
/**
* returns the underlying output stream, to which the corresponding
* <code>outputstream</code> methods in this class will ultimately delegate.
* @return the underlying output stream.
* @exception ioexception if an error occurs.
*/
protected abstract outputstream getstream   throws ioexception
/**
* indicates that the configured threshold has been reached, and that a subclass
* should take whatever action necessary on this event. this may include changing the
* underlying output stream.
* @exception ioexception if an error occurs.
*/
protected abstract void thresholdreached   throws ioexception