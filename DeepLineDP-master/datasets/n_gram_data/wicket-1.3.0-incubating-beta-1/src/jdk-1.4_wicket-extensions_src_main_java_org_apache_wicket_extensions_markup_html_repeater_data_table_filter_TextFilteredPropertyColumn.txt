/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket extensions markup html repeater data table filter
import org apache wicket component
import org apache wicket model imodel
import org apache wicket model propertymodel
/**
* a filtered property column that creates a textfield filter component. the
* default model of the created textfield is a property model with the same
* property expression as the one used to display data. this works well when the
* filter state object is of the same type as the objects in the data table.
*
* @author igor vaynberg (ivaynberg)
*
*/
public class textfilteredpropertycolumn extends filteredpropertycolumn
private static final long serialversionuid   1l
/**
* @param displaymodel
* @param sortproperty
* @param propertyexpression
*/
public textfilteredpropertycolumn imodel displaymodel  string sortproperty
string propertyexpression
super displaymodel  sortproperty  propertyexpression
/**
* @param displaymodel
* @param propertyexpression
*/
public textfilteredpropertycolumn imodel displaymodel  string propertyexpression
super displaymodel  propertyexpression
/**
* @see org.apache.wicket.extensions.markup.html.repeater.data.table.filter.ifilteredcolumn#getfilter(java.lang.string,
*      org.apache.wicket.extensions.markup.html.repeater.data.table.filter.filterform)
*/
public component getfilter string componentid  filterform form
return new textfilter componentid  getfiltermodel form   form
/**
* returns the model that will be passed on to the text filter. users can
* override this method to change the model.
*
* @param form
*            filter form
* @return model passed on to the text filter
*/
protected imodel getfiltermodel filterform form
return new propertymodel form getmodel    getpropertyexpression