/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util parse metapattern
import java util regex matcher
/**
* a group that captures integer values (positive and negative whole numbers,
* not java ints).
*
* @author jonathan locke
*/
public final class integergroup extends group
private static final long serialversionuid   1l
/** the radix to use when converting strings captured by this group. */
private final int radix
/**
* constructs an integergroup that parses strings that match the integer
* pattern in base 10.
*
* @see metapattern#integer
*/
public integergroup
this integer
/**
* constructs an integergroup that parses strings that match the given
* pattern in base 10.
*
* @param pattern
*			  the capturing pattern
*/
public integergroup final metapattern pattern
this pattern  10
/**
* constructs an integergroup that parses strings that match the given
* pattern in the given radix.
*
* @param pattern
*			  the capturing pattern
* @param radix
*			  the radix to use when parsing captured strings
*/
public integergroup final metapattern pattern  final int radix
super pattern
this radix   radix
/**
* @param matcher
*			  the matcher
* @return the value
* @see integergroup#getint(matcher, int)
*/
public int getint final matcher matcher
return getint matcher   1
/**
* gets an int by parsing the string matched by this capturing group. the
* integergroup's radix is used in the conversion.
*
* @param matcher
*			  the matcher
* @param defaultvalue
*			  the default value to use if this group is omitted because it
*			  is optional
* @return the parsed int value
*/
public int getint final matcher matcher  final int defaultvalue
final string value   get matcher
return value    null ? defaultvalue   integer parseint value  radix
/**
* @param matcher
*			  the matcher
* @return the value
* @see integergroup#getlong(matcher)
*/
public long getlong final matcher matcher
return getlong matcher   1l
/**
* gets a long by parsing the string matched by this capturing group. the
* integergroup's radix is used in the conversion. parsing radix.
*
* @param defaultvalue
*			  the default value to use if this group is omitted because it
*			  is optional
* @param matcher
*			  the matcher
* @return the parsed long value
*/
public long getlong final matcher matcher  final long defaultvalue
final string value   get matcher
return value    null ? defaultvalue   long parselong value  radix