/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util string
/**
* this is a prepending stringbuffer optimized for constantly prepending strings
* to the front of the buffer.
*
* @author jcompagner
*/
public class prependingstringbuffer
private int size
private int position
private char buffer
/**
* default constructor, the internal initial buffer size will be 16
*/
public prependingstringbuffer
this 16
/**
* constructs this prependingstringbuffer with the given buffer size.
*
* @param size
*            the initial size of the buffer.
*/
public prependingstringbuffer int size
this buffer   new char
this position   size
this size   0
/**
* constructs and direct inserts the given string. the buffer size will be
* string.length+16
*
* @param start
*            the string that is directly inserted.
*/
public prependingstringbuffer string start
this start length     16
prepend start
/**
* prepends one char to this prependingstringbuffer
*
* @param ch
*            the char that will be prepended
* @return this
*/
public prependingstringbuffer prepend char ch
int len   1
if  position < len
expandcapacity size   len
position    len
buffer   ch
size    len
return this
/**
* prepends the string to this prependingstringbuffer
*
* @param str
*            the string that will be prepended
* @return this
*/
public prependingstringbuffer prepend string str
int len   str length
if  position < len
expandcapacity size   len
str getchars 0  len  buffer  position   len
position    len
size    len
return this
private void expandcapacity int minimumcapacity
int newcapacity    buffer length   1    2
if  newcapacity < 0
newcapacity   integer max_value
else if  minimumcapacity > newcapacity
newcapacity   minimumcapacity
char newvalue   new char
system arraycopy buffer  position  newvalue  newcapacity   size  size
buffer   newvalue
position   newcapacity   size
/**
* retuns the size of this prependingstringbuffer
*
* @return the size
*/
public int length
return size
/**
* @see java.lang.object#tostring()
*/
public string tostring
return new string buffer  position  size