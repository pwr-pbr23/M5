/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup
/**
* base class for different kinds of markup elements. markup elements are held
* in a markup container object.
* <p>
* wicket divides markup like (x)html, wml etc. into two types of
* markupelements:
* <ul>
* <li>componenttag, which represents a "significant" markup tag (meaning that
* the tag has some meaning to wicket)
* <li>rawmarkup, which is a section of unparsed markup having no meaning to
* wicket.
* </ul>
*
* @see markup
* @see org.apache.wicket.markup.rawmarkup
* @see componenttag
* @author jonathan locke
*/
public abstract class markupelement
/**
* constructor.
*/
public markupelement
/**
* gets whether this element closes the given element.
*
* @param open
*            the open tag
* @return true if this markup element closes the given open tag
*/
public boolean closes final markupelement open
return false
/**
* this is not an implementation of equals because we don't care about
* hashcodes for markupelements yet. also, this method only compares the
* namespace, name and attributes of the given markupelements.
*
* @param element
*            the markup element to compare with
* @return true if the other element equals this one
*/
public abstract boolean equalto markupelement element
/**
* @return gets the charseqence representation of this element
*/
public abstract charsequence tocharsequence
/**
* gets a string represenetation.
*
* @return a string representation suitable for displaying to the user when
*         something goes wrong.
*/
public abstract string touserdebugstring