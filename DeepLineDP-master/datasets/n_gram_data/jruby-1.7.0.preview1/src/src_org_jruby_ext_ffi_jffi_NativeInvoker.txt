package org jruby ext ffi jffi
import com kenai jffi callcontext
import org jruby rubymodule
import org jruby ext ffi callbackinfo
import org jruby internal runtime methods callconfiguration
import org jruby internal runtime methods dynamicmethod
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
/**
*
*/
abstract public class nativeinvoker extends dynamicmethod
protected final arity arity
protected final com kenai jffi function function
private final int cbindex
private final nativecallbackfactory cbfactory
private final signature signature
public nativeinvoker rubymodule implementationclass  com kenai jffi function function  signature signature
super implementationclass  visibility public  callconfiguration framenonescopenone
this arity   arity fixed signature getparametercount
this function   function
this signature   signature
int cbindex    1
nativecallbackfactory cbfactory   null
for  int i   0  i < signature getparametercount      i
if  signature getparametertype i  instanceof callbackinfo
cbfactory   callbackmanager getinstance   getcallbackfactory implementationclass getruntime
callbackinfo  signature getparametertype i
cbindex   i
break
this cbindex   cbindex
this cbfactory   cbfactory
@override
public final dynamicmethod dup
return this
@override
public final arity getarity
return arity
@override
public final boolean isnative
return true
signature getsignature
return signature
callcontext getcallcontext
return function getcallcontext
long getfunctionaddress
return function getfunctionaddress
@override
public irubyobject call threadcontext context  irubyobject self
rubymodule clazz  string name  irubyobject args  block block
if   block isgiven      cbindex < 0
arity checkarity context getruntime    args
return call context  self  clazz  name  args
else
arity checkargumentcount context getruntime    args
arity getvalue     1  arity getvalue
irubyobject params   new irubyobject
for  int i   0  i < cbindex  i
params   args
nativecallbackpointer cb
params   cb   cbfactory newcallback block
for  int i   cbindex   1  i < params length  i
params   args
try
return call context  self  clazz  name  params
finally
cb dispose