/**
* **** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2009-2010 yoko harada <yokolet@gmail.com>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
* **** end license block *****
*/
package org jruby embed internal
import java io ioexception
import java io printwriter
import java io writer
import org jruby ruby
import org jruby rubyinteger
import org jruby rubymodule
import org jruby rubynil
import org jruby rubyobject
import org jruby rubyobjectadapter
import org jruby rubystring
import org jruby embed attributename
import org jruby embed embedevalunit
import org jruby embed embedrubyobjectadapter
import org jruby embed invokefailedexception
import org jruby embed scriptingcontainer
import org jruby embed variable bivariable
import org jruby embed variable instancevariable
import org jruby exceptions raiseexception
import org jruby javasupport java
import org jruby javasupport javaembedutils
import org jruby javasupport javaobject
import org jruby javasupport javautil
import org jruby javasupport util runtimehelpers
import org jruby runtime block
import org jruby runtime dynamicscope
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
import org jruby runtime scope manyvarsdynamicscope
/**
* implementation of {@link embedrubyobjectadapter}. users get an instance of this
* class by newobjectadapter() method of {@link scriptingcontainer}.
*
* @author yoko harada <yokolet@gmail.com>
*/
public class embedrubyobjectadapterimpl implements embedrubyobjectadapter
private rubyobjectadapter adapter   javaembedutils newobjectadapter
private scriptingcontainer container
public enum methodtype
callmethod_noarg
callmethod
callmethod_withblock
callsuper
callsuper_withblock
public embedrubyobjectadapterimpl scriptingcontainer container
this container   container
public boolean iskindof irubyobject value  rubymodule rubymodule
return adapter iskindof value  rubymodule
public irubyobject converttojavaarray irubyobject array
return adapter converttojavaarray array
public rubyinteger converttorubyinteger irubyobject obj
return adapter converttorubyinteger obj
public rubystring converttorubystring irubyobject obj
return adapter converttorubystring obj
public irubyobject setinstancevariable irubyobject obj  string variablename  irubyobject value
bivariablemap map   container getvarmap
synchronized  map
if  map containskey variablename
bivariable bv   map getvariable  rubyobject container getprovider   getruntime   gettopself    variablename
bv setrubyobject value
else
instancevariable iv   new instancevariable obj  variablename  value
map update variablename  iv
return obj getinstancevariables   setinstancevariable variablename  value
public irubyobject getinstancevariable irubyobject obj  string variablename
bivariablemap map   container getvarmap
synchronized  map
if  map containskey variablename
bivariable bv   map getvariable  rubyobject container getprovider   getruntime   gettopself    variablename
return bv getrubyobject
return null
public irubyobject callmethod irubyobject receiver  string methodname
return adapter callmethod receiver  methodname
public irubyobject callmethod irubyobject receiver  string methodname  irubyobject singlearg
return adapter callmethod receiver  methodname  singlearg
public irubyobject callmethod irubyobject receiver  string methodname  irubyobject args
return adapter callmethod receiver  methodname  args
public irubyobject callmethod irubyobject receiver  string methodname  irubyobject args  block block
return adapter callmethod receiver  methodname  args  block
public irubyobject callsuper irubyobject receiver  irubyobject args
return adapter callsuper receiver  args
public irubyobject callsuper irubyobject receiver  irubyobject args  block block
return adapter callsuper receiver  args  block
public <t> t callmethod object receiver  string methodname  class<t> returntype
try
return call methodtype callmethod_noarg  returntype  receiver  methodname  null  null
catch  invokefailedexception e
throw e
catch  throwable e
throw new invokefailedexception e
public <t> t callmethod object receiver  string methodname  object singlearg  class<t> returntype
try
return call methodtype callmethod  returntype  receiver  methodname  null  null  singlearg
catch  invokefailedexception e
throw e
catch  throwable e
throw new invokefailedexception e
public <t> t callmethod object receiver  string methodname  object args  class<t> returntype
try
return call methodtype callmethod  returntype  receiver  methodname  null  null  args
catch  invokefailedexception e
throw e
catch  throwable e
throw new invokefailedexception e
public <t> t callmethod object receiver  string methodname  object args  block block  class<t> returntype
try
return call methodtype callmethod_withblock  returntype  receiver  methodname  block  null  args
catch  invokefailedexception e
throw e
catch  throwable e
throw new invokefailedexception e
public <t> t callmethod object receiver  string methodname  class<t> returntype  embedevalunit unit
try
return call methodtype callmethod_noarg  returntype  receiver  methodname  null  unit
catch  invokefailedexception e
throw e
catch  throwable e
throw new invokefailedexception e
public <t> t callmethod object receiver  string methodname  object args  class<t> returntype  embedevalunit unit
try
return call methodtype callmethod  returntype  receiver  methodname  null  unit  args
catch  invokefailedexception e
throw e
catch  throwable e
throw new invokefailedexception e
public <t> t callmethod object receiver  string methodname  object args  block block  class<t> returntype  embedevalunit unit
try
return call methodtype callmethod_withblock  returntype  receiver  methodname  block  unit  args
catch  invokefailedexception e
throw e
catch  throwable e
throw new invokefailedexception e
public <t> t callsuper object receiver  object args  class<t> returntype
try
return call methodtype callsuper  returntype  receiver  null  null  null  args
catch  invokefailedexception e
throw e
catch  throwable e
throw new invokefailedexception e
public <t> t callsuper object receiver  object args  block block  class<t> returntype
try
return call methodtype callsuper_withblock  returntype  receiver  null  block  null  args
catch  invokefailedexception e
throw e
catch  throwable e
throw new invokefailedexception e
public object callmethod object receiver  string methodname  object    args
try
if  args length    0
return call methodtype callmethod_noarg  object class  receiver  methodname  null  null
else
return call methodtype callmethod  object class  receiver  methodname  null  null  args
catch  invokefailedexception e
throw e
catch  throwable e
throw new invokefailedexception e
public object callmethod object receiver  string methodname  block block  object    args
try
if  args length    0
throw new illegalargumentexception
return call methodtype callmethod_withblock  object class  receiver  methodname  block  null  args
catch  invokefailedexception e
throw e
catch  throwable e
throw new invokefailedexception e
private <t> t call methodtype type  class<t> returntype  object receiver  string methodname  block block  embedevalunit unit  object    args
if  methodname    null    methodname length    0
return null
ruby runtime   container getprovider   getruntime
rubyobject rubyreceiver   getreceiverobject runtime  receiver
boolean sharing_variables   true
object obj   container getattribute attributename sharing_variables
if  obj    null    obj instanceof boolean      boolean  obj     false
sharing_variables   false
try
if  sharing_variables
manyvarsdynamicscope scope
if  unit    null    unit getscope      null  scope   unit getscope
else scope   embedrubyruntimeadapterimpl getmanyvarsdynamicscope container  0
container getvarmap   inject scope  0  rubyreceiver
runtime getcurrentcontext   pushscope scope
irubyobject result   calleachtype type  rubyreceiver  methodname  block  args
if  sharing_variables
container getvarmap   retrieve rubyreceiver
if    result instanceof rubynil     returntype    null
object ret   javaembedutils rubytojava runtime  result  returntype
return ret    null ? returntype cast ret    null
return null
catch  raiseexception e
runtime printerror e getexception
throw new invokefailedexception e getmessage    e
catch  throwable e
throw new invokefailedexception e
finally
if  sharing_variables
runtime getcurrentcontext   popscope
private rubyobject getreceiverobject ruby runtime  object receiver
if  receiver    null      receiver instanceof irubyobject     receiver instanceof rubynil
return  rubyobject runtime gettopself
else if  receiver instanceof rubyobject  return  rubyobject receiver
else return  rubyobject   irubyobject receiver  getruntime   gettopself
private irubyobject calleachtype methodtype type  irubyobject rubyreceiver  string methodname  block block  object    args
ruby runtime   rubyreceiver getruntime
irubyobject rubyargs   null
if  args    null    args length > 0
rubyargs   javautil convertjavaarraytoruby runtime  args
for  int i   0  i < rubyargs length  i
irubyobject obj   rubyargs
if  obj instanceof javaobject
rubyargs   java wrap runtime  obj
threadcontext context   runtime getcurrentcontext
switch  type
case callmethod_noarg
return runtimehelpers invoke context  rubyreceiver  methodname
case callmethod
return runtimehelpers invoke context  rubyreceiver  methodname  rubyargs
case callmethod_withblock
return runtimehelpers invoke context  rubyreceiver  methodname  rubyargs  block
case callsuper
return runtimehelpers invokesuper context  rubyreceiver  rubyargs  block null_block
case callsuper_withblock
return runtimehelpers invokesuper context  rubyreceiver  rubyargs  block
default
break
return null