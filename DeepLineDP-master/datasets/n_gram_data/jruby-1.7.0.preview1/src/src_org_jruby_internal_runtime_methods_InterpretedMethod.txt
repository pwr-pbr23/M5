/***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2008 thomas e enebo <enebo@acm.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
////////////////////////////////////////////////////////////////////////////////
// note: this file is generated! do not edit this file!
// generated from: src/org/jruby/internal/runtime/methods/interpretedmethod.erb
// using arities: src/org/jruby/internal/runtime/methods/interpretedmethod.arities.erb
////////////////////////////////////////////////////////////////////////////////
package org jruby internal runtime methods
import org jruby ruby
import org jruby rubymodule
import org jruby ast argsnode
import org jruby ast node
import org jruby compiler astinspector
import org jruby evaluator astinterpreter
import org jruby exceptions jumpexception
import org jruby lexer yacc isourceposition
import org jruby parser staticscope
import org jruby runtime arity
import org jruby runtime block
import org jruby runtime positionaware
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime builtin irubyobject
/**
*
*/
public class interpretedmethod extends dynamicmethod implements methodargs  positionaware
private staticscope staticscope
private node body
private argsnode argsnode
private isourceposition position
private string file
private int line
private boolean needsscope
public interpretedmethod rubymodule implementationclass  staticscope staticscope  node body
string name  argsnode argsnode  visibility visibility  isourceposition position
super implementationclass  visibility  callconfiguration framefullscopefull  name
this body   body
this staticscope   staticscope
this argsnode   argsnode
this position   position
// we get these out ahead of time
this file   position getfile
this line   position getline
astinspector inspector   new astinspector
inspector inspect body
inspector inspect argsnode
// this optimization is temporarily disabled because of the complications
// arising from moving backref/lastline into scope and not being able
// to accurately detect that situation.
//        if (inspector.hasclosure() || inspector.hasscopeawaremethods() || staticscope.getnumberofvariables() != 0) {
//            // must have scope
needsscope   true
//        } else {
//            needsscope = false;
//        }
assert argsnode    null
public node getbodynode
return body
public argsnode getargsnode
return argsnode
public staticscope getstaticscope
return staticscope
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
assert args    null
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  args length
argsnode prepare context  runtime  self  args  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args
return call context  self  clazz  name  args  block null_block
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block null_block  runtime
argsnode checkargcount runtime  0
argsnode prepare context  runtime  self  block null_block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block null_block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  block block
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  0
argsnode prepare context  runtime  self  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block null_block  runtime
argsnode checkargcount runtime  1
argsnode prepare context  runtime  self  arg0  block null_block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block null_block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  block block
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  1
argsnode prepare context  runtime  self  arg0  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block null_block  runtime
argsnode checkargcount runtime  2
argsnode prepare context  runtime  self  arg0  arg1  block null_block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block null_block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  block block
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  2
argsnode prepare context  runtime  self  arg0  arg1  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block null_block  runtime
argsnode checkargcount runtime  3
argsnode prepare context  runtime  self  arg0  arg1  arg2  block null_block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block null_block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  block block
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  3
argsnode prepare context  runtime  self  arg0  arg1  arg2  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block null_block  runtime
argsnode checkargcount runtime  4
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  block null_block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block null_block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  block block
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  4
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block null_block  runtime
argsnode checkargcount runtime  5
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  block null_block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block null_block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4  block block
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  5
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4  irubyobject arg5
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block null_block  runtime
argsnode checkargcount runtime  6
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  arg5  block null_block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block null_block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4  irubyobject arg5  block block
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  6
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  arg5  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4  irubyobject arg5  irubyobject arg6
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block null_block  runtime
argsnode checkargcount runtime  7
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  arg5  arg6  block null_block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block null_block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4  irubyobject arg5  irubyobject arg6  block block
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  7
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  arg5  arg6  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4  irubyobject arg5  irubyobject arg6  irubyobject arg7
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block null_block  runtime
argsnode checkargcount runtime  8
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  arg5  arg6  arg7  block null_block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block null_block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4  irubyobject arg5  irubyobject arg6  irubyobject arg7  block block
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  8
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  arg5  arg6  arg7  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4  irubyobject arg5  irubyobject arg6  irubyobject arg7  irubyobject arg8
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block null_block  runtime
argsnode checkargcount runtime  9
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  arg5  arg6  arg7  arg8  block null_block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block null_block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4  irubyobject arg5  irubyobject arg6  irubyobject arg7  irubyobject arg8  block block
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  9
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  arg5  arg6  arg7  arg8  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4  irubyobject arg5  irubyobject arg6  irubyobject arg7  irubyobject arg8  irubyobject arg9
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block null_block  runtime
argsnode checkargcount runtime  10
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  arg5  arg6  arg7  arg8  arg9  block null_block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block null_block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject arg0  irubyobject arg1  irubyobject arg2  irubyobject arg3  irubyobject arg4  irubyobject arg5  irubyobject arg6  irubyobject arg7  irubyobject arg8  irubyobject arg9  block block
ruby runtime   context getruntime
int callnumber   context callnumber
try
pre context  name  self  block  runtime
argsnode checkargcount runtime  10
argsnode prepare context  runtime  self  arg0  arg1  arg2  arg3  arg4  arg5  arg6  arg7  arg8  arg9  block
return astinterpreter interpret_method runtime  context  file  line  getimplementationclass    body  name  self  block  istraceable
catch  jumpexception returnjump rj
return handlereturn context  rj  callnumber
catch  jumpexception redojump rj
return handleredo runtime
catch  jumpexception breakjump bj
return handlebreak context  runtime  bj  callnumber
finally
post runtime  context  name
protected void pre threadcontext context  string name  irubyobject self  block block  ruby runtime
if  needsscope
context premethodframeandscope getimplementationclass    name  self  block  staticscope
else
context premethodframeanddummyscope getimplementationclass    name  self  block  staticscope
protected void post ruby runtime  threadcontext context  string name
context postmethodframeandscope
protected boolean istraceable
return false
public isourceposition getposition
return position
public string getfile
return position getfile
public int getline
return position getline
@override
public arity getarity
return argsnode getarity
public dynamicmethod dup
return new interpretedmethod getimplementationclass    staticscope  body  name  argsnode  getvisibility    position