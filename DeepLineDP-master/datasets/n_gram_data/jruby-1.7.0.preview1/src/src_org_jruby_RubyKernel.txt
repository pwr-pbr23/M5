/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2001 chad fowler <chadfowler@chadfowler.com>
* copyright (c) 2001 alan moore <alan_moore@gmx.net>
* copyright (c) 2001-2002 benoit cerrina <b.cerrina@wanadoo.fr>
* copyright (c) 2001-2004 jan arne petersen <jpetersen@uni-bonn.de>
* copyright (c) 2002-2006 thomas e enebo <enebo@acm.org>
* copyright (c) 2002-2004 anders bengtsson <ndrsbngtssn@yahoo.se>
* copyright (c) 2004-2005 charles o nutter <headius@headius.com>
* copyright (c) 2004 stefan matthias aust <sma@3plus4.de>
* copyright (c) 2005 kiel hodges <jruby-devel@selfsosoft.com>
* copyright (c) 2006 evan buswell <evan@heron.sytes.net>
* copyright (c) 2006 ola bini <ola@ologix.com>
* copyright (c) 2006 michael studman <codehaus@michaelstudman.com>
* copyright (c) 2006 miguel covarrubias <mlcovarrubias@gmail.com>
* copyright (c) 2007 nick sieger <nicksieger@gmail.com>
* copyright (c) 2008 joseph lafata <joe@quibb.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import java io bytearrayoutputstream
import java util arraylist
import static org jruby rubyenumerator enumeratorize
import static org jruby anno framefield
import org jruby anno jrubymethod
import org jruby anno jrubymodule
import org jruby ast util argsutil
import org jruby common irubywarnings id
import org jruby evaluator astinterpreter
import org jruby exceptions mainexitexception
import org jruby exceptions raiseexception
import org jruby internal runtime methods callconfiguration
import org jruby internal runtime methods javamethod javamethodnblock
import org jruby javasupport util runtimehelpers
import org jruby platform platform
import org jruby runtime binding
import org jruby runtime block
import org jruby runtime calltype
import org jruby runtime threadcontext
import org jruby runtime visibility
import org jruby runtime backtrace rubystacktraceelement
import static org jruby runtime visibility
import static org jruby compatversion
import org jruby runtime builtin irubyobject
import org jruby runtime load iautoloadmethod
import org jruby util convertbytes
import org jruby util idutil
import org jruby util shelllauncher
import org jruby util typeconverter
/**
* note: for cvs history, see kernelmodule.java.
*/
@jrubymodule name
public class rubykernel
public final static class<?> iruby_object   irubyobject class
public static abstract class methodmissingmethod extends javamethodnblock
public methodmissingmethod rubymodule implementationclass
super implementationclass  visibility private  callconfiguration framefullscopenone
@override
public irubyobject call threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
try
preframeonly context  self  name  block
return methodmissing context  self  clazz  name  args  block
finally
postframeonly context
public abstract irubyobject methodmissing threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
public static rubymodule createkernelmodule ruby runtime
rubymodule module   runtime definemodule
runtime setkernel module
module defineannotatedmethods rubykernel class
runtime setrespondtomethod module searchmethod
module setflag rubyobject user7_f  false     kernel is the only module that doesn't need an implementor
runtime setprivatemethodmissing new methodmissingmethod module
@override
public irubyobject methodmissing threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
return rubykernel methodmissing context  self  name  private  calltype normal  args  block
runtime setprotectedmethodmissing new methodmissingmethod module
@override
public irubyobject methodmissing threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
return rubykernel methodmissing context  self  name  protected  calltype normal  args  block
runtime setvariablemethodmissing new methodmissingmethod module
@override
public irubyobject methodmissing threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
return rubykernel methodmissing context  self  name  public  calltype variable  args  block
runtime setsupermethodmissing new methodmissingmethod module
@override
public irubyobject methodmissing threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
return rubykernel methodmissing context  self  name  public  calltype super  args  block
runtime setnormalmethodmissing new methodmissingmethod module
@override
public irubyobject methodmissing threadcontext context  irubyobject self  rubymodule clazz  string name  irubyobject args  block block
return rubykernel methodmissing context  self  name  public  calltype normal  args  block
if   runtime is1_9         method_missing is in basicobject in 1 9
runtime setdefaultmethodmissing module searchmethod
return module
@jrubymethod module   true  visibility   private
public static irubyobject at_exit threadcontext context  irubyobject recv  block block
return context getruntime   pushexitblock context getruntime   newproc block type proc  block
@jrubymethod name      required   1  module   true  visibility   private
public static irubyobject autoload_p threadcontext context  final irubyobject recv  irubyobject symbol
ruby runtime   context getruntime
final rubymodule module   getmoduleforautoload runtime  recv
string name   symbol asjavastring
string file   module getautoloadfile name
return  file    null  ? runtime getnil     runtime newstring file
@jrubymethod required   2  module   true  visibility   private
public static irubyobject autoload final irubyobject recv  irubyobject symbol  final irubyobject file
ruby runtime   recv getruntime
string noninternedname   symbol asjavastring
if   idutil isvalidconstantname noninternedname
throw runtime newnameerror    noninternedname
if   runtime is1_9        file instanceof rubystring   throw runtime newtypeerror file  runtime getstring
rubystring filestring   rubyfile get_path runtime getcurrentcontext    file
if  filestring isempty    throw runtime newargumenterror
final string basename   symbol asjavastring   intern       interned  ok for   methods
final rubymodule module   getmoduleforautoload runtime  recv
irubyobject existingvalue   module fetchconstant basename
if  existingvalue    null    existingvalue    rubyobject undef  return runtime getnil
module defineautoload basename  new iautoloadmethod
public string file
return file tostring
public void load ruby runtime
if  runtime getloadservice   autoloadrequire file
// do not finish autoloading by cyclic autoload
module finishautoload basename
return runtime getnil
private static rubymodule getmoduleforautoload ruby runtime  irubyobject recv
rubymodule module   recv instanceof rubymodule ?  rubymodule  recv   recv getmetaclass   getrealclass
if  module    runtime getkernel
// special behavior if calling kernel.autoload directly
if  runtime is1_9
module   runtime getobject   getsingletonclass
else
module   runtime getobject
return module
@jrubymethod rest   true  frame   true  visibility   private  compat   ruby1_8
public static irubyobject method_missing threadcontext context  irubyobject recv  irubyobject args  block block
visibility lastvis   context getlastvisibility
calltype lastcalltype   context getlastcalltype
if  args length    0      args instanceof rubysymbol   throw context getruntime   newargumenterror
return methodmissingdirect context  recv   rubysymbol args  lastvis  lastcalltype  args  block
protected static irubyobject methodmissingdirect threadcontext context  irubyobject recv  rubysymbol symbol  visibility lastvis  calltype lastcalltype  irubyobject args  block block
ruby runtime   context getruntime
// create a lightweight thunk
irubyobject msg   new rubynameerror rubynameerrormessage runtime
recv
symbol
lastvis
lastcalltype
final irubyobjectexargs
final rubyclass exc
if  lastcalltype    calltype variable
exc   runtime getnomethoderror
exargs   new irubyobject msg  symbol  rubyarray newarraynocopy runtime  args  1
else
exc   runtime getnameerror
exargs   new irubyobject msg  symbol
throw new raiseexception  rubyexception exc newinstance context  exargs  block null_block
private static irubyobject methodmissing threadcontext context  irubyobject recv  string name  visibility lastvis  calltype lastcalltype  irubyobject args  block block
ruby runtime   context getruntime
// todo: pass this in?
rubysymbol symbol   runtime newsymbol name
// create a lightweight thunk
irubyobject msg   new rubynameerror rubynameerrormessage runtime
recv
symbol
lastvis
lastcalltype
final irubyobjectexargs
final rubyclass exc
if  lastcalltype    calltype variable
exc   runtime getnomethoderror
exargs   new irubyobject msg  symbol  rubyarray newarraynocopy runtime  args
else
exc   runtime getnameerror
exargs   new irubyobject msg  symbol
throw new raiseexception  rubyexception exc newinstance context  exargs  block null_block
@jrubymethod required   1  optional   2  module   true  visibility   private  compat   ruby1_8
public static irubyobject open threadcontext context  irubyobject recv  irubyobject args  block block
string arg   args converttostring   tostring
ruby runtime   context getruntime
if  arg startswith
string command   arg substring 1
// exec process, create io with process
return rubyio popen context  runtime getio    new irubyobject  runtime newstring command    block
return rubyfile open context  runtime getfile    args  block
@jrubymethod name      required   1  optional   2  module   true  visibility   private  compat   ruby1_9
public static irubyobject open19 threadcontext context  irubyobject recv  irubyobject args  block block
ruby runtime   context getruntime
if  args respondsto
args   args callmethod context
return rubyfile open context  runtime getfile    args  block
else
return open context  recv  args  block
@jrubymethod name      module   true  visibility   private
public static irubyobject getc threadcontext context  irubyobject recv
context getruntime   getwarnings   warn id deprecated_method
irubyobject defin   context getruntime   getglobalvariables   get
return defin callmethod context
@jrubymethod name      optional   1  module   true  visibility   private
public static irubyobject gets threadcontext context  irubyobject recv  irubyobject args
return rubyargsfile gets context  context getruntime   getargsfile    args
@jrubymethod name      optional   1  module   true  visibility   private
public static irubyobject abort threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
if args length    1
runtime getglobalvariables   get    callmethod context   args converttostring
exit runtime  new irubyobject   runtime getfalse      false
return runtime getnil       not reached
@jrubymethod name      required   1  module   true  visibility   private
public static irubyobject new_array threadcontext context  irubyobject recv  irubyobject object
return runtimehelpers arrayvalue context  context getruntime    object
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static irubyobject new_complex threadcontext context  irubyobject recv
return runtimehelpers invoke context  context getruntime   getcomplex
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static irubyobject new_complex threadcontext context  irubyobject recv  irubyobject arg
return runtimehelpers invoke context  context getruntime   getcomplex       arg
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static irubyobject new_complex threadcontext context  irubyobject recv  irubyobject arg0  irubyobject arg1
return runtimehelpers invoke context  context getruntime   getcomplex       arg0  arg1
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static irubyobject new_rational threadcontext context  irubyobject recv
return runtimehelpers invoke context  context getruntime   getrational
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static irubyobject new_rational threadcontext context  irubyobject recv  irubyobject arg
return runtimehelpers invoke context  context getruntime   getrational       arg
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static irubyobject new_rational threadcontext context  irubyobject recv  irubyobject arg0  irubyobject arg1
return runtimehelpers invoke context  context getruntime   getrational       arg0  arg1
@jrubymethod name      module   true  visibility   private  compat   ruby1_8
public static rubyfloat new_float irubyobject recv  irubyobject object
if object instanceof rubyfixnum
return rubyfloat newfloat object getruntime      rubyfixnum object  getdoublevalue
else if object instanceof rubyfloat
return  rubyfloat object
else if object instanceof rubybignum
return rubyfloat newfloat object getruntime    rubybignum big2dbl  rubybignum object
else if object instanceof rubystring
if   rubystring  object  getbytelist   getrealsize      0      rb_cstr_to_dbl case
throw recv getruntime   newargumenterror     object inspect
return rubynumeric str2fnum recv getruntime    rubystring object true
else if object isnil
throw recv getruntime   newtypeerror
else
rubyfloat rfloat    rubyfloat typeconverter converttotype object  recv getruntime   getfloat
if  double isnan rfloat getdoublevalue     throw recv getruntime   newargumenterror
return rfloat
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static rubyfloat new_float19 irubyobject recv  irubyobject object
ruby runtime   recv getruntime
if object instanceof rubyfixnum
return rubyfloat newfloat runtime    rubyfixnum object  getdoublevalue
else if  object instanceof rubyfloat
return  rubyfloat object
else if object instanceof rubybignum
return rubyfloat newfloat runtime  rubybignum big2dbl  rubybignum object
else if object instanceof rubystring
if   rubystring  object  getbytelist   getrealsize      0      rb_cstr_to_dbl case
throw runtime newargumenterror     object inspect
rubystring arg    rubystring object
if  arg tostring   startswith
return convertbytes bytelisttoinum19 runtime  arg getbytelist    16  true  tofloat
return rubynumeric str2fnum19 runtime  arg true
else if object isnil
throw runtime newtypeerror
else
return  rubyfloat typeconverter converttotype19 object  runtime getfloat
@jrubymethod name      required   1  module   true  visibility   private  compat   ruby1_9
public static irubyobject new_hash threadcontext context  irubyobject recv  irubyobject arg
irubyobject tmp
ruby runtime   recv getruntime
if  arg isnil    return rubyhash newhash runtime
tmp   typeconverter checkhashtype runtime  arg
if  tmp isnil
if  arg instanceof rubyarray      rubyarray  arg  isempty
return rubyhash newhash runtime
throw runtime newtypeerror     arg getmetaclass
return tmp
@jrubymethod name      required   1  module   true  visibility   private  compat   ruby1_8
public static irubyobject new_integer threadcontext context  irubyobject recv  irubyobject object
if  object instanceof rubyfloat
double val     rubyfloat object  getdoublevalue
if  val >   double  rubyfixnum max    val <  double  rubyfixnum min
return rubynumeric dbl2num context getruntime     rubyfloat object  getdoublevalue
else if  object instanceof rubyfixnum    object instanceof rubybignum
return object
else if  object instanceof rubystring
return rubynumeric str2inum context getruntime    rubystring object 0 true
irubyobject tmp   typeconverter converttotype object  context getruntime   getinteger       false
if  tmp isnil    return object converttointeger
return tmp
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static irubyobject new_integer19 threadcontext context  irubyobject recv  irubyobject object
if  object instanceof rubyfloat
double val     rubyfloat object  getdoublevalue
if  val >  double  rubyfixnum max    val <  double  rubyfixnum min
return rubynumeric dbl2num context getruntime     rubyfloat object  getdoublevalue
else if  object instanceof rubyfixnum    object instanceof rubybignum
return object
else if  object instanceof rubystring
return rubynumeric str2inum context getruntime    rubystring object 0 true
else if object instanceof rubynil
throw context getruntime   newtypeerror
irubyobject tmp   typeconverter converttotype object  context getruntime   getinteger       false
if  tmp isnil    return object converttointeger
return tmp
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static irubyobject new_integer19 threadcontext context  irubyobject recv  irubyobject object  irubyobject base
int bs   rubynumeric num2int base
if object instanceof rubystring
return rubynumeric str2inum context getruntime    rubystring object bs true
else
irubyobject tmp   object checkstringtype
if  tmp isnil
return rubynumeric str2inum context getruntime    rubystring tmp bs true
throw context getruntime   newargumenterror
@jrubymethod name      required   1  module   true  visibility   private  compat   ruby1_8
public static irubyobject new_string threadcontext context  irubyobject recv  irubyobject object
return typeconverter converttotype object  context getruntime   getstring
@jrubymethod name      required   1  module   true  visibility   private  compat   ruby1_9
public static irubyobject new_string19 threadcontext context  irubyobject recv  irubyobject object
return typeconverter converttotype19 object  context getruntime   getstring
@jrubymethod name      rest   true  module   true  visibility   private
public static irubyobject p threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
irubyobject defout   runtime getglobalvariables   get
for  int i   0  i < args length  i
if  args    null
defout callmethod context     rubyobject inspect context  args
defout callmethod context     runtime newstring
irubyobject result   runtime getnil
if  runtime is1_9
if  args length    1
result   args
else if  args length > 1
result   runtime newarray args
if  defout instanceof rubyfile
rubyfile defout  flush
return result
@jrubymethod name     required   1  module   true  compat   ruby1_9
public static irubyobject public_method threadcontext context  irubyobject recv  irubyobject symbol
return recv getmetaclass   newmethod recv  symbol asjavastring    true  public  true  false
/** rb_f_putc
*/
@jrubymethod name      required   1  module   true  visibility   private
public static irubyobject putc threadcontext context  irubyobject recv  irubyobject ch
irubyobject defout   context getruntime   getglobalvariables   get
return rubyio putc context  defout  ch
@jrubymethod name      rest   true  module   true  visibility   private
public static irubyobject puts threadcontext context  irubyobject recv  irubyobject args
irubyobject defout   context getruntime   getglobalvariables   get
return rubyio puts context  defout  args
@jrubymethod name      rest   true  module   true  visibility   private
public static irubyobject print threadcontext context  irubyobject recv  irubyobject args
irubyobject defout   context getruntime   getglobalvariables   get
return rubyio print context  defout  args
@jrubymethod name      rest   true  module   true  visibility   private
public static irubyobject printf threadcontext context  irubyobject recv  irubyobject args
if  args length    0
irubyobject defout   context getruntime   getglobalvariables   get
if    args instanceof rubystring
defout   args
args   argsutil poparray args
defout callmethod context     rubykernel sprintf context  recv  args
return context getruntime   getnil
@jrubymethod name      optional   1  module   true  visibility   private
public static irubyobject readline threadcontext context  irubyobject recv  irubyobject args
irubyobject line   gets context  recv  args
if  line isnil    throw context getruntime   neweoferror
return line
@jrubymethod name      optional   1  module   true  visibility   private
public static irubyobject readlines threadcontext context  irubyobject recv  irubyobject args
return rubyargsfile readlines context  context getruntime   getargsfile    args
@jrubymethod name      module   true  compat   ruby1_9
public static irubyobject respond_to_missing_p threadcontext context  irubyobject recv  irubyobject symbol
return context getruntime   getfalse
@jrubymethod name      module   true  compat   ruby1_9
public static irubyobject respond_to_missing_p threadcontext context  irubyobject recv  irubyobject symbol  irubyobject isprivate
return context getruntime   getfalse
/** returns value of $_.
*
* @throws typeerror if $_ is not a string or nil.
* @return value of $_ as string.
*/
private static rubystring getlastlinestring threadcontext context  ruby runtime
irubyobject line   context getcurrentscope   getlastline runtime
if  line isnil
throw runtime newtypeerror
else if    line instanceof rubystring
throw runtime newtypeerror     line getmetaclass   getname
else
return  rubystring  line
@jrubymethod name      module   true  visibility   private  reads   lastline  compat   ruby1_8
public static irubyobject sub_bang threadcontext context  irubyobject recv  irubyobject arg0  block block
return getlastlinestring context  context getruntime    sub_bang context  arg0  block
@jrubymethod name      module   true  visibility   private  reads   lastline  compat   ruby1_8
public static irubyobject sub_bang threadcontext context  irubyobject recv  irubyobject arg0  irubyobject arg1  block block
return getlastlinestring context  context getruntime    sub_bang context  arg0  arg1  block
@jrubymethod name      module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject sub threadcontext context  irubyobject recv  irubyobject arg0  block block
rubystring str    rubystring  getlastlinestring context  context getruntime    dup
if   str sub_bang context  arg0  block  isnil
context getcurrentscope   setlastline str
return str
@jrubymethod name      module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject sub threadcontext context  irubyobject recv  irubyobject arg0  irubyobject arg1  block block
rubystring str    rubystring  getlastlinestring context  context getruntime    dup
if   str sub_bang context  arg0  arg1  block  isnil
context getcurrentscope   setlastline str
return str
@jrubymethod name      module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject gsub_bang threadcontext context  irubyobject recv  irubyobject arg0  block block
return getlastlinestring context  context getruntime    gsub_bang context  arg0  block
@jrubymethod name      module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject gsub_bang threadcontext context  irubyobject recv  irubyobject arg0  irubyobject arg1  block block
return getlastlinestring context  context getruntime    gsub_bang context  arg0  arg1  block
@jrubymethod module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject gsub threadcontext context  irubyobject recv  irubyobject arg0  block block
rubystring str    rubystring  getlastlinestring context  context getruntime    dup
if   str gsub_bang context  arg0  block  isnil
context getcurrentscope   setlastline str
return str
@jrubymethod module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject gsub threadcontext context  irubyobject recv  irubyobject arg0  irubyobject arg1  block block
rubystring str    rubystring  getlastlinestring context  context getruntime    dup
if   str gsub_bang context  arg0  arg1  block  isnil
context getcurrentscope   setlastline str
return str
@jrubymethod name      module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject chop_bang threadcontext context  irubyobject recv  block block
return getlastlinestring context  context getruntime    chop_bang context
@jrubymethod module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject chop threadcontext context  irubyobject recv  block block
rubystring str   getlastlinestring context  context getruntime
if  str getbytelist   getrealsize   > 0
str    rubystring  str dup
str chop_bang context
context getcurrentscope   setlastline str
return str
@jrubymethod name      module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject chomp_bang threadcontext context  irubyobject recv
return getlastlinestring context  context getruntime    chomp_bang context
@jrubymethod name      module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject chomp_bang threadcontext context  irubyobject recv  irubyobject arg0
return getlastlinestring context  context getruntime    chomp_bang context  arg0
@jrubymethod module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject chomp threadcontext context  irubyobject recv
rubystring str   getlastlinestring context  context getruntime
rubystring dup    rubystring  str dup
if  dup chomp_bang context  isnil
return str
context getcurrentscope   setlastline dup
return dup
@jrubymethod module   true  visibility   private  reads   lastline  writes   lastline  compat   ruby1_8
public static irubyobject chomp threadcontext context  irubyobject recv  irubyobject arg0
rubystring str   getlastlinestring context  context getruntime
rubystring dup    rubystring  str dup
if  dup chomp_bang context  arg0  isnil
return str
context getcurrentscope   setlastline dup
return dup
@jrubymethod module   true  visibility   private  reads   lastline  writes    lastline  backref   compat   ruby1_8
public static irubyobject split threadcontext context  irubyobject recv
return getlastlinestring context  context getruntime    split context
@jrubymethod module   true  visibility   private  reads   lastline  writes    lastline  backref   compat   ruby1_8
public static irubyobject split threadcontext context  irubyobject recv  irubyobject arg0
return getlastlinestring context  context getruntime    split context  arg0
@jrubymethod module   true  visibility   private  reads   lastline  writes    lastline  backref   compat   ruby1_8
public static irubyobject split threadcontext context  irubyobject recv  irubyobject arg0  irubyobject arg1
return getlastlinestring context  context getruntime    split context  arg0  arg1
@jrubymethod module   true  visibility   private  reads    lastline  backref   writes    lastline  backref   compat   ruby1_8
public static irubyobject scan threadcontext context  irubyobject recv  irubyobject pattern  block block
return getlastlinestring context  context getruntime    scan context  pattern  block
@jrubymethod required   1  optional   3  module   true  visibility   private
public static irubyobject select threadcontext context  irubyobject recv  irubyobject args
return rubyio select_static context  context getruntime    args
@jrubymethod optional   1  module   true  visibility   private
public static irubyobject sleep threadcontext context  irubyobject recv  irubyobject args
long milliseconds
if  args length    0
// zero sleeps forever
milliseconds   0
else
if    args instanceof rubynumeric
throw context getruntime   newtypeerror     args getmetaclass   getname
milliseconds    long   args converttofloat   getdoublevalue     1000
if  milliseconds < 0
throw context getruntime   newargumenterror
else if  milliseconds    0
// explicit zero in mri returns immediately
return context getruntime   newfixnum 0
long starttime   system currenttimemillis
rubythread rubythread   context getthread
// spurious wakeup-loop
do
long loopstarttime   system currenttimemillis
try
// we break if we know this sleep was explicitly woken up/interrupted
if   rubythread sleep milliseconds   break
catch  interruptedexception iexcptn
milliseconds     system currenttimemillis     loopstarttime
while  milliseconds > 0
return context getruntime   newfixnum math round  system currenttimemillis     starttime    1000 0
// fixme: add at_exit and finalizers to exit, then make exit_bang not call those.
@jrubymethod name      optional   1  module   true  visibility   private
public static irubyobject exit irubyobject recv  irubyobject args
exit recv getruntime    args  false
return recv getruntime   getnil       not reached
@jrubymethod name      optional   1  module   true  visibility   private
public static irubyobject exit_bang irubyobject recv  irubyobject args
exit recv getruntime    args  true
return recv getruntime   getnil       not reached
private static void exit ruby runtime  irubyobject args  boolean hard
runtime secure 4
int status   hard ? 1   0
if  args length > 0
rubyobject argument    rubyobject  args
if  argument instanceof rubyboolean
status   argument isfalse   ? 1   0
else
status   rubynumeric fix2int argument
if  hard
if  runtime getinstanceconfig   ishardexit
system exit status
else
throw new mainexitexception status  true
else
throw runtime newsystemexit status
/** returns an array with the names of all global variables.
*
*/
@jrubymethod name      module   true  visibility   private
public static rubyarray global_variables threadcontext context  irubyobject recv
ruby runtime   context getruntime
rubyarray globalvariables   runtime newarray
for  string globalvariablename   runtime getglobalvariables   getnames
globalvariables append runtime newstring globalvariablename
return globalvariables
// in 1.9, return symbols
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static rubyarray global_variables19 threadcontext context  irubyobject recv
ruby runtime   context getruntime
rubyarray globalvariables   runtime newarray
for  string globalvariablename   runtime getglobalvariables   getnames
globalvariables append runtime newsymbol globalvariablename
return globalvariables
/** returns an array with the names of all local variables.
*
*/
@jrubymethod name      module   true  visibility   private
public static rubyarray local_variables threadcontext context  irubyobject recv
final ruby runtime   context getruntime
rubyarray localvariables   runtime newarray
for  string name  context getcurrentscope   getallnamesinscope
if  idutil islocal name   localvariables append runtime newstring name
return localvariables
// in 1.9, return symbols
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static rubyarray local_variables19 threadcontext context  irubyobject recv
final ruby runtime   context getruntime
rubyarray localvariables   runtime newarray
for  string name  context getcurrentscope   getallnamesinscope
if  idutil islocal name   localvariables append runtime newsymbol name
return localvariables
@jrubymethod module   true  visibility   private
public static rubybinding binding threadcontext context  irubyobject recv  block block
return rubybinding newbinding context getruntime    context currentbinding recv
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static rubybinding binding19 threadcontext context  irubyobject recv  block block
return rubybinding newbinding context getruntime    context currentbinding
@jrubymethod name           module   true  visibility   private
public static rubyboolean block_given_p threadcontext context  irubyobject recv
return context getruntime   newboolean context getcurrentframe   getblock   isgiven
@deprecated
public static irubyobject sprintf irubyobject recv  irubyobject args
return sprintf recv getruntime   getcurrentcontext    recv  args
@jrubymethod name           required   1  rest   true  module   true  visibility   private
public static irubyobject sprintf threadcontext context  irubyobject recv  irubyobject args
if  args length    0
throw context getruntime   newargumenterror
rubystring str   rubystring stringvalue args
irubyobject arg
if  context runtime is1_9      args length    2    args instanceof rubyhash
arg   args
else
rubyarray newargs   context getruntime   newarraynocopy args
newargs shift context
arg   newargs
return str op_format context  arg
@jrubymethod name           optional   3  module   true  visibility   private  omit   true
public static irubyobject raise threadcontext context  irubyobject recv  irubyobject args  block block
// fixme: pass block down?
ruby runtime   context getruntime
raiseexception raise
switch  args length
case 0
irubyobject lastexception   runtime getglobalvariables   get
if  lastexception isnil
raise   new raiseexception runtime  runtime getruntimeerror       false
else
// non rubyexception value is allowed to be assigned as $!.
raise   new raiseexception  rubyexception  lastexception
break
case 1
if  args instanceof rubystring
raise   new raiseexception  rubyexception  runtime getruntimeerror   newinstance context  args  block
else
raise   new raiseexception converttoexception runtime  args  null
break
case 2
raise   new raiseexception converttoexception runtime  args  args
break
default
raise   new raiseexception converttoexception runtime  args  args   args
break
if  runtime getdebug   istrue
printexceptionsummary context  runtime  raise getexception
throw raise
private static rubyexception converttoexception ruby runtime  irubyobject obj  irubyobject optionalmessage
if   obj respondsto
throw runtime newtypeerror
irubyobject exception
if  optionalmessage    null
exception   obj callmethod runtime getcurrentcontext
else
exception   obj callmethod runtime getcurrentcontext       optionalmessage
try
return  rubyexception  exception
catch  classcastexception cce
throw runtime newtypeerror
private static void printexceptionsummary threadcontext context  ruby runtime  rubyexception rex
rubystacktraceelement elements   rex getbacktraceelements
rubystacktraceelement firstelement   elements length > 0 ? elements   new rubystacktraceelement          0  false
string msg   string format
rex getmetaclass
firstelement getfilename    firstelement getlinenumber
runtime is1_9   ? typeconverter converttotype rex  runtime getstring         rex converttostring   tostring
runtime geterrorstream   print msg
/**
* require.
* mri allows to require ever .rb files or ruby extension dll (.so or .dll depending on system).
* we allow requiring either .rb files or jars.
* @param recv ruby object used to call require (any object will do and it won't be used anyway).
* @param name the name of the file to require
**/
@jrubymethod module   true  visibility   private  compat   ruby1_8
public static irubyobject require irubyobject recv  irubyobject name  block block
return requirecommon recv getruntime    recv  name  block
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static irubyobject require19 threadcontext context  irubyobject recv  irubyobject name  block block
ruby runtime   context getruntime
irubyobject tmp   name checkstringtype
if   tmp isnil
return requirecommon runtime  recv  tmp  block
return requirecommon runtime  recv
name respondsto    ? name callmethod context       name  block
private static irubyobject requirecommon ruby runtime  irubyobject recv  irubyobject name  block block
if  runtime getloadservice   require name converttostring   tostring
return runtime gettrue
return runtime getfalse
@jrubymethod required   1  optional   1  module   true  visibility   private  compat   ruby1_8
public static irubyobject load irubyobject recv  irubyobject args  block block
return loadcommon args  recv getruntime    args  block
@jrubymethod name      required   1  optional   1  module   true  visibility   private  compat   ruby1_9
public static irubyobject load19 threadcontext context  irubyobject recv  irubyobject args  block block
irubyobject file   args
if    file instanceof rubystring     file respondsto
file   file callmethod context
return loadcommon file  context getruntime    args  block
private static irubyobject loadcommon irubyobject filename  ruby runtime  irubyobject args  block block
rubystring file   filename converttostring
boolean wrap   args length    2 ? args istrue     false
runtime getloadservice   load file tostring    wrap
return runtime gettrue
@jrubymethod required   1  optional   3  module   true  visibility   private  compat   ruby1_8
public static irubyobject eval threadcontext context  irubyobject recv  irubyobject args  block block
return evalcommon context  recv  args  block  evalbinding18
@jrubymethod name      required   1  optional   3  module   true  visibility   private  compat   ruby1_9
public static irubyobject eval19 threadcontext context  irubyobject recv  irubyobject args  block block
return evalcommon context  recv  args  block  evalbinding19
private static irubyobject evalcommon threadcontext context  irubyobject recv  irubyobject args  block block  evalbinding evalbinding
ruby runtime   context getruntime
// string to eval
rubystring src   args converttostring
runtime checksafestring src
boolean bindinggiven   args length > 1     args isnil
binding binding   bindinggiven ? evalbinding converttobinding args    context currentbinding
if  args length > 2
// file given, use it and force it into binding
binding setfile args converttostring   tostring
if  args length > 3
// line given, use it and force it into binding
// -1 because parser uses zero offsets and other code compensates
binding setline   int  args converttointeger   getlongvalue      1
else
// filename given, but no line, start from the beginning.
binding setline 0
else if  bindinggiven
// binding given, use binding's file and line-number
else
// no binding given, use (eval) and start from first line.
binding setfile
binding setline 0
// set method to current frame's, which should be caller's
string framename   context getframename
if  framename    null  binding setmethod framename
if  bindinggiven  recv   binding getself
return astinterpreter evalwithbinding context  recv  src  binding
private static abstract class evalbinding
public abstract binding converttobinding irubyobject scope
private static evalbinding evalbinding18   new evalbinding
public binding converttobinding irubyobject scope
if  scope instanceof rubybinding
return   rubybinding scope  getbinding   clone
else
if  scope instanceof rubyproc
return   rubyproc  scope  getblock   getbinding   clone
else
// bomb out, it's not a binding or a proc
throw scope getruntime   newtypeerror     scope getmetaclass
private static evalbinding evalbinding19   new evalbinding
public binding converttobinding irubyobject scope
if  scope instanceof rubybinding
return   rubybinding scope  getbinding   clone
else
throw scope getruntime   newtypeerror     scope getmetaclass
@jrubymethod module   true  visibility   private
public static irubyobject callcc threadcontext context  irubyobject recv  block block
rubycontinuation continuation   new rubycontinuation context getruntime
return continuation enter context  continuation  block
@jrubymethod optional   1  module   true  visibility   private  omit   true
public static irubyobject caller threadcontext context  irubyobject recv  irubyobject args  block block
int level   args length > 0 ? rubynumeric fix2int args    1
if  level < 0
throw context getruntime   newargumenterror     level
return context createcallerbacktrace context getruntime    level
@jrubymethod name      module   true  visibility   private  compat   ruby1_8
public static irubyobject rbcatch threadcontext context  irubyobject recv  irubyobject tag  block block
ruby runtime   context runtime
rubysymbol sym   stringorsymbol tag
rubycontinuation rbcontinuation   new rubycontinuation runtime  sym
try
context pushcatch rbcontinuation getcontinuation
return rbcontinuation enter context  sym  block
finally
context popcatch
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static irubyobject rbcatch19 threadcontext context  irubyobject recv  block block
irubyobject tag   new rubyobject context runtime getobject
return rbcatch19common context  tag  block
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static irubyobject rbcatch19 threadcontext context  irubyobject recv  irubyobject tag  block block
return rbcatch19common context  tag  block
private static irubyobject rbcatch19common threadcontext context  irubyobject tag  block block
rubycontinuation rbcontinuation   new rubycontinuation context getruntime    tag
try
context pushcatch rbcontinuation getcontinuation
return rbcontinuation enter context  tag  block
finally
context popcatch
@jrubymethod name      module   true  visibility   private  compat   ruby1_8
public static irubyobject rbthrow threadcontext context  irubyobject recv  irubyobject tag  block block
return rbthrowinternal context  stringorsymbol tag   irubyobject null_array  block  uncaught18
@jrubymethod name      module   true  visibility   private  compat   ruby1_8
public static irubyobject rbthrow threadcontext context  irubyobject recv  irubyobject tag  irubyobject arg  block block
return rbthrowinternal context  stringorsymbol tag   new irubyobject  arg   block  uncaught18
private static rubysymbol stringorsymbol irubyobject obj
if  obj instanceof rubysymbol
return  rubysymbol obj
else
return rubysymbol newsymbol obj getruntime    obj asjavastring   intern
@jrubymethod name      frame   true  module   true  visibility   private  compat   compatversion ruby1_9
public static irubyobject rbthrow19 threadcontext context  irubyobject recv  irubyobject tag  block block
return rbthrowinternal context  tag  irubyobject null_array  block  uncaught19
@jrubymethod name      frame   true  module   true  visibility   private  compat   compatversion ruby1_9
public static irubyobject rbthrow19 threadcontext context  irubyobject recv  irubyobject tag  irubyobject arg  block block
return rbthrowinternal context  tag  new irubyobject  arg   block  uncaught19
private static irubyobject rbthrowinternal threadcontext context  irubyobject tag  irubyobject args  block block  uncaught uncaught
ruby runtime   context getruntime
rubycontinuation continuation continuation   context getactivecatch tag
if  continuation    null
continuation args   args
throw continuation
// no catch active for this throw
string message       tag
rubythread currentthread   context getthread
if  currentthread    runtime getthreadservice   getmainthread
throw uncaught uncaughtthrow runtime  message  tag
else
message        integer tohexstring rubyinteger fix2int currentthread id
if  runtime is1_9
throw runtime newargumenterror message
else
throw runtime newthreaderror message
private static abstract class uncaught
public abstract raiseexception uncaughtthrow ruby runtime  string message  irubyobject tag
private static final uncaught uncaught18   new uncaught
public raiseexception uncaughtthrow ruby runtime  string message  irubyobject tag
return runtime newnameerror message  tag tostring
private static final uncaught uncaught19   new uncaught
public raiseexception uncaughtthrow ruby runtime  string message  irubyobject tag
return runtime newargumenterror message
@jrubymethod module   true  visibility   private
public static irubyobject warn threadcontext context  irubyobject recv  irubyobject message
ruby runtime   context getruntime
if  runtime warningsenabled
irubyobject out   runtime getglobalvariables   get
runtimehelpers invoke context  out     message
runtimehelpers invoke context  out     runtime getglobalvariables   getdefaultseparator
return runtime getnil
@jrubymethod module   true  visibility   private
public static irubyobject set_trace_func threadcontext context  irubyobject recv  irubyobject trace_func  block block
if  trace_func isnil
context getruntime   settracefunction null
else if    trace_func instanceof rubyproc
throw context getruntime   newtypeerror
else
context getruntime   settracefunction  rubyproc  trace_func
return trace_func
@jrubymethod required   1  optional   1  module   true  visibility   private
public static irubyobject trace_var threadcontext context  irubyobject recv  irubyobject args  block block
rubyproc proc   null
string var   args tostring
// ignore if it's not a global var
if  var charat 0        return context getruntime   getnil
if  args length    1  proc   rubyproc newproc context getruntime    block  block type proc
if  args length    2
proc    rubyproc typeconverter converttotype args  context getruntime   getproc       true
context getruntime   getglobalvariables   settracevar var  proc
return context getruntime   getnil
@jrubymethod required   1  optional   1  module   true  visibility   private
public static irubyobject untrace_var threadcontext context  irubyobject recv  irubyobject args  block block
if  args length    0  throw context getruntime   newargumenterror 0  1
string var   args tostring
// ignore if it's not a global var
if  var charat 0        return context getruntime   getnil
if  args length > 1
arraylist<irubyobject> success   new arraylist<irubyobject>
for  int i   1  i < args length  i
if  context getruntime   getglobalvariables   untracevar var  args
success add args
return rubyarray newarray context getruntime    success
else
context getruntime   getglobalvariables   untracevar var
return context getruntime   getnil
@jrubymethod module   true  visibility   private  compat   ruby1_8
public static irubyobject singleton_method_added threadcontext context  irubyobject recv  irubyobject symbolid  block block
return context getruntime   getnil
@jrubymethod module   true  visibility   private  compat   ruby1_8
public static irubyobject singleton_method_removed threadcontext context  irubyobject recv  irubyobject symbolid  block block
return context getruntime   getnil
@jrubymethod module   true  visibility   private  compat   ruby1_8
public static irubyobject singleton_method_undefined threadcontext context  irubyobject recv  irubyobject symbolid  block block
return context getruntime   getnil
@jrubymethod required   1  optional   1  compat   ruby1_9
public static irubyobject define_singleton_method threadcontext context  irubyobject recv  irubyobject args  block block
if  args length    0  throw context getruntime   newargumenterror 0  1
rubyclass singleton_class   recv getsingletonclass
if  args length > 1
irubyobject arg1   args
if  context runtime getunboundmethod   isinstance args
rubyunboundmethod method    rubyunboundmethod arg1
rubymodule owner    rubymodule method owner context
if  owner issingleton
recv getmetaclass   issingleton      recv getmetaclass   iskindofmodule owner
throw context runtime newtypeerror
return singleton_class define_method context  args  args  block
else
return singleton_class define_method context  args  block
@jrubymethod name           module   true  visibility   private  compat   ruby1_8
public static rubyproc proc threadcontext context  irubyobject recv  block block
return context getruntime   newproc block type lambda  block
@jrubymethod module   true  visibility   private  compat   ruby1_9
public static rubyproc lambda threadcontext context  irubyobject recv  block block
return context getruntime   newproc block type lambda  block
@jrubymethod name      module   true  visibility   private  compat   ruby1_9
public static rubyproc proc_1_9 threadcontext context  irubyobject recv  block block
return context getruntime   newproc block type proc  block
@jrubymethod name      module   true  visibility   private
public static irubyobject loop threadcontext context  irubyobject recv  block block
if  context runtime is1_9       block isgiven
return rubyenumerator enumeratorize context runtime  recv
irubyobject nil   context getruntime   getnil
rubyclass stopiteration   context getruntime   getstopiteration
try
while  true
block yieldspecific context
context pollthreadevents
catch  raiseexception ex
if   stopiteration op_eqq context  ex getexception    istrue
throw ex
return nil
@jrubymethod name      required   2  optional   1  module   true  visibility   private
public static irubyobject test threadcontext context  irubyobject recv  irubyobject args
if  args length    0  throw context getruntime   newargumenterror
int cmd
if  args instanceof rubyfixnum
cmd    int   rubyfixnum  args  getlongvalue
else if  args instanceof rubystring
rubystring  args  getbytelist   length   > 0
// mri behavior: use first byte of string value if len > 0
cmd     rubystring  args  getbytelist   charat 0
else
cmd    int  args converttointeger   getlongvalue
// mri behavior: raise argumenterror for 'unknown command' before
// checking number of args.
switch cmd
case    case    case    case    case    case    case    case    case
case    case    case    case    case    case    case    case    case
case    case    case    case    case    case    case    case    case
case    case
break
default
throw context getruntime   newargumenterror      char  cmd
// mri behavior: now check arg count
switch cmd
case    case    case    case
if  args length    3  throw context getruntime   newargumenterror args length  3
break
default
if  args length    2  throw context getruntime   newargumenterror args length  2
break
switch  cmd
case       ?a    time      last access time for file1
return context getruntime   newfilestat args converttostring   tostring    false  atime
case       ?b    boolean   true if file1 is a block device
return rubyfiletest blockdev_p recv  args
case       ?c    boolean   true if file1 is a character device
return rubyfiletest chardev_p recv  args
case       ?c    time      last change time for file1
return context getruntime   newfilestat args converttostring   tostring    false  ctime
case       ?d    boolean   true if file1 exists and is a directory
return rubyfiletest directory_p recv  args
case       ?e    boolean   true if file1 exists
return rubyfiletest exist_p recv  args
case       ?f    boolean   true if file1 exists and is a regular file
return rubyfiletest file_p recv  args
case       ?g    boolean   true if file1 has the  cf setgid  bit
return rubyfiletest setgid_p recv  args
case       ?g    boolean   true if file1 exists and has a group ownership equal to the caller's group
return rubyfiletest grpowned_p recv  args
case       ?k    boolean   true if file1 exists and has the sticky bit set
return rubyfiletest sticky_p recv  args
case       ?m    time      last modification time for file1
return context getruntime   newfilestat args converttostring   tostring    false  mtime
case       ?l    boolean   true if file1 exists and is a symbolic link
return rubyfiletest symlink_p recv  args
case       ?o    boolean   true if file1 exists and is owned by the caller's effective uid
return rubyfiletest owned_p recv  args
case       ?o    boolean   true if file1 exists and is owned by the caller's real uid
return rubyfiletest rowned_p recv  args
case       ?p    boolean   true if file1 exists and is a fifo
return rubyfiletest pipe_p recv  args
case       ?r    boolean   true if file1 is readable by the effective uid gid of the caller
return rubyfiletest readable_p recv  args
case       ?r    boolean   true if file is readable by the real uid gid of the caller
// fixme: need to implement an readable_real_p in filetest
return rubyfiletest readable_p recv  args
case       ?s    int nil   if file1 has nonzero size  return the size  otherwise nil
return rubyfiletest size_p recv  args
case       ?s    boolean   true if file1 exists and is a socket
return rubyfiletest socket_p recv  args
case       ?u    boolean   true if file1 has the setuid bit set
return rubyfiletest setuid_p recv  args
case       ?w    boolean   true if file1 exists and is writable by effective uid gid
return rubyfiletest writable_p recv  args
case       ?w    boolean   true if file1 exists and is writable by the real uid gid
// fixme: need to implement an writable_real_p in filetest
return rubyfiletest writable_p recv  args
case       ?x    boolean   true if file1 exists and is executable by the effective uid gid
return rubyfiletest executable_p recv  args
case       ?x    boolean   true if file1 exists and is executable by the real uid gid
return rubyfiletest executable_real_p recv  args
case       ?z    boolean   true if file1 exists and has a zero length
return rubyfiletest zero_p recv  args
case       ?     boolean   true if the modification times of file1 and file2 are equal
return context getruntime   newfilestat args converttostring   tostring    false  mtimeequals args
case       ?<    boolean   true if the modification time of file1 is prior to that of file2
return context getruntime   newfilestat args converttostring   tostring    false  mtimelessthan args
case       ?>    boolean   true if the modification time of file1 is after that of file2
return context getruntime   newfilestat args converttostring   tostring    false  mtimegreaterthan args
case       ?     boolean   true if file1 and file2 are identical
return rubyfiletest identical_p recv  args  args
default
throw new internalerror
@jrubymethod name      required   1  module   true  visibility   private
public static irubyobject backquote threadcontext context  irubyobject recv  irubyobject astring
ruby runtime   context getruntime
rubystring string   astring converttostring
irubyobject args   new irubyobject  string
bytearrayoutputstream output   new bytearrayoutputstream
long tuple
try
// note: not searching executable path before invoking args
tuple   shelllauncher runandwaitpid runtime  args  output  false
catch  exception e
tuple   new long  127   1
context setlastexitstatus rubyprocess rubystatus newprocessstatus runtime  tuple  tuple
byte out   output tobytearray
int length   out length
if  platform is_windows
// mri behavior, replace '\r\n' by '\n'
int newpos   0
byte curr  next
for  int pos   0  pos < length  pos
curr   out
if  pos    length   1
out   curr
break
next   out
if  curr         next
out   curr
// trim the length
length   newpos
return rubystring newstringnocopy runtime  out  0  length
@jrubymethod name      module   true  visibility   private
public static irubyobject srand threadcontext context  irubyobject recv
return rubyrandom srandcommon context  recv
@jrubymethod name      module   true  visibility   private
public static irubyobject srand threadcontext context  irubyobject recv  irubyobject arg
return rubyrandom srandcommon context  recv  arg
@jrubymethod name      module   true  optional   1  visibility   private  compat   ruby1_8
public static irubyobject rand18 threadcontext context  irubyobject recv  irubyobject arg
return rubyrandom randcommon18 context  recv  arg
@jrubymethod name      module   true  optional   1  visibility   private  compat   ruby1_9
public static irubyobject rand19 threadcontext context  irubyobject recv  irubyobject arg
return rubyrandom randcommon19 context  recv  arg
/**
* now implemented in ruby code. see process::spawn in src/jruby/kernel19/process.rb
*
* @deprecated
*/
public static rubyfixnum spawn threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
long pid   shelllauncher runexternalwithoutwait runtime  args
return rubyfixnum newfixnum runtime  pid
@jrubymethod name      required   1  optional   9  module   true  visibility   private
public static irubyobject syscall threadcontext context  irubyobject recv  irubyobject args
throw context getruntime   newnotimplementederror
@jrubymethod name      required   1  rest   true  module   true  visibility   private  compat   compatversion ruby1_8
public static rubyboolean system threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
return systemcommon context  recv  args     0 ? runtime gettrue     runtime getfalse
@jrubymethod name      required   1  rest   true  module   true  visibility   private  compat   compatversion ruby1_9
public static irubyobject system19 threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
if  args instanceof rubyhash
rubyhash env    rubyhash  args converttohash
if  env    null
runtime getenv   merge_bang context  env  block null_block
// drop the first element for calling systemcommon()
irubyobject rest   new irubyobject
system arraycopy args  1  rest  0  args length   1
args   rest
int resultcode   systemcommon context  recv  args
switch  resultcode
case 0  return runtime gettrue
case 127  return runtime getnil
default  return runtime getfalse
private static int systemcommon threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
long tuple
try
if    platform is_windows    args asjavastring   matches
// looks like we need to send process to the background
shelllauncher runwithoutwait runtime  args
return 0
tuple   shelllauncher runandwaitpid runtime  args
catch  exception e
tuple   new long  127   1
context setlastexitstatus rubyprocess rubystatus newprocessstatus runtime  tuple  tuple
return  int tuple
@jrubymethod name        required   1  rest   true  module   true  compat   ruby1_8  visibility   private
public static irubyobject exec threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
return execcommon runtime  null  null  null  args
@jrubymethod required   4  module   true  compat   ruby1_9  visibility   private
public static irubyobject _exec_internal threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
irubyobject env   args
irubyobject prog   args
irubyobject options   args
rubyarray cmdargs    rubyarray args
rubyio checkexecoptions options
return execcommon runtime  env  prog  options  cmdargs tojavaarray
private static irubyobject execcommon ruby runtime  irubyobject env  irubyobject prog  irubyobject options  irubyobject args
// this is a fairly specific hack for empty string, but it does the job
if  args length    1    args converttostring   isempty
throw runtime newerrnoenoenterror args converttostring   tostring
threadcontext context   runtime getcurrentcontext
if  env    null     env isnil
rubyhash envmap    rubyhash  env converttohash
if  envmap    null
runtime getenv   merge_bang context  envmap  block null_block
if  prog    null    prog isnil    prog   null
int resultcode
boolean nativefailed   false
try
try
// args to strings
string argv   new string
for  int i   0  i < args length  i
argv   args asjavastring
resultcode   runtime getposix   exec prog    null ? null   prog asjavastring    argv
// only here because native exec could not exec (always -1)
nativefailed   true
catch  raiseexception e        not implemented error
// fall back onto our existing code if native not available
// fixme: make jnr-posix pure-java backend do this as well
resultcode   shelllauncher execandwait runtime  args
catch  raiseexception e
throw e     no need to wrap this exception
catch  exception e
throw runtime newerrnoenoenterror
if  nativefailed
throw runtime newerrnofromlastposixerrno
exit runtime  new irubyobject  runtime newfixnum resultcode    true
// not reached
return runtime getnil
@jrubymethod name      module   true  visibility   private  compat   ruby1_8
public static irubyobject fork threadcontext context  irubyobject recv  block block
ruby runtime   context getruntime
throw runtime newnotimplementederror
@jrubymethod name      module   true  visibility   private  compat   ruby1_9  notimplemented   true
public static irubyobject fork19 threadcontext context  irubyobject recv  block block
ruby runtime   context getruntime
throw runtime newnotimplementederror
@jrubymethod module   true
public static irubyobject tap threadcontext context  irubyobject recv  block block
block yield context  recv
return recv
@jrubymethod name           rest   true  compat   ruby1_9
public static irubyobject to_enum threadcontext context  irubyobject recv  irubyobject args
ruby runtime   context getruntime
switch  args length
case 0  return enumeratorize runtime  recv
case 1  return enumeratorize runtime  recv  args asjavastring
case 2  return enumeratorize runtime  recv  args asjavastring    args
default
irubyobject enumargs   new irubyobject
system arraycopy args  1  enumargs  0  enumargs length
return enumeratorize runtime  recv  args asjavastring    enumargs
@jrubymethod name             module   true  visibility   private  reads   methodname  omit   true
public static irubyobject __method__ threadcontext context  irubyobject recv
string framename   context getframename
if  framename    null
return context nil
return context runtime newsymbol framename
@jrubymethod module   true  compat   ruby1_9
public static irubyobject singleton_class irubyobject recv
return recv getsingletonclass
@jrubymethod rest   true  compat   ruby1_9
public static irubyobject public_send threadcontext context  irubyobject recv  irubyobject args
recv getmetaclass   checkmethodbound context  args  public
return   rubyobject recv  send19 context  args  block null_block
// moved binding of these methods here, since kernel can be included into
// basicobject subclasses, and these methods must still work.
// see jruby-4871
@jrubymethod name      required   1  compat   ruby1_8
public static irubyobject op_equal threadcontext context  irubyobject self  irubyobject other
return   rubybasicobject self  op_equal context  other
@jrubymethod name      required   1  compat   ruby1_8
public static irubyobject equal_p threadcontext context  irubyobject self  irubyobject other
return   rubybasicobject self  equal_p context  other
@jrubymethod name      required   1
public static irubyobject eql_p irubyobject self  irubyobject obj
return   rubybasicobject self  eql_p obj
@jrubymethod name      required   1
public static irubyobject op_eqq threadcontext context  irubyobject self  irubyobject other
return   rubybasicobject self  op_eqq context  other
@jrubymethod name      required   1  compat   ruby1_9
public static irubyobject op_cmp threadcontext context  irubyobject self  irubyobject other
return   rubybasicobject self  op_cmp context  other
@jrubymethod name      required   1  visibility   private
public static irubyobject initialize_copy irubyobject self  irubyobject original
return   rubybasicobject self  initialize_copy original
@jrubymethod name      compat   ruby1_8
public static rubyboolean respond_to_p irubyobject self  irubyobject mname
return   rubybasicobject self  respond_to_p mname
@jrubymethod name      compat   ruby1_9
public static irubyobject respond_to_p19 irubyobject self  irubyobject mname
return   rubybasicobject self  respond_to_p19 mname
@jrubymethod name      compat   ruby1_8
public static rubyboolean respond_to_p irubyobject self  irubyobject mname  irubyobject includeprivate
return   rubybasicobject self  respond_to_p mname  includeprivate
@jrubymethod name      compat   ruby1_9
public static irubyobject respond_to_p19 irubyobject self  irubyobject mname  irubyobject includeprivate
return   rubybasicobject self  respond_to_p19 mname  includeprivate
@jrubymethod name           compat   ruby1_8
public static irubyobject id irubyobject self
return   rubybasicobject self  id
@jrubymethod name      compat   ruby1_8
public static irubyobject id_deprecated irubyobject self
return   rubybasicobject self  id_deprecated
@jrubymethod name
public static rubyfixnum hash irubyobject self
return   rubybasicobject self  hash
@jrubymethod name
public static rubyclass type irubyobject self
return   rubybasicobject self  type
@jrubymethod name
public static rubyclass type_deprecated irubyobject self
return   rubybasicobject self  type_deprecated
@jrubymethod name
public static irubyobject rbclone irubyobject self
return   rubybasicobject self  rbclone
@jrubymethod
public static irubyobject dup irubyobject self
return   rubybasicobject self  dup
@jrubymethod name      optional   1
public static irubyobject display threadcontext context  irubyobject self  irubyobject args
return   rubybasicobject self  display context  args
@jrubymethod name
public static rubyboolean tainted_p threadcontext context  irubyobject self
return   rubybasicobject self  tainted_p context
@jrubymethod name
public static irubyobject taint threadcontext context  irubyobject self
return   rubybasicobject self  taint context
@jrubymethod name
public static irubyobject untaint threadcontext context  irubyobject self
return   rubybasicobject self  untaint context
@jrubymethod name
public static irubyobject freeze threadcontext context  irubyobject self
return   rubybasicobject self  freeze context
@jrubymethod name
public static rubyboolean frozen_p threadcontext context  irubyobject self
return   rubybasicobject self  frozen_p context
@jrubymethod name      compat   ruby1_9
public static rubyboolean untrusted_p threadcontext context  irubyobject self
return   rubybasicobject self  untrusted_p context
@jrubymethod compat   ruby1_9
public static irubyobject untrust threadcontext context  irubyobject self
return   rubybasicobject self  untrust context
@jrubymethod compat   ruby1_9
public static irubyobject trust threadcontext context  irubyobject self
return   rubybasicobject self  trust context
@jrubymethod name
public static irubyobject inspect irubyobject self
return   rubybasicobject self  inspect
@jrubymethod name      required   1
public static rubyboolean instance_of_p threadcontext context  irubyobject self  irubyobject type
return   rubybasicobject self  instance_of_p context  type
@jrubymethod name           required   1
public static rubyboolean kind_of_p threadcontext context  irubyobject self  irubyobject type
return   rubybasicobject self  kind_of_p context  type
@jrubymethod name      optional   1  compat   ruby1_8
public static irubyobject methods threadcontext context  irubyobject self  irubyobject args
return   rubybasicobject self  methods context  args
@jrubymethod name      optional   1  compat   ruby1_9
public static irubyobject methods19 threadcontext context  irubyobject self  irubyobject args
return   rubybasicobject self  methods19 context  args
@jrubymethod name      optional   1  compat   ruby1_8
public static irubyobject public_methods threadcontext context  irubyobject self  irubyobject args
return   rubybasicobject self  public_methods context  args
@jrubymethod name      optional   1  compat   ruby1_9
public static irubyobject public_methods19 threadcontext context  irubyobject self  irubyobject args
return   rubybasicobject self  public_methods19 context  args
@jrubymethod name      optional   1  compat   ruby1_8
public static irubyobject protected_methods threadcontext context  irubyobject self  irubyobject args
return   rubybasicobject self  protected_methods context  args
@jrubymethod name      optional   1  compat   ruby1_9
public static irubyobject protected_methods19 threadcontext context  irubyobject self  irubyobject args
return   rubybasicobject self  protected_methods19 context  args
@jrubymethod name      optional   1  compat   ruby1_8
public static irubyobject private_methods threadcontext context  irubyobject self  irubyobject args
return   rubybasicobject self  private_methods context  args
@jrubymethod name      optional   1  compat   ruby1_9
public static irubyobject private_methods19 threadcontext context  irubyobject self  irubyobject args
return   rubybasicobject self  private_methods19 context  args
@jrubymethod name      optional   1  compat   ruby1_8
public static rubyarray singleton_methods threadcontext context  irubyobject self  irubyobject args
return   rubybasicobject self  singleton_methods context  args
@jrubymethod name      optional   1   compat   ruby1_9
public static rubyarray singleton_methods19 threadcontext context  irubyobject self  irubyobject args
return   rubybasicobject self  singleton_methods19 context  args
@jrubymethod name      required   1
public static irubyobject method irubyobject self  irubyobject symbol
return   rubybasicobject self  method symbol
@jrubymethod name      required   1  compat   ruby1_9
public static irubyobject method19 irubyobject self  irubyobject symbol
return   rubybasicobject self  method19 symbol
@jrubymethod name
public static irubyobject to_s irubyobject self
return   rubybasicobject self  to_s
@jrubymethod name      visibility   public  compat   ruby1_8
public static rubyarray to_a irubyobject self
return   rubybasicobject self  to_a
@jrubymethod compat   ruby1_8
public static irubyobject instance_eval threadcontext context  irubyobject self  block block
return   rubybasicobject self  instance_eval context  block
@jrubymethod compat   ruby1_8
public static irubyobject instance_eval threadcontext context  irubyobject self  irubyobject arg0  block block
return   rubybasicobject self  instance_eval context  arg0  block
@jrubymethod compat   ruby1_8
public static irubyobject instance_eval threadcontext context  irubyobject self  irubyobject arg0  irubyobject arg1  block block
return   rubybasicobject self  instance_eval context  arg0  arg1  block
@jrubymethod compat   ruby1_8
public static irubyobject instance_eval threadcontext context  irubyobject self  irubyobject arg0  irubyobject arg1  irubyobject arg2  block block
return   rubybasicobject self  instance_eval context  arg0  arg1  arg2  block
@jrubymethod optional   3  rest   true  compat   ruby1_8
public static irubyobject instance_exec threadcontext context  irubyobject self  irubyobject args  block block
return   rubybasicobject self  instance_exec context  args  block
@jrubymethod name      required   1  rest   true
public static irubyobject extend irubyobject self  irubyobject args
return   rubybasicobject self  extend args
@jrubymethod name           compat   ruby1_8
public static irubyobject send threadcontext context  irubyobject self  block block
return   rubybasicobject self  send context  block
@jrubymethod name           compat   ruby1_8
public static irubyobject send threadcontext context  irubyobject self  irubyobject arg0  block block
return   rubybasicobject self  send context  arg0  block
@jrubymethod name           compat   ruby1_8
public static irubyobject send threadcontext context  irubyobject self  irubyobject arg0  irubyobject arg1  block block
return   rubybasicobject self  send context  arg0  arg1  block
@jrubymethod name           compat   ruby1_8
public static irubyobject send threadcontext context  irubyobject self  irubyobject arg0  irubyobject arg1  irubyobject arg2  block block
return   rubybasicobject self  send context  arg0  arg1  arg2  block
@jrubymethod name           rest   true  compat   ruby1_8
public static irubyobject send threadcontext context  irubyobject self  irubyobject args  block block
return   rubybasicobject self  send context  args  block
@jrubymethod name        compat   ruby1_9
public static irubyobject send19 threadcontext context  irubyobject self  block block
return   rubybasicobject self  send19 context  block
@jrubymethod name        compat   ruby1_9
public static irubyobject send19 threadcontext context  irubyobject self  irubyobject arg0  block block
return   rubybasicobject self  send19 context  arg0  block
@jrubymethod name        compat   ruby1_9
public static irubyobject send19 threadcontext context  irubyobject self  irubyobject arg0  irubyobject arg1  block block
return   rubybasicobject self  send19 context  arg0  arg1  block
@jrubymethod name        compat   ruby1_9
public static irubyobject send19 threadcontext context  irubyobject self  irubyobject arg0  irubyobject arg1  irubyobject arg2  block block
return   rubybasicobject self  send19 context  arg0  arg1  arg2  block
@jrubymethod name        rest   true  compat   ruby1_9
public static irubyobject send19 threadcontext context  irubyobject self  irubyobject args  block block
return   rubybasicobject self  send19 context  args  block
@jrubymethod name
public static irubyobject nil_p threadcontext context  irubyobject self
return   rubybasicobject self  nil_p context
@jrubymethod name      required   1  compat   ruby1_8
public static irubyobject op_match threadcontext context  irubyobject self  irubyobject arg
return   rubybasicobject self  op_match context  arg
@jrubymethod name      required   1  compat   ruby1_9
public static irubyobject op_match19 threadcontext context  irubyobject self  irubyobject arg
return   rubybasicobject self  op_match19 context  arg
@jrubymethod name      required   1  compat   ruby1_9
public static irubyobject op_not_match threadcontext context  irubyobject self  irubyobject arg
return   rubybasicobject self  op_not_match context  arg
@jrubymethod name      required   1
public static irubyobject instance_variable_defined_p threadcontext context  irubyobject self  irubyobject name
return   rubybasicobject self  instance_variable_defined_p context  name
@jrubymethod name      required   1
public static irubyobject instance_variable_get threadcontext context  irubyobject self  irubyobject name
return   rubybasicobject self  instance_variable_get context  name
@jrubymethod name      required   2
public static irubyobject instance_variable_set irubyobject self  irubyobject name  irubyobject value
return   rubybasicobject self  instance_variable_set name  value
@jrubymethod visibility   private
public static irubyobject remove_instance_variable threadcontext context  irubyobject self  irubyobject name  block block
return   rubybasicobject self  remove_instance_variable context  name  block
@jrubymethod name
public static rubyarray instance_variables threadcontext context  irubyobject self
return   rubybasicobject self  instance_variables context
@jrubymethod name      compat   ruby1_9
public static rubyarray instance_variables19 threadcontext context  irubyobject self
return   rubybasicobject self  instance_variables19 context