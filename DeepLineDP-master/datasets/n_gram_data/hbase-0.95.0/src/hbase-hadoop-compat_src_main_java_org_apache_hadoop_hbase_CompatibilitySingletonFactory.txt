/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase
import org apache commons logging log
import org apache commons logging logfactory
import java util hashmap
import java util iterator
import java util map
import java util serviceloader
/**
*  factory for classes supplied by hadoop compatibility modules.  only one of each class will be
*  created.
*/
public class compatibilitysingletonfactory extends compatibilityfactory
private static final log log   logfactory getlog compatibilitysingletonfactory class
private static final map<class  object> instances   new hashmap<class  object>
/**
* this is a static only class don't let anyone create an instance.
*/
protected compatibilitysingletonfactory
/**
* get the singleton instance of any classes defined by compatibiliy jar's
*
* @return the singleton
*/
@suppresswarnings
public static synchronized <t> t getinstance class<t> klass
t instance    t  instances get klass
if  instance    null
try
serviceloader<t> loader   serviceloader load klass
iterator<t> it   loader iterator
instance   it next
if  it hasnext
stringbuilder msg   new stringbuilder
msg append
append klass
append    append instance getclass
append
while  it hasnext
msg append it next    append
msg append
log warn msg
catch  exception e
throw new runtimeexception createexceptionstring klass   e
catch  error e
throw new runtimeexception createexceptionstring klass   e
// if there was nothing returned and no exception then throw an exception.
if  instance    null
throw new runtimeexception createexceptionstring klass
instances put klass  instance
return instance