/**
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase master handler
import java io ioexception
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop classification interfaceaudience
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase server
import org apache hadoop hbase servername
import org apache hadoop hbase executor eventtype
import org apache hadoop hbase master deadserver
import org apache hadoop hbase master masterservices
import org apache zookeeper keeperexception
/**
* shutdown handler for the server hosting <code>.meta.</code>
*/
@interfaceaudience private
public class metaservershutdownhandler extends servershutdownhandler
private static final log log   logfactory getlog metaservershutdownhandler class
public metaservershutdownhandler final server server
final masterservices services
final deadserver deadservers  final servername servername
super server  services  deadservers  servername
eventtype m_meta_server_shutdown  true
@override
public void process   throws ioexception
boolean gotexception   true
try
try
log info     servername
if  this shouldsplithlog
this services getmasterfilesystem   splitmetalog servername
catch  ioexception ioe
this services getexecutorservice   submit this
this deadservers add servername
throw new ioexception
servername      ioe
// assign meta if we were carrying it.
// check again: region may be assigned to other where because of rit
// timeout
if  this services getassignmentmanager   iscarryingmeta servername
log info     servername
this services getassignmentmanager   regionoffline hregioninfo first_meta_regioninfo
verifyandassignmetawithretries
else
log info
gotexception   false
finally
if  gotexception
// if we had an exception, this.deadservers.finish will be skipped in super.process()
this deadservers finish servername
super process
/**
* before assign the meta region, ensure it haven't
*  been assigned by other place
* <p>
* under some scenarios, the meta region can be opened twice, so it seemed online
* in two regionserver at the same time.
* if the meta region has been assigned, so the operation can be canceled.
* @throws interruptedexception
* @throws ioexception
* @throws keeperexception
*/
private void verifyandassignmeta
throws interruptedexception  ioexception  keeperexception
long timeout   this server getconfiguration
getlong    1000
if   this server getcatalogtracker   verifymetaregionlocation timeout
this services getassignmentmanager   assignmeta
else if  servername equals server getcatalogtracker   getmetalocation
throw new ioexception
servername
else
log info
server getcatalogtracker   getmetalocation
/**
* failed many times, shutdown processing
* @throws ioexception
*/
private void verifyandassignmetawithretries   throws ioexception
int itimes   this server getconfiguration   getint
10
long waittime   this server getconfiguration   getlong
1000
int iflag   0
while  true
try
verifyandassignmeta
break
catch  keeperexception e
this server abort    e
throw new ioexception    e
catch  exception e
if  iflag >  itimes
this server abort     itimes
e
throw new ioexception    e
try
thread sleep waittime
catch  interruptedexception e1
log warn    e1
thread currentthread   interrupt
throw new ioexception    e1
iflag
@override
public string tostring
string name
if server    null    server getservername      null
name   server getservername   tostring
return getclass   getsimplename         name       getseqid