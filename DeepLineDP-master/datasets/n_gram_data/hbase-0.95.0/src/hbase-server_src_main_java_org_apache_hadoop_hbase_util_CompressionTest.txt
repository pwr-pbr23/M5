/**
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase util
import java io ioexception
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop classification interfaceaudience
import org apache hadoop classification interfacestability
import org apache hadoop conf configuration
import org apache hadoop fs filesystem
import org apache hadoop fs path
import org apache hadoop hbase hbaseconfiguration
import org apache hadoop hbase io compress compression
import org apache hadoop hbase io hfile cacheconfig
import org apache hadoop hbase io hfile hfile
import org apache hadoop io compress compressor
/**
* compression validation test.  checks compression is working.  be sure to run
* on every node in your cluster.
*/
@interfaceaudience public
@interfacestability evolving
public class compressiontest
static final log log   logfactory getlog compressiontest class
public static boolean testcompression string codec
codec   codec tolowercase
compression algorithm a
try
a   compression getcompressionalgorithmbyname codec
catch  illegalargumentexception e
log warn     codec
return false
try
testcompression a
return true
catch  ioexception ignored
log warn     codec  ignored
return false
private final static boolean compressiontestresults
new boolean
static
for  int i   0   i < compressiontestresults length     i
compressiontestresults   null
public static void testcompression compression algorithm algo
throws ioexception
if  compressiontestresults    null
if  compressiontestresults
return      already passed test  dont do it again
else
// failed.
throw new ioexception     algo getname
try
compressor c   algo getcompressor
algo returncompressor c
compressiontestresults   true     passes
catch  throwable t
compressiontestresults   false     failure
throw new ioexception t
protected static path path   new path
public static void usage
system err println
compressiontest class
system exit 1
public static void dosmoketest filesystem fs  path path  string codec
throws exception
configuration conf   hbaseconfiguration create
hfile writer writer   hfile getwriterfactorynocache conf
withpath fs  path
withcompression codec
create
writer append bytes tobytes     bytes tobytes
writer appendfileinfo bytes tobytes     bytes tobytes
writer close
hfile reader reader   hfile createreader fs  path  new cacheconfig conf
reader loadfileinfo
byte key   reader getfirstkey
boolean rc   bytes tostring key  equals
reader close
if   rc
throw new exception
bytes tostringbinary key
public static void main string args  throws exception
if  args length    2
usage
system exit 1
configuration conf   new configuration
path path   new path args
filesystem fs   path getfilesystem conf
try
dosmoketest fs  path  args
finally
fs delete path  false
system out println