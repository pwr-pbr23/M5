/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase protobuf
import java io ioexception
import java util arraylist
import java util list
import org apache hadoop classification interfaceaudience
import org apache hadoop hbase cellscanner
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase servername
import org apache hadoop hbase client result
import org apache hadoop hbase ipc serverrpccontroller
import org apache hadoop hbase protobuf generated accesscontrolprotos userpermissionsresponse
import org apache hadoop hbase protobuf generated adminprotos closeregionresponse
import org apache hadoop hbase protobuf generated adminprotos getonlineregionresponse
import org apache hadoop hbase protobuf generated adminprotos getserverinforesponse
import org apache hadoop hbase protobuf generated adminprotos openregionresponse
import org apache hadoop hbase protobuf generated adminprotos rollwalwriterresponse
import org apache hadoop hbase protobuf generated adminprotos serverinfo
import org apache hadoop hbase protobuf generated clientprotos
import org apache hadoop hbase protobuf generated clientprotos actionresult
import org apache hadoop hbase protobuf generated clientprotos scanresponse
import org apache hadoop hbase protobuf generated hbaseprotos namebytespair
import org apache hadoop hbase protobuf generated masteradminprotos catalogscanresponse
import org apache hadoop hbase protobuf generated masteradminprotos enablecatalogjanitorresponse
import org apache hadoop hbase protobuf generated regionserverstatusprotos getlastflushedsequenceidresponse
import org apache hadoop hbase regionserver regionopeningstate
import org apache hadoop hbase security access userpermission
import org apache hadoop util stringutils
import com google protobuf bytestring
import com google protobuf rpccontroller
/**
* helper utility to build protocol buffer responses,
* or retrieve data from protocol buffer responses.
*/
@interfaceaudience private
public final class responseconverter
private responseconverter
// start utilities for client
/**
* get the client results from a protocol buffer scanresponse
*
* @param response the protocol buffer scanresponse
* @return the client results in the response
*/
public static result getresults final scanresponse response
if  response    null  return null
int count   response getresultcount
result results   new result
for  int i   0  i < count  i
results   protobufutil toresult response getresult i
return results
/**
* get the results from a protocol buffer multiresponse
*
* @param proto the protocol buffer multiresponse to convert
* @param cells cells to go with the passed in <code>proto</code>.  can be null.
* @return the results that were in the multiresponse (a result or an exception).
* @throws ioexception
*/
public static list<object> getresults final clientprotos multiresponse proto
final cellscanner cells
throws ioexception
list<object> results   new arraylist<object>
list<actionresult> resultlist   proto getresultlist
for  int i   0  n   resultlist size    i < n  i
actionresult result   resultlist get i
if  result hasexception
results add protobufutil toexception result getexception
else if  result hasvalue
clientprotos result value   result getvalue
results add protobufutil toresult value  cells
else
results add new result
return results
/**
* wrap a throwable to an action result.
*
* @param t
* @return an action result
*/
public static actionresult buildactionresult final throwable t
actionresult builder builder   actionresult newbuilder
namebytespair builder parameterbuilder   namebytespair newbuilder
parameterbuilder setname t getclass   getname
parameterbuilder setvalue
bytestring copyfromutf8 stringutils stringifyexception t
builder setexception parameterbuilder build
return builder build
/**
* converts the permissions list into a protocol buffer userpermissionsresponse
*/
public static userpermissionsresponse builduserpermissionsresponse
final list<userpermission> permissions
userpermissionsresponse builder builder   userpermissionsresponse newbuilder
for  userpermission perm   permissions
builder addpermission protobufutil touserpermission perm
return builder build
// end utilities for client
// start utilities for admin
/**
* get the list of regions to flush from a rolllogwriterresponse
*
* @param proto the rolllogwriterresponse
* @return the the list of regions to flush
*/
public static byte getregions final rollwalwriterresponse proto
if  proto    null    proto getregiontoflushcount      0  return null
list<byte> regions   new arraylist<byte>
for  bytestring region  proto getregiontoflushlist
regions add region tobytearray
return  byte regions toarray
/**
* get the list of region info from a getonlineregionresponse
*
* @param proto the getonlineregionresponse
* @return the list of region info
*/
public static list<hregioninfo> getregioninfos final getonlineregionresponse proto
if  proto    null    proto getregioninfocount      0  return null
return protobufutil getregioninfos proto
/**
* get the region opening state from a openregionresponse
*
* @param proto the openregionresponse
* @return the region opening state
*/
public static regionopeningstate getregionopeningstate
final openregionresponse proto
if  proto    null    proto getopeningstatecount      1  return null
return regionopeningstate valueof
proto getopeningstate 0  name
/**
* get a list of region opening state from a openregionresponse
*
* @param proto the openregionresponse
* @return the list of region opening state
*/
public static list<regionopeningstate> getregionopeningstatelist
final openregionresponse proto
if  proto    null  return null
list<regionopeningstate> regionopeningstates   new arraylist<regionopeningstate>
for  int i   0  i < proto getopeningstatecount    i
regionopeningstates add regionopeningstate valueof
proto getopeningstate i  name
return regionopeningstates
/**
* check if the region is closed from a closeregionresponse
*
* @param proto the closeregionresponse
* @return the region close state
*/
public static boolean isclosed
final closeregionresponse proto
if  proto    null     proto hasclosed    return false
return proto getclosed
/**
* a utility to build a getserverinforesponse.
*
* @param servername
* @param webuiport
* @return the response
*/
public static getserverinforesponse buildgetserverinforesponse
final servername servername  final int webuiport
getserverinforesponse builder builder   getserverinforesponse newbuilder
serverinfo builder serverinfobuilder   serverinfo newbuilder
serverinfobuilder setservername protobufutil toservername servername
if  webuiport >  0
serverinfobuilder setwebuiport webuiport
builder setserverinfo serverinfobuilder build
return builder build
/**
* a utility to build a getonlineregionresponse.
*
* @param regions
* @return the response
*/
public static getonlineregionresponse buildgetonlineregionresponse
final list<hregioninfo> regions
getonlineregionresponse builder builder   getonlineregionresponse newbuilder
for  hregioninfo region  regions
builder addregioninfo hregioninfo convert region
return builder build
/**
* creates a response for the catalog scan request
* @return a catalogscanresponse
*/
public static catalogscanresponse buildcatalogscanresponse int numcleaned
return catalogscanresponse newbuilder   setscanresult numcleaned  build
/**
* creates a response for the catalog scan request
* @return a enablecatalogjanitorresponse
*/
public static enablecatalogjanitorresponse buildenablecatalogjanitorresponse boolean prevvalue
return enablecatalogjanitorresponse newbuilder   setprevvalue prevvalue  build
// end utilities for admin
/**
* creates a response for the last flushed sequence id request
* @return a getlastflushedsequenceidresponse
*/
public static getlastflushedsequenceidresponse buildgetlastflushedsequenceidresponse
long seqid
return getlastflushedsequenceidresponse newbuilder   setlastflushedsequenceid seqid  build
/**
* stores an exception encountered during rpc invocation so it can be passed back
* through to the client.
* @param controller the controller instance provided by the client when calling the service
* @param ioe the exception encountered
*/
public static void setcontrollerexception rpccontroller controller  ioexception ioe
if  controller    null
if  controller instanceof serverrpccontroller
serverrpccontroller controller  setfailedon ioe
else
controller setfailed stringutils stringifyexception ioe