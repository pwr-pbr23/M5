/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase regionserver
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop classification interfaceaudience
import org apache hadoop classification interfacestability
import org apache hadoop hbase compatibilitysingletonfactory
/**
* this class is for maintaining the various regionserver statistics
* and publishing them through the metrics interfaces.
* <p>
* this class has a number of metrics variables that are publicly accessible;
* these variables (objects) have methods to update their values.
*/
@interfacestability evolving
@interfaceaudience private
public class metricsregionserver
private final log log   logfactory getlog this getclass
private metricsregionserversource serversource
private metricsregionserverwrapper regionserverwrapper
public metricsregionserver metricsregionserverwrapper regionserverwrapper
this regionserverwrapper   regionserverwrapper
serversource
compatibilitysingletonfactory getinstance metricsregionserversourcefactory class
createserver regionserverwrapper
// for unit-test usage
public metricsregionserversource getmetricssource
return serversource
public metricsregionserverwrapper getregionserverwrapper
return regionserverwrapper
public void updateput long t
if  t > 1000
serversource incrslowput
serversource updateput t
public void updatedelete long t
if  t > 1000
serversource incrslowdelete
serversource updatedelete t
public void updateget long t
if  t > 1000
serversource incrslowget
serversource updateget t
public void updateincrement long t
if  t > 1000
serversource incrslowincrement
serversource updateincrement t
public void updateappend long t
if  t > 1000
serversource incrslowappend
serversource updateappend t