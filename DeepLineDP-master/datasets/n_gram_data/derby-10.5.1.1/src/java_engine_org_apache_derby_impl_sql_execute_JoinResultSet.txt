/*
derby - class org.apache.derby.impl.sql.execute.joinresultset
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby iapi error standardexception
import org apache derby iapi sql execute cursorresultset
import org apache derby iapi sql execute execrow
import org apache derby iapi sql execute noputresultset
import org apache derby iapi sql activation
import org apache derby iapi sql resultset
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi services loader generatedmethod
import org apache derby iapi types rowlocation
/**
* takes 2 noputresultsets and a join filter and returns
* the join's rows satisfying the filter as a result set.
*
*/
abstract class joinresultset extends noputresultsetimpl
implements cursorresultset
/* run time statistics variables */
public int rowsseenleft
public int rowsseenright
public int rowsreturned
public long restrictiontime
protected boolean isrightopen
protected execrow leftrow
protected execrow rightrow
protected execrow mergedrow
// set in constructor and not altered during
// life of object.
public	  noputresultset leftresultset
protected int		  leftnumcols
public	  noputresultset rightresultset
protected int		  rightnumcols
protected generatedmethod restriction
public	  boolean onerowrightside
public	  boolean notexistsrightside     right side is not exists
string usersuppliedoptimizeroverrides
/*
* class interface
*
*/
joinresultset noputresultset leftresultset
int leftnumcols
noputresultset rightresultset
int rightnumcols
activation activation
generatedmethod restriction
int resultsetnumber
boolean onerowrightside
boolean notexistsrightside
double optimizerestimatedrowcount
double optimizerestimatedcost
string usersuppliedoptimizeroverrides
super activation  resultsetnumber  optimizerestimatedrowcount
optimizerestimatedcost
this leftresultset   leftresultset
this leftnumcols   leftnumcols
this rightresultset   rightresultset
this rightnumcols   rightnumcols
this restriction   restriction
this onerowrightside   onerowrightside
this notexistsrightside   notexistsrightside
this usersuppliedoptimizeroverrides   usersuppliedoptimizeroverrides
recordconstructortime
//
// resultset interface (leftover from noputresultset)
//
/**
* clear any private state that changes during scans.
* this includes things like the last row seen, etc.
* this does not include immutable things that are
* typically set up in the constructor.
* <p>
* this method is called on open()/close() and reopen()
*/
void clearscanstate
leftrow   null
rightrow   null
mergedrow   null
/**
* open a scan on the join.
* for a join, this means:
*	o  open the left resultset
*  o  do a getnextrow() on the left resultset to establish a position
*	   and get "parameter values" for the right resultset.
*	   note: it is possible for the getnextrow() to return null, in which
*	   case there is no need to open the rightresultset.  we must remember
*	   this condition.
*	o  if the getnextrow() on the left resultset succeeded, then open()
*	   the right resultset.
*
* scan parameters are evaluated at each open, so there is probably
* some way of altering their values...
*
* @exception standardexception		thrown on error
*/
public void	opencore   throws standardexception
clearscanstate
begintime   getcurrenttimemillis
if  sanitymanager debug
sanitymanager assert    isopen
isopen   true
leftresultset opencore
leftrow   leftresultset getnextrowcore
if  leftrow    null
openright
rowsseenleft
numopens
opentime    getelapsedmillis begintime
/**
* reopen a a join.
*
* @exception standardexception thrown if cursor finished.
*/
public void	reopencore   throws standardexception
clearscanstate
// reopen the left and get the next row
leftresultset reopencore
leftrow   leftresultset getnextrowcore
if  leftrow    null
// open the right
openright
rowsseenleft
else if  isrightopen
closeright
numopens
opentime    getelapsedmillis begintime
/**
* if the result set has been opened,
* close the open scan.
* <n>
* <b>warning</b> does not track close
* time, since it is expected to be called
* directly by its subclasses, and we don't
* want to skew the times
*
* @exception standardexception thrown on error
*/
public void	close   throws standardexception
if   isopen
leftresultset close
if  isrightopen
closeright
super close
else
if  sanitymanager debug
sanitymanager debug
clearscanstate
public void finish   throws standardexception
leftresultset finish
rightresultset finish
super finish
//
// cursorresultset interface
//
/**
* a join is combining rows from two sources, so it has no
* single row location to return; just return a null.
*
* @see cursorresultset
*
* @return the row location of the current cursor row.
*/
public rowlocation getrowlocation
if  sanitymanager debug
sanitymanager throwassert
return null
/**
* a join is combining rows from two sources, so it
* should never be used in a positioned update or delete.
*
* @see cursorresultset
*
* @return a null value.
*/
public execrow getcurrentrow
if  sanitymanager debug
sanitymanager throwassert
return null
/* class implementation */
/**
* open the rightresultset.  if already open,
* just reopen.
*
* @exception standardexception		thrown on error
*/
protected void openright   throws standardexception
if  isrightopen
rightresultset reopencore
else
rightresultset opencore
isrightopen   true
/**
* close the rightresultset
*
*/
protected void closeright   throws standardexception
if  sanitymanager debug
sanitymanager assert isrightopen
rightresultset close
isrightopen   false