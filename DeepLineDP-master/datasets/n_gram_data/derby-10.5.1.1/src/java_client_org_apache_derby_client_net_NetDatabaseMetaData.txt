/*
derby - class org.apache.derby.client.net.netdatabasemetadata
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client net
import org apache derby client am configuration
import org apache derby client am productlevel
import org apache derby client am sqlexception
public class netdatabasemetadata extends org apache derby client am databasemetadata
/** true if the server supports qryclsimp. */
private boolean supportsqryclsimp_
private boolean supportslayerbstreaming_
/**
* true if the server supports session data caching
*/
private boolean supportssessiondatacaching_
public netdatabasemetadata netagent netagent  netconnection netconnection
// consider setting product level during parse
super netagent  netconnection  new productlevel netconnection productid_
netconnection targetsrvclsnm_
netconnection targetsrvrlslv_
//---------------------------call-down methods--------------------------------
public string geturl_   throws sqlexception
string urlprotocol
urlprotocol   configuration jdbcderbynetprotocol
return
urlprotocol
connection_ servernameip_
connection_ portnumber_
connection_ databasename_
//-----------------------------helper methods---------------------------------
// set flags describing the level of support for this connection.
// flags will be set based on manager level and/or specific product identifiers.
// support for a specific server version can be set as follows. for example
// if (productlevel_.greaterthanorequalto(11,1,0))
//  supportsthebestthingever = true
//
// warning warning warning !!!!
//
// if you define an instance variable of netdatabasemetadata that
// you want computefeatureset_() to compute, do not assign an
// initial value to the variable in the
// declaration. netdatabasemetadata's constructor will invoke
// databasemetadata's constructor, which then invokes
// computefeatureset_(). initialization of instance variables in
// netdatabasemetadata will happen *after* the invocation of
// computefeatureset_() and will therefore overwrite the computed
// values. so, leave instance variables uninitialized!
//
// end of warning
protected void computefeatureset_
// support for qryclsimp was added in 10.2.0
if  productlevel_ greaterthanorequalto 10  2  0
supportsqryclsimp_   true
else
supportsqryclsimp_   false
supportslayerbstreaming_
productlevel_ greaterthanorequalto 10  3  0
supportssessiondatacaching_
productlevel_ greaterthanorequalto 10  4  0
/**
* check whether the server has full support for the qryclsimp
* parameter in opnqry.
*
* @return true if qryclsimp is fully supported
*/
final boolean serversupportsqryclsimp
return supportsqryclsimp_
final boolean serversupportslayerbstreaming
return supportslayerbstreaming_
/**
* check if server supports session data caching
* @return true if the server supports this
*/
final boolean serversupportssessiondatacaching
return supportssessiondatacaching_