/*
derby - class org.apache.derby.iapi.types.datatypeutilities
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi types
import org apache derby iapi error standardexception
import org apache derby iapi reference jdbc40translation
import org apache derby iapi services io storedformatids
import java sql types
import java sql resultsetmetadata
/**
a set of static utility methods for data types.
*/
public abstract class datatypeutilities
/**
get the precision of the datatype.
@param	dtd			data type descriptor
*/
public static int getprecision datatypedescriptor dtd
int typeid   dtd gettypeid   getjdbctypeid
switch   typeid
case types char     char et alia return their # characters
case types varchar
case types longvarchar
case types clob
case types binary      	   binary types return their # bytes
case types varbinary
case types longvarbinary
case types blob
case jdbc40translation sqlxml
return dtd getmaximumwidth
case types smallint
return 5
case types boolean
return 1
return dtd getprecision
/**
get the precision of the datatype, in decimal digits
this is used by embedresultsetmetadata.
@param	dtd			data type descriptor
*/
public static int getdigitprecision datatypedescriptor dtd
int typeid   dtd gettypeid   getjdbctypeid
switch   typeid
case types float
case types double
return typeid double_precision_in_digits
case types real
return typeid real_precision_in_digits
default  return getprecision dtd
/**
is the data type currency.
@param	dtd			data type descriptor
*/
public static boolean iscurrency datatypedescriptor dtd
int typeid   dtd gettypeid   getjdbctypeid
// only the numeric and decimal types are currency
return   typeid    types decimal      typeid    types numeric
/**
is the data type case sensitive.
@param	dtd			data type descriptor
*/
public static boolean iscasesensitive datatypedescriptor dtd
int typeid   dtd gettypeid   getjdbctypeid
return  typeid    types char
typeid    types varchar
typeid    types clob
typeid    types longvarchar
typeid    jdbc40translation sqlxml
/**
is the data type nullable.
@param	dtd			data type descriptor
*/
public static int isnullable datatypedescriptor dtd
return dtd isnullable   ?
resultsetmetadata columnnullable
resultsetmetadata columnnonulls
/**
is the data type signed.
@param	dtd			data type descriptor
*/
public static boolean issigned datatypedescriptor dtd
int typeid   dtd gettypeid   getjdbctypeid
return   typeid    types integer
typeid    types float
typeid    types decimal
typeid    types smallint
typeid    types bigint
typeid    types tinyint
typeid    types numeric
typeid    types real
typeid    types double
/**
*	gets the display width of a column of a given type.
*
*	@param	dtd			data type descriptor
*
*	@return	associated column display width
*/
public	static	int getcolumndisplaysize datatypedescriptor dtd
int typeid   dtd gettypeid   getjdbctypeid
int	storagelength   dtd getmaximumwidth
return datatypeutilities getcolumndisplaysize typeid  storagelength
public	static	int getcolumndisplaysize int typeid  int storagelength
int size
switch  typeid
case types timestamp
size   26
break
case types date
size   10
break
case types time
size   8
break
case types integer
size   11
break
case types smallint
size   6
break
case types real
case types float
size   13
break
case types double
size   22
break
case types tinyint
size   15
break
case types binary
case types varbinary
case types longvarbinary
case types blob
size    2 storagelength
if  size < 0
size   integer max_value
break
case types bigint
size   20
break
case types bit
case types boolean
// types.bit == sql boolean, so 5 chars for 'false'
// in jdbc 3.0, types.bit or types.boolean = sql boolean
size   5
break
default
// maximumwidth is -1 when it is unknown.
int w   storagelength
size    w > 0 ? w   15
break
return size
/**
* compute the maximum width (column display width) of a decimal or numeric data value,
* given its precision and scale.
*
* @param precision the precision (number of digits) of the data value.
* @param scale the number of fractional digits (digits to the right of the decimal point).
*
* @return the maximum number of chracters needed to display the value.
*/
public static int computemaxwidth  int precision  int scale
// there are 3 possible cases with respect to finding the correct max
// width for decimal type.
// 1. if scale = 0, only sign should be added to precision.
// 2. scale=precision, 3 should be added to precision for sign, decimal and an additional char '0'.
// 3. precision > scale > 0, 2 should be added to precision for sign and decimal.
return  scale   0  ?  precision  1      scale    precision  ?  precision   3     precision   2