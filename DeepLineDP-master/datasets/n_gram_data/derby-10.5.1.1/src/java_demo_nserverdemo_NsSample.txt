/*
derby - class nserverdemo.nssample
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package nserverdemo
import java util properties
import java sql sqlexception
import java sql drivermanager
import java io ioexception
import java sql connection
import java sql statement
import java sql resultset
import java sql sqlexception
import java sql sqlwarning
import java io printwriter
/**
the network server sample demo program is a
simple jdbc application that interacts with the derby network server.
the program:
1.	starts the derby network server
2.	loads the ibm db2 jdbc universal driver or derby client jdbc driver
(default is the derby client jdbc driver)
3. creates the database if not already created
4. checks to see if the schema is already created, and if not,
5. creates the schema which includes the table sampletbl and corresponding indexes.
6. connects to the database
7. loads the schema by inserting data
8. starts client threads to perform database related operations
9. has each of the clients perform dml operations (select, insert, delete, update) using jdbc calls,
i)	 one client opens an embedded connection to perform database operations
you can open an embedded connection in the same jvm that starts the derby network
server.
ii)  one client opens a client connection to the derby network server to perform database operations.
10.waits for the client threads to finish the tasks
11.shuts down the derby network server at the end of the demo
<p>
usage: java nserverdemo.nssample
<p>
please note, a file derby.log is created in the directory you run this program.
this file contains the logging of connections made with the derby network server
*/
public class nssample
public static final string db2_jdbc_universal_driver   new string
public static final string derby_client_driver
public static int num_rows   50     number of rows to load initially
public static int iterations   10     each client does these many iterations
public static int num_client_threads   2
// network server control specific
private static int networkserver_port 1621
// derby database connection url for embedded environment
public static final string cs_embed_dburl
// to connect to derby network server
// this url describes the target database for type 4 connectivity
// notice that the properties may be established via the url syntax
private static final string cs_ns_dburl    networkserver_port
// url for the derby client jdbc driver.
private static final string derby_client_url    networkserver_port
// default to using the derby client jdbc driver for database connections
string url   derby_client_url
string jdbcdriver   derby_client_driver
public static void main string args  throws exception
new nserverdemo nssample   startsample args
public void startsample string args  throws exception
networkserverutil nwserver
connection conn   null
printwriter pw   null
try
// determine which jdbc driver we are using with derby
parsearguments args
pw   new printwriter system out true  	   to print messages
pw println     jdbcdriver
/* start - in order to start the network server do the following
in case you want to start the server as a script or another program
comment out the next block of code (i.e. until the comment line 'end - network server started')
also, comment out the 'shutdown derby network server' line of code at the bottom
in case you decide to comment out the starting of the network server, make sure that the
client thread is not making an embedded connection but instead making only a client connection.
also note, the server logs messages to the file derby.log in the
directory you run this program
*/
nwserver   new networkserverutil networkserver_port pw
nwserver start
boolean knowifserverup   false    do we know if server is ready to accept connections
int numtimes   5
// test to see if server is ready for connections, for 15 seconds.
while  knowifserverup     numtimes >0
try
// testing for connection to see if the network server is up and running
// if server is not ready yet, this method will throw an exception
numtimes
nwserver testforconnection
knowifserverup   true
catch exception e
system out println
thread currentthread   sleep 3000
if  knowifserverup
pw println
pw println
system exit 1
pw println
/*end - network server started*/
pw println
pw println
// load the jdbc driver
try
class forname jdbcdriver  newinstance
catch  exception e
pw println
e printstacktrace
system exit 1      critical error  so exit
// see derby documentation for description of properties that may be set
//  in the context of the network server.
properties properties   new java util properties
// the user and password properties are a must, required by jcc
properties setproperty
properties setproperty
// get database connection via drivermanager api
try
conn     connection  drivermanager getconnection url  properties
catch exception e
pw println
pw println
e printstacktrace
system exit 1      critical error  so exit
nssamplework checkandcreateschema conn pw      check and create the necessary schema if not already created
nssamplework loadschema conn num_rows pw      insert rows into the table
conn close
// start client threads to perform database related sql operations
nssampleclientthread clientthreads   new nssampleclientthread
/* only the jvm that starts the derby network server can obtain an embedded connection
please pay attention to the database url
also, you need not load the org.apache.derby.jdbc.embeddeddriver since it is already loaded when
the network server starts up.
1. derby embedded database url - jdbc:derby:databasename
*/
clientthreads   new nssampleclientthread 1 cs_embed_dburl properties pw
clientthreads start
/*
2. the below client threads obtain a client connection to derby network server
one can also get a client connection from another jvm
please be aware of the database url for obtaining a client connection
*/
for  int i 1  i<num_client_threads  i
clientthreads   new nssampleclientthread i 1 url properties pw
clientthreads start
// wait for the client threads to complete all the work
for  int i   0  i < num_client_threads  i
clientthreads join
// shutdown derby network server
pw println
nwserver shutdown
pw println
catch  exception e
e printstacktrace
finally
if pw    null  pw close
/**
* determine which jdbc driver to use by parsing the command line args.
*  accepted values:
*  jccjdbclient   - the db2 type 4 universal driver
*  derbyclient    - the derby network driver (default).
*  note: because this is just a sample, we only care about whether
*  the above values are specified.  if they are not, then we default
*  to the derby network driver.
*/
private void parsearguments string args
int length   args length
for  int index   0  index < length  index
if  args equalsignorecase
jdbcdriver   db2_jdbc_universal_driver
url   cs_ns_dburl
break
else if  args equalsignorecase
jdbcdriver   derby_client_driver
url   derby_client_url
break