/*
derby - class org.apache.derby.diag.spacetable
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby diag
import org apache derby iapi services monitor monitor
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi error standardexception
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql conn connectionutil
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary schemadescriptor
import org apache derby iapi sql dictionary tabledescriptor
import org apache derby iapi sql dictionary conglomeratedescriptor
import org apache derby iapi store access accessfactory
import org apache derby iapi store access transactioncontroller
import org apache derby iapi store access conglomeratecontroller
import org apache derby iapi store access spaceinfo
import org apache derby iapi error publicapi
import org apache derby iapi sql resultcolumndescriptor
import org apache derby impl jdbc embedresultsetmetadata
import java sql resultsetmetadata
import java sql sqlexception
import java sql types
import org apache derby vti vtitemplate
import org apache derby vti vticosting
import org apache derby vti vtienvironment
/**
spacetable is a virtual table that shows the space usage of a particular
table and its indexes.
this virtual table can be invoked by calling it
directly, and supplying the schema name and table name as arguments.
<pre> select * from new org.apache.derby.diag.spacetable('myschema','mytable') t; </pre>
if the schema name is not supplied, the default schema is used.
<pre> select * from new org.apache.derby.diag.spacetable('mytable') t; </pre>
alternatively, the table can be invoked through the system alias spacetable
<pre> select * from new spacetable('mytable') t; </pre>
<p>
note: both the schema name and the table name must be any expression that evaluates to a
string data type. if you created a schema or table name as a non-delimited identifier,
you must present their names in all upper case.
<p>the spacetable virtual table can be used to estimate whether space
might be saved by compressing a table and its indexes.
<p>the spacetable virtual table has the following columns:
<ul>
<li>conglomeratename varchar(128) - nullable.  the name of the conglomerate,
which is either the table name or the index name. (unlike the
sysconglomerates column of the same name, table id's do not appear
here).</li>
<li>isindex smallint - not nullable.  is not zero if the conglomerate is an
index, 0 otherwise.</li>
<li>numallocatedpages bigint - not nullable.  the number of pages actively
linked into the table.  the total number of pages in the file is the
sum of numallocatedpages + numfreepages.</li>
<li>numfreepages bigint - not nullable. the number of free pages that
belong to the table.  when a new page is to be linked into the table the
system will move a page from the numfreepages list to the numallocatedpages
list.  the total number of pages in the file is the sum of
numallocatedpages + numfreepages.</li>
<li>numunfilledpages bigint - not nullable.  the number of unfilled pages
that belong to the table. unfilled pages are allocated pages that are not
completely full. note that the number of unfilled pages is an estimate and
is not exact. running the same query twice can give different results on
this column. </li>
<li>pagesize integer - not nullable.  the size of the page in bytes for
that conglomerate.
</li>
<li>estimspacesaving bigint - not nullable.  the estimated space which
could possibly be saved by compressing the conglomerate, in bytes.</li>
</ul>
<p>
to get space information on all schemas and tables, use a query such as
<pre>
select v.*
from sys.sysschemas s,
sys.systables t,
new org.apache.derby.diag.spacetable(schemaname,tablename) v
where s.schemaid = t.schemaid;
</pre>
*/
public class spacetable extends vtitemplate implements vticosting
private conglominfo conglomtable
boolean initialized
int currentrow
private boolean wasnull
private string schemaname
private string tablename
private spaceinfo spaceinfo
private transactioncontroller tc
public spacetable string schemaname  string tablename
this schemaname   schemaname
this tablename   tablename
public spacetable string tablename
this tablename   tablename
private void getconglominfo languageconnectioncontext lcc
throws standardexception
datadictionary dd   lcc getdatadictionary
if  schemaname    null
schemaname   lcc getcurrentschemaname
// if schemaname is null, it gets the default schema
schemadescriptor sd   dd getschemadescriptor schemaname  tc  true
tabledescriptor td   dd gettabledescriptor tablename sd  tc
if  td    null      table does not exist
conglomtable   new conglominfo       make empty conglom table
return
conglomeratedescriptor cds   td getconglomeratedescriptors
// initialize spacetable
conglomtable   new conglominfo
for  int i   0  i < cds length  i
conglomtable   new conglominfo
cds getconglomeratenumber
cds isindex   ? cds getconglomeratename     tablename
cds isindex
private void getspaceinfo int index
throws standardexception
conglomeratecontroller cc   tc openconglomerate
conglomtable getconglomid
false
0                not for update
transactioncontroller mode_record
transactioncontroller isolation_read_committed
spaceinfo   cc getspaceinfo
cc close
cc   null
/**
@see java.sql.resultset#getmetadata
*/
public resultsetmetadata getmetadata
return metadata
/**
@see java.sql.resultset#next
@exception sqlexception if no transaction context can be found
*/
public boolean next   throws sqlexception
try
if   initialized
languageconnectioncontext lcc   connectionutil getcurrentlcc
tc   lcc gettransactionexecute
getconglominfo lcc
initialized   true
currentrow    1
if  conglomtable    null
return false
currentrow
if  currentrow >  conglomtable length
return false
spaceinfo   null
getspaceinfo currentrow
return true
catch  standardexception se
throw publicapi wrapstandardexception se
/**
@see java.sql.resultset#close
*/
public void close
conglomtable   null
spaceinfo   null
tc   null
/**
@see java.sql.resultset#getstring
*/
public string getstring int columnnumber
conglominfo conglominfo   conglomtable
string str   conglominfo getconglomname
wasnull    str    null
return str
/**
@see java.sql.resultset#getlong
*/
public long getlong int columnnumber
long longval
conglominfo conglominfo   conglomtable
switch columnnumber
case 3
longval   spaceinfo getnumallocatedpages
break
case 4
longval   spaceinfo getnumfreepages
break
case 5
longval   spaceinfo getnumunfilledpages
break
case 7
int psize   spaceinfo getpagesize
longval    spaceinfo getnumfreepages     psize
// unfilled page estimate is not reproducible/too unstable
// + ((spaceinfo.getnumunfilledpages() * psize) / 2);
break
default
longval    1
wasnull   false
if  sanitymanager debug
if  longval < 0
sanitymanager throwassert     columnnumber
currentrow
return longval
/**
@see java.sql.resultset#getshort
*/
public short getshort int columnnumber
conglominfo conglominfo   conglomtable
wasnull   false
return  short   conglominfo getisindex   ? 1   0
/**
@see java.sql.resultset#getint
*/
public int getint int columnnumber
return spaceinfo getpagesize
/**
@see java.sql.resultset#wasnull
*/
public boolean wasnull
return wasnull
/**  vti costing interface */
/**
@see vticosting#getestimatedrowcount
*/
public double getestimatedrowcount vtienvironment vtienvironment
return vticosting defaultestimatedrowcount
/**
@see vticosting#getestimatedcostperinstantiation
*/
public double getestimatedcostperinstantiation vtienvironment vtienvironment
return vticosting defaultestimatedcost
/**
@return true
@see vticosting#supportsmultipleinstantiations
*/
public boolean supportsmultipleinstantiations vtienvironment vtienvironment
return true
/*
** metadata
*/
private static final resultcolumndescriptor columninfo
embedresultsetmetadata getresultcolumndescriptor     types varchar  true  128
embedresultsetmetadata getresultcolumndescriptor              types smallint  false
embedresultsetmetadata getresultcolumndescriptor    types bigint  false
embedresultsetmetadata getresultcolumndescriptor         types bigint  false
embedresultsetmetadata getresultcolumndescriptor     types bigint  false
embedresultsetmetadata getresultcolumndescriptor             types integer  false
embedresultsetmetadata getresultcolumndescriptor     types bigint  false
private static final resultsetmetadata metadata   new embedresultsetmetadata columninfo
class conglominfo
private long conglomid
private string conglomname
private boolean isindex
public conglominfo long conglomid  string conglomname  boolean isindex
this conglomid   conglomid
this conglomname   conglomname
this isindex   isindex
public long getconglomid
return conglomid
public string getconglomname
return conglomname
public boolean getisindex
return isindex