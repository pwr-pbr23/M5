package org apache lucene analysis
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io file
import java io ioexception
import java io reader
import java util set
/** filters lettertokenizer with lowercasefilter and stopfilter. */
public final class stopanalyzer extends analyzer
private set stopwords
/** an array containing some common english words that are not usually useful
for searching. */
public static final string english_stop_words
/** builds an analyzer which removes words in english_stop_words. */
public stopanalyzer
stopwords   stopfilter makestopset english_stop_words
/** builds an analyzer with the stop words from the given set.
*/
public stopanalyzer set stopwords
this stopwords   stopwords
/** builds an analyzer which removes words in the provided array. */
public stopanalyzer string stopwords
this stopwords   stopfilter makestopset stopwords
/** builds an analyzer with the stop words from the given file.
* @see wordlistloader#getwordset(file)
*/
public stopanalyzer file stopwordsfile  throws ioexception
stopwords   wordlistloader getwordset stopwordsfile
/** builds an analyzer with the stop words from the given reader.
* @see wordlistloader#getwordset(reader)
*/
public stopanalyzer reader stopwords  throws ioexception
stopwords   wordlistloader getwordset stopwords
/** filters lowercasetokenizer with stopfilter. */
public tokenstream tokenstream string fieldname  reader reader
return new stopfilter new lowercasetokenizer reader   stopwords
/** filters lowercasetokenizer with stopfilter. */
private class savedstreams
tokenizer source
tokenstream result
public tokenstream reusabletokenstream string fieldname  reader reader  throws ioexception
savedstreams streams    savedstreams  getprevioustokenstream
if  streams    null
streams   new savedstreams
streams source   new lowercasetokenizer reader
streams result   new stopfilter streams source  stopwords
setprevioustokenstream streams
else
streams source reset reader
return streams result