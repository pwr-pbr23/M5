package org apache lucene benchmark
import java io file
import java io filereader
import java io ioexception
import org apache commons digester digester
import org apache lucene benchmark standard standardbenchmarker
import org apache lucene benchmark stats testdata
import org xml sax inputsource
import org xml sax saxexception
/**
* copyright 2005 the apache software foundation
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/**
*  sets up the benchmark driver.
*
**/
public class driver
{
private file workingdir
private benchmarker benchmarker
private benchmarkoptions options
public driver
{
public driver benchmarker benchmarker  benchmarkoptions options
{
this benchmarker   benchmarker
this options   options
/**
* creates a driver using digester
* @param inputsource
*/
public driver file workingdir  inputsource inputsource  throws ioexception  saxexception
{
digester digester   new digester
digester setvalidating false
digester addobjectcreate       standardbenchmarker class
digester addsetproperties
digester addsetnext
digester addobjectcreate       benchmarkoptions class
digester addsetproperties
digester addsetnext
digester push this
digester parse inputsource
this workingdir   workingdir
private void run   throws exception
{
testdata  data   benchmarker benchmark workingdir  options
//print out summary:
/*system.out.println("test data:");
for (int i = 0; i < data.length; i++)
{
testdata testdata = data[i];
system.out.println("---------------");
system.out.println(testdata.showrundata(testdata.getid()));
system.out.println("---------------");
}*/
public benchmarker getbenchmarker
{
return benchmarker
public void setbenchmarker benchmarker benchmarker
{
this benchmarker   benchmarker
public benchmarkoptions getoptions
{
return options
public void setoptions benchmarkoptions options
{
this options   options
public file getworkingdir
{
return workingdir
public void setworkingdir file workingdir
{
this workingdir   workingdir
public static void main string args
{
if  args length    2
{
printhelp args
system exit 0
file workingdir   new file args
file configfile   new file args
if  configfile exists
{
//setup
try
{
driver driver   new driver workingdir  new inputsource new filereader configfile
driver run
catch  exception e
{
e printstacktrace system err
private static void printhelp string args
{
system out println     driver class getname