package org apache lucene benchmark stats
/**
* copyright 2005 the apache software foundation
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java util linkedhashmap
import java util vector
import java util collection
import java util iterator
/**
* this class holds series of timedata related to a single test run. timedata
* values may contribute to different measurements, so this class provides also
* some useful methods to separate them.
*
* @author andrzej bialecki &lt;ab@getopt.org&gt;
*/
public class testrundata
private string id
/** start and end time of this test run. */
private long start   0l  end   0l
private linkedhashmap data   new linkedhashmap
public testrundata
public testrundata string id
this id   id
public linkedhashmap getdata
return data
public string getid
return id
public void setid string id
this id   id
public long getend
return end
public long getstart
return start
/** mark the starting time of this test run. */
public void startrun
start   system currenttimemillis
/** mark the ending time of this test run. */
public void endrun
end   system currenttimemillis
/** add a data point. */
public void adddata timedata td
td recordmemusage
vector v    vector  data get td name
if  v    null
v   new vector
data put td name  v
v add td clone
/** get a list of all available types of data points. */
public collection getlabels
return data keyset
/** get total values from all data points of a given type. */
public timedata gettotals string label
vector v    vector  data get label
if  v    null
return null
timedata res   new timedata     label
for  int i   0  i < v size    i
timedata td    timedata  v get i
res count    td count
res elapsed    td elapsed
return res
/** get total values from all data points of all types.
* @return a list of timedata values for all types.
*/
public vector gettotals
collection labels   getlabels
vector v   new vector
iterator it   labels iterator
while  it hasnext
timedata td   gettotals  string  it next
v add td
return v
/** get memory usage stats for a given data type. */
public memusage getmemusage string label
vector v    vector  data get label
if  v    null
return null
memusage res   new memusage
res minfree   long max_value
res mintotal   long max_value
long avgfree   0l  avgtotal   0l
for  int i   0  i < v size    i
timedata td    timedata  v get i
if  res maxfree < td freemem
res maxfree   td freemem
if  res maxtotal < td totalmem
res maxtotal   td totalmem
if  res minfree > td freemem
res minfree   td freemem
if  res mintotal > td totalmem
res mintotal   td totalmem
avgfree    td freemem
avgtotal    td totalmem
res avgfree   avgfree   v size
res avgtotal   avgtotal   v size
return res
/** return a string representation. */
public string tostring
stringbuffer sb   new stringbuffer
collection labels   getlabels
iterator it   labels iterator
while  it hasnext
string label    string  it next
sb append id  append    append label  append    append gettotals label  tostring false   append
sb append getmemusage label  toscaledstring 1024   1024      append
return sb tostring