package org apache lucene analysis
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/**
* a filter that replaces accented characters in the iso latin 1 character set
* (iso-8859-1) by their unaccented equivalent. the case will not be altered.
* <p>
* for instance, '&agrave;' will be replaced by 'a'.
* <p>
*/
public class isolatin1accentfilter extends tokenfilter
public isolatin1accentfilter tokenstream input
super input
private char output   new char
private int outputpos
public final token next token result  throws java io ioexception
result   input next result
if  result    null
final char buffer   result termbuffer
final int length   result termlength
// if no characters actually require rewriting then we
// just return token as-is:
for int i 0 i<length i
final char c   buffer
if  c >       c <
removeaccents buffer  length
result settermbuffer output  0  outputpos
break
return result
else
return null
/**
* to replace accented characters in a string by unaccented equivalents.
*/
public final void removeaccents char input  int length
// worst-case length required:
final int maxsizeneeded   2 length
int size   output length
while  size < maxsizeneeded
size    2
if  size    output length
output   new char
outputpos   0
int pos   0
for  int i 0  i<length  i    pos
final char c   input
// quick test: if it's not in range then just keep
// current character
if  c <
output   c
else
switch  c
case        ãâ
case        ãâ
case        ãâ
case        ãâ
case        ãâ
case        ã
output
break
case        ãâ
output
output
break
case        ãâ
output
break
case        ãâ
case        ãâ
case        ãâ
case        ãâ
output
break
case        ãâ
case        ãâ
case        ãâ
case        ãâ
output
break
case        ãâ
output
break
case        ãâ
output
break
case        ãâ
case        ãâ
case        ãâ
case        ãâ
case        ãâ
case        ãâ
output
break
case        ãâ
output
output
break
case        ãâ
output
output
break
case        ãâ
case        ãâ
case        ãâ
case        ãâ
output
break
case        ãâ
case        ãâ¸
output
break
case        ã
case        ãâ¡
case        ãâ¢
case        ãâ£
case        ãâ¤
case        ãâ¥
output
break
case        ãâ¦
output
output
break
case        ãâ§
output
break
case        ãâ¨
case        ãâ©
case        ãâª
case        ãâ«
output
break
case        ãâ¬
case        ãâ­
case        ãâ®
case        ãâ¯
output
break
case        ãâ°
output
break
case        ãâ±
output
break
case        ãâ²
case        ãâ³
case        ãâ´
case        ãâµ
case        ãâ¶
case        ãâ¸
output
break
case        ãâ
output
output
break
case        ãâ
output
output
break
case        ãâ¾
output
output
break
case        ãâ¹
case        ãâº
case        ãâ»
case        ãâ¼
output
break
case        ãâ½
case        ãâ¿
output
break
default
output   c
break