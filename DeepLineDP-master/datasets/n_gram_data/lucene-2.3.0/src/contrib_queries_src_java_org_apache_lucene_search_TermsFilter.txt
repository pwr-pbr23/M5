package org apache lucene search
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
import java util arraylist
import java util bitset
import java util iterator
import org apache lucene index indexreader
import org apache lucene index term
import org apache lucene index termdocs
/**
* constructs a filter for docs matching any of the terms added to this class.
* unlike a rangefilter this can be used for filtering on multiple terms that are not necessarily in
* a sequence. an example might be a collection of primary keys from a database query result or perhaps
* a choice of "category" labels picked by the end user. as a filter, this is much faster than the
* equivalent query (a booleanquery with many "should" termqueries)
*
* @author maharwood
*/
public class termsfilter extends filter
arraylist termslist new arraylist
/**
* adds a term to the list of acceptable terms
* @param term
*/
public void addterm term term
termslist add term
/* (non-javadoc)
* @see org.apache.lucene.search.filter#bits(org.apache.lucene.index.indexreader)
*/
public bitset bits indexreader reader  throws ioexception
bitset result new bitset reader maxdoc
for  iterator iter   termslist iterator    iter hasnext
term term    term  iter next
termdocs td reader termdocs term
while  td next
result set td doc
return result
public boolean equals object obj
if this    obj
return true
if  obj    null      obj getclass      this getclass
return false
termsfilter test    termsfilter obj
return  termslist    test termslist
termslist   null    termslist equals test termslist
public int hashcode
int hash 9
for  iterator iter   termslist iterator    iter hasnext
term term    term  iter next
hash   31   hash   term hashcode
return hash