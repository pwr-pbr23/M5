package org apache lucene search
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/**
* expert: a scoredoc which also contains information about
* how to sort the referenced document.  in addition to the
* document number and score, this object contains an array
* of values for the document from the field(s) used to sort.
* for example, if the sort criteria was to sort by fields
* "a", "b" then "c", the <code>fields</code> object array
* will have three elements, corresponding respectively to
* the term values for the document in fields "a", "b" and "c".
* the class of each element in the array will be either
* integer, float or string depending on the type of values
* in the terms of each field.
*
* <p>created: feb 11, 2004 1:23:38 pm
*
* @author  tim jones (nacimiento software)
* @since   lucene 1.4
* @version $id$
* @see scoredoc
* @see topfielddocs
*/
public class fielddoc
extends scoredoc
/** expert: the values which are used to sort the referenced document.
* the order of these will match the original sort criteria given by a
* sort object.  each object will be either an integer, float or string,
* depending on the type of values in the terms of the original field.
* @see sort
* @see searcher#search(query,filter,int,sort)
*/
public comparable fields
/** expert: creates one of these objects with empty sort information. */
public fielddoc  int doc  float score
super  doc  score
/** expert: creates one of these objects with the given sort information. */
public fielddoc  int doc  float score  comparable fields
super  doc  score
this fields   fields