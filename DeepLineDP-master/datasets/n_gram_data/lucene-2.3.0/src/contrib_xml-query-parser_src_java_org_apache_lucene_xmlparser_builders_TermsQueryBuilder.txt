package org apache lucene xmlparser builders
import java io ioexception
import java io stringreader
import org apache lucene analysis analyzer
import org apache lucene analysis token
import org apache lucene analysis tokenstream
import org apache lucene index term
import org apache lucene search booleanclause
import org apache lucene search booleanquery
import org apache lucene search query
import org apache lucene search termquery
import org apache lucene xmlparser domutils
import org apache lucene xmlparser parserexception
import org apache lucene xmlparser querybuilder
import org w3c dom element
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/**
* builds a booleanquery from all of the terms found in the xml element using the choice of analyzer
* @author maharwood
*/
public class termsquerybuilder implements querybuilder
analyzer analyzer
public termsquerybuilder analyzer analyzer
this analyzer   analyzer
public query getquery element e  throws parserexception
string fieldname domutils getattributewithinheritanceorfail e
string text domutils getnonblanktextorfail e
booleanquery bq new booleanquery domutils getattribute e   false
bq setminimumnumbershouldmatch domutils getattribute e   0
tokenstream ts   analyzer tokenstream fieldname  new stringreader text
try
token token   ts next
term term   null
while  token    null
if  term    null
term   new term fieldname  token termtext
else
//					 create from previous to save fieldname.intern overhead
term   term createterm token termtext
bq add new booleanclause new termquery term  booleanclause occur should
token   ts next
catch  ioexception ioe
throw new runtimeexception
ioe
bq setboost domutils getattribute e   1 0f
return bq