package org apache lucene index
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
/** this is a {@link logmergepolicy} that measures size of a
*  segment as the total byte size of the segment's files. */
public class logbytesizemergepolicy extends logmergepolicy
/** default minimum segment size.  @see setminmergemb */
public static final double default_min_merge_mb   1 6
/** default maximum segment size.  a segment of this size
*  or larger will never be merged.  @see setmaxmergemb */
public static final double default_max_merge_mb    double  long max_value
public logbytesizemergepolicy
super
minmergesize    long   default_min_merge_mb 1024 1024
maxmergesize    long   default_max_merge_mb 1024 1024
protected long size segmentinfo info  throws ioexception
return info sizeinbytes
/** <p>determines the largest segment (measured by total
*  byte size of the segment's files, in mb) that may be
*  merged with other segments.  small values (e.g., less
*  than 50 mb) are best for interactive indexing, as this
*  limits the length of pauses while indexing to a few
*  seconds.  larger values are best for batched indexing
*  and speedier searches.</p>
*
*  <p>note that {@link #setmaxmergedocs} is also
*  used to check whether a segment is too large for
*  merging (it's either or).</p>*/
public void setmaxmergemb double mb
maxmergesize    long   mb 1024 1024
/** returns the largest segment (meaured by total byte
*  size of the segment's files, in mb) that may be merged
*  with other segments.
*  @see #setmaxmergemb */
public double getmaxmergemb
return   double  maxmergesize  1024 1024
/** sets the minimum size for the lowest level segments.
* any segments below this size are considered to be on
* the same level (even if they vary drastically in size)
* and will be merged whenever there are mergefactor of
* them.  this effectively truncates the "long tail" of
* small segments that would otherwise be created into a
* single level.  if you set this too large, it could
* greatly increase the merging cost during indexing (if
* you flush many small segments). */
public void setminmergemb double mb
minmergesize    long   mb 1024 1024
/** get the minimum size for a segment to remain
*  un-merged.
*  @see #setminmergemb **/
public double getminmergemb
return   double  minmergesize  1024 1024