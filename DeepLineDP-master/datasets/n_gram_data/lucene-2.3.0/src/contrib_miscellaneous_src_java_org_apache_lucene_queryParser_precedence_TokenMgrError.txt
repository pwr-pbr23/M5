/* generated by:javacc: do not edit this line. tokenmgrerror.java version 3.0 */
package org apache lucene queryparser precedence
public class tokenmgrerror extends error
/*
* ordinals for various reasons why an error of this type can be thrown.
*/
/**
* lexical error occured.
*/
static final int lexical_error   0
/**
* an attempt wass made to create a second instance of a static token manager.
*/
static final int static_lexer_error   1
/**
* tried to change to an invalid lexical state.
*/
static final int invalid_lexical_state   2
/**
* detected (and bailed out of) an infinite loop in the token manager.
*/
static final int loop_detected   3
/**
* indicates the reason why the exception is thrown. it will have
* one of the above 4 values.
*/
int errorcode
/**
* replaces unprintable characters by their espaced (or unicode escaped)
* equivalents in the given string
*/
protected static final string addescapes string str
stringbuffer retval   new stringbuffer
char ch
for  int i   0  i < str length    i
switch  str charat i
case 0
continue
case
retval append
continue
case
retval append
continue
case
retval append
continue
case
retval append
continue
case
retval append
continue
case
retval append  "
continue
case
retval append
continue
case
retval append
continue
default
if   ch   str charat i   < 0x20    ch > 0x7e
string s       integer tostring ch  16
retval append     s substring s length     4  s length
else
retval append ch
continue
return retval tostring
/**
* returns a detailed message for the error when it is thrown by the
* token manager to indicate a lexical error.
* parameters :
*    eofseen     : indicates if eof caused the lexicl error
*    curlexstate : lexical state in which this error occured
*    errorline   : line number when the error occured
*    errorcolumn : column number when the error occured
*    errorafter  : prefix that was seen before this error occured
*    curchar     : the offending character
* note: you can customize the lexical error message by modifying this method.
*/
protected static string lexicalerror boolean eofseen  int lexstate  int errorline  int errorcolumn  string errorafter  char curchar
return
errorline
errorcolumn
eofseen ?                   int curchar
/**
* you can also modify the body of this method to customize your error messages.
* for example, cases like loop_detected and invalid_lexical_state are not
* of end-users concern, so you can return something like :
*
*     "internal error : please file a bug report .... "
*
* from this method for such cases in the release version of your parser.
*/
public string getmessage
return super getmessage
/*
* constructors of various flavors follow.
*/
public tokenmgrerror
public tokenmgrerror string message  int reason
super message
errorcode   reason
public tokenmgrerror boolean eofseen  int lexstate  int errorline  int errorcolumn  string errorafter  char curchar  int reason
this lexicalerror eofseen  lexstate  errorline  errorcolumn  errorafter  curchar   reason