package org apache lucene search
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
/**
* expert: common scoring functionality for different types of queries.
*
* <p>
* a <code>scorer</code> either iterates over documents matching a
* query in increasing order of doc id, or provides an explanation of
* the score for a query for a given document.
* </p>
* <p>
* document scores are computed using a given <code>similarity</code>
* implementation.
* </p>
* @see booleanquery#setallowdocsoutoforder
*/
public abstract class scorer
private similarity similarity
/** constructs a scorer.
* @param similarity the <code>similarity</code> implementation used by this scorer.
*/
protected scorer similarity similarity
this similarity   similarity
/** returns the similarity implementation used by this scorer. */
public similarity getsimilarity
return this similarity
/** scores and collects all matching documents.
* @param hc the collector to which all matching documents are passed through
* {@link hitcollector#collect(int, float)}.
* <br>when this method is used the {@link #explain(int)} method should not be used.
*/
public void score hitcollector hc  throws ioexception
while  next
hc collect doc    score
/** expert: collects matching documents in a range.  hook for optimization.
* note that {@link #next()} must be called once before this method is called
* for the first time.
* @param hc the collector to which all matching documents are passed through
* {@link hitcollector#collect(int, float)}.
* @param max do not score documents past this.
* @return true if more matching documents may remain.
*/
protected boolean score hitcollector hc  int max  throws ioexception
while  doc   < max
hc collect doc    score
if   next
return false
return true
/**
* advances to the document matching this scorer with the lowest doc id
* greater than the current value of {@link #doc()} (or to the matching
* document with the lowest doc id if next has never been called on
* this scorer).
*
* <p>
* when this method is used the {@link #explain(int)} method should not
* be used.
* </p>
*
* @return true iff there is another document matching the query.
* @see booleanquery#setallowdocsoutoforder
*/
public abstract boolean next   throws ioexception
/** returns the current document number matching the query.
* initially invalid, until {@link #next()} is called the first time.
*/
public abstract int doc
/** returns the score of the current document matching the query.
* initially invalid, until {@link #next()} or {@link #skipto(int)}
* is called the first time.
*/
public abstract float score   throws ioexception
/**
* skips to the document matching this scorer with the lowest doc id
* greater than or equal to a given target.
*
* <p>
* the behavior of this method is undefined if the target specified is
* less than or equal to the current value of {@link #doc()}.
* <p>
* behaves as if written:
* <pre>
*   boolean skipto(int target) {
*     do {
*       if (!next())
* 	     return false;
*     } while (target > doc());
*     return true;
*   }
* </pre>
* most implementations are considerably more efficient than that.
* </p>
*
* <p>
* when this method is used the {@link #explain(int)} method should not
* be used.
* </p>
*
* @param target the target document number.
* @return true iff there is such a match.
* @see booleanquery#setallowdocsoutoforder
*/
public abstract boolean skipto int target  throws ioexception
/** returns an explanation of the score for a document.
* <br>when this method is used, the {@link #next()}, {@link #skipto(int)} and
* {@link #score(hitcollector)} methods should not be used.
* @param doc the document number for the explanation.
*/
public abstract explanation explain int doc  throws ioexception