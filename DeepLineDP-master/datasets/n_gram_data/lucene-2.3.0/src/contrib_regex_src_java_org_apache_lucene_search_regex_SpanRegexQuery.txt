package org apache lucene search regex
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene index term
import org apache lucene index indexreader
import org apache lucene search query
import org apache lucene search booleanquery
import org apache lucene search booleanclause
import org apache lucene search termquery
import org apache lucene search spans spanorquery
import org apache lucene search spans spanquery
import org apache lucene search spans spantermquery
import org apache lucene search spans spans
import org apache lucene util tostringutils
import java io ioexception
import java util collection
import java util arraylist
/**
* a spanquery version of {@link regexquery} allowing regular expression
* queries to be nested within other spanquery subclasses.
*/
public class spanregexquery extends spanquery implements regexquerycapable
private regexcapabilities regeximpl   new javautilregexcapabilities
private term term
public spanregexquery term term
this term   term
public term getterm     return term
public query rewrite indexreader reader  throws ioexception
regexquery orig   new regexquery term
orig setregeximplementation regeximpl
// regexquery (via multitermquery).rewrite always returns a booleanquery
booleanquery bq    booleanquery  orig rewrite reader
booleanclause clauses   bq getclauses
spanquery sqs   new spanquery
for  int i   0  i < clauses length  i
booleanclause clause   clauses
// clauses from regexquery.rewrite are always termquery's
termquery tq    termquery  clause getquery
sqs   new spantermquery tq getterm
sqs setboost tq getboost
spanorquery query   new spanorquery sqs
query setboost orig getboost
return query
public spans getspans indexreader reader  throws ioexception
throw new unsupportedoperationexception
public string getfield
return term field
public collection getterms
collection terms   new arraylist
terms add term
return terms
/* generated by intellij idea */
public boolean equals object o
if  this    o  return true
if  o    null    getclass      o getclass    return false
final spanregexquery that    spanregexquery  o
if   regeximpl equals that regeximpl   return false
if   term equals that term   return false
return true
/* generated by intellij idea */
public int hashcode
int result
result   regeximpl hashcode
result   29   result   term hashcode
return result
public string tostring string field
stringbuffer buffer   new stringbuffer
buffer append
buffer append term
buffer append
buffer append tostringutils boost getboost
return buffer tostring
public void setregeximplementation regexcapabilities impl
this regeximpl   impl
public regexcapabilities getregeximplementation
return regeximpl