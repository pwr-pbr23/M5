package org apache lucene benchmark bytask feeds
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene benchmark bytask utils config
import org apache lucene benchmark bytask tasks writelinedoctask
import org apache lucene document document
import org apache lucene document field
import java io bufferedreader
import java io ioexception
import java io fileinputstream
import java io inputstreamreader
/**
* a docmaker reading one line at a time as a document from
* a single file.  this saves io cost (over dirdocmaker) of
* recursing through a directory and opening a new file for
* every document.  it also re-uses its document and field
* instance to improve indexing speed.
*
* config properties:
* docs.file=&lt;path to the file%gt;
*/
public class linedocmaker extends basicdocmaker
fileinputstream fileis
bufferedreader filein
threadlocal docstate   new threadlocal
private string filename
private static int reader_buffer_bytes   64 1024
class docstate
document doc
field bodyfield
field titlefield
field datefield
field idfield
public docstate
bodyfield   new field basicdocmaker body_field
storeval
field index tokenized
termvecval
titlefield   new field basicdocmaker title_field
storeval
field index tokenized
termvecval
datefield   new field basicdocmaker date_field
storeval
field index tokenized
termvecval
idfield   new field basicdocmaker id_field     field store yes  field index no_norms
doc   new document
doc add bodyfield
doc add titlefield
doc add datefield
doc add idfield
final static string sep   writelinedoctask sep
public document setfields string line
// title <tab> date <tab> body <newline>
int spot   line indexof sep
if  spot     1
titlefield setvalue line substring 0  spot
int spot2   line indexof sep  1 spot
if  spot2     1
datefield setvalue line substring 1 spot  spot2
bodyfield setvalue line substring 1 spot2  line length
else
datefield setvalue
bodyfield setvalue
else
titlefield setvalue
return doc
protected docdata getnextdocdata   throws exception
throw new runtimeexception
private docstate getdocstate
docstate ds    docstate  docstate get
if  ds    null
ds   new docstate
docstate set ds
return ds
public document makedocument   throws exception
string line
synchronized this
while true
line   filein readline
if  line    null
// reset the file
openfile
if   forever
throw new nomoredataexception
else
break
return getdocstate   setfields line
public document makedocument int size  throws exception
throw new runtimeexception
public synchronized void resetinputs
super resetinputs
filename   config get    null
if  filename    null
throw new runtimeexception
openfile
synchronized void openfile
try
if  filein    null
filein close
fileis   new fileinputstream filename
filein   new bufferedreader new inputstreamreader fileis     reader_buffer_bytes
catch  ioexception e
throw new runtimeexception e
public int numuniquetexts
return  1