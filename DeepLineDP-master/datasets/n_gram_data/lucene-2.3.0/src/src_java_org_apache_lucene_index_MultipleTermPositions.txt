package org apache lucene index
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene util priorityqueue
import java io ioexception
import java util arrays
import java util iterator
import java util linkedlist
import java util list
/**
* describe class <code>multipletermpositions</code> here.
*
* @author anders nielsen
* @version 1.0
*/
public class multipletermpositions implements termpositions
private static final class termpositionsqueue extends priorityqueue
termpositionsqueue list termpositions  throws ioexception
initialize termpositions size
iterator i   termpositions iterator
while  i hasnext
termpositions tp    termpositions  i next
if  tp next
put tp
final termpositions peek
return  termpositions  top
public final boolean lessthan object a  object b
return   termpositions  a  doc   <   termpositions  b  doc
private static final class intqueue
private int _arraysize   16
private int _index   0
private int _lastindex   0
private int _array   new int
final void add int i
if  _lastindex    _arraysize
growarray
_array   i
final int next
return _array
final void sort
arrays sort _array  _index  _lastindex
final void clear
_index   0
_lastindex   0
final int size
return  _lastindex   _index
private void growarray
int newarray   new int
system arraycopy _array  0  newarray  0  _arraysize
_array   newarray
_arraysize    2
private int _doc
private int _freq
private termpositionsqueue _termpositionsqueue
private intqueue _poslist
/**
* creates a new <code>multipletermpositions</code> instance.
*
* @exception ioexception
*/
public multipletermpositions indexreader indexreader  term terms  throws ioexception
list termpositions   new linkedlist
for  int i   0  i < terms length  i
termpositions add indexreader termpositions terms
_termpositionsqueue   new termpositionsqueue termpositions
_poslist   new intqueue
public final boolean next   throws ioexception
if  _termpositionsqueue size      0
return false
_poslist clear
_doc   _termpositionsqueue peek   doc
termpositions tp
do
tp   _termpositionsqueue peek
for  int i   0  i < tp freq    i
_poslist add tp nextposition
if  tp next
_termpositionsqueue adjusttop
else
_termpositionsqueue pop
tp close
while  _termpositionsqueue size   > 0    _termpositionsqueue peek   doc      _doc
_poslist sort
_freq   _poslist size
return true
public final int nextposition
return _poslist next
public final boolean skipto int target  throws ioexception
while  _termpositionsqueue peek      null    target > _termpositionsqueue peek   doc
termpositions tp    termpositions  _termpositionsqueue pop
if  tp skipto target
_termpositionsqueue put tp
else
tp close
return next
public final int doc
return _doc
public final int freq
return _freq
public final void close   throws ioexception
while  _termpositionsqueue size   > 0
termpositions  _termpositionsqueue pop    close
/**
* not implemented.
* @throws unsupportedoperationexception
*/
public void seek term arg0  throws ioexception
throw new unsupportedoperationexception
/**
* not implemented.
* @throws unsupportedoperationexception
*/
public void seek termenum termenum  throws ioexception
throw new unsupportedoperationexception
/**
* not implemented.
* @throws unsupportedoperationexception
*/
public int read int arg0  int arg1  throws ioexception
throw new unsupportedoperationexception
/**
* not implemented.
* @throws unsupportedoperationexception
*/
public int getpayloadlength
throw new unsupportedoperationexception
/**
* not implemented.
* @throws unsupportedoperationexception
*/
public byte getpayload byte data  int offset  throws ioexception
throw new unsupportedoperationexception
/**
*
* @return false
*/
// todo: remove warning after api has been finalized
public boolean ispayloadavailable
return false