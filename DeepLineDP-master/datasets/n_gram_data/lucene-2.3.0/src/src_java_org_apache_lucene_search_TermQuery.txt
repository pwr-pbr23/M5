package org apache lucene search
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
import java util set
import org apache lucene index term
import org apache lucene index termdocs
import org apache lucene index indexreader
import org apache lucene util tostringutils
/** a query that matches documents containing a term.
this may be combined with other terms with a {@link booleanquery}.
*/
public class termquery extends query
private term term
private class termweight implements weight
private similarity similarity
private float value
private float idf
private float querynorm
private float queryweight
public termweight searcher searcher
throws ioexception
this similarity   getsimilarity searcher
idf   similarity idf term  searcher      compute idf
public string tostring     return     termquery this
public query getquery     return termquery this
public float getvalue     return value
public float sumofsquaredweights
queryweight   idf   getboost                   compute query weight
return queryweight   queryweight               square it
public void normalize float querynorm
this querynorm   querynorm
queryweight    querynorm                       normalize query weight
value   queryweight   idf                      idf for document
public scorer scorer indexreader reader  throws ioexception
termdocs termdocs   reader termdocs term
if  termdocs    null
return null
return new termscorer this  termdocs  similarity
reader norms term field
public explanation explain indexreader reader  int doc
throws ioexception
complexexplanation result   new complexexplanation
result setdescription   getquery     doc
explanation idfexpl
new explanation idf      reader docfreq term
reader numdocs
// explain query weight
explanation queryexpl   new explanation
queryexpl setdescription     getquery
explanation boostexpl   new explanation getboost
if  getboost      1 0f
queryexpl adddetail boostexpl
queryexpl adddetail idfexpl
explanation querynormexpl   new explanation querynorm
queryexpl adddetail querynormexpl
queryexpl setvalue boostexpl getvalue
idfexpl getvalue
querynormexpl getvalue
result adddetail queryexpl
// explain field weight
string field   term field
complexexplanation fieldexpl   new complexexplanation
fieldexpl setdescription   term   doc
explanation tfexpl   scorer reader  explain doc
fieldexpl adddetail tfexpl
fieldexpl adddetail idfexpl
explanation fieldnormexpl   new explanation
byte fieldnorms   reader norms field
float fieldnorm
fieldnorms  null ? similarity decodenorm fieldnorms    0 0f
fieldnormexpl setvalue fieldnorm
fieldnormexpl setdescription   field   doc
fieldexpl adddetail fieldnormexpl
fieldexpl setmatch boolean valueof tfexpl ismatch
fieldexpl setvalue tfexpl getvalue
idfexpl getvalue
fieldnormexpl getvalue
result adddetail fieldexpl
result setmatch fieldexpl getmatch
// combine them
result setvalue queryexpl getvalue     fieldexpl getvalue
if  queryexpl getvalue      1 0f
return fieldexpl
return result
/** constructs a query for the term <code>t</code>. */
public termquery term t
term   t
/** returns the term of this query. */
public term getterm     return term
protected weight createweight searcher searcher  throws ioexception
return new termweight searcher
public void extractterms set terms
terms add getterm
/** prints a user-readable version of this query. */
public string tostring string field
stringbuffer buffer   new stringbuffer
if   term field   equals field
buffer append term field
buffer append
buffer append term text
buffer append tostringutils boost getboost
return buffer tostring
/** returns true iff <code>o</code> is equal to this. */
public boolean equals object o
if    o instanceof termquery
return false
termquery other    termquery o
return  this getboost      other getboost
this term equals other term
/** returns a hash code value for this object.*/
public int hashcode
return float floattointbits getboost    ^ term hashcode