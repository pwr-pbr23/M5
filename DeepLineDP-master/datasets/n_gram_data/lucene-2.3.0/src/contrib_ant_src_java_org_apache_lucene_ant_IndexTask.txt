package org apache lucene ant
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene analysis analyzer
import org apache lucene analysis stopanalyzer
import org apache lucene analysis simpleanalyzer
import org apache lucene analysis whitespaceanalyzer
import org apache lucene analysis standard standardanalyzer
import org apache lucene document document
import org apache lucene document field
import org apache lucene document datetools
import org apache lucene index indexwriter
import org apache lucene index term
import org apache lucene search hits
import org apache lucene search indexsearcher
import org apache lucene search searcher
import org apache lucene search termquery
import org apache tools ant buildexception
import org apache tools ant directoryscanner
import org apache tools ant dynamicconfigurator
import org apache tools ant project
import org apache tools ant task
import org apache tools ant types fileset
import org apache tools ant types enumeratedattribute
import java io file
import java io ioexception
import java util date
import java util properties
import java util map
import java util hashmap
import java util set
import java util arraylist
import java text parseexception
/**
*  ant task to index files with lucene
*
*@author erik hatcher
*/
public class indextask extends task
/**
*  file list
*/
private arraylist filesets   new arraylist
/**
*  overwrite index?
*/
private boolean overwrite   false
/**
*  index path
*/
private file indexdir
/**
*  document handler classname
*/
private string handlerclassname
fileextensiondocumenthandler class getname
/**
*  document handler instance
*/
private documenthandler handler
/**
*
*/
private string analyzerclassname
standardanalyzer class getname
/**
*  analyzer instance
*/
private analyzer analyzer
/**
*  lucene merge factor
*/
private int mergefactor   20
private handlerconfig handlerconfig
private boolean usecompoundindex   true
/**
*  creates new instance
*/
public indextask
/**
*  specifies the directory where the index will be stored
*/
public void setindex file indexdir
this indexdir   indexdir
/**
*  sets the mergefactor attribute of the indextask object
*
*@param  mergefactor  the new mergefactor value
*/
public void setmergefactor int mergefactor
this mergefactor   mergefactor
/**
*  sets the overwrite attribute of the indextask object
*
*@param  overwrite  the new overwrite value
*/
public void setoverwrite boolean overwrite
this overwrite   overwrite
/**
* if creating a new index and this is set to true, the
* index will be created in compound format.
*/
public void setusecompoundindex boolean usecompoundindex
this usecompoundindex   usecompoundindex
/**
*  sets the documenthandler attribute of the indextask object
*
*@param  classname  the new documenthandler value
*/
public void setdocumenthandler string classname
handlerclassname   classname
/**
* sets the analyzer based on the builtin lucene analyzer types.
*
* @todo enforce analyzer and analyzerclassname to be mutually exclusive
*/
public void setanalyzer analyzertype type
analyzerclassname   type getclassname
public void setanalyzerclassname string classname
analyzerclassname   classname
/**
*  adds a set of files (nested fileset attribute).
*
*@param  set  fileset to be added
*/
public void addfileset fileset set
filesets add set
/**
* sets custom properties for a configurable document handler.
*/
public void addconfig handlerconfig config  throws buildexception
if  handlerconfig    null
throw new buildexception
handlerconfig   config
/**
*  begins the indexing
*
*@exception  buildexception  if an error occurs indexing the
*      fileset
*/
public void execute   throws buildexception
// construct handler and analyzer dynamically
try
class clazz   class forname handlerclassname
handler    documenthandler  clazz newinstance
clazz   class forname analyzerclassname
analyzer    analyzer  clazz newinstance
catch  classnotfoundexception cnfe
throw new buildexception cnfe
catch  instantiationexception ie
throw new buildexception ie
catch  illegalaccessexception iae
throw new buildexception iae
log     handler getclass    project msg_verbose
log     analyzer getclass    project msg_verbose
if  handler instanceof configurabledocumenthandler
configurabledocumenthandler  handler  configure handlerconfig getproperties
try
indexdocs
catch  ioexception e
throw new buildexception e
/**
* index the fileset.
*
*@exception  ioexception if lucene i/o exception
*@todo refactor!!!!!
*/
private void indexdocs   throws ioexception
date start   new date
boolean create   overwrite
// if the index directory doesn't exist,
// create it and force create mode
if  indexdir mkdirs       overwrite
create   true
searcher searcher   null
boolean checklastmodified   false
if   create
try
searcher   new indexsearcher indexdir getabsolutepath
checklastmodified   true
catch  ioexception ioe
log     ioe getmessage
// empty - ignore, which indicates to index all
// documents
log     checklastmodified  project msg_verbose
indexwriter writer
new indexwriter indexdir  analyzer  create
writer setusecompoundfile usecompoundindex
int totalfiles   0
int totalindexed   0
int totalignored   0
try
writer setmergefactor mergefactor
for  int i   0  i < filesets size    i
fileset fs    fileset  filesets get i
if  fs    null
directoryscanner ds
fs getdirectoryscanner getproject
string dsfiles   ds getincludedfiles
file basedir   ds getbasedir
for  int j   0  j < dsfiles length  j
file file   new file basedir  dsfiles
totalfiles
if   file exists       file canread
throw new buildexception  "
file getabsolutepath
does not exist or is not readable "
boolean indexit   true
if  checklastmodified
term pathterm
new term    file getpath
termquery query
new termquery pathterm
hits hits   searcher search query
// if document is found, compare the
// indexed last modified time with the
// current file
// - don't index if up to date
if  hits length   > 0
document doc   hits doc 0
string indexmodified
doc get    trim
if  indexmodified    null
long lastmodified   0
try
lastmodified   datetools stringtotime indexmodified
catch  parseexception e
// if modified time is not parsable, skip
if  lastmodified    file lastmodified
// todo: remove existing document
indexit   false
if  indexit
try
log     file getpath
project msg_verbose
document doc
handler getdocument file
if  doc    null
totalignored
else
// add the path of the file as a field named "path".  use a keyword field, so
// that the index stores the path, and so that the path is searchable
doc add new field    file getpath    field store yes  field index un_tokenized
// add the last modified date of the file a field named "modified".  use a
// keyword field, so that it's searchable, but so that no attempt is made
// to tokenize the field into words.
doc add new field    datetools timetostring file lastmodified    datetools resolution millisecond   field store yes  field index un_tokenized
writer adddocument doc
totalindexed
catch  documenthandlerexception e
throw new buildexception e
// for j
// if (fs != null)
// for i
writer optimize
//try
finally
// always make sure everything gets closed,
// no matter how we exit.
writer close
if  searcher    null
searcher close
date end   new date
log totalindexed       totalfiles
totalignored        end gettime     start gettime
public static class handlerconfig implements dynamicconfigurator
properties props   new properties
public void setdynamicattribute string attributename  string value  throws buildexception
props setproperty attributename  value
public object createdynamicelement string elementname  throws buildexception
throw new buildexception
public properties getproperties
return props
public static class analyzertype extends enumeratedattribute
private static map analyzerlookup   new hashmap
static
analyzerlookup put    simpleanalyzer class getname
analyzerlookup put    standardanalyzer class getname
analyzerlookup put    stopanalyzer class getname
analyzerlookup put    whitespaceanalyzer class getname
/**
* @see enumeratedattribute#getvalues
*/
public string getvalues
set keys   analyzerlookup keyset
return  string  keys toarray new string
public string getclassname
return  string  analyzerlookup get getvalue