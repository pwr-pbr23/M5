package org apache lucene search function
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene index indexreader
import org apache lucene search function docvalues
import java io ioexception
import java io serializable
/**
* expert: source of values for basic function queries.
* <p>at its default/simplest form, values - one per doc - are used as the score of that doc.
* <p>values are instantiated as
* {@link org.apache.lucene.search.function.docvalues docvalues} for a particular reader.
* <p>valuesource implementations differ in ram requirements: it would always be a factor
* of the number of documents, but for each document the number of bytes can be 1, 2, 4, or 8.
*
* <p><font color="#ff0000">
* warning: the status of the <b>search.function</b> package is experimental.
* the apis introduced here might change in the future and will not be
* supported anymore in such a case.</font>
*
*
*/
public abstract class valuesource implements serializable
/**
* return the docvalues used by the function query.
* @param reader the indexreader used to read these values.
* if any caching is involved, that caching would also be indexreader based.
* @throws ioexception for any error.
*/
public abstract docvalues getvalues indexreader reader  throws ioexception
/**
* description of field, used in explain()
*/
public abstract string description
/* (non-javadoc) @see java.lang.object#tostring() */
public string tostring
return description
/**
* needed for possible caching of query results - used by {@link valuesourcequery#equals(object)}.
* @see object#equals(object)
*/
public abstract boolean equals object o
/**
* needed for possible caching of query results - used by {@link valuesourcequery#hashcode()}.
* @see object#hashcode()
*/
public abstract int hashcode