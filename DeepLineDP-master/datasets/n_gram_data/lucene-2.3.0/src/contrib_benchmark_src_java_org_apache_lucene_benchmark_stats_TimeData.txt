package org apache lucene benchmark stats
/**
* copyright 2005 the apache software foundation
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/**
* this class holds a data point measuring speed of processing.
*
* @author andrzej bialecki &lt;ab@getopt.org&gt;
*/
public class timedata
/** name of the data point - usually one of a data series with the same name */
public string name
/** number of records processed. */
public long count   0
/** elapsed time in milliseconds. */
public long elapsed   0l
private long delta   0l
/** free memory at the end of measurement interval. */
public long freemem   0l
/** total memory at the end of measurement interval. */
public long totalmem   0l
public timedata
public timedata string name
this name   name
/** start counting elapsed time. */
public void start
delta   system currenttimemillis
/** stop counting elapsed time. */
public void stop
count
elapsed     system currenttimemillis     delta
/** record memory usage. */
public void recordmemusage
freemem   runtime getruntime   freememory
totalmem   runtime getruntime   totalmemory
/** reset counters. */
public void reset
count   0
elapsed   0l
delta   elapsed
protected object clone
timedata td   new timedata name
td name   name
td elapsed   elapsed
td count   count
td delta   delta
td freemem   freemem
td totalmem   totalmem
return td
/** get rate of processing, defined as number of processed records per second. */
public double getrate
double rps    double  count   1000 0    double   elapsed>0 ? elapsed   1      assume atleast 1ms for any countable op
return rps
/** get a short legend for tostring() output. */
public static string getlabels
return
public string tostring     return tostring true
/**
* return a tab-seprated string containing this data.
* @param withmem if true, append also memory information
* @return the string
*/
public string tostring boolean withmem
stringbuffer sb   new stringbuffer
sb append count       elapsed       getrate
if  withmem  sb append     freemem       totalmem
return sb tostring