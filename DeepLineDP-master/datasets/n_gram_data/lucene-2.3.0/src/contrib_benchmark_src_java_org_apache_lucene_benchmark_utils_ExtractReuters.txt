package org apache lucene benchmark utils
/**
* copyright 2005 the apache software foundation
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io bufferedreader
import java io file
import java io filefilter
import java io filereader
import java io filewriter
import java io ioexception
import java util regex matcher
import java util regex pattern
/**
* split the reuters sgml documents into simple text files containing: title, date, dateline, body
*/
public class extractreuters
private file reutersdir
private file outputdir
private static final string line_separator   system getproperty
public extractreuters file reutersdir  file outputdir
this reutersdir   reutersdir
this outputdir   outputdir
system out println     outputdir
file  files   outputdir listfiles
for  int i   0  i < files length  i
files delete
public void extract
file  sgmfiles   reutersdir listfiles new filefilter
public boolean accept file file
return file getname   endswith
if  sgmfiles    null    sgmfiles length > 0
for  int i   0  i < sgmfiles length  i
file sgmfile   sgmfiles
extractfile sgmfile
else
system err println     reutersdir
pattern extraction_pattern   pattern compile
private static string meta_chars
'"
private static string meta_chars_serializations
/**
* override if you wish to change what is extracted
*
* @param sgmfile
*/
protected void extractfile file sgmfile
try
bufferedreader reader   new bufferedreader new filereader sgmfile
stringbuffer buffer   new stringbuffer 1024
stringbuffer outbuffer   new stringbuffer 1024
string line   null
int index    1
int docnumber   0
while   line   reader readline       null
//when we see a closing reuters tag, flush the file
if   index   line indexof         1
//replace the sgm escape sequences
buffer append line  append      accumulate the strings for now  then apply regular expression to get the pieces
else
//extract the relevant pieces and write to a file in the output dir
matcher matcher   extraction_pattern matcher buffer
while  matcher find
for  int i   1  i <  matcher groupcount    i
if  matcher group i     null
outbuffer append matcher group i
outbuffer append line_separator  append line_separator
string out   outbuffer tostring
for  int i   0  i < meta_chars_serializations length  i
out   out replaceall meta_chars_serializations  meta_chars
file outfile   new file outputdir  sgmfile getname          docnumber
//system.out.println("writing " + outfile);
filewriter writer   new filewriter outfile
writer write out
writer close
outbuffer setlength 0
buffer setlength 0
reader close
catch
ioexception e
throw new runtimeexception e
public static void main string args
if  args length    2
printusage
file reutersdir   new file args
if  reutersdir exists
file outputdir   new file args
outputdir mkdirs
extractreuters extractor   new extractreuters reutersdir  outputdir
extractor extract
else
printusage
private static void printusage
system err println