package org apache lucene search highlight
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene analysis token
/**
* one, or several overlapping tokens, along with the score(s) and the
* scope of the original text
* @author maharwood
*/
public class tokengroup
private static final int max_num_tokens_per_group 50
token  tokens new token
float  scores new float
int numtokens 0
int startoffset 0
int endoffset 0
float tot
int matchstartoffset  matchendoffset
void addtoken token token  float score
if numtokens < max_num_tokens_per_group
if numtokens  0
startoffset matchstartoffset token startoffset
endoffset matchendoffset token endoffset
tot    score
else
startoffset math min startoffset token startoffset
endoffset math max endoffset token endoffset
if  score>0
if  tot  0
matchstartoffset token startoffset
matchendoffset token endoffset
else
matchstartoffset math min matchstartoffset token startoffset
matchendoffset math max matchendoffset token endoffset
tot  score
tokens token
scores score
numtokens
boolean isdistinct token token
return token startoffset  > endoffset
void clear
numtokens 0
tot 0
/**
*
* @param index a value between 0 and numtokens -1
* @return the "n"th token
*/
public token gettoken int index
return tokens
/**
*
* @param index a value between 0 and numtokens -1
* @return the "n"th score
*/
public float getscore int index
return scores
/**
* @return the end position in the original text
*/
public int getendoffset
return endoffset
/**
* @return the number of tokens in this group
*/
public int getnumtokens
return numtokens
/**
* @return the start position in the original text
*/
public int getstartoffset
return startoffset
/**
* @return all tokens' scores summed up
*/
public float gettotalscore
return tot