package org apache lucene wordnet
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene store
import org apache lucene search
import org apache lucene index
import org apache lucene document
import org apache lucene analysis
import java io
import java util
/**
* test program to look up synonyms.
*/
public class synlookup
public static void main string args  throws ioexception
if  args length    2
system out println
fsdirectory directory   fsdirectory getdirectory args  false
indexsearcher searcher   new indexsearcher directory
string word   args
hits hits   searcher search
new termquery new term syns2index f_word  word
if  hits length      0
system out println     word
else
system out println
for  int i   0  i < hits length    i
document doc   hits doc i
string values   doc getvalues syns2index f_syn
for  int j   0  j < values length  j
system out println values
searcher close
directory close
/**
* perform synonym expansion on a query.
*
* @param query
* @param syns
* @param a
* @param field
* @param boost
*/
public static query expand  string query
searcher syns
analyzer a
string field
float boost
throws ioexception
set already   new hashset       avoid dups
list top   new linkedlist       needs to be separately listed
// [1] parse query into separate words so that when we expand we can avoid dups
tokenstream ts   a tokenstream  field  new stringreader  query
org apache lucene analysis token t
while    t   ts next       null
string word   t termtext
if   already add  word
top add  word
booleanquery tmp   new booleanquery
// [2] form query
iterator it   top iterator
while   it hasnext
// [2a] add to level words in
string word    string  it next
termquery tq   new termquery  new term  field  word
tmp add  tq  booleanclause occur should
// [2b] add in unique synonums
hits hits   syns search  new termquery  new term syns2index f_word  word
for  int i   0  i < hits length    i
document doc   hits doc i
string values   doc getvalues  syns2index f_syn
for   int j   0  j < values length  j
string syn   values
if   already add  syn
tq   new termquery  new term  field  syn
if   boost > 0     else keep normal 1 0
tq setboost  boost
tmp add  tq  booleanclause occur should
return tmp