package org apache lucene search
/**
* copyright 2007 the apache software foundation
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene index indexreader
import org apache lucene search spans spanquery
import org apache lucene search spans spans
import java io ioexception
import java util arraylist
import java util bitset
import java util list
/**
* constrains search results to only match those which also match a provided
* query. also provides position information about where each document matches
* at the cost of extra space compared with the querywrapperfilter.
* there is an added cost to this above what is stored in a {@link querywrapperfilter}.  namely,
* the position information for each matching document is stored.
* <p/>
* this filter does not cache.  see the {@link org.apache.lucene.search.cachingspanfilter} for a wrapper that
* caches.
*
*
* @version $id:$
*/
public class spanqueryfilter extends spanfilter
protected spanquery query
protected spanqueryfilter
/** constructs a filter which only matches documents matching
* <code>query</code>.
* @param query the {@link org.apache.lucene.search.spans.spanquery} to use as the basis for the filter.
*/
public spanqueryfilter spanquery query
this query   query
public bitset bits indexreader reader  throws ioexception
spanfilterresult result   bitspans reader
return result getbits
public spanfilterresult bitspans indexreader reader  throws ioexception
final bitset bits   new bitset reader maxdoc
spans spans   query getspans reader
list tmp   new arraylist 20
int currentdoc    1
spanfilterresult positioninfo currentinfo   null
while  spans next
int doc   spans doc
bits set doc
if  currentdoc    doc
currentinfo   new spanfilterresult positioninfo doc
tmp add currentinfo
currentdoc   doc
currentinfo addposition spans start    spans end
return new spanfilterresult bits  tmp
public spanquery getquery
return query
public string tostring
return     query
public boolean equals object o
return o instanceof spanqueryfilter    this query equals   spanqueryfilter  o  query
public int hashcode
return query hashcode   ^ 0x923f64b9