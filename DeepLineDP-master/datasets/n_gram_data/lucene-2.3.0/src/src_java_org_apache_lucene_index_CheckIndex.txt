package org apache lucene index
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene store fsdirectory
import org apache lucene store directory
import org apache lucene store indexinput
import org apache lucene document document
import java text numberformat
import java io printstream
import java io ioexception
import java util collection
import java util iterator
/**
* basic tool to check the health of an index and write a
* new segments file that removes reference to problematic
* segments.  there are many more checks that this tool
* could do but does not yet, eg: reconstructing a segments
* file by looking for all loadable segments (if no segments
* file is found), removing specifically specified segments,
* listing files that exist but are not referenced, etc.
*/
public class checkindex
public static printstream out   system out
private static class mysegmenttermdocs extends segmenttermdocs
int delcount
mysegmenttermdocs segmentreader p
super p
public void seek term term  throws ioexception
super seek term
delcount   0
protected void skippingdoc   throws ioexception
delcount
/** returns true if index is clean, else false.*/
public static boolean check directory dir  boolean dofix  throws ioexception
numberformat nf   numberformat getinstance
segmentinfos sis   new segmentinfos
try
sis read dir
catch  throwable t
out println
t printstacktrace out
return false
final int numsegments   sis size
final string segmentsfilename   sis getcurrentsegmentfilename
indexinput input   null
try
input   dir openinput segmentsfilename
catch  throwable t
out println
t printstacktrace out
return false
int format   0
try
format   input readint
catch  throwable t
out println
t printstacktrace out
return false
finally
if  input    null
input close
string sformat
boolean skip   false
if  format    segmentinfos format
sformat
if  format    segmentinfos format_lockless
sformat
else if  format    segmentinfos format_single_norm_file
sformat
else if  format    segmentinfos format_shared_doc_store
sformat
else if  format < segmentinfos format_shared_doc_store
sformat       format
skip   true
else
sformat   format
out println     segmentsfilename       numsegments       sformat
if  skip
out println
return false
segmentinfos newsis    segmentinfos  sis clone
newsis clear
boolean changed   false
int totlosedoccount   0
int numbadsegments   0
for int i 0 i<numsegments i
final segmentinfo info   sis info i
out println      1 i        numsegments       info name       info doccount
int tolosedoccount   info doccount
segmentreader reader   null
try
out println     info getusecompoundfile
out println     info files   size
out println     nf format info sizeinbytes    1024  1024
final int docstoreoffset   info getdocstoreoffset
if  docstoreoffset     1
out println     docstoreoffset
out println     info getdocstoresegment
out println     info getdocstoreiscompoundfile
final string delfilename   info getdelfilename
if  delfilename    null
out println
else
out println     delfilename
out print
reader   segmentreader get info
final int numdocs   reader numdocs
tolosedoccount   numdocs
if  reader hasdeletions
out println      info doccount   numdocs
else
out println
out print
collection fieldnames   reader getfieldnames indexreader fieldoption all
iterator it   fieldnames iterator
while it hasnext
final string fieldname    string  it next
byte b   reader norms fieldname
if  b length    info doccount
throw new runtimeexception        b length       info doccount
out println     fieldnames size
out print
final termenum termenum   reader terms
final termpositions termpositions   reader termpositions
// used only to count up # deleted docs for this
// term
final mysegmenttermdocs mytermdocs   new mysegmenttermdocs reader
long termcount   0
long totfreq   0
long totpos   0
while termenum next
termcount
final term term   termenum term
final int docfreq   termenum docfreq
termpositions seek term
int lastdoc    1
int freq0   0
totfreq    docfreq
while termpositions next
freq0
final int doc   termpositions doc
final int freq   termpositions freq
if  doc <  lastdoc
throw new runtimeexception     term       doc       lastdoc
lastdoc   doc
if  freq <  0
throw new runtimeexception     term       doc       freq
int lastpos    1
totpos    freq
for int j 0 j<freq j
final int pos   termpositions nextposition
if  pos < 0
throw new runtimeexception     term       doc       pos
if  pos <  lastpos
throw new runtimeexception     term       doc       pos       lastpos
// now count how many deleted docs occurred in
// this term:
final int delcount
if  reader hasdeletions
mytermdocs seek term
while mytermdocs next
delcount   mytermdocs delcount
else
delcount   0
if  freq0   delcount    docfreq
throw new runtimeexception     term       docfreq       freq0       delcount
out println     termcount       totfreq       totpos
out print
int doccount   0
long totfields   0
for int j 0 j<info doccount j
if   reader isdeleted j
doccount
document doc   reader document j
totfields    doc getfields   size
if  doccount    reader numdocs
throw new runtimeexception     doccount       doccount
out println     totfields       nf format    float  totfields  doccount
out print
int totvectors   0
for int j 0 j<info doccount j
if   reader isdeleted j
termfreqvector tfv   reader gettermfreqvectors j
if  tfv    null
totvectors    tfv length
out println     totvectors       nf format    float  totvectors  doccount
out println
catch  throwable t
out println
string comment
if  dofix
comment
else
comment
out println     comment
t printstacktrace out
out println
totlosedoccount    tolosedoccount
numbadsegments
changed   true
continue
finally
if  reader    null
reader close
// keeper
newsis add info clone
if   changed
out println
return true
else
out println     numbadsegments
if  dofix
out println     totlosedoccount
else
out println     totlosedoccount
out println
if  dofix
out println     totlosedoccount
for int i 0 i<5 i
try
thread sleep 1000
catch  interruptedexception ie
thread currentthread   interrupt
i
continue
out println      5 i
out print
try
newsis write dir
catch  throwable t
out println
t printstacktrace out
return false
out println
out println
else
out println
out println
return false
public static void main string args  throws throwable
boolean dofix   false
for int i 0 i<args length i
if  args equals
dofix   true
break
if  args length     dofix ? 2 1
out println
system exit 1
final string dirname   args
out println     dirname
directory dir   null
try
dir   fsdirectory getdirectory dirname
catch  throwable t
out println
t printstacktrace out
system exit 1
boolean isclean   check dir  dofix
final int exitcode
if  isclean
exitcode   0
else
exitcode   1
system exit exitcode