package org apache lucene search
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
import org apache lucene index term
import org apache lucene index termenum
import org apache lucene index indexreader
import org apache lucene util tostringutils
/** a query that matches documents containing terms with a specified prefix. a prefixquery
* is built by queryparser for input like <code>app*</code>. */
public class prefixquery extends query
private term prefix
/** constructs a query for terms starting with <code>prefix</code>. */
public prefixquery term prefix
this prefix   prefix
/** returns the prefix of this query. */
public term getprefix     return prefix
public query rewrite indexreader reader  throws ioexception
booleanquery query   new booleanquery true
termenum enumerator   reader terms prefix
try
string prefixtext   prefix text
string prefixfield   prefix field
do
term term   enumerator term
if  term    null
term text   startswith prefixtext
term field      prefixfield     interned comparison
termquery tq   new termquery term  	     found a match
tq setboost getboost                       set the boost
query add tq  booleanclause occur should  		     add to query
//system.out.println("added " + term);
else
break
while  enumerator next
finally
enumerator close
return query
/** prints a user-readable version of this query. */
public string tostring string field
stringbuffer buffer   new stringbuffer
if   prefix field   equals field
buffer append prefix field
buffer append
buffer append prefix text
buffer append
buffer append tostringutils boost getboost
return buffer tostring
/** returns true iff <code>o</code> is equal to this. */
public boolean equals object o
if    o instanceof prefixquery
return false
prefixquery other    prefixquery o
return  this getboost      other getboost
this prefix equals other prefix
/** returns a hash code value for this object.*/
public int hashcode
return float floattointbits getboost    ^ prefix hashcode   ^ 0x6634d93c