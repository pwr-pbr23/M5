package org apache lucene analysis sinks
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene analysis sinktokenizer
import org apache lucene analysis token
import java text dateformat
import java text simpledateformat
import java text parseexception
import java util list
import java util date
/**
* attempts to parse the {@link org.apache.lucene.analysis.token#termbuffer()} as a date using a {@link java.text.dateformat}.
* if the value is a date, it will add it to the sink.
* <p/>
* also marks the sink token with {@link org.apache.lucene.analysis.token#type()} equal to {@link #date_type}
*
*
**/
public class daterecognizersinktokenizer extends sinktokenizer
public static final string date_type
protected dateformat dateformat
/**
* uses {@link java.text.simpledateformat#getdateinstance()} as the {@link java.text.dateformat} object.
*/
public daterecognizersinktokenizer
this null  simpledateformat getdateinstance
public daterecognizersinktokenizer dateformat dateformat
this null  dateformat
/**
* uses {@link java.text.simpledateformat#getdateinstance()} as the {@link java.text.dateformat} object.
* @param input the input list of tokens that are already dates.  they should be marked as type {@link #date_type} for completeness
*/
public daterecognizersinktokenizer list  <token>   input
this input  simpledateformat getdateinstance
/**
*
* @param input
* @param dateformat the date format to use to try and parse the date.  note, this sinktokenizer makes no attempt to synchronize the dateformat object
*/
public daterecognizersinktokenizer list  <token>   input  dateformat dateformat
super input
this dateformat   dateformat
public void add token t
//check to see if this token is a date
if  t    null
try
date date   dateformat parse new string t termbuffer    0  t termlength       we don't care about the date  just that we can parse it as a date
if  date    null
t settype date_type
lst add t clone
catch  parseexception e