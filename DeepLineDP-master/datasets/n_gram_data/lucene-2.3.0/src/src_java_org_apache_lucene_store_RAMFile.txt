package org apache lucene store
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java util arraylist
import java io serializable
class ramfile implements serializable
private static final long serialversionuid   1l
private arraylist buffers   new arraylist
long length
ramdirectory directory
long sizeinbytes                      only maintained if in a directory  updates synchronized on directory
// this is publicly modifiable via directory.touchfile(), so direct access not supported
private long lastmodified   system currenttimemillis
// file used as buffer, in no ramdirectory
ramfile
ramfile ramdirectory directory
this directory   directory
// for non-stream access from thread that might be concurrent with writing
synchronized long getlength
return length
synchronized void setlength long length
this length   length
// for non-stream access from thread that might be concurrent with writing
synchronized long getlastmodified
return lastmodified
synchronized void setlastmodified long lastmodified
this lastmodified   lastmodified
final synchronized byte addbuffer int size
byte buffer   newbuffer size
if  directory  null
synchronized  directory                   ensure addition of buffer and adjustment to directory size are atomic wrt directory
buffers add buffer
directory sizeinbytes    size
sizeinbytes    size
else
buffers add buffer
return buffer
final synchronized byte getbuffer int index
return  byte  buffers get index
final synchronized int numbuffers
return buffers size
/**
* expert: allocate a new buffer.
* subclasses can allocate differently.
* @param size size of allocated buffer.
* @return allocated buffer.
*/
byte newbuffer int size
return new byte
// only valid if in a directory
long getsizeinbytes
synchronized  directory
return sizeinbytes