package org apache lucene store je
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
import org apache lucene store indexoutput
/**
* port of andi vajda's dbdirectory to java edition of berkeley database
*
* @author aaron donovan
*/
public class jeindexoutput extends indexoutput
/**
* the size of data blocks, currently 16k (2^14), is determined by this
* constant.
*/
static public final int block_shift   14
static public final int block_len   1 << block_shift
static public final int block_mask   block_len   1
protected long position   0l  length   0l
protected jedirectory directory
protected block block
protected file file
protected jeindexoutput jedirectory directory  string name  boolean create
throws ioexception
super
this directory   directory
file   new file directory  name  create
block   new block file
length   file getlength
seek length
block get directory
directory openfiles add this
public void close   throws ioexception
flush
file modify directory  length  system currenttimemillis
directory openfiles remove this
public void flush   throws ioexception
if  length > 0
block put directory
public void writebyte byte b  throws ioexception
int blockpos    int   position     block_mask
block getdata     b
if  blockpos   1    block_len
block put directory
block seek position
block get directory
if  position > length
length   position
public void writebytes byte b  int offset  int len  throws ioexception
int blockpos    int   position   block_mask
while  blockpos   len >  block_len
int blocklen   block_len   blockpos
system arraycopy b  offset  block getdata    blockpos  blocklen
block put directory
len    blocklen
offset    blocklen
position    blocklen
block seek position
block get directory
blockpos   0
if  len > 0
system arraycopy b  offset  block getdata    blockpos  len
position    len
if  position > length
length   position
public long length   throws ioexception
return length
public void seek long pos  throws ioexception
if  pos > length
throw new ioexception
if   pos >>> block_shift      position >>> block_shift
position   pos
else
block put directory
block seek pos
block get directory
position   pos
public long getfilepointer
return position