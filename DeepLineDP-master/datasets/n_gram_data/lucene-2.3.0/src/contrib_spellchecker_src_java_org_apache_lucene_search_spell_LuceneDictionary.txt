package org apache lucene search spell
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene index indexreader
import java util iterator
import org apache lucene index termenum
import org apache lucene index term
import java io
/**
* lucene dictionary: terms taken from the given field
* of a lucene index.
*
* when using indexreader.terms(term) the code must not call next() on termenum
* as the first call to termenum, see: http://issues.apache.org/jira/browse/lucene-6
*
*
*
*/
public class lucenedictionary implements dictionary
private indexreader reader
private string field
public lucenedictionary indexreader reader  string field
this reader   reader
this field   field intern
public final iterator getwordsiterator
return new luceneiterator
final class luceneiterator implements iterator
private termenum termenum
private term actualterm
private boolean hasnextcalled
luceneiterator
try
termenum   reader terms new term field
catch  ioexception e
throw new runtimeexception e
public object next
if   hasnextcalled
hasnext
hasnextcalled   false
try
termenum next
catch  ioexception e
throw new runtimeexception e
return  actualterm    null  ? actualterm text     null
public boolean hasnext
if  hasnextcalled
return actualterm    null
hasnextcalled   true
actualterm   termenum term
// if there are no words return false
if  actualterm    null
return false
string currentfield   actualterm field
// if the next word doesn't have the same field return false
if  currentfield    field
actualterm   null
return false
return true
public void remove
throw new unsupportedoperationexception