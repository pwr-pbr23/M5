package org apache lucene store db
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
import java io bytearrayoutputstream
import java io dataoutputstream
import java io bytearrayinputstream
import java io datainputstream
import java util random
import com sleepycat db databaseentry
import com sleepycat db internal dbconstants
import com sleepycat db internal dbc
import com sleepycat db internal db
import com sleepycat db internal dbtxn
import com sleepycat db databaseexception
/**
* @author andi vajda
*/
public class file extends object
static protected random random   new random
protected databaseentry key  data
protected long length  timemodified
protected string name
protected byte uuid
protected file string name
throws ioexception
setname name
data   new databaseentry new byte
data setuserbuffer data getsize    true
protected file dbdirectory directory  string name  boolean create
throws ioexception
this name
if   exists directory
if   create
throw new ioexception     name
else
databaseentry key   new databaseentry new byte
databaseentry data   new databaseentry  byte  null
db blocks   directory blocks
dbtxn txn   directory txn
int flags   directory flags
key setuserbuffer 24  true
data setpartial true
uuid   new byte
try
do
/* generate a v.4 random-uuid unique to this db */
random nextbytes uuid
uuid    byte    byte  0x40
uuid    byte  0x0f
uuid    byte    byte  0x80
uuid    byte  0x3f
system arraycopy uuid  0  key getdata    0  16
while  blocks get txn  key  data
flags     dbconstants db_notfound
catch  databaseexception e
throw new ioexception e getmessage
else if  create
length   0l
protected string getname
return name
private void setname string name
throws ioexception
bytearrayoutputstream buffer   new bytearrayoutputstream 128
dataoutputstream out   new dataoutputstream buffer
out writeutf name
out close
key   new databaseentry buffer tobytearray
key setuserbuffer key getsize    true
this name   name
protected byte getkey
throws ioexception
if  uuid    null
throw new ioexception
return uuid
protected long getlength
return length
protected long gettimemodified
return timemodified
protected boolean exists dbdirectory directory
throws ioexception
db files   directory files
dbtxn txn   directory txn
int flags   directory flags
try
if  files get txn  key  data  flags     dbconstants db_notfound
return false
catch  databaseexception e
throw new ioexception e getmessage
byte bytes   data getdata
bytearrayinputstream buffer   new bytearrayinputstream bytes
datainputstream in   new datainputstream buffer
length   in readlong
timemodified   in readlong
in close
uuid   new byte
system arraycopy bytes  16  uuid  0  16
return true
protected void modify dbdirectory directory  long length  long timemodified
throws ioexception
bytearrayoutputstream buffer   new bytearrayoutputstream 32
dataoutputstream out   new dataoutputstream buffer
db files   directory files
dbtxn txn   directory txn
out writelong length
out writelong timemodified
out write getkey
out close
system arraycopy buffer tobytearray    0  data getdata    0  32
try
files put txn  key  data  0
catch  databaseexception e
throw new ioexception e getmessage
this length   length
this timemodified   timemodified
protected void delete dbdirectory directory
throws ioexception
if   exists directory
throw new ioexception     getname
dbc cursor   null
try
try
byte bytes   getkey
int ulen   bytes length   8
byte cursorbytes   new byte
databaseentry cursorkey   new databaseentry cursorbytes
databaseentry cursordata   new databaseentry  byte  null
db files   directory files
db blocks   directory blocks
dbtxn txn   directory txn
int flags   directory flags
system arraycopy bytes  0  cursorbytes  0  bytes length
cursorkey setuserbuffer ulen  true
cursordata setpartial true
cursor   blocks cursor txn  flags
if  cursor get cursorkey  cursordata
dbconstants db_set_range   flags     dbconstants db_notfound
cursor del 0
outer
while  cursor get cursorkey  cursordata
dbconstants db_next   flags     dbconstants db_notfound
for  int i   0  i < bytes length  i
if  bytes    cursorbytes
break outer
cursor del 0
files del txn  key  0
finally
if  cursor    null
cursor close
catch  databaseexception e
throw new ioexception e getmessage
protected void rename dbdirectory directory  string name
throws ioexception
if   exists directory
throw new ioexception     getname
file newfile   new file name
if  newfile exists directory
newfile delete directory
try
db files   directory files
dbtxn txn   directory txn
files del txn  key  0
setname name
files put txn  key  data  0
catch  databaseexception e
throw new ioexception e getmessage