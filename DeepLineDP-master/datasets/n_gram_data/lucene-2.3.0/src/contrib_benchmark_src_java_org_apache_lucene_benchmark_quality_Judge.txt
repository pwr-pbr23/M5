/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache lucene benchmark quality
import java io printwriter
/**
* judge if a document is relevant for a quality query.
*/
public interface judge
/**
* judge if document <code>docname</code> is relevant for the given quality query.
* @param docname name of doc tested for relevancy.
* @param query tested quality query.
* @return true if relevant, false if not.
*/
public boolean isrelevant string docname  qualityquery query
/**
* validate that queries and this judge match each other.
* to be perfectly valid, this judge must have some data for each and every
* input quality query, and must not have any data on any other quality query.
* <b>note</b>: the quality benchmark run would not fail in case of imperfect
* validity, just a warning message would be logged.
* @param qq quality queries to be validated.
* @param logger if not null, validation issues are logged.
* @return true if perfectly valid, false if not.
*/
public boolean validatedata  qualityquery qq  printwriter logger
/**
* return the maximal recall for the input quality query.
* it is the number of relevant docs this judge "knows" for the query.
* @param query the query whose maximal recall is needed.
*/
public int maxrecall  qualityquery query