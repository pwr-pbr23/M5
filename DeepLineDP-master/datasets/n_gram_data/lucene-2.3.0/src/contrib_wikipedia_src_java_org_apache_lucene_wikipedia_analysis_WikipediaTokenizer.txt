/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache lucene wikipedia analysis
import org apache lucene analysis token
import org apache lucene analysis tokenizer
import java io reader
import java io ioexception
/**
* extension of standardtokenizer that is aware of wikipedia syntax.  it is based off of the
* wikipedia tutorial available at http://en.wikipedia.org/wiki/wikipedia:tutorial, but it may not be complete.
*<p/>
* experimental !!!!!!!!!
* note: this tokenizer is considered experimental and the grammar is subject to change in the trunk and in follow up releases.
**/
public class wikipediatokenizer extends tokenizer
public static final string internal_link
public static final string external_link
//the url part of the link, i.e. the first token
public static final string external_link_url
public static final string citation
public static final string category
public static final string bold
public static final string italics
public static final string bold_italics
public static final string heading
public static final string sub_heading
/**
* a private instance of the jflex-constructed scanner
*/
private final wikipediatokenizerimpl scanner
void setinput reader reader
this input   reader
/**
* creates a new instance of the {@link wikipediatokenizer}. attaches the
* <code>input</code> to a newly created jflex scanner.
* @param input the input reader
*/
public wikipediatokenizer reader input
this input   input
this scanner   new wikipediatokenizerimpl input
/*
* (non-javadoc)
*
* @see org.apache.lucene.analysis.tokenstream#next()
*/
public token next token result  throws ioexception
int tokentype   scanner getnexttoken
if  tokentype    wikipediatokenizerimpl yyeof
return null
scanner gettext result  tokentype
final int start   scanner yychar
result setstartoffset start
result setendoffset start   result termlength
result setpositionincrement scanner getpositionincrement
result settype wikipediatokenizerimpl token_types
return result
/*
* (non-javadoc)
*
* @see org.apache.lucene.analysis.tokenstream#reset()
*/
public void reset   throws ioexception
super reset
scanner yyreset input
public void reset reader reader  throws ioexception
input   reader
reset