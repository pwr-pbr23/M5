/*
* created on 25-jan-2006
*/
package org apache lucene search similar
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io bytearrayinputstream
import java io ioexception
import java util set
import org apache lucene analysis analyzer
import org apache lucene index indexreader
import org apache lucene search booleanclause
import org apache lucene search booleanquery
import org apache lucene search query
import org apache lucene search similar morelikethis
/**
* a simple wrapper for morelikethis for use in scenarios where a query object is required eg
* in custom queryparser extensions. at query.rewrite() time the reader is used to construct the
* actual morelikethis object and obtain the real query object.
* @author maharwood
*/
public class morelikethisquery extends query
private string liketext
private string morelikefields
private analyzer analyzer
float percenttermstomatch 0 3f
int mintermfrequency 1
int maxqueryterms 5
set stopwords null
int mindocfreq  1
/**
* @param morelikefields
*/
public morelikethisquery string liketext  string morelikefields  analyzer analyzer
this liketext liketext
this morelikefields morelikefields
this analyzer analyzer
public query rewrite indexreader reader  throws ioexception
morelikethis mlt new morelikethis reader
mlt setfieldnames morelikefields
mlt setanalyzer analyzer
mlt setmintermfreq mintermfrequency
if mindocfreq> 0
mlt setmindocfreq mindocfreq
mlt setmaxqueryterms maxqueryterms
mlt setstopwords stopwords
booleanquery bq   booleanquery  mlt like new bytearrayinputstream liketext getbytes
booleanclause clauses   bq getclauses
//make at least half the terms match
bq setminimumnumbershouldmatch  int  clauses length percenttermstomatch
return bq
/* (non-javadoc)
* @see org.apache.lucene.search.query#tostring(java.lang.string)
*/
public string tostring string field
return   liketext
public float getpercenttermstomatch
return percenttermstomatch
public void setpercenttermstomatch float percenttermstomatch
this percenttermstomatch   percenttermstomatch
public analyzer getanalyzer
return analyzer
public void setanalyzer analyzer analyzer
this analyzer   analyzer
public string getliketext
return liketext
public void setliketext string liketext
this liketext   liketext
public int getmaxqueryterms
return maxqueryterms
public void setmaxqueryterms int maxqueryterms
this maxqueryterms   maxqueryterms
public int getmintermfrequency
return mintermfrequency
public void setmintermfrequency int mintermfrequency
this mintermfrequency   mintermfrequency
public string getmorelikefields
return morelikefields
public void setmorelikefields string morelikefields
this morelikefields   morelikefields
public set getstopwords
return stopwords
public void setstopwords set stopwords
this stopwords   stopwords
public int getmindocfreq
return mindocfreq
public void setmindocfreq int mindocfreq
this mindocfreq   mindocfreq