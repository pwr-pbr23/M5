package org apache lucene xmlparser builders
import java io ioexception
import java io stringreader
import org apache lucene analysis analyzer
import org apache lucene analysis token
import org apache lucene analysis tokenstream
import org apache lucene index term
import org apache lucene search filter
import org apache lucene search termsfilter
import org apache lucene xmlparser domutils
import org apache lucene xmlparser filterbuilder
import org apache lucene xmlparser parserexception
import org w3c dom element
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/**
* @author maharwood
*/
public class termsfilterbuilder implements filterbuilder
analyzer analyzer
/**
* @param analyzer
*/
public termsfilterbuilder analyzer analyzer
this analyzer   analyzer
/*
* (non-javadoc)
*
* @see org.apache.lucene.xmlparser.filterbuilder#process(org.w3c.dom.element)
*/
public filter getfilter element e  throws parserexception
termsfilter tf   new termsfilter
string text   domutils getnonblanktextorfail e
string fieldname   domutils getattributewithinheritanceorfail e
tokenstream ts   analyzer tokenstream fieldname  new stringreader text
try
token token   ts next
term term   null
while  token    null
if  term    null
term   new term fieldname  token termtext
else
//					 create from previous to save fieldname.intern overhead
term   term createterm token termtext
tf addterm term
token   ts next
catch  ioexception ioe
throw new runtimeexception
ioe
return tf