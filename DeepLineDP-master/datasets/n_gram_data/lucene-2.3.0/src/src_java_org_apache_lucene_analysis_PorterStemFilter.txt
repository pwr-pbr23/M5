package org apache lucene analysis
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
/** transforms the token stream as per the porter stemming algorithm.
note: the input to the stemming filter must already be in lower case,
so you will need to use lowercasefilter or lowercasetokenizer farther
down the tokenizer chain in order for this to work properly!
<p>
to use this filter with other analyzers, you'll want to write an
analyzer class that sets up the tokenstream chain as you want it.
to use this with lowercasetokenizer, for example, you'd write an
analyzer like this:
<p>
<pre>
class myanalyzer extends analyzer {
public final tokenstream tokenstream(string fieldname, reader reader) {
return new porterstemfilter(new lowercasetokenizer(reader));
}
}
</pre>
*/
public final class porterstemfilter extends tokenfilter
private porterstemmer stemmer
public porterstemfilter tokenstream in
super in
stemmer   new porterstemmer
}
public final token next token result  throws ioexception
result   input next result
if  result    null
if  stemmer stem result termbuffer    0  result termlength
result settermbuffer stemmer getresultbuffer    0  stemmer getresultlength
return result
else
return null
}
}