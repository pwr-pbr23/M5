package org apache lucene benchmark bytask feeds
/**
* copyright 2005 the apache software foundation
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene search query
import org apache lucene benchmark bytask utils config
import org apache lucene benchmark bytask utils format
/**
* abstract base query maker.
* each query maker should just implement the {@link #preparequeries()} method.
**/
public abstract class abstractquerymaker implements querymaker
protected int qnum   0
protected query queries
protected config config
public void resetinputs
qnum   0
protected abstract query preparequeries   throws exception
public void setconfig config config  throws exception
this config   config
queries   preparequeries
public string printqueries
string newline   system getproperty
stringbuffer sb   new stringbuffer
if  queries    null
for  int i   0  i < queries length  i
sb append i    format simplename queries getclass      queries tostring
sb append newline
return sb tostring
public query makequery   throws exception
return queries
// return next qnum
protected synchronized int nextqnum
int res   qnum
qnum    qnum 1  % queries length
return res
/*
*  (non-javadoc)
* @see org.apache.lucene.benchmark.bytask.feeds.querymaker#makequery(int)
*/
public query makequery int size  throws exception
throw new exception this