/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache lucene benchmark quality trec
import java io bufferedreader
import java io ioexception
import java util arraylist
import java util arrays
import java util hashmap
import org apache lucene benchmark quality qualityquery
/**
* read topics of trec 1mq track.
* <p>
* expects this topic format -
* <pre>
*   qnum:qtext
* </pre>
* comment lines starting with '#' are ignored.
* <p>
* all topics will have a single name value pair.
*/
public class trec1mqreader
private string name
/**
*  constructor for trec's 1mq topicsreader
*  @param name name of name-value pair to set for all queries.
*/
public trec1mqreader string name
super
this name   name
/**
* read quality queries from trec 1mq format topics file.
* @param reader where queries are read from.
* @return the result quality queries.
* @throws ioexception if cannot read the queries.
*/
public qualityquery readqueries bufferedreader reader  throws ioexception
arraylist res   new arraylist
string line
try
while  null   line reader readline
line   line trim
if  line startswith
continue
// id
int k   line indexof
string id   line substring 0 k  trim
// qtext
string qtext   line substring k 1  trim
// we got a topic!
hashmap fields   new hashmap
fields put name qtext
//system.out.println("id: "+id+" qtext: "+qtext+"  line: "+line);
qualityquery topic   new qualityquery id fields
res add topic
finally
reader close
// sort result array (by id)
qualityquery qq    qualityquery  res toarray new qualityquery
arrays sort qq
return qq