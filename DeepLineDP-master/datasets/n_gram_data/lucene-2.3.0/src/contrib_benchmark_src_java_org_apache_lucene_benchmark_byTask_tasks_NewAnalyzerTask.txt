package org apache lucene benchmark bytask tasks
/**
* copyright 2005 the apache software foundation
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene analysis analyzer
import org apache lucene benchmark bytask perfrundata
import java io ioexception
import java util arraylist
import java util list
import java util stringtokenizer
/**
* create a new {@link org.apache.lucene.analysis.analyzer} and set it it in the getrundata() for use by all future tasks.
*
*/
public class newanalyzertask extends perftask
private list  <string>   analyzerclassnames
private int current
public newanalyzertask perfrundata rundata
super rundata
analyzerclassnames   new arraylist
public int dologic   throws ioexception
string classname   null
try
if  current >  analyzerclassnames size
current   0
classname    string  analyzerclassnames get current
if  classname    null    classname equals
classname
if  classname indexof        1     classname startswith      there is no package name  assume o a l analysis
classname       classname
getrundata   setanalyzer  analyzer  class forname classname  newinstance
system out println     classname
catch  exception e
throw new runtimeexception     classname  e
return 1
/**
* set the params (analyzerclassname only),  comma-separate list of analyzer class names.  if the analyzer lives in
* org.apache.lucene.analysis, the name can be shortened by dropping the o.a.l.a part of the fully qualified class name.
* <p/>
* example declaration: {"newanalyzer" newanalyzer(whitespaceanalyzer, simpleanalyzer, stopanalyzer, standard.standardanalyzer) >
* @param params analyzerclassname, or empty for the standardanalyzer
*/
public void setparams string params
super setparams params
for  stringtokenizer tokenizer   new stringtokenizer params      tokenizer hasmoretokens
string s   tokenizer nexttoken
analyzerclassnames add s trim
/* (non-javadoc)
* @see org.apache.lucene.benchmark.bytask.tasks.perftask#supportsparams()
*/
public boolean supportsparams
return true