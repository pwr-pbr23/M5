package org apache lucene benchmark bytask feeds
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org xml sax xmlreader
import org xml sax attributes
import org xml sax inputsource
import org xml sax saxexception
import org xml sax helpers defaulthandler
import org xml sax helpers xmlreaderfactory
import java io ioexception
import java io fileinputstream
import org apache lucene document document
/**
* a linedocmaker which reads the uncompressed english wikipedia dump.
*/
public class enwikidocmaker extends linedocmaker
static final int title   0
static final int date   title 1
static final int body   date 1
static final int id   body   1
static final int length   id 1
static final string months
class parser extends defaulthandler implements runnable
thread t
boolean threaddone
public void run
try
xmlreader reader
xmlreaderfactory createxmlreader
reader setcontenthandler this
reader seterrorhandler this
while true
final fileinputstream localfileis   fileis
try
inputsource is   new inputsource localfileis
reader parse is
catch  ioexception ioe
synchronized enwikidocmaker this
if  localfileis    fileis
// fileis was closed on us, so, just fall
// through
else
// exception is real
throw ioe
synchronized this
if   forever
nmde   new nomoredataexception
notify
return
else if  localfileis    fileis
// if file is not already re-opened then
// re-open it now
openfile
catch  saxexception sae
throw new runtimeexception sae
catch  ioexception ioe
throw new runtimeexception ioe
finally
synchronized this
threaddone   true
notify
string tuple
nomoredataexception nmde
string next   throws nomoredataexception
if  t    null
threaddone   false
t   new thread this
t setdaemon true
t start
string result
synchronized this
while tuple    null    nmde    null     threaddone
try
wait
catch  interruptedexception ie
if  nmde    null
// set to null so we will re-start thread in case
// we are re-used:
t   null
throw nmde
if  t    null    threaddone
// the thread has exited yet did not hit end of
// data, so this means it hit an exception.  we
// throw nomordataexception here to force
// benchmark to stop the current alg:
throw new nomoredataexception
result   tuple
tuple   null
notify
return result
stringbuffer contents   new stringbuffer
public void characters char ch  int start  int length
contents append ch  start  length
string title
string body
string time
string id
public void startelement string namespace
string simple
string qualified
attributes attributes
if  qualified equals
title   null
body   null
time   null
id   null
else if  qualified equals
contents setlength 0
else if  qualified equals
contents setlength 0
else if  qualified equals
contents setlength 0
else if  qualified equals
contents setlength 0
string time string original
stringbuffer buffer   new stringbuffer
buffer append original substring 8  10
buffer append
buffer append months
buffer append
buffer append original substring 0  4
buffer append
buffer append original substring 11  19
buffer append
return buffer tostring
public void create string title  string time  string body  string id
string t   new string
t   title replace
t   time replace
t   body replaceall
t   id
synchronized this
while tuple  null
try
wait
catch  interruptedexception ie
tuple   t
notify
public void endelement string namespace  string simple  string qualified
throws saxexception
if  qualified equals
title   contents tostring
else if  qualified equals
body   contents tostring
if  body startswith
body startswith
body   null
else if  qualified equals
time   time contents tostring
else if  qualified equals       id    null     just get the first id
id   contents tostring
else if  qualified equals
if  body    null
create title  time  body  id
parser parser   new parser
class docstate extends linedocmaker docstate
public document setfields string tuple
titlefield setvalue tuple
datefield setvalue tuple
bodyfield setvalue tuple
idfield setvalue tuple
return doc
private docstate getdocstate
docstate ds    docstate  docstate get
if  ds    null
ds   new docstate
docstate set ds
return ds
public document makedocument   throws exception
string tuple   parser next
return getdocstate   setfields tuple