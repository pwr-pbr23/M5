package org apache lucene benchmark bytask feeds
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene benchmark bytask utils config
import java io bufferedreader
import java io file
import java io filefilter
import java io filereader
import java text dateformat
import java text simpledateformat
import java util arrays
import java util date
import java util locale
import java util stack
/**
* a docmaker using the dir collection for its input.
*
* config properties:
* docs.dir=&lt;path to the docs dir| default: dir-out&gt;
*
*/
public class dirdocmaker extends basicdocmaker
private threadlocal dateformat   new threadlocal
private file datadir   null
private int iteration 0
static public class iterator implements java util iterator
int count   0
public int getcount
return count
stack stack   new stack
/* this seems silly ... there must be a better way ...
not that this is good, but can it matter? */
static class comparator implements java util comparator
public int compare object _a  object _b
string a   _a tostring
string b   _b tostring
int diff   a length     b length
if  diff > 0
while  diff   > 0
b       b
else if  diff < 0
diff    diff
while  diff   > 0
a       a
/* note it's reversed because we're going to push,
which reverses again */
return b compareto a
comparator c   new comparator
void push file files
arrays sort files  c
for int i   0  i < files length  i
// system.err.println("push " + files[i]);
stack push files
void push file f
push f listfiles new filefilter
public boolean accept file f    return f isdirectory
push f listfiles new filefilter
public boolean accept file f    return f getname   endswith
find
void find
if  stack empty
return
if     file stack peek    isdirectory
return
file f    file stack pop
push f
public iterator file f
push f
public void remove
throw new runtimeexception
public boolean hasnext
return stack size   > 0
public object next
assert hasnext
count
object object   stack pop
// system.err.println("pop " + object);
find
return object
private iterator inputfiles   null
/* (non-javadoc)
* @see simpledocmaker#setconfig(java.util.properties)
*/
public void setconfig config config
super setconfig config
string d   config get
datadir   new file d
if   datadir isabsolute
datadir   new file new file     d
inputfiles   new iterator datadir
if  inputfiles  null
throw new runtimeexception   datadir getabsolutepath
// get/initiate a thread-local simple date format (must do so
// because simpledateformat is not thread-safe).
protected dateformat getdateformat
dateformat df    dateformat  dateformat get
if  df    null
// date format: 30-mar-1987 14:22:36.87
df   new simpledateformat   locale us
df setlenient true
dateformat set df
return df
protected docdata getnextdocdata   throws exception
file f   null
string name   null
synchronized  this
if   inputfiles hasnext
// exhausted files, start a new round, unless forever set to false.
if   forever
throw new nomoredataexception
inputfiles   new iterator datadir
iteration
f    file  inputfiles next
// system.err.println(f);
name   f getcanonicalpath     iteration
bufferedreader reader   new bufferedreader new filereader f
string line   null
//first line is the date, 3rd is the title, rest is body
string datestr   reader readline
reader readline     skip an empty line
string title   reader readline
reader readline     skip an empty line
stringbuffer bodybuf   new stringbuffer 1024
while   line   reader readline       null
bodybuf append line  append
reader close
addbytes f length
date date   getdateformat   parse datestr trim
return new docdata name  bodybuf tostring    title  null  date
/*
*  (non-javadoc)
* @see docmaker#resetiinputs()
*/
public synchronized void resetinputs
super resetinputs
inputfiles   new iterator datadir
iteration   0
/*
*  (non-javadoc)
* @see docmaker#numuniquetexts()
*/
public int numuniquetexts
return inputfiles getcount