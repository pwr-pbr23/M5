package org apache lucene search spans
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
import java util collection
import java util set
import org apache lucene index indexreader
import org apache lucene search query
import org apache lucene util tostringutils
/** matches spans near the beginning of a field. */
public class spanfirstquery extends spanquery
private spanquery match
private int end
/** construct a spanfirstquery matching spans in <code>match</code> whose end
* position is less than or equal to <code>end</code>. */
public spanfirstquery spanquery match  int end
this match   match
this end   end
/** return the spanquery whose matches are filtered. */
public spanquery getmatch     return match
/** return the maximum end position permitted in a match. */
public int getend     return end
public string getfield     return match getfield
/** returns a collection of all terms matched by this query.
* @deprecated use extractterms instead
* @see #extractterms(set)
*/
public collection getterms     return match getterms
public string tostring string field
stringbuffer buffer   new stringbuffer
buffer append
buffer append match tostring field
buffer append
buffer append end
buffer append
buffer append tostringutils boost getboost
return buffer tostring
public void extractterms set terms
match extractterms terms
public spans getspans final indexreader reader  throws ioexception
return new spans
private spans spans   match getspans reader
public boolean next   throws ioexception
while  spans next                          scan to next match
if  end   <  end
return true
return false
public boolean skipto int target  throws ioexception
if   spans skipto target
return false
if  spans end   <  end                     there is a match
return true
return next                                scan to next match
public int doc     return spans doc
public int start     return spans start
public int end     return spans end
public string tostring
return     spanfirstquery this tostring
public query rewrite indexreader reader  throws ioexception
spanfirstquery clone   null
spanquery rewritten    spanquery  match rewrite reader
if  rewritten    match
clone    spanfirstquery  this clone
clone match   rewritten
if  clone    null
return clone                            some clauses rewrote
else
return this                             no clauses rewrote
public boolean equals object o
if  this    o  return true
if    o instanceof spanfirstquery   return false
spanfirstquery other    spanfirstquery o
return this end    other end
this match equals other match
this getboost      other getboost
public int hashcode
int h   match hashcode
h ^   h << 8     h >>> 25       reversible
h ^  float floattorawintbits getboost    ^ end
return h