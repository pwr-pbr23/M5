package org apache lucene document
import java io serializable
/**
* copyright 2004 the apache software foundation
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/**
*  provides information about what should be done with this field
*
**/
//replace with an enumerated type in 1.5
public final class fieldselectorresult implements serializable
/**
* load this {@link field} every time the {@link document} is loaded, reading in the data as it is encounterd.
*  {@link document#getfield(string)} and {@link document#getfieldable(string)} should not return null.
*<p/>
* {@link document#add(fieldable)} should be called by the reader.
*/
public transient static final fieldselectorresult load   new fieldselectorresult 0
/**
* lazily load this {@link field}.  this means the {@link field} is valid, but it may not actually contain its data until
* invoked.  {@link document#getfield(string)} should not be used.  {@link document#getfieldable(string)} is safe to use and should
* return a valid instance of a {@link fieldable}.
*<p/>
* {@link document#add(fieldable)} should be called by the reader.
*/
public transient static final fieldselectorresult lazy_load   new fieldselectorresult 1
/**
* do not load the {@link field}.  {@link document#getfield(string)} and {@link document#getfieldable(string)} should return null.
* {@link document#add(fieldable)} is not called.
* <p/>
* {@link document#add(fieldable)} should not be called by the reader.
*/
public transient static final fieldselectorresult no_load   new fieldselectorresult 2
/**
* load this field as in the {@link #load} case, but immediately return from {@link field} loading for the {@link document}.  thus, the
* document may not have its complete set of fields.  {@link document#getfield(string)} and {@link document#getfieldable(string)} should
* both be valid for this {@link field}
* <p/>
* {@link document#add(fieldable)} should be called by the reader.
*/
public transient static final fieldselectorresult load_and_break   new fieldselectorresult 3
/**
* behaves much like {@link #load} but does not uncompress any compressed data.  this is used for internal purposes.
* {@link document#getfield(string)} and {@link document#getfieldable(string)} should not return null.
* <p/>
* {@link document#add(fieldable)} should be called by the reader.
*/
public transient static final fieldselectorresult load_for_merge   new fieldselectorresult 4
/** expert:  load the size of this {@link field} rather than its value.
* size is measured as number of bytes required to store the field == bytes for a binary or any compressed value, and 2*chars for a string value.
* the size is stored as a binary value, represented as an int in a byte[], with the higher order byte first in [0]
*/
public transient static final fieldselectorresult size   new fieldselectorresult 5
/** expert: like {@link #size} but immediately break from the field loading loop, i.e., stop loading further fields, after the size is loaded */
public transient static final fieldselectorresult size_and_break   new fieldselectorresult 6
private int id
private fieldselectorresult int id
this id   id
public boolean equals object o
if  this    o  return true
if  o    null    getclass      o getclass    return false
final fieldselectorresult that    fieldselectorresult  o
if  id    that id  return false
return true
public int hashcode
return id