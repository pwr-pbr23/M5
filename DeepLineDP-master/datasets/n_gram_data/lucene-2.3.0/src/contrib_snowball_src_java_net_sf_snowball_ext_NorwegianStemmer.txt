// this file was generated automatically by the snowball to java compiler
package net sf snowball ext
import net sf snowball snowballprogram
import net sf snowball among
/**
* generated class implementing code defined by a snowball script.
*/
public class norwegianstemmer extends snowballprogram
private among a_0
new among       1  1     this
new among       1  1     this
new among      1  1     this
new among      1  1     this
new among      1  1     this
new among      1  1     this
new among      1  1     this
new among      6  1     this
new among      1  3     this
new among       1  1     this
new among      9  1     this
new among       1  1     this
new among       1  1     this
new among      12  1     this
new among       1  2     this
new among      14  1     this
new among      14  1     this
new among      16  1     this
new among      16  1     this
new among      16  1     this
new among      19  1     this
new among      14  1     this
new among      21  1     this
new among      14  1     this
new among      14  1     this
new among       1  1     this
new among      25  1     this
new among       1  3     this
new among       1  1     this
private among a_1
new among       1   1     this
new among       1   1     this
private among a_2
new among       1  1     this
new among      0  1     this
new among       1  1     this
new among      2  1     this
new among      2  1     this
new among      4  1     this
new among       1  1     this
new among       1  1     this
new among      7  1     this
new among      7  1     this
new among      9  1     this
private static final char g_v    17  65  16  1  0  0  0  0  0  0  0  0  0  0  0  0  48  0  128
private static final char g_s_ending    119  127  149  1
private int i_p1
private void copy_from norwegianstemmer other
i_p1   other i_p1
super copy_from other
private boolean r_mark_regions
int v_1
// (, line 26
i_p1   limit
// goto, line 30
golab0  while true
v_1   cursor
lab1  do
if    in_grouping g_v  97  248
break lab1
cursor   v_1
break golab0
while  false
cursor   v_1
if  cursor >  limit
return false
cursor
// gopast, line 30
golab2  while true
lab3  do
if    out_grouping g_v  97  248
break lab3
break golab2
while  false
if  cursor >  limit
return false
cursor
// setmark p1, line 30
i_p1   cursor
// try, line 31
lab4  do
// (, line 31
if    i_p1 < 3
break lab4
i_p1   3
while  false
return true
private boolean r_main_suffix
int among_var
int v_1
int v_2
// (, line 36
// setlimit, line 37
v_1   limit   cursor
// tomark, line 37
if  cursor < i_p1
return false
cursor   i_p1
v_2   limit_backward
limit_backward   cursor
cursor   limit   v_1
// (, line 37
// [, line 37
ket   cursor
// substring, line 37
among_var   find_among_b a_0  29
if  among_var    0
limit_backward   v_2
return false
// ], line 37
bra   cursor
limit_backward   v_2
switch among_var
case 0
return false
case 1
// (, line 43
// delete, line 43
slice_del
break
case 2
// (, line 45
if    in_grouping_b g_s_ending  98  122
return false
// delete, line 45
slice_del
break
case 3
// (, line 47
// <-, line 47
slice_from
break
return true
private boolean r_consonant_pair
int v_1
int v_2
int v_3
// (, line 51
// test, line 52
v_1   limit   cursor
// (, line 52
// setlimit, line 53
v_2   limit   cursor
// tomark, line 53
if  cursor < i_p1
return false
cursor   i_p1
v_3   limit_backward
limit_backward   cursor
cursor   limit   v_2
// (, line 53
// [, line 53
ket   cursor
// substring, line 53
if  find_among_b a_1  2     0
limit_backward   v_3
return false
// ], line 53
bra   cursor
limit_backward   v_3
cursor   limit   v_1
// next, line 58
if  cursor <  limit_backward
return false
cursor
// ], line 58
bra   cursor
// delete, line 58
slice_del
return true
private boolean r_other_suffix
int among_var
int v_1
int v_2
// (, line 61
// setlimit, line 62
v_1   limit   cursor
// tomark, line 62
if  cursor < i_p1
return false
cursor   i_p1
v_2   limit_backward
limit_backward   cursor
cursor   limit   v_1
// (, line 62
// [, line 62
ket   cursor
// substring, line 62
among_var   find_among_b a_2  11
if  among_var    0
limit_backward   v_2
return false
// ], line 62
bra   cursor
limit_backward   v_2
switch among_var
case 0
return false
case 1
// (, line 66
// delete, line 66
slice_del
break
return true
public boolean stem
int v_1
int v_2
int v_3
int v_4
// (, line 71
// do, line 73
v_1   cursor
lab0  do
// call mark_regions, line 73
if   r_mark_regions
break lab0
while  false
cursor   v_1
// backwards, line 74
limit_backward   cursor  cursor   limit
// (, line 74
// do, line 75
v_2   limit   cursor
lab1  do
// call main_suffix, line 75
if   r_main_suffix
break lab1
while  false
cursor   limit   v_2
// do, line 76
v_3   limit   cursor
lab2  do
// call consonant_pair, line 76
if   r_consonant_pair
break lab2
while  false
cursor   limit   v_3
// do, line 77
v_4   limit   cursor
lab3  do
// call other_suffix, line 77
if   r_other_suffix
break lab3
while  false
cursor   limit   v_4
cursor   limit_backward             return true