package org apache lucene index
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
import java util arrays
import org apache lucene store indexoutput
/**
* implements the skip list writer for the default posting list format
* that stores positions and payloads.
*
*/
class defaultskiplistwriter extends multilevelskiplistwriter
private int lastskipdoc
private int lastskippayloadlength
private long lastskipfreqpointer
private long lastskipproxpointer
private indexoutput freqoutput
private indexoutput proxoutput
private int curdoc
private boolean curstorepayloads
private int curpayloadlength
private long curfreqpointer
private long curproxpointer
defaultskiplistwriter int skipinterval  int numberofskiplevels  int doccount  indexoutput freqoutput  indexoutput proxoutput
super skipinterval  numberofskiplevels  doccount
this freqoutput   freqoutput
this proxoutput   proxoutput
lastskipdoc   new int
lastskippayloadlength   new int
lastskipfreqpointer   new long
lastskipproxpointer   new long
/**
* sets the values for the current skip data.
*/
void setskipdata int doc  boolean storepayloads  int payloadlength
this curdoc   doc
this curstorepayloads   storepayloads
this curpayloadlength   payloadlength
this curfreqpointer   freqoutput getfilepointer
this curproxpointer   proxoutput getfilepointer
protected void resetskip
super resetskip
arrays fill lastskipdoc  0
arrays fill lastskippayloadlength   1       we don't have to write the first length in the skip list
arrays fill lastskipfreqpointer  freqoutput getfilepointer
arrays fill lastskipproxpointer  proxoutput getfilepointer
protected void writeskipdata int level  indexoutput skipbuffer  throws ioexception
// to efficiently store payloads in the posting lists we do not store the length of
// every payload. instead we omit the length for a payload if the previous payload had
// the same length.
// however, in order to support skipping the payload length at every skip point must be known.
// so we use the same length encoding that we use for the posting lists for the skip data as well:
// case 1: current field does not store payloads
//           skipdatum                 --> docskip, freqskip, proxskip
//           docskip,freqskip,proxskip --> vint
//           docskip records the document number before every skipinterval th  document in termfreqs.
//           document numbers are represented as differences from the previous value in the sequence.
// case 2: current field stores payloads
//           skipdatum                 --> docskip, payloadlength?, freqskip,proxskip
//           docskip,freqskip,proxskip --> vint
//           payloadlength             --> vint
//         in this case docskip/2 is the difference between
//         the current and the previous value. if docskip
//         is odd, then a payloadlength encoded as vint follows,
//         if docskip is even, then it is assumed that the
//         current payload length equals the length at the previous
//         skip point
if  curstorepayloads
int delta   curdoc   lastskipdoc
if  curpayloadlength    lastskippayloadlength
// the current payload length equals the length at the previous skip point,
// so we don't store the length again
skipbuffer writevint delta   2
else
// the payload length is different from the previous one. we shift the docskip,
// set the lowest bit and store the current payload length as vint.
skipbuffer writevint delta   2   1
skipbuffer writevint curpayloadlength
lastskippayloadlength   curpayloadlength
else
// current field does not store payloads
skipbuffer writevint curdoc   lastskipdoc
skipbuffer writevint  int   curfreqpointer   lastskipfreqpointer
skipbuffer writevint  int   curproxpointer   lastskipproxpointer
lastskipdoc   curdoc
//system.out.println("write doc at level " + level + ": " + curdoc);
lastskipfreqpointer   curfreqpointer
lastskipproxpointer   curproxpointer