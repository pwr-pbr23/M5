package org apache lucene document
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene search prefixquery
import org apache lucene search rangequery
import java util date       for javadoc
/**
* provides support for converting dates to strings and vice-versa.
* the strings are structured so that lexicographic sorting orders by date,
* which makes them suitable for use as field values and search terms.
*
* <p>note that this class saves dates with millisecond granularity,
* which is bad for {@link rangequery} and {@link prefixquery}, as those
* queries are expanded to a booleanquery with a potentially large number
* of terms when searching. thus you might want to use
* {@link datetools} instead.
*
* <p>
* note: dates before 1970 cannot be used, and therefore cannot be
* indexed when using this class. see {@link datetools} for an
* alternative without such a limitation.
*
* @deprecated if you build a new index, use {@link datetools} instead. this class is included for use with existing
* indices and will be removed in a future release.
*/
public class datefield
private datefield
// make date strings long enough to last a millenium
private static int date_len   long tostring 1000l 365 24 60 60 1000
character max_radix  length
public static string min_date_string
return timetostring 0
public static string max_date_string
char buffer   new char
char c   character fordigit character max_radix 1  character max_radix
for  int i   0   i < date_len  i
buffer   c
return new string buffer
/**
* converts a date to a string suitable for indexing.
* @throws runtimeexception if the date specified in the
* method argument is before 1970
*/
public static string datetostring date date
return timetostring date gettime
/**
* converts a millisecond time to a string suitable for indexing.
* @throws runtimeexception if the time specified in the
* method argument is negative, that is, before 1970
*/
public static string timetostring long time
if  time < 0
throw new runtimeexception     time
string s   long tostring time  character max_radix
if  s length   > date_len
throw new runtimeexception     time
date_len
// pad with leading zeros
if  s length   < date_len
stringbuffer sb   new stringbuffer s
while  sb length   < date_len
sb insert 0  0
s   sb tostring
return s
/** converts a string-encoded date into a millisecond time. */
public static long stringtotime string s
return long parselong s  character max_radix
/** converts a string-encoded date into a date object. */
public static date stringtodate string s
return new date stringtotime s