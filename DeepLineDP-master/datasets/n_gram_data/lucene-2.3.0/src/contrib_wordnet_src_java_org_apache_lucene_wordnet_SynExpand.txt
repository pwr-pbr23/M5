package org apache lucene wordnet
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene store
import org apache lucene search
import org apache lucene index
import org apache lucene document
import org apache lucene analysis
import org apache lucene analysis standard
import java io
import java util
/**
* expand a query by looking up synonyms for every term.
* you need to invoke {@link syns2index} first to build the synonym index.
*
* @see syns2index
*/
public final class synexpand
/**
* test driver for synonym expansion.
* uses boost factor of 0.9 for illustrative purposes.
*
* if you pass in the query "big dog" then it prints out:
*
* <code><pre>
* query: big adult^0.9 bad^0.9 bighearted^0.9 boastful^0.9 boastfully^0.9 bounteous^0.9 bountiful^0.9 braggy^0.9 crowing^0.9 freehanded^0.9 giving^0.9 grown^0.9 grownup^0.9 handsome^0.9 large^0.9 liberal^0.9 magnanimous^0.9 momentous^0.9 openhanded^0.9 prominent^0.9 swelled^0.9 vainglorious^0.9 vauntingly^0.9
* dog andiron^0.9 blackguard^0.9 bounder^0.9 cad^0.9 chase^0.9 click^0.9 detent^0.9 dogtooth^0.9 firedog^0.9 frank^0.9 frankfurter^0.9 frump^0.9 heel^0.9 hotdog^0.9 hound^0.9 pawl^0.9 tag^0.9 tail^0.9 track^0.9 trail^0.9 weenie^0.9 wiener^0.9 wienerwurst^0.9
* </pre></code>
*/
public static void main string args  throws ioexception
if  args length    2
system out println
fsdirectory directory   fsdirectory getdirectory args  false
indexsearcher searcher   new indexsearcher directory
string query   args
string field
query q   expand  query  searcher  new standardanalyzer    field  0 9f
system out println      q tostring  field
searcher close
directory close
/**
* perform synonym expansion on a query.
*
* @param query users query that is assumed to not have any "special" query syntax, thus it should be just normal words, so "big dog" makes sense, but a query like "title:foo^1.2" doesn't as this should presumably be passed directly to the default query parser.
*
* @param syns a opened to the lucene index you previously created with {@link syns2index}. the searcher is not closed or otherwise altered.
*
* @param a optional analyzer used to parse the users query else {@link standardanalyzer} is used
*
* @param field optional field name to search in or null if you want the default of "contents"
*
* @param boost optional boost applied to synonyms else no boost is applied
*
* @return the expanded query
*/
public static query expand  string query
searcher syns
analyzer a
string field
float boost
throws ioexception
set already   new hashset       avoid dups
list top   new linkedlist       needs to be separately listed
if   field    null  field
if   a    null  a   new standardanalyzer
// [1] parse query into separate words so that when we expand we can avoid dups
tokenstream ts   a tokenstream  field  new stringreader  query
org apache lucene analysis token t
while    t   ts next       null
string word   t termtext
if   already add  word
top add  word
booleanquery tmp   new booleanquery
// [2] form query
iterator it   top iterator
while   it hasnext
// [2a] add to level words in
string word    string  it next
termquery tq   new termquery  new term  field  word
tmp add  tq  booleanclause occur should
// [2b] add in unique synonums
hits hits   syns search  new termquery  new term syns2index f_word  word
for  int i   0  i < hits length    i
document doc   hits doc i
string values   doc getvalues  syns2index f_syn
for   int j   0  j < values length  j
string syn   values
if   already add  syn      avoid dups of top level words and synonyms
tq   new termquery  new term  field  syn
if   boost > 0     else keep normal 1 0
tq setboost  boost
tmp add  tq  booleanclause occur should
return tmp