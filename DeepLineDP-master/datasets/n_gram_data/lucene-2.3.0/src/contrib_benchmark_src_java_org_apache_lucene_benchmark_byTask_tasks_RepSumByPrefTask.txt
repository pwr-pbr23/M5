package org apache lucene benchmark bytask tasks
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene benchmark bytask perfrundata
import org apache lucene benchmark bytask stats report
import org apache lucene benchmark bytask stats taskstats
import java util iterator
import java util linkedhashmap
import java util list
/**
* report by-name-prefix statistics aggregated by name.
* <br>other side effects: none.
*/
public class repsumbypreftask extends reporttask
public repsumbypreftask perfrundata rundata
super rundata
protected string prefix
public int dologic   throws exception
report rp   reportsumbyprefix getrundata   getpoints   taskstats
system out println
system out println   prefix
rp getsize     rp getreported     rp getoutof
system out println rp gettext
system out println
return 0
protected report reportsumbyprefix  list taskstats
// aggregate by task name
int reported   0
linkedhashmap p2   new linkedhashmap
for  iterator it   taskstats iterator    it hasnext
taskstats stat1    taskstats  it next
if  stat1 getelapsed  > 0    stat1 gettask   getname   startswith prefix        only ended tasks with proper name
reported
string name   stat1 gettask   getname
taskstats stat2    taskstats  p2 get name
if  stat2    null
try
stat2    taskstats  stat1 clone
catch  clonenotsupportedexception e
throw new runtimeexception e
p2 put name stat2
else
stat2 add stat1
// now generate report from secondary list p2
return genpartialreport reported  p2  taskstats size
public void setprefix string prefix
this prefix   prefix
/* (non-javadoc)
* @see perftask#tostring()
*/
public string tostring
return super tostring     prefix