package org apache lucene ant
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene document field
import org w3c dom element
import org w3c dom node
import org w3c dom nodelist
import org w3c dom text
import org w3c tidy tidy
import java io bufferedreader
import java io file
import java io fileinputstream
import java io filereader
import java io ioexception
import java io inputstream
import java io stringwriter
/**
*  the <code>htmldocument</code> class creates a lucene {@link
*  org.apache.lucene.document.document} from an html document. <p>
*
*  it does this by using jtidy package. it can take input input
*  from {@link java.io.file} or {@link java.io.inputstream}.
*
*@author     erik hatcher
*/
public class htmldocument
private element rawdoc
//-------------------------------------------------------------
// constructors
//-------------------------------------------------------------
/**
*  constructs an <code>htmldocument</code> from a {@link
*  java.io.file}.
*
*@param  file             the <code>file</code> containing the
*      html to parse
*@exception  ioexception  if an i/o exception occurs
*/
public htmldocument file file  throws ioexception
tidy tidy   new tidy
tidy setquiet true
tidy setshowwarnings false
org w3c dom document root
tidy parsedom new fileinputstream file   null
rawdoc   root getdocumentelement
/**
*  constructs an <code>htmldocument</code> from an {@link
*  java.io.inputstream}.
*
*@param  is               the <code>inputstream</code>
*      containing the html
*/
public htmldocument inputstream is
tidy tidy   new tidy
tidy setquiet true
tidy setshowwarnings false
org w3c dom document root   tidy parsedom is  null
rawdoc   root getdocumentelement
/**
*  creates a lucene <code>document</code> from an {@link
*  java.io.inputstream}.
*
*@param  is
*/
public static org apache lucene document document
getdocument inputstream is
htmldocument htmldoc   new htmldocument is
org apache lucene document document lucenedoc
new org apache lucene document document
lucenedoc add new field    htmldoc gettitle    field store yes  field index tokenized
lucenedoc add new field    htmldoc getbody    field store yes  field index tokenized
return lucenedoc
//-------------------------------------------------------------
// public methods
//-------------------------------------------------------------
/**
*  creates a lucene <code>document</code> from a {@link
*  java.io.file}.
*
*@param  file
*@exception  ioexception
*/
public static org apache lucene document document
document file file  throws ioexception
htmldocument htmldoc   new htmldocument file
org apache lucene document document lucenedoc
new org apache lucene document document
lucenedoc add new field    htmldoc gettitle    field store yes  field index tokenized
lucenedoc add new field    htmldoc getbody    field store yes  field index tokenized
string contents   null
bufferedreader br
new bufferedreader new filereader file
stringwriter sw   new stringwriter
string line   br readline
while  line    null
sw write line
line   br readline
br close
contents   sw tostring
sw close
lucenedoc add new field    contents  field store yes  field index no
return lucenedoc
//-------------------------------------------------------------
// private methods
//-------------------------------------------------------------
/**
*  runs <code>htmldocument</code> on the files specified on
*  the command line.
*
*@param  args           command line arguments
*@exception  exception  description of exception
*/
public static void main string args  throws exception
//         htmldocument doc = new htmldocument(new file(args[0]));
//         system.out.println("title = " + doc.gettitle());
//         system.out.println("body  = " + doc.getbody());
htmldocument doc
new htmldocument new fileinputstream new file args
system out println     doc gettitle
system out println     doc getbody
/**
*  gets the title attribute of the <code>htmldocument</code>
*  object.
*
*@return    the title value
*/
public string gettitle
if  rawdoc    null
return null
string title
nodelist nl   rawdoc getelementsbytagname
if  nl getlength   > 0
element titleelement     element  nl item 0
text text    text  titleelement getfirstchild
if  text    null
title   text getdata
return title
/**
*  gets the bodytext attribute of the
*  <code>htmldocument</code> object.
*
*@return    the bodytext value
*/
public string getbody
if  rawdoc    null
return null
string body
nodelist nl   rawdoc getelementsbytagname
if  nl getlength   > 0
body   getbodytext nl item 0
return body
/**
*  gets the bodytext attribute of the
*  <code>htmldocument</code> object.
*
*@param  node  a dom node
*@return       the bodytext value
*/
private string getbodytext node node
nodelist nl   node getchildnodes
stringbuffer buffer   new stringbuffer
for  int i   0  i < nl getlength    i
node child   nl item i
switch  child getnodetype
case node element_node
buffer append getbodytext child
buffer append
break
case node text_node
buffer append   text  child  getdata
break
return buffer tostring