package org apache lucene benchmark bytask tasks
import java util iterator
import java util linkedhashmap
import org apache lucene benchmark bytask perfrundata
import org apache lucene benchmark bytask stats report
import org apache lucene benchmark bytask stats taskstats
import org apache lucene benchmark bytask utils format
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/**
* report (abstract) task - all report tasks extend this task.
*/
public abstract class reporttask extends perftask
public reporttask perfrundata rundata
super rundata
/* (non-javadoc)
* @see perftask#shouldneverlogatstart()
*/
protected boolean shouldneverlogatstart
return true
/* (non-javadoc)
* @see perftask#shouldnotrecordstats()
*/
protected boolean shouldnotrecordstats
return true
/*
* from here start the code used to generate the reports.
* subclasses would use this part to generate reports.
*/
protected static final string newline   system getproperty
/**
* get a textual summary of the benchmark results, average from all test runs.
*/
protected static final string op
protected static final string round
protected static final string runcnt
protected static final string reccnt
protected static final string recsec
protected static final string elapsed
protected static final string usedmem
protected static final string totmem
protected static final string cols
runcnt
reccnt
recsec
elapsed
usedmem
totmem
/**
* compute a title line for a report table
* @param longestop size of longest op name in the table
* @return the table title line.
*/
protected string tabletitle  string longestop
stringbuffer sb   new stringbuffer
sb append format format op longestop
sb append round
sb append getrundata   getconfig   getcolsnamesforvalsbyround
for  int i   0  i < cols length  i
sb append cols
return sb tostring
/**
* find the longest op name out of completed tasks.
* @param taskstats completed tasks to be considered.
* @return the longest op name out of completed tasks.
*/
protected string longestop iterator taskstats
string longest   op
while  taskstats hasnext
taskstats stat    taskstats  taskstats next
if  stat getelapsed  > 0       consider only tasks that ended
string name   stat gettask   getname
if  name length   > longest length
longest   name
return longest
/**
* compute a report line for the given task stat.
* @param longestop size of longest op name in the table.
* @param stat task stat to be printed.
* @return the report line.
*/
protected string taskreportline string longestop  taskstats stat
perftask task   stat gettask
stringbuffer sb   new stringbuffer
sb append format format task getname    longestop
string round    stat getround  > 0 ?   stat getround
sb append format formatpaddleft round  round
sb append getrundata   getconfig   getcolsvaluesforvalsbyround stat getround
sb append format format stat getnumruns    runcnt
sb append format format stat getcount     stat getnumruns    reccnt
long elapsed    stat getelapsed  >0 ? stat getelapsed     1      assume at least 1ms
sb append format format 1  float   stat getcount     1000 0   elapsed   recsec
sb append format format 2   float  stat getelapsed     1000  elapsed
sb append format format 0   float  stat getmaxusedmem     stat getnumruns    usedmem
sb append format format 0   float  stat getmaxtotmem     stat getnumruns    totmem
return sb tostring
protected report genpartialreport int reported  linkedhashmap partoftasks  int totalsize
string longetop   longestop partoftasks values   iterator
boolean first   true
stringbuffer sb   new stringbuffer
sb append tabletitle longetop
sb append newline
int linenum   0
for  iterator it   partoftasks values   iterator    it hasnext
taskstats stat    taskstats  it next
if   first
sb append newline
first   false
string line   taskreportline longetop stat
linenum
if  partoftasks size  >2    linenum%2  0
line   line replaceall
sb append line
string reptxt    reported  0 ?     sb tostring
return new report reptxt partoftasks size   reported totalsize