package org apache lucene search
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene index indexreader
import java util bitset
import java util weakhashmap
import java util map
import java io ioexception
/**
* wraps another filter's result and caches it.  the purpose is to allow
* filters to simply filter, and then wrap with this class to add caching.
*/
public class cachingwrapperfilter extends filter
protected filter filter
/**
* a transient filter cache.  to cache filters even when using {@link remotesearchable} use
* {@link remotecachingwrapperfilter} instead.
*/
protected transient map cache
/**
* @param filter filter to cache results of
*/
public cachingwrapperfilter filter filter
this filter   filter
public bitset bits indexreader reader  throws ioexception
if  cache    null
cache   new weakhashmap
synchronized  cache        check cache
bitset cached    bitset  cache get reader
if  cached    null
return cached
final bitset bits   filter bits reader
synchronized  cache        update cache
cache put reader  bits
return bits
public string tostring
return   filter
public boolean equals object o
if    o instanceof cachingwrapperfilter   return false
return this filter equals   cachingwrapperfilter o  filter
public int hashcode
return filter hashcode   ^ 0x1117bf25