package org apache lucene demo
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene analysis standard standardanalyzer
import org apache lucene document document
import org apache lucene index indexreader
import org apache lucene index indexwriter
import org apache lucene index term
import org apache lucene index termenum
import java io file
import java util date
import java util arrays
/** indexer for html files. */
public class indexhtml
private indexhtml
private static boolean deleting   false 	     true during deletion pass
private static indexreader reader 		     existing index
private static indexwriter writer 		     new index being built
private static termenum uiditer 		     document id iterator
/** indexer for html files.*/
public static void main string argv
try
string index
boolean create   false
file root   null
string usage
if  argv length    0
system err println     usage
return
for  int i   0  i < argv length  i
if  argv equals      		     parse  index option
index   argv
else if  argv equals      	     parse  create option
create   true
else if  i    argv length 1
system err println     usage
return
else
root   new file argv
date start   new date
if   create   				     delete stale docs
deleting   true
indexdocs root  index  create
writer   new indexwriter index  new standardanalyzer    create
writer setmaxfieldlength 1000000
indexdocs root  index  create  		     add new docs
system out println
writer optimize
writer close
date end   new date
system out print end gettime     start gettime
system out println
catch  exception e
system out println     e getclass
e getmessage
/* walk directory hierarchy in uid order, while keeping uid iterator from
/* existing index in sync.  mismatches indicate one of: (a) old documents to
/* be deleted; (b) unchanged documents, to be left alone; or (c) new
/* documents, to be indexed.
*/
private static void indexdocs file file  string index  boolean create
throws exception
if   create   				     incrementally update
reader   indexreader open index  		     open existing index
uiditer   reader terms new term            init uid iterator
indexdocs file
if  deleting   				     delete rest of stale docs
while  uiditer term      null    uiditer term   field
system out println
htmldocument uid2url uiditer term   text
reader deletedocuments uiditer term
uiditer next
deleting   false
uiditer close   				     close uid iterator
reader close   				     close existing index
else					     don't have exisiting
indexdocs file
private static void indexdocs file file  throws exception
if  file isdirectory     			     if a directory
string files   file list   		     list its files
arrays sort files  			     sort the files
for  int i   0  i < files length  i   	     recursively index them
indexdocs new file file  files
else if  file getpath   endswith          index  html files
file getpath   endswith          index  htm files
file getpath   endswith          index  txt files
if  uiditer    null
string uid   htmldocument uid file  	     construct uid for doc
while  uiditer term      null    uiditer term   field
uiditer term   text   compareto uid  < 0
if  deleting   			     delete stale docs
system out println
htmldocument uid2url uiditer term   text
reader deletedocuments uiditer term
uiditer next
if  uiditer term      null    uiditer term   field
uiditer term   text   compareto uid     0
uiditer next   			     keep matching docs
else if   deleting   			     add new docs
document doc   htmldocument document file
system out println     doc get
writer adddocument doc
else  					     creating a new index
document doc   htmldocument document file
system out println     doc get
writer adddocument doc  		     add docs unconditionally