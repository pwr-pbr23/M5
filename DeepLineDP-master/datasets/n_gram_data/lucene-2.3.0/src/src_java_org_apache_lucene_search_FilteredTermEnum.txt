package org apache lucene search
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
import org apache lucene index term
import org apache lucene index termenum
/** abstract class for enumerating a subset of all terms.
<p>term enumerations are always ordered by term.compareto().  each term in
the enumeration is greater than all that precede it.  */
public abstract class filteredtermenum extends termenum
private term currentterm   null
private termenum actualenum   null
public filteredtermenum
/** equality compare on the term */
protected abstract boolean termcompare term term
/** equality measure on the term */
public abstract float difference
/** indicates the end of the enumeration has been reached */
protected abstract boolean endenum
protected void setenum termenum actualenum  throws ioexception
this actualenum   actualenum
// find the first term that matches
term term   actualenum term
if  term    null    termcompare term
currentterm   term
else next
/**
* returns the docfreq of the current term in the enumeration.
* returns -1 if no term matches or all terms have been enumerated.
*/
public int docfreq
if  actualenum    null  return  1
return actualenum docfreq
/** increments the enumeration to the next element.  true if one exists. */
public boolean next   throws ioexception
if  actualenum    null  return false     the actual enumerator is not initialized
currentterm   null
while  currentterm    null
if  endenum    return false
if  actualenum next
term term   actualenum term
if  termcompare term
currentterm   term
return true
else return false
currentterm   null
return false
/** returns the current term in the enumeration.
* returns null if no term matches or all terms have been enumerated. */
public term term
return currentterm
/** closes the enumeration to further activity, freeing resources.  */
public void close   throws ioexception
actualenum close
currentterm   null
actualenum   null