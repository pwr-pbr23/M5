package org apache lucene queryparser surround query
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java util list
import java util arraylist
import java util iterator
public abstract class composedquery extends srndquery
public composedquery list qs  boolean operatorinfix  string opname
recompose qs
this operatorinfix   operatorinfix
this opname   opname
protected void recompose list queries
if  queries size   < 2  throw new assertionerror
this queries   queries
private string opname
public string getoperatorname    return opname
private list queries
public iterator getsubqueriesiterator    return queries listiterator
public int getnrsubqueries    return queries size
public srndquery getsubquery int qn   return  srndquery  queries get qn
private boolean operatorinfix
public boolean isoperatorinfix     return operatorinfix       else prefix operator
public list makelucenesubqueriesfield string fn  basicqueryfactory qf
arraylist lucenesubqueries   new arraylist
iterator sqi   getsubqueriesiterator
while  sqi hasnext
lucenesubqueries add    srndquery  sqi next    makelucenequeryfield fn  qf
return lucenesubqueries
public string tostring
stringbuffer r   new stringbuffer
if  isoperatorinfix
infixtostring r
else
prefixtostring r
weighttostring r
return r tostring
/* override for different spacing */
protected string getprefixseparator     return
protected string getbracketopen     return
protected string getbracketclose     return
protected void infixtostring stringbuffer r
/* brackets are possibly redundant in the result. */
iterator sqi   getsubqueriesiterator
r append getbracketopen
if  sqi hasnext
r append sqi next   tostring
while  sqi hasnext
r append
r append getoperatorname        infix operator
r append
r append sqi next   tostring
r append getbracketclose
protected void prefixtostring stringbuffer r
iterator sqi   getsubqueriesiterator
r append getoperatorname        prefix operator
r append getbracketopen
if  sqi hasnext
r append sqi next   tostring
while  sqi hasnext
r append getprefixseparator
r append sqi next   tostring
r append getbracketclose
public boolean isfieldssubqueryacceptable
/* at least one subquery should be acceptable */
iterator sqi   getsubqueriesiterator
while  sqi hasnext
if    srndquery  sqi next    isfieldssubqueryacceptable
return true
return false