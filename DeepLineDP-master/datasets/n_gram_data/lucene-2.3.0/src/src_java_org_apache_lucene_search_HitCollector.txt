package org apache lucene search
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/** lower-level search api.
* <br>hitcollectors are primarily meant to be used to implement queries,
* sorting and filtering.
* @see searcher#search(query,hitcollector)
* @version $id$
*/
public abstract class hitcollector
/** called once for every document matching a query, with the document
* number and its raw score.
*
* <p>if, for example, an application wished to collect all of the hits for a
* query in a bitset, then it might:<pre>
*   searcher searcher = new indexsearcher(indexreader);
*   final bitset bits = new bitset(indexreader.maxdoc());
*   searcher.search(query, new hitcollector() {
*       public void collect(int doc, float score) {
*         bits.set(doc);
*       }
*     });
* </pre>
*
* <p>note: this is called in an inner search loop.  for good search
* performance, implementations of this method should not call
* {@link searcher#doc(int)} or
* {@link org.apache.lucene.index.indexreader#document(int)} on every
* document number encountered.  doing so can slow searches by an order
* of magnitude or more.
* <p>note: the <code>score</code> passed to this method is a raw score.
* in other words, the score will not necessarily be a float whose value is
* between 0 and 1.
*/
public abstract void collect int doc  float score