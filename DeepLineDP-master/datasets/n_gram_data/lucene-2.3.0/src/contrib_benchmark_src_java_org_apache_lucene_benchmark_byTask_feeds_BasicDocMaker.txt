package org apache lucene benchmark bytask feeds
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene benchmark bytask utils config
import org apache lucene benchmark bytask utils format
import org apache lucene document datetools
import org apache lucene document document
import org apache lucene document field
import java io file
import java io unsupportedencodingexception
import java util arraylist
import java util arrays
import java util iterator
/**
* create documents for the test.
* maintains counters of chars etc. so that sub-classes just need to
* provide textual content, and the create-by-size is handled here.
*
* <p/>
* config params (default is in caps):
* doc.stored=true|false<br/>
* doc.tokenized=true|false<br/>
* doc.term.vector=true|false<br/>
* doc.term.vector.positions=true|false<br/>
* doc.term.vector.offsets=true|false<br/>
* doc.store.body.bytes=true|false //store the body contents raw utf-8 bytes as a field<br/>
*/
public abstract class basicdocmaker implements docmaker
private int numdocscreated   0
private boolean storebytes   false
protected boolean forever
private static class leftover
private docdata docdata
private int cnt
// leftovers are thread local, because it is unsafe to share residues between threads
private threadlocal leftovr   new threadlocal
public static final string body_field
public static final string title_field
public static final string date_field
public static final string id_field
public static final string bytes_field
public static final string name_field
private long numbytes   0
private long numuniquebytes   0
protected config config
protected field store storeval   field store no
protected field index indexval   field index tokenized
protected field termvector termvecval   field termvector no
private synchronized int incrnumdocscreated
return numdocscreated
/**
* return the data of the next document.
* all current implementations can create docs forever.
* when the input data is exhausted, input files are iterated.
* this re-iteration can be avoided by setting doc.maker.forever to false (default is true).
* @return data of the next document.
* @exception if cannot create the next doc data
* @exception nomoredataexception if data is exhausted (and 'forever' set to false).
*/
protected abstract docdata getnextdocdata   throws nomoredataexception  exception
/*
*  (non-javadoc)
* @see org.apache.lucene.benchmark.bytask.feeds.docmaker#makedocument()
*/
public document makedocument    throws exception
resetleftovers
docdata docdata   getnextdocdata
document doc   createdocument docdata 0  1
return doc
// create a doc
// use only part of the body, modify it to keep the rest (or use all if size==0).
// reset the docdata properties so they are not added more than once.
private document createdocument docdata docdata  int size  int cnt  throws unsupportedencodingexception
int docid   incrnumdocscreated
document doc   new document
doc add new field id_field    docid  storeval  indexval  termvecval
if  docdata getname    null
string name    cnt<0 ? docdata getname     docdata getname     cnt
doc add new field name_field  name  storeval  indexval  termvecval
if  docdata getdate    null
string datestr   datetools datetostring docdata getdate    datetools resolution second
doc add new field date_field  datestr  storeval  indexval  termvecval
if  docdata gettitle    null
doc add new field title_field  docdata gettitle    storeval  indexval  termvecval
if  docdata getbody    null    docdata getbody   length  >0
string bdy
if  size< 0    size> docdata getbody   length
bdy   docdata getbody       use all
docdata setbody         nothing left
else
// attempt not to break words - if whitespace found within next 20 chars...
for  int n size 1  n<size 20    n<docdata getbody   length    n
if  character iswhitespace docdata getbody   charat n
size   n
break
bdy   docdata getbody   substring 0 size      use part
docdata setbody docdata getbody   substring size       some left
doc add new field body_field  bdy  storeval  indexval  termvecval
if  storebytes    true
doc add new field bytes_field  bdy getbytes     field store yes
if  docdata getprops    null
for  iterator it   docdata getprops   keyset   iterator    it hasnext
string key    string  it next
string val    string  docdata getprops   get key
doc add new field key  val  storeval  indexval  termvecval
docdata setprops null
//system.out.println("============== created doc "+numdocscreated+" :\n"+doc+"\n==========");
return doc
/*
*  (non-javadoc)
* @see org.apache.lucene.benchmark.bytask.feeds.docmaker#makedocument(int)
*/
public document makedocument int size  throws exception
leftover lvr    leftover  leftovr get
if  lvr  null    lvr docdata  null    lvr docdata getbody    null    lvr docdata getbody   length    0
resetleftovers
docdata dd    lvr  null ? getnextdocdata     lvr docdata
int cnt    lvr  null ? 0   lvr cnt
while  dd getbody    null    dd getbody   length  <size
docdata dd2   dd
dd   getnextdocdata
cnt   0
dd setbody dd2 getbody     dd getbody
document doc   createdocument dd size cnt
if  dd getbody    null    dd getbody   length    0
resetleftovers
else
if  lvr    null
lvr   new leftover
leftovr set lvr
lvr docdata   dd
lvr cnt     cnt
return doc
private void resetleftovers
leftovr set null
/* (non-javadoc)
* @see docmaker#setconfig(java.util.properties)
*/
public void setconfig config config
this config   config
boolean stored   config get   false
boolean tokenized   config get   true
boolean termvec   config get   false
storeval    stored ? field store yes   field store no
indexval    tokenized ? field index tokenized   field index un_tokenized
boolean termvecpositions   config get   false
boolean termvecoffsets   config get   false
if  termvecpositions    termvecoffsets
termvecval   field termvector with_positions_offsets
else if  termvecpositions
termvecval   field termvector with_positions
else if  termvecoffsets
termvecval   field termvector with_offsets
else if  termvec
termvecval   field termvector yes
else
termvecval   field termvector no
storebytes   config get    false
forever   config get   true
/*
*  (non-javadoc)
* @see docmaker#resetiinputs()
*/
public synchronized void resetinputs
printdocstatistics
numbytes   0
numdocscreated   0
resetleftovers
/*
*  (non-javadoc)
* @see org.apache.lucene.benchmark.bytask.feeds.docmaker#numuniquebytes()
*/
public long numuniquebytes
return numuniquebytes
/*
*  (non-javadoc)
* @see docmaker#getcount()
*/
public synchronized int getcount
return numdocscreated
/*
*  (non-javadoc)
* @see docmaker#getbytecount()
*/
public synchronized long getbytecount
return numbytes
protected void adduniquebytes  long n
numuniquebytes    n
protected synchronized void addbytes  long n
numbytes    n
/*
*  (non-javadoc)
* @see org.apache.lucene.benchmark.bytask.feeds.docmaker#printdocstatistics()
*/
private int lastprintednumuniquetexts   0
private long lastprintednumuniquebytes   0
private int printnum   0
private htmlparser htmlparser
public void printdocstatistics
boolean print   false
string col
stringbuffer sb   new stringbuffer
string newline   system getproperty
sb append    append format simplename getclass     append    append printnum  append    append newline
int nut   numuniquetexts
if  nut > lastprintednumuniquetexts
print   true
sb append    append format format 0 nut col   append newline
lastprintednumuniquetexts   nut
long nub   numuniquebytes
if  nub > lastprintednumuniquebytes
print   true
sb append    append format format 0 nub col   append newline
lastprintednumuniquebytes   nub
if  getcount  >0
print   true
sb append    append format format 0 getcount   col   append newline
sb append    append format format 0 getbytecount   col   append newline
if  print
system out println sb append newline  tostring
printnum
protected void collectfiles file f  arraylist inputfiles
//system.out.println("collect: "+f.getabsolutepath());
if   f canread
return
if  f isdirectory
string files   f list
arrays sort files
for  int i   0  i < files length  i
collectfiles new file f files  inputfiles
return
inputfiles add f
adduniquebytes f length
/* (non-javadoc)
* @see org.apache.lucene.benchmark.bytask.feeds.docmaker#sethtmlparser(org.apache.lucene.benchmark.bytask.feeds.htmlparser)
*/
public void sethtmlparser htmlparser htmlparser
this htmlparser   htmlparser
/*
*  (non-javadoc)
* @see org.apache.lucene.benchmark.bytask.feeds.docmaker#gethtmlparser()
*/
public htmlparser gethtmlparser
return htmlparser