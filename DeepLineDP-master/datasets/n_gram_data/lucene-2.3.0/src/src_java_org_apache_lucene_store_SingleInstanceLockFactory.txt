package org apache lucene store
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
import java util hashset
/**
* implements {@link lockfactory} for a single in-process instance,
* meaning all locking will take place through this one instance.
* only use this {@link lockfactory} when you are certain all
* indexreaders and indexwriters for a given index are running
* against a single shared in-process directory instance.  this is
* currently the default locking for ramdirectory.
*
* @see lockfactory
*/
public class singleinstancelockfactory extends lockfactory
private hashset locks   new hashset
public lock makelock string lockname
// we do not use the lockprefix at all, because the private
// hashset instance effectively scopes the locking to this
// single directory instance.
return new singleinstancelock locks  lockname
public void clearlock string lockname  throws ioexception
synchronized locks
if  locks contains lockname
locks remove lockname
class singleinstancelock extends lock
string lockname
private hashset locks
public singleinstancelock hashset locks  string lockname
this locks   locks
this lockname   lockname
public boolean obtain   throws ioexception
synchronized locks
return locks add lockname
public void release
synchronized locks
locks remove lockname
public boolean islocked
synchronized locks
return locks contains lockname
public string tostring
return     lockname