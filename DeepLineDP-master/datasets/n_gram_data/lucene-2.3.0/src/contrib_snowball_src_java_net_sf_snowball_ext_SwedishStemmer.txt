// this file was generated automatically by the snowball to java compiler
package net sf snowball ext
import net sf snowball snowballprogram
import net sf snowball among
/**
* generated class implementing code defined by a snowball script.
*/
public class swedishstemmer extends snowballprogram
private among a_0
new among       1  1     this
new among      0  1     this
new among      0  1     this
new among      2  1     this
new among      0  1     this
new among       1  1     this
new among       1  1     this
new among      6  1     this
new among      6  1     this
new among      6  1     this
new among      6  1     this
new among      6  1     this
new among       1  1     this
new among      12  1     this
new among      12  1     this
new among      12  1     this
new among       1  1     this
new among       1  1     this
new among       1  1     this
new among      18  1     this
new among       1  1     this
new among       1  2     this
new among      21  1     this
new among      22  1     this
new among      22  1     this
new among      22  1     this
new among      21  1     this
new among      26  1     this
new among      26  1     this
new among      21  1     this
new among      29  1     this
new among      29  1     this
new among      21  1     this
new among       1  1     this
new among       1  1     this
new among       1  1     this
new among       1  1     this
private among a_1
new among       1   1     this
new among       1   1     this
new among       1   1     this
new among       1   1     this
new among       1   1     this
new among       1   1     this
new among       1   1     this
private among a_2
new among       1  1     this
new among      0  1     this
new among       1  1     this
new among       1  3     this
new among       1  2     this
private static final char g_v    17  65  16  1  0  0  0  0  0  0  0  0  0  0  0  0  24  0  32
private static final char g_s_ending    119  127  149
private int i_p1
private void copy_from swedishstemmer other
i_p1   other i_p1
super copy_from other
private boolean r_mark_regions
int v_1
// (, line 26
i_p1   limit
// goto, line 30
golab0  while true
v_1   cursor
lab1  do
if    in_grouping g_v  97  246
break lab1
cursor   v_1
break golab0
while  false
cursor   v_1
if  cursor >  limit
return false
cursor
// gopast, line 30
golab2  while true
lab3  do
if    out_grouping g_v  97  246
break lab3
break golab2
while  false
if  cursor >  limit
return false
cursor
// setmark p1, line 30
i_p1   cursor
// try, line 31
lab4  do
// (, line 31
if    i_p1 < 3
break lab4
i_p1   3
while  false
return true
private boolean r_main_suffix
int among_var
int v_1
int v_2
// (, line 36
// setlimit, line 37
v_1   limit   cursor
// tomark, line 37
if  cursor < i_p1
return false
cursor   i_p1
v_2   limit_backward
limit_backward   cursor
cursor   limit   v_1
// (, line 37
// [, line 37
ket   cursor
// substring, line 37
among_var   find_among_b a_0  37
if  among_var    0
limit_backward   v_2
return false
// ], line 37
bra   cursor
limit_backward   v_2
switch among_var
case 0
return false
case 1
// (, line 44
// delete, line 44
slice_del
break
case 2
// (, line 46
if    in_grouping_b g_s_ending  98  121
return false
// delete, line 46
slice_del
break
return true
private boolean r_consonant_pair
int v_1
int v_2
int v_3
// setlimit, line 50
v_1   limit   cursor
// tomark, line 50
if  cursor < i_p1
return false
cursor   i_p1
v_2   limit_backward
limit_backward   cursor
cursor   limit   v_1
// (, line 50
// and, line 52
v_3   limit   cursor
// among, line 51
if  find_among_b a_1  7     0
limit_backward   v_2
return false
cursor   limit   v_3
// (, line 52
// [, line 52
ket   cursor
// next, line 52
if  cursor <  limit_backward
limit_backward   v_2
return false
cursor
// ], line 52
bra   cursor
// delete, line 52
slice_del
limit_backward   v_2
return true
private boolean r_other_suffix
int among_var
int v_1
int v_2
// setlimit, line 55
v_1   limit   cursor
// tomark, line 55
if  cursor < i_p1
return false
cursor   i_p1
v_2   limit_backward
limit_backward   cursor
cursor   limit   v_1
// (, line 55
// [, line 56
ket   cursor
// substring, line 56
among_var   find_among_b a_2  5
if  among_var    0
limit_backward   v_2
return false
// ], line 56
bra   cursor
switch among_var
case 0
limit_backward   v_2
return false
case 1
// (, line 57
// delete, line 57
slice_del
break
case 2
// (, line 58
// <-, line 58
slice_from
break
case 3
// (, line 59
// <-, line 59
slice_from
break
limit_backward   v_2
return true
public boolean stem
int v_1
int v_2
int v_3
int v_4
// (, line 64
// do, line 66
v_1   cursor
lab0  do
// call mark_regions, line 66
if   r_mark_regions
break lab0
while  false
cursor   v_1
// backwards, line 67
limit_backward   cursor  cursor   limit
// (, line 67
// do, line 68
v_2   limit   cursor
lab1  do
// call main_suffix, line 68
if   r_main_suffix
break lab1
while  false
cursor   limit   v_2
// do, line 69
v_3   limit   cursor
lab2  do
// call consonant_pair, line 69
if   r_consonant_pair
break lab2
while  false
cursor   limit   v_3
// do, line 70
v_4   limit   cursor
lab3  do
// call other_suffix, line 70
if   r_other_suffix
break lab3
while  false
cursor   limit   v_4
cursor   limit_backward             return true