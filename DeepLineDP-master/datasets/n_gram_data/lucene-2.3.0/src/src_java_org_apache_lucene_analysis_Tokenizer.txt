package org apache lucene analysis
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io reader
import java io ioexception
/** a tokenizer is a tokenstream whose input is a reader.
<p>
this is an abstract class.
<p>
note: subclasses must override at least one of {@link
#next()} or {@link #next(token)}.
<p>
note: subclasses overriding {@link #next(token)} must
call {@link token#clear()}.
*/
public abstract class tokenizer extends tokenstream
/** the text source for this tokenizer. */
protected reader input
/** construct a tokenizer with null input. */
protected tokenizer
/** construct a token stream processing the given input. */
protected tokenizer reader input
this input   input
/** by default, closes the input reader. */
public void close   throws ioexception
input close
/** expert: reset the tokenizer to a new reader.  typically, an
*  analyzer (in its reusabletokenstream method) will use
*  this to re-use a previously created tokenizer. */
public void reset reader input  throws ioexception
this input   input