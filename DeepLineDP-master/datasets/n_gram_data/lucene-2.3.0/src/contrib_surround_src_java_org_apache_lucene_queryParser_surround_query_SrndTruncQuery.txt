package org apache lucene queryparser surround query
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene index term
import org apache lucene index termenum
import org apache lucene index indexreader
import java io ioexception
import java util regex pattern
import java util regex matcher
public class srndtruncquery extends simpleterm
public srndtruncquery string truncated  char unlimited  char mask
super false      not quoted
this truncated   truncated
this unlimited   unlimited
this mask   mask
truncatedtoprefixandpattern
private final string truncated
private final char unlimited
private final char mask
private string prefix
private pattern pattern
public string gettruncated    return truncated
public string tostringunquoted    return gettruncated
protected boolean matchingchar char c
return  c    unlimited      c    mask
protected void appendregexpforchar char c  stringbuffer re
if  c    unlimited
re append
else if  c    mask
re append
else
re append c
protected void truncatedtoprefixandpattern
int i   0
while   i < truncated length       matchingchar truncated charat i
i
prefix   truncated substring 0  i
stringbuffer re   new stringbuffer
while  i < truncated length
appendregexpforchar truncated charat i   re
i
pattern   pattern compile re tostring
public void visitmatchingterms
indexreader reader
string fieldname
matchingtermvisitor mtv  throws ioexception
boolean expanded   false
int prefixlength   prefix length
termenum enumerator   reader terms new term fieldname  prefix
matcher matcher   pattern matcher
try
do
term term   enumerator term
if  term    null
string text   term text
if     text startswith prefix         term field   equals fieldname
break
else
matcher reset  text substring prefixlength
if  matcher matches
mtv visitmatchingterm term
expanded   true
while  enumerator next
finally
enumerator close
matcher reset
if    expanded
system out println     fieldname       tostring