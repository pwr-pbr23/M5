package org apache lucene benchmark bytask stats
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java util arraylist
import java util list
import org apache lucene benchmark bytask tasks perftask
import org apache lucene benchmark bytask utils config
/**
* test run data points collected as the test proceeds.
*/
public class points
private config config
// stat points ordered by their start time.
// for now we collect points as taskstats objects.
// later might optimize to collect only native data.
private arraylist points   new arraylist
private int nexttaskrunnum   0
/**
* create a points statistics object.
*/
public points  config config
this config   config
/**
* return the current task stats.
* the actual task stats are returned, so caller should not modify this task stats.
* @return current {@link taskstats}.
*/
public list taskstats
return points
/**
* mark that a task is starting.
* create a task stats for it and store it as a point.
* @param task the starting task.
* @return the new task stats created for the starting task.
*/
public synchronized taskstats marktaskstart  perftask task  int round
taskstats stats   new taskstats task  nexttaskrunnum    round
points add stats
return stats
// return next task num
private synchronized int nexttaskrunnum
return nexttaskrunnum
/**
* mark the end of a task
*/
public synchronized void marktaskend  taskstats stats  int count
int numparalleltasks   nexttaskrunnum   1   stats gettaskrunnum
// note: if the stats were cleared, might be that this stats object is
// no longer in points, but this is just ok.
stats markend numparalleltasks  count
/**
* clear all data, prepare for more tests.
*/
public void cleardata
points clear