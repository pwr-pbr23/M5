package org apache lucene queryparser surround query
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/*
spannearclausefactory:
operations:
- create for a field name and an indexreader.
- add a weighted term
this should add a corresponding spantermquery, or
increase the weight of an existing one.
- add a weighted subquery spannearquery
- create a clause for spannearquery from the things added above.
for this, create an array of spanquery's from the added ones.
the clause normally is a spanorquery over the added subquery spannearquery
the spantermquery's for the added term's
*/
/* when  it is necessary to suppress double subqueries as much as possible:
hashcode() and equals() on unweighted spanquery are needed (possibly via getterms(),
the terms are individually hashable).
idem spannearquery: hash on the subqueries and the slop.
evt. merge spannearquery's by adding the weights of the corresponding subqueries.
*/
/* to be determined:
are spanquery weights handled correctly during search by lucene?
should the resulting spanorquery be sorted?
could other spanqueries be added for use in this factory:
- spanorquery: in principle yes, but it only has access to it's terms
via getterms(); are the corresponding weights available?
- spanfirstquery: treat similar to subquery spannearquery. (ok?)
- spannotquery: treat similar to subquery spannearquery. (ok?)
*/
import java util hashmap
import java util iterator
import java util comparator
import java util arrays
import java io ioexception
import org apache lucene index indexreader
import org apache lucene index term
import org apache lucene index termenum
import org apache lucene search query
import org apache lucene search spans spanquery
import org apache lucene search spans spannearquery
import org apache lucene search spans spanorquery
import org apache lucene search spans spantermquery
public class spannearclausefactory
public spannearclausefactory indexreader reader  string fieldname  basicqueryfactory qf
this reader   reader
this fieldname   fieldname
this weightbyspanquery   new hashmap
this qf   qf
private indexreader reader
private string fieldname
private hashmap weightbyspanquery
private basicqueryfactory qf
public indexreader getindexreader    return reader
public string getfieldname    return fieldname
public basicqueryfactory getbasicqueryfactory    return qf
public termenum gettermenum string termtext  throws ioexception
return getindexreader   terms new term getfieldname    termtext
public int size    return weightbyspanquery size
public void clear    weightbyspanquery clear
protected void addspanqueryweighted spanquery sq  float weight
float w    float  weightbyspanquery get sq
if  w    null
w   new float w floatvalue     weight
else
w   new float weight
weightbyspanquery put sq  w
public void addtermweighted term t  float weight  throws ioexception
spantermquery stq   qf newspantermquery t
/* checkme: wrap in hashable...? */
addspanqueryweighted stq  weight
public void addspannearquery query q
if  q    srndquery theemptylcnquery
return
if     q instanceof spannearquery
throw new assertionerror     q tostring getfieldname
/* checkme: wrap in hashable...? */
addspanqueryweighted  spannearquery q  q getboost
public spanquery makespannearclause
spanquery  spanqueries   new spanquery
iterator sqi   weightbyspanquery keyset   iterator
int i   0
while  sqi hasnext
spanquery sq    spanquery  sqi next
sq setboost   float weightbyspanquery get sq   floatvalue
spanqueries   sq
if  spanqueries length    1
return spanqueries
else
return new spanorquery spanqueries