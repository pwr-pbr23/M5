package org apache lucene search
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene index indexreader
import java io ioexception
import java util bitset
import java util set
/**
* a query that wraps a filter and simply returns a constant score equal to the
* query boost for every document in the filter.
*
*
* @version $id$
*/
public class constantscorequery extends query
protected final filter filter
public constantscorequery filter filter
this filter filter
/** returns the encapsulated filter */
public filter getfilter
return filter
public query rewrite indexreader reader  throws ioexception
return this
public void extractterms set terms
// ok to not add any terms when used for multisearcher,
// but may not be ok for highlighting
protected class constantweight implements weight
private similarity similarity
private float querynorm
private float queryweight
public constantweight searcher searcher
this similarity   getsimilarity searcher
public query getquery
return constantscorequery this
public float getvalue
return queryweight
public float sumofsquaredweights   throws ioexception
queryweight   getboost
return queryweight   queryweight
public void normalize float norm
this querynorm   norm
queryweight    this querynorm
public scorer scorer indexreader reader  throws ioexception
return new constantscorer similarity  reader  this
public explanation explain indexreader reader  int doc  throws ioexception
constantscorer cs    constantscorer scorer reader
boolean exists   cs bits get doc
complexexplanation result   new complexexplanation
if  exists
result setdescription     filter
result setvalue queryweight
result setmatch boolean true
result adddetail new explanation getboost
result adddetail new explanation querynorm
else
result setdescription     filter
doc
result setvalue 0
result setmatch boolean false
return result
protected class constantscorer extends scorer
final bitset bits
final float thescore
int doc  1
public constantscorer similarity similarity  indexreader reader  weight w  throws ioexception
super similarity
thescore   w getvalue
bits   filter bits reader
public boolean next   throws ioexception
doc   bits nextsetbit doc 1
return doc >  0
public int doc
return doc
public float score   throws ioexception
return thescore
public boolean skipto int target  throws ioexception
doc   bits nextsetbit target       requires jdk 1 4
return doc >  0
public explanation explain int doc  throws ioexception
throw new unsupportedoperationexception
protected weight createweight searcher searcher
return new constantscorequery constantweight searcher
/** prints a user-readable version of this query. */
public string tostring string field
return     filter tostring
getboost    1 0 ?         getboost
/** returns true if <code>o</code> is equal to this. */
public boolean equals object o
if  this    o  return true
if    o instanceof constantscorequery   return false
constantscorequery other    constantscorequery o
return this getboost    other getboost      filter equals other filter
/** returns a hash code value for this object. */
public int hashcode
// simple add is ok since no existing filter hashcode has a float component.
return filter hashcode     float floattointbits getboost