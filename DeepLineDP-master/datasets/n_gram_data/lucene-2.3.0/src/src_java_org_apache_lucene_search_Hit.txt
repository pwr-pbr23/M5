/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache lucene search
import java io ioexception
import org apache lucene document document
import org apache lucene index corruptindexexception
/**
* wrapper used by {@link hititerator} to provide a lazily loaded hit
* from {@link hits}.
*
* @author jeremy rayner
*/
public class hit implements java io serializable
private document doc   null
private boolean resolved   false
private hits hits   null
private int hitnumber
/**
* constructed from {@link hititerator}
* @param hits hits returned from a search
* @param hitnumber hit index in hits
*/
hit hits hits  int hitnumber
this hits   hits
this hitnumber   hitnumber
/**
* returns document for this hit.
*
* @see hits#doc(int)
* @throws corruptindexexception if the index is corrupt
* @throws ioexception if there is a low-level io error
*/
public document getdocument   throws corruptindexexception  ioexception
if   resolved  fetchthehit
return doc
/**
* returns score for this hit.
*
* @see hits#score(int)
*/
public float getscore   throws ioexception
return hits score hitnumber
/**
* returns id for this hit.
*
* @see hits#id(int)
*/
public int getid   throws ioexception
return hits id hitnumber
private void fetchthehit   throws corruptindexexception  ioexception
doc   hits doc hitnumber
resolved   true
// provide some of the document style interface (the simple stuff)
/**
* returns the boost factor for this hit on any field of the underlying document.
*
* @see document#getboost()
* @throws corruptindexexception if the index is corrupt
* @throws ioexception if there is a low-level io error
*/
public float getboost   throws corruptindexexception  ioexception
return getdocument   getboost
/**
* returns the string value of the field with the given name if any exist in
* this document, or null.  if multiple fields exist with this name, this
* method returns the first value added. if only binary fields with this name
* exist, returns null.
*
* @see document#get(string)
* @throws corruptindexexception if the index is corrupt
* @throws ioexception if there is a low-level io error
*/
public string get string name  throws corruptindexexception  ioexception
return getdocument   get name
/**
* prints the parameters to be used to discover the promised result.
*/
public string tostring
stringbuffer buffer   new stringbuffer
buffer append
buffer append hits tostring
buffer append
buffer append hitnumber
buffer append
if  resolved
buffer append
else
buffer append
buffer append
return buffer tostring