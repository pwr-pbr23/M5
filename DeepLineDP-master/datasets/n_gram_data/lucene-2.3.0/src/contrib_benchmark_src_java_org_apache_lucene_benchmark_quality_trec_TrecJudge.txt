/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache lucene benchmark quality trec
import java io bufferedreader
import java io ioexception
import java io printwriter
import java util arraylist
import java util hashmap
import java util iterator
import java util stringtokenizer
import org apache lucene benchmark quality judge
import org apache lucene benchmark quality qualityquery
/**
* judge if given document is relevant to given quality query, based on trec format for judgements.
*/
public class trecjudge implements judge
hashmap judgements
/**
* constructor from a reader.
* <p>
* expected input format:
* <pre>
*     qnum  0   doc-name     is-relevant
* </pre>
* two sample lines:
* <pre>
*     19    0   doc303       1
*     19    0   doc7295      0
* </pre>
* @param reader where judgments are read from.
* @throws ioexception
*/
public trecjudge  bufferedreader reader  throws ioexception
judgements   new hashmap
qreljudgement curr   null
string zero
string line
try
while  null   line reader readline
line   line trim
if  line length    0       line charat 0
continue
stringtokenizer st   new stringtokenizer line
string queryid   st nexttoken
st nexttoken
string docname   st nexttoken
boolean relevant    zero equals st nexttoken
assert  st hasmoretokens       line   st nexttoken
if  relevant       only keep relevant docs
if  curr  null     curr queryid equals queryid
curr    qreljudgement judgements get queryid
if  curr  null
curr   new qreljudgement queryid
judgements put queryid curr
curr addrelevanddoc docname
finally
reader close
// inherit javadocs
public boolean isrelevant string docname  qualityquery query
qreljudgement qrj    qreljudgement  judgements get query getqueryid
return qrj  null    qrj isrelevant docname
/** single judgement of a trec quality query */
private static class qreljudgement
private string queryid
private hashmap relevantdocs
qreljudgement string queryid
this queryid   queryid
relevantdocs   new hashmap
public void addrelevanddoc string docname
relevantdocs put docname docname
boolean isrelevant string docname
return relevantdocs containskey docname
public int maxrecall
return relevantdocs size
// inherit javadocs
public boolean validatedata qualityquery qq  printwriter logger
hashmap missingqueries    hashmap  judgements clone
arraylist missingjudgements   new arraylist
for  int i 0  i<qq length  i
string id   qq getqueryid
if  missingqueries containskey id
missingqueries remove id
else
missingjudgements add id
boolean isvalid   true
if  missingjudgements size  >0
isvalid   false
if  logger  null
logger println   missingjudgements size
for  int i 0  i<missingjudgements size    i
logger println    string missingjudgements get i
if  missingqueries size  >0
isvalid   false
if  logger  null
logger println   missingqueries size
for  iterator it   missingqueries keyset   iterator    it hasnext
string id    string  it next
logger println   id
return isvalid
// inherit javadocs
public int maxrecall qualityquery query
qreljudgement qrj    qreljudgement  judgements get query getqueryid
if  qrj  null
return qrj maxrecall
return 0