package org apache lucene index
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene store directory
import org apache lucene store indexoutput
import org apache lucene util stringhelper
import java io ioexception
final class termvectorswriter
private indexoutput tvx   null  tvd   null  tvf   null
private fieldinfos fieldinfos
public termvectorswriter directory directory  string segment
fieldinfos fieldinfos
throws ioexception
// open files for termvector storage
tvx   directory createoutput segment       indexfilenames vectors_index_extension
tvx writeint termvectorsreader format_version
tvd   directory createoutput segment       indexfilenames vectors_documents_extension
tvd writeint termvectorsreader format_version
tvf   directory createoutput segment       indexfilenames vectors_fields_extension
tvf writeint termvectorsreader format_version
this fieldinfos   fieldinfos
/**
* add a complete document specified by all its term vectors. if document has no
* term vectors, add value for tvx.
*
* @param vectors
* @throws ioexception
*/
public final void addalldocvectors termfreqvector vectors
throws ioexception
tvx writelong tvd getfilepointer
if  vectors    null
final int numfields   vectors length
tvd writevint numfields
long fieldpointers   new long
for  int i 0  i<numfields  i
fieldpointers   tvf getfilepointer
final int fieldnumber   fieldinfos fieldnumber vectors getfield
// 1st pass: write field numbers to tvd
tvd writevint fieldnumber
final int numterms   vectors size
tvf writevint numterms
final termpositionvector tpvector
final byte bits
final boolean storepositions
final boolean storeoffsets
if  vectors instanceof termpositionvector
// may have positions & offsets
tpvector    termpositionvector  vectors
storepositions   tpvector size   > 0    tpvector gettermpositions 0     null
storeoffsets   tpvector size   > 0    tpvector getoffsets 0     null
bits    byte    storepositions ? termvectorsreader store_positions_with_termvector   0
storeoffsets ? termvectorsreader store_offset_with_termvector   0
else
tpvector   null
bits   0
storepositions   false
storeoffsets   false
tvf writevint bits
final string terms   vectors getterms
final int freqs   vectors gettermfrequencies
string lasttermtext
for  int j 0  j<numterms  j
final string termtext   terms
int start   stringhelper stringdifference lasttermtext  termtext
int length   termtext length     start
tvf writevint start            write shared prefix length
tvf writevint length             write delta length
tvf writechars termtext  start  length       write delta chars
lasttermtext   termtext
final int termfreq   freqs
tvf writevint termfreq
if  storepositions
final int positions   tpvector gettermpositions j
if  positions    null
throw new illegalstateexception
assert positions length    termfreq
// use delta encoding for positions
int lastposition   0
for int k 0 k<positions length k
final int position   positions
tvf writevint position lastposition
lastposition   position
if  storeoffsets
final termvectoroffsetinfo offsets   tpvector getoffsets j
if  offsets    null
throw new illegalstateexception
assert offsets length    termfreq
// use delta encoding for offsets
int lastendoffset   0
for int k 0 k<offsets length k
final int startoffset   offsets getstartoffset
final int endoffset   offsets getendoffset
tvf writevint startoffset lastendoffset
tvf writevint endoffset startoffset
lastendoffset   endoffset
// 2nd pass: write field pointers to tvd
long lastfieldpointer   0
for  int i 0  i<numfields  i
final long fieldpointer   fieldpointers
tvd writevlong fieldpointer lastfieldpointer
lastfieldpointer   fieldpointer
else
tvd writevint 0
/** close all streams. */
final void close   throws ioexception
// make an effort to close all streams we can but remember and re-throw
// the first exception encountered in this process
ioexception keep   null
if  tvx    null
try
tvx close
catch  ioexception e
if  keep    null  keep   e
if  tvd    null
try
tvd close
catch  ioexception e
if  keep    null  keep   e
if  tvf    null
try
tvf close
catch  ioexception e
if  keep    null  keep   e
if  keep    null  throw  ioexception  keep fillinstacktrace