package org apache lucene xmlparser
import java io reader
import javax xml parsers documentbuilder
import javax xml parsers documentbuilderfactory
import org w3c dom document
import org w3c dom element
import org w3c dom node
import org xml sax inputsource
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
public class domutils
public static element getchildbytagorfail element e  string name 	throws parserexception
element kid   getchildbytagname e  name
if  null    kid
throw new parserexception e gettagname      "   name
child element"
return kid
public static element getfirstchildorfail element e  throws parserexception
element kid   getfirstchildelement e
if  null    kid
throw new parserexception e gettagname
return kid
public static string getattributeorfail element e  string name 	throws parserexception
string v   e getattribute name
if  null    v
throw new parserexception e gettagname      "   name
attribute"
return v
public static string getattributewithinheritanceorfail element e 	string name  throws parserexception
string v   getattributewithinheritance e  name
if  null    v
throw new parserexception e gettagname      "   name
attribute"
return v
public static string getnonblanktextorfail element e  throws parserexception
string v   gettext e
if  null    v
v   v trim
if  null    v    0    v length
throw new parserexception e gettagname
return v
/* convenience method where there is only one child element of a given name */
public static element getchildbytagname element e  string name
for  node kid   e getfirstchild    kid    null  kid   kid getnextsibling
if   kid getnodetype    node element_node      name equals kid getnodename
return  element kid
return null
/**
* returns an attribute value from this node, or first parent node with this attribute defined
* @param element
* @param attributename
* @return a non-zero-length value if defined, otherwise null
*/
public static string getattributewithinheritance element element  string attributename
string result element getattribute attributename
if   result  null       equals result
node n element getparentnode
if  n  element    n  null
return null
if n instanceof element
element parent  element  n
return getattributewithinheritance parent attributename
return null    we reached the top level of the document without finding attribute
return result
/* convenience method where there is only one child element of a given name */
public static string getchildtextbytagname element e  string tagname
element child getchildbytagname e tagname
if child  null
return gettext child
return null
/* convenience method to append a new child with text*/
public static element insertchild element parent  string tagname  string text
element child   parent getownerdocument   createelement tagname
parent appendchild child
if text  null
child appendchild child getownerdocument   createtextnode text
return child
public static string getattribute element element  string attributename  string deflt
string result element getattribute attributename
if   result  null       equals result
return deflt
return result
public static float getattribute element element  string attributename  float deflt
string result element getattribute attributename
if   result  null       equals result
return deflt
return float parsefloat result
public static int getattribute element element  string attributename  int deflt
string result element getattribute attributename
if   result  null       equals result
return deflt
return integer parseint result
public static boolean getattribute element element  string attributename
boolean deflt
string result   element getattribute attributename
if   result    null        equals result
return deflt
return boolean getboolean result
/* returns text of node and all child nodes - without markup */
//mh changed to node from element 25/11/2005
public static string gettext node e
stringbuffer sb new stringbuffer
gettextbuffer e  sb
return sb tostring
public static element getfirstchildelement element element
for  node kid   element getfirstchild    kid    null  kid   kid
getnextsibling
if  kid getnodetype      node element_node
return  element  kid
return null
private static void gettextbuffer node e  stringbuffer sb
for  node kid   e getfirstchild    kid    null  kid   kid getnextsibling
switch kid getnodetype
case node text_node
sb append kid getnodevalue
break
case node element_node
gettextbuffer kid  sb
break
case node entity_reference_node
gettextbuffer kid  sb
break
/**
* helper method to parse an xml file into a dom tree, given a reader.
* @param is reader of the xml file to be parsed
* @return an org.w3c.dom.document object
*/
public static document loadxml reader is
documentbuilderfactory dbf   documentbuilderfactory newinstance
documentbuilder db   null
try
db   dbf newdocumentbuilder
catch  exception se
throw new runtimeexception    se
// step 3: parse the input file
org w3c dom document doc   null
try
doc   db parse new inputsource is
//doc = db.parse(is);
catch  exception se
throw new runtimeexception     se  se
return doc