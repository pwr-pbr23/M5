package org apache solr spelling
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java util arraylist
import java util arrays
import java util list
import org apache lucene analysis token
import org apache solr common params commonparams
import org apache solr common params modifiablesolrparams
import org apache solr common util namedlist
import org apache solr handler component querycomponent
import org apache solr handler component responsebuilder
import org apache solr handler component searchcomponent
import org apache solr request localsolrqueryrequest
import org apache solr response solrqueryresponse
import org slf4j logger
import org slf4j loggerfactory
public class spellcheckcollator
private static final logger log   loggerfactory getlogger spellcheckcollator class
public list<spellcheckcollation> collate spellingresult result  string originalquery  responsebuilder ultimateresponse
int maxcollations  int maxtries
list<spellcheckcollation> collations   new arraylist<spellcheckcollation>
querycomponent querycomponent   null
if  ultimateresponse components    null
for  searchcomponent sc   ultimateresponse components
if  sc instanceof querycomponent
querycomponent    querycomponent  sc
break
boolean verifycandidatewithquery   true
if  maxtries < 1
maxtries   1
verifycandidatewithquery   false
if  querycomponent    null    verifycandidatewithquery
log info
maxtries   1
verifycandidatewithquery   false
int tryno   0
int collno   0
possibilityiterator possibilityiter   new possibilityiterator result getsuggestions
while  tryno < maxtries    collno < maxcollations    possibilityiter hasnext
rankedspellpossibility possibility   possibilityiter next
string collationquerystr   getcollation originalquery  possibility getcorrections
int hits   0
if  verifycandidatewithquery
tryno
responsebuilder checkresponse   new responsebuilder
checkresponse setqparser ultimateresponse getqparser
checkresponse setfilters ultimateresponse getfilters
checkresponse setquerystring collationquerystr
checkresponse components   arrays aslist new searchcomponent   querycomponent
modifiablesolrparams params   new modifiablesolrparams ultimateresponse req getparams
params set commonparams q  collationquerystr
params remove commonparams start
params set commonparams fl
params set commonparams rows
// creating a request here... make sure to close it!
checkresponse req   new localsolrqueryrequest ultimateresponse req getcore    params
checkresponse rsp   new solrqueryresponse
try
querycomponent prepare checkresponse
querycomponent process checkresponse
hits    integer  checkresponse rsp gettolog   get
catch  exception e
log warn    e
finally
checkresponse req close
if  hits > 0     verifycandidatewithquery
collno
spellcheckcollation collation   new spellcheckcollation
collation setcollationquery collationquerystr
collation sethits hits
collation setinternalrank possibility getrank
namedlist<string> misspellingsandcorrections   new namedlist<string>
for  spellcheckcorrection corr   possibility getcorrections
misspellingsandcorrections add corr getoriginal   tostring    corr getcorrection
collation setmisspellingsandcorrections misspellingsandcorrections
collations add collation
if  log isdebugenabled
log debug     collationquerystr    verifycandidatewithquery ?      hits
return collations
private string getcollation string origquery
list<spellcheckcorrection> corrections
stringbuilder collation   new stringbuilder origquery
int offset   0
for  spellcheckcorrection correction   corrections
token tok   correction getoriginal
// we are replacing the query in order, but injected terms might cause
// illegal offsets due to previous replacements.
if  tok getpositionincrement      0
continue
collation replace tok startoffset     offset  tok endoffset     offset
correction getcorrection
offset    correction getcorrection   length
tok endoffset     tok startoffset
return collation tostring