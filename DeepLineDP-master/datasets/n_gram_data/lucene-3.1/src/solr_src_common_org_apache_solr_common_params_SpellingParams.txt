/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache solr common params
/**
* parameters used for spellchecking
*
* @since solr 1.3
*/
public interface spellingparams
public static final string spellcheck_prefix
/**
* the name of the dictionary to be used for giving the suggestion for a
* request. the value for this parameter is configured in solrconfig.xml
*/
public static final string spellcheck_dict   spellcheck_prefix
/**
* the count of suggestions needed for a given query.
* <p/>
* if this parameter is absent in the request then only one suggestion is
* returned. if it is more than one then a maximum of given suggestions are
* returned for each token in the query.
*/
public static final string spellcheck_count   spellcheck_prefix
/**
* when this parameter is set to true and the misspelled word exists in the
* user field, only words that occur more frequently in the solr field than
* the one given will be returned. the default value is false.
* <p/>
* <b>this is applicable only for dictionaries built from solr fields.</b>
*/
public static final string spellcheck_only_more_popular   spellcheck_prefix
/**
* whether to use the extended response format, which is more complicated but
* richer. returns the document frequency for each suggestion and returns one
* suggestion block for each term in the query string. default is false.
* <p/>
* <b>this is applicable only for dictionaries built from solr fields.</b>
*/
public static final string spellcheck_extended_results   spellcheck_prefix
/**
* use the value for this parameter as the query to spell check.
* <p/>
* this parameter is <b>optional</b>. if absent, then the q parameter is
* used.
*/
public static final string spellcheck_q   spellcheck_prefix
/**
* whether to build the index or not. optional and false by default.
*/
public static final string spellcheck_build   spellcheck_prefix
/**
* whether to reload the index. optional and false by default.
*/
public static final string spellcheck_reload   spellcheck_prefix
/**
* take the top suggestion for each token and create a new query from it
*/
public static final string spellcheck_collate   spellcheck_prefix
/**
* <p>
* the maximum number of collations to return.  default=1.  ignored if "spellcheck.collate" is false.
* </p>
*/
public static final string spellcheck_max_collations   spellcheck_prefix
/**
* <p>
* the maximum number of collations to test by querying against the index.
* when testing, the collation is substituted for the original query's "q" param.  any "qf"s are retained.
* if this is set to zero, does not test for hits before returning collations (returned collations may result in zero hits).
* default=0. ignored of "spellcheck.collate" is false.
* </p>
*/
public static final string spellcheck_max_collation_tries   spellcheck_prefix
/**
* <p>
* whether to use the extended results format for collations.
* includes "before>after" pairs to easily allow clients to generate messages like "no results for pork.  did you mean polk?"
* also indicates the # of hits each collation will return on re-query.  default=false, which retains 1.4-compatible output.
* </p>
*/
public static final string spellcheck_collate_extended_results   spellcheck_prefix
/**
* certain spelling implementations may allow for an accuracy setting.
*/
public static final string spellcheck_accuracy   spellcheck_prefix