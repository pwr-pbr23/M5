package org apache solr search function distance
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene index indexreader
import org apache lucene search searcher
import org apache lucene spatial distanceutils
import org apache solr common solrexception
import org apache solr search function multivaluesource
import org apache solr search function docvalues
import org apache solr search function valuesource
import java io ioexception
import java util map
/**
* calculate the haversine formula (distance) between any two points on a sphere
* takes in four value sources: (lata, lona); (latb, lonb).
* <p/>
* assumes the value sources are in radians unless
* <p/>
* see http://en.wikipedia.org/wiki/great-circle_distance and
* http://en.wikipedia.org/wiki/haversine_formula for the actual formula and
* also http://www.movable-type.co.uk/scripts/latlong.html
*/
public class haversinefunction extends valuesource
private multivaluesource p1
private multivaluesource p2
private boolean converttoradians   false
private double radius
public haversinefunction multivaluesource p1  multivaluesource p2  double radius
this p1  p2  radius  false
public haversinefunction multivaluesource p1  multivaluesource p2  double radius  boolean converttorads
this p1   p1
this p2   p2
if  p1 dimension      2    p2 dimension      2
throw new solrexception solrexception errorcode bad_request
this radius   radius
this converttoradians   converttorads
protected string name
return
/**
* @param doc  the doc to score
* @param p1dv
* @param p2dv
* @return the haversine distance formula
*/
protected double distance int doc  docvalues p1dv  docvalues p2dv
double p1d   new double
double p2d   new double
p1dv doubleval doc  p1d
p2dv doubleval doc  p2d
double x1
double y1
double x2
double y2
if  converttoradians
x1   p1d   distanceutils degrees_to_radians
y1   p1d   distanceutils degrees_to_radians
x2   p2d   distanceutils degrees_to_radians
y2   p2d   distanceutils degrees_to_radians
else
x1   p1d
y1   p1d
x2   p2d
y2   p2d
return distanceutils haversine x1  y1  x2  y2  radius
@override
public docvalues getvalues map context  indexreader reader  throws ioexception
final docvalues vals1   p1 getvalues context  reader
final docvalues vals2   p2 getvalues context  reader
return new docvalues
@override
public float floatval int doc
return  float  doubleval doc
@override
public int intval int doc
return  int  doubleval doc
@override
public long longval int doc
return  long  doubleval doc
@override
public double doubleval int doc
return distance doc  vals1  vals2
@override
public string strval int doc
return double tostring doubleval doc
@override
public string tostring int doc
stringbuilder sb   new stringbuilder
sb append name    append
sb append vals1 tostring doc   append    append vals2 tostring doc
sb append
return sb tostring
@override
public void createweight map context  searcher searcher  throws ioexception
p1 createweight context  searcher
p2 createweight context  searcher
@override
public boolean equals object o
if  this getclass      o getclass    return false
haversinefunction other    haversinefunction  o
return this name   equals other name
p1 equals other p1
p2 equals other p2     radius    other radius
@override
public int hashcode
int result
long temp
result   p1 hashcode
result   31   result   p2 hashcode
result   31   result   name   hashcode
temp   double doubletorawlongbits radius
result   31   result    int   temp ^  temp >>> 32
return result
@override
public string description
stringbuilder sb   new stringbuilder
sb append name    append
sb append p1  append    append p2
sb append
return sb tostring