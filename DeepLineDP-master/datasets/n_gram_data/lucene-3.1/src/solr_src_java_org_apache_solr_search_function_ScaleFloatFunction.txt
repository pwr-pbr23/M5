/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache solr search function
import org apache lucene index indexreader
import org apache lucene search searcher
import java io ioexception
import java util map
/**
* scales values to be between min and max.
* <p>this implementation currently traverses all of the source values to obtain
* their min and max.
* <p>this implementation currently cannot distinguish when documents have been
* deleted or documents that have no value, and 0.0 values will be used for
* these cases.  this means that if values are normally all greater than 0.0, one can
* still end up with 0.0 as the min value to map from.  in these cases, an
* appropriate map() function could be used as a workaround to change 0.0
* to a value in the real range.
*/
public class scalefloatfunction extends valuesource
protected final valuesource source
protected final float min
protected final float max
public scalefloatfunction valuesource source  float min  float max
this source   source
this min   min
this max   max
@override
public string description
return     source description         min       max
@override
public docvalues getvalues map context  indexreader reader  throws ioexception
final docvalues vals    source getvalues context  reader
int maxdoc   reader maxdoc
// this doesn't take into account deleted docs!
float minval 0 0f
float maxval 0 0f
if  maxdoc>0
minval   maxval   vals floatval 0
// traverse the complete set of values to get the min and the max.
// future alternatives include being able to ask a docvalues for min/max
// another memory-intensive option is to cache the values in
// a float[] on this first pass.
for  int i 0  i<maxdoc  i
float val   vals floatval i
if   float floattorawintbits val     0xff<<23      0xff<<23
// if the exponent in the float is all ones, then this is +inf, -inf or nan
// which don't make sense to factor into the scale function
continue
if  val < minval
minval   val
else if  val > maxval
maxval   val
final float scale    maxval minval  0  ? 0    max min   maxval minval
final float minsource   minval
final float maxsource   maxval
return new docvalues
@override
public float floatval int doc
return  vals floatval doc    minsource    scale   min
@override
public int intval int doc
return  int floatval doc
@override
public long longval int doc
return  long floatval doc
@override
public double doubleval int doc
return  double floatval doc
@override
public string strval int doc
return float tostring floatval doc
@override
public string tostring int doc
return     vals tostring doc        min       max
minsource
maxsource
@override
public void createweight map context  searcher searcher  throws ioexception
source createweight context  searcher
@override
public int hashcode
int h   float floattointbits min
h   h 29
h    float floattointbits max
h   h 29
h    source hashcode
return h
@override
public boolean equals object o
if  scalefloatfunction class    o getclass    return false
scalefloatfunction other    scalefloatfunction o
return this min    other min
this max    other max
this source equals other source