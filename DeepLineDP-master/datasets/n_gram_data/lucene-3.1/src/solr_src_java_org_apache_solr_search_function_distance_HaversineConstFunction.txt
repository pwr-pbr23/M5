package org apache solr search function distance
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene index indexreader
import org apache lucene queryparser parseexception
import org apache lucene search searcher
import org apache lucene spatial distanceutils
import org apache lucene spatial tier invalidgeoexception
import org apache solr common params spatialparams
import org apache solr schema schemafield
import org apache solr search functionqparser
import org apache solr search valuesourceparser
import org apache solr search function
import java io ioexception
import java util arrays
import java util list
import java util map
/**
* haversine function with one point constant
*/
public class haversineconstfunction extends valuesource
public static valuesourceparser parser   new valuesourceparser
@override
public valuesource parse functionqparser fp  throws parseexception
// todo: dispatch through spatialqueriable in the future?
list<valuesource> sources   fp parsevaluesourcelist
// "m" is a multi-value source, "x" is a single-value source
// allow (m,m) (m,x,x) (x,x,m) (x,x,x,x)
// if not enough points are present, "pt" will be checked first, followed by "sfield".
multivaluesource mv1   null
multivaluesource mv2   null
if  sources size      0
// nothing to do now
else if  sources size      1
valuesource vs   sources get 0
if    vs instanceof multivaluesource
throw new parseexception     sources
mv1    multivaluesource vs
else if  sources size      2
valuesource vs1   sources get 0
valuesource vs2   sources get 1
if  vs1 instanceof multivaluesource    vs2 instanceof multivaluesource
mv1    multivaluesource vs1
mv2    multivaluesource vs2
else
mv1   makemv sources  sources
else if  sources size    3
valuesource vs1   sources get 0
valuesource vs2   sources get 1
if  vs1 instanceof multivaluesource            m x x
mv1    multivaluesource vs1
mv2   makemv sources sublist 1 3   sources
else                                         x x m
mv1   makemv sources sublist 0 2   sources
vs1   sources get 2
if    vs1 instanceof multivaluesource
throw new parseexception     sources
mv2    multivaluesource vs1
else if  sources size    4
mv1   makemv sources sublist 0 2   sources
mv2   makemv sources sublist 2 4   sources
else if  sources size   > 4
throw new parseexception     sources
if  mv1    null
mv1   parsepoint fp
mv2   parsesfield fp
else if  mv2    null
mv2   parsepoint fp
if  mv2    null
mv2   parsesfield fp
if  mv1    null    mv2    null
throw new parseexception     sources
// we have all the parameters at this point, now check if one of the points is constant
double constants
constants   getconstants mv1
multivaluesource other   mv2
if  constants    null
constants   getconstants mv2
other   mv1
if  constants    null    other instanceof vectorvaluesource
return new haversineconstfunction constants  constants   vectorvaluesource other
return new haversinefunction mv1  mv2  distanceutils earth_mean_radius_km  true
/** make a multivaluesource from two non multivaluesources */
private static vectorvaluesource makemv list<valuesource> sources  list<valuesource> orig  throws parseexception
valuesource vs1   sources get 0
valuesource vs2   sources get 1
if  vs1 instanceof multivaluesource    vs2 instanceof multivaluesource
throw new parseexception     orig
return  new vectorvaluesource sources
private static multivaluesource parsepoint functionqparser fp  throws parseexception
string pt   fp getparam spatialparams point
if  pt    null  return null
double point   null
try
point   distanceutils parselatitudelongitude pt
catch  invalidgeoexception e
throw new parseexception     pt
return new vectorvaluesource arrays aslist new valuesource  new doubleconstvaluesource point  new doubleconstvaluesource point
private static double getconstants multivaluesource vs
if    vs instanceof vectorvaluesource   return null
list<valuesource> sources     vectorvaluesource vs  getsources
if  sources get 0  instanceof constnumbersource    sources get 1  instanceof constnumbersource
return new double     constnumbersource  sources get 0   getdouble      constnumbersource  sources get 1   getdouble
return null
private static multivaluesource parsesfield functionqparser fp  throws parseexception
string sfield   fp getparam spatialparams field
if  sfield    null  return null
schemafield sf   fp getreq   getschema   getfield sfield
valuesource vs   sf gettype   getvaluesource sf  fp
if    vs instanceof multivaluesource
throw new parseexception     sf
return  multivaluesource vs
//////////////////////////////////////////////////////////////////////////////////////
private final double latcenter
private final double loncenter
private final vectorvaluesource p2      lat lon  just saved for display debugging
private final valuesource latsource
private final valuesource lonsource
private final double latcenterrad_cos     cos latcenter
private static final double earth_mean_diameter   distanceutils earth_mean_radius_km   2
public haversineconstfunction double latcenter  double loncenter  vectorvaluesource vs
this latcenter   latcenter
this loncenter   loncenter
this p2   vs
this latsource   p2 getsources   get 0
this lonsource   p2 getsources   get 1
this latcenterrad_cos   math cos latcenter   distanceutils degrees_to_radians
protected string name
return
@override
public docvalues getvalues map context  indexreader reader  throws ioexception
final docvalues latvals   latsource getvalues context  reader
final docvalues lonvals   lonsource getvalues context  reader
final double latcenterrad   this latcenter   distanceutils degrees_to_radians
final double loncenterrad   this loncenter   distanceutils degrees_to_radians
final double latcenterrad_cos   this latcenterrad_cos
return new docvalues
@override
public float floatval int doc
return  float  doubleval doc
@override
public int intval int doc
return  int  doubleval doc
@override
public long longval int doc
return  long  doubleval doc
@override
public double doubleval int doc
double latrad   latvals doubleval doc    distanceutils degrees_to_radians
double lonrad   lonvals doubleval doc    distanceutils degrees_to_radians
double diffx   latcenterrad   latrad
double diffy   loncenterrad   lonrad
double hsinx   math sin diffx   0 5
double hsiny   math sin diffy   0 5
double h   hsinx   hsinx
latcenterrad_cos   math cos latrad    hsiny   hsiny
return  earth_mean_diameter   math atan2 math sqrt h   math sqrt 1   h
@override
public string strval int doc
return double tostring doubleval doc
@override
public string tostring int doc
return name         latvals tostring doc        lonvals tostring doc        latcenter       loncenter
@override
public void createweight map context  searcher searcher  throws ioexception
latsource createweight context  searcher
lonsource createweight context  searcher
@override
public boolean equals object o
if    o instanceof haversineconstfunction   return false
haversineconstfunction other    haversineconstfunction  o
return this latcenter    other latcenter
this loncenter    other loncenter
this p2 equals other p2
@override
public int hashcode
int result   p2 hashcode
long temp
temp   double doubletorawlongbits latcenter
result   31   result    int   temp ^  temp >>> 32
temp   double doubletorawlongbits loncenter
result   31   result    int   temp ^  temp >>> 32
return result
@override
public string description
return name         p2       latcenter       loncenter