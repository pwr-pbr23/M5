/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy util
import groovy xml qname
import java io outputstreamwriter
import java io printwriter
import java util hashmap
import java util iterator
import java util list
import java util map
import org codehaus groovy runtime invokerhelper
/**
* prints a node with all children in xml format.
*
* @author christian stein
* @see groovy.util.nodeprinter
*/
public class xmlnodeprinter
protected final indentprinter out
private string quote
private boolean namespaceaware   true
public xmlnodeprinter printwriter out
this out
public xmlnodeprinter printwriter out  string indent
this out  indent   "
public xmlnodeprinter printwriter out  string indent  string quote
this new indentprinter out  indent   quote
public xmlnodeprinter indentprinter out  string quote
if  out    null
throw new illegalargumentexception
this out   out
this quote   quote
public xmlnodeprinter
this new printwriter new outputstreamwriter system out
public string getnameofnode node node
if  node    null
throw new illegalargumentexception
object name   node name
if  name instanceof qname
qname qname    qname  name
if   namespaceaware
return qname getlocalpart
return qname getqualifiedname
return name tostring
public boolean isemptyelement node node
if  node    null
throw new illegalargumentexception
if   node children   isempty
return false
return node text   length      0
public void print node node
print node  new namespacecontext
/**
* check if namespace handling is enabled.
*
* @return true if namespace handling is enabled
*/
public boolean isnamespaceaware
return namespaceaware
/**
* enable and/or disable namespace handling.
*
* @param namespaceaware the new desired value
*/
public void setnamespaceaware boolean namespaceaware
this namespaceaware   namespaceaware
/**
* get quote to use when printing attributes.
*
* @return the quote character
*/
public string getquote
return quote
/**
* set quote to use when printing attributes.
*
* @param quote the quote character
*/
public void setquote string quote
this quote   quote
protected void print node node  namespacecontext ctx
/*
* handle empty elements like '<br/>', '<img/> or '<hr noshade="noshade"/>.
*/
if  isemptyelement node
printlinebegin
out print
out print getnameofnode node
if  ctx    null
printnamespace node  ctx
printnameattributes node attributes
out print
printlineend           node name
out flush
return
/*
* hook for extra processing, e.g. gsp tag element!
*/
if  printspecialnode node
out flush
return
/*
* handle normal element like <html> ... </html>.
*/
object value   node value
if  value instanceof list
printname node  ctx  true
printlist  list  value  ctx
printname node  ctx  false
out flush
return
// treat as simple type - probably a string
printname node  ctx  true
printsimpleitemwithindent value
printname node  ctx  false
out flush
protected void printlinebegin
out printindent
protected void printlineend
printlineend null
protected void printlineend string comment
if  comment    null
out print
out print comment
out print
out print
protected void printlist list list  namespacecontext ctx
out incrementindent
for  iterator iter   list iterator    iter hasnext
object value   iter next
/*
* if the current value is a node, recurse into that node.
*/
if  value instanceof node
print  node  value  ctx
continue
printsimpleitem value
out decrementindent
private void printsimpleitemwithindent object value
out incrementindent
printsimpleitem value
out decrementindent
protected void printsimpleitem object value
printlinebegin
out print invokerhelper tostring value
printlineend
protected void printname node node  namespacecontext ctx  boolean begin
if  node    null
throw new nullpointerexception
object name   node name
if  name    null
throw new nullpointerexception
printlinebegin
out print
if   begin
out print
out print getnameofnode node
if  ctx    null
printnamespace node  ctx
if  begin
printnameattributes node attributes
out print
printlineend
protected void printnameattributes map attributes
if  attributes    null    attributes isempty
return
for  iterator iter   attributes entryset   iterator    iter hasnext
map entry entry    map entry  iter next
out print
out print entry getkey   tostring
out print
object value   entry getvalue
out print quote
if  value instanceof string
printescaped  string  value
else
printescaped invokerhelper tostring value
out print quote
// for ' and " we only escape if needed. as far as xml is concerned,
// we could always escape if we wanted to.
private void printescaped string s
for  int i   0  i < s length    i
char c   s charat i
switch  c
case
out print
break
case
out print
break
case
out print
break
case
if  quote equals
out print
else
out print c
break
case
if  quote equals  "
out print
else
out print c
break
default
out print c
protected boolean printspecialnode node node
return false
protected void printnamespace node node  namespacecontext ctx
object name   node name
if  name instanceof qname    namespaceaware
qname qname    qname  name
string namespaceuri   qname getnamespaceuri
if  namespaceuri    null
string prefix   qname getprefix
if   ctx isnamespaceregistered namespaceuri
ctx registernamespaceprefix namespaceuri  prefix
out print
out print
if  prefix length   > 0
out print
out print prefix
out print     quote
out print namespaceuri
out print quote
private class namespacecontext
map namespacemap   new hashmap
public boolean isnamespaceregistered string uri
return namespacemap containskey uri
public void registernamespaceprefix string uri  string prefix
if   isnamespaceregistered uri
namespacemap put uri  prefix
public string getnamespaceprefix string uri
object prefix   namespacemap get uri
return  prefix    null  ? null   prefix tostring