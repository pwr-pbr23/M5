/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy xml dom
import groovy xml qname
import org codehaus groovy runtime defaultgroovymethods
import org codehaus groovy runtime invokerhelper
import org w3c dom
import java util
/**
* @author sam
* @author paulk
*/
public class domcategory
private static boolean trimwhitespace   true
public static object get object o  string elementname
if  o instanceof element
return get  element  o  elementname
if  o instanceof nodelist
return get  nodelist  o  elementname
if  o instanceof namednodemap
return get  namednodemap  o  elementname
return null
private static object get element element  string elementname
return getat element  elementname
private static object get nodelist nodelist  string elementname
return getat nodelist  elementname
private static object get namednodemap nodemap  string elementname
return getat nodemap  elementname
private static object getat element element  string elementname
if    equals elementname
return parent element
if    equals elementname
return depthfirst element
if  elementname startswith
return element getattribute elementname substring 1
return getchildelements element  elementname
private static object getat nodelist nodelist  string elementname
list results   new arraylist
for  int i   0  i < nodelist getlength    i
node node   nodelist item i
if  node instanceof element
addresult results  get node  elementname
if  elementname startswith
return results
return new nodelistsholder results
public static namednodemap attributes element element
return element getattributes
private static string getat namednodemap namednodemap  string elementname
attr a    attr  namednodemap getnameditem elementname
return a getvalue
public static int size namednodemap namednodemap
return namednodemap getlength
public static node getat node o  int i
return nodegetat o  i
public static node getat nodelistsholder o  int i
return nodegetat o  i
public static node getat nodesholder o  int i
return nodegetat o  i
private static node nodegetat object o  int i
if  o instanceof element
node n   getat  element o  i
if  n    null  return n
if  o instanceof nodelist
return getat  nodelist o  i
return null
private static node getat element element  int i
if  haschildelements element
nodelist nodelist   getchildelements element
return nodelist item i
return null
private static node getat nodelist nodelist  int i
if  i >  0    i < nodelist getlength
return nodelist item i
return null
public static string name element element
return element getnodename
public static node parent node node
return node getparentnode
public static string text object o
if  o instanceof element
return text  element  o
if  o instanceof node
node n    node  o
if  n getnodetype      node text_node
return n getnodevalue
if  o instanceof nodelist
return text  nodelist  o
return null
private static string text element element
if   element haschildnodes
return
if  element getfirstchild   getnodetype      node text_node
return
return element getfirstchild   getnodevalue
private static string text nodelist nodelist
stringbuffer sb   new stringbuffer
for  int i   0  i < nodelist getlength    i
sb append text nodelist item i
return sb tostring
public static list list nodelist self
list answer   new arraylist
iterator it   defaultgroovymethods iterator self
while  it hasnext
answer add it next
return answer
public static nodelist depthfirst element self
list result   new arraylist
result add createnodelist self
result add self getelementsbytagname
return new nodelistsholder result
public static void setvalue element self  string value
self getfirstchild   setnodevalue value
public static void putat element self  string property  object value
if  property startswith
string attributename   property substring 1
document doc   self getownerdocument
attr newattr   doc createattribute attributename
newattr setvalue value tostring
self setattributenode newattr
return
invokerhelper setproperty self  property  value
public static element appendnode element self  object name
return appendnode self  name   string null
public static element appendnode element self  object name  map attributes
return appendnode self  name  attributes  null
public static element appendnode element self  object name  string value
document doc   self getownerdocument
element newchild
if  name instanceof qname
qname qn    qname  name
newchild   doc createelementns qn getnamespaceuri    qn getqualifiedname
else
newchild   doc createelement name tostring
if  value    null
text text   doc createtextnode value
newchild appendchild text
self appendchild newchild
return newchild
public static element appendnode element self  object name  map attributes  string value
element result   appendnode self  name  value
for  iterator iterator   attributes entryset   iterator    iterator hasnext
map entry e    map entry  iterator next
putat result      e getkey   tostring    e getvalue
return result
private static nodelist createnodelist element self
list first   new arraylist
first add self
return new nodesholder first
public static nodelist breadthfirst element self
list result   new arraylist
nodelist thislevel   createnodelist self
while  thislevel getlength   > 0
result add thislevel
thislevel   getnextlevel thislevel
return new nodelistsholder result
private static nodelist getnextlevel nodelist thislevel
list result   new arraylist
for  int i   0  i < thislevel getlength    i
node n   thislevel item i
if  n instanceof element
result add getchildelements  element  n
return new nodelistsholder result
public static nodelist children element self
return getchildelements self
private static boolean haschildelements element self  string elementname
return getchildelements self  elementname  getlength   > 0
private static nodelist getchildelements element self  string elementname
list result   new arraylist
nodelist nodelist   self getchildnodes
for  int i   0  i < nodelist getlength    i
node node   nodelist item i
if  node getnodetype      node element_node
element child    element  node
if    equals elementname     child gettagname   equals elementname
result add child
else if  node getnodetype      node text_node
string value   node getnodevalue
if  trimwhitespace
value   value trim
if    equals elementname     value length   > 0
node setnodevalue value
result add node
return new nodesholder result
public static string tostring object o
if  o instanceof node
if    node  o  getnodetype      node text_node
return   node  o  getnodevalue
if  o instanceof nodelist
return tostring  nodelist  o
return o tostring
private static string tostring nodelist self
stringbuffer sb   new stringbuffer
sb append
iterator it   defaultgroovymethods iterator self
while  it hasnext
if  sb length   > 1  sb append
sb append it next   tostring
sb append
return sb tostring
public static int size nodelist self
return self getlength
public static boolean isempty nodelist self
return size self     0
private static void addresult list results  object result
if  result    null
if  result instanceof collection
results addall  collection  result
else
results add result
private static final class nodelistsholder implements nodelist
private list nodelists
private nodelistsholder list nodelists
this nodelists   nodelists
public int getlength
int length   0
for  int i   0  i < nodelists size    i
nodelist nl    nodelist  nodelists get i
length    nl getlength
return length
public node item int index
int relativeindex   index
for  int i   0  i < nodelists size    i
nodelist nl    nodelist  nodelists get i
if  relativeindex < nl getlength
return nl item relativeindex
relativeindex    nl getlength
return null
public string tostring
return domcategory tostring this
private static final class nodesholder implements nodelist
private list nodes
private nodesholder list nodes
this nodes   nodes
public int getlength
return nodes size
public node item int index
if  index < 0    index >  getlength
return null
return  node  nodes get index