/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy control
import org codehaus groovy ast classcodeexpressiontransformer
import org codehaus groovy ast classnode
import org codehaus groovy ast fieldnode
import org codehaus groovy ast expr constantexpression
import org codehaus groovy ast expr expression
import org objectweb asm opcodes
import java util
/**
* visitor to produce several optimizations
*  - to replace numbered constants with references to static fields
*
* @author alex tkachman
*/
public class optimizervisitor extends classcodeexpressiontransformer
private classnode currentclass
private sourceunit source
private map const2var   new hashmap
private list missingfields   new linkedlist
public optimizervisitor compilationunit cu
public void visitclass classnode node  sourceunit source
this currentclass   node
this source   source
const2var clear
missingfields clear
super visitclass node
addmissingfields
private void addmissingfields
for  iterator it   missingfields iterator    it hasnext
fieldnode f    fieldnode  it next
currentclass addfield f
private void setconstfield constantexpression constantexpression
final object n   constantexpression getvalue
if    n instanceof number    n instanceof character   return
fieldnode field    fieldnode  const2var get n
if  field  null  return
final string name       const2var size
//todo: this part here needs a bit of rethinking. if it can happen that the field is defined already,
//      then is this code still valid?
field   currentclass getfield name
if  field  null
field   new fieldnode name
opcodes acc_private opcodes acc_static opcodes acc_synthetic  opcodes acc_final
constantexpression gettype
currentclass
constantexpression
field setsynthetic true
missingfields add field
const2var put n  field
public expression transform expression exp
if  exp    null  return null
if   currentclass isinterface      exp getclass      constantexpression class
setconstfield  constantexpression exp
return exp transformexpression this
protected sourceunit getsourceunit
return source