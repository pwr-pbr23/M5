/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy classgen
import groovy lang groovyruntimeexception
import org codehaus groovy ast
import org objectweb asm classvisitor
import org objectweb asm methodvisitor
import java util iterator
/**
* to generate a class that has all the fields and methods, except that fields are not initilized
* and methods are empty. it's intended for being used as a place holder during code generation
* of reference to the "this" class itself.
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @author <a href="mailto:b55r@sina.com">bing ran</a>
* @version $revision$
*/
public class dummyclassgenerator extends classgenerator
private classvisitor cv
private methodvisitor mv
private generatorcontext context
private string sourcefile
// current class details
private classnode classnode
private string internalclassname
private string internalbaseclassname
public dummyclassgenerator
generatorcontext context
classvisitor classvisitor
classloader classloader
string sourcefile
super classloader
this context   context
this cv   classvisitor
this sourcefile   sourcefile
// groovyclassvisitor interface
//-------------------------------------------------------------------------
public void visitclass classnode classnode
try
this classnode   classnode
this internalclassname   bytecodehelper getclassinternalname classnode
//system.out.println("generating class: " + classnode.getname());
this internalbaseclassname   bytecodehelper getclassinternalname classnode getsuperclass
cv visit
asmjdkversion
classnode getmodifiers
internalclassname
string  null
internalbaseclassname
bytecodehelper getclassinternalnames classnode getinterfaces
classnode visitcontents this
for  iterator iter   innerclasses iterator    iter hasnext
classnode innerclass    classnode  iter next
classnode innerclasstype   innerclass
string innerclassinternalname   bytecodehelper getclassinternalname innerclasstype
string outerclassname   internalclassname     default for inner classes
methodnode enclosingmethod   innerclass getenclosingmethod
if  enclosingmethod    null
// local inner classes do not specify the outer class name
outerclassname   null
cv visitinnerclass
innerclassinternalname
outerclassname
innerclasstype getname
innerclass getmodifiers
cv visitend
catch  groovyruntimeexception e
e setmodule classnode getmodule
throw e
public void visitconstructor constructornode node
visitparameters node  node getparameters
string methodtype   bytecodehelper getmethoddescriptor classhelper void_type  node getparameters
mv   cv visitmethod node getmodifiers       methodtype  null  null
mv visittypeinsn new
mv visitinsn dup
mv visitldcinsn
mv visitmethodinsn invokespecial
mv visitinsn athrow
mv visitmaxs 0  0
public void visitmethod methodnode node
visitparameters node  node getparameters
string methodtype   bytecodehelper getmethoddescriptor node getreturntype    node getparameters
mv   cv visitmethod node getmodifiers    node getname    methodtype  null  null
mv visittypeinsn new
mv visitinsn dup
mv visitldcinsn
mv visitmethodinsn invokespecial
mv visitinsn athrow
mv visitmaxs 0  0
public void visitfield fieldnode fieldnode
cv visitfield
fieldnode getmodifiers
fieldnode getname
bytecodehelper gettypedescription fieldnode gettype
null    fieldvalue     br  all the sudden that one cannot init the field here  init is done in static initilizer and instace intializer

/**
* creates a getter, setter and field
*/
public void visitproperty propertynode statement
protected compileunit getcompileunit
compileunit answer   classnode getcompileunit
if  answer    null
answer   context getcompileunit
return answer
protected void visitparameters astnode node  parameter parameters
for  int i   0  size   parameters length  i < size  i
visitparameter node  parameters
protected void visitparameter astnode node  parameter parameter
public void visitannotations annotatednode node