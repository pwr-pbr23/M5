/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy mock interceptor
import groovy lang
import java beans introspectionexception
/**
* the proxymetaclass for the mockinterceptor.
* instance and class methods are intercepted, but constructors are not to allow mocking of aggregated objects.
* @author dierk koenig
*/
public class mockproxymetaclass extends proxymetaclass
/**
* @param adaptee the metaclass to decorate with interceptability
*/
public mockproxymetaclass metaclassregistry registry  class theclass  metaclass adaptee  throws introspectionexception
super registry  theclass  adaptee
/**
* convenience factory method for the most usual case.
*/
public static mockproxymetaclass make class theclass  throws introspectionexception
metaclassregistry metaregistry   groovysystem getmetaclassregistry
metaclass meta   metaregistry getmetaclass theclass
return new mockproxymetaclass metaregistry  theclass  meta
public object invokemethod final object object  final string methodname  final object arguments
if  null    interceptor
throw new runtimeexception
return interceptor beforeinvoke object  methodname  arguments
public object invokestaticmethod final object object  final string methodname  final object arguments
if  null    interceptor
throw new runtimeexception
return interceptor beforeinvoke object  methodname  arguments
public object getproperty class aclass  object object  string property  boolean b  boolean b1
if  null    interceptor
throw new runtimeexception
if interceptor instanceof propertyaccessinterceptor
return   propertyaccessinterceptor interceptor  beforeget object property
else
return super getproperty aclass object property b b
public void setproperty class aclass  object object  string property  object newvalue  boolean b  boolean b1
if  null    interceptor
throw new runtimeexception
if interceptor instanceof propertyaccessinterceptor
propertyaccessinterceptor interceptor  beforeset object property  newvalue
else
super setproperty aclass object property newvalue b b
/**
* unlike general impl in superclass, ctors are not intercepted but relayed
*/
public object invokeconstructor final object arguments
return adaptee invokeconstructor arguments