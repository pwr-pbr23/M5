/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy util
import groovy lang closure
import groovy lang groovyobjectsupport
import groovy lang groovyruntimeexception
import groovy lang metaexpandoproperty
import groovy lang missingpropertyexception
import java util hashmap
import java util map
import java util map entry
import java util list
import java util arraylist
import java util iterator
/**
* represents a dynamically expandable bean.
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @author hein meling
* @author pilho kim
* @version $revision$
*/
public class expando extends groovyobjectsupport
private map expandoproperties
public expando
public expando map expandoproperties
this expandoproperties   expandoproperties
/**
* @return the dynamically expanded properties
*/
public map getproperties
if  expandoproperties    null
expandoproperties   createmap
return expandoproperties
public list getmetapropertyvalues
// run through all our current properties and create metaproperty objects
list ret   new arraylist
iterator itr   getproperties   entryset   iterator
while itr hasnext
entry entry    entry  itr next
ret add new metaexpandoproperty entry
return ret
public object getproperty string property
// always use the expando properties first
object result   getproperties   get property
if  result  null  return result
try
return super getproperty property
catch  missingpropertyexception e
// ignore
return null
public void setproperty string property  object newvalue
// always use the expando properties
getproperties   put property  newvalue
public object invokemethod string name  object args
try
return super invokemethod name  args
catch  groovyruntimeexception e
// br should get a "native" property match first. getproperty includes such fall-back logic
object value   this getproperty name
if  value instanceof closure
closure closure    closure  value
closure setdelegate this
return closure call  object  args
else
throw e
/**
* this allows tostring to be overridden by a closure <i>field</i> method attached
* to the expando object.
*
* @see java.lang.object#tostring()
*/
public string tostring
object method   getproperties   get
if  method    null    method instanceof closure
// invoke overridden tostring closure method
closure closure    closure  method
closure setdelegate this
return closure call   tostring
else
return expandoproperties tostring
/**
* this allows equals to be overridden by a closure <i>field</i> method attached
* to the expando object.
*
* @see java.lang.object#equals(java.lang.object)
*/
public boolean equals object obj
object method   getproperties   get
if  method    null    method instanceof closure
// invoke overridden equals closure method
closure closure    closure  method
closure setdelegate this
boolean ret    boolean  closure call obj
return ret booleanvalue
else
return super equals obj
/**
* this allows hashcode to be overridden by a closure <i>field</i> method attached
* to the expando object.
*
* @see java.lang.object#hashcode()
*/
public int hashcode
object method   getproperties   get
if  method    null    method instanceof closure
// invoke overridden hashcode closure method
closure closure    closure  method
closure setdelegate this
integer ret    integer  closure call
return ret intvalue
else
return super hashcode
/**
* factory method to create a new map used to store the expando properties map
* @return a newly created map implementation
*/
protected map createmap
return new hashmap