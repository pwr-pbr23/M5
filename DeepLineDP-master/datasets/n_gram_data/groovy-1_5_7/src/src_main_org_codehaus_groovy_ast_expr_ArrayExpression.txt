/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast expr
import java util collections
import java util iterator
import java util list
import org codehaus groovy ast classnode
import org codehaus groovy ast groovycodevisitor
/**
* represents an array object construction either using a fixed size
* or an initializer expression
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public class arrayexpression extends expression
private list expressions
private list sizeexpression
private classnode elementtype
private static classnode makearray classnode base  list sizeexpression
classnode ret   base makearray
if  sizeexpression  null  return ret
int size   sizeexpression size
for  int i 1  i<size  i
ret   ret makearray
return ret
public arrayexpression classnode elementtype  list expressions  list sizeexpression
//expect to get the elementtype
super settype makearray elementtype sizeexpression
if  expressions  null  expressions collections empty_list
this elementtype   elementtype
this expressions   expressions
this sizeexpression   sizeexpression
for  iterator iter   expressions iterator    iter hasnext
object item   iter next
if  item  null      item instanceof expression
throw new classcastexception     item
if  sizeexpression  null
for  iterator iter   sizeexpression iterator    iter hasnext
object item   iter next
if    item instanceof expression
throw new classcastexception     item
/**
* creates an array using an initializer expression
*/
public arrayexpression classnode elementtype  list expressions
this elementtype expressions null
public void addexpression expression expression
expressions add expression
public list getexpressions
return expressions
public void visit groovycodevisitor visitor
visitor visitarrayexpression this
public boolean isdynamic
return false
public expression transformexpression expressiontransformer transformer
list exprlist   transformexpressions expressions  transformer
list sizes   null
if  sizeexpression  null  sizes   transformexpressions sizeexpression transformer
expression ret   new arrayexpression elementtype  exprlist  sizes
ret setsourceposition this
return ret
public expression getexpression int i
object object   expressions get i
return  expression  object
public classnode getelementtype
return elementtype
public string gettext
stringbuffer buffer   new stringbuffer
boolean first   true
for  iterator iter   expressions iterator    iter hasnext
if  first
first   false
else
buffer append
buffer append   expression  iter next    gettext
buffer append
return buffer tostring
public list getsizeexpression
return sizeexpression
public string tostring
return super tostring     expressions