/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ant
import groovy lang groovyclassloader
import org apache tools ant buildexception
import org apache tools ant taskdefs matchingtask
import org apache tools ant types path
import org apache tools ant types reference
import org codehaus groovy control compilerconfiguration
import org codehaus groovy tools errorreporter
import java io file
import java io stringwriter
import java io printwriter
/**
* support for compilation related tasks.
*
* @version $id$
* @author <a href="mailto:jason@planet57.com">jason dillon</a>
*/
public abstract class compiletasksupport
extends matchingtask
protected final logginghelper log   new logginghelper this
protected path src
protected file destdir
protected path classpath
protected compilerconfiguration config   new compilerconfiguration
protected boolean failonerror   true
public void setfailonerror final boolean fail
failonerror   fail
public boolean getfailonerror
return failonerror
public path createsrc
if  src    null
src   new path getproject
return src createpath
public void setsrcdir final path dir
assert dir    null
if  src    null
src   dir
else
src append dir
public path getsrcdir
return src
public void setdestdir final file dir
assert dir    null
this destdir   dir
public void setclasspath final path path
assert path    null
if  classpath    null
classpath   path
else
classpath append path
public path getclasspath
return classpath
public path createclasspath
if  classpath    null
classpath   new path getproject
return classpath createpath
public void setclasspathref final reference r
assert r    null
createclasspath   setrefid r
public compilerconfiguration createconfiguration
return config
protected void validate   throws buildexception
if  src    null
throw new buildexception    getlocation
if  destdir    null
throw new buildexception    getlocation
if   destdir exists
throw new buildexception     destdir  getlocation
protected groovyclassloader createclassloader
classloader parent   classloader getsystemclassloader
groovyclassloader gcl   new groovyclassloader parent  config
path path   getclasspath
if  path    null
final string filepaths   path list
for  int i   0  i < filepaths length  i
string filepath   filepaths
gcl addclasspath filepath
return gcl
protected void handleexception final exception e  throws buildexception
assert e    null
stringwriter writer   new stringwriter
new errorreporter e  false  write new printwriter writer
string message   writer tostring
if  failonerror
throw new buildexception message  e  getlocation
else
log error message
public void execute   throws buildexception
validate
try
compile
catch  exception e
handleexception e
protected abstract void compile   throws exception