/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast expr
import org codehaus groovy ast classnode
import org codehaus groovy ast groovycodevisitor
/**
* a constructor call
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @author jochen theodorou
* @version $revision$
*/
public class constructorcallexpression extends expression
private final expression arguments
public constructorcallexpression classnode type  expression arguments
super settype type
if    arguments instanceof tupleexpression
this arguments   new tupleexpression arguments
else
this arguments   arguments
public void visit groovycodevisitor visitor
visitor visitconstructorcallexpression this
public expression transformexpression expressiontransformer transformer
expression args   transformer transform arguments
expression ret   new constructorcallexpression gettype    args
ret setsourceposition this
return ret
public expression getarguments
return arguments
public string gettext
string text   null
if  issupercall
text
else if  isthiscall
text
else
text      gettype   getname
return text   arguments gettext
public string tostring
return super tostring         gettype         arguments
public boolean issupercall
return gettype    classnode super
public boolean isspecialcall
return isthiscall      issupercall
public boolean isthiscall
return gettype    classnode this