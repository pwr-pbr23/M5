/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast expr
import org codehaus groovy ast groovycodevisitor
/**
* represents a range expression such as for iterating
* <pre>for i in 0..10 {...}
* </pre>
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public class rangeexpression extends expression
private expression from
private expression to
private boolean inclusive
public rangeexpression expression from  expression to  boolean inclusive
this from   from
this to   to
this inclusive   inclusive
public void visit groovycodevisitor visitor
visitor visitrangeexpression this
public expression transformexpression expressiontransformer transformer
expression ret   new rangeexpression transformer transform from   transformer transform to   inclusive
ret setsourceposition this
return ret
public expression getfrom
return from
public expression getto
return to
public boolean isinclusive
return inclusive
public string gettext
return     from gettext
isinclusive  ?
to gettext