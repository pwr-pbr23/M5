/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast expr
import java util arraylist
import java util arrays
import java util iterator
import java util list
import org codehaus groovy ast groovycodevisitor
/**
* represents a tuple expression {1, 2, 3} which creates an immutable list
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public class tupleexpression extends expression
private list expressions
public tupleexpression
this 0
public tupleexpression expression expr
this 1
addexpression expr
public tupleexpression expression expr1  expression expr2
this 2
addexpression expr1
addexpression expr2
public tupleexpression expression expr1  expression expr2  expression expr3
this 3
addexpression expr1
addexpression expr2
addexpression expr3
public tupleexpression int length
this expressions   new arraylist length
public tupleexpression list expressions
this expressions   expressions
public tupleexpression expression expressionarray
this
expressions addall arrays aslist expressionarray
public tupleexpression addexpression expression expression
expressions add expression
return this
public list getexpressions
return expressions
public void visit groovycodevisitor visitor
visitor visittupleexpression this
public expression transformexpression expressiontransformer transformer
expression ret   new tupleexpression transformexpressions getexpressions    transformer
ret setsourceposition this
return ret
public expression getexpression int i
return  expression  expressions get i
public string gettext
stringbuffer buffer   new stringbuffer
boolean first   true
for  iterator iter   expressions iterator    iter hasnext
if  first
first   false
else
buffer append
buffer append   expression iter next    gettext
buffer append
return buffer tostring
public string tostring
return super tostring     expressions