package groovy lang
/*
* copyright 2005 john g. wilson
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*
*/
/**
* @author john wilson
*
*/
public abstract class newmetaclass implements mop
public static final object not_constructed   new object
protected static final object no_parameters   new object
protected static final class no_parameter_types   new class
//
// the methods forming the meta object protocol
//
/* (non-javadoc)
* @see groovy.lang.mop#invokemethod(java.lang.object, java.lang.class, java.lang.string, java.lang.object[], java.lang.class[])
*/
public abstract object invokemethod final object object  final class objecttype  final string methodname  final object arguments  final class argumenttypes
/* (non-javadoc)
* @see groovy.lang.mop#getproperty(java.lang.object, java.lang.class, java.lang.string)
*/
public abstract object getproperty final object object  final class objecttype  final string property
/* (non-javadoc)
* @see groovy.lang.mop#setproperty(java.lang.object, java.lang.class, java.lang.string, java.lang.object, java.lang.class)
*/
public abstract void setproperty final object object  final class objecttype  final string property  final object newvalue  final class newvaluetype
/* (non-javadoc)
* @see groovy.lang.mop#getattribute(java.lang.object, java.lang.class, java.lang.string)
*/
public abstract object getattribute final object object  final class objecttype  final string attribute
/* (non-javadoc)
* @see groovy.lang.mop#setattribute(java.lang.object, java.lang.class, java.lang.string, java.lang.object, java.lang.class)
*/
public abstract void setattribute final object object  final class objecttype  final string attribute  final object newvalue  final class newvaluetype
/* (non-javadoc)
* @see groovy.lang.mop#invokethismethod(java.lang.object, java.lang.class, java.lang.string, java.lang.object[], java.lang.class[])
*/
public abstract object invokethismethod final object object  final class thistype  final string methodname  final object arguments  final class argumenttypes
/* (non-javadoc)
* @see groovy.lang.mop#getthisproperty(java.lang.object, java.lang.class, java.lang.string)
*/
public abstract object getthisproperty final object object  final class thistype  final string property
/* (non-javadoc)
* @see groovy.lang.mop#setthisproperty(java.lang.object, java.lang.class, java.lang.string, java.lang.object, java.lang.class)
*/
public abstract boolean setthisproperty final object object  final class thistype  final string property  final object newvalue  final class newvaluetype
/* (non-javadoc)
* @see groovy.lang.mop#getthisattribute(java.lang.object, java.lang.class, java.lang.string)
*/
public abstract object getthisattribute final object object  final class thistype  final string attribute
/* (non-javadoc)
* @see groovy.lang.mop#setthisattribute(java.lang.object, java.lang.class, java.lang.string, java.lang.object, java.lang.class)
*/
public abstract boolean setthisattribute final object object  final class thistype  final string attribute  final object newvalue  final class newvaluetype
/* (non-javadoc)
* @see groovy.lang.mop#invokesupermethod(java.lang.object, java.lang.class, java.lang.string, java.lang.object[], java.lang.class[])
*/
public abstract object invokesupermethod final object object  final class superclasstype  final string methodname  final object arguments  final class argumenttypes
/* (non-javadoc)
* @see groovy.lang.mop#getsuperproperty(java.lang.object, java.lang.class, java.lang.string)
*/
public abstract object getsuperproperty final object object  final class superclasstype  final string property
/* (non-javadoc)
* @see groovy.lang.mop#setsuperproperty(java.lang.object, java.lang.class, java.lang.string, java.lang.object, java.lang.class)
*/
public abstract boolean setsuperproperty final object object  final class superclasstype  final string property  final object newvalue  final class newvaluetype
/* (non-javadoc)
* @see groovy.lang.mop#getsuperattribute(java.lang.object, java.lang.class, java.lang.string)
*/
public abstract object getsuperattribute final object object  final class superclasstype  final string attribute
/* (non-javadoc)
* @see groovy.lang.mop#setsuperattribute(java.lang.object, java.lang.class, java.lang.string, java.lang.object, java.lang.class)
*/
public abstract boolean setsuperattribute final object object  final class superclasstype  final string attribute  final object newvalue  final class newvaluetype
//
// methods which may migrate to the mop at some time in the future
//
/**
* construct an instance of the class represented by this instance of the metaclass.
* only public constructors may be called. there is currently no way of dynamically adding constructors but
* if one is introduced then this method will use them.
* if no suitable constuctor is found then a groovy.lang.missingconstructorexception is thrown
* @param arguments
* the arguments to the constructor call. the values in this array are undefined after the call is made.
* the metaclass may or may not change these vaues. do not use these vaules after the call.
* @param argumenttypes
* this array must be the same length as the arguments array.
* it contains the type of each parameter if known or null if unknown.
* the if there are overloaded constructors then this information contributes to the selection of the correct constructor to call.
* the metaclass may or may not change these vaues. do not use these values after the call.
* @return
* a new instance of the class represented by this instance of metaclass.
*/
public abstract object invokeconstructor final object arguments  final class argumenttypes
/**
* construct an instance of the class represented by this instance of the metaclass.
* only public constructors will be called directly. there is currently no way of dynamically adding constructors but
* if one is introduced then this method will use them.
* if a protected or private constructor is the best match for the parameters then not_constructed is returned
* otherwise a groovy.lang.missingconstructorexception is thrown
* @param arguments
* the arguments to the constructor.
* if not_constucted is returned and there is a private or protected constuctor which
* should be called then this array will contain the parameters to that constructor. the metaclass will have done any conversions
* (e.g. gstring to string) needed to allow the constuctor call to suceed.
* if any other value is returned then the values in this array are undefined. in this case the metaclass may or may not
* change these values. do not use these values unless not_constucted is returned.
* @param argumenttypes
* this array must be the same length as the arguments arguments array.
* it contains the type of each parameter if known or null if unknown.
* the if there are multiple constructors with the same name and number of parameters then this information
* contributes to the selection of the correct method to call.
* if not_constucted is returned and there is a private or protected constuctor which
* should be called then this array will contain the classes which represent the types of the parameters to that constructor.
* if any other value is returned then the values in this array are undefined. in this case the metaclass may or may not
* change these values. do not use these values unless not_called is returned.
* @return
* either a new instance of the class represented by this instance of metaclass or not_constructed.
* not_constructed is returned if a suitable constructor exists but the metaclass did not call it because it is not public.
* in this case the caller is free to try to invoke the constuctor itself (e.g. by executing generated bytecode).
* if there are multiple constuctors with the same name and number of parameters then the values on the array passed
* as argumenttypes should be used to choose the correct one to call.
*/
public abstract object invokethisconstructor final object arguments  final class argumenttypes
//
// additional methods for use when some or all of the type information is not available
// we don't bother doing this with super calls properety and attribute acess as they are far less common
//
public object invokeconstructor final object arguments
return invokeconstructor arguments  new class
public object invokemethod final object object  final class objecttype  final string methodname  final object arguments
return invokemethod object  objecttype  methodname  arguments  new class
public object invokemethod final object object  final string methodname  final object arguments  final class argumenttypes
return invokemethod object   class null  methodname  arguments  argumenttypes
public object invokemethod final object object  final string methodname  final object arguments
return invokemethod object   class null  methodname  arguments  new class
public object getproperty final object object  final string property
return getproperty object   class null  property
public void setproperty final object object  final class objecttype  final string property  final object newvalue
setproperty object  objecttype  property  newvalue   class null
public void setproperty final object object  final string property  final object newvalue  final class newvaluetype
setproperty object   class null  property  newvalue  newvaluetype
public void setproperty final object object  final string property  final object newvalue
setproperty object   class null  property  newvalue   class null
public object getattribute final object object  final string attribute
return getattribute object   class null  attribute
public void setattribute final object object  final class objecttype  final string attribute  final object newvalue
setattribute object  objecttype  attribute  newvalue   class null
public void setattribute final object object  final string attribute  final object newvalue  final class newvaluetype
setattribute object   class null  attribute  newvalue  newvaluetype
public void setattribute final object object  final string attribute  final object newvalue
setattribute object   class null  attribute  newvalue   class null
public object invokethismethod final object object  final class thistype  final string methodname  final object arguments
return invokethismethod object  thistype  methodname  arguments  new class
public boolean setthisproperty final object object  final class thistype  final string property  final object newvalue
return setthisproperty object  thistype  property  newvalue   class null
public boolean setthisproperty final object object  final string property  final object newvalue
return setthisproperty object   class null  property  newvalue   class null
//
// methods used to optimise method calling when there are 0, 1, 2, 3 or 4 parameters
// we don't bother doing this with super calls as they are far less common
//
public object invokemethod final object object  final string methodname
return invokemethod object   class null  methodname  no_parameters  no_parameter_types
public object invokemethod final object object  final class objecttype  final string methodname
return invokemethod object  objecttype  methodname  no_parameters  no_parameter_types
public object invokemethod final object object  final string methodname  final object p1  final class c1
return invokemethod object   class null  methodname  new object  p1   new class  c1
public object invokemethod final object object  final class objecttype  final string methodname  final object p1  final class c1
return invokemethod object  objecttype  methodname  new object  p1   new class  c1
public object invokemethod final object object  final string methodname  final object p1
return invokemethod object   class null  methodname  new object  p1   new class
public object invokemethod final object object  final class objecttype  final string methodname  final object p1
return invokemethod object  objecttype  methodname  new object  p1   new class
public object invokemethod final object object  final string methodname  final object p1  final object p2  final class c1  final class c2
return invokemethod object   class null  methodname  new object  p1  p2   new class  c1  c2
public object invokemethod final object object  final class objecttype  final string methodname  final object p1  final object p2  final class c1  final class c2
return invokemethod object  objecttype  methodname  new object  p1  p2   new class  c1  c2
public object invokemethod final object object  final string methodname  final object p1  final object p2
return invokemethod object   class null  methodname  new object  p1  p2   new class
public object invokemethod final object object  final class objecttype  final string methodname  final object p1  final object p2
return invokemethod object  objecttype  methodname  new object  p1  p2   new class
public object invokemethod final object object  final string methodname  final object p1  final object p2  final object p3  final class c1  final class c2  final class c3
return invokemethod object   class null  methodname  new object  p1  p2  p3   new class  c1  c2  c3
public object invokemethod final object object  final class objecttype  final string methodname  final object p1  final object p2  final object p3  final class c1  final class c2  final class c3
return invokemethod object  objecttype  methodname  new object  p1  p2  p3   new class  c1  c2  c3
public object invokemethod final object object  final string methodname  final object p1  final object p2  final object p3
return invokemethod object   class null  methodname  new object  p1  p2  p3   new class
public object invokemethod final object object  final class objecttype  final string methodname  final object p1  final object p2  final object p3
return invokemethod object  objecttype  methodname  new object  p1  p2  p3   new class
public object invokemethod final object object  final string methodname  final object p1  final object p2  final object p3  final object p4  final class c1  final class c2  final class c3  final class c4
return invokemethod object   class null  methodname  new object  p1  p2  p3  p4   new class  c1  c2  c3  c4
public object invokemethod final object object  final class objecttype  final string methodname  final object p1  final object p2  final object p3  final object p4  final class c1  final class c2  final class c3  final class c4
return invokemethod object  objecttype  methodname  new object  p1  p2  p3  p4   new class  c1  c2  c3  c4
public object invokemethod final object object  final string methodname  final object p1  final object p2  final object p3  final object p4
return invokemethod object   class null  methodname  new object  p1  p2  p3  p4   new class
public object invokemethod final object object  final class objecttype  final string methodname  final object p1  final object p2  final object p3  final object p4
return invokemethod object  objecttype  methodname  new object  p1  p2  p3  p4   new class
public object invokethismethod final object object  final class thistype  final string methodname
return invokethismethod object  thistype  methodname  no_parameters  no_parameter_types
public object invokethismethod final object object  final class thistype  final string methodname  final object p1  final class c1
return invokethismethod object  thistype  methodname  new object  p1   new class  c1
public object invokethismethod final object object  final class thistype  final string methodname  final object p1
return invokethismethod object  thistype  methodname  new object  p1   new class
public object invokethismethod final object object  final class thistype  final string methodname  final object p1  final object p2  final class c1  final class c2
return invokethismethod object  thistype  methodname  new object  p1  p2   new class  c1  c2
public object invokethismethod final object object  final class thistype  final string methodname  final object p1  final object p2
return invokethismethod object  thistype  methodname  new object  p1  p2   new class
public object invokethismethod final object object  final class thistype  final string methodname  final object p1  final object p2  final object p3  final class c1  final class c2  final class c3
return invokethismethod object  thistype  methodname  new object  p1  p2  p3   new class  c1  c2  c3
public object invokethismethod final object object  final class thistype  final string methodname  final object p1  final object p2  final object p3
return invokethismethod object  thistype  methodname  new object  p1  p2  p3   new class
public object invokethismethod final object object  final class thistype  final string methodname  final object p1  final object p2  final object p3  final object p4  final class c1  final class c2  final class c3  final class c4
return invokethismethod object  thistype  methodname  new object  p1  p2  p3  p4   new class  c1  c2  c3  c4
public object invokethismethod final object object  final class thistype  final string methodname  final object p1  final object p2  final object p3  final object p4
return invokethismethod object  thistype  methodname  new object  p1  p2  p3  p4   new class