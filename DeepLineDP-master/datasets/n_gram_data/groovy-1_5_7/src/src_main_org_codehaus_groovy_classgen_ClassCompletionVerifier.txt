/*******************************************************************************
* copyright (c) 2004 ibm corporation and others.
* all rights reserved.   this program and the accompanying materials
* are made available under the terms of the common public license v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/cpl-v10.html
*
* contributors:
* ibm - initial api and implementation
* groovy community - subsequent modifications
******************************************************************************/
package org codehaus groovy classgen
import java lang reflect modifier
import java util iterator
import java util list
import org codehaus groovy ast classcodevisitorsupport
import org codehaus groovy ast classhelper
import org codehaus groovy ast classnode
import org codehaus groovy ast fieldnode
import org codehaus groovy ast methodnode
import org codehaus groovy ast parameter
import org codehaus groovy ast expr binaryexpression
import org codehaus groovy ast expr constructorcallexpression
import org codehaus groovy ast expr mapentryexpression
import org codehaus groovy ast stmt catchstatement
import org codehaus groovy control sourceunit
import org objectweb asm opcodes
import org codehaus groovy syntax types
/**
* classcompletionverifier
*/
public class classcompletionverifier extends classcodevisitorsupport
private classnode currentclass
private sourceunit source
public classcompletionverifier sourceunit source
this source   source
public classnode getclassnode
return currentclass
public void visitclass classnode node
classnode oldclass   currentclass
currentclass   node
checkimplementsandextends node
if  source    null     source geterrorcollector   haserrors
checkclassforincorrectmodifiers node
checkclassforoverwritingfinal node
checkmethodsforincorrectmodifiers node
checkmethodsforoverwritingfinal node
checknoabstractmethodsnonabstractclass node
super visitclass node
currentclass   oldclass
private void checknoabstractmethodsnonabstractclass classnode node
if  modifier isabstract node getmodifiers     return
list abstractmethods   node getabstractmethods
if  abstractmethods    null  return
for  iterator iter   abstractmethods iterator    iter hasnext
methodnode method    methodnode  iter next
string methodname   method gettypedescriptor
adderror
getdescription node
getdescription method       node
private void checkclassforincorrectmodifiers classnode node
checkclassforabstractandfinal node
checkclassforothermodifiers node
private void checkclassforabstractandfinal classnode node
if   modifier isabstract node getmodifiers     return
if   modifier isfinal node getmodifiers     return
if  node isinterface
adderror     getdescription node      node
else
adderror     getdescription node       node
private void checkclassforothermodifiers classnode node
checkclassformodifier node  modifier istransient node getmodifiers
checkclassformodifier node  modifier isvolatile node getmodifiers
checkclassformodifier node  modifier isnative node getmodifiers
// don't check synchronized here as it overlaps with acc_super
private void checkmethodformodifier methodnode node  boolean condition  string modifiername
if   condition  return
adderror     getdescription node        modifiername      node
private void checkclassformodifier classnode node  boolean condition  string modifiername
if   condition  return
adderror     getdescription node        modifiername      node
private string getdescription classnode node
return  node isinterface   ?              node getname
private string getdescription methodnode node
return     node gettypedescriptor
private string getdescription fieldnode node
return     node getname
private void checkabstractdeclaration methodnode methodnode
if   modifier isabstract methodnode getmodifiers     return
if  modifier isabstract currentclass getmodifiers     return
adderror
getdescription currentclass
methodnode gettypedescriptor        methodnode
private void checkclassforoverwritingfinal classnode cn
classnode supercn   cn getsuperclass
if  supercn    null  return
if   modifier isfinal supercn getmodifiers     return
stringbuffer msg   new stringbuffer
msg append
msg append getdescription supercn
msg append
adderror msg tostring    cn
private void checkimplementsandextends classnode node
classnode cn   node getsuperclass
if  cn isinterface       node isinterface
adderror     getdescription cn       node
classnode interfaces   node getinterfaces
for  int i   0  i < interfaces length  i
cn   interfaces
if   cn isinterface
adderror     getdescription cn       node
private void checkmethodsforincorrectmodifiers classnode cn
if   cn isinterface    return
list methods   cn getmethods
for  iterator cniter   methods iterator    cniter hasnext
methodnode method    methodnode  cniter next
if  modifier isfinal method getmodifiers
adderror     getdescription method        getdescription cn
method
if  modifier isstatic method getmodifiers        isconstructor method
adderror     getdescription method        getdescription cn
method
private boolean isconstructor methodnode method
return method getname   equals
private void checkmethodsforoverwritingfinal classnode cn
list methods   cn getmethods
for  iterator cniter   methods iterator    cniter hasnext
methodnode method    methodnode  cniter next
parameter params   method getparameters
list supermethods   cn getsuperclass   getmethods method getname
for  iterator iter   supermethods iterator    iter hasnext
methodnode supermethod    methodnode  iter next
parameter superparams   supermethod getparameters
if   hasequalparametertypes params  superparams   continue
if   modifier isfinal supermethod getmodifiers     return
addinvaliduseoffinalerror method  params  supermethod getdeclaringclass
return
private void addinvaliduseoffinalerror methodnode method  parameter parameters  classnode supercn
stringbuffer msg   new stringbuffer
msg append    append method getname
msg append
boolean needscomma   false
for  int i   0  i < parameters length  i
if  needscomma
msg append
else
needscomma   true
msg append parameters gettype
msg append    append getdescription supercn
msg append
adderror msg tostring    method
private boolean hasequalparametertypes parameter first  parameter second
if  first length    second length  return false
for  int i   0  i < first length  i
string ft   first gettype   getname
string st   second gettype   getname
if  ft equals st   continue
return false
return true
protected sourceunit getsourceunit
return source
public void visitconstructorcallexpression constructorcallexpression call
classnode type   call gettype
if  modifier isabstract type getmodifiers
adderror     getdescription type       call
super visitconstructorcallexpression call
public void visitmethod methodnode node
checkabstractdeclaration node
checkrepetitivemethod node
checkoverloadingprivateandpublic node
checkmethodmodifiers node
super visitmethod node
private void checkmethodmodifiers methodnode node
// don't check volatile here as it overlaps with acc_bridge
// additional modifiers not allowed for interfaces
if   this currentclass getmodifiers     opcodes acc_interface     0
checkmethodformodifier node  modifier isstrict node getmodifiers
checkmethodformodifier node  modifier issynchronized node getmodifiers
checkmethodformodifier node  modifier isnative node getmodifiers
private void checkoverloadingprivateandpublic methodnode node
if  isconstructor node   return
list methods   currentclass getmethods node getname
boolean hasprivate false
boolean haspublic false
for  iterator iter   methods iterator    iter hasnext
methodnode element    methodnode  iter next
if  element    node  continue
if   element getdeclaringclass   equals node getdeclaringclass     continue
int modifiers   element getmodifiers
if  modifier ispublic modifiers     modifier isprotected modifiers
haspublic true
else
hasprivate true
if  hasprivate    haspublic
adderror   node
private void checkrepetitivemethod methodnode node
if  isconstructor node   return
list methods   currentclass getmethods node getname
for  iterator iter   methods iterator    iter hasnext
methodnode element    methodnode  iter next
if  element    node  continue
if   element getdeclaringclass   equals node getdeclaringclass     continue
parameter p1   node getparameters
parameter p2   element getparameters
if  p1 length    p2 length  continue
adderrorifparamsandreturntypeequal p2  p1  node  element
private void adderrorifparamsandreturntypeequal parameter p2  parameter p1
methodnode node  methodnode element
boolean isequal   true
for  int i   0  i < p2 length  i
isequal    p1 gettype   equals p2 gettype
isequal    node getreturntype   equals element getreturntype
if  isequal
adderror     getdescription node
getdescription currentclass       node
public void visitfield fieldnode node
if  currentclass getdeclaredfield node getname       node
adderror     getdescription node       node
checkinterfacefieldmodifiers node
super visitfield node
private void checkinterfacefieldmodifiers fieldnode node
if   currentclass isinterface    return
if   node getmodifiers      opcodes acc_public   opcodes acc_static   opcodes acc_final      0
adderror     getdescription node
getdescription currentclass       node
public void visitbinaryexpression binaryexpression expression
if  expression getoperation   gettype      types left_square_bracket
expression getrightexpression   instanceof mapentryexpression
adderror
expression getrightexpression
super visitbinaryexpression expression
public void visitcatchstatement catchstatement cs
if    cs getexceptiontype   isderivedfrom classhelper make throwable class
adderror    cs
super visitcatchstatement cs