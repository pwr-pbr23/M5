/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast expr
import java util arraylist
import java util iterator
import java util list
import org codehaus groovy ast classhelper
import org codehaus groovy ast groovycodevisitor
/**
* represents a string expression which contains embedded values inside
* it such as "hello there ${user} how are you" which is expanded lazily
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public class gstringexpression extends expression
private string verbatimtext
private list strings   new arraylist
private list values   new arraylist
public gstringexpression string verbatimtext
this verbatimtext   verbatimtext
super settype classhelper gstring_type
public gstringexpression string verbatimtext  list strings  list values
this verbatimtext   verbatimtext
this strings   strings
this values   values
super settype classhelper gstring_type
public void visit groovycodevisitor visitor
visitor visitgstringexpression this
public expression transformexpression expressiontransformer transformer
expression ret   new gstringexpression
verbatimtext
transformexpressions strings  transformer
transformexpressions values  transformer
ret setsourceposition this
return ret
public string tostring
return super tostring         strings       values
public string gettext
return verbatimtext
public list getstrings
return strings
public list getvalues
return values
public void addstring constantexpression text
if  text    null
throw new nullpointerexception
strings add text
public void addvalue expression value
// if the first thing is an value, then we need a dummy empty string in front of it so that when we
// tostring it they come out in the correct order.
if  strings size      0
strings add constantexpression empty_string
values add value
public expression getvalue int idx
return  expression  values get idx
public boolean isconstantstring
return values isempty
public expression asconstantstring
stringbuffer buffer   new stringbuffer
for  iterator iter   strings iterator    iter hasnext
constantexpression expression    constantexpression  iter next
object value   expression getvalue
if  value    null
buffer append value
return new constantexpression buffer tostring