/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy runtime
import groovy lang closure
import groovy lang metaclass
import java util arraylist
import java util list
/**
* a closure which stores calls in a list so that method calls
* can be iterated over in a 'yield' style way
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public class iteratorclosureadapter extends closure
private final list list   new arraylist
private metaclass metaclass   invokerhelper getmetaclass this
public iteratorclosureadapter object delegate
super delegate
public metaclass getmetaclass
return metaclass
public void setmetaclass metaclass metaclass
this metaclass   metaclass
public list aslist
return list
protected object docall object argument
list add argument
return null