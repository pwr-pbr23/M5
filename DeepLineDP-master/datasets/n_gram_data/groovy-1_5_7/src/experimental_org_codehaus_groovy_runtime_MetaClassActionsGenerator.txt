package org codehaus groovy runtime
import groovy lang metamethod
import java io file
import java io filewriter
import java io ioexception
import java io writer
import java lang reflect method
import java lang reflect modifier
import java util collections
import java util comparator
import java util hashmap
import java util iterator
import java util linkedlist
import java util list
import java util map
import java util set
import java util weakhashmap
import org codehaus groovy runtimemetaclassactionssupport defaultgroovyinstancemethodgenerator
import org codehaus groovy runtimemetaclassactionssupport defaultgroovystaticmethodgenerator
import org codehaus groovy runtimemetaclassactionssupport instancemethodgenerator
import org codehaus groovy runtimemetaclassactionssupport methodgenerator
import org codehaus groovy runtimemetaclassactionssupport reflectionmethodgenerator
import org codehaus groovy runtimemetaclassactionssupport staticmethodgenerator
/*
* copyright 2005 john g. wilson
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*
*/
/**
* @author john wilson
*
*/
public class metaclassactionsgenerator
private static final map actionsinfomap   new weakhashmap
static
actionsinfomap put object class  new actionsinfo object class
public static metaclassactions getactions final class claz
return getactionsinfo claz  getactions
protected static actionsinfo getactionsinfo final class claz
actionsinfo classinfo    actionsinfo actionsinfomap get claz
if  classinfo    null
final class superclass   claz getsuperclass
if  superclass    null
getactionsinfo superclass      ensure that the superclass information has been created
classinfo   new actionsinfo claz
actionsinfomap put claz  classinfo
return classinfo
class actionsinfo
private static map defaultgroovymethodsmap   new hashmap
static
try
final method defaultgroovymethods   class forname    getdeclaredmethods
for  int i   0  i    defaultgroovymethods length  i
final method method   defaultgroovymethods
if   method getmodifiers      modifier public   modifier static       modifier public   modifier static
final class parametertypes   method getparametertypes
if  parametertypes length    0
list methodlist    list defaultgroovymethodsmap get parametertypes
if  methodlist    null
methodlist   new linkedlist
defaultgroovymethodsmap put parametertypes  methodlist
methodlist add new defaultgroovyinstancemethodgenerator method
catch  securityexception e
e printstacktrace
catch  classnotfoundexception e
e printstacktrace
private static map defaultgroovystaticmethodsmap   new hashmap
static
try
final method defaultgroovystaticmethods   class forname    getdeclaredmethods
for  int i   0  i    defaultgroovystaticmethods length  i
final method method   defaultgroovystaticmethods
if   method getmodifiers      modifier public   modifier static       modifier public   modifier static
final class parametertypes   method getparametertypes
if  parametertypes length    0
list methodlist    list defaultgroovystaticmethodsmap get parametertypes
if  methodlist    null
methodlist   new linkedlist
defaultgroovystaticmethodsmap put parametertypes  methodlist
methodlist add new defaultgroovystaticmethodgenerator method
catch  securityexception e
e printstacktrace
catch  classnotfoundexception e
e printstacktrace
private metaclassactions actions   null
private final list generators   new linkedlist
public actionsinfo final class claz
final package pack   claz getpackage
final string packagename         pack    null  ?     pack getname
setupgenerators claz       need to do this even if the class is already generated
try
final class actionsclass   class forname packagename   claz getsimplename
this actions    metaclassactions actionsclass newinstance
catch  final exception e1
final file generatedfile   new file     packagename replace
generatedfile mkdirs
try
final writer out   new filewriter new file generatedfile   claz getsimplename
try
out write generatejavafile claz
finally
out close
catch  final ioexception e
e printstacktrace
public metaclassactions getactions
return this actions
private void setupgenerators final class claz
final method methods   claz getdeclaredmethods
final list defaultmethods    list defaultgroovymethodsmap get claz
final list defaultstaticmethods    list defaultgroovystaticmethodsmap get claz
if  defaultmethods    null
this generators addall defaultmethods
if  defaultstaticmethods    null
this generators addall defaultstaticmethods
for  int i   0  i    methods length  i
final method method   methods
final int methodmodifiers   method getmodifiers
if   methodmodifiers   modifier public     0
if   methodmodifiers   modifier static     0
this generators add new staticmethodgenerator method
else
this generators add new instancemethodgenerator method
else if   methodmodifiers   modifier protected     0
this generators add new reflectionmethodgenerator method
if  claz    object class
final class superclass   claz getsuperclass
if  superclass    null
this generators addall metaclassactionsgenerator getactionsinfo superclass  generators
final class interfaces   claz getinterfaces
for  int i   0  i    interfaces length  i
this generators addall metaclassactionsgenerator getactionsinfo interfaces  generators
collections sort this generators  new comparator
public int compare final object lhs  final object rhs
final int lhsnumberofparameters     methodgenerator lhs  getnumberofparameters
final int rhsnumberofparameters     methodgenerator rhs  getnumberofparameters
if  lhsnumberofparameters     rhsnumberofparameters
final string lhsname     methodgenerator lhs  getname
final string rhsname     methodgenerator rhs  getname
return lhsname compareto rhsname
else if  lhsnumberofparameters  < rhsnumberofparameters
return  1
else
return 1
if  this generators size   > 1
methodgenerator g1    methodgenerator this generators get this generators size     1
for  int i   this generators size     2  i >  1   i
final methodgenerator g2    methodgenerator this generators get i
if  g1 isoverloaded g2
this generators remove i   1
g1   g1 processoverloaded claz  g2
this generators set i  g1
else
g1   g2
private string generatejavafile final class claz
final stringbuffer code   new stringbuffer
generatestartoffile claz  code
final iterator iter   this generators iterator
int methodindex   0
while  iter hasnext
final methodgenerator gen    methodgenerator iter next
code append gen generatedeclaration methodindex
generateinvokemethod claz  code
generateendoffile claz  code
return code tostring
private void addmethod final set methodset  final map methodmap  final list methods
final iterator methoditerator   methods iterator
while  methoditerator hasnext
final metamethod method    metamethod methoditerator next
final string name   method getname
methodset add name
list methodlist    list methodmap get name
if  methodlist    null
methodlist   new linkedlist
methodmap put name  methodlist
methodlist add method
private void generatestartoffile final class claz  final stringbuffer code
final package pack   claz getpackage
final string packagename    pack    null  ?         pack getname
code append    append packagename  append
code append
code append
code append
code append    append claz getsimplename    append
private void generateinvokemethod final class claz  final stringbuffer code
code append
code append
if  this generators size      0
final list generatorsubset   new linkedlist
methodgenerator firstgenerator    methodgenerator this generators get 0
int currentargslength   firstgenerator getnumberofparameters
char firstchar   firstgenerator getname   charat 0
final iterator iter   this generators iterator
while  iter hasnext
final methodgenerator generator    methodgenerator iter next
if  currentargslength    generator getnumberofparameters
generatorsubset add generator
else
generatecalls claz  code  currentargslength  generatorsubset
currentargslength   generator getnumberofparameters
generatecalls claz  code  currentargslength  generatorsubset
code setlength code length     6       chop the trailing
code append
code append
private void generatecalls final class claz  final stringbuffer code  final int currentargslength  final list generatorsubset
if  generatorsubset size      0
code append    append currentargslength  append
code append
boolean firstcase   true
final iterator iter1   generatorsubset iterator
char fc   0
while  iter1 hasnext
final methodgenerator generator1    methodgenerator iter1 next
final string name   generator1 getname
if  fc    name charat 0
if  firstcase
firstcase   false
else
code append
code append
code append
fc   name charat 0
code append    append fc  append
code append
code append generator1 generatecall claz
code append
else
code append
code append generator1 generatecall claz
code append
code append
code append
code append
code append
code append
code append
code append
generatorsubset clear
private void generateendoffile final class claz  final stringbuffer code
code append