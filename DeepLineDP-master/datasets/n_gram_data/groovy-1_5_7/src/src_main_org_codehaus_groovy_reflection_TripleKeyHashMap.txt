/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy reflection
public class triplekeyhashmap extends complexkeyhashmap
public static class entry extends complexkeyhashmap entry
public object key1  key2  key3
public final object get object key1  object key2  object key3
int h   hash  31  31 key1 hashcode   key2 hashcode    key3 hashcode
complexkeyhashmap entry e   table
for    e    null  e   e next
if  e hash    h    checkequals  entry  e  key1  key2  key3
return e
return null
public boolean checkequals entry e  object key1  object key2  object key3
return e key1 equals key1     e key2 equals key2     e key3 equals key3
public entry getorput object key1  object key2  object key3
int h   hash  31  31 key1 hashcode   key2 hashcode    key3 hashcode
final int index   h    table length   1
complexkeyhashmap entry e   table
for    e    null  e   e next
if  e hash    h    checkequals  entry  e  key1  key2  key3
return  entry  e
entry entry   createentry
entry next   table
entry hash   h
entry key1   key1
entry key2   key2
entry key3   key3
table    entry
if     size    threshold
resize 2 table length
return entry
public entry createentry
return new entry
public final complexkeyhashmap entry remove object key1  object key2  object key3
int h   hash  31  31 key1 hashcode   key2 hashcode    key3 hashcode
int index   h    table length  1
for  complexkeyhashmap entry e   table   prev   null  e    null  prev   e  e   e next
if  e hash    h    checkequals  entry  e  key1  key2  key3
if  prev    null
table    e next
else
prev next   e next
size
e next   null
return e
return null