/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy runtime typehandling
import java io serializable
import java math bigdecimal
import java math biginteger
import java util weakhashmap
/*
* class for calculating "distances" between classes. such a distance
* is not a real distance to something but should be seen as the order
* classes and interfaces are choosen for method selection. the class
* will keep a weak cache and recalculate the distances on demand.
*/
public class classdistance
private static final weakhashmap class_distances
private static class entry
private static class linearentry  extends entry
class entries
void concat class c linearentry le
entries   new class
system arraycopy c 0 entries 0 c length
system arraycopy le entries 0 entries c length le entries length
void concat class c linearentry le
entries   new class
entries   c
system arraycopy le entries 0 entries 1 le entries length
static
class_distances   new weakhashmap
initialpopulate
private static void initialpopulate
// int, double, byte, float, biginteger, bigdecimal, long, short
// gstring, char
linearentry object   new linearentry
object entries   new class object class
class_distances put object class object
linearentry number   new linearentry
number concat new class number class serializable class  object
class_distances put number class number
linearentry compareablenumber   new linearentry
compareablenumber concat comparable class number
linearentry binteger   new linearentry
binteger concat new class biginteger class  bigdecimal class   compareablenumber
class_distances put biginteger class object
linearentry bdec   new linearentry
binteger concat new class bigdecimal class  biginteger class   compareablenumber
class_distances put bigdecimal class object
// byte:
linearentry start   new linearentry
start entries    new class
byte class  byte class  short class  short class
int class  integer class  long class  long class
biginteger class
float class  float class   double class  double class
bigdecimal class
number class object class
class_distances put byte class start
// short:
start   new linearentry
start entries    new class
short class  short class
int class  integer class  long class  long class
biginteger class
float class  float class   double class  double class
bigdecimal class
number class object class
class_distances put short class start
// int:
start   new linearentry
start entries    new class
int class  integer class  long class  long class
biginteger class
float class  float class   double class  double class
bigdecimal class
number class object class
class_distances put int class start
// long:
start   new linearentry
start entries    new class
long class  long class
biginteger class
float class  float class   double class  double class
bigdecimal class
number class object class
class_distances put long class start
// biginteger:
start   new linearentry
start entries    new class
biginteger class
float class  float class   double class  double class
bigdecimal class
number class object class
class_distances put long class start
// float:
start   new linearentry
start entries    new class
byte class  byte class  short class  short class
int class  integer class  long class  long class
biginteger class
float class  float class   double class  double class
bigdecimal class
number class object class
class_distances put float class start
// double:
start   new linearentry
start entries    new class
double class
double class  bigdecimal class
number class object class
class_distances put double class start
private static synchronized void popultate class clazz
if  class_distances get clazz     null  return