/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast
import java util iterator
import java util list
import java util map
import org codehaus groovy ast expr expression
import org codehaus groovy ast stmt assertstatement
import org codehaus groovy ast stmt blockstatement
import org codehaus groovy ast stmt breakstatement
import org codehaus groovy ast stmt casestatement
import org codehaus groovy ast stmt catchstatement
import org codehaus groovy ast stmt continuestatement
import org codehaus groovy ast stmt dowhilestatement
import org codehaus groovy ast stmt expressionstatement
import org codehaus groovy ast stmt forstatement
import org codehaus groovy ast stmt ifstatement
import org codehaus groovy ast stmt returnstatement
import org codehaus groovy ast stmt statement
import org codehaus groovy ast stmt switchstatement
import org codehaus groovy ast stmt synchronizedstatement
import org codehaus groovy ast stmt throwstatement
import org codehaus groovy ast stmt trycatchstatement
import org codehaus groovy ast stmt whilestatement
import org codehaus groovy control sourceunit
import org codehaus groovy control messages syntaxerrormessage
import org codehaus groovy syntax syntaxexception
public abstract class classcodevisitorsupport extends codevisitorsupport implements groovyclassvisitor
public void visitclass classnode node
visitannotations node
node visitcontents this
list list   node getobjectinitializerstatements
for  iterator iter   list iterator    iter hasnext
statement element    statement  iter next
element visit this
public void visitannotations annotatednode node
map annotionmap   node getannotations
if  annotionmap isempty    return
iterator it   annotionmap values   iterator
while  it hasnext
annotationnode an    annotationnode  it next
//skip builtin properties
if  an isbuiltin    continue
for  iterator iter   an getmembers   entryset   iterator    iter hasnext
map entry member    map entry  iter next
expression membervalue    expression  member getvalue
membervalue visit this
protected void visitclasscodecontainer statement code
if  code    null  code visit this
protected void visitconstructorormethod methodnode node  boolean isconstructor
visitannotations node
statement code   node getcode
visitclasscodecontainer code
public void visitconstructor constructornode node
visitconstructorormethod node true
public void visitmethod methodnode node
visitconstructorormethod node false
public void visitfield fieldnode node
visitannotations node
expression init   node getinitialexpression
if  init    null  init visit this
public void visitproperty propertynode node
visitannotations node
statement statement   node getgetterblock
visitclasscodecontainer statement
statement   node getsetterblock
visitclasscodecontainer statement
expression init   node getinitialexpression
if  init    null  init visit this
protected void adderror string msg  astnode expr
int line   expr getlinenumber
int col   expr getcolumnnumber
sourceunit source   getsourceunit
source geterrorcollector   adderrorandcontinue
new syntaxerrormessage new syntaxexception msg      line  col   source
protected abstract sourceunit getsourceunit
protected void visitstatement statement statement
public void visitassertstatement assertstatement statement
visitstatement statement
super visitassertstatement statement
public void visitblockstatement blockstatement block
visitstatement block
super visitblockstatement block
public void visitbreakstatement breakstatement statement
visitstatement statement
super visitbreakstatement statement
public void visitcasestatement casestatement statement
visitstatement statement
super visitcasestatement statement
public void visitcatchstatement catchstatement statement
visitstatement statement
super visitcatchstatement statement
public void visitcontinuestatement continuestatement statement
visitstatement statement
super visitcontinuestatement statement
public void visitdowhileloop dowhilestatement loop
visitstatement loop
super visitdowhileloop loop
public void visitexpressionstatement expressionstatement statement
visitstatement statement
super visitexpressionstatement statement
public void visitforloop forstatement forloop
visitstatement forloop
super visitforloop forloop
public void visitifelse ifstatement ifelse
visitstatement ifelse
super visitifelse ifelse
public void visitreturnstatement returnstatement statement
visitstatement statement
super visitreturnstatement statement
public void visitswitch switchstatement statement
visitstatement statement
super visitswitch statement
public void visitsynchronizedstatement synchronizedstatement statement
visitstatement statement
super visitsynchronizedstatement statement
public void visitthrowstatement throwstatement statement
visitstatement statement
super visitthrowstatement statement
public void visittrycatchfinally trycatchstatement statement
visitstatement statement
super visittrycatchfinally statement
public void visitwhileloop whilestatement loop
visitstatement loop
super visitwhileloop loop