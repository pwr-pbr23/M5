/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy runtime metaclass
import org codehaus groovy reflection cachedclass
import org codehaus groovy reflection cachedmethod
/**
* base class for newinstancemetamethod and newstaticmetamethod
*/
public class newmetamethod extends reflectionmetamethod
protected static final cachedclass empty_type_array
protected cachedclass bytecodeparametertypes
public newmetamethod cachedmethod method
super method
bytecodeparametertypes   method getparametertypes
int size   bytecodeparametertypes length
cachedclass logicalparametertypes
if  size <  1
logicalparametertypes   empty_type_array
else
logicalparametertypes   new cachedclass
system arraycopy bytecodeparametertypes  1  logicalparametertypes  0  size
setparameterstypes logicalparametertypes
public cachedclass getdeclaringclass
return getbytecodeparametertypes
public cachedclass getbytecodeparametertypes
return bytecodeparametertypes
public cachedclass getownerclass
return getbytecodeparametertypes