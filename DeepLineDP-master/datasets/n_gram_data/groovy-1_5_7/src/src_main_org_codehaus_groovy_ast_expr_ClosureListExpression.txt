/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast expr
import java util arraylist
import java util iterator
import java util list
import org codehaus groovy ast groovycodevisitor
import org codehaus groovy ast variablescope
/**
* this class rerpresents a list of expressions used to
* create closures. example:
* <code>
* def foo = (1;2;;)
* </code>
* the right side is a closurelistexpression consisting of
* two constantexpressions for the values 1 and 2, and two
* emptystatement entries. the closurelistexpression defines a new
* variable scope. all created closures share this scope.
*
*
* @author jochen theodorou
*/
public class closurelistexpression extends listexpression
private variablescope scope
public closurelistexpression list expressions
super expressions
scope   new variablescope
public closurelistexpression
this new arraylist 3
public void visit groovycodevisitor visitor
visitor visitclosurelistexpression this
public expression transformexpression expressiontransformer transformer
expression ret   new closurelistexpression transformexpressions getexpressions    transformer
ret setsourceposition this
return ret
public void setvariablescope variablescope scope
this scope   scope
public variablescope getvariablescope
return scope
public string gettext
stringbuffer buffer   new stringbuffer
boolean first   true
for  iterator iter   getexpressions   iterator    iter hasnext
if  first
first   false
else
buffer append
buffer append   expression iter next    gettext
buffer append
return buffer tostring