/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast
import org codehaus groovy ast expr expression
/**
* interface to mark a astnode as variable. typically these are
* variableexpression, fieldnode, propertynode and parameter
*
* @author jochen theodorou
*/
public interface variable
/**
* the type of the variable
*/
classnode gettype
/**
* the type before wrapping primitives type of the variable
*/
classnode getorigintype
/**
* the name of the variable
*/
string getname
/**
* expression used to initialize the variable or null of there
* is no initialization.
*/
expression getinitialexpression
/**
* returns true if there is an initialization expression
*/
boolean hasinitialexpression
/**
* returns true if this variable is used in a static context.
* a static context is any static initializer block, when this variable
* is declared as static or when this variable is used in a static method
*/
boolean isinstaticcontext
boolean isdynamictyped
boolean isclosuresharedvariable
void setclosuresharedvariable boolean inclosure