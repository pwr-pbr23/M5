/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy runtime
import java util arraylist
import java util collections
import java util list
/**
* an abstract base class for a key used for comparators and map keys to lookup a method by
* name and parameter types
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public abstract class methodkey
private int hash
private string name
private class sender
private boolean iscalltosuper
public methodkey class sender  string name  boolean iscalltosuper
this sender   sender
this name   name
this iscalltosuper   iscalltosuper
/**
* creates an immutable copy that we can cache.
*/
public methodkey createcopy
int size   getparametercount
class paramtypes   new class
for  int i   0  i < size  i
paramtypes   getparametertype i
return new defaultmethodkey sender  name  paramtypes  iscalltosuper
public boolean equals object that
if  this    that
return true
else if  that instanceof methodkey
return equals  methodkey  that
return false
public boolean equals methodkey that
int size
if  sender  that sender  return false
if  iscalltosuper  that iscalltosuper  return false
if   name equals that name   return false
if   size   getparametercount       that getparametercount    return false
for  int i   0  i < size  i
if  getparametertype i     that getparametertype i
return false
return true
public int hashcode
if  hash    0
hash   createhashcode
if  hash    0
hash   0xcafebabe
return hash
public string tostring
return super tostring         name       getparamtertypes
public string getname
return name
public list getparamtertypes
int size   getparametercount
if  size <  0
return collections empty_list
list params   new arraylist size
for  int i   0  i < size  i
params add getparametertype i
return params
public abstract int getparametercount
public abstract class getparametertype int index
protected int createhashcode
int answer   name hashcode
int size   getparametercount
/** @todo we should use the real josh bloch algorithm here */
// can't remember the exact josh bloch algorithm and i've not got the book handy
// but its something like this iirc
for  int i   0  i < size  i
answer    37
answer    1   getparametertype i  hashcode
answer    37
answer    iscalltosuper?1 0
answer    37
answer    1   sender hashcode
return answer