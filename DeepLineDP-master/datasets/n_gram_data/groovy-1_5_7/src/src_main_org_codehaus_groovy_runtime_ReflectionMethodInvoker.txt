/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy runtime
import java lang reflect method
/**
* utility class to call methods through reflection, and falls through using the <code>invoker</code> to call the method if it fails.
* the class is particularly useful for groovy classes implementing <code>groovyintercpetable</code>,
* since it is not possible to call any method from this class,
* because it is intercepted by the <code>invokemethod()</code> method.
*
* @author guillaume laforge
*/
public class reflectionmethodinvoker
/**
* invoke a method through reflection.
* falls through to using the invoker to call the method in case the reflection call fails..
*
* @param object the object on which to invoke a method
* @param methodname the name of the method to invoke
* @param parameters the parameters of the method call
* @return the result of the method call
*/
public static object invoke object object  string methodname  object parameters
try
class classtypes   new class
for  int i   0  i < classtypes length  i
classtypes   parameters getclass
method method   object getclass   getmethod methodname  classtypes
return method invoke object  parameters
catch  throwable t
return invokerhelper invokemethod object  methodname   parameters