/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy tools javac
import groovy lang groovyclassloader
import java util linkedlist
import java util iterator
import java util map
import java io file
import java io filenotfoundexception
import org codehaus groovy ast classnode
import org codehaus groovy ast modulenode
import org codehaus groovy classgen generatorcontext
import org codehaus groovy control compilationfailedexception
import org codehaus groovy control compilationunit
import org codehaus groovy control compilerconfiguration
import org codehaus groovy control phases
import org codehaus groovy control sourceunit
/**
* created by intellij idea.
* user: alex.tkachman
* date: may 31, 2007 time: 6:48:28 pm
*/
public class javaawarecompilationunit extends compilationunit
private linkedlist javasources     java sources
private javastubgenerator stubgenerator
private javacompilerfactory compilerfactory   new javaccompilerfactory
private file generationgoal
private boolean keepstubs
public javaawarecompilationunit compilerconfiguration configuration
this configuration null
public javaawarecompilationunit compilerconfiguration configuration  groovyclassloader groovyclassloader
super configuration null groovyclassloader
javasources   new linkedlist
map options   configuration getjointcompilationoptions
generationgoal    file  options get
boolean usejava5   configuration gettargetbytecode   equals compilerconfiguration post_jdk5
stubgenerator   new javastubgenerator generationgoal false usejava5
keepstubs   boolean true equals options get
addphaseoperation new primaryclassnodeoperation
public void call sourceunit source  generatorcontext context  classnode node  throws compilationfailedexception
if  javasources size      0  new javaawareresolvevisitor javaawarecompilationunit this  startresolving node source
phases conversion
addphaseoperation new primaryclassnodeoperation
public void call sourceunit source  generatorcontext context  classnode classnode  throws compilationfailedexception
try
if  javasources size      0  stubgenerator generateclass classnode
catch  filenotfoundexception fnfe
source addexception fnfe
phases conversion
public void gotophase int phase  throws compilationfailedexception
super gotophase phase
// compile java and clean up
if  phase  phases semantic_analysis    javasources size  >0
iterator modules   getast   getmodules   iterator
while  modules hasnext
modulenode module    modulenode  modules next
module setimportsresolved false
try
javacompiler compiler   compilerfactory createcompiler getconfiguration
compiler compile javasources  this
finally
if   keepstubs  stubgenerator clean
javasources clear
public void configure compilerconfiguration configuration
super configure configuration
// groovyclassloader should be able to find classes compiled from java
// sources
file targetdir   configuration gettargetdirectory
if  targetdir    null
final string classoutput   targetdir getabsolutepath
getclassloader   addclasspath classoutput
private void addjavasource file file
string path   file getabsolutepath
for  iterator iter   javasources iterator    iter hasnext
string su    string  iter next
if  path equals su
return
javasources add path
public void addsources string paths
for  int i   0  i < paths length  i
file file   new file paths
if  file getname   endswith
addjavasource file
else
addsource file
public void addsources file files
for  int i   0  i < files length  i
if  files getname   endswith
addjavasource files
else
addsource files
public javacompilerfactory getcompilerfactory
return compilerfactory
public void setcompilerfactory javacompilerfactory compilerfactory
this compilerfactory   compilerfactory