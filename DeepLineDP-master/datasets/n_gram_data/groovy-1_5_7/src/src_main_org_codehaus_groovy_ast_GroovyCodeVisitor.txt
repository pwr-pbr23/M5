/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast
import org codehaus groovy ast expr
import org codehaus groovy ast stmt
/**
* an implementation of the visitor pattern for working with astnodes
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public interface groovycodevisitor
// statements
//-------------------------------------------------------------------------
void visitblockstatement blockstatement statement
void visitforloop forstatement forloop
void visitwhileloop whilestatement loop
void visitdowhileloop dowhilestatement loop
void visitifelse ifstatement ifelse
void visitexpressionstatement expressionstatement statement
void visitreturnstatement returnstatement statement
void visitassertstatement assertstatement statement
void visittrycatchfinally trycatchstatement finally1
void visitswitch switchstatement statement
void visitcasestatement casestatement statement
void visitbreakstatement breakstatement statement
void visitcontinuestatement continuestatement statement
void visitthrowstatement throwstatement statement
void visitsynchronizedstatement synchronizedstatement statement
void visitcatchstatement catchstatement statement
// expressions
//-------------------------------------------------------------------------
void visitmethodcallexpression methodcallexpression call
void visitstaticmethodcallexpression staticmethodcallexpression expression
void visitconstructorcallexpression constructorcallexpression expression
void visitternaryexpression ternaryexpression expression
void visitshortternaryexpression elvisoperatorexpression expression
void visitbinaryexpression binaryexpression expression
void visitprefixexpression prefixexpression expression
void visitpostfixexpression postfixexpression expression
void visitbooleanexpression booleanexpression expression
void visitclosureexpression closureexpression expression
void visittupleexpression tupleexpression expression
void visitmapexpression mapexpression expression
void visitmapentryexpression mapentryexpression expression
void visitlistexpression listexpression expression
void visitrangeexpression rangeexpression expression
void visitpropertyexpression propertyexpression expression
void visitattributeexpression attributeexpression attributeexpression
void visitfieldexpression fieldexpression expression
void visitmethodpointerexpression methodpointerexpression expression
void visitconstantexpression constantexpression expression
void visitclassexpression classexpression expression
void visitvariableexpression variableexpression expression
void visitdeclarationexpression declarationexpression expression
void visitregexexpression regexexpression expression
void visitgstringexpression gstringexpression expression
void visitarrayexpression arrayexpression expression
void visitspreadexpression spreadexpression expression
void visitspreadmapexpression spreadmapexpression expression
void visitnotexpression notexpression expression
void visitunaryminusexpression unaryminusexpression expression
void visitunaryplusexpression unaryplusexpression expression
void visitbitwisenegationexpression bitwisenegationexpression expression
void visitcastexpression castexpression expression
void visitargumentlistexpression argumentlistexpression expression
void visitclosurelistexpression closurelistexpression closurelistexpression