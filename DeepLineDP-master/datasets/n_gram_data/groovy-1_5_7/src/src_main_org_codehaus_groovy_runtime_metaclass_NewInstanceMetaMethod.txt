/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy runtime metaclass
import org codehaus groovy reflection cachedmethod
import java lang reflect modifier
/**
* a metamethod implementation where the underlying method is really a static
* helper method on some class but it appears to be an instance method on a class.
*
* this implementation is used to add new methods to the jdk writing them as normal
* static methods with the first parameter being the class on which the method is added.
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public class newinstancemetamethod extends newmetamethod
public newinstancemetamethod cachedmethod method
super method
public boolean isstatic
return false
public int getmodifiers
// lets clear the static bit
return modifier public
public object invoke object object  object arguments
// we need to cheat using the type
int size   arguments length
object newarguments   new object
newarguments   object
system arraycopy arguments  0  newarguments  1  size
return super invoke null  newarguments