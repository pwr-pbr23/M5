/*
* copyright 2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy binding
import groovy lang groovyobjectsupport
import groovy lang readonlypropertyexception
import java util arraylist
import java util hashmap
import java util iterator
import java util list
import java util map
/**
* @author <a href="mailto:shemnon@yahoo.com">danno ferrin</a>
* @version $revision$
* @since groovy 1.1
*/
public class modelbinding extends groovyobjectsupport implements bindingupdatable
object model
boolean bound
final map  <string  propertybinding>   propertybindings   new hashmap  <string  propertybinding>
final list  <fullbinding>   generatedbindings   new arraylist  <fullbinding>
public modelbinding object model
this model   model
public object getmodel
return model
public synchronized void setmodel object model
// should we use a finer grained lock than this?
this model   model
//todo see if bound, mark if so
unbind
iterator iter   propertybindings values   iterator
while  iter hasnext
propertybinding iter next    setbean model
rebind
update
public object getproperty string property
propertybinding pb
synchronized  propertybindings
// should we verify the property is valid?
object o   propertybindings get property
if  o    null
o   new modelbindingpropertybinding model  property
propertybindings put property  o
pb    propertybinding o
fullbinding fb   pb createbinding pb  null
if  bound
fb bind
return fb
public void setproperty string property  object value
throw new readonlypropertyexception property  model getclass
public void bind
synchronized  generatedbindings
if   bound
bound   true
iterator iter   generatedbindings iterator
while  iter hasnext
fullbinding iter next    bind
// should we trap exceptions and do an each?
public void unbind
synchronized  generatedbindings
if  bound
bound   false
iterator iter   generatedbindings iterator
while  iter hasnext
fullbinding iter next    unbind
// should we trap exceptions and do an each?
public void rebind
synchronized  generatedbindings
if  bound
iterator iter   generatedbindings iterator
while  iter hasnext
fullbinding iter next    rebind
// should we trap exceptions and do an each?
public void update
synchronized  generatedbindings
iterator iter   generatedbindings iterator
while  iter hasnext
fullbinding iter next    update
// should we trap exceptions and do an each?
public void reverseupdate
synchronized  generatedbindings
iterator iter   generatedbindings iterator
while  iter hasnext
fullbinding iter next    reverseupdate
// should we trap exceptions and do an each?
class modelbindingpropertybinding extends propertybinding
public modelbindingpropertybinding object bean  string propertyname
super bean  propertyname
public fullbinding createbinding sourcebinding source  targetbinding target
fullbinding fb   super createbinding source  target
generatedbindings add fb
return fb