/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy control io
import java io
import java nio charset charset
import org codehaus groovy control compilerconfiguration
/**
*  a readersource for source files.
*
*  @author <a href="mailto:cpoirier@dreaming.org">chris poirier</a>
*  @version $id$
*/
public class filereadersource extends abstractreadersource
private file file      the file from which we produce readers
private final charset utf8   charset forname
/**
*  creates the readersource from a file descriptor.
* @param file script source file
* @param configuration configuration for compiling source
*/
public filereadersource  file file  compilerconfiguration configuration
super  configuration
this file   file
/**
*  returns a new reader on the underlying source object.
*/
public reader getreader   throws ioexception
// we want to remove the bom windows adds from a file if the encoding is utf-8
// in other cases we depend on the charsets
charset cs   charset forname configuration getsourceencoding
inputstream in   new bufferedinputstream new fileinputstream file
if  utf8 name   equalsignorecase cs name
in mark 3
boolean hasbom   true
try
int i   in read
hasbom    i    0xef
i   in read
hasbom    i    0xbb
i   in read
hasbom    i    0xff
catch  ioexception ioe
hasbom  false
if   hasbom  in reset
return new inputstreamreader  in  cs