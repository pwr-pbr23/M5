/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy tools
import java io printstream
import java io printwriter
import org codehaus groovy groovyexceptioninterface
import org codehaus groovy control compilationfailedexception
import groovy lang groovyruntimeexception
/**
*  provides services for reporting compilation errors to the
*  user.  primary entry point is <code>write()</code>.
*
*  @author <a href="mailto:cpoirier%20at%20tapestry_os%20dot%20org">chris poirier</a>
*  @version $revision$
*/
public class errorreporter
private throwable   base       null        the exception on which to report
private boolean     debug      false       if true  stack traces are always output
private object      output     null        the stream writer to which to output
/**
*  configures a new reporter.  default mode is not to report a stack trace unless
*  the error was not of one of the supported types.
*
*  @param e  the exception on which to report
*/
public errorreporter  throwable e
this base       e
/**
*  configures a new reporter.
*
*  @param e      the exception on which to report
*  @param debug  if set, stack traces will be output for all reports
*/
public errorreporter  throwable e  boolean debug
this base    e
this debug   debug
/**
*  writes the error to the specified <code>printstream</code>.
*/
public void write  printstream stream
this output   stream
dispatch  base  false
stream flush
/**
*  writes the error to the specified <code>printwriter</code>.
*/
public void write  printwriter writer
this output   writer
dispatch  base  false
writer flush
/**
*  runs the report once all initialization is complete.
*/
protected void dispatch  throwable object  boolean child
if  object instanceof compilationfailedexception
report   compilationfailedexception object  child
else if  object instanceof groovyexceptioninterface
report   groovyexceptioninterface object  child
else if  object instanceof groovyruntimeexception
report   groovyruntimeexception object  child
else if  object instanceof exception
report   exception object  child
else
report  object  child
//---------------------------------------------------------------------------
// reporting routines
/**
*  for compilationfailedexception.
*/
protected void report  compilationfailedexception e  boolean child
println  e tostring
stacktrace  e  false
/**
*  for groovyexception.
*/
protected void report  groovyexceptioninterface e  boolean child
println    exception e  getmessage
stacktrace   exception e  false
/**
*  for exception.
*/
protected void report  exception e  boolean child
println  e getmessage
stacktrace  e  false
/**
*  for everything else.
*/
protected void report  throwable e  boolean child
println      e getmessage
stacktrace  e  true
//---------------------------------------------------------------------------
// general support routines
/**
*  prints a line to the underlying <code>printstream</code>
*/
protected void println  string line
if  output instanceof printstream
printstream output  println  line
else
printwriter output  println  line
protected void println  stringbuffer line
if  output instanceof printstream
printstream output  println  line
else
printwriter output  println  line
/**
*  displays an exception's stack trace, if <code>debug</code> or
*  <code>always</code>.
*/
protected void stacktrace  throwable e  boolean always
if  debug    always
println
if  output instanceof printstream
e printstacktrace   printstream output
else
e printstacktrace   printwriter output