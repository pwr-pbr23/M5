/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy runtime metaclass
import groovy lang metamethod
import org codehaus groovy reflection cachedclass
import org codehaus groovy reflection fastarray
import org codehaus groovy reflection singlekeyhashmap
import java util nosuchelementexception
public class metamethodindex
public singlekeyhashmap methodheaders   new singlekeyhashmap
private cachedclass thecachedclass
public static class header
public entry head
class cls
public int clshashcode31
public class subclass
public header class cls
this  cls  null
public header class cls  class subclass
this cls   cls
this subclass   subclass
this clshashcode31   31   cls hashcode
public static class cacheentry
public class  params
public metamethod method
public static class entry
public int hash
public entry nexthashentry  nextclassentry
public string name
public class cls
public object methods  methodsforsuper  staticmethods
public cacheentry cachedmethod  cachedmethodforsuper  cachedstaticmethod
public string tostring
return     name       cls getname
public metamethodindex cachedclass thecachedclass
this thecachedclass   thecachedclass
init default_capacity
cachedclass last   null
if   thecachedclass isinterface
for  cachedclass c   thecachedclass  c    null  c   c getcachedsuperclass
final singlekeyhashmap entry e   methodheaders getorput c gettheclass
e value   new header  c gettheclass    last    null ? null   last gettheclass
last   c
else
final singlekeyhashmap entry e   methodheaders getorput object class
e value   new header  object class  thecachedclass gettheclass
protected entry table
protected static final int default_capacity   32
protected static final int minimum_capacity   4
protected static final int maximum_capacity   1 << 28
protected int size
protected transient int threshold
public static int hash int h
h    ~ h << 9
h ^   h >>> 14
h     h << 4
h ^   h >>> 10
return h
public int size
return size
public boolean isempty
return size    0
public void clear
object tab   table
for  int i   0  i < tab length  i
tab   null
size   0
public void init int initcapacity
threshold    initcapacity   6    8
table   new entry
public void resize int newlength
entry oldtable   table
int oldlength   table length
entry newtable   new entry
for  int j   0  j < oldlength  j
for  entry e   oldtable  e    null
entry next   e nexthashentry
int index   e hash    newlength   1
e nexthashentry   newtable
newtable   e
e   next
table   newtable
threshold    6   newlength    8
public interface entryiterator
boolean hasnext
entry next
public entry gettable
return table
public entryiterator getentrysetiterator
return new entryiterator
entry next        next entry to return
int index            current slot
entry current        current entry
entry t   table
int i   t length
entry n   null
if  size    0       advance to first entry
while  i > 0     n   t     null
next   n
index   i
public boolean hasnext
return next    null
public entry next
return nextentry
entry nextentry
entry e   next
if  e    null
throw new nosuchelementexception
entry n   e nexthashentry
entry t   table
int i   index
while  n    null    i > 0
n   t
index   i
next   n
return current   e
public final entry getmethods class cls  string name
int h   hash 31   cls hashcode     name hashcode
entry e   table
for    e    null  e   e nexthashentry
if  e hash    h    cls    e cls     e name    name    e name equals name
return e
return null
public entry getorputmethods string name  header header
final class cls   header cls
int h   hash header clshashcode31   name hashcode
final entry t   table
final int index   h    t length   1
entry e   t
for    e    null  e   e nexthashentry
if  e hash    h    cls    e cls     e name    name    e name equals name
return e
entry entry   new entry
entry nexthashentry   t
entry hash   h
entry name   name intern
entry cls   cls
t   entry
entry nextclassentry   header head
header head   entry
if    size    threshold
resize 2   t length
return entry
public header getheader class cls
header header
final singlekeyhashmap entry head   methodheaders getorput cls
if  head value    null
head value   new header cls
header    header  head value
return header
public void copynonprivatemethods class from  class to
copynonprivatemethods getheader from   getheader to
public void copynonprivatemethods header from  header to
for  entry e   from head  e    null  e   e nextclassentry
copynonprivatemethods e  to
public void copyallmethodstosuper header from  header to
for  entry e   from head  e    null  e   e nextclassentry
copyallmethodstosuper e  to
public void copynonprivatemethodsfromsuper header from
for  entry e   from head  e    null  e   e nextclassentry
copynonprivatemethodsfromsuper e
private void copynonprivatemethods entry from  header to
object oldlistormethod   from methods
if  oldlistormethod instanceof fastarray
fastarray oldlist    fastarray  oldlistormethod
entry e   null
int len1   oldlist size
object list   oldlist getarray
for  int j   0  j    len1    j
metamethod method    metamethod  list
if  method isprivate    continue
if  e    null
e   getorputmethods from name  to
e methods   addmethodtolist e methods  method
else
metamethod method    metamethod  oldlistormethod
if   method isprivate
entry e   getorputmethods from name  to
e methods   addmethodtolist e methods  method
private void copyallmethodstosuper entry from  header to
object oldlistormethod   from methods
if  oldlistormethod instanceof fastarray
fastarray oldlist    fastarray  oldlistormethod
entry e   null
int len1   oldlist size
object list   oldlist getarray
for  int j   0  j    len1    j
metamethod method    metamethod  list
if  e    null
e   getorputmethods from name  to
e methodsforsuper   addmethodtolist e methodsforsuper  method
else
metamethod method    metamethod  oldlistormethod
entry e   getorputmethods from name  to
e methodsforsuper   addmethodtolist e methodsforsuper  method
private void copynonprivatemethodsfromsuper entry e
object oldlistormethod   e methodsforsuper
if  oldlistormethod    null
return
if  oldlistormethod instanceof fastarray
fastarray oldlist    fastarray  oldlistormethod
int len1   oldlist size
object list   oldlist getarray
for  int j   0  j    len1    j
metamethod method    metamethod  list
if  method isprivate    continue
e methods   addmethodtolist e methods  method
else
metamethod method    metamethod  oldlistormethod
if   method isprivate
e methods   addmethodtolist e methods  method
public void copynonprivatemethodsdown class from  class to
copynonprivatenonnewmetamethods getheader from   getheader to
public void copynonprivatenonnewmetamethods header from  header to
for  entry e   from head  e    null  e   e nextclassentry
copynonprivatenonnewmetamethods e  to
private void copynonprivatenonnewmetamethods entry from  header to
object oldlistormethod   from methods
if  oldlistormethod    null
return
if  oldlistormethod instanceof fastarray
fastarray oldlist    fastarray  oldlistormethod
entry e   null
int len1   oldlist size
object list   oldlist getarray
for  int j   0  j    len1    j
metamethod method    metamethod  list
if  method instanceof newmetamethod    method isprivate    continue
if  e    null
e   getorputmethods from name  to
e methods   addmethodtolist e methods  method
else
metamethod method    metamethod  oldlistormethod
if  method instanceof newmetamethod    method isprivate    return
entry e   getorputmethods from name  to
e methods   addmethodtolist e methods  method
public object addmethodtolist object o  metamethod method
if  o    null
return method
if  o instanceof metamethod
metamethod match    metamethod  o
if   ismatchingmethod match  method
fastarray list   new fastarray 2
list add match
list add method
return list
else
if  match isprivate
isnonrealmethod match     match getdeclaringclass   isinterface       method getdeclaringclass   isinterface
// do not overwrite interface methods with instance methods
// do not overwrite private methods
// note: private methods from parent classes are not shown here,
// but when doing the multimethod connection step, we overwrite
// methods of the parent class with methods of a subclass and
// in that case we want to keep the private methods
else
cachedclass methodc   method getdeclaringclass
cachedclass matchc   match getdeclaringclass
if  methodc    matchc
if  isnonrealmethod method
return method
else if   methodc isassignablefrom matchc gettheclass
return method
return o
if  o instanceof fastarray
fastarray list    fastarray  o
int found   findmatchingmethod list  method
if  found     1
list add method
else
metamethod match    metamethod  list get found
if  match  method  return o
if  match isprivate
isnonrealmethod match     match getdeclaringclass   isinterface       method getdeclaringclass   isinterface
// do not overwrite interface methods with instance methods
// do not overwrite private methods
// note: private methods from parent classes are not shown here,
// but when doing the multimethod connection step, we overwrite
// methods of the parent class with methods of a subclass and
// in that case we want to keep the private methods
else
cachedclass  methodc   method getdeclaringclass
cachedclass matchc   match getdeclaringclass
if  methodc    matchc
if  isnonrealmethod method
list set found  method
else if   methodc isassignablefrom matchc gettheclass
list set found  method
return o
private boolean isnonrealmethod metamethod method
return method instanceof newinstancemetamethod
method instanceof newstaticmetamethod
method instanceof closuremetamethod
method instanceof closurestaticmetamethod
private boolean ismatchingmethod metamethod amethod  metamethod method
if  amethod  method  return true
cachedclass params1   amethod getparametertypes
cachedclass params2   method getparametertypes
if  params1 length    params2 length
return false
boolean matches   true
for  int i   0  i < params1 length  i
if  params1    params2
matches   false
break
return matches
private int findmatchingmethod fastarray list  metamethod method
int len   list size
object data   list getarray
for  int j   0  j    len    j
metamethod amethod    metamethod  data
if  ismatchingmethod amethod  method
return j
return  1
public void copymethodstosuper
entry table   this table
int length   table length
for  int j   0  j < length  j
for  entry e   table  e    null  e   e nexthashentry
if  e methods instanceof fastarray
e methodsforsuper     fastarray  e methods  copy
else
e methodsforsuper   e methods
public void copy class c  header index
copy getheader c   index
public void copy header from  header to
for  entry e   from head  e    null  e   e nextclassentry
copyallmethods e  to
private void copyallmethods entry from  header to
object oldlistormethod   from methods
if  oldlistormethod instanceof fastarray
fastarray oldlist    fastarray  oldlistormethod
entry e   null
int len1   oldlist size
object list   oldlist getarray
for  int j   0  j    len1    j
metamethod method    metamethod  list
if  e    null
e   getorputmethods from name  to
e methods   addmethodtolist e methods  method
else
metamethod method    metamethod  oldlistormethod
if   method isprivate
entry e   getorputmethods from name  to
e methods   addmethodtolist e methods  method
public void clearcaches
for  int i   0  i    table length    i
for  entry e   table   e    null  e   e nexthashentry
e cachedmethod   e cachedmethodforsuper   e cachedstaticmethod   null
public void clearcaches string name
for  int i   0  i    table length    i
for  entry e   table   e    null  e   e nexthashentry
if  e name equals name
e cachedmethod   e cachedmethodforsuper   e cachedstaticmethod   null