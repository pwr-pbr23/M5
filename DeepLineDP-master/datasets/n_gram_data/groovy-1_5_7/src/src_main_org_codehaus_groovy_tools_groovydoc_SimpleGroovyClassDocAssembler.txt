/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy tools groovydoc
import java util
import java util regex matcher
import java util regex pattern
import org codehaus groovy antlr groovysourceast
import org codehaus groovy antlr linecolumn
import org codehaus groovy antlr sourcebuffer
import org codehaus groovy antlr parser groovytokentypes
import org codehaus groovy antlr treewalker visitoradapter
import org codehaus groovy groovydoc groovyconstructordoc
import org codehaus groovy groovydoc groovyfielddoc
import antlr collections ast
public class simplegroovyclassdocassembler extends visitoradapter
private stack stack
private map classdocs
private simplegroovyclassdoc currentclassdoc     todo   stack?
private simplegroovyconstructordoc currentconstructordoc     todo   stack?
private simplegroovymethoddoc currentmethoddoc     todo   stack?
private sourcebuffer sourcebuffer
private string packagepath
private pattern previousjavadoccommentpattern
private static final string fs
private list importedclassesandpackages
private list links
public simplegroovyclassdocassembler string packagepath  string file  sourcebuffer sourcebuffer  list links
this sourcebuffer   sourcebuffer
this packagepath   packagepath
this links   links
stack   new stack
classdocs   new hashmap
string classname   file
if  file    null
// todo: replace this simple idea of default class name
int idx   file lastindexof
classname   file substring 0 idx
importedclassesandpackages   new arraylist
importedclassesandpackages add packagepath           everything in this package is automatically imported
importedclassesandpackages.add("groovy/lang/*");     // default imports in groovy, from org.codehaus.groovy.control.resolvevisitor.default_imports
importedclassesandpackages.add("groovy/util/*");     // todo - non groovy source files shouldn't import these, but let us import them for now, it won't hurt...
currentclassdoc = new simplegroovyclassdoc(importedclassesandpackages, classname, links);
currentclassdoc.setfullpathname(packagepath + fs + classname);
classdocs.put(currentclassdoc.getfullpathname(),currentclassdoc);
previousjavadoccommentpattern   pattern compile
public map getgroovyclassdocs
postprocessclassdocs
return classdocs
// step through classdocs and tie up loose ends
private void postprocessclassdocs
iterator classdociterator   classdocs values   iterator
while  classdociterator hasnext
simplegroovyclassdoc classdoc    simplegroovyclassdoc  classdociterator next
// potentially add default constructor to class docs (but not interfaces)
if  classdoc isclass                       todo enums  @interfaces etc
groovyconstructordoc constructors   classdoc constructors
if  constructors    null    constructors length    0       add default constructor to doc
// name of class for the constructor
groovyconstructordoc constructordoc   new simplegroovyconstructordoc classdoc name
// don't forget to tell the class about this default constructor.
classdoc add constructordoc
public void visitinterfacedef groovysourceast t  int visit
currentclassdoc setasinterfacedefinition
public void visitimport groovysourceast t  int visit
if  visit    opening_visit
groovysourceast child   t childoftype groovytokentypes dot
if  child    null
child   t childoftype groovytokentypes ident
string importtextwithslashesinsteadofdots   recursedownimportbranch child
importedclassesandpackages add importtextwithslashesinsteadofdots
public string recursedownimportbranch groovysourceast t
if  t    null
if  t gettype      groovytokentypes dot
groovysourceast firstchild    groovysourceast  t getfirstchild
groovysourceast secondchild    groovysourceast  firstchild getnextsibling
return  recursedownimportbranch firstchild        recursedownimportbranch secondchild
if  t gettype      groovytokentypes ident
return t gettext
if  t gettype      groovytokentypes star
return t gettext
return
public void visitextendsclause groovysourceast t int visit
if  visit    opening_visit
groovysourceast superclassnode   t childoftype groovytokentypes ident
if  superclassnode    null
string superclassname   superclassnode gettext
currentclassdoc setsuperclassname superclassname      un   class name
public void visitclassdef groovysourceast t int visit
if  visit    opening_visit
// todo is this correct for java + groovy src?
string classname   t childoftype groovytokentypes ident  gettext
currentclassdoc    simplegroovyclassdoc  classdocs get packagepath   fs   classname
if  currentclassdoc    null
currentclassdoc   new simplegroovyclassdoc importedclassesandpackages  classname  importedclassesandpackages
// comments
string commenttext   getjavadoccommentsbeforenode t
currentclassdoc setrawcommenttext commenttext
currentclassdoc setfullpathname packagepath   fs   currentclassdoc name
classdocs put currentclassdoc getfullpathname    currentclassdoc
public void visitctorident groovysourceast t int visit
if  visit    opening_visit
if   insideanonymousinnerclass
// now... get relevant values from the ast
// name of class for the constructor
currentconstructordoc   new simplegroovyconstructordoc currentclassdoc name
// comments
string commenttext   getjavadoccommentsbeforenode t
currentconstructordoc setrawcommenttext commenttext
// modifiers
processmodifiers t  currentconstructordoc
addparametersto currentconstructordoc  t  visit
// don't forget to tell the class about this constructor.
currentclassdoc add currentconstructordoc
public void visitmethoddef groovysourceast t  int visit
if  visit    opening_visit
if   insideanonymousinnerclass
// init
// now... get relevant values from the ast
// method name
string methodname   t childoftype groovytokentypes ident  gettext
currentmethoddoc   new simplegroovymethoddoc methodname  links
// comments
string commenttext   getjavadoccommentsbeforenode t
currentmethoddoc setrawcommenttext commenttext
// modifiers
processmodifiers t  currentmethoddoc
// return type
string returntypename   gettypenodeastext t childoftype groovytokentypes type
simplegroovytype returntype   new simplegroovytype returntypename      todo
currentmethoddoc setreturntype returntype
addparametersto currentmethoddoc  t  visit
// don't forget to tell the class about this method so carefully constructed.
currentclassdoc add currentmethoddoc
public void visitvariabledef groovysourceast t  int visit
if  visit    opening_visit
if   insideanonymousinnerclass
groovysourceast parentnode   getparentnode
// todo - what about fields in interfaces/enums etc
if  parentnode    null    parentnode gettype      groovytokentypes objblock        this should restrict us to just field definitions  and not local variable definitions
// field name
string fieldname   t childoftype groovytokentypes ident  gettext
simplegroovyfielddoc currentfielddoc   new simplegroovyfielddoc fieldname
// comments - todo check this is doing the right thing for fields...
string commenttext   getjavadoccommentsbeforenode t
currentfielddoc setrawcommenttext commenttext
// modifiers
processmodifiers t  currentfielddoc
// type
string typename   gettypenodeastext t childoftype groovytokentypes type
simplegroovytype type   new simplegroovytype typename      todo
currentfielddoc settype type
// don't forget to tell the class about this field so carefully constructed.
currentclassdoc add currentfielddoc
private boolean insideanonymousinnerclass
groovysourceast grandparentnode   getgrandparentnode
if  grandparentnode    null    grandparentnode gettype      groovytokentypes literal_new
return true
return false
private void processmodifiers groovysourceast t simplegroovyprogramelementdoc programelementdoc
groovysourceast modifiers   t childoftype groovytokentypes modifiers
if  modifiers    null
ast currentmodifier   modifiers getfirstchild
boolean seennonpublicvisibilitymodifier   false
while  currentmodifier    null
int type   currentmodifier gettype
switch  type
case groovytokentypes literal_protected
case groovytokentypes literal_private
seennonpublicvisibilitymodifier   true
break
case groovytokentypes literal_static
programelementdoc setstatic true
break
currentmodifier   currentmodifier getnextsibling
if   seennonpublicvisibilitymodifier
// in groovy (and java asts turned into groovy by groovifier), methods are assumed public, unless informed otherwise
programelementdoc setpublic true
// todo - if no comment before node, then get comment from same node on parent class - ouch!
private string getjavadoccommentsbeforenode groovysourceast t
string returnvalue
string text   sourcebuffer getsnippet new linecolumn 1 1   new linecolumn t getline    t getcolumn
if  text    null
int openblockindex   text lastindexof
int closingblockindex   text lastindexof
int lastblockindex   math max openblockindex  closingblockindex
if  lastblockindex > 0
text   text substring lastblockindex
matcher m   previousjavadoccommentpattern matcher text
if  m find
returnvalue   m group 1
return returnvalue
private string gettext groovysourceast node
string returnvalue   null
if  node    null
returnvalue   node gettext
return returnvalue
private string gettypenodeastext groovysourceast typenode  string defaulttext
string returnvalue   defaulttext
if  typenode    null
typenode gettype      groovytokentypes type
typenode getnumberofchildren   > 0
groovysourceast child    groovysourceast  typenode getfirstchild       assume type has only one child    todo type of
switch  child gettype
// literals
case groovytokentypes literal_boolean  returnvalue      break
case groovytokentypes literal_byte  returnvalue      break
case groovytokentypes literal_char  returnvalue      break
// note: literal_def never created
case groovytokentypes literal_double  returnvalue      break
case groovytokentypes literal_float  returnvalue      break
case groovytokentypes literal_int  returnvalue      break
case groovytokentypes literal_long  returnvalue      break
case groovytokentypes literal_short  returnvalue      break
case groovytokentypes literal_void  returnvalue      break
// identifiers
case groovytokentypes ident  returnvalue   child gettext    break
return returnvalue
private void addparametersto simplegroovyexecutablememberdoc executablememberdoc  groovysourceast t int visit
// parameters
groovysourceast parametersnode   t childoftype groovytokentypes parameters
if  parametersnode    null    parametersnode getnumberofchildren   > 0
groovysourceast currentnode    groovysourceast  parametersnode getfirstchild
while  currentnode    null
string parametertypename   gettypenodeastext currentnode childoftype groovytokentypes type
string parametername   gettext currentnode childoftype groovytokentypes ident
simplegroovyparameter parameter   new simplegroovyparameter parametername
parameter settypename parametertypename
executablememberdoc add parameter
currentnode    groovysourceast currentnode getnextsibling
public void push groovysourceast t
stack push t
public groovysourceast pop
if   stack empty
return  groovysourceast  stack pop
return null
private groovysourceast getparentnode
object parentnode   null
object currentnode   stack pop
if   stack empty
parentnode   stack peek
stack push currentnode
return  groovysourceast  parentnode
private groovysourceast getgrandparentnode
object grandparentnode   null
object parentnode
object currentnode   stack pop
if   stack empty
parentnode   stack pop
if   stack empty
grandparentnode   stack peek
stack push parentnode
stack push currentnode
return  groovysourceast  grandparentnode