/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy antlr treewalker
import java util iterator
import java util list
import org codehaus groovy antlr antlrastprocessor
import org codehaus groovy antlr groovysourceast
import antlr collections ast
/**
* a simple iterator over an ordered (flat) list of the nodes of the ast.
*
* @author <a href="mailto:groovy@ross-rayner.com">jeremy rayner</a>
* @version $revision: 3626 $
*/
public class flatnodelisttraversal extends traversalhelper
public flatnodelisttraversal visitor visitor
super visitor
public ast process ast t
groovysourceast node    groovysourceast  t
// fetch all the nodes in this ast into a list
nodecollector collector   new nodecollector
antlrastprocessor internaltraversal   new preordertraversal collector
internaltraversal process t
list listofallnodesinthisast   collector getnodes
// process each node in turn
setup node
iterator itr   listofallnodesinthisast iterator
while  itr hasnext
groovysourceast currentnode    groovysourceast  itr next
accept currentnode
teardown node
return null
protected void accept groovysourceast currentnode
openingvisit currentnode
closingvisit currentnode