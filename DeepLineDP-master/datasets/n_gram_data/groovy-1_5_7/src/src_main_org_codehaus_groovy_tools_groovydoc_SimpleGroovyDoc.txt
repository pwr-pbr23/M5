/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy tools groovydoc
import java text breakiterator
import java util
import java util regex matcher
import java util regex pattern
import org codehaus groovy groovydoc
import org codehaus groovy ant groovydoc
public class simplegroovydoc implements groovydoc
private string name
private string commenttext
private string rawcommenttext
private string firstsentencecommenttext
private list links
private int definitiontype
private final int class   0
private final int interface   1
public simplegroovydoc string name  list links
this name   name
this links   links
this setrawcommenttext         default to no comments  good for default constructors which will not have a reason to call this
definitiontype   class     default this instance to a class  unless told otherwise
public simplegroovydoc string name
this name  new arraylist
public string name
return name
public string tostring
return     getclass         name
public string commenttext
return commenttext     derived from rawcommenttext
public string getrawcommenttext
return rawcommenttext
public string firstsentencecommenttext
return firstsentencecommenttext     derived from rawcommenttext
public void setrawcommenttext string rawcommenttext
this rawcommenttext   rawcommenttext
// remove all the * from beginning of lines
this commenttext   rawcommenttext replaceall           todo precompile regex patterns
// comment summary using first sentence (locale sensitive)
breakiterator boundary   breakiterator getsentenceinstance locale getdefault        todo   allow locale to be passed in
boundary settext commenttext
int start   boundary first
int end   boundary next
if  start >  1    end >  1
// need to abbreviate this comment for the summary
this firstsentencecommenttext   commenttext substring start end
else
this firstsentencecommenttext   commenttext
// hack to reformat groovydoc tags into html (todo: tags)
this commenttext   replacealltags this commenttext
// hack to hide groovydoc tags in summaries
this firstsentencecommenttext   this firstsentencecommenttext replaceall          remove @return etc from summaries
// todo: this should go away once we have tags
public string replacealltags string self  string regex  string s1  string s2
matcher matcher   pattern compile regex  matcher self
if  matcher find
matcher reset
stringbuffer sb   new stringbuffer
while  matcher find
if  matcher group 1  equals
// todo: escape $ signs?
matcher appendreplacement sb  s1   getdocurl matcher group 2     s2
else
matcher appendreplacement sb  s1       s2
matcher appendtail sb
return sb tostring
else
return self
public string getdocurl string type
if  type    null    type indexof        1
return type
final string target   type split
string shortclassname   target replaceall
string packagename   type substring 0  type length   shortclassname length   2
shortclassname     target length > 1 ?     target split
for  int i   0  i < links size    i
groovydoc linkargument linkargument    groovydoc linkargument  links get i
final stringtokenizer tokenizer   new stringtokenizer linkargument getpackages
while  tokenizer hasmoretokens
final string token   tokenizer nexttoken
if  type startswith token
string apibaseurl   linkargument gethref
if   apibaseurl endswith       apibaseurl
string url   apibaseurl   target replaceall              target length > 1 ?     target
return     url       shortclassname       shortclassname
return type
public boolean isclass
return definitiontype    class
public boolean isinterface
return definitiontype    interface
public void setasinterfacedefinition
definitiontype   interface
// methods from comparable
public int compareto object that
if  that instanceof simplegroovydoc
return name compareto   simplegroovydoc  that  name
else
throw new classcastexception
// methods from groovydoc
//	public groovytag[] firstsentencetags() {/*todo*/return null;}
//	public groovytag[] inlinetags() {/*todo*/return null;}
public boolean isannotationtype      todo  return false
public boolean isannotationtypeelement      todo  return false
public boolean isconstructor      todo  return false
public boolean isenum      todo  return false
public boolean isenumconstant      todo  return false
public boolean iserror      todo  return false
public boolean isexception      todo  return false
public boolean isfield      todo  return false
public boolean isincluded      todo  return false
public boolean ismethod      todo  return false
public boolean isordinaryclass      todo  return false
//	public groovysourceposition position() {/*todo*/return null;}
//	public groovyseetag[] seetags() {/*todo*/return null;}
//	public groovytag[] tags() {/*todo*/return null;}
//	public groovytag[] tags(string arg0) {/*todo*/return null;}