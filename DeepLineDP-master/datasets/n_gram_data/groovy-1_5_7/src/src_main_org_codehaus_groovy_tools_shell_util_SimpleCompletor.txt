/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy tools shell util
import java util list
import java util iterator
import java util sortedset
import groovy lang closure
/**
* support for simple completors.
*
* @version $id$
* @author <a href="mailto:jason@planet57.com">jason dillon</a>
*/
public class simplecompletor
extends jline simplecompletor
public simplecompletor final string candidates
super candidates
public simplecompletor
this new string
public simplecompletor final closure loader
this
assert loader    null
object obj   loader call
list list   null
if  obj instanceof list
list    list obj
//
// todo: maybe handle arrays too?
//
if  list    null
throw new illegalstateexception     obj
iterator iter   list iterator
while  iter hasnext
add string valueof iter next
public void add final string candidate
addcandidatestring candidate
public object leftshift final string s
add s
return null
//
// note: duplicated (and augumented) from jline sources to make it call getcandidates() to make the list more dynamic
//
public int complete final string buffer  final int cursor  final list clist
string start    buffer    null  ?     buffer
sortedset matches   getcandidates   tailset start
for  iterator i   matches iterator    i hasnext
string can    string  i next
if    can startswith start
break
string delim   getdelimiter
if  delim    null
int index   can indexof delim  cursor
if  index     1
can   can substring 0  index   1
clist add can
if  clist size      1
clist set 0    string  clist get 0
// the index of the completion is always from the beginning of the buffer.
return  clist size      0  ?   1    0