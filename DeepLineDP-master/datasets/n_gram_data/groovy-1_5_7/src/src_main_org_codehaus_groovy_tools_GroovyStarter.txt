/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy tools
import java lang reflect
import java io fileinputstream
/**
* helper class to help classworlds to load classes.
*/
public class groovystarter
static void printusage
system out println
system exit 1
public static void rootloader string args
string conf   system getproperty   null
loaderconfiguration lc   new loaderconfiguration
// evaluate parameters
boolean hadmain false  hadconf false  hadcp false
int argsoffset   0
while  args length argsoffset>0      hadmain    hadconf    hadcp
if  args equals
if  hadcp  break
if  args length  argsoffset 1
exit
lc addclasspath args
argsoffset  2
hadcp true
else if  args equals
if  hadmain  break
if  args length  argsoffset 1
exit
lc setmainclass args
argsoffset  2
hadmain true
else if  args equals
if  hadconf  break
if  args length  argsoffset 1
exit
conf args
argsoffset  2
hadconf true
else
break
// this allows to override the commandline conf
string confoverride   system getproperty   null
if  confoverride  null  conf   confoverride
// we need to know the class we want to start
if  lc getmainclass    null    conf  null
exit
// copy arguments for main class
string newargs   new string
for  int i 0  i<newargs length  i
newargs   args
// load configuration file
if  conf  null
try
lc configure new fileinputstream conf
catch  exception e
system err println
exit e
// create loader and execute main class
classloader loader   new rootloader lc
method m null
try
class c   loader loadclass lc getmainclass
m   c getmethod    new class string class
catch  classnotfoundexception e1
exit e1
catch  securityexception e2
exit e2
catch  nosuchmethodexception e2
exit e2
try
m invoke null  new object newargs
catch  illegalargumentexception e3
exit e3
catch  illegalaccessexception e3
exit e3
catch  invocationtargetexception e3
exit e3
private static void exit exception e
e printstacktrace
system exit 1
private static void exit string msg
system err println msg
system exit 1
public static void main string args
try
rootloader args
catch  throwable t
t printstacktrace