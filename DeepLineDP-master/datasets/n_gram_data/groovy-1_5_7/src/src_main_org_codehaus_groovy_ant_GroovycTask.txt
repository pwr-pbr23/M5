/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ant
import groovy lang groovyclassloader
import org apache tools ant buildexception
import org apache tools ant directoryscanner
import org apache tools ant types path
import org apache tools ant util globpatternmapper
import org apache tools ant util sourcefilescanner
import org codehaus groovy control compilationunit
import java io file
/**
* compiles groovy source files.
*
* @version $id$
* @author <a href="mailto:jason@planet57.com">jason dillon</a>
*/
public class groovyctask
extends compiletasksupport
protected boolean force
public void setforce final boolean flag
this force   flag
protected void compile
path path   getclasspath
if  path    null
config setclasspath path tostring
config settargetdirectory destdir
groovyclassloader gcl   createclassloader
compilationunit compilation   new compilationunit config  null  gcl
globpatternmapper mapper   new globpatternmapper
mapper setfrom
mapper setto
int count   0
string list   src list
for  int i   0  i < list length  i
file basedir   getproject   resolvefile list
if   basedir exists
throw new buildexception     basedir  getlocation
directoryscanner scanner   getdirectoryscanner basedir
string includes   scanner getincludedfiles
if  force
log debug     basedir
for  int j 0  j < includes length  j
file file   new file basedir  includes
log debug      file
compilation addsource file
count
else
log debug     basedir
sourcefilescanner sourcescanner   new sourcefilescanner this
file files   sourcescanner restrictasfiles includes  basedir  destdir  mapper
for  int j 0  j < files length  j
log debug      files
compilation addsource files
count
if  count > 0
log info     count        count > 1 ?              destdir
compilation compile
else
log info