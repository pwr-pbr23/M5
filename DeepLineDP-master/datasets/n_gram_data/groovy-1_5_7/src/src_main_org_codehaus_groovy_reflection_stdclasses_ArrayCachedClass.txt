/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy reflection stdclasses
import groovy lang gstring
import org codehaus groovy reflection cachedclass
import org codehaus groovy runtime typehandling defaulttypetransformation
import java math bigdecimal
/**
* @author alex.tkachman
*/
public class arraycachedclass extends cachedclass
public arraycachedclass class klazz
super klazz
public object coerceargument object argument
class argumentclass   argument getclass
if  argumentclass getname   charat 0        return argument
class argumentcomponent   argumentclass getcomponenttype
class paramcomponent   gettheclass   getcomponenttype
if  paramcomponent isprimitive
if  paramcomponent    boolean class    argumentclass    boolean class
argument   defaulttypetransformation converttobooleanarray argument
else if  paramcomponent    byte class    argumentclass    byte class
argument   defaulttypetransformation converttobytearray argument
else if  paramcomponent    char class    argumentclass    character class
argument   defaulttypetransformation converttochararray argument
else if  paramcomponent    short class    argumentclass    short class
argument   defaulttypetransformation converttoshortarray argument
else if  paramcomponent    int class    argumentclass    integer class
argument   defaulttypetransformation converttointarray argument
else if  paramcomponent    long class
argumentclass    long class    argumentclass    integer class
argument   defaulttypetransformation converttolongarray argument
else if  paramcomponent    float class
argumentclass    float class    argumentclass    integer class
argument   defaulttypetransformation converttofloatarray argument
else if  paramcomponent    double class
argumentclass    double class    argumentclass    float class
bigdecimal class isassignablefrom argumentclass
argument   defaulttypetransformation converttodoublearray argument
else if  paramcomponent    string class    argument instanceof gstring
gstring strings    gstring  argument
string ret   new string
for  int i   0  i < strings length  i
ret   strings tostring
argument   ret
else if  paramcomponent  object class    argumentcomponent isprimitive
argument   defaulttypetransformation primitivearraybox argument
return argument