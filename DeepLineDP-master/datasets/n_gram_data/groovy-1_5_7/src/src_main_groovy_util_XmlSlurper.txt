/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy util
import groovy util slurpersupport gpathresult
import groovy util slurpersupport node
import groovy util slurpersupport nodechild
import groovy xml factorysupport
import java io file
import java io fileinputstream
import java io ioexception
import java io inputstream
import java io reader
import java io stringreader
import java net url
import java util hashmap
import java util hashtable
import java util map
import java util stack
import javax xml parsers parserconfigurationexception
import javax xml parsers saxparser
import javax xml parsers saxparserfactory
import org xml sax attributes
import org xml sax dtdhandler
import org xml sax entityresolver
import org xml sax errorhandler
import org xml sax inputsource
import org xml sax saxexception
import org xml sax saxnotrecognizedexception
import org xml sax saxnotsupportedexception
import org xml sax xmlreader
import org xml sax helpers defaulthandler
/**
* @author john wilson
*
*/
public class xmlslurper extends defaulthandler
private final xmlreader reader
private node currentnode   null
private final stack stack   new stack
private final stringbuffer charbuffer   new stringbuffer
private final map namespacetaghints   new hashtable
private boolean keepwhitespace   false
public xmlslurper   throws parserconfigurationexception  saxexception
this false  true
public xmlslurper final boolean validating  final boolean namespaceaware  throws parserconfigurationexception  saxexception
saxparserfactory factory   factorysupport createsaxparserfactory
factory setnamespaceaware namespaceaware
factory setvalidating validating
this reader   factory newsaxparser   getxmlreader
public xmlslurper final xmlreader reader
this reader   reader
public xmlslurper final saxparser parser  throws saxexception
this parser getxmlreader
/**
* @param keepwhitespace
*
* if true then whitespace before elements is kept.
* the deafult is to discard the whitespace.
*/
public void setkeepwhitespace boolean keepwhitespace
this keepwhitespace   keepwhitespace
/**
* @return the gpathresult instance created by consuming a stream of sax events
* note if one of the parse methods has been called then this returns null
* note if this is called more than once all calls after the first will return null
*
*/
public gpathresult getdocument
try
return new nodechild this currentnode  null  this namespacetaghints
finally
this currentnode   null
/**
* parse the content of the specified input source into a gpathresult object
*
* @param input
* @return an object which supports gpath expressions
* @throws ioexception
* @throws saxexception
*/
public gpathresult parse final inputsource input  throws ioexception  saxexception
this reader setcontenthandler this
this reader parse input
return getdocument
/**
* parses the content of the given file as xml turning it into a gpathresult object
*
* @param file
* @return an object which supports gpath expressions
* @throws ioexception
* @throws saxexception
*/
public gpathresult parse final file file  throws ioexception  saxexception
final inputsource input   new inputsource new fileinputstream file
input setsystemid     file getabsolutepath
return parse input
/**
* parse the content of the specified input stream into an gpathresult object.
* note that using this method will not provide the parser with any uri
* for which to find dtds etc
*
* @param input
* @return an object which supports gpath expressions
* @throws ioexception
* @throws saxexception
*/
public gpathresult parse final inputstream input  throws ioexception  saxexception
return parse new inputsource input
/**
* parse the content of the specified reader into a gpathresult object.
* note that using this method will not provide the parser with any uri
* for which to find dtds etc
*
* @param in
* @return an object which supports gpath expressions
* @throws ioexception
* @throws saxexception
*/
public gpathresult parse final reader in  throws ioexception  saxexception
return parse new inputsource in
/**
* parse the content of the specified uri into a gpathresult object
*
* @param uri
* @return an object which supports gpath expressions
* @throws ioexception
* @throws saxexception
*/
public gpathresult parse final string uri  throws ioexception  saxexception
return parse new inputsource uri
/**
* a helper method to parse the given text as xml
*
* @param text
* @return an object which supports gpath expressions
*/
public gpathresult parsetext final string text  throws ioexception  saxexception
return parse new stringreader text
// delegated xmlreader methods
//------------------------------------------------------------------------
/* (non-javadoc)
* @see org.xml.sax.xmlreader#getdtdhandler()
*/
public dtdhandler getdtdhandler
return this reader getdtdhandler
/* (non-javadoc)
* @see org.xml.sax.xmlreader#getentityresolver()
*/
public entityresolver getentityresolver
return this reader getentityresolver
/* (non-javadoc)
* @see org.xml.sax.xmlreader#geterrorhandler()
*/
public errorhandler geterrorhandler
return this reader geterrorhandler
/* (non-javadoc)
* @see org.xml.sax.xmlreader#getfeature(java.lang.string)
*/
public boolean getfeature final string uri  throws saxnotrecognizedexception  saxnotsupportedexception
return this reader getfeature uri
/* (non-javadoc)
* @see org.xml.sax.xmlreader#getproperty(java.lang.string)
*/
public object getproperty final string uri  throws saxnotrecognizedexception  saxnotsupportedexception
return this reader getproperty uri
/* (non-javadoc)
* @see org.xml.sax.xmlreader#setdtdhandler(org.xml.sax.dtdhandler)
*/
public void setdtdhandler final dtdhandler dtdhandler
this reader setdtdhandler dtdhandler
/* (non-javadoc)
* @see org.xml.sax.xmlreader#setentityresolver(org.xml.sax.entityresolver)
*/
public void setentityresolver final entityresolver entityresolver
this reader setentityresolver entityresolver
/**
* resolves entities against using the suppied url as the base for relative urls
*
* @param base
* the url used to resolve relative urls
*/
public void setentitybaseurl final url base
this reader setentityresolver new entityresolver
public inputsource resolveentity final string publicid  final string systemid  throws ioexception
return new inputsource new url base  systemid  openstream
/* (non-javadoc)
* @see org.xml.sax.xmlreader#seterrorhandler(org.xml.sax.errorhandler)
*/
public void seterrorhandler final errorhandler errorhandler
this reader seterrorhandler errorhandler
/* (non-javadoc)
* @see org.xml.sax.xmlreader#setfeature(java.lang.string, boolean)
*/
public void setfeature final string uri  final boolean value  throws saxnotrecognizedexception  saxnotsupportedexception
this reader setfeature uri  value
/* (non-javadoc)
* @see org.xml.sax.xmlreader#setproperty(java.lang.string, java.lang.object)
*/
public void setproperty final string uri  final object value  throws saxnotrecognizedexception  saxnotsupportedexception
this reader setproperty uri  value
// contenthandler interface
//-------------------------------------------------------------------------
/* (non-javadoc)
* @see org.xml.sax.contenthandler#startdocument()
*/
public void startdocument   throws saxexception
this currentnode   null
this charbuffer setlength 0
/* (non-javadoc)
* @see org.xml.sax.helpers.defaulthandler#startprefixmapping(java.lang.string, java.lang.string)
*/
public void startprefixmapping final string tag  final string uri  throws saxexception
this namespacetaghints put tag  uri
/* (non-javadoc)
* @see org.xml.sax.contenthandler#startelement(java.lang.string, java.lang.string, java.lang.string, org.xml.sax.attributes)
*/
public void startelement final string namespaceuri  final string localname  final string qname  final attributes atts  throws saxexception
addcdata
final map attributes   new hashmap
final map attributenamespaces   new hashmap
for  int i   atts getlength     1  i     1  i
if  atts geturi i  length      0
attributes put atts getqname i   atts getvalue i
else
attributes put atts getlocalname i   atts getvalue i
attributenamespaces put atts getlocalname i   atts geturi i
final node newelement
if  namespaceuri length      0
newelement   new node this currentnode  qname  attributes  attributenamespaces  namespaceuri
else
newelement   new node this currentnode  localname  attributes  attributenamespaces  namespaceuri
if  this currentnode    null
this currentnode addchild newelement
this stack push this currentnode
this currentnode   newelement
/* (non-javadoc)
* @see org.xml.sax.contenthandler#characters(char[], int, int)
*/
public void characters final char ch  final int start  final int length  throws saxexception
this charbuffer append ch  start  length
/* (non-javadoc)
* @see org.xml.sax.contenthandler#endelement(java.lang.string, java.lang.string, java.lang.string)
*/
public void endelement final string namespaceuri  final string localname  final string qname  throws saxexception
addcdata
final object oldcurrentnode   this stack pop
if  oldcurrentnode    null
this currentnode    node oldcurrentnode
/* (non-javadoc)
* @see org.xml.sax.contenthandler#enddocument()
*/
public void enddocument   throws saxexception
// implementation methods
//-------------------------------------------------------------------------
/**
*
*/
private void addcdata
if  this charbuffer length      0
//
// this element is preceeded by cdata if keepwhitespace is false (the default setting) and
// it's not whitespace add it to the body
// note that, according to the xml spec, we should preserve the cdata if it's all whitespace
// but for the sort of work i'm doing ignoring the whitespace is preferable
//
final string cdata   this charbuffer tostring
this charbuffer setlength 0
if  this keepwhitespace    cdata trim   length      0
this currentnode addchild cdata