/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy
/**
* this class represents an error that is thrown when a bug is
* recognized inside the runtime. basically it is thrown when
* a constraint is not fullfilled that should be fullfiled.
*
* @author jochen theodorou
*/
public class groovybugerror extends assertionerror
// message string
private string message
// optional exception
private final exception exception
/**
* constructs a bug error using the given text
* @param message the error message text
*/
public groovybugerror  string message
this message  null
/**
* constructs a bug error using the given exception
* @param exception cause of this error
*/
public groovybugerror  exception exception
this null  exception
/**
* constructs a bug error using the given exception and
* a text with additional information about the cause
* @param msg additional information about this error
* @param exception cause of this error
*/
public groovybugerror  string msg  exception exception
this exception   exception
this message   msg
/**
* returns a string representation of this class by calling <code>getmessage()</code>.
* @see #getmessage()
*/
public string tostring
return getmessage
/**
* returns the detail message string of this error. the message
* will consist of the bug text prefixed by "bug! " if there this
* isntance was created using a message. if this error was
* constructed without using a bug text the message of the cause
* is used prefixed by "bug! uncaught exception: "
*
* @return the detail message string of this error.
*/
public string getmessage
if  message    null
return   message
else
return     exception getmessage
public throwable getcause
return this exception
/**
* returns the bug text to describe this error
*/
public string getbugtext
if  message    null
return message
else
return exception getmessage
/**
* sets the bug text to describe this error
*/
public void setbugtext string msg
this message   msg