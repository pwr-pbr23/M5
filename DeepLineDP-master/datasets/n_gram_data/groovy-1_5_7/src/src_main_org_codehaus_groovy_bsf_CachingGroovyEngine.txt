/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy bsf
import groovy lang binding
import groovy lang groovyclassloader
import groovy lang groovyshell
import groovy lang script
import org apache bsf bsfdeclaredbean
import org apache bsf bsfexception
import org apache bsf bsfmanager
import org apache bsf util bsffunctions
import org codehaus groovy control compilerconfiguration
import org codehaus groovy runtime invokerhelper
import java io bytearrayinputstream
import java security accesscontroller
import java security privilegedaction
import java util hashmap
import java util map
import java util vector
import java util logging logger
import java util logging level
/**
* a caching implementation of the groovyengine
*
* @author james birchfield
*/
public class cachinggroovyengine extends groovyengine
private static final logger log   logger getlogger cachinggroovyengine class getname
private static final object empty_args   new object new string
private map evalscripts
private map execscripts
private binding context
private groovyclassloader loader
/**
* evaluate an expression.
*/
public object eval string source  int lineno  int columnno  object script  throws bsfexception
try
class scriptclass    class  evalscripts get script
if  scriptclass    null
scriptclass   loader parseclass new bytearrayinputstream script tostring   getbytes     source
evalscripts put script  scriptclass
else
log fine
//can't cache the script because the context may be different.
//but don't bother loading parsing the class again
script s   invokerhelper createscript scriptclass  context
return s run
catch  exception e
throw new bsfexception bsfexception reason_execution_error      e  e
/**
* execute a script.
*/
public void exec string source  int lineno  int columnno  object script  throws bsfexception
try
//          shell.run(script.tostring(), source, empty_args);
class scriptclass    class  execscripts get script
if  scriptclass    null
scriptclass   loader parseclass new bytearrayinputstream script tostring   getbytes     source
execscripts put script  scriptclass
else
log fine
invokerhelper invokemethod scriptclass     empty_args
catch  exception e
log log level warning     e
throw new bsfexception bsfexception reason_execution_error      e  e
/**
* initialize the engine.
*/
public void initialize final bsfmanager mgr  string lang  vector declaredbeans  throws bsfexception
super initialize mgr  lang  declaredbeans
classloader parent   mgr getclassloader
if  parent    null
parent   groovyshell class getclassloader
final classloader finalparent   parent
this loader
groovyclassloader  accesscontroller doprivileged new privilegedaction
public object run
compilerconfiguration configuration   new compilerconfiguration
configuration setclasspath mgr getclasspath
return new groovyclassloader finalparent  configuration
execscripts   new hashmap
evalscripts   new hashmap
context   shell getcontext
// create a shell
// register the mgr with object name "bsf"
context setvariable    new bsffunctions mgr  this
int size   declaredbeans size
for  int i   0  i < size  i
declarebean  bsfdeclaredbean  declaredbeans elementat i