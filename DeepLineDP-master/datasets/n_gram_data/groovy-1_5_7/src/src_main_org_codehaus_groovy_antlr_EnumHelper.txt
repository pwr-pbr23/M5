package org codehaus groovy antlr
import org codehaus groovy ast classhelper
import org codehaus groovy ast classnode
import org codehaus groovy ast fieldnode
import org codehaus groovy ast genericstype
import org codehaus groovy ast innerclassnode
import org codehaus groovy ast mixinnode
import org codehaus groovy ast expr expression
import org codehaus groovy ast expr listexpression
import org objectweb asm opcodes
public class enumhelper
private static final int fs   opcodes acc_final   opcodes acc_static
private static final int public_fs   opcodes acc_public   fs
public static classnode makeenumnode string name  int modifiers  classnode interfaces  classnode outerclass
modifiers   modifiers   opcodes acc_final   opcodes acc_enum
classnode enumclass
if  outerclass  null
enumclass   new classnode name modifiers null interfaces mixinnode empty_array
else
name   outerclass getname         name
enumclass   new innerclassnode outerclass name modifiers null interfaces mixinnode empty_array
// set super class and generics info
// "enum x" -> class x extends enum<x>
genericstype gt   new genericstype enumclass
classnode superclass   classhelper makewithoutcaching
superclass setgenericstypes new genericstype gt
enumclass setsuperclass superclass
superclass setredirect classhelper enum_type
return enumclass
public static void addenumconstant classnode enumclass  string name  expression init
int modifiers   public_fs   opcodes acc_enum
if   init  null      init instanceof listexpression
listexpression list   new listexpression
list addexpression init
init   list
fieldnode fn   new fieldnode name modifiers enumclass enumclass init
enumclass addfield fn