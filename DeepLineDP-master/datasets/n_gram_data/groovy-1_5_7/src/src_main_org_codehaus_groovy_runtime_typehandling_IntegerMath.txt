/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy runtime typehandling
/**
* integer numbermath operations
*
* @author steve goetze
*/
public class integermath extends numbermath
public static final integermath instance   new integermath
private integermath
protected number absimpl number number
return new integer math abs number intvalue
protected number addimpl number left  number right
return new integer left intvalue     right intvalue
protected number subtractimpl number left  number right
return new integer left intvalue     right intvalue
protected number multiplyimpl number left  number right
return new integer left intvalue     right intvalue
protected number divideimpl number left  number right
return bigdecimalmath instance divideimpl left  right
protected int comparetoimpl number left  number right
int leftval   left intvalue
int rightval   right intvalue
return  leftval<rightval ?  1    leftval  rightval ? 0   1
protected number orimpl number left  number right
return new integer left intvalue     right intvalue
protected number andimpl number left  number right
return new integer left intvalue     right intvalue
protected number xorimpl number left  number right
return new integer left intvalue   ^ right intvalue
protected number intdivimpl number left  number right
return new integer left intvalue     right intvalue
protected number modimpl number left  number right
return new integer left intvalue   % right intvalue
protected number unaryminusimpl number left
return new integer  left intvalue
protected number bitwisenegateimpl number left
return new integer ~left intvalue
protected number leftshiftimpl number left  number right
return new integer left intvalue   << right intvalue
protected number rightshiftimpl number left  number right
return new integer left intvalue   >> right intvalue
protected number rightshiftunsignedimpl number left  number right
return new integer left intvalue   >>> right intvalue