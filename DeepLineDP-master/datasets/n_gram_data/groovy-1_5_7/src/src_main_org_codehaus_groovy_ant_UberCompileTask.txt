/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ant
import org apache tools ant buildexception
import org apache tools ant task
import org apache tools ant taskdefs javac
import org apache tools ant types fileset
import org apache tools ant types path
import org apache tools ant types reference
import java io file
import java io ioexception
/**
* compiles java and groovy source files.
*
* this works by invoking the {@link generatestubstask} task, then the
* {@link javac} task and then the {@link groovyctask}.  each task can
* be configured by creating a nested element.  common configuration
* such as the source dir and classpath is picked up from this tasks
* configuration.
*
* @version $id$
* @author <a href="mailto:jason@planet57.com">jason dillon</a>
*/
public class ubercompiletask
extends task
private final logginghelper log   new logginghelper this
private path src
private file destdir
private path classpath
private genstubsadapter genstubstask
private groovycadapter groovyctask
private javacadapter javactask
public path createsrc
if  src    null
src   new path getproject
}
return src createpath
}
public void setsrcdir final path dir
assert dir    null
if  src    null
src   dir
}
else
src append dir
}
}
public path getsrcdir
return src
}
public void setdestdir final file dir
assert dir    null
this destdir   dir
}
public void setclasspath final path path
assert path    null
if  classpath    null
classpath   path
}
else
classpath append path
}
}
public path getclasspath
return classpath
}
public path createclasspath
if  classpath    null
classpath   new path getproject
}
return classpath createpath
}
public void setclasspathref final reference r
assert r    null
createclasspath   setrefid r
}
public genstubsadapter creategeneratestubs
if  genstubstask    null
genstubstask   new genstubsadapter
genstubstask setproject getproject
}
return genstubstask
}
public groovycadapter creategroovyc
if  groovyctask    null
groovyctask   new groovycadapter
groovyctask setproject getproject
}
return groovyctask
}
public javacadapter createjavac
if  javactask    null
javactask   new javacadapter
javactask setproject getproject
}
return javactask
}
protected void validate   throws buildexception
if  src    null
throw new buildexception    getlocation
}
if  destdir    null
throw new buildexception    getlocation
}
if   destdir exists
throw new buildexception     destdir  getlocation
}
}
public void execute   throws buildexception
validate
fileset fileset
genstubsadapter genstubs   creategeneratestubs
genstubs classpath   classpath
genstubs src   src
if  genstubs destdir    null
genstubs destdir   createtempdir
}
fileset   genstubs getfileset
if (!fileset.haspatterns()) {
genstubs createinclude   setname
genstubs createinclude   setname
}
javacadapter javac   createjavac
javac setsrcdir src
javac setdestdir destdir
javac setclasspath classpath
fileset   javac getfileset
if (!fileset.haspatterns()) {
javac createinclude   setname
}
// include the stubs in the javac compilation
javac.createsrc().createpathelement().setlocation(genstubs.destdir);
groovycadapter groovyc = creategroovyc();
groovyc.classpath = classpath;
groovyc.src = src;
groovyc.destdir = destdir;
//
// hack: for now force all classes to compile, so we pick up stub changes
//
groovyc.force = true;
fileset = groovyc.getfileset();
if (!fileset.haspatterns()) {
groovyc createinclude   setname
}
// invoke each task in the right order
genstubs execute
javac execute
groovyc execute
}
private file createtempdir
try
file dir   file createtempfile
dir delete
dir mkdirs
return dir
}
catch  ioexception e
throw new buildexception e  getlocation
}
}
//
// nested task adapters
//
private class genstubsadapter
extends generatestubstask
public fileset getfileset
return super getimplicitfileset
}
public string gettaskname
return ubercompiletask this gettaskname
}
}
private class javacadapter
extends javac
public fileset getfileset
return super getimplicitfileset
}
public string gettaskname
return ubercompiletask this gettaskname
}
}
private class groovycadapter
extends groovyctask
public fileset getfileset
return super getimplicitfileset
}
public string gettaskname
return ubercompiletask this gettaskname
}
}
}