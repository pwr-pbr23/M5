/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy ui text
import java awt color
import java awt component
import java awt cursor
import java awt dimension
import java awt font
import java awt fontmetrics
import java awt graphics
import java awt graphics2d
import java awt rectangle
import java awt toolkit
import java awt event actionevent
import java awt event keyevent
import java awt event mouseadapter
import java awt event mouseevent
import java awt print pageable
import java awt print pageformat
import java awt print paper
import java awt print printable
import java awt print printerexception
import java awt print printerjob
import java util calendar
import java util regex pattern
import javax swing action
import javax swing abstractaction
import javax swing actionmap
import javax swing inputmap
import javax swing jtextpane
import javax swing keystroke
import javax swing swingutilities
import javax swing plaf componentui
import javax swing text caret
import javax swing text badlocationexception
import javax swing text defaultcaret
import javax swing text defaulteditorkit
import javax swing text document
import javax swing text element
import javax swing text jtextcomponent
import javax swing text styleddocument
import javax swing text utilities
/**
* a simple text pane that is printable and wrapping is optional.
*
* @author evan "hippy" slatis
*/
public class texteditor extends jtextpane implements pageable  printable
public static final string find
public static final string find_next
public static final string find_previous
public static final string replace
private static final string tabbed_spaces
private static final pattern tab_back_pattern
pattern compile    pattern multiline
private static final pattern line_start
pattern compile    pattern multiline
private static final jtextpane print_pane   new jtextpane
private static final dimension print_size   new dimension
private static toolkit toolkit   toolkit getdefaulttoolkit
private static boolean isovertypemode
private caret defaultcaret
private caret overtypecaret
private static final pageformat page_format
static
printerjob job   printerjob getprinterjob
page_format   job defaultpage
private int numpages
private int lastupdate
private mouseadapter mouseadapter
new mouseadapter
cursor cursor
public void mouseentered mouseevent me
if  contains me getpoint
cursor   getcursor
cursor curs
cursor getpredefinedcursor cursor text_cursor
getrootpane   getlayeredpane   setcursor curs
else
getrootpane   getlayeredpane   setcursor cursor
public void mouseexited mouseevent me
getrootpane   getlayeredpane   setcursor null
// unwrapped property
private boolean unwrapped
// tabsasspaces property
private boolean tabsasspaces
// multilinetab property
private boolean multilinetab
// searchable property
private boolean searchable   true
/**
* creates a new instance of texteditor
*/
public texteditor
this false
/**
* creates a new instance of texteditor
*/
public texteditor boolean tabsasspaces
this tabsasspaces  false
/**
* creates a new instance of texteditor
*/
public texteditor boolean tabsasspaces  boolean multilinetab
this multilinetab  tabsasspaces  false
/**
* creates a new instance of texteditor
*/
public texteditor boolean tabsasspaces  boolean multilinetab  boolean unwrapped
this tabsasspaces   tabsasspaces
this multilinetab   multilinetab
this unwrapped   unwrapped
// remove and replace the delete action to another spot so ctrl h later
// on is strictly for showing the fand & replace dialog
actionmap amap   getactionmap
action action   null
do
action   action    null ?
amap get defaulteditorkit deleteprevcharaction    null
amap remove defaulteditorkit deleteprevcharaction
amap   amap getparent
while  amap    null
amap   getactionmap
keystroke keystroke
keystroke getkeystroke keyevent vk_back_space  0  false
inputmap imap   getinputmap
imap put keystroke
amap put    action
// set all the actions
action   new findaction
amap put find  action
keystroke
keystroke getkeystroke keyevent vk_f  keyevent ctrl_mask  false
imap put keystroke  find
amap put find_next  findreplaceutility find_action
keystroke   keystroke getkeystroke keyevent vk_f3  0  false
imap put keystroke  find_next
amap put find_previous  findreplaceutility find_action
keystroke
keystroke getkeystroke keyevent vk_f3  keyevent shift_mask  false
imap put keystroke  find_previous
action   new tabaction
amap put    action
keystroke   keystroke getkeystroke keyevent vk_tab  0  false
imap put keystroke
action   new shifttabaction
amap put    action
keystroke
keystroke getkeystroke keyevent vk_tab  keyevent shift_mask  false
imap put keystroke
action   new replaceaction
getactionmap   put replace  action
keystroke
keystroke getkeystroke keyevent vk_h  keyevent ctrl_mask  false
do
imap remove keystroke
imap   imap getparent
while  imap    null
getinputmap   put keystroke  replace
setautoscrolls true
defaultcaret   getcaret
overtypecaret   new overtypecaret
overtypecaret setblinkrate defaultcaret getblinkrate
public void addnotify
super addnotify
addmouselistener mouseadapter
findreplaceutility registertextcomponent this
public int getnumberofpages
styleddocument doc    styleddocument getdocument
paper paper   page_format getpaper
numpages
int math ceil getsize   getheight     paper getimageableheight
return numpages
public pageformat getpageformat int pageindex  throws indexoutofboundsexception
return page_format
public printable getprintable int param  throws indexoutofboundsexception
return this
public int print graphics graphics  pageformat pageformat  int page
throws printerexception
if  page < numpages
styleddocument doc    styleddocument getdocument
paper paper   pageformat getpaper
// initialize the print_pane (need this so that wrapping
// can take place)
print_pane setdocument getdocument
print_size setsize paper getimageablewidth
getsize   getheight
print_pane setsize print_size
// translate the graphics origin upwards so the area of the page we
// want to print is in the origin; the clipping region auto set
// will take care of the rest
double y     page   paper getimageableheight      paper getimageabley
graphics2d graphics  translate paper getimageablex    y
// print the text with its own routines
print_pane print graphics
// translate the graphics object back to reality in the y dimension
// so we can print a page number
graphics2d graphics  translate 0   y
rectangle rect   graphics getclipbounds
graphics setclip rect x  0  rect width   int paper getheight     100
// get the name of the pane (or user name) and the time for the header
calendar cal   calendar getinstance
string header   cal gettime   tostring   trim
string name   getname      null ?
system getproperty    trim     getname   trim
string pagestr   string valueof page   1
font font   font decode
graphics setfont font
fontmetrics fm   graphics getfontmetrics font
int width   swingutilities computestringwidth fm  header
graphics2d graphics  drawstring header
float  paper getimageablewidth   2   width 2
float paper getimageabley   2   fm getheight
graphics2d graphics  translate 0  paper getimageabley     fm getheight
double height   paper getimageableheight     paper getimageabley   2
width   swingutilities computestringwidth fm  name
graphics2d graphics  drawstring name
float  paper getimageablewidth   2   width 2
float height   fm getheight   2
graphics2d graphics  translate 0  fm getheight
width   swingutilities computestringwidth fm  pagestr
graphics2d graphics  drawstring pagestr
float  paper getimageablewidth   2   width 2
float height   fm getheight   2
return printable page_exists
return printable no_such_page
public boolean getscrollabletracksviewportwidth
boolean bool   super getscrollabletracksviewportwidth
if  unwrapped
component parent   this getparent
componentui ui   this getui
int uiwidth   ui getpreferredsize this  width
int parentwidth   parent getsize   width
bool    parent    null  ?
ui getpreferredsize this  width < parent getsize   width    true
return bool
public boolean ismultilinetabbed
return multilinetab
public static boolean isovertypemode
return isovertypemode
public boolean istabsasspaces
return tabsasspaces
public boolean isunwrapped
return unwrapped
protected void processkeyevent keyevent e
super processkeyevent e
//  handle release of insert key to toggle overtype/insert mode
if  e getid      keyevent key_released
e getkeycode      keyevent vk_insert
setovertypemode  isovertypemode
public void removenotify
super removenotify
removemouselistener mouseadapter
findreplaceutility unregistertextcomponent this
public void replaceselection string text
//  implement overtype mode by selecting the character at the current
//  caret position
if  isovertypemode
int pos   getcaretposition
if  getselectedtext      null    pos < getdocument   getlength
movecaretposition pos   1
super replaceselection text
public void setbounds int x  int y  int width  int height
if  unwrapped
dimension size   this getpreferredsize
super setbounds x  y
math max size width  width
math max size height  height
else
super setbounds x  y  width  height
/**
* @param multilinetab
*/
public void ismultilinetabbed boolean multilinetab
this multilinetab   multilinetab
/**
* @param tabsasspaces
*/
public void istabsasspaces boolean tabsasspaces
this tabsasspaces   tabsasspaces
/**
* set the caret to use depending on overtype/insert mode
*
* @param isovertypemode
*/
public void setovertypemode boolean isovertypemode
texteditor isovertypemode   isovertypemode
int pos   getcaretposition
if  isovertypemode
setcaret overtypecaret
else
setcaret defaultcaret
setcaretposition pos
/**
* @param unwrapped
*/
public void setunwrapped boolean unwrapped
this unwrapped   unwrapped
private class findaction extends abstractaction
public void actionperformed actionevent ae
findreplaceutility showdialog
private class replaceaction extends abstractaction
public void actionperformed actionevent ae
findreplaceutility showdialog true
private class shifttabaction extends abstractaction
public void actionperformed actionevent ae
try
if  multilinetab    texteditor this getselectedtext      null
document doc   texteditor this getdocument
int end   utilities getrowend texteditor this
getselectionend
texteditor this setselectionend end
element el
utilities getparagraphelement texteditor this
getselectionstart
int start   el getstartoffset
texteditor this setselectionstart start
// remove text and reselect the text
string text   tabsasspaces ?
tab_back_pattern matcher getselectedtext    replaceall
getselectedtext   replaceall
texteditor this replaceselection text
texteditor this select start  start   text length
catch  exception e
e printstacktrace
private class tabaction extends abstractaction
public void actionperformed actionevent ae
try
document doc   texteditor this getdocument
string text   tabsasspaces ? tabbed_spaces
if  multilinetab    getselectedtext      null
int end   utilities getrowend texteditor this
getselectionend
texteditor this setselectionend end
element el
utilities getparagraphelement texteditor this
getselectionstart
int start   el getstartoffset
texteditor this setselectionstart start
string toreplace   texteditor this getselectedtext
toreplace   line_start matcher toreplace  replaceall text
texteditor this replaceselection toreplace
texteditor this select start  start   toreplace length
else
int pos   texteditor this getcaretposition
doc insertstring pos  text  null
catch  exception e
e printstacktrace
/**
*  paint a horizontal line the width of a column and 1 pixel high
*/
private class overtypecaret extends defaultcaret
//the overtype caret will simply be a horizontal line one pixel high
// (once we determine where to paint it)
public void paint graphics g
if  isvisible
try
jtextcomponent component   getcomponent
rectangle r
component getui   modeltoview component  getdot
color c   g getcolor
g setcolor component getbackground
g setxormode component getcaretcolor
r setbounds r x  r y
g getfontmetrics   charwidth
g getfontmetrics   getheight
g fillrect r x  r y  r width  r height
g setpaintmode
g setcolor c
catch  badlocationexception e
e printstacktrace
/*
*  damage must be overridden whenever the paint method is overridden
*  (the damaged area is the area the caret is painted in. we must
*  consider the area for the default caret and this caret)
*/
protected synchronized void damage rectangle r
if  r    null
jtextcomponent component   getcomponent
x   r x
y   r y
font font   component getfont
width   component getfontmetrics font  charwidth
height   r height
repaint