/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast expr
import org codehaus groovy ast classhelper
import org codehaus groovy ast groovycodevisitor
import org codehaus groovy ast parameter
import org codehaus groovy ast variablescope
import org codehaus groovy ast stmt statement
import org codehaus groovy runtime invokerhelper
/**
* represents a closure creation expression such as { statement; }
* or { i : statement; } or { i, x, string y: statement }
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public class closureexpression extends expression
private parameter parameters
private statement code
private variablescope variablescope
public closureexpression parameter parameters  statement code
this parameters   parameters
this code   code
super settype classhelper closure_type
public void visit groovycodevisitor visitor
visitor visitclosureexpression this
public expression transformexpression expressiontransformer transformer
return this
public string tostring
return super tostring     invokerhelper tostring parameters        code
public statement getcode
return code
public parameter getparameters
return parameters
public boolean isparameterspecified
return parameters    null    parameters length > 0
public variablescope getvariablescope
return variablescope
public void setvariablescope variablescope variablescope
this variablescope   variablescope