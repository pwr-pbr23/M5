/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy sql
import groovy lang groovyobjectsupport
import groovy lang missingpropertyexception
import java util
/**
* represents an extent of objects.
* it's used in the onerow method to be able to access the result
* of a sql query by the name of the column, or by the column number.
*
* @version $revision$
* @author jean-louis berliet
*/
public class groovyrowresult extends groovyobjectsupport implements map
private final linkedhashmap result
public groovyrowresult linkedhashmap result
this result   result
/**
* retrieve the value of the property by its name    *
*
* @param property is the name of the property to look at
* @return the value of the property
*/
public object getproperty string property
try
object value   result get property
if  value    null
return value
// if property exists and value is null, return null
if  result containskey property
return null
// with some databases/drivers, the columns names are stored uppercase.
string propertyupper   property touppercase
value   result get propertyupper
if  value    null
return value
// if property exists and value is null, return null
if  result containskey propertyupper
return null
throw new missingpropertyexception property  groovyrowresult class
catch  exception e
throw new missingpropertyexception property  groovyrowresult class  e
/**
* retrieve the value of the property by its index.
* a negative index will count backwards from the last column.
*
* @param index is the number of the column to look at
* @return the value of the property
*/
public object getat int index
try
// a negative index will count backwards from the last column.
if  index < 0
index    result size
iterator it   result values   iterator
int i   0
object obj   null
while   obj    null      it hasnext
if  i    index
obj   it next
else
it next
i
return  obj
catch  exception e
throw new missingpropertyexception integer tostring index   groovyrowresult class  e
public string tostring
return  result tostring
/*
* the following methods are needed for implementing the map interface.
* they are just delegating the request to the internal linkedhashmap
*/
public void clear
result clear
public boolean containskey object key
return result containskey key
public boolean containsvalue object value
return result containsvalue value
public set entryset
return result entryset
public boolean equals object o
return result equals o
public object get object property
if  property instanceof string
return getproperty  string property
else
return null
public int hashcode
return result hashcode
public boolean isempty
return result isempty
public set keyset
return result keyset
public object put object key  object value
return result put key  value
public void putall map t
result putall t
public object remove object key
return result remove key
public int size
return result size
public collection values
return result values