/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy sql
import groovy lang groovyobject
import groovy lang groovysystem
import groovy lang metaclass
import java lang reflect invocationhandler
import java lang reflect method
import java lang reflect proxy
import java sql resultset
import org codehaus groovy runtime invokerhelper
/**
* groovyresultsetproxy is used to create a proxy for groovyresultset.
* due to the version incompatibility between java 6 and older versions
* methods with additional logic were moved into an extension class. when
* getting properties or calling methods, the runtime will try to first
* execute these on the extension and then on the resultset itself.
* this way it is possible to replace and add methods. to overload methods
* from resultset all methods have to be implemented on the extension
* class.
*
* @author jochen theodorou
*/
public final class groovyresultsetproxy implements invocationhandler
private groovyresultsetextension extension
/**
* creates a new procy instance.
* this will create the extension automatically using
* groovyresultsetextension
*
* @param set the result set to delegate to
* @see groovyresultsetextension
*/
public groovyresultsetproxy resultset set
extension   new groovyresultsetextension set
/**
* creates a new proxy instance with a custom extension.
*
* @param ext the extension
* @see groovyresultsetextension
*/
public groovyresultsetproxy groovyresultsetextension ext
extension   ext
/**
* invokes a method for the groovyresultset.
* this will try to invoke the given method first on the extension
* and then on the result set given as proxy parameter.
*
* @param proxy  the result set
* @param method the method name of this method will be used
*               to make a call on the extension. if this fails the call will be
*               done on the proxy instead
* @param args   for the call
* @see resultset
* @see java.lang.reflect.invocationhandler#invoke(java.lang.object, java.lang.reflect.method, java.lang.object[])
*/
public object invoke object proxy  method method  object args  throws throwable
string name   method getname
if  method getdeclaringclass      groovyobject class
if  name equals
return getmetaclass
else if  name equals
return setmetaclass  metaclass  args
return invokerhelper invokemethod extension  method getname    args
private metaclass metaclass
private metaclass setmetaclass metaclass mc
metaclass   mc
return mc
private metaclass getmetaclass
if  metaclass    null
metaclass   groovysystem getmetaclassregistry   getmetaclass groovyresultset class
return metaclass
/**
* gets a proxy instance that can be used as groovyresultset.
*
* @return the proxy
*/
public groovyresultset getimpl
return  groovyresultset
proxy newproxyinstance
this getclass   getclassloader
new class groovyresultset class
this