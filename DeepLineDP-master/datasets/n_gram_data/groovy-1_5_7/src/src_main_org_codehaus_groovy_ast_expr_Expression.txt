/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast expr
import java util arraylist
import java util iterator
import java util list
import org codehaus groovy ast astnode
import org codehaus groovy ast classhelper
import org codehaus groovy ast classnode
/**
* represents a base class for expressions which evaluate as an object
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public abstract class expression extends astnode
private classnode type classhelper dynamic_type
/**
* return a copy of the expression calling the transformer on any nested expressions
* @param transformer
*/
public abstract expression transformexpression expressiontransformer transformer
/**
* transforms the list of expressions
* @return a new list of transformed expressions
*/
protected list transformexpressions list expressions  expressiontransformer transformer
list list   new arraylist expressions size
for  iterator iter   expressions iterator    iter hasnext
list add transformer transform  expression  iter next
return list
public classnode gettype
return type
public void settype classnode t
type t