/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy control io
import java io ioexception
import java io inputstream
import java io inputstreamreader
import java io reader
import org codehaus groovy control compilerconfiguration
/**
* a readersource for source strings.
*
* @author <a href="mailto:cpoirier@dreaming.org">chris poirier</a>
* @version $id$
*/
public class inputstreamreadersource extends abstractreadersource
private inputstream stream      the inputstream from which we produce a reader
/**
* creates the readersource from a file descriptor.
*
* @param stream        stream containing source
* @param configuration configuration for compiling source
*/
public inputstreamreadersource inputstream stream  compilerconfiguration configuration
super configuration
this stream   stream
/**
* returns a new reader on the underlying source object.
*/
public reader getreader   throws ioexception
if  stream    null
reader reader   new inputstreamreader stream  configuration getsourceencoding
stream   null
return reader
return null
/**
* returns true if the source can be restarted (ie. if getreader()
* will return non-null on subsequent calls.
*/
public boolean canreopensource
return false