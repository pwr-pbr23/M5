/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy xml
import groovy util buildersupport
import java io ioexception
import java io reader
import java util iterator
import java util map
import javax xml parsers documentbuilder
import javax xml parsers documentbuilderfactory
import javax xml parsers parserconfigurationexception
import org w3c dom document
import org w3c dom element
import org w3c dom node
import org xml sax inputsource
import org xml sax saxexception
/**
* a helper class for creating a w3c dom tree
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public class dombuilder extends buildersupport
document document
documentbuilder documentbuilder
public static dombuilder newinstance   throws parserconfigurationexception
return newinstance false  true
public static dombuilder newinstance boolean validating  boolean namespaceaware  throws parserconfigurationexception
documentbuilderfactory factory   factorysupport createdocumentbuilderfactory
factory setnamespaceaware namespaceaware
factory setvalidating validating
return new dombuilder factory newdocumentbuilder
public static document parse reader reader  throws saxexception  ioexception  parserconfigurationexception
return parse reader  false  true
public static document parse reader reader  boolean validating  boolean namespaceaware
throws saxexception  ioexception  parserconfigurationexception
documentbuilderfactory factory   factorysupport createdocumentbuilderfactory
factory setnamespaceaware namespaceaware
factory setvalidating validating
documentbuilder documentbuilder   factory newdocumentbuilder
return documentbuilder parse new inputsource reader
public dombuilder document document
this document   document
public dombuilder documentbuilder documentbuilder
this documentbuilder   documentbuilder
protected void setparent object parent  object child
node current    node  parent
node node    node  child
current appendchild node
protected object createnode object name
if  document    null
document   createdocument
if  name instanceof qname
qname qname    qname  name
return document createelementns qname getnamespaceuri    qname getqualifiedname
else
return document createelement name tostring
protected document createdocument
if  documentbuilder    null
throw new illegalargumentexception
else
return documentbuilder newdocument
protected object createnode object name  object value
element element    element  createnode name
element appendchild document createtextnode value tostring
return element
protected object createnode object name  map attributes  object value
element element    element  createnode name  attributes
element appendchild document createtextnode value tostring
return element
protected object createnode object name  map attributes
element element    element  createnode name
for  iterator iter   attributes entryset   iterator    iter hasnext
map entry entry    map entry  iter next
string attrname   entry getkey   tostring
object value   entry getvalue
if    equals attrname
if  value instanceof map
appendnamespaceattributes element   map  value
else
throw new illegalargumentexception
else
string valuetext    value    null  ? value tostring
element setattribute attrname  valuetext
return element
protected void appendnamespaceattributes element element  map attributes
for  iterator iter   attributes entryset   iterator    iter hasnext
map entry entry    map entry  iter next
object key   entry getkey
object value   entry getvalue
if  value    null
throw new illegalargumentexception     key
if  key instanceof string
string prefix    string  key
//system.out.println("creating namespace for prefix: " + prefix + " with value: " + value);
//element.setattributens("http://www.w3.org/xml/1998/namespace", "xmlns:" + prefix, value.tostring());
element setattributens    prefix  value tostring
else if  key instanceof qname
qname qname    qname  key
element setattributens qname getnamespaceuri    qname getqualifiedname    value tostring
else
throw new illegalargumentexception     key       qname class