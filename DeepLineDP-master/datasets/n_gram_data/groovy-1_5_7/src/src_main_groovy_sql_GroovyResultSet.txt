/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy sql
import groovy lang closure
import groovy lang groovyobject
import groovy lang missingpropertyexception
import java sql resultset
import java sql sqlexception
import java util map
/**
* represents an extent of objects
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @author <a href="mailto:ivan_ganza@yahoo.com">ivan ganza</a>
* @author chris stevenson
* @version $revision$
*/
public interface groovyresultset extends groovyobject  resultset
/**
* supports integer-based subscript operators for accessing at numbered columns
* starting at zero. negative indices are supported, they will count from the last column backwards.
*
* @param index is the number of the column to look at starting at 1
* @throws sqlexception if a database error occurs
* @return the object for this index in the current result set
*/
object getat int index  throws sqlexception
/**
* gets the value of the designated column in the current row
* as an <code>object</code>.
* @param columnname the sql name of the column
* @throws groovy.lang.missingpropertyexception
*   if an sqlexception happens while getting the object
* @return the returned column value
*/
public object getat string columnname
/**
* supports integer based subscript operators for updating the values of numbered columns
* starting at zero. negative indices are supported, they will count from the last column backwards.
*
* @param index is the number of the column to look at starting at 1
* @param newvalue the new value for this index
* @throws sqlexception if a database error occurs
*/
void putat int index  object newvalue  throws sqlexception
/**
* updates the designated column with an <code>object</code> value.
* @param columnname the sql name of the column
* @param newvalue the updated value
* @throws missingpropertyexception
*   if an sqlexception happens while setting the new value
*/
public void putat string columnname  object newvalue
/**
* adds a new row to this result set
*
* @param values teh new values to add
* @throws sqlexception if a database error occurs
*/
void add map values  throws sqlexception
/**
* call the closure once for each row in the result set.
*
* @param closure the closure to call for each row
* @throws sqlexception if a database error occurs
*/
void eachrow closure closure  throws sqlexception