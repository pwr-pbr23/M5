/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy antlr
import java awt
import java awt event
import java io
import java lang reflect
import java util hashtable
import javax swing
import javax swing border border
import javax swing text badlocationexception
import org codehaus groovy antlr parser
import antlr
/**
* @author santhosh kumar t
* @version 1.0
*/
public class lexerframe extends jframe implements actionlistener
jsplitpane jsplitpane1   new jsplitpane
jscrollpane jscrollpane1   new jscrollpane
jscrollpane jscrollpane2   new jscrollpane
jtextpane tokenpane   new hscrollabletextpane
jbutton jbutton   new jbutton
jpanel mainpanel   new jpanel new borderlayout
jtextarea scriptpane   new jtextarea
border border1
border border2
class lexerclass
public lexerframe class lexerclass  class tokentypesclass
super
this lexerclass   lexerclass
try
jbinit
setsize 500  500
listtokens tokentypesclass
final jpopupmenu popup   new jpopupmenu
popup add loadfileaction
jbutton setsize 30 30
jbutton addmouselistener new mouseadapter
public void mousereleased mouseevent e
//if(e.ispopuptrigger())
popup show scriptpane  e getx    e gety
setdefaultcloseoperation jframe exit_on_close
catch exception e
e printstacktrace
hashtable tokens   new hashtable
private void listtokens class tokentypes  throws exception
field field   tokentypes getdeclaredfields
for int i   0  i<field length  i
tokens put field get null   field getname
public void actionperformed actionevent ae
token token    token    jcomponent  ae getsource    getclientproperty
if token gettype    token eof_type
scriptpane select 0  0
return
try
int start   scriptpane getlinestartoffset token getline   1  token getcolumn   1
scriptpane select start  start token gettext   length
scriptpane requestfocus
catch badlocationexception ex
// ignore
private action loadfileaction   new abstractaction
public void actionperformed actionevent ae
jfilechooser jfc   new jfilechooser
int response   jfc showopendialog lexerframe this
if response  jfilechooser approve_option
return
try
scanscript jfc getselectedfile
catch exception ex
ex printstacktrace
private void scanscript file file  throws exception
scriptpane read new filereader file   null
// create lexer
constructor constructor   lexerclass getconstructor new class inputstream class
charscanner lexer    charscanner  constructor newinstance new object new fileinputstream file
tokenpane seteditable true
tokenpane settext
int line   1
buttongroup bg   new buttongroup
token token   null
while true
token   lexer nexttoken
jtogglebutton tokenbutton   new jtogglebutton  string  tokens get new integer token gettype
bg add tokenbutton
tokenbutton addactionlistener this
tokenbutton settooltiptext token gettext
tokenbutton putclientproperty    token
tokenbutton setmargin new insets 0  1  0  1
tokenbutton setfocuspainted false
if token getline  >line
tokenpane getdocument   insertstring tokenpane getdocument   getlength       null
line   token getline
insertcomponent tokenbutton
if token gettype    token eof_type
break
tokenpane seteditable false
tokenpane setcaretposition 0
private void insertcomponent jcomponent comp
try
tokenpane getdocument   insertstring tokenpane getdocument   getlength       null
catch badlocationexception ex1
// ignore
try
tokenpane setcaretposition tokenpane getdocument   getlength   1
catch exception ex
tokenpane setcaretposition 0
tokenpane insertcomponent comp
private void jbinit   throws exception
border1   borderfactory createemptyborder
border2   borderfactory createemptyborder
jsplitpane1 setorientation jsplitpane vertical_split
tokenpane seteditable false
tokenpane settext
scriptpane setfont new java awt font    0  12
scriptpane seteditable false
scriptpane setmargin new insets 5  5  5  5
scriptpane settext
jscrollpane1 setborder border1
jscrollpane2 setborder border1
jsplitpane1 setminimumsize new dimension 800 600
mainpanel add jsplitpane1  borderlayout center
mainpanel add jbutton borderlayout north
this getcontentpane   add mainpanel
jsplitpane1 add jscrollpane1  jsplitpane left
jscrollpane1 getviewport   add tokenpane  null
jsplitpane1 add jscrollpane2  jsplitpane right
jscrollpane2 getviewport   add scriptpane  null
jscrollpane1 setcolumnheaderview new jlabel
jscrollpane2 setcolumnheaderview new jlabel
jsplitpane1 setresizeweight 0 5
public static void main string args  throws exception
try
uimanager setlookandfeel uimanager getsystemlookandfeelclassname
catch exception ignore
// ignore
new lexerframe groovylexer class  groovytokentypes class  setvisible true
class hscrollabletextpane extends jtextpane
public boolean getscrollabletracksviewportwidth
return getsize   width<getparent   getsize   width
public void setsize dimension d
if d width<getparent   getsize   width
d width   getparent   getsize   width
super setsize d