/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ast expr
import groovy lang closure
import org codehaus groovy ast classhelper
import org codehaus groovy ast classnode
import org codehaus groovy ast groovycodevisitor
/**
* represents a method pointer on an object such as
* foo.&bar which means find the method pointer on foo for the method called "bar"
* which is equivalent to
* <code>
* foo.metaclass.getmethodpointer(foo, "bar")
*
* @version $revision$
*/
public class methodpointerexpression extends expression
private expression expression
private expression methodname
public methodpointerexpression expression expression  expression methodname
this expression   expression
this methodname   methodname
public expression getexpression
if  expression    null
return variableexpression this_expression
else
return expression
public expression getmethodname
return methodname
public void visit groovycodevisitor visitor
visitor visitmethodpointerexpression this
public expression transformexpression expressiontransformer transformer
expression ret
expression mname   transformer transform methodname
if  expression    null
ret   new methodpointerexpression variableexpression this_expression  mname
else
ret   new methodpointerexpression transformer transform expression   mname
ret setsourceposition this
return ret
public string gettext
if  expression    null
return     methodname
else
return expression gettext         methodname gettext
public classnode gettype
return classhelper closure_type
public boolean isdynamic
return false
public class gettypeclass
return closure class