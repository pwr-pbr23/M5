/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy tools shell
import java io ioexception
import java io inputstream
import java io inputstreamreader
import java io outputstream
import java io printwriter
import java io reader
import org codehaus groovy tools shell util ansi renderwriter
import org codehaus groovy tools shell util preferences
/**
* container for input/output handles.
*
* @version $id$
* @author <a href="mailto:jason@planet57.com">jason dillon</a>
*/
public class io
/** raw input stream. */
public final inputstream inputstream
/** raw output stream. */
public final outputstream outputstream
/** raw error output stream. */
public final outputstream errorstream
/** prefered input reader. */
public final reader in
/** prefered output writer. */
public final printwriter out
/** prefered error output writer. */
public final printwriter err
/**
* construct a new io container.
*/
public io final inputstream inputstream  final outputstream outputstream  final outputstream errorstream
assert inputstream    null
assert outputstream    null
assert errorstream    null
this inputstream   inputstream
this outputstream   outputstream
this errorstream   errorstream
this in   new inputstreamreader inputstream
//
// todo: once all user output is in i18n, then it would be more efficent to have the messagesource
//       be ansi-aware instead of this...
//
this out   new renderwriter outputstream  true
this err   new renderwriter errorstream  true
/**
* construct a new io container using system streams.
*/
public io
this system in  system out  system err
/**
* set the verbosity level.
*
* @param verbosity
*/
public void setverbosity final verbosity verbosity
assert verbosity    null
preferences verbosity   verbosity
/**
* returns the verbosity level.
*/
public verbosity getverbosity
return preferences verbosity
/**
* check if the verbosity level is set to {@link verbosity#quiet}.
*/
public boolean isquiet
return getverbosity      verbosity quiet
/**
* check if the verbosity level is set to {@link verbosity#info}.
*/
public boolean isinfo
return getverbosity      verbosity info
/**
* check if the verbosity level is set to {@link verbosity#verbose}.
*/
public boolean isverbose
return getverbosity      verbosity verbose
/**
* check if the verbosity level is set to {@link verbosity#debug}.
*
* <p>for generaly usage, when debug output is required, it is better
* to use the logging facility instead.
*/
public boolean isdebug
return getverbosity      verbosity debug
/**
* flush both output streams.
*/
public void flush   throws ioexception
out flush
err flush
/**
* close all streams.
*/
public void close   throws ioexception
in close
out close
err close
//
// verbosity
//
public static final class verbosity
public static final verbosity quiet   new verbosity
public static final verbosity info   new verbosity
public static final verbosity verbose   new verbosity
public static final verbosity debug   new verbosity
public final string name
private verbosity final string name
this name   name
public string tostring
return name
public static verbosity forname final string name
assert name    null
if  quiet name equalsignorecase name
return quiet
if  info name equalsignorecase name
return info
if  verbose name equalsignorecase name
return verbose
if  debug name equalsignorecase name
return debug
throw new illegalargumentexception     name