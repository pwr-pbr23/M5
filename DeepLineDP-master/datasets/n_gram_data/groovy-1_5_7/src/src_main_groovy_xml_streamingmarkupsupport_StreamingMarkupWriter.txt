/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy xml streamingmarkupsupport
import groovy io encodingawarebufferedwriter
import java io ioexception
import java io outputstreamwriter
import java io writer
import java nio charset charset
import java nio charset charsetencoder
public class streamingmarkupwriter extends writer
protected final writer writer
protected final string encoding
protected boolean encodingknown
protected final charsetencoder encoder
protected boolean writingattribute   false
protected boolean havehighsurrogate   false
protected stringbuffer surrogatepair   new stringbuffer 2
private final writer escapedwriter    new writer
/* (non-javadoc)
* @see java.io.writer#close()
*/
public void close   throws ioexception
streamingmarkupwriter this close
/* (non-javadoc)
* @see java.io.writer#flush()
*/
public void flush   throws ioexception
streamingmarkupwriter this flush
/* (non-javadoc)
* @see java.io.writer#write(int)
*/
public void write final int c  throws ioexception
if  c
streamingmarkupwriter this writer write
else if  c
streamingmarkupwriter this writer write
else if  c
streamingmarkupwriter this writer write
else
streamingmarkupwriter this write c
/* (non-javadoc)
* @see java.io.writer#write(char[], int, int)
*/
public void write final char cbuf  int off  int len  throws ioexception
while  len   > 0
write cbuf
public void setwritingattribute final boolean writingattribute
streamingmarkupwriter this writingattribute   writingattribute
public writer excaped
return escapedwriter
public writer unescaped
return streamingmarkupwriter this
public streamingmarkupwriter final writer writer  final string encoding
this writer   writer
if  encoding    null
this encoding   encoding
this encodingknown   true
else if  writer instanceof outputstreamwriter
this encoding   getnormalizedencoding   outputstreamwriter writer  getencoding
this encodingknown   true
else if  writer instanceof encodingawarebufferedwriter
this encoding   getnormalizedencoding   encodingawarebufferedwriter writer  getencoding
this encodingknown   true
else
this encoding
this encodingknown   false
this encoder   charset forname this encoding  newencoder
private string getnormalizedencoding string unnormalized
return charset forname unnormalized  name
public streamingmarkupwriter final writer writer
this writer  null
/* (non-javadoc)
* @see java.io.writer#close()
*/
public void close   throws ioexception
this writer close
/* (non-javadoc)
* @see java.io.writer#flush()
*/
public void flush   throws ioexception
this writer flush
/* (non-javadoc)
* @see java.io.writer#write(int)
*/
public void write final int c  throws ioexception
if  c >  0xdc00    c <  0xdfff
// low surrogate
this surrogatepair append  char c
if  this encoder canencode this surrogatepair
this writer write this surrogatepair tostring
else
this writer write
this writer write integer tohexstring 0x10000     this surrogatepair charat 0    0x3ff  << 10     c   0x3ff
this writer write
this havehighsurrogate   false
this surrogatepair setlength 0
else
if  this havehighsurrogate
this havehighsurrogate   false
this surrogatepair setlength 0
throw new ioexception
if  c >  0xd800    c <  0xdbff
// high surrogate
this surrogatepair append  char c
this havehighsurrogate   true
else if   this encoder canencode  char c
this writer write
this writer write integer tohexstring c
this writer write
else if  c         this writingattribute
this writer write
else
this writer write c
/* (non-javadoc)
* @see java.io.writer#write(char[], int, int)
*/
public void write final char cbuf  int off  int len  throws ioexception
while  len   > 0
write cbuf
public void setwritingattribute final boolean writingattribute
this writingattribute   writingattribute
public writer escaped
return this escapedwriter
public writer unescaped
return this
public string getencoding
return this encoding
public boolean getencodingknown
return this encodingknown