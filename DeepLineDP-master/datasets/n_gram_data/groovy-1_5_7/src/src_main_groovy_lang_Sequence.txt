/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy lang
import java util arraylist
import java util collection
import java util iterator
import java util list
import org codehaus groovy runtime invokerhelper
import org codehaus groovy runtime typehandling defaulttypetransformation
/**
* represents a sequence of objects which represents zero or many instances of
* of objects of a given type. the type can be ommitted in which case any type of
* object can be added.
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public class sequence extends arraylist implements groovyobject
private metaclass metaclass   invokerhelper getmetaclass this
private class type
private int hashcode
public sequence
this null
public sequence class type
this type   type
public sequence class type  list content
super content size
this type   type
addall content
/**
* sets the contents of this sequence to that
* of the given collection.
*/
public void set collection collection
checkcollectiontype collection
clear
addall collection
public boolean equals object that
if  that instanceof sequence
return equals  sequence  that
return false
public boolean equals sequence that
if  size      that size
for  int i   0  i < size    i
if   defaulttypetransformation compareequal this get i   that get i
return false
return true
return false
public int hashcode
if  hashcode    0
for  int i   0  i < size    i
object value   get i
int hash    value    null  ? value hashcode     0xbabe
hashcode ^  hash
if  hashcode    0
hashcode   0xbabe
return hashcode
public int minimumsize
return 0
/**
* @return the type of the elements in the sequence or null if there is no
* type constraint on this sequence
*/
public class type
return type
public void add int index  object element
checktype element
hashcode   0
super add index  element
public boolean add object element
checktype element
hashcode   0
return super add element
public boolean addall collection c
checkcollectiontype c
hashcode   0
return super addall c
public boolean addall int index  collection c
checkcollectiontype c
hashcode   0
return super addall index  c
public void clear
hashcode   0
super clear
public object remove int index
hashcode   0
return super remove index
protected void removerange int fromindex  int toindex
hashcode   0
super removerange fromindex  toindex
public object set int index  object element
hashcode   0
return super set index  element
// groovyobject interface
//-------------------------------------------------------------------------
public object invokemethod string name  object args
try
return getmetaclass   invokemethod this  name  args
catch  missingmethodexception e
// lets apply the method to each item in the collection
list answer   new arraylist size
for  iterator iter   iterator    iter hasnext
object element   iter next
object value   invokerhelper invokemethod element  name  args
answer add value
return answer
public object getproperty string property
return getmetaclass   getproperty this  property
public void setproperty string property  object newvalue
getmetaclass   setproperty this  property  newvalue
public metaclass getmetaclass
return metaclass
public void setmetaclass metaclass metaclass
this metaclass   metaclass
// implementation methods
//-------------------------------------------------------------------------
/**
* checks that each member of the given collection are of the correct
* type
*/
protected void checkcollectiontype collection c
if  type    null
for  iterator iter   c iterator    iter hasnext
object element   iter next
checktype element
/**
* checks that the given object instance is of the correct type
* otherwise a runtime exception is thrown
*/
protected void checktype object object
if  object    null
throw new nullpointerexception
if  type    null
if   type isinstance object
throw new illegalargumentexception
type getname
object