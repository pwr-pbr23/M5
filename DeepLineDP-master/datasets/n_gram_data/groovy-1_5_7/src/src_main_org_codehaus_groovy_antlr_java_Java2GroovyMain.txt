/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy antlr java
import java io bytearrayoutputstream
import java io file
import java io filenotfoundexception
import java io fileoutputstream
import java io printstream
import java io stringreader
import java util arrays
import java util iterator
import java util list
import org apache commons cli commandline
import org apache commons cli options
import org apache commons cli posixparser
import org codehaus groovy antlr antlrastprocessor
import org codehaus groovy antlr sourcebuffer
import org codehaus groovy antlr unicodeescapingreader
import org codehaus groovy antlr parser groovylexer
import org codehaus groovy antlr parser groovyrecognizer
import org codehaus groovy antlr treewalker
import org codehaus groovy runtime defaultgroovymethods
import antlr collections ast
public class java2groovymain
public static void main string args
try
options options   new options
posixparser cliparser   new posixparser
commandline cli   cliparser parse options  args
string filenames   cli getargs
if  filenames length    0
system err println
list filenamelist   arrays aslist filenames
iterator i   filenamelist iterator
while  i hasnext
string filename    string  i next
file f   new file filename
string text   defaultgroovymethods gettext f
system out println convert filename  text  true  true
catch  throwable t
t printstacktrace
public static string convert string filename  string input  throws exception
return convert filename  input  false  false
public static string convert string filename  string input boolean withheader  boolean withnewlines  throws exception
javarecognizer parser   getjavaparser input
string tokennames   parser gettokennames
parser compilationunit
ast ast   parser getast
// output ast in format suitable for opening in http://freemind.sourceforge.net
// which is a really nice way of seeing the ast, folding nodes etc
if    equals system getproperty
try
printstream out   new printstream new fileoutputstream filename
visitor visitor   new mindmapprinter out tokennames
antlrastprocessor treewalker   new preordertraversal visitor
treewalker process ast
catch  filenotfoundexception e
system out println     filename
// modify the java ast into a groovy ast
modifyjavaastintogroovyast tokennames  ast
string groovytokennames   getgroovytokennames input
// groovify the fat java-like groovy ast
groovifyfatjavalikegroovyast ast  groovytokennames
// now output
bytearrayoutputstream baos   new bytearrayoutputstream
visitor visitor   new sourceprinter new printstream baos  groovytokennames  withnewlines
antlrastprocessor traverser   new sourcecodetraversal visitor
traverser process ast
string header
if  withheader
header
"  automatically converted from java source \n" +
"  \n" +
"  by java2groovy v0.0.1   copyright jeremy rayner 2007\n" +
"  \n" +
"  !! not fit for any purpose !! \n" +
"  'java2groovy' cannot be used to convert one working program into another" +
return header   new string baos tobytearray
/**
* @param ast
* @param groovytokennames
*/
private static void groovifyfatjavalikegroovyast ast ast  string groovytokennames
visitor groovifier   new groovifier groovytokennames
antlrastprocessor groovifiertraverser   new preordertraversal groovifier
groovifiertraverser process ast
/**
* @param tokennames
* @param ast
*/
private static void modifyjavaastintogroovyast string tokennames  ast ast
// mutate the tree when in javaland
visitor prejava2groovyconverter   new prejava2groovyconverter tokennames
antlrastprocessor prejava2groovytraverser   new preordertraversal prejava2groovyconverter
prejava2groovytraverser process ast
// map the nodes to groovy types
visitor java2groovyconverter   new java2groovyconverter tokennames
antlrastprocessor java2groovytraverser   new preordertraversal java2groovyconverter
java2groovytraverser process ast
/**
* @param input
* @return
*/
private static javarecognizer getjavaparser string input
javarecognizer parser   null
sourcebuffer sourcebuffer   new sourcebuffer
unicodeescapingreader unicodereader   new unicodeescapingreader new stringreader input  sourcebuffer
javalexer lexer   new javalexer unicodereader
unicodereader setlexer lexer
parser   javarecognizer make lexer
parser setsourcebuffer sourcebuffer
return parser
public static string mindmap string input  throws exception
javarecognizer parser   getjavaparser input
string tokennames   parser gettokennames
parser compilationunit
ast ast   parser getast
// modify the java ast into a groovy ast
modifyjavaastintogroovyast tokennames  ast
string groovytokennames   getgroovytokennames input
// groovify the fat java-like groovy ast
groovifyfatjavalikegroovyast ast  groovytokennames
// now output
bytearrayoutputstream baos   new bytearrayoutputstream
visitor visitor   new mindmapprinter new printstream baos  groovytokennames
antlrastprocessor traverser   new sourcecodetraversal visitor
traverser process ast
return new string baos tobytearray
public static string nodeprinter string input  throws exception
javarecognizer parser   getjavaparser input
string tokennames   parser gettokennames
parser compilationunit
ast ast   parser getast
// modify the java ast into a groovy ast
modifyjavaastintogroovyast tokennames  ast
string groovytokennames   getgroovytokennames input
// groovify the fat java-like groovy ast
groovifyfatjavalikegroovyast ast  groovytokennames
// now output
bytearrayoutputstream baos   new bytearrayoutputstream
visitor visitor   new nodeprinter new printstream baos  groovytokennames
antlrastprocessor traverser   new sourcecodetraversal visitor
traverser process ast
return new string baos tobytearray
private static string getgroovytokennames string input
groovyrecognizer groovyparser   null
sourcebuffer groovysourcebuffer   new sourcebuffer
unicodeescapingreader groovyunicodereader   new unicodeescapingreader new stringreader input  groovysourcebuffer
groovylexer groovylexer   new groovylexer groovyunicodereader
groovyunicodereader setlexer groovylexer
groovyparser   groovyrecognizer make groovylexer
return groovyparser gettokennames