/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy control
import groovy lang groovyruntimeexception
/**
* thrown when compilation fails from source errors.
*
* @author <a href="mailto:cpoirier@dreaming.org">chris poirier</a>
* @version $id$
*/
public class compilationfailedexception extends groovyruntimeexception
protected int phase       the phase in which the failures occurred
protected processingunit unit        the  unit object this exception wraps
public compilationfailedexception int phase  processingunit unit  throwable cause
super phases getdescription phase       cause
this phase   phase
this unit   unit
}
public compilationfailedexception int phase  processingunit unit
super phases getdescription phase
this phase   phase
this unit   unit
}
/**
* formats the error data as a string.
*/
/*public string tostring() {
stringwriter data = new stringwriter();
printwriter writer = new printwriter(data);
janitor janitor = new janitor();
try {
unit.geterrorreporter().write(writer, janitor);
}
finally {
janitor.cleanup();
}
return data.tostring();
}*/
/**
* returns the processingunit in which the error occurred.
*/
public processingunit getunit
return this unit
}
}