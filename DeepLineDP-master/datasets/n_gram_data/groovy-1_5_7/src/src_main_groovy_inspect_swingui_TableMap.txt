/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy inspect swingui
/**
* in a chain of data manipulators some behaviour is common. tablemap
* provides most of this behavour and can be subclassed by filters
* that only need to override a handful of specific methods. tablemap
* implements tablemodel by routing all requests to its model, and
* tablemodellistener by routing all events to its listeners. inserting
* a tablemap which has not been subclassed into a chain of table filters
* should have no effect.
*
* @version 1.11 01/23/03
* @author philip milne */
import javax swing table
import javax swing event tablemodellistener
import javax swing event tablemodelevent
public class tablemap extends abstracttablemodel implements tablemodellistener
protected tablemodel model
public tablemodel  getmodel
return model
public void  setmodel tablemodel model
this model   model
model addtablemodellistener this
// by default, implement tablemodel by forwarding all messages
// to the model.
public object getvalueat int arow  int acolumn
return model getvalueat arow  acolumn
public void setvalueat object avalue  int arow  int acolumn
model setvalueat avalue  arow  acolumn
public int getrowcount
return  model    null  ? 0   model getrowcount
public int getcolumncount
return  model    null  ? 0   model getcolumncount
public string getcolumnname int acolumn
return model getcolumnname acolumn
public class getcolumnclass int acolumn
return model getcolumnclass acolumn
public boolean iscelleditable int row  int column
return model iscelleditable row  column
//
// implementation of the tablemodellistener interface,
//
// by default forward all events to all the listeners.
public void tablechanged tablemodelevent e
firetablechanged e