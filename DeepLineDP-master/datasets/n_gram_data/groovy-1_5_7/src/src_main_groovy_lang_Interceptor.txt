/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy lang
/**
* implementers of this interface can be registered in the proxymetaclass for
* notifications about method calls for objects managed by the proxymetaclass.
* see groovy/lang/interceptortest.groovy for details.
* @author dierk koenig
*/
public interface interceptor
/**
* this code is executed before the method is optionally called.
* @param object        receiver object for the method call
* @param methodname    name of the method to call
* @param arguments     arguments to the method call
* @return any arbitrary result that replaces the result of the
* original method call only if doinvoke() returns false and afterinvoke()
* relays this result.
*/
object beforeinvoke object object  string methodname  object arguments
/**
* this code is executed after the method is optionally called.
* @param object        receiver object for the called method
* @param methodname    name of the called method
* @param arguments     arguments to the called method
* @param result        result of the executed method call or result of beforeinvoke if method was not called
* @return any arbitrary result that can replace the result of the
* original method call. typically, the result parameter is returned.
*/
object afterinvoke object object  string methodname  object arguments  object result
/**
* @return whether the target method should be invoked at all.
*/
boolean doinvoke