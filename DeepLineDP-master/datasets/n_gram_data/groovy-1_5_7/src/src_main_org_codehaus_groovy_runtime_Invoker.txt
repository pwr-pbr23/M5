/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy runtime
import groovy lang
import org codehaus groovy runtime wrappers pojowrapper
/**
* a helper class to invoke methods or extract properties on arbitrary java objects dynamically.
* all methodes in this calss are deprecated!
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision: 9487 $
* @deprecated
*/
public class invoker
protected static final object empty_arguments
protected static final class empty_types
/**
* @deprecated
*/
public metaclassregistry getmetaregistry
return metaregistry
private final metaclassregistry metaregistry   groovysystem getmetaclassregistry
/**
* @deprecated
*/
public metaclass getmetaclass object object
return metaregistry getmetaclass object getclass
/**
* invokes the given method on the object.
* @deprecated
*/
public object invokemethod object object  string methodname  object arguments
/*
system
.out
.println(
"invoker - invoking method on object: "
+ object
+ " method: "
+ methodname
+ " arguments: "
+ invokerhelper.tostring(arguments));
*/
if  object    null
object   nullobject getnullobject
//throw new nullpointerexception("cannot invoke method " + methodname + "() on null object");
// if the object is a class, call a static method from that class
if  object instanceof class
class theclass    class  object
metaclass metaclass   metaregistry getmetaclass theclass
return metaclass invokestaticmethod object  methodname  asarray arguments
else    it's an instance
// if it's not an object implementing groovyobject (thus not builder, nor a closure)
if    object instanceof groovyobject
return invokepojomethod object  methodname  arguments
// it's an object implementing groovyobject
else
return invokepogomethod object  methodname  arguments
private object invokepojomethod object object  string methodname  object arguments
class theclass   object getclass
metaclass metaclass   metaregistry getmetaclass theclass
return metaclass invokemethod object  methodname  asarray arguments
private object invokepogomethod object object  string methodname  object arguments
groovyobject groovy    groovyobject  object
boolean intercepting   groovy instanceof groovyinterceptable
try
// if it's a pure interceptable object (even intercepting tostring(), clone(), ...)
if  intercepting
return groovy invokemethod methodname  asunwrappedarray arguments
//else try a statically typed method or a gdk method
return groovy getmetaclass   invokemethod object  methodname  asarray arguments
catch  missingmethodexception e
if   intercepting    e getmethod   equals methodname     object getclass      e gettype
// in case there's nothing else, invoke the object's own invokemethod()
return groovy invokemethod methodname  asunwrappedarray arguments
throw e
/**
* @deprecated
*/
public object invokesupermethod object object  string methodname  object arguments
if  object    null
throw new nullpointerexception     methodname
class theclass   object getclass
metaclass metaclass   metaregistry getmetaclass theclass getsuperclass
return metaclass invokemethod object  methodname  asarray arguments
/**
* @deprecated
*/
public object invokestaticmethod class type  string method  object arguments
metaclass metaclass   metaregistry getmetaclass type
return metaclass invokestaticmethod type  method  asarray arguments
/**
* @deprecated
*/
public object invokeconstructorof class type  object arguments
metaclass metaclass   metaregistry getmetaclass type
return metaclass invokeconstructor asarray arguments
/**
* converts the given object into an array; if its an array then just
* cast otherwise wrap it in an array
* @deprecated
*/
public object asarray object arguments
if  arguments    null
return empty_arguments
if  arguments instanceof object
return   object  arguments
return new object arguments
/**
* @deprecated
*/
public object asunwrappedarray object arguments
object args   asarray arguments
for  int i 0  i<args length  i
if  args instanceof pojowrapper
args     pojowrapper args  unwrap
return args
/**
* looks up the given property of the given object
* @deprecated
*/
public object getproperty object object  string property
if  object    null
throw new nullpointerexception     property
if  object instanceof groovyobject
groovyobject pogo = (groovyobject) object;
return pogo getproperty property
if  object instanceof class
class c    class  object
return metaregistry getmetaclass c  getproperty object  property
return metaregistry getmetaclass object getclass    getproperty object  property
/**
* sets the property on the given object
* @deprecated
*/
public void setproperty object object  string property  object newvalue
if  object    null
throw new groovyruntimeexception
if  object instanceof groovyobject
groovyobject pogo = (groovyobject) object;
pogo setproperty property  newvalue
else
if  object instanceof class
metaregistry getmetaclass  class  object  setproperty  class  object  property  newvalue
else
metaregistry getmetaclass object getclass    setproperty object  property  newvalue
/**
* looks up the given attribute (field) on the given object
* @deprecated
*/
public object getattribute object object  string attribute
if  object    null
throw new nullpointerexception     attribute
/**
} else if (object instanceof groovyobject) {
groovyobject pogo = (groovyobject) object;
return pogo.getattribute(attribute);
} else if (object instanceof map) {
map map = (map) object;
return map.get(attribute);
*/
else
if  object instanceof class
return metaregistry getmetaclass  class  object  getattribute object  attribute
} else if (object instanceof groovyobject) {
return   groovyobject object  getmetaclass   getattribute object  attribute
else
return metaregistry getmetaclass object getclass    getattribute object  attribute
/**
* sets the given attribute (field) on the given object
* @deprecated
*/
public void setattribute object object  string attribute  object newvalue
if  object    null
throw new groovyruntimeexception
/*
} else if (object instanceof groovyobject) {
groovyobject pogo = (groovyobject) object;
pogo.setproperty(attribute, newvalue);
} else if (object instanceof map) {
map map = (map) object;
map.put(attribute, newvalue);
*/
else
if  object instanceof class
metaregistry getmetaclass  class  object  setattribute object  attribute  newvalue
} else if (object instanceof groovyobject) {
groovyobject object  getmetaclass   setattribute object  attribute  newvalue
else
metaregistry getmetaclass object getclass    setattribute object  attribute  newvalue
/**
* returns the method pointer for the given object name
* @deprecated
*/
public closure getmethodpointer object object  string methodname
if  object    null
throw new nullpointerexception     methodname
return metaclasshelper getmethodpointer object  methodname
/**
* @deprecated
*/
public void removemetaclass class clazz
metaregistry removemetaclass clazz