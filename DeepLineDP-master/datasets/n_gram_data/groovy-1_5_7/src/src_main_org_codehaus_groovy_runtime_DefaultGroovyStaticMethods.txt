/*
* copyright 2003-2008 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy runtime
import groovy lang closure
import java text parseexception
import java text simpledateformat
import java util date
import java util regex matcher
import org codehaus groovy runtime typehandling defaulttypetransformation
/**
* this class defines all the new static groovy methods which appear on normal
* jdk classes inside the groovy environment. static methods are used with the
* first parameter as the destination class.
*
* @author guillaume laforge
* @author dierk koenig
* @author joachim baumann
* @author paul king
* @version $revision$
*/
public class defaultgroovystaticmethods
/**
* start a thread with the given closure as a runnable instance.
*
* @param self    placeholder variable used by groovy categories; ignored for default static methods
* @param closure the runnable closure
* @return the started thread
*/
public static thread start thread self  closure closure
return createthread null  false  closure
/**
* start a thread with a given name and the given closure
* as a runnable instance.
*
* @param self    placeholder variable used by groovy categories; ignored for default static methods
* @param name    the name to give the thread
* @param closure the runnable closure
* @return the started thread
*/
public static thread start thread self  string name  closure closure
return createthread name  false  closure
/**
* start a daemon thread with the given closure as a runnable instance.
*
* @param self    placeholder variable used by groovy categories; ignored for default static methods
* @param closure the runnable closure
* @return the started thread
*/
public static thread startdaemon thread self  closure closure
return createthread null  true  closure
/**
* start a daemon thread with a given name and the given closure as
* a runnable instance.
*
* @param self    placeholder variable used by groovy categories; ignored for default static methods
* @param name    the name to give the thread
* @param closure the runnable closure
* @return the started thread
*/
public static thread startdaemon thread self  string name  closure closure
return createthread name  true  closure
private static thread createthread string name  boolean daemon  closure closure
thread thread   name    null ? new thread closure  name    new thread closure
if  daemon  thread setdaemon true
thread start
return thread
/**
* get the last hidden matcher that the system used to do a match.
*
* @param self placeholder variable used by groovy categories; ignored for default static methods
* @return the last regex matcher
*/
public static matcher getlastmatcher matcher self
return regexsupport getlastmatcher
/**
* this method is used by both sleep() methods to implement sleeping
* for the given time even if interrupted
*
* @param millis  the number of milliseconds to sleep
* @param closure optional closure called when interrupted
*                as long as the closure returns false the sleep continues
*/
private static void sleepimpl long millis  closure closure
long start   system currenttimemillis
long rest   millis
long current
while  rest > 0
try
thread sleep rest
rest   0
catch  interruptedexception e
if  closure    null
if  defaulttypetransformation casttoboolean closure call e
return
current   system currenttimemillis       compensate for closure's time
rest   millis   start   current
/**
* sleep for so many milliseconds, even if interrupted.
*
* @param self         placeholder variable used by groovy categories; ignored for default static methods
* @param milliseconds the number of milliseconds to sleep
*/
public static void sleep object self  long milliseconds
sleepimpl milliseconds  null
/**
* sleep for so many milliseconds, using a given closure for interrupt processing.
*
* @param self         placeholder variable used by groovy categories; ignored for default static methods
* @param milliseconds the number of milliseconds to sleep
* @param oninterrupt  interrupt handler, interruptedexception is passed to the closure
*                     as long as it returns false, the sleep continues
*/
public static void sleep object self  long milliseconds  closure oninterrupt
sleepimpl milliseconds  oninterrupt
/**
* this convenience method acts as a wrapper for {@link simpledateformat}.
*
* @see simpledateformat#parse(string)
* @param self         placeholder variable used by groovy categories; ignored for default static methods
* @param format       pattern used to parse the input string.
* @param input        string to be parsed to create the date instance
* @return             a new date instance representing the parsed input string
* @throws parseexception if there is a parse error
*/
public static date parse  date self  string format  string input   throws parseexception
return new simpledateformat  format   parse  input