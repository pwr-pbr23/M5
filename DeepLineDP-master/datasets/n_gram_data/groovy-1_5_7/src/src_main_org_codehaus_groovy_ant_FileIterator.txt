/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy ant
import java io file
import java util iterator
import java util nosuchelementexception
import org apache tools ant directoryscanner
import org apache tools ant project
import org apache tools ant types fileset
/**
* <p><code>fileiterator</code> is an iterator over a
* number of files from a collection of fileset instances.
*
* @author <a href="mailto:jstrachan@apache.org">james strachan</a>
* @version $revision$
*/
public class fileiterator implements iterator
/** the iterator over the fileset objects */
private iterator filesetiterator
/** the ant project */
private project project
/** the directory scanner */
private directoryscanner ds
/** the file names in the current fileset scan */
private string files
/** the current index into the file name array */
private int fileindex    1
/** the next file object we'll iterate over */
private file nextfile
/** have we set a next object? */
private boolean nextobjectset   false
/** return only directories? */
private boolean iteratedirectories   false
public fileiterator project project
iterator filesetiterator
this  project  filesetiterator  false
public fileiterator project project
iterator filesetiterator
boolean iteratedirectories
this project   project
this filesetiterator   filesetiterator
this iteratedirectories   iteratedirectories
// iterator interface
//-------------------------------------------------------------------------
/** @return true if there is another object that matches the given predicate */
public boolean hasnext
if   nextobjectset
return true
else
return setnextobject
/** @return the next object which matches the given predicate */
public object next
if    nextobjectset
if   setnextobject
throw new nosuchelementexception
nextobjectset   false
return nextfile
/**
* throws unsupportedoperationexception
*/
public void remove
throw new unsupportedoperationexception
// implementation methods
//-------------------------------------------------------------------------
/**
* set nextobject to the next object. if there are no more
* objects then return false. otherwise, return true.
*/
private boolean setnextobject
while  true
while  ds    null
if     filesetiterator hasnext
return false
fileset fs    fileset  filesetiterator next
ds   fs getdirectoryscanner project
ds scan
if  iteratedirectories
files   ds getincludeddirectories
else
files   ds getincludedfiles
if   files length > 0
fileindex    1
break
else
ds   null
if   ds    null    files    null
if     fileindex < files length
nextfile   new file  ds getbasedir    files
nextobjectset   true
return true
else
ds   null