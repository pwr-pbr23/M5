package org codehaus groovy runtimemetaclassactionssupport
import java lang reflect method
/*
* copyright 2005 john g. wilson
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*
*/
/**
* @author john wilson
*
*/
public class reflectionmethodgenerator extends methodgenerator
private int methodindex
/**
* @param method
*/
public reflectionmethodgenerator method method
super method
/* (non-javadoc)
* @see methodgenerator#generatecall()
*/
public string generatecall final class claz
final stringbuffer code   new stringbuffer
code append    append this method getname     this methodindex  append
return code tostring
public string generatedeclaration final int methodindex
final stringbuffer code   new stringbuffer
this methodindex   methodindex
code append    append this method getname     this methodindex  append
code append    append this method getname     this methodindex  append
code append this method getdeclaringclass   getname    append
final class parametertypes   this method getparametertypes
if  parametertypes length    0
for  int i   0  i    parametertypes length  i
final class parametertype   parametertypes
if  parametertype isprimitive
if  parametertype    void class
code append
else if  parametertype    int class
code append
else if  parametertype    long class
code append
else if  parametertype    short class
code append
else if  parametertype    char class
code append
else if  parametertype    byte class
code append
else if  parametertype    boolean class
code append
else if  parametertype    float class
code append
else if  parametertype    double class
code append
else
code append     parametertype getname
else
getfullname parametertype  code
code append
code setlength code length     2        trim the last   off
code append
code append
code append this method getname     this methodindex  append
code append
return code tostring
/* (non-javadoc)
* @see methodgenerator#startcall(java.lang.stringbuffer)
*/
protected void startcall stringbuffer code