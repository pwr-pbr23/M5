/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy lang
import org codehaus groovy runtime metaclass metaclassregistryimpl
public final class groovysystem
//
//  todo: make this initialisation able to set usereflection true
//  todo: have some way of specifying another metaclass registry implementation
//
static
use_reflection   true
meta_class_registry   new metaclassregistryimpl
/**
* the metaclass for java.lang.object
*/
private static metaclass objectmetaclass
/**
* if true then the metaclass will only use reflection for method dispatch, property acess, etc.
*/
private static final boolean use_reflection
/**
* reference to the metaclass registry to be used by the groovy run time system to map classes to metaclasses
*/
private static final metaclassregistry meta_class_registry
private static boolean keepjavametaclasses false
private groovysystem
// do not allow this class to be instantiated
public static boolean isusereflection
return use_reflection
public static metaclassregistry getmetaclassregistry
return meta_class_registry
public static void setkeepjavametaclasses boolean keepjavametaclasses
groovysystem keepjavametaclasses   keepjavametaclasses
public static boolean iskeepjavametaclasses
return keepjavametaclasses