/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy tools xml
import groovy util indentprinter
import org w3c dom
import javax xml parsers documentbuilder
import javax xml parsers documentbuilderfactory
import java io file
import java io filewriter
import java io ioexception
import java io printwriter
import java util arrays
import java util hashmap
import java util list
import java util map
/**
* a sax handler for turning xml into groovy scripts
*
* @author james strachan
* @author paulk
*/
public class domtogroovy
private indentprinter out
private boolean inmixed   false
private string qt
private list keywords   arrays aslist new string
public domtogroovy printwriter out
this new indentprinter out
// todo allow string quoting delimiter to be specified, e.g. ' vs "
public domtogroovy indentprinter out
this out   out
public void print document document
printchildren document  new hashmap
public static void main string args
if  args length < 1
system out println
system exit 1
document document   null
try
document   parse args
catch  exception e
system out println     args       e getmessage
system exit 1
printwriter writer   null
if  args length < 2
writer   new printwriter system out
else
try
writer   new printwriter new filewriter new file args
catch  ioexception e
system out println     args       e getmessage
system exit 1
domtogroovy converter   new domtogroovy writer
converter out incrementindent
writer println
writer println
writer println     args
writer println
converter print document
writer println
writer close
// implementation methods
//-------------------------------------------------------------------------
private static document parse string name  throws exception
documentbuilderfactory factory   documentbuilderfactory newinstance
factory setnamespaceaware true
documentbuilder builder   factory newdocumentbuilder
return builder parse new file name
protected void print node node  map namespaces  boolean endwithcomma
switch  node getnodetype
case node element_node
printelement  element  node  namespaces  endwithcomma
break
case node processing_instruction_node
printpi  processinginstruction  node  endwithcomma
break
case node text_node
printtext  text  node  endwithcomma
break
case node comment_node
printcomment  comment  node  endwithcomma
break
protected void printelement element element  map namespaces  boolean endwithcomma
namespaces   definenamespaces element  namespaces
element normalize
printindent
string prefix   element getprefix
boolean hasprefix   prefix    null    prefix length   > 0
string localname   getlocalname element
boolean iskeyword   checkescaping localname
if  iskeyword    hasprefix  print qt
if  hasprefix
print prefix
print
print localname
if  iskeyword    hasprefix  print qt
print
boolean hasattributes   printattributes element
nodelist list   element getchildnodes
int length   list getlength
if  length    0
printend    endwithcomma
else
node node   list item 0
if  length    1    node instanceof text
text textnode    text  node
string text   gettextnodedata textnode
if  hasattributes  print
printquoted text
printend    endwithcomma
else if  mixedcontent list
println
out incrementindent
boolean oldinmixed   inmixed
inmixed   true
for  node   element getfirstchild    node    null  node   node getnextsibling
print node  namespaces  false
inmixed   oldinmixed
out decrementindent
printindent
printend    endwithcomma
else
println
out incrementindent
printchildren element  namespaces
out decrementindent
printindent
printend    endwithcomma
private void printquoted string text
if  text indexof        1
print
print(text);
print
else
print qt
print escapequote text
print qt
protected void printpi processinginstruction instruction  boolean endwithcomma
printindent
print     qt
print instruction gettarget
print qt       qt
print instruction getdata
printend qt      endwithcomma
protected void printcomment comment comment  boolean endwithcomma
string text   comment getdata   trim
if  text length   >0
printindent
print
print(text);
printend    endwithcomma
protected void printtext text node  boolean endwithcomma
string text   gettextnodedata node
if  text length   > 0
printindent
if  inmixed  print
printquoted text
printend    endwithcomma
private string escapequote string text
return text replaceall       replaceall qt      qt
protected map definenamespaces element element  map namespaces
map answer   null
string prefix   element getprefix
if  prefix    null    prefix length   > 0     namespaces containskey prefix
answer   new hashmap namespaces
definenamespace answer  prefix  element getnamespaceuri
namednodemap attributes   element getattributes
int length   attributes getlength
for  int i   0  i < length  i
attr attribute    attr  attributes item i
prefix   attribute getprefix
if  prefix    null    prefix length   > 0     namespaces containskey prefix
if  answer    null
answer   new hashmap namespaces
definenamespace answer  prefix  attribute getnamespaceuri
return  answer    null  ? answer   namespaces
protected void definenamespace map namespaces  string prefix  string uri
namespaces put prefix  uri
if   prefix equals        prefix equals
printindent
print
print prefix
print     qt
print uri
println qt
protected boolean printattributes element element
boolean hasattribute   false
namednodemap attributes   element getattributes
int length   attributes getlength
if  length > 0
stringbuffer buffer   new stringbuffer
for  int i   0  i < length  i
printattributewithprefix  attr  attributes item i   buffer
for  int i   0  i < length  i
hasattribute   printattributewithoutprefix  attr  attributes item i   hasattribute
if  buffer length   > 0
if  hasattribute
print
print buffer tostring
hasattribute   true
return hasattribute
private void printattributewithprefix attr attribute  stringbuffer buffer
string prefix   attribute getprefix
if  prefix    null    prefix length   > 0     prefix equals
if  buffer length   > 0
buffer append
buffer append qt
buffer append prefix
buffer append
buffer append getlocalname attribute
buffer append qt       qt
buffer append escapequote getattributevalue attribute
buffer append qt
private string getattributevalue attr attribute
return attribute getvalue
private boolean printattributewithoutprefix attr attribute  boolean hasattribute
string prefix   attribute getprefix
if  prefix    null    prefix length      0
if   hasattribute
hasattribute   true
else
print
string localname   getlocalname attribute
boolean needsescaping   checkescaping localname
if  needsescaping  print qt
print localname
if  needsescaping  print qt
print
printquoted getattributevalue attribute
return hasattribute
private boolean checkescaping string localname
return keywords contains localname     localname indexof        1
protected string gettextnodedata text node
return node getdata   trim
protected boolean mixedcontent nodelist list
boolean hastext   false
boolean haselement   false
for  int i   0  size   list getlength    i < size  i
node node   list item i
if  node instanceof element
haselement   true
else if  node instanceof text
string text   gettextnodedata  text  node
if  text length   > 0
hastext   true
return hastext    haselement
protected void printchildren node parent  map namespaces
for  node node   parent getfirstchild    node    null  node   node getnextsibling
print node  namespaces  false
protected string getlocalname node node
string answer   node getlocalname
if  answer    null
answer   node getnodename
return answer trim
protected void printend string text  boolean endwithcomma
if  endwithcomma
print(text);
println
else
println text
protected void println string text
out println text
protected void print string text
out print text
protected void printindent
out printindent