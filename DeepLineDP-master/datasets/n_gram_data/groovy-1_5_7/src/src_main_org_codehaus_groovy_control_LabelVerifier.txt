/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy control
import java util iterator
import java util linkedlist
import org codehaus groovy ast classcodevisitorsupport
import org codehaus groovy ast stmt breakstatement
import org codehaus groovy ast stmt continuestatement
import org codehaus groovy ast stmt dowhilestatement
import org codehaus groovy ast stmt forstatement
import org codehaus groovy ast stmt statement
import org codehaus groovy ast stmt switchstatement
import org codehaus groovy ast stmt whilestatement
/**
* this class checks the handling of labels in the ast
*
* @author jochen theodorou
*/
public class labelverifier extends classcodevisitorsupport
private sourceunit source
private linkedlist visitedlabels
private linkedlist continuelabels
private linkedlist breaklabels
boolean inloop false
boolean inswitch false
public labelverifier sourceunit src
source   src
protected sourceunit getsourceunit
return source
private void init
visitedlabels   new linkedlist
continuelabels   new linkedlist
breaklabels   new linkedlist
inloop false
inswitch false
protected void visitclasscodecontainer statement code
init
super visitclasscodecontainer code
assertnolabelsmissed
public void visitstatement statement statement
string label   statement getstatementlabel
if  label  null
for  iterator iter   breaklabels iterator    iter hasnext
breakstatement element    breakstatement  iter next
if  element getlabel   equals label   iter remove
for  iterator iter   continuelabels iterator    iter hasnext
continuestatement element    continuestatement  iter next
if  element getlabel   equals label   iter remove
visitedlabels add label
super visitstatement statement
public void visitforloop forstatement forloop
boolean oldinloop   inloop
inloop   true
super visitforloop forloop
inloop   oldinloop
public void visitdowhileloop dowhilestatement loop
boolean oldinloop   inloop
inloop   true
super visitdowhileloop loop
inloop   oldinloop
public void visitwhileloop whilestatement loop
boolean oldinloop   inloop
inloop   true
super visitwhileloop loop
inloop   oldinloop
public void visitbreakstatement breakstatement statement
string label   statement getlabel
boolean hasnamedlabel   label  null
if   hasnamedlabel     inloop     inswitch
adderror   statement
else if  hasnamedlabel     inloop
adderror   statement
if  label  null
boolean found false
for  iterator iter   visitedlabels iterator    iter hasnext
string element    string  iter next
if  element equals label
found   true
break
if   found  breaklabels add statement
super visitbreakstatement statement
public void visitcontinuestatement continuestatement statement
string label   statement getlabel
boolean hasnamedlabel   label  null
if   hasnamedlabel     inloop
adderror   statement
if  label  null
boolean found false
for  iterator iter   visitedlabels iterator    iter hasnext
string element    string  iter next
if  element equals label
found   true
break
if   found  continuelabels add statement
super visitcontinuestatement statement
protected void assertnolabelsmissed
//todo: report multiple missing labels of the same name only once
for  iterator iter   continuelabels iterator    iter hasnext
continuestatement element    continuestatement  iter next
adderror   element
for  iterator iter   breaklabels iterator    iter hasnext
breakstatement element    breakstatement  iter next
adderror   element
public void visitswitch switchstatement statement
inswitch true
super visitswitch statement