/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy control messages
import java io printwriter
import org codehaus groovy control janitor
import org codehaus groovy control sourceunit
import org codehaus groovy syntax cstnode
/**
*  a class for warning messages.
*
*  @author <a href="mailto:cpoirier@dreaming.org">chris poirier</a>
*
*  @version $id$
*/
public class warningmessage extends locatedmessage
//---------------------------------------------------------------------------
// warning levels
public static final int none              0      for querying  ignore all errors
public static final int likely_errors     1      warning indicates likely error
public static final int possible_errors   2      warning indicates possible error
public static final int paranoia          3      warning indicates paranoia on the part of the compiler
/**
*  returns true if a warning would be relevant to the specified level.
*/
public static boolean isrelevant  int actual  int limit
return actual <  limit
/**
*  returns true if this message is as or more important than the
*  specified importance level.
*/
public boolean isrelevant  int importance
return isrelevant  this importance  importance
//---------------------------------------------------------------------------
// construction and data access
private int importance      the warning level  for filtering
/**
*  creates a new warning message.
*
*  @param importance the warning level
*  @param message    the message text
*  @param context    context information for locating the offending source text
*/
public warningmessage  int importance  string message  cstnode context  sourceunit owner
super  message  context  owner
this importance   importance
/**
*  creates a new warning message.
*
*  @param importance the warning level
*  @param message    the message text
*  @param data       additional data needed when generating the message
*  @param context    context information for locating the offending source text
*/
public warningmessage  int importance  string message  object data  cstnode context  sourceunit owner
super  message  data  context  owner
this importance   importance
public void write  printwriter writer  janitor janitor
writer print
super write  writer  janitor