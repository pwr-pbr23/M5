/*
* copyright 2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy swing binding
import org codehaus groovy binding fullbinding
import org codehaus groovy binding propertybinding
import org codehaus groovy binding sourcebinding
import org codehaus groovy binding targetbinding
import org codehaus groovy binding triggerbinding
import org codehaus groovy binding abstractfullbinding
import javax swing event documentevent
import javax swing event documentlistener
import javax swing text document
import javax swing text jtextcomponent
import java beans propertychangeevent
import java beans propertychangelistener
import java util hashmap
import java util map
/**
* @author <a href="mailto:shemnon@yahoo.com">danno ferrin</a>
* @version $revision$
* @since groovy 1.1
*/
public class jtextcomponentproperties
public static map  <string  triggerbinding>   getsyntheticproperties
map  <string  triggerbinding>   result   new hashmap  <string  triggerbinding>
result put jtextcomponent class getname
new triggerbinding
public fullbinding createbinding sourcebinding source  targetbinding target
return new jtextcomponenttextbinding  propertybinding  source  target
return result
class jtextcomponenttextbinding extends abstractfullbinding implements propertychangelistener  documentlistener
boolean bound
jtextcomponent boundtextcomponent
public jtextcomponenttextbinding propertybinding source  targetbinding target
bound   false
setsourcebinding source
settargetbinding target
public synchronized void bind
if   bound
boundtextcomponent    jtextcomponent    propertybinding sourcebinding  getbean
try
boundtextcomponent addpropertychangelistener    this
boundtextcomponent getdocument   adddocumentlistener this
bound   true
catch  runtimeexception re
try
boundtextcomponent removepropertychangelistener    this
boundtextcomponent getdocument   removedocumentlistener this
catch  exception e
// ignore as we are re-throwing the original cause
throw re
public synchronized void unbind
if  bound
bound   false
// fail dirty, no checks
boundtextcomponent removepropertychangelistener    this
boundtextcomponent getdocument   removedocumentlistener this
boundtextcomponent   null
public void rebind
if  bound
unbind
bind
public void setsourcebinding sourcebinding source
if    source instanceof propertybinding
throw new illegalargumentexception
if     equals   propertybinding source  getpropertyname
throw new illegalargumentexception
if      propertybinding source  getbean   instanceof jtextcomponent
throw new illegalargumentexception
super setsourcebinding source
public void settargetbinding targetbinding target
super settargetbinding target
public void propertychange propertychangeevent event
update
document event getoldvalue    removedocumentlistener this
document event getnewvalue    adddocumentlistener this
public void changedupdate documentevent event
update
public void insertupdate documentevent event
update
public void removeupdate documentevent event
update