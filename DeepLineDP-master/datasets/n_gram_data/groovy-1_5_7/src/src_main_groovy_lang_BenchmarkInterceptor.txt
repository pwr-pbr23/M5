/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy lang
import java util
/**
* interceptor that registers the timestamp of each method call
* before and after invocation.
*/
public class benchmarkinterceptor implements interceptor
protected map calls   new hashmap       keys to list of invocation times and before and after
public map getcalls
return calls
public void reset
calls   new hashmap
public object beforeinvoke object object  string methodname  object arguments
if   calls containskey methodname   calls put methodname  new linkedlist
list  calls get methodname   add new long system currenttimemillis
return null
public object afterinvoke object object  string methodname  object arguments  object result
list  calls get methodname   add new long system currenttimemillis
return result
public boolean doinvoke
return true
/**
* @return a list of lines, each item is [methodname, numberofcalls, accumulatedtime]
*/
public list statistic
list result   new linkedlist
for  iterator iter   calls keyset   iterator    iter hasnext
object line   new object
result add line
line   iter next
list times    list  calls get line
line   new integer times size     2
int acctime   0
for  iterator it   times iterator    it hasnext
long start    long  it next
long end    long  it next
acctime    end longvalue     start longvalue
line   new long acctime
return result