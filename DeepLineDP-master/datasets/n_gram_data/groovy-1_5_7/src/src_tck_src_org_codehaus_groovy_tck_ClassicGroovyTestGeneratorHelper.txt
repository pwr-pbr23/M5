package org codehaus groovy tck
import java io reader
import java io stringreader
import java io bufferedreader
import java io ioexception
import java util arraylist
import junit framework testresult
// jsr parser
// @todo - refactor pulling generic parser interface up
import org codehaus groovy antlr parser groovylexer
import org codehaus groovy antlr parser groovyrecognizer
// codehaus reference implementation usage
// @todo - remove classic references from the tck
import org codehaus groovy control compilerconfiguration
import groovy lang groovyshell
import antlr recognitionexception
/** helper methods for generated tck test case using new jsr parser and classic groovy ast and evaluation */
public class classicgroovytestgeneratorhelper implements testgeneratorhelper
/** evaluate the source text against the classic ast with the jsr parser implementation*/
public object evaluate string thesrctext  string testname  throws exception
parse thesrctext  testname      fail early with a direct message if possible'
groovyshell groovy   new groovyshell new compilerconfiguration
return groovy run thesrctext     new arraylist
/** run the jsr parser implementation over the supplied source text*/
public void parse string thesrctext  string testname  throws exception
system out println
system out println     testname
system out println
try
reader reader   new bufferedreader new stringreader thesrctext
groovyrecognizer recognizer   groovyrecognizer make reader
recognizer compilationunit
system out println decoratewithlinenumbers thesrctext
catch  recognitionexception parseexception
system out println decoratewithlinenumbersanderrormessage thesrctext parseexception
throw parseexception
system out println
private string decoratewithlinenumbersanderrormessage string thesrctext  recognitionexception parseexception
try
bufferedreader reader   new bufferedreader new stringreader thesrctext
string line   null
stringbuffer numberedsrctextbuffer   new stringbuffer
int linenum   1
while   line   reader readline        null
numberedsrctextbuffer append linenum
numberedsrctextbuffer append
numberedsrctextbuffer append line
numberedsrctextbuffer append linesep
if  parseexception    null
if  linenum    parseexception getline
stringbuffer padding   new stringbuffer
for  int col 1  col<parseexception getcolumn   col
padding append
numberedsrctextbuffer append padding
numberedsrctextbuffer append
numberedsrctextbuffer append linesep
numberedsrctextbuffer append
numberedsrctextbuffer append linesep
numberedsrctextbuffer append parseexception getmessage
numberedsrctextbuffer append linesep
numberedsrctextbuffer append linesep
linenum
thesrctext   numberedsrctextbuffer tostring
catch  ioexception e
//ignore
return thesrctext
private string decoratewithlinenumbers string thesrctext
return decoratewithlinenumbersanderrormessage thesrctext null
protected string linesep   system getproperty