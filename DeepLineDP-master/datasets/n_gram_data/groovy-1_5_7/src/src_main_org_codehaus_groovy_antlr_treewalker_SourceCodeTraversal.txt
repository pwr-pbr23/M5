/*
* copyright 2005 jeremy rayner
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy antlr treewalker
import java util arraylist
import java util collections
import org codehaus groovy antlr groovysourceast
import org codehaus groovy antlr parser groovytokentypes
/**
* a treewalker for the antlr generated ast that attempts to visit the
* ast nodes in the order needed to generate valid groovy source code.
*
* @author <a href="mailto:groovy@ross-rayner.com">jeremy rayner</a>
* @version $revision$
*/
public class sourcecodetraversal extends traversalhelper
/**
* constructs a treewalker for the antlr generated ast that attempts to visit the
* ast nodes in the order needed to generate valid groovy source code.
* @param visitor the visitor implementation to call for each ast node.
*/
public sourcecodetraversal visitor visitor
super visitor
/**
* gather, sort and process all unvisited nodes
* @param t the ast to process
*/
public void setup groovysourceast t
super setup t
// gather and sort all unvisited ast nodes
unvisitednodes   new arraylist
traverse t
collections sort unvisitednodes
/**
* traverse an ast node
* @param t the ast node to traverse
*/
private void traverse groovysourceast t
if  t    null    return
if  unvisitednodes    null
unvisitednodes add t
groovysourceast child    groovysourceast t getfirstchild
if  child    null
traverse child
groovysourceast sibling    groovysourceast t getnextsibling
if  sibling    null
traverse sibling
protected void accept groovysourceast currentnode
if  currentnode    null    unvisitednodes    null    unvisitednodes size   > 0
groovysourceast t   currentnode
if    unvisitednodes contains currentnode
return
push t
switch  t gettype
case groovytokentypes question     expr?foo bar
accept_firstchild_v_secondchild_v_thirdchild_v t
break
case groovytokentypes case_group
case groovytokentypes literal_instanceof     foo instanceof mytype
accept_firstchild_v_secondchildschildren_v t
break
case groovytokentypes annotation
accept_v_firstchild_2ndv_secondchild_v___lastchild_v t
break
case groovytokentypes closure_list      a 1  a<10  a
case groovytokentypes elist     a b c
case groovytokentypes parameters     a b c
case groovytokentypes type_arguments     <string  object>
case groovytokentypes string_constructor
case groovytokentypes type_parameter     class foo<t extends f>
case groovytokentypes type_parameters     class foo<t>
case groovytokentypes type_upper_bounds     class foo<t extends f>
accept_v_firstchild_v_secondchild_v___lastchild_v t
// todo : confirm that type_lower_bounds does not have multiple children
break
case groovytokentypes variable_parameter_def     void f string     others
accept_v_firstchild_secondchild_v_thirdchild_v t
break
case groovytokentypes index_op
accept_firstchild_v_secondchild_v t
break
case groovytokentypes enum_constant_def     enum foo these are they
case groovytokentypes expr
case groovytokentypes import
case groovytokentypes variable_def
case groovytokentypes method_def
case groovytokentypes objblock    class foo  def bar     <   this block
case groovytokentypes parameter_def     void f string me
case groovytokentypes slist     list of expressions  variable defs etc
accept_v_allchildren_v t
break
case groovytokentypes annotation_member_value_pair     @blue foo 123
case groovytokentypes assign     a   b
case groovytokentypes band_assign     a    b
case groovytokentypes bor_assign     a    b
case groovytokentypes bsr_assign     a >>>  b
case groovytokentypes bxor_assign     a ^  b
case groovytokentypes compare_to     a < > b
case groovytokentypes div_assign     a    b
case groovytokentypes equal     a    b
case groovytokentypes minus_assign     a    b
case groovytokentypes mod_assign     a %  b
case groovytokentypes not_equal     a    b
case groovytokentypes plus_assign     a    b
case groovytokentypes regex_find     a  ~ b
case groovytokentypes regex_match     a   ~ b
case groovytokentypes sl_assign     a <<  b
case groovytokentypes sr_assign     a >>  b
case groovytokentypes star_assign     a    b
case groovytokentypes star_star_assign     x     3
if  t childat 1     null
accept_firstchild_v_restofthechildren t
else
accept_v_firstchild_v_restofthechildren t
break
case groovytokentypes annotation_field_def     @interface foo  int bar
accept_firstsecondandthirdchild_v_v_forthchild t
break
case groovytokentypes annotation_def     @interface foo
case groovytokentypes band     1   2
case groovytokentypes bor     1   2
case groovytokentypes bsr     1 >>> 2
case groovytokentypes bxor     1 ^ 2
case groovytokentypes class_def     class foo
case groovytokentypes ctor_ident     private foo
case groovytokentypes div      3 4
case groovytokentypes dot     foo bar
case groovytokentypes enum_def     enum foo
case groovytokentypes ge     a >  b
case groovytokentypes gt     a > b
case groovytokentypes interface_def     interface foo
case groovytokentypes labeled_arg     mymethod name
case groovytokentypes labeled_stat     foo x 1
case groovytokentypes land     true    false
case groovytokentypes le     a <  b
case groovytokentypes literal_as     foo as bar
case groovytokentypes literal_in     if  i in mylist
case groovytokentypes lor     true    false
case groovytokentypes lt     a < b
case groovytokentypes member_pointer     this  foo
case groovytokentypes mod      4 % 3
case groovytokentypes minus     1   1
case groovytokentypes optional_dot     foo? bar
case groovytokentypes package_def
case groovytokentypes plus     1   1
case groovytokentypes range_exclusive
case groovytokentypes range_inclusive
case groovytokentypes sl     a << b
case groovytokentypes spread_dot     foo  bar
case groovytokentypes sr     a >> b
case groovytokentypes star     a   b   or    import foo
case groovytokentypes star_star     x    3
accept_firstchild_v_restofthechildren t
break
case groovytokentypes ctor_call
case groovytokentypes method_call
if  t getnumberofchildren      2    t childat 1     null    t childat 1  gettype      groovytokentypes closable_block
// mymethod {...
accept_firstchild_v_secondchild t
else
groovysourceast lastchild   t childat t getnumberofchildren    1
if  lastchild    null    lastchild gettype      groovytokentypes closable_block
// mymethod(a,b) {...
accept_firstchild_v_restofthechildren_v_lastchild t
else
// mymethod(a,b)
accept_firstchild_v_restofthechildren_v t
break
case groovytokentypes literal_while
//deprecated                case groovytokentypes.literal_with:
case groovytokentypes typecast      string itr next
accept_v_firstchildsfirstchild_v_restofthechildren t
break
case groovytokentypes literal_if     if  grandchild   child1  else  child2
accept_v_firstchildsfirstchild_v_child2_child3_v_child4_v___v_lastchild t
break
case groovytokentypes closable_block      each  foo it    <   closure
if  t childat 0     null    t childat 0  gettype      groovytokentypes implicit_parameters
accept_v_allchildren_v t
else
accept_v_firstchild_v_restofthechildren_v t
break
case groovytokentypes for_in_iterable
case groovytokentypes literal_for
case groovytokentypes literal_new
case groovytokentypes literal_switch
accept_v_firstchild_v_restofthechildren_v t
break
case groovytokentypes annotations     just like modifiers but for package enum declarations
case groovytokentypes literal_assert
case groovytokentypes literal_catch
case groovytokentypes literal_synchronized
case groovytokentypes literal_try
case groovytokentypes modifiers
accept_v_firstchild_v_restofthechildren t
break
case groovytokentypes wildcard_type
accept_v_siblings_v t
break
default
accept_v_firstchild_v t
break
pop