/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org codehaus groovy runtime
import java io ioexception
import java io writer
/**
* this class codes around a silly limiation of stringwriter which doesn't allow a stringbuffer
* to be passed in as a constructor for some bizzare reason.
* so we replicate the behaviour of stringwriter here but allow a stringbuffer to be passed in.
*
* @author <a href="mailto:james@coredevelopers.net">james strachan</a>
* @version $revision$
*/
public class stringbufferwriter extends writer
private stringbuffer buffer
/**
* create a new string writer which will append the text to the given stringbuffer
*/
public stringbufferwriter stringbuffer buffer
this buffer   buffer
/**
* write a single character.
*/
public void write int c
buffer append  char  c
/**
* write a portion of an array of characters.
*
* @param text array of characters
* @param offset offset from which to start writing characters
* @param length number of characters to write
*/
public void write char text  int offset  int length
if   offset < 0      offset > text length      length < 0       offset   length  > text length       offset   length  < 0
throw new indexoutofboundsexception
else if  length    0
return
buffer append text  offset  length
/**
* write a string.
*/
public void write string text
buffer append text
/**
* write a portion of a string.
*
* @param text the text to be written
* @param offset offset from which to start writing characters
* @param length number of characters to write
*/
public void write string text  int offset  int length
buffer append text substring offset  offset   length
/**
* return the buffer's current value as a string.
*/
public string tostring
return buffer tostring
/**
* flush the stream.
*/
public void flush
/**
* closing a <tt>stringwriter</tt> has no effect. the methods in this
* class can be called after the stream has been closed without generating
* an <tt>ioexception</tt>.
*/
public void close   throws ioexception