/*
* copyright 2003-2007 the original author or authors.
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package groovy util
import groovy lang binding
import groovy lang groovyclassloader
import groovy lang script
import java io
import java net malformedurlexception
import java net url
import java net urlconnection
import java security accesscontroller
import java security privilegedaction
import java util collections
import java util hashmap
import java util iterator
import java util map
import org codehaus groovy control compilationfailedexception
import org codehaus groovy runtime invokerhelper
/**
* specific script engine able to reload modified scripts as well as dealing properly with dependent scripts.
*
* @author sam
* @author marc palmer
* @author guillaume laforge
*/
public class groovyscriptengine implements resourceconnector
/**
* simple testing harness for the gse. enter script roots as arguments and
* then input script names to run them.
*
* @param urls an array of urls
* @throws exception if something goes wrong
*/
public static void main string urls  throws exception
groovyscriptengine gse   new groovyscriptengine urls
bufferedreader br   new bufferedreader new inputstreamreader system in
string line
while  true
system out print
if   line   br readline       null    line equals
break
try
system out println gse run line  new binding
catch  exception e
e printstacktrace
private url roots
private map scriptcache   collections synchronizedmap new hashmap
private resourceconnector rc
private static threadlocal currentcacheentryholder   new threadlocal
private groovyclassloader groovyloader   null
private static class scriptcacheentry
private class scriptclass
private long lastmodified
private map dependencies   new hashmap
/**
* initialize a new groovyclassloader with the parentclassloader passed as a parameter.
* a groovyscriptengine should only use one groovyclassloader but since in version
* prior to 1.0-rc-01 you could set a new parentclassloader
* ultimately groovyloader should be final and only set in the constructor
*
* @param parentclassloader the class loader to use
*/
private void initgroovyloader final classloader parentclassloader
if  groovyloader    null    groovyloader getparent      parentclassloader
groovyloader
groovyclassloader  accesscontroller doprivileged new privilegedaction
public object run
return new groovyclassloader parentclassloader
protected class findclass string classname  throws classnotfoundexception
string filename   classname replace    file separatorchar
urlconnection dependentscriptconn   null
try
dependentscriptconn   rc getresourceconnection filename
scriptcacheentry currentcacheentry    scriptcacheentry  currentcacheentryholder get
if currentcacheentry    null
currentcacheentry dependencies put
dependentscriptconn geturl
new long dependentscriptconn getlastmodified
return parseclass dependentscriptconn getinputstream    filename
catch  resourceexception e1
throw new classnotfoundexception     classname       e1
catch  compilationfailedexception e2
throw new classnotfoundexception     classname       e2
catch  ioexception e3
throw new classnotfoundexception     classname       e3
finally
try
if  dependentscriptconn    null    dependentscriptconn getinputstream      null
dependentscriptconn getinputstream   close
catch  ioexception e
// ignore
/**
* get a resource connection as a <code>urlconnection</code> to retrieve a script
* from the <code>resourceconnector</code>.
*
* @param resourcename name of the resource to be retrieved
* @return a urlconnection to the resource
* @throws resourceexception
*/
public urlconnection getresourceconnection string resourcename  throws resourceexception
// get the urlconnection
urlconnection groovyscriptconn   null
resourceexception se   null
for  int i   0  i < roots length  i
url scripturl   null
try
scripturl   new url roots  resourcename
groovyscriptconn   scripturl openconnection
// make sure we can open it, if we can't it doesn't exist.
// could be very slow if there are any non-file:// urls in there
groovyscriptconn getinputstream
break     now this is a bit unusual
catch  malformedurlexception e
string message       roots       resourcename
if  se    null
se   new resourceexception message
else
se   new resourceexception message  se
catch  ioexception e1
string message       scripturl
if  se    null
se   new resourceexception message
else
se   new resourceexception message  se
// if we didn't find anything, report on all the exceptions that occurred.
if  groovyscriptconn    null
throw se
return groovyscriptconn
/**
* the groovy script engine will run groovy scripts and reload them and
* their dependencies when they are modified. this is useful for embedding
* groovy in other containers like games and application servers.
*
* @param roots this an array of urls where groovy scripts will be stored. they should
*              be layed out using their package structure like java classes
*/
public groovyscriptengine url roots
this roots   roots
this rc   this
initgroovyloader getclass   getclassloader
public groovyscriptengine url roots  classloader parentclassloader
this roots
initgroovyloader parentclassloader
public groovyscriptengine string urls  throws ioexception
roots   new url
for  int i   0  i < roots length  i
if urls indexof        1
roots   new url urls
else
roots   new file urls  touri   tourl
this rc   this
initgroovyloader getclass   getclassloader
public groovyscriptengine string urls  classloader parentclassloader  throws ioexception
this urls
initgroovyloader parentclassloader
public groovyscriptengine string url  throws ioexception
this new string url
public groovyscriptengine string url  classloader parentclassloader  throws ioexception
this url
initgroovyloader parentclassloader
public groovyscriptengine resourceconnector rc
this rc   rc
initgroovyloader getclass   getclassloader
public groovyscriptengine resourceconnector rc  classloader parentclassloader
this rc
initgroovyloader parentclassloader
/**
* get the <code>classloader</code> that will serve as the parent classloader of the
* {@link groovyclassloader} in which scripts will be executed. by default, this is the
* classloader that loaded the <code>groovyscriptengine</code> class.
*
* @return parent classloader used to load scripts
*/
public classloader getparentclassloader
return groovyloader getparent
/**
* @param parentclassloader classloader to be used as the parent classloader for scripts executed by the engine
* @deprecated
*/
public void setparentclassloader classloader parentclassloader
if  parentclassloader    null
throw new illegalargumentexception
initgroovyloader parentclassloader
/**
* get the class of the scriptname in question, so that you can instantiate groovy objects with caching and reloading.
*
* @param scriptname resource name pointing to the script
* @return the loaded scriptname as a compiled class
* @throws resourceexception if there is a problem accessing the script
* @throws scriptexception if there is a problem parsing the script
*/
public class loadscriptbyname string scriptname  throws resourceexception  scriptexception
scriptname   scriptname replace    file separatorchar
scriptcacheentry entry   updatecacheentry scriptname
return entry scriptclass
/**
* get the class of the scriptname in question, so that you can instantiate groovy objects with caching and reloading.
*
* @param scriptname resource name pointing to the script
* @param parentclassloader the class loader to use when loading the script
* @return the loaded scriptname as a compiled class
* @throws resourceexception if there is a problem accessing the script
* @throws scriptexception if there is a problem parsing the script
* @deprecated
*/
public class loadscriptbyname string scriptname  classloader parentclassloader
throws resourceexception  scriptexception
initgroovyloader parentclassloader
return loadscriptbyname scriptname
/**
* locate the class and reload it or any of its dependencies
*
* @param scriptname resource name pointing to the script
* @return the cache entry for scriptname
* @throws resourceexception if there is a problem accessing the script
* @throws scriptexception if there is a problem parsing the script
*/
private scriptcacheentry updatecacheentry string scriptname
throws resourceexception  scriptexception
scriptcacheentry entry
scriptname   scriptname intern
synchronized  scriptname
urlconnection groovyscriptconn   rc getresourceconnection scriptname
// url last modified
long lastmodified   groovyscriptconn getlastmodified
// check the cache for the scriptname
entry    scriptcacheentry  scriptcache get scriptname
if  entry    null    entry lastmodified < lastmodified    dependencyoutofdate entry
// make a new entry
scriptcacheentry currentcacheentry   new scriptcacheentry
currentcacheentryholder set currentcacheentry
inputstream in   null
try
in   groovyscriptconn getinputstream
currentcacheentry scriptclass   groovyloader parseclass in  scriptname
catch  exception e
throw new scriptexception     scriptname  e
finally
currentcacheentryholder set null
try
if  in    null
in close
catch  ioexception e
// do nothing: just want to make sure it is closed
currentcacheentry lastmodified   lastmodified
scriptcache put scriptname  currentcacheentry
entry   currentcacheentry
currentcacheentry   null
return entry
private boolean dependencyoutofdate scriptcacheentry entry
if  entry    null
for  iterator i   entry dependencies keyset   iterator    i hasnext
urlconnection urlc   null
url url    url  i next
try
urlc   url openconnection
urlc setdoinput false
urlc setdooutput false
long dependentlastmodified   urlc getlastmodified
if  dependentlastmodified >   long  entry dependencies get url   longvalue
return true
catch  ioexception ioe
return true
return false
/**
* run a script identified by name with a single argument.
*
* @param scriptname name of the script to run
* @param argument   a single argument passed as a variable named <code>arg</code> in the binding
* @return a <code>tostring()</code> representation of the result of the execution of the script
* @throws resourceexception if there is a problem accessing the script
* @throws scriptexception if there is a problem parsing the script
*/
public string run string scriptname  string argument  throws resourceexception  scriptexception
binding binding   new binding
binding setvariable    argument
object result   run scriptname  binding
return result    null ?     result tostring
/**
* run a script identified by name with a given binding.
*
* @param scriptname name of the script to run
* @param binding    the binding to pass to the script
* @return an object
* @throws resourceexception if there is a problem accessing the script
* @throws scriptexception if there is a problem parsing the script
*/
public object run string scriptname  binding binding  throws resourceexception  scriptexception
return createscript scriptname  binding  run
/**
* creates a script with a given scriptname and binding.
*
* @param scriptname name of the script to run
* @param binding    the binding to pass to the script
* @return the script object
* @throws resourceexception if there is a problem accessing the script
* @throws scriptexception if there is a problem parsing the script
*/
public script createscript string scriptname  binding binding  throws resourceexception  scriptexception
scriptcacheentry entry   updatecacheentry scriptname
scriptname   scriptname intern
return invokerhelper createscript entry scriptclass  binding
/**
* returns the groovyclassloader associated with this script engine instance.
* useful if you need to pass the class loader to another library.
*
* @return the groovyclassloader
*/
public groovyclassloader getgroovyclassloader
return groovyloader