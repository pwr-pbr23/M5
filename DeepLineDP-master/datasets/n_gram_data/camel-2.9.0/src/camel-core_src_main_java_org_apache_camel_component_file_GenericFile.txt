/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component file
import java io file
import java util date
import java util map
import org apache camel exchange
import org apache camel wrappedfile
import org apache camel util fileutil
import org apache camel util objecthelper
import org slf4j logger
import org slf4j loggerfactory
/**
* generic file. specific implementations of a file based endpoint need to
* provide a file for transfer.
*/
public class genericfile<t> implements wrappedfile<t>
private static final transient logger log   loggerfactory getlogger genericfile class
private string endpointpath
private string filename
private string filenameonly
private string relativefilepath
private string absolutefilepath
private long filelength
private long lastmodified
private t file
private genericfilebinding<t> binding
private boolean absolute
public char getfileseparator
return file separatorchar
/**
* creates a copy based on the source
*
* @param source the source
* @return a copy of the source
*/
@suppresswarnings
public genericfile<t> copyfrom genericfile<t> source
genericfile<t> result
try
result   source getclass   newinstance
catch  exception e
throw objecthelper wrapruntimecamelexception e
result setendpointpath source getendpointpath
result setabsolute source isabsolute
result setabsolutefilepath source getabsolutefilepath
result setrelativefilepath source getrelativefilepath
result setfilename source getfilename
result setfilenameonly source getfilenameonly
result setfilelength source getfilelength
result setlastmodified source getlastmodified
result setfile source getfile
result setbody source getbody
result setbinding source getbinding
copyfrompopulateadditional source  result
return result
/**
* copies additional information from the source to the result.
* <p/>
* inherited classes can override this method and copy their specific data.
*
* @param source  the source
* @param result  the result
*/
public void copyfrompopulateadditional genericfile<t> source  genericfile<t> result
// noop
/**
* bind this genericfile to an exchange
*/
public void bindtoexchange exchange exchange
map<string  object> headers
exchange setproperty filecomponent file_exchange_file  this
genericfilemessage<t> msg   new genericfilemessage<t> this
if  exchange hasout
headers   exchange getout   hasheaders   ? exchange getout   getheaders     null
exchange setout msg
else
headers   exchange getin   hasheaders   ? exchange getin   getheaders     null
exchange setin msg
// preserve any existing (non file) headers, before we re-populate headers
if  headers    null
msg setheaders headers
// remove any file related headers, as we will re-populate file headers
msg removeheaders
populateheaders msg
/**
* populates the {@link genericfilemessage} relevant headers
*
* @param message the message to populate with headers
*/
public void populateheaders genericfilemessage<t> message
if  message    null
message setheader exchange file_name_only  getfilenameonly
message setheader exchange file_name  getfilename
message setheader    isabsolute
message setheader    getabsolutefilepath
if  isabsolute
message setheader exchange file_path  getabsolutefilepath
else
// we must normalize path according to protocol if we build our own paths
string path   normalizepathtoprotocol getendpointpath     file separator   getrelativefilepath
message setheader exchange file_path  path
message setheader    getrelativefilepath
message setheader exchange file_parent  getparent
if  getfilelength   >  0
message setheader    getfilelength
if  getlastmodified   > 0
message setheader exchange file_last_modified  new date getlastmodified
protected boolean isabsolute string name
return fileutil isabsolute new file name
protected string normalizepath string name
return fileutil normalizepath name
/**
* changes the name of this remote file. this method alters the absolute and
* relative names as well.
*
* @param newname the new name
*/
public void changefilename string newname
log trace    newname
// make sure the newname is normalized.
string newfilename   normalizepath newname
log trace    endpointpath
log trace    newfilename
file file   new file newfilename
if   absolute
// for relative then we should avoid having the endpoint path duplicated so clip it
if  objecthelper isnotempty endpointpath     newfilename startswith endpointpath
// clip starting endpoint in case it was added
if  endpointpath endswith     getfileseparator
newfilename   objecthelper after newfilename  endpointpath
else
newfilename   objecthelper after newfilename  endpointpath   getfileseparator
// reconstruct file with clipped name
file   new file newfilename
// store the file name only
setfilenameonly file getname
setfilename file getname
// relative path
if  file getparent      null
setrelativefilepath file getparent     getfileseparator     file getname
else
setrelativefilepath file getname
// absolute path
if  isabsolute newfilename
setabsolute true
setabsolutefilepath newfilename
else
setabsolute false
// construct a pseudo absolute filename that the file operations uses even for relative only
string path   objecthelper isempty endpointpath  ?     endpointpath   getfileseparator
setabsolutefilepath path   getrelativefilepath
if  log istraceenabled
log trace    getfilenameonly
log trace    getfilename
log trace    isabsolute
log trace    getrelativefilepath
log trace    getabsolutefilepath
log trace    this
public string getrelativefilepath
return relativefilepath
public void setrelativefilepath string relativefilepath
this relativefilepath   normalizepathtoprotocol relativefilepath
public string getfilename
return filename
public void setfilename string filename
this filename   normalizepathtoprotocol filename
public long getfilelength
return filelength
public void setfilelength long filelength
this filelength   filelength
public long getlastmodified
return lastmodified
public void setlastmodified long lastmodified
this lastmodified   lastmodified
/* (non-javadoc)
* @see org.apache.camel.component.file.wrappedfile#getfile()
*/
@override
public t getfile
return file
public void setfile t file
this file   file
public object getbody
return getbinding   getbody this
public void setbody object os
getbinding   setbody this  os
public string getparent
string parent
if  isabsolute
string name   getabsolutefilepath
file path   new file name
parent   path getparent
else
string name   getrelativefilepath
file path   new file endpointpath  name
parent   path getparent
return normalizepathtoprotocol parent
public genericfilebinding<t> getbinding
if  binding    null
binding   new genericfiledefaultbinding<t>
return binding
public void setbinding genericfilebinding<t> binding
this binding   binding
public void setabsolutefilepath string absolutefilepath
this absolutefilepath   normalizepathtoprotocol absolutefilepath
public string getabsolutefilepath
return absolutefilepath
public boolean isabsolute
return absolute
public void setabsolute boolean absolute
this absolute   absolute
public string getendpointpath
return endpointpath
public void setendpointpath string endpointpath
this endpointpath   normalizepathtoprotocol endpointpath
public string getfilenameonly
return filenameonly
public void setfilenameonly string filenameonly
this filenameonly   filenameonly
/**
* fixes the path separator to be according to the protocol
*/
protected string normalizepathtoprotocol string path
if  objecthelper isempty path
return path
path   path replace    getfileseparator
path   path replace    getfileseparator
return path
@override
public string tostring
return      absolute ? absolutefilepath   relativefilepath