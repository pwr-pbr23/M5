/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel dataformat bindy fixed
import java io inputstream
import java io inputstreamreader
import java io outputstream
import java util arraylist
import java util hashmap
import java util iterator
import java util list
import java util map
import java util scanner
import org apache camel exchange
import org apache camel dataformat bindy bindyfixedlengthfactory
import org apache camel dataformat bindy util converter
import org apache camel spi dataformat
import org apache camel spi packagescanclassresolver
import org apache camel util iohelper
import org apache camel util objecthelper
import org slf4j logger
import org slf4j loggerfactory
/**
* a <a href="http://camel.apache.org/data-format.html">data format</a> (
* {@link dataformat}) using bindy to marshal to and from fixed length
*/
public class bindyfixedlengthdataformat implements dataformat
private static final transient logger log   loggerfactory getlogger bindyfixedlengthdataformat class
private string packages
private bindyfixedlengthfactory modelfactory
public bindyfixedlengthdataformat
public bindyfixedlengthdataformat string    packages
this packages   packages
@suppresswarnings
public void marshal exchange exchange  object body  outputstream outputstream  throws exception
bindyfixedlengthfactory factory   getfactory exchange getcontext   getpackagescanclassresolver
objecthelper notnull factory
// get crlf
byte bytescrlf   converter getbytereturn factory getcarriagereturn
list<map<string  object>> models
// the body is not a prepared list so help a bit here and create one for us
if  exchange getcontext   gettypeconverter   convertto list class  body     null
models   new arraylist<map<string  object>>
iterator it   objecthelper createiterator body
while  it hasnext
object model   it next
string name   model getclass   getname
map<string  object> row   new hashmap<string  object>
row put name  body
models add row
else
// cast to the expected type
models    list<map<string  object>>  body
for  map<string  object> model   models
string result   factory unbind model
byte bytes   exchange getcontext   gettypeconverter   convertto byte class  exchange  result
outputstream write bytes
// add a carriage return
outputstream write bytescrlf
public object unmarshal exchange exchange  inputstream inputstream  throws exception
bindyfixedlengthfactory factory   getfactory exchange getcontext   getpackagescanclassresolver
objecthelper notnull factory
// list of pojos
list<map<string  object>> models   new arraylist<map<string  object>>
// pojos of the model
map<string  object> model
inputstreamreader in   new inputstreamreader inputstream
// scanner is used to read big file
scanner scanner   new scanner in
int count   0
try
// todo test if we have a header
// todo test if we have a footer (containing by example checksum)
while  scanner hasnextline
string line
// read the line (should not trim as its fixed length)
line   scanner nextline
if  objecthelper isempty line
// skip if line is empty
continue
// increment counter
count
// check if the record length corresponds to the parameter
// provided in the @fixedlengthrecord
if   line length   < factory recordlength        line length   > factory recordlength
throw new java lang illegalargumentexception     line length         factory recordlength
// create pojo where fixed data will be stored
model   factory factory
// bind data from fixed record with model classes
factory bind line  model  count
// link objects together
factory link model
// add objects graph to the list
models add model
log debug    model
// test if models list is empty or not
// if this is the case (correspond to an empty stream, ...)
if  models size      0
throw new java lang illegalargumentexception
else
return models
finally
scanner close
iohelper close in     log
/**
* method used to create the singleton of the bindycsvfactory
*/
public bindyfixedlengthfactory getfactory packagescanclassresolver resolver  throws exception
if  modelfactory    null
modelfactory   new bindyfixedlengthfactory resolver  packages
return modelfactory
public void setmodelfactory bindyfixedlengthfactory modelfactory
this modelfactory   modelfactory
public string getpackages
return packages
public void setpackages string packages
this packages   packages