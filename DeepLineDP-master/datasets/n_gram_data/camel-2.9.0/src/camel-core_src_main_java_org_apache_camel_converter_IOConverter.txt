/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel converter
import java io bufferedreader
import java io bufferedwriter
import java io bytearrayinputstream
import java io bytearrayoutputstream
import java io file
import java io fileinputstream
import java io filenotfoundexception
import java io fileoutputstream
import java io ioexception
import java io inputstream
import java io inputstreamreader
import java io objectinput
import java io objectinputstream
import java io objectoutput
import java io objectoutputstream
import java io outputstream
import java io outputstreamwriter
import java io reader
import java io stringreader
import java io unsupportedencodingexception
import java io writer
import java net url
import java nio charset unsupportedcharsetexception
import org apache camel converter
import org apache camel exchange
import org apache camel util iohelper
import org slf4j logger
import org slf4j loggerfactory
/**
* some core java.io based <a
* href="http://camel.apache.org/type-converter.html">type converters</a>
*
* @version
*/
@converter
public final class ioconverter
private static final transient logger log   loggerfactory getlogger ioconverter class
/**
* utility classes should not have a public constructor.
*/
private ioconverter
@converter
public static inputstream toinputstream url url  throws ioexception
return iohelper buffered url openstream
@converter
public static inputstream toinputstream file file  throws ioexception
return iohelper buffered new fileinputstream file
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static bufferedreader toreader file file  throws ioexception
return toreader file  null
@converter
public static bufferedreader toreader file file  exchange exchange  throws ioexception
return iohelper buffered new encodingfilereader file  iohelper getcharsetname exchange
@converter
public static file tofile string name  throws filenotfoundexception
return new file name
@converter
public static outputstream tooutputstream file file  throws filenotfoundexception
return iohelper buffered new fileoutputstream file
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static bufferedwriter towriter file file  throws ioexception
return towriter file  null
@converter
public static bufferedwriter towriter file file  exchange exchange  throws ioexception
return iohelper buffered new encodingfilewriter file  iohelper getcharsetname exchange
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static reader toreader inputstream in  throws ioexception
return toreader in  null
@converter
public static reader toreader inputstream in  exchange exchange  throws ioexception
return iohelper buffered new inputstreamreader in  iohelper getcharsetname exchange
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static writer towriter outputstream out  throws ioexception
return towriter out  null
@converter
public static writer towriter outputstream out  exchange exchange  throws ioexception
return iohelper buffered new outputstreamwriter out  iohelper getcharsetname exchange
@converter
public static stringreader toreader string text
// no buffering required as the complete string input is already passed
// over as a whole
return new stringreader text
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static inputstream toinputstream string text  throws ioexception
return toinputstream text  null
@converter
public static inputstream toinputstream string text  exchange exchange  throws ioexception
return toinputstream text getbytes iohelper getcharsetname exchange
@converter
public static inputstream toinputstream stringbuffer buffer  exchange exchange  throws ioexception
return toinputstream buffer tostring    exchange
@converter
public static inputstream toinputstream stringbuilder builder  exchange exchange  throws ioexception
return toinputstream builder tostring    exchange
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static inputstream toinputstream bufferedreader buffer  throws ioexception
return toinputstream buffer  null
@converter
public static inputstream toinputstream bufferedreader buffer  exchange exchange  throws ioexception
return toinputstream tostring buffer   exchange
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static string tostring byte data  throws ioexception
return tostring data  null
@converter
public static string tostring byte data  exchange exchange  throws ioexception
return new string data  iohelper getcharsetname exchange
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static string tostring file file  throws ioexception
return tostring file  null
@converter
public static string tostring file file  exchange exchange  throws ioexception
return tostring toreader file  exchange
@converter
public static byte tobytearray file file  throws ioexception
inputstream is   toinputstream file
try
return tobytes is
finally
iohelper close is     log
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static byte tobytearray reader reader  throws ioexception
return tobytearray reader  null
@converter
public static byte tobytearray reader reader  exchange exchange  throws ioexception
return tobytearray iohelper buffered reader   exchange
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static string tostring url url  throws ioexception
return tostring url  null
@converter
public static string tostring url url  exchange exchange  throws ioexception
inputstream is   toinputstream url
try
return tostring is  exchange
finally
iohelper close is     log
@converter
public static string tostring reader reader  throws ioexception
return tostring iohelper buffered reader
@converter
public static string tostring bufferedreader reader  throws ioexception
if  reader    null
return null
stringbuilder sb   new stringbuilder 1024
char buf   new char
try
int len
// read until we reach then end which is the -1 marker
while   len   reader read buf       1
sb append buf  0  len
finally
iohelper close reader     log
return sb tostring
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static byte tobytearray bufferedreader reader  throws ioexception
return tobytearray reader  null
@converter
public static byte tobytearray bufferedreader reader  exchange exchange  throws ioexception
return tobytearray tostring reader   exchange
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static byte tobytearray string value  throws ioexception
return tobytearray value  null
@converter
public static byte tobytearray string value  exchange exchange  throws ioexception
return value    null ? value getbytes iohelper getcharsetname exchange     null
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static string tostring inputstream in  throws ioexception
return tostring in  null
@converter
public static string tostring inputstream in  exchange exchange  throws ioexception
return tostring toreader in  exchange
@converter
public static inputstream toinputstream byte data
// no buffering required as the complete byte input is already passed
// over as a whole
return new bytearrayinputstream data
@converter
public static objectoutput toobjectoutput outputstream stream  throws ioexception
if  stream instanceof objectoutput
return  objectoutput  stream
else
return new objectoutputstream iohelper buffered stream
@converter
public static objectinput toobjectinput inputstream stream  throws ioexception
if  stream instanceof objectinput
return  objectinput  stream
else
return new objectinputstream iohelper buffered stream
@converter
public static byte tobytes inputstream stream  throws ioexception
bytearrayoutputstream bos   new bytearrayoutputstream
iohelper copy iohelper buffered stream   bos
// no need to close the bytearrayoutputstream as it's close()
// implementation is noop
return bos tobytearray
@converter
public static byte tobytearray bytearrayoutputstream os
return os tobytearray
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public static string tostring bytearrayoutputstream os  throws ioexception
return tostring os  null
@converter
public static string tostring bytearrayoutputstream os  exchange exchange  throws ioexception
return os tostring iohelper getcharsetname exchange
@converter
public static inputstream toinputstream bytearrayoutputstream os
// no buffering required as the complete byte array input is already
// passed over as a whole
return new bytearrayinputstream os tobytearray
/**
* gets the charset name if set as property {@link exchange#charset_name}.
*
* @param exchange  the exchange
* @param usedefault should we fallback and use jvm default charset if no property existed?
* @return the charset, or <tt>null</tt> if no found
*/
@deprecated
public static string getcharsetname exchange exchange  boolean usedefault
return iohelper getcharsetname exchange  usedefault
@deprecated
public static string getcharsetname exchange exchange
return getcharsetname exchange  true
/**
* encoding-aware file reader.
*/
private static class encodingfilereader extends inputstreamreader
/**
* @param file file to read
* @param charset character set to use
*/
public encodingfilereader file file  string charset
throws filenotfoundexception  unsupportedencodingexception
super new fileinputstream file   charset
/**
* encoding-aware file writer.
*/
private static class encodingfilewriter extends outputstreamwriter
/**
* @param file file to write
* @param charset character set to use
*/
public encodingfilewriter file file  string charset
throws filenotfoundexception  unsupportedencodingexception
super new fileoutputstream file   charset
/**
* this method will take off the quotes and double quotes of the charset
*/
@deprecated
public static string normalizecharset string charset
return iohelper normalizecharset charset
@deprecated
public static void validatecharset string charset  throws unsupportedcharsetexception
iohelper validatecharset charset