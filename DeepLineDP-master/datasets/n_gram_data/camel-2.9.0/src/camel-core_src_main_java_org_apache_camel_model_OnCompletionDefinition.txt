/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import java util arraylist
import java util iterator
import java util list
import java util concurrent executorservice
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlattribute
import javax xml bind annotation xmlelement
import javax xml bind annotation xmlelementref
import javax xml bind annotation xmlrootelement
import javax xml bind annotation xmltransient
import org apache camel predicate
import org apache camel processor
import org apache camel processor oncompletionprocessor
import org apache camel processor unitofworkprocessor
import org apache camel spi executorservicemanager
import org apache camel spi routecontext
/**
* represents an xml &lt;oncompletion/&gt; element
*
* @version
*/
@xmlrootelement name
@xmlaccessortype xmlaccesstype field
public class oncompletiondefinition extends processordefinition<oncompletiondefinition> implements executorserviceawaredefinition<oncompletiondefinition>
@xmlattribute
private boolean oncompleteonly
@xmlattribute
private boolean onfailureonly
@xmlelement name
private whendefinition onwhen
@xmlattribute
private string executorserviceref
@xmlattribute name
private boolean useoriginalmessagepolicy
@xmlelementref
private list<processordefinition> outputs   new arraylist<processordefinition>
@xmltransient
private executorservice executorservice
public oncompletiondefinition
@override
public string tostring
return     getoutputs
@override
public string getshortname
return
@override
public string getlabel
return
@override
public boolean isabstract
return true
@override
public processor createprocessor routecontext routecontext  throws exception
if  isoncompleteonly      isonfailureonly
throw new illegalargumentexception     this
processor childprocessor   this createchildprocessor routecontext  true
// wrap the on completion route in a unit of work processor
childprocessor   new unitofworkprocessor routecontext  childprocessor
predicate when   null
if  onwhen    null
when   onwhen getexpression   createpredicate routecontext
string ref   this executorserviceref    null ? this executorserviceref
executorservicemanager manager   routecontext getcamelcontext   getexecutorservicemanager
executorservice   manager newdefaultthreadpool this  ref
// should be false by default
boolean original   getuseoriginalmessagepolicy      null ? getuseoriginalmessagepolicy     false
oncompletionprocessor answer   new oncompletionprocessor routecontext getcamelcontext    childprocessor
executorservice  isoncompleteonly    isonfailureonly    when  original
return answer
/**
* removes all existing {@link org.apache.camel.model.oncompletiondefinition} from the definition.
* <p/>
* this is used to let route scoped <tt>oncompletion</tt> overrule any global <tt>oncompletion</tt>.
* hence we remove all existing as they are global.
*
* @param definition the parent definition that is the route
*/
@suppresswarnings
public void removealloncompletiondefinition processordefinition definition
for  iterator<processordefinition> it   definition getoutputs   iterator    it hasnext
processordefinition out   it next
if  out instanceof oncompletiondefinition
it remove
@override
public processordefinition end
// pop parent block, as we added our self as block to parent when synchronized was defined in the route
getparent   popblock
return super end
/**
* will only synchronize when the {@link org.apache.camel.exchange} completed successfully (no errors).
*
* @return the builder
*/
public oncompletiondefinition oncompleteonly
if  isonfailureonly
throw new illegalargumentexception     this
// must define return type as outputdefinition and not this type to avoid end user being able
// to invoke onfailureonly/oncompleteonly more than once
setoncompleteonly boolean true
setonfailureonly boolean false
return this
/**
* will only synchronize when the {@link org.apache.camel.exchange} ended with failure (exception or fault message).
*
* @return the builder
*/
public oncompletiondefinition onfailureonly
if  isoncompleteonly
throw new illegalargumentexception     this
// must define return type as outputdefinition and not this type to avoid end user being able
// to invoke onfailureonly/oncompleteonly more than once
setoncompleteonly boolean false
setonfailureonly boolean true
return this
/**
* sets an additional predicate that should be true before the oncompletion is triggered.
* <p/>
* to be used for fine grained controlling whether a completion callback should be invoked or not
*
* @param predicate predicate that determines true or false
* @return the builder
*/
public oncompletiondefinition onwhen predicate predicate
setonwhen new whendefinition predicate
return this
/**
* will use the original input body when an {@link org.apache.camel.exchange} for this on completion.
* <p/>
* by default this feature is off.
*
* @return the builder
*/
public oncompletiondefinition useoriginalbody
setuseoriginalmessagepolicy boolean true
return this
public oncompletiondefinition executorservice executorservice executorservice
setexecutorservice executorservice
return this
public oncompletiondefinition executorserviceref string executorserviceref
setexecutorserviceref executorserviceref
return this
public list<processordefinition> getoutputs
return outputs
public void setoutputs list<processordefinition> outputs
this outputs   outputs
public boolean isoutputsupported
return true
public boolean getoncompleteonly
return oncompleteonly
public void setoncompleteonly boolean oncompleteonly
this oncompleteonly   oncompleteonly
public boolean isoncompleteonly
return oncompleteonly    null    oncompleteonly
public boolean getonfailureonly
return onfailureonly
public void setonfailureonly boolean onfailureonly
this onfailureonly   onfailureonly
public boolean isonfailureonly
return onfailureonly    null    onfailureonly
public whendefinition getonwhen
return onwhen
public void setonwhen whendefinition onwhen
this onwhen   onwhen
public executorservice getexecutorservice
return executorservice
public void setexecutorservice executorservice executorservice
this executorservice   executorservice
public string getexecutorserviceref
return executorserviceref
public void setexecutorserviceref string executorserviceref
this executorserviceref   executorserviceref
public boolean getuseoriginalmessagepolicy
return useoriginalmessagepolicy    null
public void setuseoriginalmessagepolicy boolean useoriginalmessagepolicy
this useoriginalmessagepolicy   useoriginalmessagepolicy