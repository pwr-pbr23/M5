/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component cxf jaxrs
import java io unsupportedencodingexception
import java lang reflect method
import java lang reflect parameterizedtype
import java lang reflect type
import java net urldecoder
import java util collection
import java util hashmap
import java util linkedhashmap
import java util list
import java util map
import javax ws rs core response
import org apache camel camelexchangeexception
import org apache camel exchange
import org apache camel message
import org apache camel component cxf cxfendpointutils
import org apache camel component cxf cxfoperationexception
import org apache camel component cxf common message cxfconstants
import org apache camel impl defaultproducer
import org apache camel util iohelper
import org apache camel util lrusoftcache
import org apache cxf jaxrs jaxrsservicefactorybean
import org apache cxf jaxrs client client
import org apache cxf jaxrs client jaxrsclientfactorybean
import org apache cxf jaxrs client webclient
import org slf4j logger
import org slf4j loggerfactory
/**
* cxfrsproducer binds a camel exchange to a cxf exchange, acts as a cxf
* jaxrs client, it will turn the normal object invocation to a restful request
* according to resource annotation.  any response will be bound to camel exchange.
*/
public class cxfrsproducer extends defaultproducer
private static final logger log   loggerfactory getlogger cxfrsproducer class
private boolean throwexception
// using a cache of factory beans instead of setting the address of a single cfb
// to avoid concurrent issues
private clientfactorybeancache clientfactorybeancache
public cxfrsproducer cxfrsendpoint endpoint
super endpoint
this throwexception   endpoint isthrowexceptiononfailure
clientfactorybeancache   new clientfactorybeancache endpoint getmaxclientcachesize
protected void dostart   throws exception
clientfactorybeancache start
super dostart
protected void dostop   throws exception
super dostop
clientfactorybeancache stop
public void process exchange exchange  throws exception
message inmessage   exchange getin
boolean httpclientapi   inmessage getheader cxfconstants camel_cxf_rs_using_http_api  boolean class
// set the value with endpoint's option
if  httpclientapi    null
httpclientapi     cxfrsendpoint  getendpoint    ishttpclientapi
if  httpclientapi booleanvalue
invokehttpclient exchange
else
invokeproxyclient exchange
@suppresswarnings
protected void invokehttpclient exchange exchange  throws exception
message inmessage   exchange getin
jaxrsclientfactorybean cfb   clientfactorybeancache get cxfendpointutils
geteffectiveaddress exchange    cxfrsendpoint getendpoint    getaddress
cfb setbus   cxfrsendpoint getendpoint    getbus
webclient client   cfb createwebclient
string httpmethod   inmessage getheader exchange http_method  string class
class responseclass   inmessage getheader cxfconstants camel_cxf_rs_response_class  class class
type generictype   inmessage getheader cxfconstants camel_cxf_rs_response_generic_type  type class
string path   inmessage getheader exchange http_path  string class
if  log istraceenabled
log trace    httpmethod
log trace    path
log trace    responseclass
// set the path
if  path    null
client path path
cxfrsendpoint cxfrsendpoint    cxfrsendpoint  getendpoint
// check if there is a query map in the message header
map<string  string> maps   inmessage getheader cxfconstants camel_cxf_rs_query_map  map class
if  maps    null
// get the map from http_query header
string querystring   inmessage getheader exchange http_query  string class
if  querystring    null
maps   getqueryparametersfromquerystring querystring
iohelper getcharsetname exchange
if  maps    null
maps   cxfrsendpoint getparameters
if  maps    null
for  map entry<string  string> entry   maps entryset
client query entry getkey    entry getvalue
cxfrsbinding binding   cxfrsendpoint getbinding
// set the body
object body   null
if     equals httpmethod
// need to check the request object.
body   binding bindcamelmessagebodytorequestbody inmessage  exchange
if  log istraceenabled
log trace     body
// set headers
client headers binding bindcamelheaderstorequestheaders inmessage getheaders    exchange
// invoke the client
object response   null
if  responseclass    null    response class equals responseclass
response   client invoke httpmethod  body
else
if  collection class isassignablefrom responseclass
if  generictype instanceof parameterizedtype
// get the collection member type first
type actualtypearguments     parameterizedtype  generictype  getactualtypearguments
response   client invokeandgetcollection httpmethod  body   class  actualtypearguments
else
throw new camelexchangeexception     cxfconstants camel_cxf_rs_response_generic_type      exchange
else
response   client invoke httpmethod  body  responseclass
int statescode   client getresponse   getstatus
//throw exception on a response > 207
//http://en.wikipedia.org/wiki/list_of_http_status_codes
if  throwexception
if  response instanceof response
integer respcode     response  response  getstatus
if  respcode > 207
throw populatecxfrsproducerexception exchange   response  response  respcode
// set response
if  exchange getpattern   isoutcapable
log trace    response
exchange getout   setbody binding bindresponsetocamelbody response  exchange
exchange getout   setheaders binding bindresponseheaderstocamelheaders response  exchange
exchange getout   setheader exchange http_response_code  statescode
protected void invokeproxyclient exchange exchange  throws exception
message inmessage   exchange getin
object varvalues   inmessage getheader cxfconstants camel_cxf_rs_var_values  object class
string methodname   inmessage getheader cxfconstants operation_name  string class
client target   null
jaxrsclientfactorybean cfb   clientfactorybeancache get cxfendpointutils
geteffectiveaddress exchange    cxfrsendpoint getendpoint    getaddress
cfb setbus   cxfrsendpoint getendpoint    getbus
if  varvalues    null
target   cfb create
else
target   cfb createwithvalues varvalues
// find out the method which we want to invoke
jaxrsservicefactorybean sfb   cfb getservicefactory
sfb getresourceclasses
// check the null body first
object parameters   null
if  inmessage getbody      null
parameters   inmessage getbody object class
// get the method
method method   findrightmethod sfb getresourceclasses    methodname  getparametertypes parameters
// will send out the message to
// need to deal with the sub resource class
object response   method invoke target  parameters
int statescode   target getresponse   getstatus
if  throwexception
if  response instanceof response
integer respcode     response  response  getstatus
if  respcode > 207
throw populatecxfrsproducerexception exchange   response  response  respcode
cxfrsendpoint cxfrsendpoint    cxfrsendpoint  getendpoint
cxfrsbinding binding   cxfrsendpoint getbinding
if  exchange getpattern   isoutcapable
log trace    response
exchange getout   setbody binding bindresponsetocamelbody response  exchange
exchange getout   setheaders binding bindresponseheaderstocamelheaders response  exchange
exchange getout   setheader exchange http_response_code  statescode
private map<string  string> getqueryparametersfromquerystring string querystring  string charset  throws unsupportedencodingexception
map<string  string> answer    new linkedhashmap<string  string>
for  string param   querystring split
string pair   param split    2
if  pair length    2
string name   urldecoder decode pair  charset
string value   urldecoder decode pair  charset
answer put name  value
else
throw new illegalargumentexception     param
return answer
private method findrightmethod list<class<?>> resourceclasses  string methodname  class parametertypes  throws nosuchmethodexception
method answer   null
for  class<?> clazz   resourceclasses
try
answer   clazz getmethod methodname  parametertypes
catch  nosuchmethodexception ex
// keep looking
catch  securityexception ex
// keep looking
if  answer    null
return answer
throw new nosuchmethodexception     methodname       arraytostring parametertypes
private class<?> getparametertypes object objects
// we need to handle the void parameter situation.
if  objects    null
return new class
class<?> answer   new class
int i   0
for  object obj   objects
answer   obj getclass
i
return answer
private string arraytostring object array
stringbuilder buffer   new stringbuilder
for  object obj   array
if  buffer length   > 2
buffer append
buffer append obj tostring
buffer append
return buffer tostring
protected cxfoperationexception populatecxfrsproducerexception exchange exchange  response response  int responsecode
cxfoperationexception exception
string uri   exchange getfromendpoint   getendpointuri
string statustext   response status fromstatuscode responsecode  tostring
map<string  string> headers   parseresponseheaders response  exchange
string copy   response tostring
if  responsecode >  300    responsecode < 400
string redirectlocation
if  response getmetadata   getfirst       null
redirectlocation   response getmetadata   getfirst    tostring
exception   new cxfoperationexception uri  responsecode  statustext  redirectlocation  headers  copy
else
//no redirect location
exception   new cxfoperationexception uri  responsecode  statustext  null  headers  copy
else
//internal server error(error code 500)
exception   new cxfoperationexception uri  responsecode  statustext  null  headers  copy
return exception
protected map<string  string> parseresponseheaders object response  exchange camelexchange
map<string  string> answer   new hashmap<string  string>
if  response instanceof response
for  map entry<string  list<object>> entry     response  response  getmetadata   entryset
log trace    entry getkey    entry getvalue
answer put entry getkey    entry getvalue   get 0  tostring
return answer
/**
* cache contains {@link org.apache.cxf.jaxrs.client.jaxrsclientfactorybean}
*/
private class clientfactorybeancache
private lrusoftcache<string  jaxrsclientfactorybean> cache
public clientfactorybeancache final int maxcachesize
this cache   new lrusoftcache<string  jaxrsclientfactorybean> maxcachesize
public void start   throws exception
cache resetstatistics
public void stop   throws exception
cache clear
public jaxrsclientfactorybean get string address  throws exception
jaxrsclientfactorybean retval   null
synchronized  cache
retval   cache get address
if  retval    null
retval     cxfrsendpoint getendpoint    createjaxrsclientfactorybean address
cache put address  retval
log trace    address
else
log trace    address
return retval