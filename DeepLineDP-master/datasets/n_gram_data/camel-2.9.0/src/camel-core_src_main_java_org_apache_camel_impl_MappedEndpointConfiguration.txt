/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel impl
import java util arraylist
import java util collections
import java util list
import java util map
import java util set
import java util concurrent concurrenthashmap
import org apache camel component
import org apache camel endpointconfiguration
import org apache camel typeconverter
import org apache camel impl converter propertyeditortypeconverter
import org apache camel util unsafeuricharactersencoder
/**
* fallback implementation of {@link endpointconfiguration} used by {@link component}s
* that did not yet define a configuration type.
*/
public final class mappedendpointconfiguration extends defaultendpointconfiguration
private static final typeconverter converter   new propertyeditortypeconverter
private map<string  object> params   new concurrenthashmap<string  object>
mappedendpointconfiguration component component
super component
@suppresswarnings
public <t> t getparameter string name
return  t params get name
@override
public <t> void setparameter string name  t value
params put name  value
@override
public boolean equals object other
// if all parameters including scheme are the same, the component and uri must be the same too
boolean eq   params equals   mappedendpointconfiguration other  params
return this    other     other    null    this getclass      other getclass      eq
@override
public int hashcode
return params hashcode
@override
protected void parseuri
configurationhelper populatefromuri this  new configurationhelper parametersetter
@override
public <t> void set endpointconfiguration config  string name  t value
if  name    null    value    null
params put name  value
@override
public string touristring uriformat format
set<map entry<string  object>> entries   params entryset
list<string> queryparams   new arraylist<string>
string scheme   null
string schemespecificpart   null
string authority   null
string path   null
string fragment   null
// separate uri values from query parameters
for  map entry<string  object> entry   entries
string key   entry getkey
object value   entry getvalue
if  key equals endpointconfiguration uri_scheme
scheme   converter convertto string class  value
else if  key equals endpointconfiguration uri_scheme_specific_part
schemespecificpart   converter convertto string class  value
else if  key equals endpointconfiguration uri_authority
authority   converter convertto string class  value
else if  key equals endpointconfiguration uri_user_info
// ignore, part of authority
else if  key equals endpointconfiguration uri_host
// ignore, part of authority
else if  key equals endpointconfiguration uri_port
// ignore, part of authority
else if  key equals endpointconfiguration uri_path
path   converter convertto string class  value
else if  key equals endpointconfiguration uri_query
// ignore, but this should not be the case, may be a good idea to log...
else if  key equals endpointconfiguration uri_fragment
fragment   converter convertto string class  value
else
// convert to "param=value" format here, order will be preserved
if  value instanceof list
for  object item    list<?> value
queryparams add key       unsafeuricharactersencoder encode item tostring
else
queryparams add key       unsafeuricharactersencoder encode value tostring
collections sort queryparams
string q
for  string entry   queryparams
q    q length      0 ?
q    entry
stringbuffer u   new stringbuffer 1024
if  scheme    null
u append scheme      should not be null
u append
if  authority    null
u append
u append authority
u append path
if  q length   > 0
u append
u append q
if  fragment    null
u append
u append fragment
else
u append schemespecificpart
return u tostring