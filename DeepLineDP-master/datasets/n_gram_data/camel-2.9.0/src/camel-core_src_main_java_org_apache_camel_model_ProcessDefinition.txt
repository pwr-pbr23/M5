/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlattribute
import javax xml bind annotation xmlrootelement
import javax xml bind annotation xmltransient
import org apache camel processor
import org apache camel service
import org apache camel processor wrapprocessor
import org apache camel spi required
import org apache camel spi routecontext
import org apache camel util objecthelper
/**
* represents an xml &lt;process/&gt; element
*
* @version
*/
@xmlrootelement name
@xmlaccessortype xmlaccesstype field
public class processdefinition extends nooutputdefinition<processdefinition>
@xmlattribute required   true
private string ref
@xmltransient
private processor processor
public processdefinition
public processdefinition processor processor
this processor   processor
@override
public string getshortname
return
@override
public string tostring
return
ref    null  ?     ref   processor
@override
public string getlabel
if  ref    null
return     ref
else if  processor    null
return processor tostring
else
return
public string getref
return ref
@required
public void setref string ref
this ref   ref
@override
public processor createprocessor routecontext routecontext
processor answer   processor
if  processor    null
objecthelper notnull ref     this
answer   routecontext lookup getref    processor class
objecthelper notnull answer      getref    this
// ensure its wrapped in a service so we can manage it from eg. jmx
// (a processor must be a service to be enlisted in jmx)
if    answer instanceof service
answer   new wrapprocessor answer  answer
return answer