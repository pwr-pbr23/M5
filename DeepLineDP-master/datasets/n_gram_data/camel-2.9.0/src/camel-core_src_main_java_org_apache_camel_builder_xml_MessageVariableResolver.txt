/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel builder xml
import java util hashmap
import java util map
import javax xml namespace qname
import javax xml xpath xpathvariableresolver
import org apache camel exchange
import org apache camel message
import org slf4j logger
import org slf4j loggerfactory
import static org apache camel builder xml namespaces environment_variables
import static org apache camel builder xml namespaces exchange_property
import static org apache camel builder xml namespaces in_namespace
import static org apache camel builder xml namespaces out_namespace
import static org apache camel builder xml namespaces system_properties_namespace
/**
* a variable resolver for xpath expressions which support properties on the
* message, exchange as well as making system properties and environment
* properties available.
* <p/>
* implementations of this resolver must be thread safe
*
* @version
*/
public class messagevariableresolver implements xpathvariableresolver
private static final transient logger log   loggerfactory getlogger messagevariableresolver class
private map<string  object> variables   new hashmap<string  object>
private final threadlocal<exchange> exchange
public messagevariableresolver threadlocal<exchange> exchange
this exchange   exchange
public object resolvevariable qname name
string uri   name getnamespaceuri
string localpart   name getlocalpart
object answer   null
message in   exchange get   getin
if  uri    null    uri length      0
answer   variables get localpart
if  answer    null
message message   in
if  message    null
answer   message getheader localpart
if  answer    null
answer   exchange get   getproperty localpart
else if  uri equals system_properties_namespace
try
answer   system getproperty localpart
catch  exception e
log debug     localpart       e  e
else if  uri equals environment_variables
answer   system getenv   get localpart
else if  uri equals exchange_property
answer   exchange get   getproperty localpart
else if  uri equals in_namespace
answer   in getheader localpart
if  answer    null    localpart equals
answer   in getbody
else if  uri equals out_namespace
if  exchange get   hasout
message out   exchange get   getout
answer   out getheader localpart
if  answer    null    localpart equals
answer   out getbody
// if we can't find an answer we must return void.
// we can't return null then the xpath engine will throw a nullpointerexception
if  answer    null
return void class
else
return answer
public void addvariable string localpart  object value
variables put localpart  value