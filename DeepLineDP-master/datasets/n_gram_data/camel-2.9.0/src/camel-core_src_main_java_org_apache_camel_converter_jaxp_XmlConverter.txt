/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel converter jaxp
import java io bytearrayinputstream
import java io file
import java io fileinputstream
import java io filenotfoundexception
import java io ioexception
import java io inputstream
import java io inputstreamreader
import java io reader
import java io stringreader
import java io stringwriter
import java lang reflect constructor
import java nio bytebuffer
import java util properties
import javax xml parsers documentbuilder
import javax xml parsers documentbuilderfactory
import javax xml parsers parserconfigurationexception
import javax xml stream xmlstreamexception
import javax xml stream xmlstreamreader
import javax xml transform outputkeys
import javax xml transform result
import javax xml transform source
import javax xml transform transformer
import javax xml transform transformerconfigurationexception
import javax xml transform transformerexception
import javax xml transform transformerfactory
import javax xml transform dom domresult
import javax xml transform dom domsource
import javax xml transform sax saxsource
import javax xml transform stax staxsource
import javax xml transform stream streamresult
import javax xml transform stream streamsource
import org w3c dom document
import org w3c dom element
import org w3c dom node
import org w3c dom nodelist
import org xml sax inputsource
import org xml sax saxexception
import org xml sax xmlreader
import org apache camel bytessource
import org apache camel converter
import org apache camel exchange
import org apache camel stringsource
import org apache camel util iohelper
import org apache camel util objecthelper
/**
* a helper class to transform to and from various jaxb types such as {@link source} and {@link document}
*
* @version
*/
@converter
public class xmlconverter
@deprecated
//it will be removed in camel 3.0, please use the exchange.default_charset
public static final string default_charset_property
public static final string output_properties_prefix
public static string defaultcharset   objecthelper getsystemproperty exchange default_charset_property
/*
* when converting a dom tree to a saxsource, we try to use xalan internal dom parser if
* available. else, transform the dom tree to a string and build a saxsource on top of it.
*/
private static final class<?> dom_to_sax_class
private documentbuilderfactory documentbuilderfactory
private transformerfactory transformerfactory
static
class<?> cl   null
try
// will not warn the user if the class could not be found
cl   objecthelper loadclass    xmlconverter class getclassloader    false
catch  exception e
// ignore
dom_to_sax_class   cl
public xmlconverter
public xmlconverter documentbuilderfactory documentbuilderfactory
this documentbuilderfactory   documentbuilderfactory
/**
* returns the default set of output properties for conversions.
*/
public properties defaultoutputproperties
properties properties   new properties
properties put outputkeys encoding  defaultcharset
properties put outputkeys omit_xml_declaration
return properties
/**
* converts the given input source into the required result
*/
public void toresult source source  result result  throws transformerexception
toresult source  result  defaultoutputproperties
/**
* converts the given input source into the required result
*/
public void toresult source source  result result  properties outputproperties  throws transformerexception
if  source    null
return
transformer transformer   createtransformer
if  transformer    null
throw new transformerexception
transformer setoutputproperties outputproperties
transformer transform source  result
/**
* converts the given nodelist to a boolean
*/
@converter
public boolean toboolean nodelist list
return list getlength   > 0
/**
* converts the given byte[] to a source
*/
@converter
public bytessource tobytessource byte data
return new bytessource data
/**
* converts the given string to a source
*/
@converter
public stringsource tostringsource string data
return new stringsource data
/**
* converts the given document to a source
* @deprecated use todomsource instead
*/
@deprecated
public domsource tosource document document
return todomsource document
/**
* converts the given node to a source
* @deprecated  use todomsource instead
*/
@deprecated
public source tosource node node
return todomsource node
/**
* converts the given node to a source
*/
@converter
public domsource todomsource node node
return new domsource node
/**
* converts the given string to a source
*/
@converter
public source tosource string data
return new stringsource data
/**
* converts the given input source into text.
*
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public string tostring source source  throws transformerexception
return tostring source  null
/**
* converts the given input source into text
*/
@converter
public string tostring source source  exchange exchange  throws transformerexception
if  source    null
return null
else if  source instanceof stringsource
return   stringsource  source  gettext
else if  source instanceof bytessource
return new string   bytessource  source  getdata
else
stringwriter buffer   new stringwriter
if  exchange    null
// check the camelcontext properties first
properties properties   objecthelper getcamelpropertieswithprefix output_properties_prefix  exchange getcontext
if  properties size   > 0
toresult source  new streamresult buffer   properties
return buffer tostring
// using the old way to deal with it
toresult source  new streamresult buffer
return buffer tostring
/**
* converts the given input source into bytes
*/
@converter
public byte tobytearray source source  exchange exchange  throws transformerexception
string answer   tostring source  exchange
if  exchange    null
return exchange getcontext   gettypeconverter   convertto byte class  exchange  answer
else
return answer getbytes
/**
* converts the given input node into text
*
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public string tostring node node  throws transformerexception
return tostring node  null
/**
* converts the given input node into text
*/
@converter
public string tostring node node  exchange exchange  throws transformerexception
return tostring new domsource node   exchange
/**
* converts the source instance to a {@link domsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
*/
@converter
public domsource todomsource source source  throws parserconfigurationexception  ioexception  saxexception  transformerexception
if  source instanceof domsource
return  domsource  source
else if  source instanceof saxsource
return todomsourcefromsax  saxsource  source
else if  source instanceof streamsource
return todomsourcefromstream  streamsource  source
else if  source instanceof staxsource
return todomsourcefromstax  staxsource source
else
return null
/**
* converts the source instance to a {@link domsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
*/
@converter
public domsource todomsource string text  throws parserconfigurationexception  ioexception  saxexception  transformerexception
source source   tosource text
if  source    null
return todomsourcefromstream  streamsource  source
else
return null
/**
* converts the source instance to a {@link domsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
*/
@converter
public domsource todomsource byte bytes  throws ioexception  saxexception  parserconfigurationexception
inputstream is   new bytearrayinputstream bytes
try
return todomsource is
finally
iohelper close is
/**
* converts the source instance to a {@link saxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
*
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public saxsource tosaxsource string source  throws ioexception  saxexception  transformerexception
return tosaxsource source  null
/**
* converts the source instance to a {@link saxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
*/
@converter
public saxsource tosaxsource string source  exchange exchange  throws ioexception  saxexception  transformerexception
return tosaxsource tosource source   exchange
/**
* converts the source instance to a {@link staxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
* @throws xmlstreamexception
*/
@converter
public staxsource tostaxsource string source  exchange exchange  throws xmlstreamexception
xmlstreamreader r   new staxconverter   createxmlstreamreader new stringreader source
return new staxsource r
/**
* converts the source instance to a {@link staxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
* @throws xmlstreamexception
*/
@converter
public staxsource tostaxsource byte in  exchange exchange  throws xmlstreamexception
xmlstreamreader r   new staxconverter   createxmlstreamreader new bytearrayinputstream in   exchange
return new staxsource r
/**
* converts the source instance to a {@link saxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
*
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public saxsource tosaxsource inputstream source  throws ioexception  saxexception  transformerexception
return tosaxsource source  null
/**
* converts the source instance to a {@link saxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
*/
@converter
public saxsource tosaxsource inputstream source  exchange exchange  throws ioexception  saxexception  transformerexception
return tosaxsource tostreamsource source   exchange
/**
* converts the source instance to a {@link saxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
*/
@converter
public saxsource tosaxsource byte in  exchange exchange  throws ioexception  saxexception  transformerexception
return tosaxsource tostreamsource in  exchange   exchange
/**
* converts the source instance to a {@link staxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
* @throws xmlstreamexception
*/
@converter
public staxsource tostaxsource inputstream source  exchange exchange  throws xmlstreamexception
xmlstreamreader r   new staxconverter   createxmlstreamreader source  exchange
return new staxsource r
/**
* converts the source instance to a {@link saxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
*/
@converter
public saxsource tosaxsource file file  exchange exchange  throws ioexception  saxexception  transformerexception
inputstream is   iohelper buffered new fileinputstream file
return tosaxsource is  exchange
/**
* converts the source instance to a {@link staxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
* @throws filenotfoundexception
* @throws xmlstreamexception
*/
@converter
public staxsource tostaxsource file file  exchange exchange  throws filenotfoundexception  xmlstreamexception
inputstream is   iohelper buffered new fileinputstream file
xmlstreamreader r   new staxconverter   createxmlstreamreader is  exchange
return new staxsource r
/**
* converts the source instance to a {@link saxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
*
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public saxsource tosaxsource source source  throws ioexception  saxexception  transformerexception
return tosaxsource source  null
/**
* converts the source instance to a {@link saxsource} or returns null if the conversion is not
* supported (making it easy to derive from this class to add new kinds of conversion).
*/
@converter
public saxsource tosaxsource source source  exchange exchange  throws ioexception  saxexception  transformerexception
if  source instanceof saxsource
return  saxsource  source
else if  source instanceof domsource
return tosaxsourcefromdom  domsource  source  exchange
else if  source instanceof streamsource
return tosaxsourcefromstream  streamsource  source
else if  source instanceof staxsource
return tosaxsourcefromstax  staxsource  source  exchange
else
return null
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public streamsource tostreamsource source source  throws transformerexception
return tostreamsource source  null
@converter
public streamsource tostreamsource source source  exchange exchange  throws transformerexception
if  source instanceof streamsource
return  streamsource  source
else if  source instanceof domsource
return tostreamsourcefromdom  domsource  source  exchange
else if  source instanceof saxsource
return tostreamsourcefromsax  saxsource  source  exchange
else if  source instanceof staxsource
return tostreamsourcefromstax  staxsource  source  exchange
else
return null
@converter
public streamsource tostreamsource inputstream in  throws transformerexception
if  in    null
return new streamsource in
return null
@converter
public streamsource tostreamsource reader in  throws transformerexception
if  in    null
return new streamsource in
return null
@converter
public streamsource tostreamsource file in  throws transformerexception
if  in    null
return new streamsource in
return null
@converter
public streamsource tostreamsource byte in  exchange exchange  throws transformerexception
if  in    null
inputstream is   exchange getcontext   gettypeconverter   convertto inputstream class  in
return new streamsource is
return null
@converter
public streamsource tostreamsource bytebuffer in  exchange exchange  throws transformerexception
if  in    null
inputstream is   exchange getcontext   gettypeconverter   convertto inputstream class  in
return new streamsource is
return null
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public streamsource tostreamsourcefromsax saxsource source  throws transformerexception
return tostreamsourcefromsax source  null
@converter
public streamsource tostreamsourcefromsax saxsource source  exchange exchange  throws transformerexception
inputsource inputsource   source getinputsource
if  inputsource    null
if  inputsource getcharacterstream      null
return new streamsource inputsource getcharacterstream
if  inputsource getbytestream      null
return new streamsource inputsource getbytestream
string result   tostring source  exchange
return new stringsource result
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public streamsource tostreamsourcefromdom domsource source  throws transformerexception
return tostreamsourcefromdom source  null
@converter
public streamsource tostreamsourcefromdom domsource source  exchange exchange  throws transformerexception
string result   tostring source  exchange
return new stringsource result
@converter
public streamsource tostreamsourcefromstax staxsource source  exchange exchange  throws transformerexception
string result   tostring source  exchange
return new stringsource result
@converter
public saxsource tosaxsourcefromstream streamsource source
inputsource inputsource
if  source getreader      null
inputsource   new inputsource source getreader
else
inputsource   new inputsource source getinputstream
inputsource setsystemid source getsystemid
inputsource setpublicid source getpublicid
return new saxsource inputsource
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public reader toreaderfromsource source src  throws transformerexception
return toreaderfromsource src  null
@converter
public reader toreaderfromsource source src  exchange exchange  throws transformerexception
streamsource stsrc   tostreamsource src  exchange
reader r   stsrc getreader
if  r    null
r   new inputstreamreader stsrc getinputstream
return r
@converter
public domsource todomsource inputstream is  throws parserconfigurationexception  ioexception  saxexception
inputsource source   new inputsource is
string systemid   source getsystemid
documentbuilder builder   createdocumentbuilder
document document   builder parse source
return new domsource document  systemid
@converter
public domsource todomsource file file  throws parserconfigurationexception  ioexception  saxexception
inputstream is   iohelper buffered new fileinputstream file
return todomsource is
@converter
public domsource todomsourcefromstream streamsource source  throws parserconfigurationexception  ioexception  saxexception
document document
string systemid   source getsystemid
documentbuilder builder   createdocumentbuilder
reader reader   source getreader
if  reader    null
document   builder parse new inputsource reader
else
inputstream inputstream   source getinputstream
if  inputstream    null
inputsource inputsource   new inputsource inputstream
inputsource setsystemid systemid
document   builder parse inputsource
else
throw new ioexception     source
return new domsource document  systemid
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public saxsource tosaxsourcefromdom domsource source  throws transformerexception
return tosaxsourcefromdom source  null
@converter
public saxsource tosaxsourcefromdom domsource source  exchange exchange  throws transformerexception
if  dom_to_sax_class    null
try
constructor<?> cns   dom_to_sax_class getconstructor node class
xmlreader converter    xmlreader  cns newinstance source getnode
return new saxsource converter  new inputsource
catch  exception e
throw new transformerexception e
else
string str   tostring source  exchange
stringreader reader   new stringreader str
return new saxsource new inputsource reader
@converter
public saxsource tosaxsourcefromstax staxsource source  exchange exchange  throws transformerexception
string str   tostring source  exchange
stringreader reader   new stringreader str
return new saxsource new inputsource reader
@converter
public domsource todomsourcefromsax saxsource source  throws ioexception  saxexception  parserconfigurationexception  transformerexception
return new domsource todomnodefromsax source
@converter
public domsource todomsourcefromstax staxsource source  throws ioexception  saxexception  parserconfigurationexception  transformerexception
return new domsource todomnodefromstax source
@converter
public node todomnodefromsax saxsource source  throws parserconfigurationexception  ioexception  saxexception  transformerexception
domresult result   new domresult
toresult source  result
return result getnode
@converter
public node todomnodefromstax staxsource source  throws parserconfigurationexception  ioexception  saxexception  transformerexception
domresult result   new domresult
toresult source  result
return result getnode
/**
* converts the given trax source into a w3c dom node
*/
@converter
public node todomnode source source  throws transformerexception  parserconfigurationexception  ioexception  saxexception
domsource domsrc   todomsource source
return domsrc    null ? domsrc getnode     null
/**
* create a dom element from the given source.
*/
@converter
public element todomelement source source  throws transformerexception  parserconfigurationexception  ioexception  saxexception
node node   todomnode source
return todomelement node
/**
* create a dom element from the dom node.
* simply cast if the node is an element, or
* return the root element if it is a document.
*/
@converter
public element todomelement node node  throws transformerexception
// if the node is an document, return the root element
if  node instanceof document
return   document  node  getdocumentelement
// if the node is an element, just cast it
else if  node instanceof element
return  element  node
// other node types are not handled
else
throw new transformerexception
/**
* converts the given data to a dom document
*
* @param data is the data to be parsed
* @return the parsed document
*/
@converter
public document todomdocument byte data  throws ioexception  saxexception  parserconfigurationexception
documentbuilder documentbuilder   getdocumentbuilderfactory   newdocumentbuilder
return documentbuilder parse new bytearrayinputstream data
/**
* converts the given {@link inputstream} to a dom document
*
* @param in is the data to be parsed
* @return the parsed document
*/
@converter
public document todomdocument inputstream in  throws ioexception  saxexception  parserconfigurationexception
documentbuilder documentbuilder   getdocumentbuilderfactory   newdocumentbuilder
return documentbuilder parse in
/**
* converts the given {@link inputstream} to a dom document
*
* @param in is the data to be parsed
* @return the parsed document
*/
@converter
public document todomdocument reader in  throws ioexception  saxexception  parserconfigurationexception
return todomdocument new inputsource in
/**
* converts the given {@link inputsource} to a dom document
*
* @param in is the data to be parsed
* @return the parsed document
*/
@converter
public document todomdocument inputsource in  throws ioexception  saxexception  parserconfigurationexception
documentbuilder documentbuilder   getdocumentbuilderfactory   newdocumentbuilder
return documentbuilder parse in
/**
* converts the given {@link string} to a dom document
*
* @param text is the data to be parsed
* @return the parsed document
*/
@converter
public document todomdocument string text  throws ioexception  saxexception  parserconfigurationexception
return todomdocument new stringreader text
/**
* converts the given {@link file} to a dom document
*
* @param file is the data to be parsed
* @return the parsed document
*/
@converter
public document todomdocument file file  throws ioexception  saxexception  parserconfigurationexception
documentbuilder documentbuilder   getdocumentbuilderfactory   newdocumentbuilder
return documentbuilder parse file
/**
* create a dom document from the given source.
*/
@converter
public document todomdocument source source  throws transformerexception  parserconfigurationexception  ioexception  saxexception
node node   todomnode source
return todomdocument node
/**
* create a dom document from the given node.
*
* if the node is an document, just cast it, if the node is an root element, retrieve its
* owner element or create a new document and import the node.
*/
@converter
public document todomdocument final node node  throws parserconfigurationexception  transformerexception
objecthelper notnull node
// if the node is the document, just cast it
if  node instanceof document
return  document  node
// if the node is an element
else if  node instanceof element
element elem    element  node
// if this is the root element, return its owner document
if  elem getownerdocument   getdocumentelement      elem
return elem getownerdocument
// else, create a new doc and copy the element inside it
else
document doc   createdocument
// import node must not occur concurrent on the same node (must be its owner)
// so we need to synchronize on it
synchronized  node getownerdocument
doc appendchild doc importnode node  true
return doc
// other element types are not handled
else
throw new transformerexception     node
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public inputstream toinputstream domsource source  throws transformerexception  ioexception
return toinputstream source  null
@converter
public inputstream toinputstream domsource source  exchange exchange  throws transformerexception  ioexception
string s   tostring source  exchange
return new bytearrayinputstream s getbytes
/**
* @deprecated will be removed in camel 3.0. use the method which has 2 parameters.
*/
@deprecated
public inputstream toinputstream document dom  throws transformerexception  ioexception
return toinputstream dom  null
@converter
public inputstream toinputstream document dom  exchange exchange  throws transformerexception  ioexception
string s   tostring dom  exchange
return new bytearrayinputstream s getbytes
@converter
public inputsource toinputsource inputstream is  exchange exchange
return new inputsource is
@converter
public inputsource toinputsource file file  exchange exchange  throws filenotfoundexception
inputstream is   iohelper buffered new fileinputstream file
return new inputsource is
// properties
//-------------------------------------------------------------------------
public documentbuilderfactory getdocumentbuilderfactory
if  documentbuilderfactory    null
documentbuilderfactory   createdocumentbuilderfactory
return documentbuilderfactory
public void setdocumentbuilderfactory documentbuilderfactory documentbuilderfactory
this documentbuilderfactory   documentbuilderfactory
// helper methods
//-------------------------------------------------------------------------
public documentbuilderfactory createdocumentbuilderfactory
documentbuilderfactory factory   documentbuilderfactory newinstance
factory setnamespaceaware true
factory setignoringelementcontentwhitespace true
factory setignoringcomments true
return factory
public documentbuilder createdocumentbuilder   throws parserconfigurationexception
documentbuilderfactory factory   getdocumentbuilderfactory
return factory newdocumentbuilder
public document createdocument   throws parserconfigurationexception
documentbuilder builder   createdocumentbuilder
return builder newdocument
public transformerfactory gettransformerfactory
if  transformerfactory    null
transformerfactory   createtransformerfactory
return transformerfactory
public void settransformerfactory transformerfactory transformerfactory
this transformerfactory   transformerfactory
/**
* @deprecated use {@link #createtransformer}, will be removed in camel 3.0
*/
@deprecated
public transformer createtransfomer   throws transformerconfigurationexception
return createtransformer
public transformer createtransformer   throws transformerconfigurationexception
transformerfactory factory   gettransformerfactory
return factory newtransformer
public transformerfactory createtransformerfactory
transformerfactory factory   transformerfactory newinstance
factory seterrorlistener new xmlerrorlistener
return factory