/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq store journal
import java io file
import java io ioexception
import org apache activeio journal journal
import org apache activeio journal active journalimpl
import org apache activeio journal active journallockedexception
import org apache activemq store persistenceadapter
import org apache activemq store persistenceadapterfactory
import org apache activemq store jdbc datasourcesupport
import org apache activemq store jdbc jdbcadapter
import org apache activemq store jdbc jdbcpersistenceadapter
import org apache activemq store jdbc statements
import org apache activemq thread taskrunnerfactory
import org apache commons logging log
import org apache commons logging logfactory
/**
* factory class that can create persistenceadapter objects.
*
* @version $revision: 1.4 $
*/
public class journalpersistenceadapterfactory extends datasourcesupport implements persistenceadapterfactory
private static final int journal_locked_wait_delay   10   1000
private static final log log   logfactory getlog journalpersistenceadapterfactory class
private int journallogfilesize   1024   1024   20
private int journallogfiles   2
private taskrunnerfactory taskrunnerfactory
private journal journal
private boolean usejournal   true
private boolean usequickjournal
private file journalarchivedirectory
private boolean failifjournalislocked
private int journalthreadpriority   thread max_priority
private jdbcpersistenceadapter jdbcpersistenceadapter   new jdbcpersistenceadapter
public persistenceadapter createpersistenceadapter   throws ioexception
jdbcpersistenceadapter setdatasource getdatasource
if   usejournal
return jdbcpersistenceadapter
return new journalpersistenceadapter getjournal    jdbcpersistenceadapter  gettaskrunnerfactory
public int getjournallogfiles
return journallogfiles
/**
* sets the number of journal log files to use
*/
public void setjournallogfiles int journallogfiles
this journallogfiles   journallogfiles
public int getjournallogfilesize
return journallogfilesize
/**
* sets the size of the journal log files
* when set using xbean, values of the form "20 mb", "1024kb", and "1g" can be used
* @org.apache.xbean.property propertyeditor="org.apache.activemq.util.memoryintpropertyeditor"
*/
public void setjournallogfilesize int journallogfilesize
this journallogfilesize   journallogfilesize
public jdbcpersistenceadapter getjdbcadapter
return jdbcpersistenceadapter
public void setjdbcadapter jdbcpersistenceadapter jdbcadapter
this jdbcpersistenceadapter   jdbcadapter
public boolean isusejournal
return usejournal
/**
* enables or disables the use of the journal. the default is to use the
* journal
*
* @param usejournal
*/
public void setusejournal boolean usejournal
this usejournal   usejournal
public taskrunnerfactory gettaskrunnerfactory
if  taskrunnerfactory    null
taskrunnerfactory   new taskrunnerfactory    journalthreadpriority
true  1000
return taskrunnerfactory
public void settaskrunnerfactory taskrunnerfactory taskrunnerfactory
this taskrunnerfactory   taskrunnerfactory
public journal getjournal   throws ioexception
if  journal    null
createjournal
return journal
public void setjournal journal journal
this journal   journal
public file getjournalarchivedirectory
if  journalarchivedirectory    null    usequickjournal
journalarchivedirectory   new file getdatadirectoryfile
return journalarchivedirectory
public void setjournalarchivedirectory file journalarchivedirectory
this journalarchivedirectory   journalarchivedirectory
public boolean isusequickjournal
return usequickjournal
/**
* enables or disables the use of quick journal, which keeps messages in the
* journal and just stores a reference to the messages in jdbc. defaults to
* false so that messages actually reside long term in the jdbc database.
*/
public void setusequickjournal boolean usequickjournal
this usequickjournal   usequickjournal
public jdbcadapter getadapter   throws ioexception
return jdbcpersistenceadapter getadapter
public void setadapter jdbcadapter adapter
jdbcpersistenceadapter setadapter adapter
public statements getstatements
return jdbcpersistenceadapter getstatements
public void setstatements statements statements
jdbcpersistenceadapter setstatements statements
public boolean isusedatabaselock
return jdbcpersistenceadapter isusedatabaselock
/**
* sets whether or not an exclusive database lock should be used to enable
* jdbc master/slave. enabled by default.
*/
public void setusedatabaselock boolean usedatabaselock
jdbcpersistenceadapter setusedatabaselock usedatabaselock
public boolean iscreatetablesonstartup
return jdbcpersistenceadapter iscreatetablesonstartup
/**
* sets whether or not tables are created on startup
*/
public void setcreatetablesonstartup boolean createtablesonstartup
jdbcpersistenceadapter setcreatetablesonstartup createtablesonstartup
public int getjournalthreadpriority
return journalthreadpriority
/**
* sets the thread priority of the journal thread
*/
public void setjournalthreadpriority int journalthreadpriority
this journalthreadpriority   journalthreadpriority
/**
* @throws ioexception
*/
protected void createjournal   throws ioexception
file journaldir   new file getdatadirectoryfile       getcanonicalfile
if  failifjournalislocked
journal   new journalimpl journaldir  journallogfiles  journallogfilesize
getjournalarchivedirectory
else
while  true
try
journal   new journalimpl journaldir  journallogfiles  journallogfilesize
getjournalarchivedirectory
break
catch  journallockedexception e
log info      journal_locked_wait_delay   1000
try
thread sleep journal_locked_wait_delay
catch  interruptedexception e1