/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport peer
import java io ioexception
import java net uri
import java net urisyntaxexception
import java util hashmap
import java util map
import java util concurrent concurrenthashmap
import org apache activemq broker brokerfactoryhandler
import org apache activemq broker brokerservice
import org apache activemq broker transportconnector
import org apache activemq transport transport
import org apache activemq transport transportfactory
import org apache activemq transport transportserver
import org apache activemq transport vm vmtransportfactory
import org apache activemq util ioexceptionsupport
import org apache activemq util idgenerator
import org apache activemq util introspectionsupport
import org apache activemq util urisupport
public class peertransportfactory extends transportfactory
public static final concurrenthashmap brokers   new concurrenthashmap
public static final concurrenthashmap connectors   new concurrenthashmap
public static final concurrenthashmap servers   new concurrenthashmap
private static final idgenerator id_generator   new idgenerator
public transport doconnect uri location  throws exception
vmtransportfactory vmtransportfactory   createtransportfactory location
return vmtransportfactory doconnect location
public transport docompositeconnect uri location  throws exception
vmtransportfactory vmtransportfactory   createtransportfactory location
return vmtransportfactory docompositeconnect location
/**
* @param location
* @return the converted uri
* @throws urisyntaxexception
*/
private vmtransportfactory createtransportfactory uri location  throws ioexception
try
string group   location gethost
string broker   urisupport stripprefix location getpath
if  group    null
group
if  broker    null    broker length      0
broker   id_generator generatesanitizedid
final map<string  string> brokeroptions   new hashmap<string  string> urisupport parseparamters location
if   brokeroptions containskey
brokeroptions put
final uri finallocation   new uri     broker
final string finalbroker   broker
final string finalgroup   group
vmtransportfactory rc   new vmtransportfactory
public transport doconnect uri ignore  throws exception
return super doconnect finallocation
public transport docompositeconnect uri ignore  throws exception
return super docompositeconnect finallocation
rc setbrokerfactoryhandler new brokerfactoryhandler
public brokerservice createbroker uri brokeruri  throws exception
brokerservice service   new brokerservice
introspectionsupport setproperties service  brokeroptions
service setbrokername finalbroker
transportconnector c   service addconnector
c setdiscoveryuri new uri     finalgroup
service addnetworkconnector     finalgroup
return service
return rc
catch  urisyntaxexception e
throw ioexceptionsupport create e
public transportserver dobind uri location  throws ioexception
throw new ioexception