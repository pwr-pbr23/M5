/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport udp
import java io ioexception
import java net uri
import java net urisyntaxexception
import java net unknownhostexception
import java util hashmap
import java util map
import org apache activemq openwire openwireformat
import org apache activemq transport commandjoiner
import org apache activemq transport inactivitymonitor
import org apache activemq transport transport
import org apache activemq transport transportfactory
import org apache activemq transport transportloggerfactory
import org apache activemq transport transportserver
import org apache activemq transport reliable defaultreplaystrategy
import org apache activemq transport reliable exceptionifdroppedreplaystrategy
import org apache activemq transport reliable reliabletransport
import org apache activemq transport reliable replaystrategy
import org apache activemq transport reliable replayer
import org apache activemq transport tcp tcptransportfactory
import org apache activemq util ioexceptionsupport
import org apache activemq util introspectionsupport
import org apache activemq util urisupport
import org apache activemq wireformat wireformat
import org apache commons logging log
import org apache commons logging logfactory
/**
* @author david martin clavo david(dot)martin(dot)clavo(at)gmail.com (logging improvement modifications)
* @version $revision$
*/
public class udptransportfactory extends transportfactory
private static final log log   logfactory getlog tcptransportfactory class
public transportserver dobind final uri location  throws ioexception
try
map<string  string> options   new hashmap<string  string> urisupport parseparamters location
if  options containskey
throw new illegalargumentexception
wireformat wf   createwireformat options
int port   location getport
openwireformat openwireformat   asopenwireformat wf
udptransport transport    udptransport  createtransport location  wf
transport configuredtransport   configure transport  wf  options  true
udptransportserver server   new udptransportserver location  transport  configuredtransport  createreplaystrategy
return server
catch  urisyntaxexception e
throw ioexceptionsupport create e
catch  exception e
throw ioexceptionsupport create e
public transport configure transport transport  wireformat format  map options  throws exception
return configure transport  format  options  false
public transport compositeconfigure transport transport  wireformat format  map options
introspectionsupport setproperties transport  options
final udptransport udptransport    udptransport transport
// deal with fragmentation
transport   new commandjoiner transport  asopenwireformat format
if  udptransport istrace
try
transport   transportloggerfactory getinstance   createtransportlogger transport
catch  throwable e
log error     transportloggerfactory defaultlogwritername       e  e
transport   new inactivitymonitor transport  format
if  format instanceof openwireformat
transport   configureclientsidenegotiator transport  format  udptransport
return transport
protected transport createtransport uri location  wireformat wf  throws unknownhostexception  ioexception
openwireformat wireformat   asopenwireformat wf
return new udptransport wireformat  location
/**
* configures the transport
*
* @param acceptserver true if this transport is used purely as an 'accept'
*                transport for new connections which work like tcp
*                socketservers where new connections spin up a new separate
*                udp transport
*/
protected transport configure transport transport  wireformat format  map options  boolean acceptserver  throws exception
introspectionsupport setproperties transport  options
udptransport udptransport    udptransport transport
openwireformat openwireformat   asopenwireformat format
if  udptransport istrace
transport   transportloggerfactory getinstance   createtransportlogger transport
transport   new inactivitymonitor transport  format
if   acceptserver    format instanceof openwireformat
transport   configureclientsidenegotiator transport  format  udptransport
// deal with fragmentation
if  acceptserver
// lets not support a buffer of messages to enable reliable
// messaging on the 'accept server' transport
udptransport setreplayenabled false
// we don't want to do reliable checks on this transport as we
// delegate to one that does
transport   new commandjoiner transport  openwireformat
return transport
else
reliabletransport reliabletransport   new reliabletransport transport  udptransport
replayer replayer   reliabletransport getreplayer
reliabletransport setreplaystrategy createreplaystrategy replayer
// joiner must be on outside as the inbound messages must be
// processed by the reliable transport first
return new commandjoiner reliabletransport  openwireformat
protected replaystrategy createreplaystrategy replayer replayer
if  replayer    null
return new defaultreplaystrategy 5
return new exceptionifdroppedreplaystrategy 1
protected replaystrategy createreplaystrategy
return new defaultreplaystrategy 5
protected transport configureclientsidenegotiator transport transport  wireformat format  final udptransport udptransport
return new responseredirectinterceptor transport  udptransport
protected openwireformat asopenwireformat wireformat wf
openwireformat answer    openwireformat wf
return answer