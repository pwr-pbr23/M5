/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker jmx
import java io ioexception
import java util arraylist
import java util date
import java util hashmap
import java util list
import java util map
import java util set
import javax jms deliverymode
import javax jms jmsexception
import javax jms destination
import javax management openmbean arraytype
import javax management openmbean compositedata
import javax management openmbean compositedatasupport
import javax management openmbean compositetype
import javax management openmbean opendataexception
import javax management openmbean opentype
import javax management openmbean simpletype
import javax management openmbean tabulartype
import javax management openmbean tabulardatasupport
import org apache activemq command activemqbytesmessage
import org apache activemq command activemqmapmessage
import org apache activemq command activemqmessage
import org apache activemq command activemqobjectmessage
import org apache activemq command activemqstreammessage
import org apache activemq command activemqtextmessage
import org apache activemq command message
import static org apache activemq broker jmx compositedataconstants
public final class opentypesupport
interface opentypefactory
compositetype getcompositetype   throws opendataexception
map<string  object> getfields object o  throws opendataexception
private static final map<class  messageopentypefactory> open_type_factories   new hashmap<class  messageopentypefactory>
abstract static class abstractopentypefactory implements opentypefactory
private compositetype compositetype
private list<string> itemnameslist   new arraylist<string>
private list<string> itemdescriptionslist   new arraylist<string>
private list<opentype> itemtypeslist   new arraylist<opentype>
public compositetype getcompositetype   throws opendataexception
if  compositetype    null
init
compositetype   createcompositetype
return compositetype
protected void init   throws opendataexception
protected compositetype createcompositetype   throws opendataexception
string itemnames   itemnameslist toarray new string
string itemdescriptions   itemdescriptionslist toarray new string
opentype itemtypes   itemtypeslist toarray new opentype
return new compositetype gettypename    getdescription    itemnames  itemdescriptions  itemtypes
protected abstract string gettypename
protected void additem string name  string description  opentype type
itemnameslist add name
itemdescriptionslist add description
itemtypeslist add type
protected string getdescription
return gettypename
public map<string  object> getfields object o  throws opendataexception
map<string  object> rc   new hashmap<string  object>
return rc
static class messageopentypefactory extends abstractopentypefactory
protected tabulartype stringpropertytabulartype
protected tabulartype booleanpropertytabulartype
protected tabulartype bytepropertytabulartype
protected tabulartype shortpropertytabulartype
protected tabulartype intpropertytabulartype
protected tabulartype longpropertytabulartype
protected tabulartype floatpropertytabulartype
protected tabulartype doublepropertytabulartype
protected string gettypename
return activemqmessage class getname
protected void init   throws opendataexception
super init
additem       simpletype string
additem       simpletype string
additem       simpletype string
additem       simpletype string
additem       simpletype string
additem       simpletype string
additem       simpletype long
additem       simpletype integer
additem       simpletype boolean
additem       simpletype date
additem jmsxgroup_id     simpletype string
additem jmsxgroup_seq     simpletype integer
additem original_destination     simpletype string
additem compositedataconstants properties     simpletype string
// now lets expose the type safe properties
stringpropertytabulartype   createtabulartype string class  simpletype string
booleanpropertytabulartype   createtabulartype boolean class  simpletype boolean
bytepropertytabulartype   createtabulartype byte class  simpletype byte
shortpropertytabulartype   createtabulartype short class  simpletype short
intpropertytabulartype   createtabulartype integer class  simpletype integer
longpropertytabulartype   createtabulartype long class  simpletype long
floatpropertytabulartype   createtabulartype float class  simpletype float
doublepropertytabulartype   createtabulartype double class  simpletype double
additem compositedataconstants string_properties     stringpropertytabulartype
additem compositedataconstants boolean_properties     booleanpropertytabulartype
additem compositedataconstants byte_properties     bytepropertytabulartype
additem compositedataconstants short_properties     shortpropertytabulartype
additem compositedataconstants int_properties     intpropertytabulartype
additem compositedataconstants long_properties     longpropertytabulartype
additem compositedataconstants float_properties     floatpropertytabulartype
additem compositedataconstants double_properties     doublepropertytabulartype
public map<string  object> getfields object o  throws opendataexception
activemqmessage m    activemqmessage o
map<string  object> rc   super getfields o
rc put    m getjmscorrelationid
rc put        m getjmsdestination
rc put    m getjmsmessageid
rc put   tostring m getjmsreplyto
rc put    m getjmstype
rc put    m getjmsdeliverymode      deliverymode persistent ?
rc put    long valueof m getjmsexpiration
rc put    integer valueof m getjmspriority
rc put    boolean valueof m getjmsredelivered
rc put    new date m getjmstimestamp
rc put jmsxgroup_id  m getgroupid
rc put jmsxgroup_seq  m getgroupsequence
rc put original_destination  tostring m getoriginaldestination
try
rc put compositedataconstants properties      m getproperties
catch  ioexception e
rc put compositedataconstants properties
try
rc put compositedataconstants string_properties  createtabulardata m  stringpropertytabulartype  string class
catch  ioexception e
rc put compositedataconstants string_properties  new tabulardatasupport stringpropertytabulartype
try
rc put compositedataconstants boolean_properties  createtabulardata m  booleanpropertytabulartype  boolean class
catch  ioexception e
rc put compositedataconstants boolean_properties  new tabulardatasupport booleanpropertytabulartype
try
rc put compositedataconstants byte_properties  createtabulardata m  bytepropertytabulartype  byte class
catch  ioexception e
rc put compositedataconstants byte_properties  new tabulardatasupport bytepropertytabulartype
try
rc put compositedataconstants short_properties  createtabulardata m  shortpropertytabulartype  short class
catch  ioexception e
rc put compositedataconstants short_properties  new tabulardatasupport shortpropertytabulartype
try
rc put compositedataconstants int_properties  createtabulardata m  intpropertytabulartype  integer class
catch  ioexception e
rc put compositedataconstants int_properties  new tabulardatasupport intpropertytabulartype
try
rc put compositedataconstants long_properties  createtabulardata m  longpropertytabulartype  long class
catch  ioexception e
rc put compositedataconstants long_properties  new tabulardatasupport longpropertytabulartype
try
rc put compositedataconstants float_properties  createtabulardata m  floatpropertytabulartype  float class
catch  ioexception e
rc put compositedataconstants float_properties  new tabulardatasupport floatpropertytabulartype
try
rc put compositedataconstants double_properties  createtabulardata m  doublepropertytabulartype  double class
catch  ioexception e
rc put compositedataconstants double_properties  new tabulardatasupport doublepropertytabulartype
return rc
protected string tostring object value
if  value    null
return null
return value tostring
protected <t> tabulartype createtabulartype class<t> type  opentype opentype  throws opendataexception
string typename       type getname
string keyvalue   new string
opentype opentypes   new opentype simpletype string  opentype
compositetype rowtype   new compositetype typename  typename  keyvalue  keyvalue  opentypes
return new tabulartype typename  typename  rowtype  new string
protected tabulardatasupport createtabulardata activemqmessage m  tabulartype type  class valuetype  throws ioexception  opendataexception
tabulardatasupport answer   new tabulardatasupport type
set<map entry<string object>> entries   m getproperties   entryset
for  map entry<string  object> entry   entries
object value   entry getvalue
if  valuetype isinstance value
compositedatasupport compositedata   createtabularrowvalue type  entry getkey    value
answer put compositedata
return answer
protected compositedatasupport createtabularrowvalue tabulartype type  string key  object value  throws opendataexception
map<string object> fields   new hashmap<string  object>
fields put    key
fields put    value
return new compositedatasupport type getrowtype    fields
static class bytemessageopentypefactory extends messageopentypefactory
protected string gettypename
return activemqbytesmessage class getname
protected void init   throws opendataexception
super init
additem body_length     simpletype long
additem body_preview     new arraytype 1  simpletype byte
public map<string  object> getfields object o  throws opendataexception
activemqbytesmessage m    activemqbytesmessage o
map<string  object> rc   super getfields o
long length   0
try
length   m getbodylength
rc put body_length  long valueof length
catch  jmsexception e
rc put body_length  long valueof 0
try
byte preview   new byte
m readbytes preview
// this is whack! java 1.5 jmx spec does not support primitive
// arrays!
// in 1.6 it seems it is supported.. but until then...
byte data   new byte
for  int i   0  i < data length  i
data   new byte preview
rc put body_preview  data
catch  jmsexception e
rc put body_preview  new byte
return rc
static class mapmessageopentypefactory extends messageopentypefactory
protected string gettypename
return activemqmapmessage class getname
protected void init   throws opendataexception
super init
additem content_map     simpletype string
public map<string  object> getfields object o  throws opendataexception
activemqmapmessage m    activemqmapmessage o
map<string  object> rc   super getfields o
try
rc put content_map      m getcontentmap
catch  jmsexception e
rc put content_map
return rc
static class objectmessageopentypefactory extends messageopentypefactory
protected string gettypename
return activemqobjectmessage class getname
protected void init   throws opendataexception
super init
public map<string  object> getfields object o  throws opendataexception
map<string  object> rc   super getfields o
return rc
static class streammessageopentypefactory extends messageopentypefactory
protected string gettypename
return activemqstreammessage class getname
protected void init   throws opendataexception
super init
public map<string  object> getfields object o  throws opendataexception
map<string  object> rc   super getfields o
return rc
static class textmessageopentypefactory extends messageopentypefactory
protected string gettypename
return activemqtextmessage class getname
protected void init   throws opendataexception
super init
additem message_text  message_text  simpletype string
public map<string  object> getfields object o  throws opendataexception
activemqtextmessage m    activemqtextmessage o
map<string  object> rc   super getfields o
try
rc put message_text      m gettext
catch  jmsexception e
rc put message_text
return rc
static
open_type_factories put activemqmessage class  new messageopentypefactory
open_type_factories put activemqbytesmessage class  new bytemessageopentypefactory
open_type_factories put activemqmapmessage class  new mapmessageopentypefactory
open_type_factories put activemqobjectmessage class  new objectmessageopentypefactory
open_type_factories put activemqstreammessage class  new streammessageopentypefactory
open_type_factories put activemqtextmessage class  new textmessageopentypefactory
private opentypesupport
public static opentypefactory getfactory class<? extends message> clazz  throws opendataexception
return open_type_factories get clazz
public static compositedata convert message message  throws opendataexception
opentypefactory f   getfactory message getclass
if  f    null
throw new opendataexception     message getclass   getname
compositetype ct   f getcompositetype
map<string  object> fields   f getfields message
return new compositedatasupport ct  fields