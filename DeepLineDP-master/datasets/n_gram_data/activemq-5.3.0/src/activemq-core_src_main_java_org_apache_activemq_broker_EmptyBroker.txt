/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker
import java net uri
import java util collections
import java util map
import java util set
import org apache activemq broker region destination
import org apache activemq broker region messagereference
import org apache activemq broker region subscription
import org apache activemq command activemqdestination
import org apache activemq command brokerid
import org apache activemq command brokerinfo
import org apache activemq command connectioninfo
import org apache activemq command consumerinfo
import org apache activemq command destinationinfo
import org apache activemq command message
import org apache activemq command messageack
import org apache activemq command messagedispatch
import org apache activemq command messagedispatchnotification
import org apache activemq command messagepull
import org apache activemq command producerinfo
import org apache activemq command removesubscriptioninfo
import org apache activemq command response
import org apache activemq command sessioninfo
import org apache activemq command transactionid
import org apache activemq kaha store
import org apache activemq usage usage
/**
* dumb implementation - used to be overriden by listeners
*
* @version $revision$
*/
public class emptybroker implements broker
public brokerid getbrokerid
return null
public string getbrokername
return null
public broker getadaptor class type
if  type isinstance this
return this
return null
@suppresswarnings
public map<activemqdestination  destination> getdestinationmap
return collections empty_map
public set getdestinations activemqdestination destination
return collections empty_set
public void addconnection connectioncontext context  connectioninfo info  throws exception
public void removeconnection connectioncontext context  connectioninfo info  throwable error  throws exception
public void addsession connectioncontext context  sessioninfo info  throws exception
public void removesession connectioncontext context  sessioninfo info  throws exception
public void addproducer connectioncontext context  producerinfo info  throws exception
public void removeproducer connectioncontext context  producerinfo info  throws exception
public connection getclients   throws exception
return null
public activemqdestination getdestinations   throws exception
return null
public transactionid getpreparedtransactions connectioncontext context  throws exception
return null
public void begintransaction connectioncontext context  transactionid xid  throws exception
public int preparetransaction connectioncontext context  transactionid xid  throws exception
return 0
public void rollbacktransaction connectioncontext context  transactionid xid  throws exception
public void committransaction connectioncontext context  transactionid xid  boolean onephase  throws exception
public void forgettransaction connectioncontext context  transactionid transactionid  throws exception
public destination adddestination connectioncontext context  activemqdestination destination  throws exception
return null
public void removedestination connectioncontext context  activemqdestination destination  long timeout  throws exception
public subscription addconsumer connectioncontext context  consumerinfo info  throws exception
return null
public void removeconsumer connectioncontext context  consumerinfo info  throws exception
public void removesubscription connectioncontext context  removesubscriptioninfo info  throws exception
public void send producerbrokerexchange producerexchange  message message  throws exception
public void acknowledge consumerbrokerexchange consumerexchange  messageack ack  throws exception
public void gc
public void start   throws exception
public void stop   throws exception
public void addbroker connection connection  brokerinfo info
public void removebroker connection connection  brokerinfo info
public brokerinfo getpeerbrokerinfos
return null
public void preprocessdispatch messagedispatch messagedispatch
public void postprocessdispatch messagedispatch messagedispatch
public void processdispatchnotification messagedispatchnotification messagedispatchnotification  throws exception
public boolean isstopped
return false
public set<activemqdestination> getdurabledestinations
return null
public void adddestinationinfo connectioncontext context  destinationinfo info  throws exception
public void removedestinationinfo connectioncontext context  destinationinfo info  throws exception
public boolean isfaulttolerantconfiguration
return false
public connectioncontext getadminconnectioncontext
return null
public void setadminconnectioncontext connectioncontext adminconnectioncontext
public response messagepull connectioncontext context  messagepull pull  throws exception
return null
public store gettempdatastore
return null
public uri getvmconnectoruri
return null
public void brokerservicestarted
public brokerservice getbrokerservice
return null
public boolean isexpired messagereference messagereference
return false
public void messageexpired connectioncontext context  messagereference message
public void sendtodeadletterqueue connectioncontext context  messagereference messagereference
public broker getroot
return null
public long getbrokersequenceid
return  1l
public void fastproducer connectioncontext context producerinfo producerinfo
public void isfull connectioncontext context  destination destination usage usage
public void messageconsumed connectioncontext context messagereference messagereference
public void messagedelivered connectioncontext context messagereference messagereference
public void messagediscarded connectioncontext context messagereference messagereference
public void slowconsumer connectioncontext context destination destination  subscription subs
public void nowmasterbroker