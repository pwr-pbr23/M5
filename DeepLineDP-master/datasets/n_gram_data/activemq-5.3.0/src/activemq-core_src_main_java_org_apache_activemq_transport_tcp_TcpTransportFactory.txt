/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport tcp
import java io ioexception
import java net uri
import java net urisyntaxexception
import java net unknownhostexception
import java util hashmap
import java util map
import javax net serversocketfactory
import javax net socketfactory
import org apache activemq openwire openwireformat
import org apache activemq transport inactivitymonitor
import org apache activemq transport transport
import org apache activemq transport transportfactory
import org apache activemq transport transportloggerfactory
import org apache activemq transport transportserver
import org apache activemq transport wireformatnegotiator
import org apache activemq util ioexceptionsupport
import org apache activemq util introspectionsupport
import org apache activemq util urisupport
import org apache activemq wireformat wireformat
import org apache commons logging log
import org apache commons logging logfactory
/**
* @author david martin clavo david(dot)martin(dot)clavo(at)gmail.com (logging improvement modifications)
* @version $revision$
*/
public class tcptransportfactory extends transportfactory
private static final log log   logfactory getlog tcptransportfactory class
public transportserver dobind final uri location  throws ioexception
try
map<string  string> options   new hashmap<string  string> urisupport parseparamters location
serversocketfactory serversocketfactory   createserversocketfactory
tcptransportserver server   createtcptransportserver location  serversocketfactory
server setwireformatfactory createwireformatfactory options
introspectionsupport setproperties server  options
map<string  object> transportoptions   introspectionsupport extractproperties options
server settransportoption transportoptions
server bind
return server
catch  urisyntaxexception e
throw ioexceptionsupport create e
/**
* allows subclasses of tcptransportfactory to create custom instances of
* tcptransportserver.
*
* @param location
* @param serversocketfactory
* @return
* @throws ioexception
* @throws urisyntaxexception
*/
protected tcptransportserver createtcptransportserver final uri location  serversocketfactory serversocketfactory  throws ioexception  urisyntaxexception
return new tcptransportserver this  location  serversocketfactory
public transport compositeconfigure transport transport  wireformat format  map options
tcptransport tcptransport    tcptransport transport narrow tcptransport class
introspectionsupport setproperties tcptransport  options
map<string  object> socketoptions   introspectionsupport extractproperties options
tcptransport setsocketoptions socketoptions
if  tcptransport istrace
try
transport   transportloggerfactory getinstance   createtransportlogger transport  tcptransport getlogwritername
tcptransport isdynamicmanagement    tcptransport isstartlogging    tcptransport getjmxport
catch  throwable e
log error     tcptransport getlogwritername         e  e
boolean useinactivitymonitor     equals getoption options
if  useinactivitymonitor    isuseinactivitymonitor transport
transport   new inactivitymonitor transport  format
introspectionsupport setproperties transport  options
// only need the wireformatnegotiator if using openwire
if  format instanceof openwireformat
transport   new wireformatnegotiator transport   openwireformat format  tcptransport getminmumwireformatversion
return super compositeconfigure transport  format  options
private string getoption map options  string key  string def
string rc    string  options remove key
if  rc    null
rc   def
return rc
/**
* returns true if the inactivity monitor should be used on the transport
*/
protected boolean isuseinactivitymonitor transport transport
return true
protected transport createtransport uri location  wireformat wf  throws unknownhostexception  ioexception
uri locallocation   null
string path   location getpath
// see if the path is a local uri location
if  path    null    path length   > 0
int localportindex   path indexof
try
integer parseint path substring localportindex   1  path length
string localstring   location getscheme         path
locallocation   new uri localstring
catch  exception e
log warn    e
socketfactory socketfactory   createsocketfactory
return createtcptransport wf  socketfactory  location  locallocation
/**
* allows subclasses of tcptransportfactory to provide a create custom
* tcptransport intances.
*
* @param location
* @param wf
* @param socketfactory
* @param locallocation
* @return
* @throws unknownhostexception
* @throws ioexception
*/
protected tcptransport createtcptransport wireformat wf  socketfactory socketfactory  uri location  uri locallocation  throws unknownhostexception  ioexception
return new tcptransport wf  socketfactory  location  locallocation
protected serversocketfactory createserversocketfactory   throws ioexception
return serversocketfactory getdefault
protected socketfactory createsocketfactory   throws ioexception
return socketfactory getdefault