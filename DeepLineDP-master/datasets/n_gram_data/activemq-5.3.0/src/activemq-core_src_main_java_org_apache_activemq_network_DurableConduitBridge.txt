/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq network
import java io ioexception
import java util iterator
import org apache activemq command activemqdestination
import org apache activemq command consumerid
import org apache activemq command consumerinfo
import org apache activemq filter destinationfilter
import org apache activemq transport transport
import org apache commons logging log
import org apache commons logging logfactory
/**
* consolidates subscriptions
*
* @version $revision: 1.1 $
*/
public class durableconduitbridge extends conduitbridge
private static final log log   logfactory getlog durableconduitbridge class
/**
* constructor
*
* @param configuration
*
* @param localbroker
* @param remotebroker
*/
public durableconduitbridge networkbridgeconfiguration configuration  transport localbroker
transport remotebroker
super configuration  localbroker  remotebroker
/**
* subscriptions for these destinations are always created
*
*/
protected void setupstaticdestinations
super setupstaticdestinations
activemqdestination dests   durabledestinations
if  dests    null
for  int i   0  i < dests length  i
activemqdestination dest   dests
if  ispermissabledestination dest      doesconsumerexist dest
demandsubscription sub   createdemandsubscription dest
if  dest istopic
sub getlocalinfo   setsubscriptionname getsubscribername dest
try
addsubscription sub
catch  ioexception e
log error     dest  e
if  log istraceenabled
log trace     dest
protected demandsubscription createdemandsubscription consumerinfo info  throws ioexception
if  addtoalreadyinterestedconsumers info
return null     don't want this subscription added
//add our original id to ourselves
info addnetworkconsumerid info getconsumerid
if  info isdurable
// set the subscriber name to something reproducible
info setsubscriptionname getsubscribername info getdestination
// and override the consumerid with something unique so that it won't
// be removed if the durable subscriber (at the other end) goes away
info setconsumerid new consumerid localsessioninfo getsessionid    consumeridgenerator
getnextsequenceid
info setselector null
return docreatedemandsubscription info
protected string getsubscribername activemqdestination dest
string subscribername   configuration getbrokername         dest getphysicalname
return subscribername
protected boolean doesconsumerexist activemqdestination dest
destinationfilter filter   destinationfilter parsefilter dest
for  iterator i   subscriptionmapbylocalid values   iterator    i hasnext
demandsubscription ds    demandsubscription i next
if  filter matches ds getlocalinfo   getdestination
return true
return false