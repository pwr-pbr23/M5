/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker region policy
import java util arraylist
import java util collections
import java util iterator
import java util linkedlist
import java util list
import org apache activemq broker connectioncontext
import org apache activemq broker region messagereference
import org apache activemq broker region subscriptionrecovery
import org apache activemq broker region topic
import org apache activemq command activemqdestination
import org apache activemq command message
import org apache activemq filter destinationfilter
import org apache activemq filter messageevaluationcontext
import org apache activemq thread scheduler
/**
* this implementation of {@link subscriptionrecoverypolicy} will keep a timed
* buffer of messages around in memory and use that to recover new
* subscriptions.
*
* @org.apache.xbean.xbean
* @version $revision$
*/
public class timedsubscriptionrecoverypolicy implements subscriptionrecoverypolicy
private static final int gc_interval   1000
protected static final scheduler scheduler   scheduler getinstance
// todo: need to get a better synchronized linked list that has little
// contention between enqueuing and dequeuing
private final list<timestampwrapper> buffer   collections synchronizedlist new linkedlist<timestampwrapper>
private volatile long lastgcrun   system currenttimemillis
private long recoverduration   60   1000     buffer for 1 min
static class timestampwrapper
public messagereference message
public long timestamp
public timestampwrapper messagereference message  long timestamp
this message   message
this timestamp   timestamp
private final runnable gctask   new runnable
public void run
gc
public subscriptionrecoverypolicy copy
timedsubscriptionrecoverypolicy rc   new timedsubscriptionrecoverypolicy
rc setrecoverduration recoverduration
return rc
public boolean add connectioncontext context  messagereference message  throws exception
buffer add new timestampwrapper message  lastgcrun
return true
public void recover connectioncontext context  topic topic  subscriptionrecovery sub  throws exception
// re-dispatch the messages from the buffer.
arraylist<timestampwrapper> copy   new arraylist<timestampwrapper> buffer
if   copy isempty
for  iterator<timestampwrapper> iter   copy iterator    iter hasnext
timestampwrapper timestampwrapper   iter next
messagereference message   timestampwrapper message
sub addrecoveredmessage context  message
public void start   throws exception
scheduler executeperiodically gctask  gc_interval
public void stop   throws exception
scheduler cancel gctask
public void gc
lastgcrun   system currenttimemillis
while  buffer size   > 0
timestampwrapper timestampwrapper   buffer get 0
if  lastgcrun > timestampwrapper timestamp   recoverduration
// gc it.
buffer remove 0
else
break
public long getrecoverduration
return recoverduration
public void setrecoverduration long recoverduration
this recoverduration   recoverduration
public message browse activemqdestination destination  throws exception
list<message> result   new arraylist<message>
arraylist<timestampwrapper> copy   new arraylist<timestampwrapper> buffer
destinationfilter filter   destinationfilter parsefilter destination
for  iterator<timestampwrapper> iter   copy iterator    iter hasnext
timestampwrapper timestampwrapper   iter next
messagereference ref   timestampwrapper message
message message   ref getmessage
if  filter matches message getdestination
result add message
return result toarray new message