/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq kaha impl async
import java io file
import java io ioexception
import java io randomaccessfile
import org apache activemq util iohelper
import org apache activemq util linkednode
/**
* datafile
*
* @version $revision: 1.1.1.1 $
*/
public class datafile extends linkednode implements comparable<datafile>
protected final file file
protected final integer datafileid
protected final int preferedsize
protected int length
protected int referencecount
datafile file file  int number  int preferedsize
this file   file
this preferedsize   preferedsize
this datafileid   integer valueof number
length    int  file exists   ? file length     0
file getfile
return file
public integer getdatafileid
return datafileid
public synchronized int getlength
return length
public void setlength int length
this length   length
public synchronized void incrementlength int size
length    size
public synchronized int increment
return   referencecount
public synchronized int decrement
return   referencecount
public synchronized int getreferencecount
return referencecount
public synchronized boolean isunused
return referencecount <  0
public synchronized string tostring
string result   file getname         datafileid       length       referencecount
return result
public synchronized randomaccessfile openrandomaccessfile boolean appender  throws ioexception
randomaccessfile rc   new randomaccessfile file
// when we start to write files size them up so that the os has a chance
// to allocate the file contigously.
if  appender
if  length < preferedsize
rc setlength preferedsize
return rc
public synchronized void closerandomaccessfile randomaccessfile file  throws ioexception
// on close set the file size to the real size.
if  length    file length
file setlength getlength
file close
public synchronized boolean delete   throws ioexception
return file delete
public synchronized void move file targetdirectory  throws ioexception
iohelper movefile file targetdirectory
public int compareto datafile df
return datafileid   df datafileid
@override
public boolean equals object o
boolean result   false
if  o instanceof datafile
result   compareto  datafile o     0
return result
@override
public int hashcode
return datafileid