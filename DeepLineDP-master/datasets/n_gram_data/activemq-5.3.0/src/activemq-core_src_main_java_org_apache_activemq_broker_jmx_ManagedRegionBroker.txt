/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker jmx
import org apache activemq broker broker
import org apache activemq broker brokerservice
import org apache activemq broker connectioncontext
import org apache activemq broker jmx opentypesupport opentypefactory
import org apache activemq broker region destination
import org apache activemq broker region destinationfactory
import org apache activemq broker region destinationfactoryimpl
import org apache activemq broker region destinationinterceptor
import org apache activemq broker region queue
import org apache activemq broker region region
import org apache activemq broker region regionbroker
import org apache activemq broker region subscription
import org apache activemq broker region topic
import org apache activemq broker region topicsubscription
import org apache activemq command activemqdestination
import org apache activemq command activemqmessage
import org apache activemq command activemqtopic
import org apache activemq command consumerinfo
import org apache activemq command message
import org apache activemq command messageid
import org apache activemq command subscriptioninfo
import org apache activemq store messagerecoverylistener
import org apache activemq store persistenceadapter
import org apache activemq store topicmessagestore
import org apache activemq thread taskrunnerfactory
import org apache activemq usage systemusage
import org apache activemq util jmxsupport
import org apache activemq util servicestopper
import org apache activemq util subscriptionkey
import org apache commons logging log
import org apache commons logging logfactory
import java io ioexception
import java util arraylist
import java util hashmap
import java util hashtable
import java util iterator
import java util list
import java util map
import java util set
import java util map entry
import java util concurrent concurrenthashmap
import java util concurrent copyonwritearrayset
import javax management instancenotfoundexception
import javax management malformedobjectnameexception
import javax management objectname
import javax management openmbean compositedata
import javax management openmbean compositedatasupport
import javax management openmbean compositetype
import javax management openmbean opendataexception
import javax management openmbean tabulardata
import javax management openmbean tabulardatasupport
import javax management openmbean tabulartype
public class managedregionbroker extends regionbroker
private static final log log   logfactory getlog managedregionbroker class
private final managementcontext managementcontext
private final objectname brokerobjectname
private final map<objectname  destinationview> topics   new concurrenthashmap<objectname  destinationview>
private final map<objectname  destinationview> queues   new concurrenthashmap<objectname  destinationview>
private final map<objectname  destinationview> temporaryqueues   new concurrenthashmap<objectname  destinationview>
private final map<objectname  destinationview> temporarytopics   new concurrenthashmap<objectname  destinationview>
private final map<objectname  subscriptionview> queuesubscribers   new concurrenthashmap<objectname  subscriptionview>
private final map<objectname  subscriptionview> topicsubscribers   new concurrenthashmap<objectname  subscriptionview>
private final map<objectname  subscriptionview> durabletopicsubscribers   new concurrenthashmap<objectname  subscriptionview>
private final map<objectname  subscriptionview> inactivedurabletopicsubscribers   new concurrenthashmap<objectname  subscriptionview>
private final map<objectname  subscriptionview> temporaryqueuesubscribers   new concurrenthashmap<objectname  subscriptionview>
private final map<objectname  subscriptionview> temporarytopicsubscribers   new concurrenthashmap<objectname  subscriptionview>
private final map<subscriptionkey  objectname> subscriptionkeys   new concurrenthashmap<subscriptionkey  objectname>
private final map<subscription  objectname> subscriptionmap   new concurrenthashmap<subscription  objectname>
private final set<objectname> registeredmbeans   new copyonwritearrayset<objectname>
/* this is the first broker in the broker interceptor chain. */
private broker contextbroker
public managedregionbroker brokerservice brokerservice  managementcontext context  objectname brokerobjectname  taskrunnerfactory taskrunnerfactory  systemusage memorymanager
destinationfactory destinationfactory  destinationinterceptor destinationinterceptor  throws ioexception
super brokerservice  taskrunnerfactory  memorymanager  destinationfactory  destinationinterceptor
this managementcontext   context
this brokerobjectname   brokerobjectname
public void start   throws exception
super start
// build all existing durable subscriptions
buildexistingsubscriptions
protected void dostop servicestopper stopper
super dostop stopper
// lets remove any mbeans not yet removed
for  iterator<objectname> iter   registeredmbeans iterator    iter hasnext
objectname name   iter next
try
managementcontext unregistermbean name
catch  instancenotfoundexception e
log warn     name
catch  exception e
stopper onexception this  e
registeredmbeans clear
protected region createqueueregion systemusage memorymanager  taskrunnerfactory taskrunnerfactory  destinationfactory destinationfactory
return new managedqueueregion this  destinationstatistics  memorymanager  taskrunnerfactory  destinationfactory
protected region createtempqueueregion systemusage memorymanager  taskrunnerfactory taskrunnerfactory  destinationfactory destinationfactory
return new managedtempqueueregion this  brokerservice  destinationstatistics  memorymanager  taskrunnerfactory  destinationfactory
protected region createtemptopicregion systemusage memorymanager  taskrunnerfactory taskrunnerfactory  destinationfactory destinationfactory
return new managedtemptopicregion this  destinationstatistics  memorymanager  taskrunnerfactory  destinationfactory
protected region createtopicregion systemusage memorymanager  taskrunnerfactory taskrunnerfactory  destinationfactory destinationfactory
return new managedtopicregion this  destinationstatistics  memorymanager  taskrunnerfactory  destinationfactory
public void register activemqdestination destname  destination destination
// todo refactor to allow views for custom destinations
try
objectname objectname   createobjectname destname
destinationview view
if  destination instanceof queue
view   new queueview this   queue destination
else if  destination instanceof topic
view   new topicview this   topic destination
else
view   null
log warn     destination
if  view    null
registerdestination objectname  destname  view
catch  exception e
log error     destname  e
public void unregister activemqdestination destname
try
objectname objectname   createobjectname destname
unregisterdestination objectname
catch  exception e
log error     destname  e
public objectname registersubscription connectioncontext context  subscription sub
string connectionclientid   context getclientid
objectname brokerjmxobjectname   brokerobjectname
string objectnamestr   getsubscriptionobjectname sub  connectionclientid  brokerjmxobjectname
subscriptionkey key   new subscriptionkey context getclientid    sub getconsumerinfo   getsubscriptionname
try
objectname objectname   new objectname objectnamestr
subscriptionview view
if  sub getconsumerinfo   isdurable
view   new durablesubscriptionview this  context getclientid    sub
else
if  sub instanceof topicsubscription
view   new topicsubscriptionview context getclientid     topicsubscription sub
else
view   new subscriptionview context getclientid    sub
registersubscription objectname  sub getconsumerinfo    key  view
subscriptionmap put sub  objectname
return objectname
catch  exception e
log error     sub  e
return null
public static string getsubscriptionobjectname subscription sub  string connectionclientid  objectname brokerjmxobjectname
hashtable map   brokerjmxobjectname getkeypropertylist
string brokerdomain   brokerjmxobjectname getdomain
string objectnamestr   brokerdomain           map get
string destinationtype       sub getconsumerinfo   getdestination   getdestinationtypeasstring
string destinationname       jmxsupport encodeobjectnamepart sub getconsumerinfo   getdestination   getphysicalname
string clientid       jmxsupport encodeobjectnamepart connectionclientid
string persistentmode
string consumerid
if  sub getconsumerinfo   isdurable
persistentmode        jmxsupport encodeobjectnamepart sub getconsumerinfo   getsubscriptionname
else
persistentmode
if  sub getconsumerinfo      null    sub getconsumerinfo   getconsumerid      null
consumerid       jmxsupport encodeobjectnamepart sub getconsumerinfo   getconsumerid   tostring
objectnamestr    persistentmode
objectnamestr    destinationtype
objectnamestr    destinationname
objectnamestr    clientid
objectnamestr    consumerid
return objectnamestr
public void unregistersubscription subscription sub
objectname name   subscriptionmap remove sub
if  name    null
try
unregistersubscription name
catch  exception e
log error     sub  e
protected void registerdestination objectname key  activemqdestination dest  destinationview view  throws exception
if  dest isqueue
if  dest istemporary
temporaryqueues put key  view
else
queues put key  view
else
if  dest istemporary
temporarytopics put key  view
else
topics put key  view
try
annotatedmbean registermbean managementcontext  view  key
registeredmbeans add key
catch  throwable e
log warn     key
log debug     e  e
protected void unregisterdestination objectname key  throws exception
topics remove key
queues remove key
temporaryqueues remove key
temporarytopics remove key
if  registeredmbeans remove key
try
managementcontext unregistermbean key
catch  throwable e
log warn     key
log debug     e  e
protected void registersubscription objectname key  consumerinfo info  subscriptionkey subscriptionkey  subscriptionview view  throws exception
activemqdestination dest   info getdestination
if  dest isqueue
if  dest istemporary
temporaryqueuesubscribers put key  view
else
queuesubscribers put key  view
else
if  dest istemporary
temporarytopicsubscribers put key  view
else
if  info isdurable
durabletopicsubscribers put key  view
// unregister any inactive durable subs
try
objectname inactivename   subscriptionkeys get subscriptionkey
if  inactivename    null
inactivedurabletopicsubscribers remove inactivename
registeredmbeans remove inactivename
managementcontext unregistermbean inactivename
catch  throwable e
log error     subscriptionkey  e
else
topicsubscribers put key  view
try
annotatedmbean registermbean managementcontext  view  key
registeredmbeans add key
catch  throwable e
log warn     key
log debug     e  e
protected void unregistersubscription objectname key  throws exception
queuesubscribers remove key
topicsubscribers remove key
inactivedurabletopicsubscribers remove key
temporaryqueuesubscribers remove key
temporarytopicsubscribers remove key
if  registeredmbeans remove key
try
managementcontext unregistermbean key
catch  throwable e
log warn     key
log debug     e  e
durablesubscriptionview view    durablesubscriptionview durabletopicsubscribers remove key
if  view    null
// need to put this back in the inactive list
subscriptionkey subscriptionkey   new subscriptionkey view getclientid    view getsubscriptionname
subscriptioninfo info   new subscriptioninfo
info setclientid subscriptionkey getclientid
info setsubscriptionname subscriptionkey getsubscriptionname
info setdestination new activemqtopic view getdestinationname
addinactivesubscription subscriptionkey  info
protected void buildexistingsubscriptions   throws exception
map<subscriptionkey  subscriptioninfo> subscriptions   new hashmap<subscriptionkey  subscriptioninfo>
set destinations   destinationfactory getdestinations
if  destinations    null
for  iterator iter   destinations iterator    iter hasnext
activemqdestination dest    activemqdestination iter next
if  dest istopic
subscriptioninfo infos   destinationfactory getalldurablesubscriptions  activemqtopic dest
if  infos    null
for  int i   0  i < infos length  i
subscriptioninfo info   infos
log debug     info
subscriptionkey key   new subscriptionkey info
subscriptions put key  info
for  iterator i   subscriptions entryset   iterator    i hasnext
map entry entry    entry i next
subscriptionkey key    subscriptionkey entry getkey
subscriptioninfo info    subscriptioninfo entry getvalue
addinactivesubscription key  info
protected void addinactivesubscription subscriptionkey key  subscriptioninfo info
hashtable map   brokerobjectname getkeypropertylist
try
objectname objectname   new objectname brokerobjectname getdomain             map get
jmxsupport encodeobjectnamepart key tostring
subscriptionview view   new inactivedurablesubscriptionview this  key getclientid    info
try
annotatedmbean registermbean managementcontext  view  objectname
registeredmbeans add objectname
catch  throwable e
log warn     key
log debug     e  e
inactivedurabletopicsubscribers put objectname  view
subscriptionkeys put key  objectname
catch  exception e
log error     info  e
public compositedata browse subscriptionview view  throws opendataexception
list<message> messages   getsubscribermessages view
compositedata c   new compositedata
for  int i   0  i < c length  i
try
c   opentypesupport convert messages get i
catch  throwable e
log error     view  e
return c
public tabulardata browseastable subscriptionview view  throws opendataexception
opentypefactory factory   opentypesupport getfactory activemqmessage class
list<message> messages   getsubscribermessages view
compositetype ct   factory getcompositetype
tabulartype tt   new tabulartype       ct  new string
tabulardatasupport rc   new tabulardatasupport tt
for  int i   0  i < messages size    i
rc put new compositedatasupport ct  factory getfields messages get i
return rc
protected list<message> getsubscribermessages subscriptionview view
// todo it is very dangerous operation for big backlogs
if    destinationfactory instanceof destinationfactoryimpl
throw new runtimeexception     destinationfactory
persistenceadapter adapter     destinationfactoryimpl destinationfactory  getpersistenceadapter
final list<message> result   new arraylist<message>
try
activemqtopic topic   new activemqtopic view getdestinationname
topicmessagestore store   adapter createtopicmessagestore topic
store recover new messagerecoverylistener
public boolean recovermessage message message  throws exception
result add message
return true
public boolean recovermessagereference messageid messagereference  throws exception
throw new runtimeexception
public boolean hasspace
return true
public boolean isduplicate messageid id
return false
catch  throwable e
log error     view  e
return result
protected objectname gettopics
set<objectname> set   topics keyset
return set toarray new objectname
protected objectname getqueues
set<objectname> set   queues keyset
return set toarray new objectname
protected objectname gettemporarytopics
set<objectname> set   temporarytopics keyset
return set toarray new objectname
protected objectname gettemporaryqueues
set<objectname> set   temporaryqueues keyset
return set toarray new objectname
protected objectname gettopicsubscribers
set<objectname> set   topicsubscribers keyset
return set toarray new objectname
protected objectname getdurabletopicsubscribers
set<objectname> set   durabletopicsubscribers keyset
return set toarray new objectname
protected objectname getqueuesubscribers
set<objectname> set   queuesubscribers keyset
return set toarray new objectname
protected objectname gettemporarytopicsubscribers
set<objectname> set   temporarytopicsubscribers keyset
return set toarray new objectname
protected objectname gettemporaryqueuesubscribers
set<objectname> set   temporaryqueuesubscribers keyset
return set toarray new objectname
protected objectname getinactivedurabletopicsubscribers
set<objectname> set   inactivedurabletopicsubscribers keyset
return set toarray new objectname
public broker getcontextbroker
return contextbroker
public void setcontextbroker broker contextbroker
this contextbroker   contextbroker
protected objectname createobjectname activemqdestination destname  throws malformedobjectnameexception
// build the object name for the destination
hashtable map   brokerobjectname getkeypropertylist
objectname objectname   new objectname brokerobjectname getdomain             map get
jmxsupport encodeobjectnamepart destname getdestinationtypeasstring
jmxsupport encodeobjectnamepart destname getphysicalname
return objectname