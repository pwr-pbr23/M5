/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 io
import java io datainput
import java io dataoutput
import java io ioexception
import java sql date
import java util calendar
import java util timezone
import java util concurrent timeunit
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive serde2 bytestream output
import org apache hadoop hive serde2 lazybinary lazybinaryutils
import org apache hadoop hive serde2 lazybinary lazybinaryutils vint
import org apache hadoop io writablecomparable
import org apache hadoop io writableutils
/**
* datewritable
* writable equivalent of java.sql.date.
*
* dates are of the format
*    yyyy-mm-dd
*
*/
public class datewritable implements writablecomparable<datewritable>
private static final log log   logfactory getlog datewritable class
private static final long millis_per_day   timeunit days tomillis 1
// local time zone.
// java timezone has no mention of thread safety. use thread local instance to be safe.
private static final threadlocal<timezone> local_timezone   new threadlocal<timezone>
@override
protected timezone initialvalue
return calendar getinstance   gettimezone
// internal representation is an integer representing day offset from our epoch value 1970-01-01
private int dayssinceepoch   0
/* constructors */
public datewritable
public datewritable datewritable d
set d
public datewritable date d
set d
public datewritable int d
set d
/**
* set the datewritable based on the days since epoch date.
* @param d integer value representing days since epoch date
*/
public void set int d
dayssinceepoch   d
/**
* set the datewritable based on the year/month/day of the date in the local timezone.
* @param d date value
*/
public void set date d
if  d    null
dayssinceepoch   0
return
set datetodays d
public void set datewritable d
set d dayssinceepoch
/**
*
* @return date value corresponding to the date in the local time zone
*/
public date get
return new date daystomillis dayssinceepoch
public int getdays
return dayssinceepoch
/**
*
* @return time in seconds corresponding to this datewritable
*/
public long gettimeinseconds
return get   gettime     1000
public static date timetodate long l
return new date l   1000
public static long daystomillis int d
// convert from day offset to ms in utc, then apply local timezone offset.
long millisutc   d   millis_per_day
return millisutc   local_timezone get   getoffset millisutc
public static int datetodays date d
// convert to equivalent time in utc, then get day offset
long millislocal   d gettime
long millisutc   millislocal   local_timezone get   getoffset millislocal
return  int  millisutc   millis_per_day
public void setfrombytes byte bytes  int offset  int length  vint vint
lazybinaryutils readvint bytes  offset  vint
assert  length    vint length
set vint value
public void writetobytestream output bytestream
lazybinaryutils writevint bytestream  getdays
@override
public void readfields datainput in  throws ioexception
dayssinceepoch   writableutils readvint in
@override
public void write dataoutput out  throws ioexception
writableutils writevint out  dayssinceepoch
@override
public int compareto datewritable d
return dayssinceepoch   d dayssinceepoch
@override
public boolean equals object o
if    o instanceof datewritable
return false
return compareto  datewritable  o     0
@override
public string tostring
return get   tostring
@override
public int hashcode
return dayssinceepoch