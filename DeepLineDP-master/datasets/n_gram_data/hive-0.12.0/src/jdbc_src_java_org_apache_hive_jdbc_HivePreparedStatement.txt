/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hive jdbc
import java io inputstream
import java io reader
import java math bigdecimal
import java net url
import java sql array
import java sql blob
import java sql clob
import java sql date
import java sql nclob
import java sql parametermetadata
import java sql preparedstatement
import java sql ref
import java sql resultset
import java sql resultsetmetadata
import java sql rowid
import java sql sqlexception
import java sql sqlxml
import java sql time
import java sql timestamp
import java util calendar
import java util hashmap
import org apache hive service cli thrift tcliservice
import org apache hive service cli thrift tsessionhandle
/**
* hivepreparedstatement.
*
*/
public class hivepreparedstatement extends hivestatement implements preparedstatement
private final string sql
/**
* save the sql parameters {paramloc:paramvalue}
*/
private final hashmap<integer  string> parameters new hashmap<integer  string>
public hivepreparedstatement tcliservice iface client  tsessionhandle sesshandle
string sql
super client  sesshandle
this sql   sql
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#addbatch()
*/
public void addbatch   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#clearparameters()
*/
public void clearparameters   throws sqlexception
this parameters clear
/**
*  invokes executequery(sql) using the sql provided to the constructor.
*
*  @return boolean returns true if a resultset is created, false if not.
*                  note: if the result set is empty a true is returned.
*
*  @throws sqlexception
*/
public boolean execute   throws sqlexception
return super execute updatesql sql  parameters
/**
*  invokes executequery(sql) using the sql provided to the constructor.
*
*  @return resultset
*  @throws sqlexception
*/
public resultset executequery   throws sqlexception
return super executequery updatesql sql  parameters
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#executeupdate()
*/
public int executeupdate   throws sqlexception
super executeupdate updatesql sql  parameters
return 0
/**
* update the sql string with parameters set by setxxx methods of {@link preparedstatement}
*
* @param sql
* @param parameters
* @return updated sql string
*/
private string updatesql final string sql  hashmap<integer  string> parameters
if   sql contains
return sql
stringbuffer newsql   new stringbuffer sql
int paramloc   1
while  getcharindexfromsqlbyparamlocation sql     paramloc  > 0
// check the user has set the needs parameters
if  parameters containskey paramloc
int tt   getcharindexfromsqlbyparamlocation newsql tostring       1
newsql deletecharat tt
newsql insert tt  parameters get paramloc
paramloc
return newsql tostring
/**
* get the index of given char from the sql string by parameter location
* </br> the -1 will be return, if nothing found
*
* @param sql
* @param cchar
* @param paramloc
* @return
*/
private int getcharindexfromsqlbyparamlocation final string sql  final char cchar  final int paramloc
int signalcount   0
int charindex    1
int num   0
for  int i   0  i < sql length    i
char c   sql charat i
if  c         c         record the count of char   and char
signalcount
else if  c    cchar    signalcount % 2    0      check if the ? is really the parameter
num
if  num    paramloc
charindex   i
break
return charindex
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#getmetadata()
*/
public resultsetmetadata getmetadata   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#getparametermetadata()
*/
public parametermetadata getparametermetadata   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setarray(int, java.sql.array)
*/
public void setarray int i  array x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setasciistream(int, java.io.inputstream)
*/
public void setasciistream int parameterindex  inputstream x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setasciistream(int, java.io.inputstream,
* int)
*/
public void setasciistream int parameterindex  inputstream x  int length  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setasciistream(int, java.io.inputstream,
* long)
*/
public void setasciistream int parameterindex  inputstream x  long length  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setbigdecimal(int, java.math.bigdecimal)
*/
public void setbigdecimal int parameterindex  bigdecimal x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setbinarystream(int, java.io.inputstream)
*/
public void setbinarystream int parameterindex  inputstream x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setbinarystream(int, java.io.inputstream,
* int)
*/
public void setbinarystream int parameterindex  inputstream x  int length  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setbinarystream(int, java.io.inputstream,
* long)
*/
public void setbinarystream int parameterindex  inputstream x  long length  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setblob(int, java.sql.blob)
*/
public void setblob int i  blob x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setblob(int, java.io.inputstream)
*/
public void setblob int parameterindex  inputstream inputstream  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setblob(int, java.io.inputstream, long)
*/
public void setblob int parameterindex  inputstream inputstream  long length
throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setboolean(int, boolean)
*/
public void setboolean int parameterindex  boolean x  throws sqlexception
this parameters put parameterindex    x
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setbyte(int, byte)
*/
public void setbyte int parameterindex  byte x  throws sqlexception
this parameters put parameterindex    x
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setbytes(int, byte[])
*/
public void setbytes int parameterindex  byte x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setcharacterstream(int, java.io.reader)
*/
public void setcharacterstream int parameterindex  reader reader  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setcharacterstream(int, java.io.reader,
* int)
*/
public void setcharacterstream int parameterindex  reader reader  int length
throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setcharacterstream(int, java.io.reader,
* long)
*/
public void setcharacterstream int parameterindex  reader reader  long length
throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setclob(int, java.sql.clob)
*/
public void setclob int i  clob x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setclob(int, java.io.reader)
*/
public void setclob int parameterindex  reader reader  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setclob(int, java.io.reader, long)
*/
public void setclob int parameterindex  reader reader  long length  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setdate(int, java.sql.date)
*/
public void setdate int parameterindex  date x  throws sqlexception
this parameters put parameterindex  x tostring
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setdate(int, java.sql.date,
* java.util.calendar)
*/
public void setdate int parameterindex  date x  calendar cal  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setdouble(int, double)
*/
public void setdouble int parameterindex  double x  throws sqlexception
this parameters put parameterindex   x
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setfloat(int, float)
*/
public void setfloat int parameterindex  float x  throws sqlexception
this parameters put parameterindex   x
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setint(int, int)
*/
public void setint int parameterindex  int x  throws sqlexception
this parameters put parameterindex   x
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setlong(int, long)
*/
public void setlong int parameterindex  long x  throws sqlexception
this parameters put parameterindex   x
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setncharacterstream(int, java.io.reader)
*/
public void setncharacterstream int parameterindex  reader value  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setncharacterstream(int, java.io.reader,
* long)
*/
public void setncharacterstream int parameterindex  reader value  long length
throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setnclob(int, java.sql.nclob)
*/
public void setnclob int parameterindex  nclob value  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setnclob(int, java.io.reader)
*/
public void setnclob int parameterindex  reader reader  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setnclob(int, java.io.reader, long)
*/
public void setnclob int parameterindex  reader reader  long length  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setnstring(int, java.lang.string)
*/
public void setnstring int parameterindex  string value  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setnull(int, int)
*/
public void setnull int parameterindex  int sqltype  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setnull(int, int, java.lang.string)
*/
public void setnull int paramindex  int sqltype  string typename  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setobject(int, java.lang.object)
*/
public void setobject int parameterindex  object x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setobject(int, java.lang.object, int)
*/
public void setobject int parameterindex  object x  int targetsqltype
throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setobject(int, java.lang.object, int, int)
*/
public void setobject int parameterindex  object x  int targetsqltype  int scale
throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setref(int, java.sql.ref)
*/
public void setref int i  ref x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setrowid(int, java.sql.rowid)
*/
public void setrowid int parameterindex  rowid x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setsqlxml(int, java.sql.sqlxml)
*/
public void setsqlxml int parameterindex  sqlxml xmlobject  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setshort(int, short)
*/
public void setshort int parameterindex  short x  throws sqlexception
this parameters put parameterindex   x
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setstring(int, java.lang.string)
*/
public void setstring int parameterindex  string x  throws sqlexception
x x replace
this parameters put parameterindex   x
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#settime(int, java.sql.time)
*/
public void settime int parameterindex  time x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#settime(int, java.sql.time,
* java.util.calendar)
*/
public void settime int parameterindex  time x  calendar cal  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#settimestamp(int, java.sql.timestamp)
*/
public void settimestamp int parameterindex  timestamp x  throws sqlexception
this parameters put parameterindex  x tostring
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#settimestamp(int, java.sql.timestamp,
* java.util.calendar)
*/
public void settimestamp int parameterindex  timestamp x  calendar cal
throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#seturl(int, java.net.url)
*/
public void seturl int parameterindex  url x  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.preparedstatement#setunicodestream(int, java.io.inputstream,
* int)
*/
public void setunicodestream int parameterindex  inputstream x  int length
throws sqlexception
// todo auto-generated method stub
throw new sqlexception