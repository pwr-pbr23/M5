/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hive jdbc
import static org apache hive service cli thrift tcliserviceconstants type_names
import java sql resultsetmetadata
import java sql sqlexception
import java util arraylist
import java util iterator
import java util list
import org apache commons logging log
import org apache commons logging logfactory
import org apache hive service cli tableschema
import org apache hive service cli thrift tcliservice
import org apache hive service cli thrift tcliserviceconstants
import org apache hive service cli thrift tcolumndesc
import org apache hive service cli thrift tfetchorientation
import org apache hive service cli thrift tfetchresultsreq
import org apache hive service cli thrift tfetchresultsresp
import org apache hive service cli thrift tgetresultsetmetadatareq
import org apache hive service cli thrift tgetresultsetmetadataresp
import org apache hive service cli thrift toperationhandle
import org apache hive service cli thrift tprimitivetypeentry
import org apache hive service cli thrift trow
import org apache hive service cli thrift tsessionhandle
import org apache hive service cli thrift ttableschema
import org apache hive service cli thrift ttypequalifiervalue
import org apache hive service cli thrift ttypequalifiers
/**
* hivequeryresultset.
*
*/
public class hivequeryresultset extends hivebaseresultset
public static final log log   logfactory getlog hivequeryresultset class
private tcliservice iface client
private toperationhandle stmthandle
private hivestatement hivestatement
private tsessionhandle sesshandle
private int maxrows
private int fetchsize
private int rowsfetched   0
private list<trow> fetchedrows
private iterator<trow> fetchedrowsitr
private boolean isclosed   false
private boolean emptyresultset   false
public static class builder
private tcliservice iface client   null
private toperationhandle stmthandle   null
private tsessionhandle sesshandle    null
private hivestatement hivestatement   null
/**
* sets the limit for the maximum number of rows that any resultset object produced by this
* statement can contain to the given number. if the limit is exceeded, the excess rows
* are silently dropped. the value must be >= 0, and 0 means there is not limit.
*/
private int maxrows   0
private boolean retrieveschema   true
private list<string> colnames
private list<string> coltypes
private list<jdbccolumnattributes> colattributes
private int fetchsize   50
private boolean emptyresultset   false
public builder setclient tcliservice iface client
this client   client
return this
public builder setstmthandle toperationhandle stmthandle
this stmthandle   stmthandle
return this
public builder setsessionhandle tsessionhandle sesshandle
this sesshandle   sesshandle
return this
public builder sethivestatement hivestatement hivestatement
this hivestatement   hivestatement
return this
public builder setmaxrows int maxrows
this maxrows   maxrows
return this
public builder setschema list<string> colnames  list<string> coltypes
// no column attributes provided - create list of null attributes.
list<jdbccolumnattributes> colattributes
new arraylist<jdbccolumnattributes>
for  int idx   0  idx < coltypes size      idx
colattributes add null
return setschema colnames  coltypes  colattributes
public builder setschema list<string> colnames  list<string> coltypes
list<jdbccolumnattributes> colattributes
this colnames   new arraylist<string>
this colnames addall colnames
this coltypes   new arraylist<string>
this coltypes addall coltypes
this colattributes   new arraylist<jdbccolumnattributes>
this colattributes addall colattributes
this retrieveschema   false
return this
public builder setfetchsize int fetchsize
this fetchsize   fetchsize
return this
public builder setemptyresultset boolean emptyresultset
this emptyresultset   emptyresultset
return this
public hivequeryresultset build   throws sqlexception
return new hivequeryresultset this
protected hivequeryresultset builder builder  throws sqlexception
this client   builder client
this stmthandle   builder stmthandle
this sesshandle   builder sesshandle
this fetchsize   builder fetchsize
this hivestatement   builder hivestatement
columnnames   new arraylist<string>
columntypes   new arraylist<string>
columnattributes   new arraylist<jdbccolumnattributes>
if  builder retrieveschema
retrieveschema
else
this setschema builder colnames  builder coltypes  builder colattributes
this emptyresultset   builder emptyresultset
if  builder emptyresultset
this maxrows   0
else
this maxrows   builder maxrows
/**
* generate columnattributes object from a ttypequalifiers
* @param primitivetypeentry primitive type
* @return generated columnattributes, or null
*/
private static jdbccolumnattributes getcolumnattributes
tprimitivetypeentry primitivetypeentry
jdbccolumnattributes ret   null
if  primitivetypeentry issettypequalifiers
ttypequalifiers tq   primitivetypeentry gettypequalifiers
switch  primitivetypeentry gettype
case varchar_type
ttypequalifiervalue val
tq getqualifiers   get tcliserviceconstants character_maximum_length
if  val    null
// precision is char length
ret   new jdbccolumnattributes val geti32value    0
break
default
break
return ret
/**
* retrieve schema from the server
*/
private void retrieveschema   throws sqlexception
try
tgetresultsetmetadatareq metadatareq   new tgetresultsetmetadatareq stmthandle
// todo need session handle
tgetresultsetmetadataresp  metadataresp   client getresultsetmetadata metadatareq
utils verifysuccess metadataresp getstatus
stringbuilder namessb   new stringbuilder
stringbuilder typessb   new stringbuilder
ttableschema schema   metadataresp getschema
if  schema    null     schema issetcolumns
// todo: should probably throw an exception here.
return
setschema new tableschema schema
list<tcolumndesc> columns   schema getcolumns
for  int pos   0  pos < schema getcolumnssize    pos
if  pos    0
namessb append
typessb append
string columnname   columns get pos  getcolumnname
columnnames add columnname
tprimitivetypeentry primitivetypeentry
columns get pos  gettypedesc   gettypes   get 0  getprimitiveentry
string columntypename   type_names get primitivetypeentry gettype
columntypes add columntypename
columnattributes add getcolumnattributes primitivetypeentry
catch  sqlexception es
throw es     rethrow the sqlexception as is
catch  exception ex
ex printstacktrace
throw new sqlexception     ex getmessage    ex
/**
* set the specified schema to the resultset
* @param colnames
* @param coltypes
*/
private void setschema list<string> colnames  list<string> coltypes
list<jdbccolumnattributes> colattributes
columnnames addall colnames
columntypes addall coltypes
columnattributes addall colattributes
@override
public void close   throws sqlexception
if  hivestatement    null
hivestatement closeclientoperation
// need reset during re-open when needed
client   null
stmthandle   null
hivestatement   null
sesshandle   null
isclosed   true
/**
* moves the cursor down one row from its current position.
*
* @see java.sql.resultset#next()
* @throws sqlexception
*           if a database access error occurs.
*/
public boolean next   throws sqlexception
if  isclosed
throw new sqlexception
if  emptyresultset     maxrows > 0    rowsfetched >  maxrows
return false
try
if  fetchedrows    null     fetchedrowsitr hasnext
tfetchresultsreq fetchreq   new tfetchresultsreq stmthandle
tfetchorientation fetch_next  fetchsize
tfetchresultsresp fetchresp   client fetchresults fetchreq
utils verifysuccesswithinfo fetchresp getstatus
fetchedrows   fetchresp getresults   getrows
fetchedrowsitr   fetchedrows iterator
string rowstr
if  fetchedrowsitr hasnext
row   fetchedrowsitr next
else
return false
rowsfetched
if  log isdebugenabled
log debug     rowstr
catch  sqlexception es
throw es
catch  exception ex
ex printstacktrace
throw new sqlexception    ex
// note: fetchone dosn't throw new sqlexception("method not supported").
return true
@override
public resultsetmetadata getmetadata   throws sqlexception
if  isclosed
throw new sqlexception
return super getmetadata
@override
public void setfetchsize int rows  throws sqlexception
if  isclosed
throw new sqlexception
fetchsize   rows
@override
public int getfetchsize   throws sqlexception
if  isclosed
throw new sqlexception
return fetchsize
public <t> t getobject string columnlabel  class<t> type   throws sqlexception
//jdk 1.7
throw new sqlexception
public <t> t getobject int columnindex  class<t> type   throws sqlexception
//jdk 1.7
throw new sqlexception