/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing,
* software distributed under the license is distributed on an
* "as is" basis, without warranties or conditions of any
* kind, either express or implied.  see the license for the
* specific language governing permissions and limitations
* under the license.
*/
package org apache hcatalog cli semanticanalysis
import java io ioexception
import java io serializable
import java util hashmap
import java util list
import java util map
import org apache commons lang stringutils
import org apache hadoop fs path
import org apache hadoop hive conf hiveconf
import org apache hadoop hive metastore api fieldschema
import org apache hadoop hive ql exec ddltask
import org apache hadoop hive ql exec task
import org apache hadoop hive ql io rcfileinputformat
import org apache hadoop hive ql io rcfileoutputformat
import org apache hadoop hive ql metadata hive
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql metadata table
import org apache hadoop hive ql parse astnode
import org apache hadoop hive ql parse basesemanticanalyzer
import org apache hadoop hive ql parse hiveparser
import org apache hadoop hive ql parse hivesemanticanalyzerhookcontext
import org apache hadoop hive ql parse semanticexception
import org apache hadoop hive ql plan createtabledesc
import org apache hadoop hive ql security authorization privilege
import org apache hcatalog common hcatconstants
import org apache hcatalog common hcatutil
import org apache hcatalog mapreduce hcatstoragehandler
/**
* @deprecated use/modify {@link org.apache.hive.hcatalog.cli.semanticanalysis.createtablehook} instead
*/
final class createtablehook extends hcatsemanticanalyzerbase
private string tablename
@override
public astnode preanalyze hivesemanticanalyzerhookcontext context
astnode ast  throws semanticexception
hive db
try
db   context gethive
catch  hiveexception e
throw new semanticexception
e
// analyze and create tbl properties object
int numch   ast getchildcount
string inputformat   null  outputformat   null
tablename   basesemanticanalyzer getunescapedname  astnode  ast
getchild 0
boolean liketable   false
for  int num   1  num < numch  num
astnode child    astnode  ast getchild num
switch  child gettoken   gettype
case hiveparser tok_query     ctas
throw new semanticexception
case hiveparser tok_tablebuckets
break
case hiveparser tok_tblsequencefile
inputformat   hcatconstants sequencefile_input
outputformat   hcatconstants sequencefile_output
break
case hiveparser tok_tbltextfile
inputformat   org apache hadoop mapred textinputformat class getname
outputformat   org apache hadoop hive ql io ignorekeytextoutputformat class getname
break
case hiveparser tok_liketable
liketable   true
break
case hiveparser tok_ifnotexists
try
list<string> tables   db gettablesbypattern tablename
if  tables    null    tables size   > 0       table
// exists
return ast
catch  hiveexception e
throw new semanticexception e
break
case hiveparser tok_tablepartcols
list<fieldschema> partcols   basesemanticanalyzer
getcolumns  astnode  child getchild 0   false
for  fieldschema fs   partcols
if   fs gettype   equalsignorecase
throw new semanticexception
fs getname
fs gettype
break
case hiveparser tok_storagehandler
string storagehandler   basesemanticanalyzer
unescapesqlstring child getchild 0  gettext
if  org apache commons lang stringutils
isnotempty storagehandler
return ast
break
case hiveparser tok_tablefileformat
if  child getchildcount   < 2
throw new semanticexception
inputformat   basesemanticanalyzer unescapesqlstring child
getchild 0  gettext
outputformat   basesemanticanalyzer unescapesqlstring child
getchild 1  gettext
break
case hiveparser tok_tblrcfile
inputformat   rcfileinputformat class getname
outputformat   rcfileoutputformat class getname
break
if   liketable     inputformat    null    outputformat    null
throw new semanticexception
return ast
@override
public void postanalyze hivesemanticanalyzerhookcontext context
list<task<? extends serializable>> roottasks
throws semanticexception
if  roottasks size      0
// there will be no ddl task created in case if its create table if
// not exists
return
createtabledesc desc     ddltask  roottasks get roottasks size     1
getwork   getcreatetbldesc
if  desc    null
// desc will be null if its create table like. desc will be
// contained in createtablelikedesc. currently, hcat disallows ctlt in
// pre-hook. so, desc can never be null.
return
map<string  string> tblprops   desc gettblprops
if  tblprops    null
// tblprops will be null if user didnt use tblprops in his create
// table cmd.
tblprops   new hashmap<string  string>
// first check if we will allow the user to create table.
string storagehandler   desc getstoragehandler
if  stringutils isempty storagehandler
else
try
hcatstoragehandler storagehandlerinst   hcatutil
getstoragehandler context getconf
desc getstoragehandler
desc getsername
desc getinputformat
desc getoutputformat
//authorization checks are performed by the storagehandler.getauthorizationprovider(), if
//storagedelegationauthorizationprovider is used.
catch  ioexception e
throw new semanticexception e
if  desc    null
try
table table   context gethive   newtable desc gettablename
if  desc getlocation      null
table setdatalocation new path desc getlocation    touri
if  desc getstoragehandler      null
table setproperty
org apache hadoop hive metastore api hive_metastoreconstants meta_table_storage
desc getstoragehandler
for  map entry<string  string> prop   tblprops entryset
table setproperty prop getkey    prop getvalue
for  map entry<string  string> prop   desc getserdeprops   entryset
table setserdeparam prop getkey    prop getvalue
//todo: set other table properties as needed
//authorize against the table operation so that location permissions can be checked if any
if  hiveconf getboolvar context getconf
hiveconf confvars hive_authorization_enabled
authorize table  privilege create
catch  hiveexception ex
throw new semanticexception ex
desc settblprops tblprops
context getconf   set hcatconstants hcat_create_tbl_name  tablename