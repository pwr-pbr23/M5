/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing,
* software distributed under the license is distributed on an
* "as is" basis, without warranties or conditions of any
* kind, either express or implied.  see the license for the
* specific language governing permissions and limitations
* under the license.
*/
package org apache hive hcatalog templeton
import java io filenotfoundexception
import java io ioexception
import java net urisyntaxexception
import java util arraylist
import java util arrays
import java util list
import java util map
import org apache commons exec executeexception
import org apache hive hcatalog templeton tool templetoncontrollerjob
import org apache hive hcatalog templeton tool templetonutils
/**
* submit a hive job.
*
* this is the backend of the hive web service.
*/
public class hivedelegator extends launcherdelegator
public hivedelegator appconfig appconf
super appconf
public enqueuebean run string user  map<string  object> userargs
string execute  string srcfile  list<string> defines
list<string> hiveargs  string otherfiles
string statusdir  string callback  string completedurl  boolean enablelog
throws notauthorizedexception  badparam  busyexception  queueexception
executeexception  ioexception  interruptedexception
runas   user
list<string> args   makeargs execute  srcfile  defines  hiveargs  otherfiles  statusdir
completedurl  enablelog
return enqueuecontroller user  userargs  callback  args
private list<string> makeargs string execute  string srcfile
list<string> defines  list<string> hiveargs  string otherfiles
string statusdir  string completedurl  boolean enablelog
throws badparam  ioexception  interruptedexception
arraylist<string> args   new arraylist<string>
try
args addall makebasicargs execute  srcfile  otherfiles  statusdir  completedurl  enablelog
args add
templetonutils addcmdforwindows args
args add appconf hivepath
args add
args add
//the token file location as initial hiveconf arg
args add
args add templetoncontrollerjob token_file_arg_placeholder
for  string prop   appconf getstrings appconfig hive_props_name
args add
args add templetonutils quoteforwindows prop
for  string prop   defines
args add
args add templetonutils quoteforwindows prop
for  string hivearg   hiveargs
args add templetonutils quoteforwindows hivearg
if  templetonutils isset execute
args add
args add templetonutils quoteforwindows execute
else if  templetonutils isset srcfile
args add
args add templetonutils hadoopfspath srcfile  appconf  runas
getname
catch  filenotfoundexception e
throw new badparam e getmessage
catch  urisyntaxexception e
throw new badparam e getmessage
return args
private list<string> makebasicargs string execute  string srcfile  string otherfiles
string statusdir  string completedurl
boolean enablelog
throws urisyntaxexception  filenotfoundexception  ioexception
interruptedexception
arraylist<string> args   new arraylist<string>
arraylist<string> allfiles   new arraylist<string>
if  templetonutils isset srcfile
allfiles add templetonutils hadoopfsfilename srcfile  appconf
runas
if  templetonutils isset otherfiles
string ofs   templetonutils hadoopfslistasarray otherfiles  appconf  runas
allfiles addall arrays aslist ofs
args addall makelauncherargs appconf  statusdir  completedurl  allfiles
enablelog  jobtype hive
if  appconf hivearchive      null     appconf hivearchive   equals
args add
args add appconf hivearchive
return args