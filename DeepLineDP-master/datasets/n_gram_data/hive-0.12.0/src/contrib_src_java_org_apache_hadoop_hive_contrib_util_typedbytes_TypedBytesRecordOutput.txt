/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive contrib util typedbytes
import java io dataoutput
import java io ioexception
import java util arraylist
import java util treemap
import org apache hadoop record buffer
import org apache hadoop record record
import org apache hadoop record recordoutput
/**
* deserialized for records that reads typed bytes.
*/
public class typedbytesrecordoutput implements recordoutput
private typedbytesoutput out
private typedbytesrecordoutput
private void settypedbytesoutput typedbytesoutput out
this out   out
private static threadlocal tbout   new threadlocal
@override
protected synchronized object initialvalue
return new typedbytesrecordoutput
/**
* get a thread-local typed bytes record input for the supplied
* {@link typedbytesoutput}.
*
* @param out
*          typed bytes output object
* @return typed bytes record output corresponding to the supplied
*         {@link typedbytesoutput}.
*/
public static typedbytesrecordoutput get typedbytesoutput out
typedbytesrecordoutput bout    typedbytesrecordoutput  tbout get
bout settypedbytesoutput out
return bout
/**
* get a thread-local typed bytes record output for the supplied
* {@link dataoutput}.
*
* @param out
*          data output object
* @return typed bytes record output corresponding to the supplied
*         {@link dataoutput}.
*/
public static typedbytesrecordoutput get dataoutput out
return get typedbytesoutput get out
/** creates a new instance of typedbytesrecordoutput. */
public typedbytesrecordoutput typedbytesoutput out
this out   out
/** creates a new instance of typedbytesrecordoutput. */
public typedbytesrecordoutput dataoutput out
this new typedbytesoutput out
public void writebool boolean b  string tag  throws ioexception
out writebool b
public void writebuffer buffer buf  string tag  throws ioexception
out writebytes buf get
public void writebyte byte b  string tag  throws ioexception
out writebyte b
public void writedouble double d  string tag  throws ioexception
out writedouble d
public void writefloat float f  string tag  throws ioexception
out writefloat f
public void writeint int i  string tag  throws ioexception
out writeint i
public void writelong long l  string tag  throws ioexception
out writelong l
public void writestring string s  string tag  throws ioexception
out writestring s
public void startrecord record r  string tag  throws ioexception
out writelistheader
public void startvector arraylist v  string tag  throws ioexception
out writevectorheader v size
public void startmap treemap m  string tag  throws ioexception
out writemapheader m size
public void endrecord record r  string tag  throws ioexception
out writelistfooter
public void endvector arraylist v  string tag  throws ioexception
public void endmap treemap m  string tag  throws ioexception