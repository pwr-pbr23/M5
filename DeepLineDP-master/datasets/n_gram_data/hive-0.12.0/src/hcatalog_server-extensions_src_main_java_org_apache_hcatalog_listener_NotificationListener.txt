/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing,
* software distributed under the license is distributed on an
* "as is" basis, without warranties or conditions of any
* kind, either express or implied.  see the license for the
* specific language governing permissions and limitations
* under the license.
*/
package org apache hcatalog listener
import java util arraylist
import java util hashmap
import javax jms connection
import javax jms connectionfactory
import javax jms destination
import javax jms exceptionlistener
import javax jms illegalstateexception
import javax jms jmsexception
import javax jms message
import javax jms messageproducer
import javax jms session
import javax jms topic
import javax naming context
import javax naming initialcontext
import javax naming namingexception
import org apache hadoop conf configuration
import org apache hadoop hive conf hiveconf
import org apache hadoop hive metastore hivemetastore hmshandler
import org apache hadoop hive metastore metastoreeventlistener
import org apache hadoop hive metastore api invalidoperationexception
import org apache hadoop hive metastore api metaexception
import org apache hadoop hive metastore api nosuchobjectexception
import org apache hadoop hive metastore api order
import org apache hadoop hive metastore api partition
import org apache hadoop hive metastore api storagedescriptor
import org apache hadoop hive metastore api table
import org apache hadoop hive metastore events addpartitionevent
import org apache hadoop hive metastore events alterpartitionevent
import org apache hadoop hive metastore events altertableevent
import org apache hadoop hive metastore events createdatabaseevent
import org apache hadoop hive metastore events createtableevent
import org apache hadoop hive metastore events dropdatabaseevent
import org apache hadoop hive metastore events droppartitionevent
import org apache hadoop hive metastore events droptableevent
import org apache hadoop hive metastore events listenerevent
import org apache hadoop hive metastore events loadpartitiondoneevent
import org apache hcatalog common hcatconstants
import org apache hcatalog messaging hcateventmessage
import org apache hcatalog messaging messagefactory
import org slf4j logger
import org slf4j loggerfactory
/**
* implementation of
* {@link org.apache.hadoop.hive.metastore.metastoreeventlistener} it sends
* message on two type of topics. one has name of form dbname.tblname on this
* topic, two kind of messages are sent: add/drop partition and
* finalize_partition message. second topic has name "hcat" and messages sent on
* it are: add/drop database and add/drop table. all messages also has a
* property named "hcat_event" set on them whose value can be used to configure
* message selector on subscriber side.
*
* @deprecated use/modify {@link org.apache.hive.hcatalog.listener.notificationlistener} instead
*/
public class notificationlistener extends metastoreeventlistener
private static final logger log   loggerfactory getlogger notificationlistener class
protected session session
protected connection conn
private static messagefactory messagefactory   messagefactory getinstance
/**
* create message bus connection and session in constructor.
*/
public notificationlistener final configuration conf
super conf
createconnection
private static string gettopicname partition partition
listenerevent partitionevent  throws metaexception
try
return partitionevent gethandler
get_table partition getdbname    partition gettablename
getparameters   get hcatconstants hcat_msgbus_topic_name
catch  nosuchobjectexception e
throw new metaexception e tostring
@override
public void onaddpartition addpartitionevent partitionevent
throws metaexception
// subscriber can get notification of newly add partition in a
// particular table by listening on a topic named "dbname.tablename"
// and message selector string as "hcat_event = hcat_add_partition"
if  partitionevent getstatus
partition partition   partitionevent getpartition
string topicname   gettopicname partition  partitionevent
if  topicname    null     topicname equals
send messagefactory buildaddpartitionmessage partitionevent gettable    partition   topicname
else
log info
partition getdbname
partition gettablename
hcatconstants hcat_msgbus_topic_name
/**
* send dropped partition notifications. subscribers can receive these notifications for a
* particular table by listening on a topic named "dbname.tablename" with message selector
* string {@value org.apache.hcatalog.common.hcatconstants#hcat_event} =
* {@value org.apache.hcatalog.common.hcatconstants#hcat_drop_partition_event}.
* </br>
* todo: datanucleus 2.0.3, currently used by the hivemetastore for persistence, has been
* found to throw npe when serializing objects that contain null. for this reason we override
* some fields in the storagedescriptor of this notification. this should be fixed after
* hive-2084 "upgrade datanucleus from 2.0.3 to 3.0.1" is resolved.
*/
@override
public void ondroppartition droppartitionevent partitionevent  throws metaexception
if  partitionevent getstatus
partition partition   partitionevent getpartition
storagedescriptor sd   partition getsd
sd setbucketcols new arraylist<string>
sd setsortcols new arraylist<order>
sd setparameters new hashmap<string  string>
sd getserdeinfo   setparameters new hashmap<string  string>
sd getskewedinfo   setskewedcolnames new arraylist<string>
string topicname   gettopicname partition  partitionevent
if  topicname    null     topicname equals
send messagefactory builddroppartitionmessage partitionevent gettable    partition   topicname
else
log info
partition getdbname
partition gettablename
hcatconstants hcat_msgbus_topic_name
@override
public void oncreatedatabase createdatabaseevent dbevent
throws metaexception
// subscriber can get notification about addition of a database in hcat
// by listening on a topic named "hcat" and message selector string
// as "hcat_event = hcat_add_database"
if  dbevent getstatus
string topicname   gettopicprefix dbevent gethandler   gethiveconf
send messagefactory buildcreatedatabasemessage dbevent getdatabase     topicname
@override
public void ondropdatabase dropdatabaseevent dbevent  throws metaexception
// subscriber can get notification about drop of a database in hcat
// by listening on a topic named "hcat" and message selector string
// as "hcat_event = hcat_drop_database"
if  dbevent getstatus
string topicname   gettopicprefix dbevent gethandler   gethiveconf
send messagefactory builddropdatabasemessage dbevent getdatabase     topicname
@override
public void oncreatetable createtableevent tableevent  throws metaexception
// subscriber can get notification about addition of a table in hcat
// by listening on a topic named "hcat" and message selector string
// as "hcat_event = hcat_add_table"
if  tableevent getstatus
table tbl   tableevent gettable
hmshandler handler   tableevent gethandler
hiveconf conf   handler gethiveconf
table newtbl
try
newtbl   handler get_table tbl getdbname    tbl gettablename
deepcopy
newtbl getparameters   put
hcatconstants hcat_msgbus_topic_name
gettopicprefix conf        newtbl getdbname   tolowercase
newtbl gettablename   tolowercase
handler alter_table newtbl getdbname    newtbl gettablename    newtbl
catch  invalidoperationexception e
metaexception me   new metaexception e tostring
me initcause e
throw me
catch  nosuchobjectexception e
metaexception me   new metaexception e tostring
me initcause e
throw me
string topicname   gettopicprefix conf        newtbl getdbname   tolowercase
send messagefactory buildcreatetablemessage newtbl   topicname
private string gettopicprefix hiveconf conf
return conf get hcatconstants hcat_msgbus_topic_prefix
hcatconstants hcat_default_topic_prefix
/**
* send dropped table notifications. subscribers can receive these notifications for
* dropped tables by listening on topic "hcat" with message selector string
* {@value org.apache.hcatalog.common.hcatconstants#hcat_event} =
* {@value org.apache.hcatalog.common.hcatconstants#hcat_drop_table_event}
* </br>
* todo: datanucleus 2.0.3, currently used by the hivemetastore for persistence, has been
* found to throw npe when serializing objects that contain null. for this reason we override
* some fields in the storagedescriptor of this notification. this should be fixed after
* hive-2084 "upgrade datanucleus from 2.0.3 to 3.0.1" is resolved.
*/
@override
public void ondroptable droptableevent tableevent  throws metaexception
// subscriber can get notification about drop of a table in hcat
// by listening on a topic named "hcat" and message selector string
// as "hcat_event = hcat_drop_table"
// datanucleus throws npe when we try to serialize a table object
// retrieved from metastore. to workaround that we reset following objects
if  tableevent getstatus
table table   tableevent gettable
string topicname   gettopicprefix tableevent gethandler   gethiveconf          table getdbname   tolowercase
send messagefactory builddroptablemessage table   topicname
/**
* @param hcateventmessage the hcateventmessage being sent over jms.
* @param topicname is the name on message broker on which message is sent.
*/
protected void send hcateventmessage hcateventmessage  string topicname
try
if null    session
// this will happen, if we never able to establish a connection.
createconnection
if  null    session
// still not successful, return from here.
log error
topicname       hcateventmessage geteventtype
return
destination topic   gettopic topicname
if  null    topic
// still not successful, return from here.
log error
topicname       hcateventmessage geteventtype
return
messageproducer producer   session createproducer topic
message msg   session createtextmessage hcateventmessage tostring
msg setstringproperty hcatconstants hcat_event  hcateventmessage geteventtype   tostring
msg setstringproperty hcatconstants hcat_message_version  messagefactory getversion
msg setstringproperty hcatconstants hcat_message_format  messagefactory getmessageformat
producer send msg
// message must be transacted before we return.
session commit
catch exception e
// gobble up the exception. message delivery is best effort.
log error     topicname
hcateventmessage geteventtype    e
/**
* get the topic object for the topicname, it also tries to reconnect
* if the connection appears to be broken.
*
* @param topicname the string identifying the message-topic.
* @return a {@link topic} object corresponding to the specified topicname.
* @throws jmsexception
*/
protected topic gettopic final string topicname  throws jmsexception
topic topic
try
// topics are created on demand. if it doesn't exist on broker it will
// be created when broker receives this message.
topic   session createtopic topicname
catch  illegalstateexception ise
// this will happen if we were able to establish connection once, but its no longer valid,
// ise is thrown, catch it and retry.
log error    ise
createconnection
topic   session createtopic topicname
return topic
protected void createconnection
context jndicntxt
try
jndicntxt   new initialcontext
connectionfactory connfac    connectionfactory  jndicntxt
lookup
connection conn   connfac createconnection
conn start
conn setexceptionlistener new exceptionlistener
@override
public void onexception jmsexception jmse
log error jmse tostring
// we want message to be sent when session commits, thus we run in
// transacted mode.
session   conn createsession true  session session_transacted
catch  namingexception e
log error
e
catch  jmsexception e
log error    e
catch  throwable t
log error    t
@override
protected void finalize   throws throwable
// close the connection before dying.
try
if  null    session
session close
if  conn    null
conn close
catch  exception ignore
log info    ignore
@override
public void onloadpartitiondone loadpartitiondoneevent lpde
throws metaexception
//  todo: fix loadpartitiondoneevent. currently, lpde can only carry a single partition-spec. and that defeats the purpose.
//        if(lpde.getstatus())
//            send(lpde.getpartitionname(),lpde.gettable().getparameters().get(hcatconstants.hcat_msgbus_topic_name),hcatconstants.hcat_partition_done_event);
@override
public void onalterpartition alterpartitionevent ape  throws metaexception
// no-op
@override
public void onaltertable altertableevent ate  throws metaexception
// no-op