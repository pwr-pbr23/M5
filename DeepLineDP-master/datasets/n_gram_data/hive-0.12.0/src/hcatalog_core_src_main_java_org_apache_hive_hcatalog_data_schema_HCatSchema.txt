/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing,
* software distributed under the license is distributed on an
* "as is" basis, without warranties or conditions of any
* kind, either express or implied.  see the license for the
* specific language governing permissions and limitations
* under the license.
*/
package org apache hive hcatalog data schema
import java io serializable
import java util arraylist
import java util collections
import java util hashmap
import java util list
import java util map
import org apache hive hcatalog common hcatexception
/**
* hcatschema. this class is not thread-safe.
*/
public class hcatschema implements serializable
private static final long serialversionuid   1l
private final list<hcatfieldschema> fieldschemas
//hcatfieldschema.getname()->position
private final map<string  integer> fieldpositionmap
private final list<string> fieldnames
/**
*
* @param fieldschemas is now owned by hcatschema. any subsequent modifications
* on fieldschemas won't get reflected in hcatschema.  each fieldschema's name
* in the list must be unique, otherwise throws illegalargumentexception.
*/
public hcatschema final list<hcatfieldschema> fieldschemas
this fieldschemas   new arraylist<hcatfieldschema> fieldschemas
int idx   0
fieldpositionmap   new hashmap<string  integer>
fieldnames   new arraylist<string>
for  hcatfieldschema field   fieldschemas
if  field    null
throw new illegalargumentexception
string fieldname   field getname
if  fieldpositionmap containskey fieldname
throw new illegalargumentexception     fieldname
fieldpositionmap put fieldname  idx
fieldnames add fieldname
idx
public void append final hcatfieldschema hfs  throws hcatexception
if  hfs    null
throw new hcatexception
string fieldname   hfs getname
if  fieldpositionmap containskey fieldname
throw new hcatexception
fieldname
this fieldschemas add hfs
this fieldnames add fieldname
this fieldpositionmap put fieldname  this size     1
/**
*  users are not allowed to modify the list directly, since hcatschema
*  maintains internal state. use append/remove to modify the schema.
*/
public list<hcatfieldschema> getfields
return collections unmodifiablelist this fieldschemas
/**
* @param fieldname
* @return the index of field named fieldname in schema. if field is not
* present, returns null.
*/
public integer getposition string fieldname
return fieldpositionmap get fieldname
public hcatfieldschema get string fieldname  throws hcatexception
return get getposition fieldname
public list<string> getfieldnames
return this fieldnames
public hcatfieldschema get int position
return fieldschemas get position
public int size
return fieldschemas size
public void remove final hcatfieldschema hcatfieldschema  throws hcatexception
if   fieldschemas contains hcatfieldschema
throw new hcatexception     hcatfieldschema
fieldschemas remove hcatfieldschema
fieldpositionmap remove hcatfieldschema getname
fieldnames remove hcatfieldschema getname
@override
public string tostring
boolean first   true
stringbuilder sb   new stringbuilder
for  hcatfieldschema hfs   fieldschemas
if   first
sb append
else
first   false
if  hfs getname      null
sb append hfs getname
sb append
sb append hfs tostring
return sb tostring
public string getschemaastypestring
boolean first   true
stringbuilder sb   new stringbuilder
for  hcatfieldschema hfs   fieldschemas
if   first
sb append
else
first   false
if  hfs getname      null
sb append hfs getname
sb append
sb append hfs gettypestring
return sb tostring
@override
public boolean equals object obj
if  this    obj
return true
if  obj    null
return false
if    obj instanceof hcatschema
return false
hcatschema other    hcatschema  obj
if   this getfields   equals other getfields
return false
return true
@override
public int hashcode
return tostring   hashcode