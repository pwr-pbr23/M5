/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql exec
import java util hashmap
import java util map
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql plan exprnodecolumndesc
import org apache hadoop hive ql plan exprnodeconstantdesc
import org apache hadoop hive ql plan exprnodedesc
import org apache hadoop hive ql plan exprnodefielddesc
import org apache hadoop hive ql plan exprnodegenericfuncdesc
import org apache hadoop hive ql plan exprnodenulldesc
/**
* exprnodeevaluatorfactory.
*
*/
public final class exprnodeevaluatorfactory
private exprnodeevaluatorfactory
public static exprnodeevaluator get exprnodedesc desc  throws hiveexception
// constant node
if  desc instanceof exprnodeconstantdesc
return new exprnodeconstantevaluator  exprnodeconstantdesc  desc
// column-reference node, e.g. a column in the input row
if  desc instanceof exprnodecolumndesc
return new exprnodecolumnevaluator  exprnodecolumndesc  desc
// generic function node, e.g. case, an operator or a udf node
if  desc instanceof exprnodegenericfuncdesc
return new exprnodegenericfuncevaluator  exprnodegenericfuncdesc  desc
// field node, e.g. get a.myfield1 from a
if  desc instanceof exprnodefielddesc
return new exprnodefieldevaluator  exprnodefielddesc  desc
// null node, a constant node with value null and no type information
if  desc instanceof exprnodenulldesc
return new exprnodenullevaluator  exprnodenulldesc  desc
throw new runtimeexception
desc
/**
* should be called before eval is initialized
*/
public static exprnodeevaluator tocachedeval exprnodeevaluator eval
if  eval instanceof exprnodegenericfuncevaluator
evaluatorcontext context   new evaluatorcontext
iterate eval  context
if  context hasreference
return new exprnodeevaluatorhead eval
// has nothing to be cached
return eval
private static exprnodeevaluator iterate exprnodeevaluator eval  evaluatorcontext context
if    eval instanceof exprnodeconstantevaluator     eval isdeterministic
exprnodeevaluator replace   context getevaluated eval
if  replace    null
return replace
exprnodeevaluator children   eval getchildren
if  children    null    children length > 0
for  int i   0  i < children length  i
exprnodeevaluator replace   iterate children  context
if  replace    null
children   replace
return null
private static class evaluatorcontext
private final map<string  exprnodeevaluator> cached   new hashmap<string  exprnodeevaluator>
private boolean hasreference
public exprnodeevaluator getevaluated exprnodeevaluator eval
string key   eval getexpr   getexprstring
exprnodeevaluator prev   cached get key
if  prev    null
cached put key  eval
return null
hasreference   true
return new exprnodeevaluatorref prev