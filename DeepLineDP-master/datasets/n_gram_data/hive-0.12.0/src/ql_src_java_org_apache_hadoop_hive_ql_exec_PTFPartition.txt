/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql exec
import java util concurrentmodificationexception
import java util iterator
import java util list
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive conf hiveconf
import org apache hadoop hive conf hiveconf confvars
import org apache hadoop hive ql exec persistence ptfrowcontainer
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive serde2 serde
import org apache hadoop hive serde2 serdeexception
import org apache hadoop hive serde2 objectinspector objectinspectorutils
import org apache hadoop hive serde2 objectinspector objectinspectorutils objectinspectorcopyoption
import org apache hadoop hive serde2 objectinspector structobjectinspector
/*
* represents a collection of rows that is acted upon by a tablefunction or a windowfunction.
*/
@suppresswarnings
public class ptfpartition
protected static log log   logfactory getlog ptfpartition class
serde serde
structobjectinspector inputoi
structobjectinspector outputoi
private final ptfrowcontainer<list<object>> elems
protected ptfpartition hiveconf cfg
serde serde  structobjectinspector inputoi
structobjectinspector outputoi
throws hiveexception
this serde   serde
this inputoi   inputoi
this outputoi   outputoi
int containernumrows   hiveconf getintvar cfg  confvars hivejoincachesize
elems   new ptfrowcontainer<list<object>> containernumrows  cfg  null
elems setserde serde  outputoi
elems settabledesc ptfrowcontainer createtabledesc inputoi
public void reset   throws hiveexception
elems clear
public serde getserde
return serde
public structobjectinspector getinputoi
return inputoi
public structobjectinspector getoutputoi
return outputoi
public object getat int i  throws hiveexception
return elems getat i
public void append object o  throws hiveexception
if   elems size      integer max_value
throw new hiveexception string format
integer max_value
@suppresswarnings
list<object> l    list<object>
objectinspectorutils copytostandardobject o  inputoi  objectinspectorcopyoption writable
elems add l
public int size
return  int  elems size
public ptfpartitioniterator<object> iterator   throws hiveexception
elems first
return new pitr 0  size
public ptfpartitioniterator<object> range int start  int end
assert  start >  0
assert  end <  size
assert  start <  end
return new pitr start  end
public void close
try
elems close
catch  hiveexception e
log error e tostring    e
class pitr implements ptfpartitioniterator<object>
int idx
final int start
final int end
final int createtimesz
pitr int start  int end
this idx   start
this start   start
this end   end
createtimesz   ptfpartition this size
public boolean hasnext
checkforcomodification
return idx < end
public object next
checkforcomodification
try
return ptfpartition this getat idx
catch  hiveexception e
throw new runtimeexception e
public void remove
throw new unsupportedoperationexception
final void checkforcomodification
if  createtimesz    ptfpartition this size
throw new concurrentmodificationexception
@override
public int getindex
return idx
private object getat int i  throws hiveexception
return ptfpartition this getat i
@override
public object lead int amt  throws hiveexception
int i   idx   amt
i   i >  end ? end   1   i
return getat i
@override
public object lag int amt  throws hiveexception
int i   idx   amt
i   i < start ? start   i
return getat i
@override
public object resettoindex int idx  throws hiveexception
if  idx < start    idx >  end
return null
object o   getat idx
this idx   idx   1
return o
@override
public ptfpartition getpartition
return ptfpartition this
@override
public void reset
idx   start
/*
* provide an iterator on the rows in a partiton.
* iterator exposes the index of the next location.
* client can invoke lead/lag relative to the next location.
*/
public static interface ptfpartitioniterator<t> extends iterator<t>
int getindex
t lead int amt  throws hiveexception
t lag int amt  throws hiveexception
/*
* after a lead and lag call, allow object associated with serde and writable associated with
* partition to be reset
* to the value for the current index.
*/
object resettoindex int idx  throws hiveexception
ptfpartition getpartition
void reset   throws hiveexception
public static ptfpartition create hiveconf cfg
serde serde
structobjectinspector inputoi
structobjectinspector outputoi
throws hiveexception
return new ptfpartition cfg  serde  inputoi  outputoi
public static structobjectinspector setuppartitionoutputoi serde serde
structobjectinspector tblfnoi  throws serdeexception
return  structobjectinspector  objectinspectorutils getstandardobjectinspector tblfnoi
objectinspectorcopyoption writable