/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql io rcfile truncate
import java io ioexception
import java io serializable
import org apache commons lang stringutils
import org apache hadoop fs filesystem
import org apache hadoop fs path
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql context
import org apache hadoop hive ql drivercontext
import org apache hadoop hive ql queryplan
import org apache hadoop hive ql exec task
import org apache hadoop hive ql exec utilities
import org apache hadoop hive ql exec mr hadoopjobexechelper
import org apache hadoop hive ql exec mr hadoopjobexechook
import org apache hadoop hive ql exec mr throttle
import org apache hadoop hive ql io bucketizedhiveinputformat
import org apache hadoop hive ql io hiveoutputformatimpl
import org apache hadoop hive ql plan mapredwork
import org apache hadoop hive ql plan api stagetype
import org apache hadoop hive ql session sessionstate
import org apache hadoop hive shims shimloader
import org apache hadoop io nullwritable
import org apache hadoop mapred counters
import org apache hadoop mapred fileinputformat
import org apache hadoop mapred inputformat
import org apache hadoop mapred jobclient
import org apache hadoop mapred jobconf
import org apache hadoop mapred runningjob
@suppresswarnings
public class columntruncatetask extends task<columntruncatework> implements serializable
hadoopjobexechook
private static final long serialversionuid   1l
protected transient jobconf job
protected hadoopjobexechelper jobexechelper
@override
public void initialize hiveconf conf  queryplan queryplan
drivercontext drivercontext
super initialize conf  queryplan  drivercontext
job   new jobconf conf  columntruncatetask class
jobexechelper   new hadoopjobexechelper job  this console  this  this
@override
public boolean requirelock
return true
boolean success   true
@override
/**
* start a new map-reduce job to do the truncation, almost the same as execdriver.
*/
public int execute drivercontext drivercontext
hiveconf setvar job  hiveconf confvars hiveinputformat
bucketizedhiveinputformat class getname
success   true
shimloader gethadoopshims   preparejoboutput job
job setoutputformat hiveoutputformatimpl class
job setmapperclass work getmapperclass
context ctx   drivercontext getctx
boolean ctxcreated   false
try
if  ctx    null
ctx   new context job
ctxcreated   true
catch  ioexception e
e printstacktrace
console printerror
org apache hadoop util stringutils stringifyexception e
return 5
job setmapoutputkeyclass nullwritable class
job setmapoutputvalueclass nullwritable class
if work getnummaptasks      null
job setnummaptasks work getnummaptasks
// zero reducers
job setnumreducetasks 0
if  work getminsplitsize      null
hiveconf setlongvar job  hiveconf confvars mapredminsplitsize  work
getminsplitsize   longvalue
if  work getinputformat      null
hiveconf setvar job  hiveconf confvars hiveinputformat  work
getinputformat
string inpformat   hiveconf getvar job  hiveconf confvars hiveinputformat
if   inpformat    null       stringutils isnotblank inpformat
inpformat   shimloader gethadoopshims   getinputformatclassname
log info     inpformat
try
job setinputformat  class<? extends inputformat>   class
forname inpformat
catch  classnotfoundexception e
throw new runtimeexception e getmessage
string outputpath   this work getoutputdir
path tempoutpath   utilities totemppath new path outputpath
try
filesystem fs   tempoutpath getfilesystem job
if   fs exists tempoutpath
fs mkdirs tempoutpath
catch  ioexception e
console printerror     outputpath       e getmessage
return 6
job setoutputkeyclass nullwritable class
job setoutputvalueclass nullwritable class
int returnval   0
runningjob rj   null
boolean noname   stringutils isempty hiveconf getvar job
hiveconf confvars hadoopjobname
string jobname   null
if  noname    this getqueryplan      null
int maxlen   conf getintvar hiveconf confvars hivejobnamelength
jobname   utilities abbreviate this getqueryplan   getquerystr
maxlen   6
if  noname
// this is for a special case to ensure unit tests pass
hiveconf setvar job  hiveconf confvars hadoopjobname
jobname    null ? jobname       utilities randgen nextint
try
addinputpaths job  work
mapredwork mrwork   new mapredwork
mrwork setmapwork work
utilities setmapredwork job  mrwork  ctx getmrtmpfileuri
// remove the pwd from conf file so that job tracker doesn't show this
// logs
string pwd   hiveconf getvar job  hiveconf confvars metastorepwd
if  pwd    null
hiveconf setvar job  hiveconf confvars metastorepwd
jobclient jc   new jobclient job
string addedjars   utilities getresourcefiles job  sessionstate resourcetype jar
if   addedjars isempty
job set    addedjars
// make this client wait if job trcker is not behaving well.
throttle checkjobtracker job  log
// finally submit the job!
rj   jc submitjob job
returnval   jobexechelper progress rj  jc
success    returnval    0
catch  exception e
e printstacktrace
string mesg       utilities getnamemessage e
if  rj    null
mesg       rj getjobid     mesg
else
mesg       mesg
// has to use full name to make sure it does not conflict with
// org.apache.commons.lang.stringutils
console printerror mesg
org apache hadoop util stringutils stringifyexception e
success   false
returnval   1
finally
try
if  ctxcreated
ctx clear
if  rj    null
if  returnval    0
rj killjob
hadoopjobexechelper runningjobkilluris remove rj getjobid
jobid   rj getid   tostring
columntruncatemapper jobclose outputpath  success  job  console
work getdynpartctx    null
catch  exception e
return  returnval
private void addinputpaths jobconf job  columntruncatework work
fileinputformat addinputpath job  new path work getinputdir
@override
public string getname
return
@override
public stagetype gettype
return stagetype mapred
@override
public boolean checkfatalerrors counters ctrs  stringbuilder errmsg
return false
@override
public void logplanprogress sessionstate ss  throws ioexception
// no op
@override
public void updatecounters counters ctrs  runningjob rj  throws ioexception
// no op