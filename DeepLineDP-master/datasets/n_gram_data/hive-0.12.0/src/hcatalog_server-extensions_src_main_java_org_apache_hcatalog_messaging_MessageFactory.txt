/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing,
* software distributed under the license is distributed on an
* "as is" basis, without warranties or conditions of any
* kind, either express or implied.  see the license for the
* specific language governing permissions and limitations
* under the license.
*/
package org apache hcatalog messaging
import org apache hadoop hive conf hiveconf
import org apache hadoop hive metastore api database
import org apache hadoop hive metastore api partition
import org apache hadoop hive metastore api table
import org apache hadoop util reflectionutils
import org apache hcatalog messaging json jsonmessagefactory
/**
* abstract factory for the construction of hcatalog message instances.
* @deprecated use/modify {@link org.apache.hive.hcatalog.messaging.messagefactory} instead
*/
public abstract class messagefactory
private static messagefactory instance   new jsonmessagefactory
protected static final hiveconf hiveconf   new hiveconf
static
hiveconf addresource
private static final string conf_label_hcat_message_factory_impl_prefix
private static final string conf_label_hcat_message_format
private static final string hcat_message_format   hiveconf get conf_label_hcat_message_format
private static final string default_message_factory_impl
private static final string hcat_message_factory_impl   hiveconf get conf_label_hcat_message_factory_impl_prefix
hcat_message_format
default_message_factory_impl
protected static final string hcat_server_url   hiveconf get hiveconf confvars metastoreuris name
protected static final string hcat_service_principal   hiveconf get hiveconf confvars metastore_kerberos_principal name
/**
* getter for messagefactory instance.
*/
public static messagefactory getinstance
if  instance    null
instance   getinstance hcat_message_factory_impl
return instance
private static messagefactory getinstance string classname
try
return  messagefactory reflectionutils newinstance class forname classname   hiveconf
catch  classnotfoundexception classnotfound
throw new illegalstateexception    classnotfound
/**
* getter for messagedeserializer, corresponding to the specified format and version.
* @param format serialization format for notifications.
* @param version version of serialization format (currently ignored.)
* @return messagedeserializer.
*/
public static messagedeserializer getdeserializer string format
string version
return getinstance hiveconf get conf_label_hcat_message_factory_impl_prefix   format
default_message_factory_impl   getdeserializer
public abstract messagedeserializer getdeserializer
/**
* getter for version-string, corresponding to all constructed messages.
*/
public abstract string getversion
/**
* getter for message-format.
*/
public abstract string getmessageformat
/**
* factory method for createdatabasemessage.
* @param db the database being added.
* @return createdatabasemessage instance.
*/
public abstract createdatabasemessage buildcreatedatabasemessage database db
/**
* factory method for dropdatabasemessage.
* @param db the database being dropped.
* @return dropdatabasemessage instance.
*/
public abstract dropdatabasemessage builddropdatabasemessage database db
/**
* factory method for createtablemessage.
* @param table the table being created.
* @return createtablemessage instance.
*/
public abstract createtablemessage buildcreatetablemessage table table
/**
* factory method for droptablemessage.
* @param table the table being dropped.
* @return droptablemessage instance.
*/
public abstract droptablemessage builddroptablemessage table table
/**
* factory method for addpartitionmessage.
* @param table the table to which the partition is added.
* @param partition the partition being added.
* @return addpartitionmessage instance.
*/
public abstract addpartitionmessage buildaddpartitionmessage table table  partition partition
/**
* factory method for droppartitionmessage.
* @param table the table from which the partition is dropped.
* @param partition the partition being dropped.
* @return droppartitionmessage instance.
*/
public abstract droppartitionmessage builddroppartitionmessage table table  partition partition