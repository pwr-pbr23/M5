/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2
import java sql date
import java sql timestamp
import java util arraylist
import java util arrays
import java util list
import java util properties
import java util regex matcher
import java util regex pattern
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hive common type hivedecimal
import org apache hadoop hive common type hivevarchar
import org apache hadoop hive serde serdeconstants
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorfactory
import org apache hadoop hive serde2 objectinspector structobjectinspector
import org apache hadoop hive serde2 objectinspector primitiveobjectinspector primitivecategory
import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorfactory
import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorutils
import org apache hadoop hive serde2 typeinfo parameterizedprimitivetypeutils
import org apache hadoop hive serde2 typeinfo primitivetypeinfo
import org apache hadoop hive serde2 typeinfo typeinfo
import org apache hadoop hive serde2 typeinfo typeinfoutils
import org apache hadoop hive serde2 typeinfo varchartypeparams
import org apache hadoop io text
import org apache hadoop io writable
/**
* regexserde uses regular expression (regex) to deserialize data. it doesn't
* support data serialization.
*
* it can deserialize the data using regex and extracts groups as columns.
*
* in deserialization stage, if a row does not match the regex, then all columns
* in the row will be null. if a row matches the regex but has less than
* expected groups, the missing groups will be null. if a row matches the regex
* but has more than expected groups, the additional groups are just ignored.
*
* note: regex serde supports primitive column types such as tinyint, smallint,
* int, bigint, float, double, string, boolean and decimal
*
*
* note: this implementation uses javastringobjectinspector for string. a
* more efficient implementation should use utf-8 encoded text and
* writablestringobjectinspector. we should switch to that when we have a utf-8
* based regex library.
*/
public class regexserde extends abstractserde
public static final log log   logfactory getlog regexserde class getname
int numcolumns
string inputregex
pattern inputpattern
structobjectinspector rowoi
list<object> row
list<typeinfo> columntypes
object outputfields
text outputrowtext
boolean alreadyloggednomatch   false
boolean alreadyloggedpartialmatch   false
@override
public void initialize configuration conf  properties tbl
throws serdeexception
// we can get the table definition from tbl.
// read the configuration parameters
inputregex   tbl getproperty
string columnnameproperty   tbl getproperty serdeconstants list_columns
string columntypeproperty   tbl getproperty serdeconstants list_column_types
boolean inputregexignorecase     equalsignorecase tbl
getproperty
// output format string is not supported anymore, warn user of deprecation
if  null    tbl getproperty
log warn
// parse the configuration parameters
if  inputregex    null
inputpattern   pattern compile inputregex  pattern dotall
inputregexignorecase ? pattern case_insensitive   0
else
inputpattern   null
throw new serdeexception
input regex
list<string> columnnames   arrays aslist columnnameproperty split
columntypes   typeinfoutils
gettypeinfosfromtypestring columntypeproperty
assert columnnames size      columntypes size
numcolumns   columnnames size
/* constructing the row objectinspector:
* the row consists of some set of primitive columns, each column will
* be a java object of primitive type.
*/
list<objectinspector> columnois   new arraylist<objectinspector> columnnames size
for  int c   0  c < numcolumns  c
typeinfo typeinfo   columntypes get c
string typename   typeinfo gettypename
if  typename equals serdeconstants string_type_name
columnois add primitiveobjectinspectorfactory javastringobjectinspector
else if  typename equals serdeconstants tinyint_type_name
columnois add primitiveobjectinspectorfactory javabyteobjectinspector
else if  typename equals serdeconstants smallint_type_name
columnois add primitiveobjectinspectorfactory javashortobjectinspector
else if  typename equals serdeconstants int_type_name
columnois add primitiveobjectinspectorfactory javaintobjectinspector
else if  typename equals serdeconstants bigint_type_name
columnois add primitiveobjectinspectorfactory javalongobjectinspector
else if  typename equals serdeconstants float_type_name
columnois add primitiveobjectinspectorfactory javafloatobjectinspector
else if  typename equals serdeconstants double_type_name
columnois add primitiveobjectinspectorfactory javadoubleobjectinspector
else if  typename equals serdeconstants boolean_type_name
columnois add primitiveobjectinspectorfactory javabooleanobjectinspector
else if  typename equals serdeconstants timestamp_type_name
columnois add primitiveobjectinspectorfactory javatimestampobjectinspector
else if  typename equals serdeconstants date_type_name
columnois add primitiveobjectinspectorfactory javadateobjectinspector
else if  typename equals serdeconstants decimal_type_name
columnois add primitiveobjectinspectorfactory javahivedecimalobjectinspector
else if  typeinfo instanceof primitivetypeinfo
primitivetypeinfo  typeinfo  getprimitivecategory      primitivecategory varchar
varchartypeparams varcharparams    varchartypeparams
parameterizedprimitivetypeutils gettypeparamsfromtypeinfo typeinfo
columnois add primitiveobjectinspectorfactory getprimitivejavaobjectinspector
primitivetypeinfo  typeinfo
else
throw new serdeexception getclass   getname
c
columnnames get c        columntypes get c
// standardstruct uses arraylist to store the row.
rowoi   objectinspectorfactory getstandardstructobjectinspector
columnnames  columnois
row   new arraylist<object> numcolumns
// constructing the row object, etc, which will be reused for all rows.
for  int c   0  c < numcolumns  c
row add null
outputfields   new object
outputrowtext   new text
@override
public objectinspector getobjectinspector   throws serdeexception
return rowoi
@override
public class<? extends writable> getserializedclass
return text class
// number of rows not matching the regex
long unmatchedrowscount   0
// number of rows that match the regex but have missing groups.
long partialmatchedrowscount   0
@override
public object deserialize writable blob  throws serdeexception
text rowtext    text  blob
matcher m   inputpattern matcher rowtext tostring
if  m groupcount      numcolumns
throw new serdeexception
// if do not match, ignore the line, return a row with all nulls.
if   m matches
unmatchedrowscount
if   alreadyloggednomatch
// report the row if its the first time
log warn     unmatchedrowscount       rowtext
alreadyloggednomatch   true
return null
// otherwise, return the row.
for  int c   0  c < numcolumns  c
try
string t   m group c 1
typeinfo typeinfo   columntypes get c
string typename   typeinfo gettypename
// convert the column to the correct type when needed and set in row obj
if  typename equals serdeconstants string_type_name
row set c  t
else if  typename equals serdeconstants tinyint_type_name
byte b
b   byte valueof t
row set c b
else if  typename equals serdeconstants smallint_type_name
short s
s   short valueof t
row set c s
else if  typename equals serdeconstants int_type_name
integer i
i   integer valueof t
row set c  i
else if  typename equals serdeconstants bigint_type_name
long l
l   long valueof t
row set c  l
else if  typename equals serdeconstants float_type_name
float f
f   float valueof t
row set c f
else if  typename equals serdeconstants double_type_name
double d
d   double valueof t
row set c d
else if  typename equals serdeconstants boolean_type_name
boolean b
b   boolean valueof t
row set c  b
else if  typename equals serdeconstants timestamp_type_name
timestamp ts
ts   timestamp valueof t
row set c  ts
else if  typename equals serdeconstants date_type_name
date d
d   date valueof t
row set c  d
else if  typename equals serdeconstants decimal_type_name
hivedecimal bd
bd   new hivedecimal t
row set c  bd
else if  typeinfo instanceof primitivetypeinfo
primitivetypeinfo  typeinfo  getprimitivecategory      primitivecategory varchar
varchartypeparams varcharparams    varchartypeparams
parameterizedprimitivetypeutils gettypeparamsfromtypeinfo typeinfo
hivevarchar hv   new hivevarchar t  varcharparams    null ? varcharparams length    1
row set c  hv
catch  runtimeexception e
partialmatchedrowscount
if   alreadyloggedpartialmatch
// report the row if its the first row
log warn     partialmatchedrowscount
c       rowtext
alreadyloggedpartialmatch   true
row set c  null
return row
@override
public writable serialize object obj  objectinspector objinspector
throws serdeexception
throw new unsupportedoperationexception
@override
public serdestats getserdestats
// no support for statistics
return null