/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing,
* software distributed under the license is distributed on an
* "as is" basis, without warranties or conditions of any
* kind, either express or implied.  see the license for the
* specific language governing permissions and limitations
* under the license.
*/
package org apache hive hcatalog mapreduce
import java io ioexception
import java util properties
import com google common base preconditions
import org apache hadoop classification interfaceaudience
import org apache hadoop classification interfacestability
import org apache hadoop conf configuration
import org apache hadoop mapreduce job
/**
* the inputformat to use to read data from hcatalog.
*/
@interfaceaudience public
@interfacestability evolving
public class hcatinputformat extends hcatbaseinputformat
private configuration conf
private inputjobinfo inputjobinfo
/**
* @deprecated as of release 0.5, and will be removed in a future release
*/
@deprecated
public static void setinput job job  inputjobinfo inputjobinfo  throws ioexception
setinput job getconfiguration    inputjobinfo
/**
* @deprecated as of release 0.5, and will be removed in a future release
*/
@deprecated
public static void setinput configuration conf  inputjobinfo inputjobinfo  throws ioexception
setinput conf  inputjobinfo getdatabasename    inputjobinfo gettablename
setfilter inputjobinfo getfilter
setproperties inputjobinfo getproperties
/**
* see {@link #setinput(org.apache.hadoop.conf.configuration, string, string)}
*/
public static hcatinputformat setinput job job  string dbname  string tablename  throws ioexception
return setinput job getconfiguration    dbname  tablename
/**
* set inputs to use for the job. this queries the metastore with the given input
* specification and serializes matching partitions into the job conf for use by mr tasks.
* @param conf the job configuration
* @param dbname database name, which if null 'default' is used
* @param tablename table name
* @throws ioexception on all errors
*/
public static hcatinputformat setinput configuration conf  string dbname  string tablename
throws ioexception
preconditions checknotnull conf
preconditions checknotnull tablename
hcatinputformat hcatinputformat   new hcatinputformat
hcatinputformat conf   conf
hcatinputformat inputjobinfo   inputjobinfo create dbname  tablename  null  null
try
initializeinput setinput conf  hcatinputformat inputjobinfo
catch  exception e
throw new ioexception e
return hcatinputformat
/**
* set a filter on the input table.
* @param filter the filter specification, which may be null
* @return this
* @throws ioexception on all errors
*/
public hcatinputformat setfilter string filter  throws ioexception
// null filters are supported to simplify client code
if  filter    null
inputjobinfo   inputjobinfo create
inputjobinfo getdatabasename
inputjobinfo gettablename
filter
inputjobinfo getproperties
try
initializeinput setinput conf  inputjobinfo
catch  exception e
throw new ioexception e
return this
/**
* set properties for the input format.
* @param properties properties for the input specification
* @return this
* @throws ioexception on all errors
*/
public hcatinputformat setproperties properties properties  throws ioexception
preconditions checknotnull properties
inputjobinfo   inputjobinfo create
inputjobinfo getdatabasename
inputjobinfo gettablename
inputjobinfo getfilter
properties
try
initializeinput setinput conf  inputjobinfo
catch  exception e
throw new ioexception e
return this