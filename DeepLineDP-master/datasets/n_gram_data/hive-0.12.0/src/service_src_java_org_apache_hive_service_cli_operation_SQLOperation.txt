/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hive service cli operation
import java io ioexception
import java io serializable
import java sql sqlexception
import java util arraylist
import java util list
import java util map
import java util properties
import java util concurrent future
import java util concurrent rejectedexecutionexception
import org apache hadoop hive conf hiveconf
import org apache hadoop hive metastore api fieldschema
import org apache hadoop hive metastore api schema
import org apache hadoop hive ql commandneedretryexception
import org apache hadoop hive ql driver
import org apache hadoop hive ql exec explaintask
import org apache hadoop hive ql exec task
import org apache hadoop hive ql parse variablesubstitution
import org apache hadoop hive ql processors commandprocessorresponse
import org apache hadoop hive ql session sessionstate
import org apache hadoop hive serde serdeconstants
import org apache hadoop hive serde2 serde
import org apache hadoop hive serde2 serdeutils
import org apache hadoop hive serde2 lazy lazysimpleserde
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorutils
import org apache hadoop hive serde2 objectinspector objectinspectorutils objectinspectorcopyoption
import org apache hadoop hive serde2 objectinspector structfield
import org apache hadoop hive serde2 objectinspector structobjectinspector
import org apache hadoop io byteswritable
import org apache hive service cli fetchorientation
import org apache hive service cli hivesqlexception
import org apache hive service cli operationstate
import org apache hive service cli rowset
import org apache hive service cli tableschema
import org apache hive service cli session hivesession
/**
* sqloperation.
*
*/
public class sqloperation extends executestatementoperation
private driver driver   null
private commandprocessorresponse response
private tableschema resultschema   null
private schema mresultschema   null
private serde serde   null
private final boolean runasync
private future<?> backgroundhandle
public sqloperation hivesession parentsession  string statement  map<string
string> confoverlay  boolean runinbackground
// todo: call setremoteuser in executestatementoperation or higher.
super parentsession  statement  confoverlay
this runasync   runinbackground
public void prepare   throws hivesqlexception
private void runinternal   throws hivesqlexception
setstate operationstate running
string statement_trimmed   statement trim
string tokens   statement_trimmed split
string cmd_1   statement_trimmed substring tokens length    trim
int ret   0
string errormessage
string sqlstate   null
try
driver   new driver getparentsession   gethiveconf
// in hive server mode, we are not able to retry in the fetchtask
// case, when calling fetch queries since execute() has returned.
// for now, we disable the test attempts.
driver settrycount integer max_value
string substatement   new variablesubstitution   substitute getparentsession   gethiveconf    statement
response   driver run substatement
if  0    response getresponsecode
throw new hivesqlexception
response geterrormessage    response getsqlstate    response getresponsecode
mresultschema   driver getschema
// hasresultset should be true only if the query has a fetchtask
// "explain" is an exception for now
if driver getplan   getfetchtask      null
//schema has to be set
if  mresultschema    null     mresultschema issetfieldschemas
throw new hivesqlexception
resultschema   new tableschema mresultschema
sethasresultset true
else
sethasresultset false
// set hasresultset true if the plan has explaintask
// todo explain should use a fetchtask for reading
for  task<? extends serializable> task  driver getplan   getroottasks
if  task getclass      explaintask class
sethasresultset true
break
catch  hivesqlexception e
setstate operationstate error
throw e
catch  exception e
setstate operationstate error
throw new hivesqlexception     e tostring    e
setstate operationstate finished
@override
public void run   throws hivesqlexception
setstate operationstate pending
if   shouldrunasync
runinternal
else
runnable backgroundoperation   new runnable
sessionstate ss   sessionstate get
@override
public void run
sessionstate start ss
try
runinternal
catch  hivesqlexception e
log error    e
// todo: return a more detailed error to the client,
// currently the async thread only writes to the log and sets the operationstate
try
// this submit blocks if no background threads are available to run this operation
backgroundhandle
getparentsession   getsessionmanager   submitbackgroundoperation backgroundoperation
catch  rejectedexecutionexception rejected
setstate operationstate error
throw new hivesqlexception rejected
private void cleanup operationstate state  throws hivesqlexception
setstate state
if  shouldrunasync
if  backgroundhandle    null
backgroundhandle cancel true
if  driver    null
driver close
driver destroy
sessionstate ss   sessionstate get
if  ss gettmpoutputfile      null
ss gettmpoutputfile   delete
@override
public void cancel   throws hivesqlexception
cleanup operationstate canceled
@override
public void close   throws hivesqlexception
cleanup operationstate closed
@override
public tableschema getresultsetschema   throws hivesqlexception
assertstate operationstate finished
if  resultschema    null
resultschema   new tableschema driver getschema
return resultschema
@override
public rowset getnextrowset fetchorientation orientation  long maxrows  throws hivesqlexception
assertstate operationstate finished
arraylist<string> rows   new arraylist<string>
driver setmaxrows  int maxrows
try
driver getresults rows
getserde
structobjectinspector soi    structobjectinspector  serde getobjectinspector
list<? extends structfield> fieldrefs   soi getallstructfieldrefs
rowset rowset   new rowset
object deserializedfields   new object
object rowobj
objectinspector fieldoi
for  string rowstring   rows
rowobj   serde deserialize new byteswritable rowstring getbytes
for  int i   0  i < fieldrefs size    i
structfield fieldref   fieldrefs get i
fieldoi   fieldref getfieldobjectinspector
deserializedfields   convertlazytojava soi getstructfielddata rowobj  fieldref   fieldoi
rowset addrow resultschema  deserializedfields
return rowset
catch  ioexception e
throw new hivesqlexception e
catch  commandneedretryexception e
throw new hivesqlexception e
catch  exception e
throw new hivesqlexception e
/**
* convert a lazyobject to a standard java object in compliance with jdbc 3.0 (see jdbc 3.0
* specification, table b-3: mapping from jdbc types to java object types).
*
* this method is kept consistent with {@link hiveresultsetmetadata#hivetypetosqltype}.
*/
private static object convertlazytojava object o  objectinspector oi
object obj   objectinspectorutils copytostandardobject o  oi  objectinspectorcopyoption java
if  obj    null
return null
if oi gettypename   equals serdeconstants binary_type_name
return new string  byte obj
// for now, expose non-primitive as a string
// todo: expose non-primitive as a structured object while maintaining jdbc compliance
if  oi getcategory      objectinspector category primitive
return serdeutils getjsonstring o  oi
return obj
private serde getserde   throws sqlexception
if  serde    null
return serde
try
list<fieldschema> fieldschemas   mresultschema getfieldschemas
list<string> columnnames   new arraylist<string>
list<string> columntypes   new arraylist<string>
stringbuilder namessb   new stringbuilder
stringbuilder typessb   new stringbuilder
if  fieldschemas    null     fieldschemas isempty
for  int pos   0  pos < fieldschemas size    pos
if  pos    0
namessb append
typessb append
columnnames add fieldschemas get pos  getname
columntypes add fieldschemas get pos  gettype
namessb append fieldschemas get pos  getname
typessb append fieldschemas get pos  gettype
string names   namessb tostring
string types   typessb tostring
serde   new lazysimpleserde
properties props   new properties
if  names length   > 0
log debug     names
props setproperty serdeconstants list_columns  names
if  types length   > 0
log debug     types
props setproperty serdeconstants list_column_types  types
serde initialize new hiveconf    props
catch  exception ex
ex printstacktrace
throw new sqlexception     ex getmessage    ex
return serde
private boolean shouldrunasync
return runasync