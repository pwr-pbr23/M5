/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hive jdbc
import java sql array
import java sql blob
import java sql callablestatement
import java sql clob
import java sql connection
import java sql databasemetadata
import java sql nclob
import java sql preparedstatement
import java sql sqlclientinfoexception
import java sql sqlexception
import java sql sqlwarning
import java sql sqlxml
import java sql savepoint
import java sql statement
import java sql struct
import java util hashmap
import java util linkedlist
import java util list
import java util map
import java util map entry
import java util properties
import java util concurrent executor
import javax security sasl sasl
import javax security sasl saslexception
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql session sessionstate
import org apache hive service auth kerberossaslhelper
import org apache hive service auth plainsaslhelper
import org apache hive service auth saslqop
import org apache hive service cli thrift embeddedthriftbinarycliservice
import org apache hive service cli thrift tcliservice
import org apache hive service cli thrift tclosesessionreq
import org apache hive service cli thrift topensessionreq
import org apache hive service cli thrift topensessionresp
import org apache hive service cli thrift tprotocolversion
import org apache hive service cli thrift tsessionhandle
import org apache http impl client defaulthttpclient
import org apache thrift texception
import org apache thrift protocol tbinaryprotocol
import org apache thrift protocol tprotocol
import org apache thrift transport thttpclient
import org apache thrift transport tsocket
import org apache thrift transport ttransport
import org apache thrift transport ttransportexception
/**
* hiveconnection.
*
*/
public class hiveconnection implements java sql connection
private static final string hive_auth_type
private static final string hive_auth_qop
private static final string hive_auth_simple
private static final string hive_auth_user
private static final string hive_auth_principal
private static final string hive_auth_passwd
private static final string hive_anonymous_user
private static final string hive_anonymous_passwd
private final string jdbcuri
private final string host
private final int port
private final map<string  string> sessconfmap
private final map<string  string> hiveconfmap
private final map<string  string> hivevarmap
private final boolean isembeddedmode
private ttransport transport
private tcliservice iface client
private boolean isclosed   true
private sqlwarning warningchain   null
private tsessionhandle sesshandle   null
private final list<tprotocolversion> supportedprotocols   new linkedlist<tprotocolversion>
public hiveconnection string uri  properties info  throws sqlexception
jdbcuri   uri
// parse the connection uri
utils jdbcconnectionparams connparams   utils parseurl jdbcuri
// extract parsed connection parameters:
// jdbc url: jdbc:hive2://<host>:<port>/dbname;sess_var_list?hive_conf_list#hive_var_list
// each list: <key1>=<val1>;<key2>=<val2> and so on
// sess_var_list -> sessconfmap
// hive_conf_list -> hiveconfmap
// hive_var_list -> hivevarmap
host   connparams gethost
port   connparams getport
sessconfmap   connparams getsessionvars
hiveconfmap   connparams gethiveconfs
hivevarmap   connparams gethivevars
isembeddedmode   connparams isembeddedmode
if  isembeddedmode
client   new embeddedthriftbinarycliservice
else
// extract user/password from jdbc connection properties if its not supplied in the connection url
if  info containskey hive_auth_user
sessconfmap put hive_auth_user  info getproperty hive_auth_user
if  info containskey hive_auth_passwd
sessconfmap put hive_auth_passwd  info getproperty hive_auth_passwd
// open the client transport
opentransport
// add supported protocols
supportedprotocols add tprotocolversion hive_cli_service_protocol_v1
supportedprotocols add tprotocolversion hive_cli_service_protocol_v2
supportedprotocols add tprotocolversion hive_cli_service_protocol_v3
// open client session
opensession
configureconnection
private void opentransport   throws sqlexception
transport   ishttptransportmode   ?
createhttptransport
createbinarytransport
tprotocol protocol   new tbinaryprotocol transport
client   new tcliservice client protocol
try
transport open
catch  ttransportexception e
throw new sqlexception
jdbcuri       e getmessage       e
private ttransport createhttptransport   throws sqlexception
// http path should begin with "/"
string httppath
httppath   hiveconfmap get hiveconf confvars hive_server2_thrift_http_path varname
if httppath    null
httppath
if  httppath startswith
httppath       httppath
defaulthttpclient httpclient   new defaulthttpclient
string httpurl   hiveconfmap get hiveconf confvars hive_server2_transport_mode varname
host       port   httppath
httpclient addrequestinterceptor
new httpbasicauthinterceptor getusername    getpasswd
try
transport   new thttpclient httpurl  httpclient
catch  ttransportexception e
string msg
jdbcuri       e getmessage
throw new sqlexception msg     e
return transport
private ttransport createbinarytransport   throws sqlexception
transport   new tsocket host  port
// handle secure connection if specified
if   sessconfmap containskey hive_auth_type
sessconfmap get hive_auth_type  equals hive_auth_simple
try
// if kerberos
if  sessconfmap containskey hive_auth_principal
map<string  string> saslprops   new hashmap<string  string>
saslqop saslqop   saslqop auth
if sessconfmap containskey hive_auth_qop
try
saslqop   saslqop fromstring sessconfmap get hive_auth_qop
catch  illegalargumentexception e
throw new sqlexception     hive_auth_qop       e getmessage       e
saslprops put sasl qop  saslqop tostring
saslprops put sasl server_auth
transport   kerberossaslhelper getkerberostransport
sessconfmap get hive_auth_principal   host  transport  saslprops
else
string username   sessconfmap get hive_auth_user
if   username    null     username isempty
username   hive_anonymous_user
string passwd   sessconfmap get hive_auth_passwd
if   passwd    null     passwd isempty
passwd   hive_anonymous_passwd
transport   plainsaslhelper getplaintransport username  passwd  transport
catch  saslexception e
throw new sqlexception
jdbcuri       e getmessage       e
return transport
private boolean ishttptransportmode
string transportmode
hiveconfmap get hiveconf confvars hive_server2_transport_mode varname
if transportmode    null     transportmode equalsignorecase
transportmode equalsignorecase
return true
return false
private void opensession   throws sqlexception
topensessionreq openreq   new topensessionreq
// set the session configuration
// openreq.setconfiguration(null);
try
topensessionresp openresp   client opensession openreq
// validate connection
utils verifysuccess openresp getstatus
if   supportedprotocols contains openresp getserverprotocolversion
throw new texception
sesshandle   openresp getsessionhandle
catch  texception e
throw new sqlexception
jdbcuri       e getmessage       e
isclosed   false
private void configureconnection   throws sqlexception
// set the hive variable in session state for local mode
if  isembeddedmode
if   hivevarmap isempty
sessionstate get   sethivevariables hivevarmap
else
// for remote jdbc client, try to set the conf var using 'set foo=bar'
statement stmt   createstatement
for  entry<string  string> hiveconf   hiveconfmap entryset
stmt execute     hiveconf getkey         hiveconf getvalue
// for remote jdbc client, try to set the hive var using 'set hivevar:key=value'
for  entry<string  string> hivevar   hivevarmap entryset
stmt execute     hivevar getkey         hivevar getvalue
stmt close
/**
* @return username from sessconfmap
*/
private string getusername
return getsessionvalue hive_auth_user  hive_anonymous_user
/**
* @return password from sessconfmap
*/
private string getpasswd
return getsessionvalue hive_auth_passwd  hive_anonymous_passwd
/**
* lookup varname in sessconfmap, if its null or empty return the default
* value vardefault
* @param varname
* @param vardefault
* @return
*/
private string getsessionvalue string varname  string vardefault
string varvalue   sessconfmap get varname
if   varvalue    null     varvalue isempty
varvalue   vardefault
return varvalue
public void abort executor executor  throws sqlexception
// jdk 1.7
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#clearwarnings()
*/
public void clearwarnings   throws sqlexception
warningchain   null
/*
* (non-javadoc)
*
* @see java.sql.connection#close()
*/
public void close   throws sqlexception
if   isclosed
tclosesessionreq closereq   new tclosesessionreq sesshandle
try
client closesession closereq
catch  texception e
throw new sqlexception    e
finally
isclosed   true
if  transport    null
transport close
/*
* (non-javadoc)
*
* @see java.sql.connection#commit()
*/
public void commit   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#createarrayof(java.lang.string,
* java.lang.object[])
*/
public array createarrayof string arg0  object arg1  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#createblob()
*/
public blob createblob   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#createclob()
*/
public clob createclob   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#createnclob()
*/
public nclob createnclob   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#createsqlxml()
*/
public sqlxml createsqlxml   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/**
* creates a statement object for sending sql statements to the database.
*
* @throws sqlexception
*           if a database access error occurs.
* @see java.sql.connection#createstatement()
*/
public statement createstatement   throws sqlexception
if  isclosed
throw new sqlexception
return new hivestatement client  sesshandle
/*
* (non-javadoc)
*
* @see java.sql.connection#createstatement(int, int)
*/
public statement createstatement int resultsettype  int resultsetconcurrency
throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#createstatement(int, int, int)
*/
public statement createstatement int resultsettype  int resultsetconcurrency
int resultsetholdability  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#createstruct(java.lang.string, java.lang.object[])
*/
public struct createstruct string typename  object attributes
throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#getautocommit()
*/
public boolean getautocommit   throws sqlexception
return true
/*
* (non-javadoc)
*
* @see java.sql.connection#getcatalog()
*/
public string getcatalog   throws sqlexception
return
/*
* (non-javadoc)
*
* @see java.sql.connection#getclientinfo()
*/
public properties getclientinfo   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#getclientinfo(java.lang.string)
*/
public string getclientinfo string name  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#getholdability()
*/
public int getholdability   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#getmetadata()
*/
public databasemetadata getmetadata   throws sqlexception
return new hivedatabasemetadata client  sesshandle
public int getnetworktimeout   throws sqlexception
// jdk 1.7
throw new sqlexception
public string getschema   throws sqlexception
// jdk 1.7
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#gettransactionisolation()
*/
public int gettransactionisolation   throws sqlexception
return connection transaction_none
/*
* (non-javadoc)
*
* @see java.sql.connection#gettypemap()
*/
public map<string  class<?>> gettypemap   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#getwarnings()
*/
public sqlwarning getwarnings   throws sqlexception
return warningchain
/*
* (non-javadoc)
*
* @see java.sql.connection#isclosed()
*/
public boolean isclosed   throws sqlexception
return isclosed
/*
* (non-javadoc)
*
* @see java.sql.connection#isreadonly()
*/
public boolean isreadonly   throws sqlexception
return false
/*
* (non-javadoc)
*
* @see java.sql.connection#isvalid(int)
*/
public boolean isvalid int timeout  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#nativesql(java.lang.string)
*/
public string nativesql string sql  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#preparecall(java.lang.string)
*/
public callablestatement preparecall string sql  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#preparecall(java.lang.string, int, int)
*/
public callablestatement preparecall string sql  int resultsettype
int resultsetconcurrency  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#preparecall(java.lang.string, int, int, int)
*/
public callablestatement preparecall string sql  int resultsettype
int resultsetconcurrency  int resultsetholdability  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#preparestatement(java.lang.string)
*/
public preparedstatement preparestatement string sql  throws sqlexception
return new hivepreparedstatement client  sesshandle  sql
/*
* (non-javadoc)
*
* @see java.sql.connection#preparestatement(java.lang.string, int)
*/
public preparedstatement preparestatement string sql  int autogeneratedkeys
throws sqlexception
return new hivepreparedstatement client  sesshandle  sql
/*
* (non-javadoc)
*
* @see java.sql.connection#preparestatement(java.lang.string, int[])
*/
public preparedstatement preparestatement string sql  int columnindexes
throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#preparestatement(java.lang.string,
* java.lang.string[])
*/
public preparedstatement preparestatement string sql  string columnnames
throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#preparestatement(java.lang.string, int, int)
*/
public preparedstatement preparestatement string sql  int resultsettype
int resultsetconcurrency  throws sqlexception
return new hivepreparedstatement client  sesshandle  sql
/*
* (non-javadoc)
*
* @see java.sql.connection#preparestatement(java.lang.string, int, int, int)
*/
public preparedstatement preparestatement string sql  int resultsettype
int resultsetconcurrency  int resultsetholdability  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#releasesavepoint(java.sql.savepoint)
*/
public void releasesavepoint savepoint savepoint  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#rollback()
*/
public void rollback   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#rollback(java.sql.savepoint)
*/
public void rollback savepoint savepoint  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#setautocommit(boolean)
*/
public void setautocommit boolean autocommit  throws sqlexception
if  autocommit
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#setcatalog(java.lang.string)
*/
public void setcatalog string catalog  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#setclientinfo(java.util.properties)
*/
public void setclientinfo properties properties
throws sqlclientinfoexception
// todo auto-generated method stub
throw new sqlclientinfoexception    null
/*
* (non-javadoc)
*
* @see java.sql.connection#setclientinfo(java.lang.string, java.lang.string)
*/
public void setclientinfo string name  string value
throws sqlclientinfoexception
// todo auto-generated method stub
throw new sqlclientinfoexception    null
/*
* (non-javadoc)
*
* @see java.sql.connection#setholdability(int)
*/
public void setholdability int holdability  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
public void setnetworktimeout executor executor  int milliseconds  throws sqlexception
// jdk 1.7
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#setreadonly(boolean)
*/
public void setreadonly boolean readonly  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#setsavepoint()
*/
public savepoint setsavepoint   throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#setsavepoint(java.lang.string)
*/
public savepoint setsavepoint string name  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
public void setschema string schema  throws sqlexception
// jdk 1.7
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.connection#settransactionisolation(int)
*/
public void settransactionisolation int level  throws sqlexception
// todo: throw an exception?
/*
* (non-javadoc)
*
* @see java.sql.connection#settypemap(java.util.map)
*/
public void settypemap map<string  class<?>> map  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.wrapper#iswrapperfor(java.lang.class)
*/
public boolean iswrapperfor class<?> iface  throws sqlexception
// todo auto-generated method stub
throw new sqlexception
/*
* (non-javadoc)
*
* @see java.sql.wrapper#unwrap(java.lang.class)
*/
public <t> t unwrap class<t> iface  throws sqlexception
// todo auto-generated method stub
throw new sqlexception