/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql optimizer listbucketingpruner
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive ql exec filteroperator
import org apache hadoop hive ql exec tablescanoperator
import org apache hadoop hive ql exec udfargumentexception
import org apache hadoop hive ql lib nodeprocessor
import org apache hadoop hive ql lib nodeprocessorctx
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql optimizer pruneroperatorfactory
import org apache hadoop hive ql optimizer pcr pcropprocfactory
import org apache hadoop hive ql optimizer ppr partitionpruner
import org apache hadoop hive ql parse parsecontext
import org apache hadoop hive ql parse prunedpartitionlist
import org apache hadoop hive ql parse semanticexception
/**
* walk through top operators in tree to find all partitions.
*
* it should be done already in by {@link pcropprocfactory}
*
*/
public class lbpartitionprocfactory extends pruneroperatorfactory
static final log log   logfactory getlog listbucketingpruner class getname
/**
* retrieve partitions for the filter. this is called only when
* the filter follows a table scan operator.
*/
public static class lbprpartitionfilterpruner extends filterpruner
@override
protected void generatepredicate nodeprocessorctx procctx  filteroperator fop
tablescanoperator top  throws semanticexception  udfargumentexception
lboppartitionwalkerctx owc    lboppartitionwalkerctx  procctx
//run partition pruner to get partitions
parsecontext parsectx   owc getparsecontext
prunedpartitionlist prunedpartlist
try
string alias    string  parsectx gettopops   keyset   toarray
prunedpartlist   partitionpruner prune top  parsectx  alias
catch  hiveexception e
// has to use full name to make sure it does not conflict with
// org.apache.commons.lang.stringutils
throw new semanticexception e getmessage    e
if  prunedpartlist    null
owc setpartitions prunedpartlist
public static nodeprocessor getfilterproc
return new lbprpartitionfilterpruner
private lbpartitionprocfactory
// prevent instantiation