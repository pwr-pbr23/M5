/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hive service cli session
import java util hashmap
import java util list
import java util map
import java util concurrent executorservice
import java util concurrent executors
import java util concurrent future
import java util concurrent timeunit
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql hooks hookutils
import org apache hadoop hive conf hiveconf confvars
import org apache hive service compositeservice
import org apache hive service cli hivesqlexception
import org apache hive service cli sessionhandle
import org apache hive service cli operation operationmanager
/**
* sessionmanager.
*
*/
public class sessionmanager extends compositeservice
private static final log log   logfactory getlog compositeservice class
private hiveconf hiveconf
private final map<sessionhandle  hivesession> handletosession   new hashmap<sessionhandle  hivesession>
private operationmanager operationmanager   new operationmanager
private static final object sessionmaplock   new object
private executorservice backgroundoperationpool
public sessionmanager
super
@override
public synchronized void init hiveconf hiveconf
this hiveconf   hiveconf
operationmanager   new operationmanager
int backgroundpoolsize   hiveconf getintvar confvars hive_server2_async_exec_threads
log info     backgroundpoolsize
backgroundoperationpool   executors newfixedthreadpool backgroundpoolsize
addservice operationmanager
super init hiveconf
@override
public synchronized void start
super start
// todo
@override
public synchronized void stop
// todo
super stop
if  backgroundoperationpool    null
backgroundoperationpool shutdown
long timeout   hiveconf getlongvar confvars hive_server2_async_exec_shutdown_timeout
try
backgroundoperationpool awaittermination timeout  timeunit seconds
catch  interruptedexception exc
log warn     timeout
exc
public sessionhandle opensession string username  string password  map<string  string> sessionconf
throws hivesqlexception
return opensession username  password  sessionconf  false  null
public sessionhandle opensession string username  string password  map<string  string> sessionconf
boolean withimpersonation  string delegationtoken  throws hivesqlexception
if  username    null
username   threadlocalusername get
hivesession session
if  withimpersonation
hivesessionimplwithugi hivesessionugi   new hivesessionimplwithugi username  password
sessionconf  delegationtoken
session   hivesessionproxy getproxy hivesessionugi  hivesessionugi getsessionugi
hivesessionugi setproxysession session
else
session   new hivesessionimpl username  password  sessionconf
session setsessionmanager this
session setoperationmanager operationmanager
synchronized sessionmaplock
handletosession put session getsessionhandle    session
try
executesessionhooks session
catch  exception e
throw new hivesqlexception    e
return session getsessionhandle
public void closesession sessionhandle sessionhandle  throws hivesqlexception
hivesession session
synchronized sessionmaplock
session   handletosession remove sessionhandle
if  session    null
throw new hivesqlexception
session close
public hivesession getsession sessionhandle sessionhandle  throws hivesqlexception
hivesession session
synchronized sessionmaplock
session   handletosession get sessionhandle
if  session    null
throw new hivesqlexception     sessionhandle
return session
public operationmanager getoperationmanager
return operationmanager
private static threadlocal<string> threadlocalipaddress   new threadlocal<string>
@override
protected synchronized string initialvalue
return null
public static void setipaddress string ipaddress
threadlocalipaddress set ipaddress
private void clearipaddress
threadlocalipaddress remove
private static threadlocal<string> threadlocalusername   new threadlocal<string>
@override
protected synchronized string initialvalue
return null
public static void setusername string username
threadlocalusername set username
private void clearusername
threadlocalusername remove
// execute session hooks
private void executesessionhooks hivesession session  throws exception
list<hivesessionhook> sessionhooks   hookutils gethooks hiveconf
hiveconf confvars hive_server2_session_hook  hivesessionhook class
for  hivesessionhook sessionhook   sessionhooks
sessionhook run new hivesessionhookcontextimpl session
public future<?> submitbackgroundoperation runnable r
return backgroundoperationpool submit r