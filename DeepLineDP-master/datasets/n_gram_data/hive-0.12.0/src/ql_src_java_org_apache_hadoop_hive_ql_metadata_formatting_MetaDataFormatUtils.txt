/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql metadata formatting
import java util arraylist
import java util collections
import java util date
import java util hashmap
import java util list
import java util map
import java util map entry
import java util set
import org apache commons lang stringescapeutils
import org apache hadoop hive conf hiveconf
import org apache hadoop hive metastore tabletype
import org apache hadoop hive metastore api fieldschema
import org apache hadoop hive metastore api index
import org apache hadoop hive metastore api storagedescriptor
import org apache hadoop hive ql index hiveindex
import org apache hadoop hive ql index hiveindex indextype
import org apache hadoop hive ql metadata partition
import org apache hadoop hive ql metadata table
import org apache hadoop hive ql plan desctabledesc
import org apache hadoop hive ql plan planutils
import org apache hadoop hive ql plan showindexesdesc
/**
* this class provides methods to format table and index information.
*
*/
public final class metadataformatutils
public static final string field_delim
public static final string line_delim
static final int default_stringbuilder_size   2048
private static final int alignment   20
private metadataformatutils
private static void formatcolumnsheader stringbuilder columninformation
columninformation append        easy for shell scripts to ignore
formatoutput getcolumnsheader    columninformation
columninformation append line_delim
public static string getallcolumnsinformation list<fieldschema> cols
boolean printheader
stringbuilder columninformation   new stringbuilder default_stringbuilder_size
if printheader
formatcolumnsheader columninformation
formatallfields columninformation  cols
return columninformation tostring
public static string getallcolumnsinformation list<fieldschema> cols  list<fieldschema> partcols
boolean printheader
stringbuilder columninformation   new stringbuilder default_stringbuilder_size
if printheader
formatcolumnsheader columninformation
formatallfields columninformation  cols
if   partcols    null       partcols isempty
columninformation append line_delim  append
append line_delim
formatcolumnsheader columninformation
formatallfields columninformation  partcols
return columninformation tostring
private static void formatallfields stringbuilder tableinfo  list<fieldschema> cols
for  fieldschema col   cols
formatoutput col getname    col gettype    getcomment col   tableinfo
public static string getallcolumnsinformation index index
stringbuilder indexinfo   new stringbuilder default_stringbuilder_size
list<string> indexcolumns   new arraylist<string>
indexcolumns add index getindexname
indexcolumns add index getorigtablename
// index key names
list<fieldschema> indexkeys   index getsd   getcols
stringbuilder keystring   new stringbuilder
boolean first   true
for  fieldschema key   indexkeys
if   first
keystring append
keystring append key getname
first   false
indexcolumns add keystring tostring
indexcolumns add index getindextablename
// index type
string indexhandlerclass   index getindexhandlerclass
indextype indextype   hiveindex getindextypebyclassname indexhandlerclass
indexcolumns add indextype getname
indexcolumns add index getparameters   get
formatoutput indexcolumns toarray new string   indexinfo
return indexinfo tostring
public static string getpartitioninformation partition part
stringbuilder tableinfo   new stringbuilder default_stringbuilder_size
// table metadata
tableinfo append line_delim  append    append line_delim
getpartitionmetadatainformation tableinfo  part
// storage information.
if  part gettable   gettabletype      tabletype virtual_view
tableinfo append line_delim  append    append line_delim
getstoragedescriptorinfo tableinfo  part gettpartition   getsd
return tableinfo tostring
public static string gettableinformation table table
stringbuilder tableinfo   new stringbuilder default_stringbuilder_size
// table metadata
tableinfo append line_delim  append    append line_delim
gettablemetadatainformation tableinfo  table
// storage information.
tableinfo append line_delim  append    append line_delim
getstoragedescriptorinfo tableinfo  table getttable   getsd
if  table isview
tableinfo append line_delim  append    append line_delim
getviewinfo tableinfo  table
return tableinfo tostring
private static void getviewinfo stringbuilder tableinfo  table tbl
formatoutput    tbl getvieworiginaltext    tableinfo
formatoutput    tbl getviewexpandedtext    tableinfo
private static void getstoragedescriptorinfo stringbuilder tableinfo
storagedescriptor storagedesc
formatoutput    storagedesc getserdeinfo   getserializationlib    tableinfo
formatoutput    storagedesc getinputformat    tableinfo
formatoutput    storagedesc getoutputformat    tableinfo
formatoutput    storagedesc iscompressed   ?        tableinfo
formatoutput    string valueof storagedesc getnumbuckets     tableinfo
formatoutput    storagedesc getbucketcols   tostring    tableinfo
formatoutput    storagedesc getsortcols   tostring    tableinfo
if  storagedesc isstoredassubdirectories        optional parameter
formatoutput       tableinfo
if  null    storagedesc getskewedinfo
list<string> skewedcolnames   storagedesc getskewedinfo   getskewedcolnames
if   skewedcolnames    null      skewedcolnames size   > 0
formatoutput    skewedcolnames tostring    tableinfo
list<list<string>> skewedcolvalues   storagedesc getskewedinfo   getskewedcolvalues
if   skewedcolvalues    null      skewedcolvalues size   > 0
formatoutput    skewedcolvalues tostring    tableinfo
map<list<string>  string> skewedcolmap   storagedesc getskewedinfo
getskewedcolvaluelocationmaps
if   skewedcolmap  null      skewedcolmap size   > 0
formatoutput    skewedcolmap tostring
tableinfo
map<list<string>  string> truncatedskewedcolmap   new hashmap<list<string>  string>
// walk through existing map to truncate path so that test won't mask it
// then we can verify location is right
set<entry<list<string>  string>> entries   skewedcolmap entryset
for  entry<list<string>  string> entry   entries
truncatedskewedcolmap put entry getkey
planutils removeprefixfromwarehouseconfig entry getvalue
formatoutput
truncatedskewedcolmap tostring    tableinfo
if  storagedesc getserdeinfo   getparameterssize   > 0
tableinfo append    append line_delim
displayallparameters storagedesc getserdeinfo   getparameters    tableinfo
private static void gettablemetadatainformation stringbuilder tableinfo  table  tbl
formatoutput    tbl getdbname    tableinfo
formatoutput    tbl getowner    tableinfo
formatoutput    formatdate tbl getttable   getcreatetime     tableinfo
formatoutput    formatdate tbl getttable   getlastaccesstime     tableinfo
string protectmode   tbl getprotectmode   tostring
formatoutput    protectmode    null ?     protectmode  tableinfo
formatoutput    integer tostring tbl getretention     tableinfo
if   tbl isview
formatoutput    tbl getdatalocation   tostring    tableinfo
formatoutput    tbl gettabletype   name    tableinfo
if  tbl getparameters   size   > 0
tableinfo append    append line_delim
displayallparameters tbl getparameters    tableinfo
private static void getpartitionmetadatainformation stringbuilder tableinfo  partition part
formatoutput    part getvalues   tostring    tableinfo
formatoutput    part gettpartition   getdbname    tableinfo
formatoutput    part gettable   gettablename    tableinfo
formatoutput    formatdate part gettpartition   getcreatetime     tableinfo
formatoutput    formatdate part gettpartition   getlastaccesstime
tableinfo
string protectmode   part getprotectmode   tostring
formatoutput    protectmode    null ?     protectmode  tableinfo
formatoutput    part getlocation    tableinfo
if  part gettpartition   getparameters   size   > 0
tableinfo append    append line_delim
displayallparameters part gettpartition   getparameters    tableinfo
private static void displayallparameters map<string  string> params  stringbuilder tableinfo
list<string> keys   new arraylist<string> params keyset
collections sort keys
for  string key   keys
tableinfo append field_delim      ensures all params are indented
formatoutput key  stringescapeutils escapejava params get key    tableinfo
static string getcomment fieldschema col
return col getcomment      null ? col getcomment
private static string formatdate long timeinseconds
if  timeinseconds    0
date date   new date timeinseconds   1000
return date tostring
return
private static void formatoutput string fields  stringbuilder tableinfo
for  string field   fields
if  field    null
tableinfo append field_delim
continue
tableinfo append string format     alignment      field   append field_delim
tableinfo append line_delim
private static void formatoutput string name  string value
stringbuilder tableinfo
tableinfo append string format     alignment      name   append field_delim
tableinfo append string format     alignment      value   append line_delim
private static void formatoutput string colname  string coltype  string colcomment
stringbuilder tableinfo
tableinfo append string format     alignment      colname   append field_delim
tableinfo append string format     alignment      coltype   append field_delim
// comment indent processing for multi-line comments
// comments should be indented the same amount on each line
// if the first line comment starts indented by k,
// the following line comments should also be indented by k
string commentsegments   colcomment split
tableinfo append string format     alignment      commentsegments   append line_delim
int colnamelength   alignment > colname length   ? alignment   colname length
int coltypelength   alignment > coltype length   ? alignment   coltype length
for  int i   1  i < commentsegments length  i
tableinfo append string format     colnamelength       field_delim
coltypelength       field_delim            commentsegments   append line_delim
public static string getcolumnsheader
return desctabledesc getschema   split    split
public static string getindexcolumnsheader
stringbuilder indexcols   new stringbuilder default_stringbuilder_size
formatoutput showindexesdesc getschema   split    split     indexcols
return indexcols tostring
public static metadataformatter getformatter hiveconf conf
if    equals conf get hiveconf confvars hive_ddl_output_format varname
return new jsonmetadataformatter
else
return new textmetadataformatter conf getintvar hiveconf confvars cliprettyoutputnumcols