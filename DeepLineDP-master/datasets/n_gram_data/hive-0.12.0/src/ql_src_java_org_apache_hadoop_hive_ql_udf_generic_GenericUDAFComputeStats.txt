/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import java util arraylist
import java util list
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive ql exec description
import org apache hadoop hive ql exec udfargumenttypeexception
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql parse semanticexception
import org apache hadoop hive ql util javadatamodel
import org apache hadoop hive serde2 io doublewritable
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorfactory
import org apache hadoop hive serde2 objectinspector primitiveobjectinspector
import org apache hadoop hive serde2 objectinspector structfield
import org apache hadoop hive serde2 objectinspector structobjectinspector
import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorfactory
import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorutils
import org apache hadoop hive serde2 objectinspector primitive writabledoubleobjectinspector
import org apache hadoop hive serde2 objectinspector primitive writableintobjectinspector
import org apache hadoop hive serde2 objectinspector primitive writablelongobjectinspector
import org apache hadoop hive serde2 objectinspector primitive writablestringobjectinspector
import org apache hadoop hive serde2 typeinfo primitivetypeinfo
import org apache hadoop hive serde2 typeinfo typeinfo
import org apache hadoop io byteswritable
import org apache hadoop io intwritable
import org apache hadoop io longwritable
import org apache hadoop io text
import org apache hadoop util stringutils
/**
* genericudafcomputestats
*
*/
@description name
value
public class genericudafcomputestats extends abstractgenericudafresolver
static final log log   logfactory getlog genericudafcomputestats class getname
@override
public genericudafevaluator getevaluator typeinfo parameters
throws semanticexception
if  parameters length    2
throw new udfargumenttypeexception parameters length   1
if  parameters getcategory      objectinspector category primitive
throw new udfargumenttypeexception 0
parameters gettypename
switch    primitivetypeinfo  parameters  getprimitivecategory
case boolean
return new genericudafbooleanstatsevaluator
case byte
case short
case int
case long
case timestamp
return new genericudaflongstatsevaluator
case float
case double
return new genericudafdoublestatsevaluator
case string
case varchar
return new genericudafstringstatsevaluator
case binary
return new genericudafbinarystatsevaluator
default
throw new udfargumenttypeexception 0
parameters gettypename
/**
* genericudafbooleanstatsevaluator.
*
*/
public static class genericudafbooleanstatsevaluator extends genericudafevaluator
/* object inspector corresponding to the input parameter.
*/
private transient primitiveobjectinspector inputoi
/* partial aggregation result returned by terminatepartial. partial result is a struct
* containing a long field named "count".
*/
private transient object partialresult
/* object inspectors corresponding to the struct returned by terminatepartial and the long
* field within the struct - "count"
*/
private transient structobjectinspector soi
private transient structfield counttruesfield
private transient writablelongobjectinspector counttruesfieldoi
private transient structfield countfalsesfield
private transient writablelongobjectinspector countfalsesfieldoi
private transient structfield countnullsfield
private transient writablelongobjectinspector countnullsfieldoi
/* output of final result of the aggregation
*/
private transient object result
@override
public objectinspector init mode m  objectinspector parameters
throws hiveexception
super init m  parameters
// initialize input
if  mode    mode partial1    mode    mode complete
inputoi    primitiveobjectinspector  parameters
else
soi    structobjectinspector  parameters
counttruesfield   soi getstructfieldref
counttruesfieldoi    writablelongobjectinspector
counttruesfield getfieldobjectinspector
countfalsesfield   soi getstructfieldref
countfalsesfieldoi    writablelongobjectinspector
countfalsesfield getfieldobjectinspector
countnullsfield   soi getstructfieldref
countnullsfieldoi    writablelongobjectinspector  countnullsfield getfieldobjectinspector
// initialize output
list<objectinspector> foi   new arraylist<objectinspector>
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
list<string> fname   new arraylist<string>
fname add
fname add
fname add
fname add
partialresult   new object
partialresult   new text
partialresult   new longwritable 0
partialresult   new longwritable 0
partialresult   new longwritable 0
result   new object
result   new text
result   new longwritable 0
result   new longwritable 0
result   new longwritable 0
return objectinspectorfactory getstandardstructobjectinspector fname
foi
@aggregationtype estimable   true
public static class booleanstatsagg extends abstractaggregationbuffer
public string columntype                            datatype of column
public long counttrues      count of number of true values seen so far
public long countfalses     count of number of false values seen so far
public long countnulls      count of number of null values seen so far
@override
public int estimate
javadatamodel model   javadatamodel get
return model primitive2     3   model lengthfor columntype
@override
public aggregationbuffer getnewaggregationbuffer   throws hiveexception
booleanstatsagg result   new booleanstatsagg
reset result
return result
@override
public void reset aggregationbuffer agg  throws hiveexception
booleanstatsagg myagg    booleanstatsagg  agg
myagg columntype   new string
myagg counttrues   0
myagg countfalses   0
myagg countnulls   0
private void printdebugoutput string functionname  aggregationbuffer agg
booleanstatsagg myagg    booleanstatsagg  agg
log debug functionname
log debug
log debug myagg counttrues
log debug
log debug myagg countfalses
log debug
log debug myagg countnulls
boolean warned   false
@override
public void iterate aggregationbuffer agg  object parameters  throws hiveexception
object p   parameters
booleanstatsagg myagg    booleanstatsagg  agg
boolean emptytable   false
if  parameters    null
emptytable   true
if   emptytable
if  p    null
myagg countnulls
else
try
boolean v   primitiveobjectinspectorutils getboolean p  inputoi
if  v    false
myagg countfalses
else if  v    true
myagg counttrues
catch  numberformatexception e
if   warned
warned   true
log warn getclass   getsimplename
stringutils stringifyexception e
log warn getclass   getsimplename
@override
public object terminatepartial aggregationbuffer agg  throws hiveexception
booleanstatsagg myagg    booleanstatsagg  agg
text  partialresult  set myagg columntype
longwritable  partialresult  set myagg counttrues
longwritable  partialresult  set myagg countfalses
longwritable  partialresult  set myagg countnulls
return partialresult
@override
public void merge aggregationbuffer agg  object partial  throws hiveexception
if  partial    null
booleanstatsagg myagg    booleanstatsagg  agg
object partialcount   soi getstructfielddata partial  counttruesfield
myagg counttrues    counttruesfieldoi get partialcount
partialcount   soi getstructfielddata partial  countfalsesfield
myagg countfalses    countfalsesfieldoi get partialcount
partialcount   soi getstructfielddata partial  countnullsfield
myagg countnulls    countnullsfieldoi get partialcount
@override
public object terminate aggregationbuffer agg  throws hiveexception
booleanstatsagg myagg    booleanstatsagg  agg
text result  set myagg columntype
longwritable result  set myagg counttrues
longwritable result  set myagg countfalses
longwritable result  set myagg countnulls
return result
/**
* genericudaflongstatsevaluator.
*
*/
public static class genericudaflongstatsevaluator extends genericudafevaluator
/* object inspector corresponding to the input parameter.
*/
private transient primitiveobjectinspector inputoi
private transient primitiveobjectinspector numvectorsoi
/* partial aggregation result returned by terminatepartial. partial result is a struct
* containing a long field named "count".
*/
private transient object partialresult
/* object inspectors corresponding to the struct returned by terminatepartial and the long
* field within the struct - "count"
*/
private transient structobjectinspector soi
private transient structfield minfield
private transient writablelongobjectinspector minfieldoi
private transient structfield maxfield
private transient writablelongobjectinspector maxfieldoi
private transient structfield countnullsfield
private transient writablelongobjectinspector countnullsfieldoi
private transient structfield ndvfield
private transient writablestringobjectinspector ndvfieldoi
private transient structfield numbitvectorsfield
private transient writableintobjectinspector numbitvectorsfieldoi
/* output of final result of the aggregation
*/
private transient object result
@override
public objectinspector init mode m  objectinspector parameters  throws hiveexception
super init m  parameters
// initialize input
if  mode    mode partial1    mode    mode complete
inputoi    primitiveobjectinspector  parameters
numvectorsoi    primitiveobjectinspector  parameters
else
soi    structobjectinspector  parameters
minfield   soi getstructfieldref
minfieldoi    writablelongobjectinspector  minfield getfieldobjectinspector
maxfield   soi getstructfieldref
maxfieldoi    writablelongobjectinspector  maxfield getfieldobjectinspector
countnullsfield   soi getstructfieldref
countnullsfieldoi    writablelongobjectinspector  countnullsfield getfieldobjectinspector
ndvfield   soi getstructfieldref
ndvfieldoi    writablestringobjectinspector  ndvfield getfieldobjectinspector
numbitvectorsfield   soi getstructfieldref
numbitvectorsfieldoi    writableintobjectinspector
numbitvectorsfield getfieldobjectinspector
// initialize output
if  mode    mode partial1    mode    mode partial2
list<objectinspector> foi   new arraylist<objectinspector>
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writableintobjectinspector
list<string> fname   new arraylist<string>
fname add
fname add
fname add
fname add
fname add
fname add
partialresult   new object
partialresult   new text
partialresult   new longwritable 0
partialresult   new longwritable 0
partialresult   new longwritable 0
partialresult   new text
partialresult   new intwritable 0
return objectinspectorfactory getstandardstructobjectinspector fname
foi
else
list<objectinspector> foi   new arraylist<objectinspector>
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
list<string> fname   new arraylist<string>
fname add
fname add
fname add
fname add
fname add
result   new object
result   new text
result   new longwritable 0
result   new longwritable 0
result   new longwritable 0
result   new longwritable 0
return objectinspectorfactory getstandardstructobjectinspector fname
foi
@aggregationtype estimable   true
public static class longstatsagg extends abstractaggregationbuffer
public string columntype
public long min                                  minimum value seen so far
public long max                                  maximum value seen so far
public long countnulls          count of number of null values seen so far
public longnumdistinctvalueestimator numdv        distinct value estimator
public boolean firstitem                         first item in the aggbuf?
public int numbitvectors
@override
public int estimate
javadatamodel model   javadatamodel get
return model primitive1     2   model primitive2     3
model lengthfor columntype    model lengthfor numdv
@override
public aggregationbuffer getnewaggregationbuffer   throws hiveexception
longstatsagg result   new longstatsagg
reset result
return result
public void initndvestimator longstatsagg aggbuffer  int numbitvectors
aggbuffer numdv   new longnumdistinctvalueestimator numbitvectors
aggbuffer numdv reset
@override
public void reset aggregationbuffer agg  throws hiveexception
longstatsagg myagg    longstatsagg  agg
myagg columntype   new string
myagg min   0
myagg max   0
myagg countnulls   0
myagg firstitem   true
boolean warned   false
@override
public void iterate aggregationbuffer agg  object parameters  throws hiveexception
object p   parameters
longstatsagg myagg    longstatsagg  agg
boolean emptytable   false
if  parameters    null
emptytable   true
if  myagg firstitem
int numvectors   0
if   emptytable
numvectors   primitiveobjectinspectorutils getint parameters  numvectorsoi
initndvestimator myagg  numvectors
myagg firstitem   false
myagg numbitvectors   numvectors
if   emptytable
//update null counter if a null value is seen
if  p    null
myagg countnulls
else
try
long v   primitiveobjectinspectorutils getlong p  inputoi
//update min counter if new value is less than min seen so far
if  v < myagg min
myagg min   v
//update max counter if new value is greater than max seen so far
if  v > myagg max
myagg max   v
// add value to numdistinctvalue estimator
myagg numdv addtoestimator v
catch  numberformatexception e
if   warned
warned   true
log warn getclass   getsimplename
stringutils stringifyexception e
log warn getclass   getsimplename
@override
public object terminatepartial aggregationbuffer agg  throws hiveexception
longstatsagg myagg    longstatsagg  agg
// serialize numdistinctvalue estimator
text t   myagg numdv serialize
// serialize rest of the field in the aggbuffer
text  partialresult  set myagg columntype
longwritable  partialresult  set myagg min
longwritable  partialresult  set myagg max
longwritable  partialresult  set myagg countnulls
text  partialresult  set t
intwritable  partialresult  set myagg numdv getnumbitvectors
return partialresult
@override
public void merge aggregationbuffer agg  object partial  throws hiveexception
if  partial    null
longstatsagg myagg    longstatsagg  agg
if  myagg firstitem
object partialvalue   soi getstructfielddata partial  numbitvectorsfield
int numvectors   numbitvectorsfieldoi get partialvalue
initndvestimator myagg  numvectors
myagg firstitem   false
myagg numbitvectors   numvectors
// update min if min is lesser than the smallest value seen so far
object partialvalue   soi getstructfielddata partial  minfield
if  myagg min > minfieldoi get partialvalue
myagg min   minfieldoi get partialvalue
// update max if max is greater than the largest value seen so far
partialvalue   soi getstructfielddata partial  maxfield
if  myagg max < maxfieldoi get partialvalue
myagg max   maxfieldoi get partialvalue
// update the null counter
partialvalue   soi getstructfielddata partial  countnullsfield
myagg countnulls    countnullsfieldoi get partialvalue
// merge numdistinctvalue estimators
partialvalue   soi getstructfielddata partial  ndvfield
string v   ndvfieldoi getprimitivejavaobject partialvalue
numdistinctvalueestimator o   new numdistinctvalueestimator v  myagg numbitvectors
myagg numdv mergeestimators o
@override
public object terminate aggregationbuffer agg  throws hiveexception
longstatsagg myagg    longstatsagg  agg
long numdv   0
if  myagg numbitvectors    0
numdv   myagg numdv estimatenumdistinctvalues
// serialize the result struct
text  result  set myagg columntype
longwritable  result  set myagg min
longwritable  result  set myagg max
longwritable  result  set myagg countnulls
longwritable  result  set numdv
return result
/**
* genericudafdoublestatsevaluator.
*
*/
public static class genericudafdoublestatsevaluator extends genericudafevaluator
/* object inspector corresponding to the input parameter.
*/
private transient primitiveobjectinspector inputoi
private transient primitiveobjectinspector numvectorsoi
/* partial aggregation result returned by terminatepartial. partial result is a struct
* containing a long field named "count".
*/
private transient object partialresult
/* object inspectors corresponding to the struct returned by terminatepartial and the long
* field within the struct - "count"
*/
private transient structobjectinspector soi
private transient structfield minfield
private transient writabledoubleobjectinspector minfieldoi
private transient structfield maxfield
private transient writabledoubleobjectinspector maxfieldoi
private transient structfield countnullsfield
private transient writablelongobjectinspector countnullsfieldoi
private transient structfield ndvfield
private transient writablestringobjectinspector ndvfieldoi
private transient structfield numbitvectorsfield
private transient writableintobjectinspector numbitvectorsfieldoi
/* output of final result of the aggregation
*/
private transient object result
@override
public objectinspector init mode m  objectinspector parameters  throws hiveexception
super init m  parameters
// initialize input
if  mode    mode partial1    mode    mode complete
inputoi    primitiveobjectinspector  parameters
numvectorsoi    primitiveobjectinspector  parameters
else
soi    structobjectinspector  parameters
minfield   soi getstructfieldref
minfieldoi    writabledoubleobjectinspector  minfield getfieldobjectinspector
maxfield   soi getstructfieldref
maxfieldoi    writabledoubleobjectinspector  maxfield getfieldobjectinspector
countnullsfield   soi getstructfieldref
countnullsfieldoi    writablelongobjectinspector  countnullsfield getfieldobjectinspector
ndvfield   soi getstructfieldref
ndvfieldoi    writablestringobjectinspector  ndvfield getfieldobjectinspector
numbitvectorsfield   soi getstructfieldref
numbitvectorsfieldoi    writableintobjectinspector
numbitvectorsfield getfieldobjectinspector
// initialize output
if  mode    mode partial1    mode    mode partial2
list<objectinspector> foi   new arraylist<objectinspector>
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writabledoubleobjectinspector
foi add primitiveobjectinspectorfactory writabledoubleobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writableintobjectinspector
list<string> fname   new arraylist<string>
fname add
fname add
fname add
fname add
fname add
fname add
partialresult   new object
partialresult   new text
partialresult   new doublewritable 0
partialresult   new doublewritable 0
partialresult   new longwritable 0
partialresult   new text
partialresult   new intwritable 0
return objectinspectorfactory getstandardstructobjectinspector fname
foi
else
list<objectinspector> foi   new arraylist<objectinspector>
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writabledoubleobjectinspector
foi add primitiveobjectinspectorfactory writabledoubleobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
list<string> fname   new arraylist<string>
fname add
fname add
fname add
fname add
fname add
result   new object
result   new text
result   new doublewritable 0
result   new doublewritable 0
result   new longwritable 0
result   new longwritable 0
return objectinspectorfactory getstandardstructobjectinspector fname
foi
@aggregationtype estimable   true
public static class doublestatsagg extends abstractaggregationbuffer
public string columntype
public double min                                minimum value seen so far
public double max                                maximum value seen so far
public long countnulls          count of number of null values seen so far
public doublenumdistinctvalueestimator numdv      distinct value estimator
public boolean firstitem                         first item in the aggbuf?
public int numbitvectors
@override
public int estimate
javadatamodel model   javadatamodel get
return model primitive1     2   model primitive2     3
model lengthfor columntype    model lengthfor numdv
@override
public aggregationbuffer getnewaggregationbuffer   throws hiveexception
doublestatsagg result   new doublestatsagg
reset result
return result
public void initndvestimator doublestatsagg aggbuffer  int numbitvectors
aggbuffer numdv   new doublenumdistinctvalueestimator numbitvectors
aggbuffer numdv reset
@override
public void reset aggregationbuffer agg  throws hiveexception
doublestatsagg myagg    doublestatsagg  agg
myagg columntype   new string
myagg min   0 0
myagg max   0 0
myagg countnulls   0
myagg firstitem   true
boolean warned   false
@override
public void iterate aggregationbuffer agg  object parameters  throws hiveexception
object p   parameters
doublestatsagg myagg    doublestatsagg  agg
boolean emptytable   false
if  parameters    null
emptytable   true
if  myagg firstitem
int numvectors   0
if   emptytable
numvectors   primitiveobjectinspectorutils getint parameters  numvectorsoi
initndvestimator myagg  numvectors
myagg firstitem   false
myagg numbitvectors   numvectors
if   emptytable
//update null counter if a null value is seen
if  p    null
myagg countnulls
else
try
double v   primitiveobjectinspectorutils getdouble p  inputoi
//update min counter if new value is less than min seen so far
if  v < myagg min
myagg min   v
//update max counter if new value is greater than max seen so far
if  v > myagg max
myagg max   v
// add value to numdistinctvalue estimator
myagg numdv addtoestimator v
catch  numberformatexception e
if   warned
warned   true
log warn getclass   getsimplename
stringutils stringifyexception e
log warn getclass   getsimplename
@override
public object terminatepartial aggregationbuffer agg  throws hiveexception
doublestatsagg myagg    doublestatsagg  agg
// serialize numdistinctvalue estimator
text t   myagg numdv serialize
// serialize the rest of the values in the aggbuffer
text  partialresult  set myagg columntype
doublewritable  partialresult  set myagg min
doublewritable  partialresult  set myagg max
longwritable  partialresult  set myagg countnulls
text  partialresult  set t
intwritable  partialresult  set myagg numbitvectors
return partialresult
@override
public void merge aggregationbuffer agg  object partial  throws hiveexception
if  partial    null
doublestatsagg myagg    doublestatsagg  agg
if  myagg firstitem
object partialvalue   soi getstructfielddata partial  numbitvectorsfield
int numvectors   numbitvectorsfieldoi get partialvalue
initndvestimator myagg  numvectors
myagg firstitem   false
myagg numbitvectors   numvectors
// update min if min is lesser than the smallest value seen so far
object partialvalue   soi getstructfielddata partial  minfield
if  myagg min > minfieldoi get partialvalue
myagg min   minfieldoi get partialvalue
// update max if max is greater than the largest value seen so far
partialvalue   soi getstructfielddata partial  maxfield
if  myagg max < maxfieldoi get partialvalue
myagg max   maxfieldoi get partialvalue
// update the null counter
partialvalue   soi getstructfielddata partial  countnullsfield
myagg countnulls    countnullsfieldoi get partialvalue
// merge numdistinctvalue estimators
partialvalue   soi getstructfielddata partial  ndvfield
string v   ndvfieldoi getprimitivejavaobject partialvalue
numdistinctvalueestimator o   new numdistinctvalueestimator v  myagg numbitvectors
myagg numdv mergeestimators o
@override
public object terminate aggregationbuffer agg  throws hiveexception
doublestatsagg myagg    doublestatsagg  agg
long numdv   0
if  myagg numbitvectors    0
numdv   myagg numdv estimatenumdistinctvalues
// serialize the result struct
text  result  set myagg columntype
doublewritable  result  set myagg min
doublewritable  result  set myagg max
longwritable  result  set myagg countnulls
longwritable  result  set numdv
return result
/**
* genericudafstringstatsevaluator.
*
*/
public static class genericudafstringstatsevaluator extends genericudafevaluator
/* object inspector corresponding to the input parameter.
*/
private transient primitiveobjectinspector inputoi
private transient primitiveobjectinspector numvectorsoi
/* partial aggregation result returned by terminatepartial. partial result is a struct
* containing a long field named "count".
*/
private transient object partialresult
/* object inspectors corresponding to the struct returned by terminatepartial and the
* fields within the struct - "maxlength", "sumlength", "count", "countnulls", "ndv"
*/
private transient structobjectinspector soi
private transient structfield maxlengthfield
private transient writablelongobjectinspector maxlengthfieldoi
private transient structfield sumlengthfield
private transient writablelongobjectinspector sumlengthfieldoi
private transient structfield countfield
private transient writablelongobjectinspector countfieldoi
private transient structfield countnullsfield
private transient writablelongobjectinspector countnullsfieldoi
private transient structfield ndvfield
private transient writablestringobjectinspector ndvfieldoi
private transient structfield numbitvectorsfield
private transient writableintobjectinspector numbitvectorsfieldoi
/* output of final result of the aggregation
*/
private transient object result
@override
public objectinspector init mode m  objectinspector parameters  throws hiveexception
super init m  parameters
// initialize input
if  mode    mode partial1    mode    mode complete
inputoi    primitiveobjectinspector  parameters
numvectorsoi    primitiveobjectinspector  parameters
else
soi    structobjectinspector  parameters
maxlengthfield   soi getstructfieldref
maxlengthfieldoi    writablelongobjectinspector  maxlengthfield getfieldobjectinspector
sumlengthfield   soi getstructfieldref
sumlengthfieldoi    writablelongobjectinspector  sumlengthfield getfieldobjectinspector
countfield   soi getstructfieldref
countfieldoi    writablelongobjectinspector  countfield getfieldobjectinspector
countnullsfield   soi getstructfieldref
countnullsfieldoi    writablelongobjectinspector  countnullsfield getfieldobjectinspector
ndvfield   soi getstructfieldref
ndvfieldoi    writablestringobjectinspector  ndvfield getfieldobjectinspector
numbitvectorsfield   soi getstructfieldref
numbitvectorsfieldoi    writableintobjectinspector
numbitvectorsfield getfieldobjectinspector
// initialize output
if  mode    mode partial1    mode    mode partial2
list<objectinspector> foi   new arraylist<objectinspector>
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writableintobjectinspector
list<string> fname   new arraylist<string>
fname add
fname add
fname add
fname add
fname add
fname add
fname add
partialresult   new object
partialresult   new text
partialresult   new longwritable 0
partialresult   new longwritable 0
partialresult   new longwritable 0
partialresult   new longwritable 0
partialresult   new text
partialresult   new intwritable 0
return objectinspectorfactory getstandardstructobjectinspector fname
foi
else
list<objectinspector> foi   new arraylist<objectinspector>
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writabledoubleobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
list<string> fname   new arraylist<string>
fname add
fname add
fname add
fname add
fname add
result   new object
result   new text
result   new longwritable 0
result   new doublewritable 0
result   new longwritable 0
result   new longwritable 0
return objectinspectorfactory getstandardstructobjectinspector fname
foi
@aggregationtype estimable   true
public static class stringstatsagg extends abstractaggregationbuffer
public string columntype
public long maxlength                               maximum length seen so far
public long sumlength                 sum of lengths of all values seen so far
public long count                              count of all values seen so far
public long countnulls              count of number of null values seen so far
public stringnumdistinctvalueestimator numdv          distinct value estimator
public int numbitvectors
public boolean firstitem
@override
public int estimate
javadatamodel model   javadatamodel get
return model primitive1     2   model primitive2     4
model lengthfor columntype    model lengthfor numdv
@override
public aggregationbuffer getnewaggregationbuffer   throws hiveexception
stringstatsagg result   new stringstatsagg
reset result
return result
public void initndvestimator stringstatsagg aggbuffer  int numbitvectors
aggbuffer numdv   new stringnumdistinctvalueestimator numbitvectors
aggbuffer numdv reset
@override
public void reset aggregationbuffer agg  throws hiveexception
stringstatsagg myagg    stringstatsagg  agg
myagg columntype   new string
myagg maxlength   0
myagg sumlength   0
myagg count   0
myagg countnulls   0
myagg firstitem   true
boolean warned   false
@override
public void iterate aggregationbuffer agg  object parameters  throws hiveexception
object p   parameters
stringstatsagg myagg    stringstatsagg  agg
boolean emptytable   false
if  parameters    null
emptytable   true
if  myagg firstitem
int numvectors   0
if   emptytable
numvectors   primitiveobjectinspectorutils getint parameters  numvectorsoi
initndvestimator myagg  numvectors
myagg firstitem   false
myagg numbitvectors   numvectors
if   emptytable
// update null counter if a null value is seen
if  p    null
myagg countnulls
else
try
string v   primitiveobjectinspectorutils getstring p  inputoi
// update max length if new length is greater than the ones seen so far
int len   v length
if  len > myagg maxlength
myagg maxlength   len
// update sum length with the new length
myagg sumlength    len
// increment count of values seen so far
myagg count
// add string value to numdistinctvalue estimator
myagg numdv addtoestimator v
catch  numberformatexception e
if   warned
warned   true
log warn getclass   getsimplename
stringutils stringifyexception e
log warn getclass   getsimplename
@override
public object terminatepartial aggregationbuffer agg  throws hiveexception
stringstatsagg myagg    stringstatsagg  agg
// serialize numdistinctvalue estimator
text t   myagg numdv serialize
// serialize the rest of the values in the aggbuffer
text  partialresult  set myagg columntype
longwritable  partialresult  set myagg maxlength
longwritable  partialresult  set myagg sumlength
longwritable  partialresult  set myagg count
longwritable  partialresult  set myagg countnulls
text  partialresult  set t
intwritable  partialresult  set myagg numbitvectors
return partialresult
@override
public void merge aggregationbuffer agg  object partial  throws hiveexception
if  partial    null
stringstatsagg myagg    stringstatsagg  agg
if  myagg firstitem
object partialvalue   soi getstructfielddata partial  numbitvectorsfield
int numvectors   numbitvectorsfieldoi get partialvalue
initndvestimator myagg  numvectors
myagg firstitem   false
myagg numbitvectors   numvectors
// update maxlength if length is greater than the largest value seen so far
object partialvalue   soi getstructfielddata partial  maxlengthfield
if  myagg maxlength < maxlengthfieldoi get partialvalue
myagg maxlength   maxlengthfieldoi get partialvalue
// update sum of the length of the values seen so far
partialvalue   soi getstructfielddata partial  sumlengthfield
myagg sumlength    sumlengthfieldoi get partialvalue
// update the count of the number of values seen so far
partialvalue   soi getstructfielddata partial  countfield
myagg count    countfieldoi get partialvalue
// update the null counter
partialvalue   soi getstructfielddata partial  countnullsfield
myagg countnulls    countnullsfieldoi get partialvalue
// merge numdistinctvalue estimators
partialvalue   soi getstructfielddata partial  ndvfield
string v   ndvfieldoi getprimitivejavaobject partialvalue
numdistinctvalueestimator o   new numdistinctvalueestimator v  myagg numbitvectors
myagg numdv mergeestimators o
@override
public object terminate aggregationbuffer agg  throws hiveexception
stringstatsagg myagg    stringstatsagg  agg
long numdv   0
double avglength   0 0
long total   myagg count   myagg countnulls
if  myagg numbitvectors    0
numdv   myagg numdv estimatenumdistinctvalues
if  total    0
avglength    double  myagg sumlength    1 0   total
// serialize the result struct
text  result  set myagg columntype
longwritable  result  set myagg maxlength
doublewritable  result  set avglength
longwritable  result  set myagg countnulls
longwritable  result  set numdv
return result
/**
* genericudafbinarystatsevaluator.
*
*/
public static class genericudafbinarystatsevaluator extends genericudafevaluator
/* object inspector corresponding to the input parameter.
*/
private transient primitiveobjectinspector inputoi
/* partial aggregation result returned by terminatepartial. partial result is a struct
* containing a long field named "count".
*/
private transient object partialresult
/* object inspectors corresponding to the struct returned by terminatepartial and the
* fields within the struct - "maxlength", "sumlength", "count", "countnulls"
*/
private transient structobjectinspector soi
private transient structfield maxlengthfield
private transient writablelongobjectinspector maxlengthfieldoi
private transient structfield sumlengthfield
private transient writablelongobjectinspector sumlengthfieldoi
private transient structfield countfield
private transient writablelongobjectinspector countfieldoi
private transient structfield countnullsfield
private transient writablelongobjectinspector countnullsfieldoi
/* output of final result of the aggregation
*/
private transient object result
@override
public objectinspector init mode m  objectinspector parameters  throws hiveexception
super init m  parameters
// initialize input
if  mode    mode partial1    mode    mode complete
inputoi    primitiveobjectinspector  parameters
else
soi    structobjectinspector  parameters
maxlengthfield   soi getstructfieldref
maxlengthfieldoi    writablelongobjectinspector  maxlengthfield getfieldobjectinspector
sumlengthfield   soi getstructfieldref
sumlengthfieldoi    writablelongobjectinspector  sumlengthfield getfieldobjectinspector
countfield   soi getstructfieldref
countfieldoi    writablelongobjectinspector  countfield getfieldobjectinspector
countnullsfield   soi getstructfieldref
countnullsfieldoi    writablelongobjectinspector  countnullsfield getfieldobjectinspector
// initialize output
if  mode    mode partial1    mode    mode partial2
list<objectinspector> foi   new arraylist<objectinspector>
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
list<string> fname   new arraylist<string>
fname add
fname add
fname add
fname add
fname add
partialresult   new object
partialresult   new text
partialresult   new longwritable 0
partialresult   new longwritable 0
partialresult   new longwritable 0
partialresult   new longwritable 0
return objectinspectorfactory getstandardstructobjectinspector fname
foi
else
list<objectinspector> foi   new arraylist<objectinspector>
foi add primitiveobjectinspectorfactory writablestringobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writabledoubleobjectinspector
foi add primitiveobjectinspectorfactory writablelongobjectinspector
list<string> fname   new arraylist<string>
fname add
fname add
fname add
fname add
result   new object
result   new text
result   new longwritable 0
result   new doublewritable 0
result   new longwritable 0
return objectinspectorfactory getstandardstructobjectinspector fname
foi
@aggregationtype estimable   true
public static class binarystatsagg extends abstractaggregationbuffer
public string columntype
public long maxlength                               maximum length seen so far
public long sumlength                 sum of lengths of all values seen so far
public long count                              count of all values seen so far
public long countnulls              count of number of null values seen so far
@override
public int estimate
javadatamodel model   javadatamodel get
return model primitive2     4   model lengthfor columntype
@override
public aggregationbuffer getnewaggregationbuffer   throws hiveexception
binarystatsagg result   new binarystatsagg
reset result
return result
@override
public void reset aggregationbuffer agg  throws hiveexception
binarystatsagg myagg    binarystatsagg  agg
myagg columntype   new string
myagg maxlength   0
myagg sumlength   0
myagg count   0
myagg countnulls   0
boolean warned   false
@override
public void iterate aggregationbuffer agg  object parameters  throws hiveexception
object p   parameters
binarystatsagg myagg    binarystatsagg  agg
boolean emptytable   false
if  parameters    null
emptytable   true
if   emptytable
// update null counter if a null value is seen
if  p    null
myagg countnulls
else
try
byteswritable v   primitiveobjectinspectorutils getbinary p  inputoi
// update max length if new length is greater than the ones seen so far
int len   v getlength
if  len > myagg maxlength
myagg maxlength   len
// update sum length with the new length
myagg sumlength    len
// increment count of values seen so far
myagg count
catch  numberformatexception e
if   warned
warned   true
log warn getclass   getsimplename
stringutils stringifyexception e
log warn getclass   getsimplename
@override
public object terminatepartial aggregationbuffer agg  throws hiveexception
binarystatsagg myagg    binarystatsagg  agg
// serialize aggbuffer
text  partialresult  set myagg columntype
longwritable  partialresult  set myagg maxlength
longwritable  partialresult  set myagg sumlength
longwritable  partialresult  set myagg count
longwritable  partialresult  set myagg countnulls
return partialresult
@override
public void merge aggregationbuffer agg  object partial  throws hiveexception
if  partial    null
binarystatsagg myagg    binarystatsagg  agg
// update maxlength if length is greater than the largest value seen so far
object partialvalue   soi getstructfielddata partial  maxlengthfield
if  myagg maxlength < maxlengthfieldoi get partialvalue
myagg maxlength   maxlengthfieldoi get partialvalue
// update sum of the length of the values seen so far
partialvalue   soi getstructfielddata partial  sumlengthfield
myagg sumlength    sumlengthfieldoi get partialvalue
// update the count of the number of values seen so far
partialvalue   soi getstructfielddata partial  countfield
myagg count    countfieldoi get partialvalue
// update the null counter
partialvalue   soi getstructfielddata partial  countnullsfield
myagg countnulls    countnullsfieldoi get partialvalue
@override
public object terminate aggregationbuffer agg  throws hiveexception
binarystatsagg myagg    binarystatsagg  agg
double avglength   0 0
long count   myagg count   myagg countnulls
if  count    0
avglength    double  myagg sumlength    1 0    myagg count   myagg countnulls
// serialize the result struct
text  result  set myagg columntype
longwritable  result  set myagg maxlength
doublewritable  result  set avglength
longwritable  result  set myagg countnulls
return result