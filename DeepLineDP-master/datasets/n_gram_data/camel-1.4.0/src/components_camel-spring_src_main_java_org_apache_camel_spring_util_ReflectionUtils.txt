/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel spring util
import java lang annotation annotation
import java lang reflect field
import java lang reflect invocationtargetexception
import java lang reflect method
import java lang reflect modifier
/**
* reflection utilities, extending spring reflectionutils.
*/
public class reflectionutils extends org springframework util reflectionutils
public static <t extends annotation> void calllifecyclemethod final object bean  final class<t> annotation
reflectionutils dowithmethods bean getclass    new reflectionutils methodcallback
public void dowith method method  throws illegalargumentexception  illegalaccessexception
if  method getannotation annotation     null
try
method invoke bean   object null
catch  illegalargumentexception ex
throw new illegalstateexception     method       bean getclass        ex
catch  illegalaccessexception ex
throw new unsupportedoperationexception ex tostring
catch  invocationtargetexception ex
throw new unsupportedoperationexception    ex gettargetexception
public static void setfield field f  object instance  object value
try
boolean oldaccessible   f isaccessible
boolean shouldsetaccessible    modifier ispublic f getmodifiers        oldaccessible
if  shouldsetaccessible
f setaccessible true
f set instance  value
if  shouldsetaccessible
f setaccessible oldaccessible
catch  illegalargumentexception ex
throw new unsupportedoperationexception     value getclass         f
catch  illegalaccessexception ex
reflectionutils handlereflectionexception ex