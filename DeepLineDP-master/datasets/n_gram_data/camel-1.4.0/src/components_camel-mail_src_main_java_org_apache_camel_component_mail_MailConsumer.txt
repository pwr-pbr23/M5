/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component mail
import javax mail flags
import javax mail folder
import javax mail foldernotfoundexception
import javax mail message
import javax mail messagingexception
import javax mail store
import javax mail search flagterm
import org apache camel processor
import org apache camel impl scheduledpollconsumer
import org apache commons logging log
import org apache commons logging logfactory
import org springframework mail javamail javamailsenderimpl
/**
* a {@link org.apache.camel.consumer consumer} which consumes messages from javamail using a
* {@link javax.mail.transport transport} and dispatches them to the {@link processor}
*
* @version $revision$
*/
public class mailconsumer extends scheduledpollconsumer<mailexchange>
public static final long default_consumer_delay   60   1000l
private static final transient log log   logfactory getlog mailconsumer class
private final mailendpoint endpoint
private final javamailsenderimpl sender
private folder folder
private store store
public mailconsumer mailendpoint endpoint  processor processor  javamailsenderimpl sender
super endpoint  processor
this endpoint   endpoint
this sender   sender
@override
protected void dostart   throws exception
super dostart
@override
protected void dostop   throws exception
if  folder    null    folder isopen
folder close true
if  store    null    store isconnected
store close
super dostop
protected void poll   throws exception
ensureisconnected
if  store    null    folder    null
throw new illegalstateexception
endpoint getconfiguration   getmailstoreloginformation
if  log isdebugenabled
log debug     endpoint getconfiguration   getmailstoreloginformation
if  endpoint getconfiguration   getfetchsize      0
log warn
return
// ensure folder is open
if   folder isopen
folder open folder read_write
try
int count   folder getmessagecount
if  count > 0
message messages
// should we process all messages or only unseen messages
if  endpoint getconfiguration   isprocessonlyunseenmessages
messages   folder search new flagterm new flags flags flag seen   false
else
messages   folder getmessages
processmessages messages
else if  count     1
throw new messagingexception     folder getfullname
finally
// need to ensure we release resources
if  folder isopen
folder close true
protected void ensureisconnected   throws messagingexception
mailconfiguration config   endpoint getconfiguration
if  store    null     store isconnected
store   sender getsession   getstore config getprotocol
if  log isdebugenabled
log debug     endpoint getconfiguration   getmailstoreloginformation
store connect config gethost    config getport    config getusername    config getpassword
if  folder    null
folder   store getfolder config getfoldername
if  folder    null     folder exists
throw new foldernotfoundexception folder      config getfoldername
/**
* process all the messages
*/
protected void processmessages message messages  throws exception
int fetchsize   endpoint getconfiguration   getfetchsize
int count   fetchsize     1 ? messages length   math min fetchsize  messages length
if  log isdebugenabled
log debug     count       messages length
for  int i   0  i < count  i
message message   messages
if   message getflags   contains flags flag deleted
processmessage message
flagmessageprocessed message
else
if  log isdebugenabled
log debug     mailutils dumpmessage message
/**
* strategy to process the mail message.
*/
protected void processmessage message message  throws exception
mailexchange exchange   endpoint createexchange message
if  log isdebugenabled
log debug     mailutils dumpmessage message
getprocessor   process exchange
/**
* strategy to flag the message after being processed.
*/
protected void flagmessageprocessed message message  throws messagingexception
if  endpoint getconfiguration   isdeleteprocessedmessages
message setflag flags flag deleted  true
else
message setflag flags flag seen  true