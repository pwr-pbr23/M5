/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel bam processor
import java lang reflect parameterizedtype
import java lang reflect type
import org apache camel exchange
import org apache camel expression
import org apache camel processor
import org apache camel runtimecamelexception
import org apache camel util exchangehelper
import org apache commons logging log
import org apache commons logging logfactory
import org springframework transaction transactionstatus
import org springframework transaction support transactioncallback
import org springframework transaction support transactiontemplate
/**
* a base {@link processor} for working on <a
* href="http://activemq.apache.org/camel/bam.html">bam</a> which a derived
* class would do the actual persistence such as the {@link jpabamprocessor}
*
* @version $revision$
*/
public abstract class bamprocessorsupport<t> implements processor
private static final transient log log   logfactory getlog bamprocessorsupport class
private class<t> entitytype
private expression<exchange> correlationkeyexpression
private transactiontemplate transactiontemplate
private int retrycount   20
private long retrysleep   1000l
protected bamprocessorsupport transactiontemplate transactiontemplate
expression<exchange> correlationkeyexpression
this transactiontemplate   transactiontemplate
this correlationkeyexpression   correlationkeyexpression
type type   getclass   getgenericsuperclass
if  type instanceof parameterizedtype
parameterizedtype parameterizedtype    parameterizedtype type
type arguments   parameterizedtype getactualtypearguments
if  arguments length > 0
type argumenttype   arguments
if  argumenttype instanceof class
this entitytype    class<t> argumenttype
if  entitytype    null
throw new illegalargumentexception
protected bamprocessorsupport transactiontemplate transactiontemplate
expression<exchange> correlationkeyexpression  class<t> entitytype
this transactiontemplate   transactiontemplate
this entitytype   entitytype
this correlationkeyexpression   correlationkeyexpression
public void process final exchange exchange
for  int i   1  i <  retrycount  i
if  i > 1
log info     i
try
thread sleep retrycount
catch  interruptedexception e
log debug     e  e
try
transactiontemplate execute new transactioncallback
public object dointransaction transactionstatus status
try
object key   getcorrelationkey exchange
t entity   loadentity exchange  key
if  log isdebugenabled
log debug     key       entity
processentity exchange  entity
return entity
catch  exception e
return onerror status  e
if  i > 1
log info     i
return
catch  exception e
log warn     e  e
// properties
// -----------------------------------------------------------------------
public expression<exchange> getcorrelationkeyexpression
return correlationkeyexpression
public class<t> getentitytype
return entitytype
// implemenation methods
// -----------------------------------------------------------------------
protected abstract void processentity exchange exchange  t entity  throws exception
protected abstract t loadentity exchange exchange  object key  throws exception
protected abstract class getkeytype
protected object getcorrelationkey exchange exchange  throws nocorrelationkeyexception
object value   correlationkeyexpression evaluate exchange
class keytype   getkeytype
if  keytype    null
value   exchangehelper converttotype exchange  keytype  value
if  value    null
throw new nocorrelationkeyexception this  exchange
return value
protected object onerror transactionstatus status  exception e
status setrollbackonly
log error     e  e
throw new runtimecamelexception e