/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel util
import java lang reflect array
import java util arraylist
import java util collection
import java util list
import java util map
import org w3c dom nodelist
/**
* a number of helper methods for working with collections
*
* @version $revision$
*/
public final class collectionhelper
/**
* utility classes should not have a public constructor.
*/
private collectionhelper
/**
* returns the size of the collection if it can be determined to be a collection
*/
public static integer size object value
if  value    null
if  value instanceof collection
collection collection    collection value
return collection size
else if  value instanceof map
map map    map value
return map size
else if  value instanceof object
object array    object value
return array length
else if  value getclass   isarray
return array getlength value
else if  value instanceof nodelist
nodelist nodelist    nodelist value
return nodelist getlength
return null
/**
* sets the value of the entry in the map for the given key, though if the
* map already contains a value for the given key then the value is appended
* to a list of values.
*
* @param map the map to add the entry to
* @param key the key in the map
* @param value the value to put in the map
*/
public static void appendvalue map map  object key  object value
object oldvalue   map get key
if  oldvalue    null
list list
if  oldvalue instanceof list
list    list oldvalue
else
list   new arraylist
list add oldvalue
list add value
else
map put key  value