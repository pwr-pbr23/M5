/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel impl
import org apache camel camelcontext
import org apache camel nosuchlanguageexception
import org apache camel spi language
import org apache camel spi languageresolver
import org apache camel util factoryfinder
import org apache camel util nofactoryavailableexception
/**
* default language resolver that looks for language factories in <b>meta-inf/services/org/apache/camel/language/</b> and
* language resolvers in <b>meta-inf/services/org/apache/camel/language/resolver/</b>.
*
* @version $revision$
*/
public class defaultlanguageresolver implements languageresolver
protected static final factoryfinder language_factory   new factoryfinder
protected static final factoryfinder language_resolver   new factoryfinder
public language resolvelanguage string name  camelcontext context
class type   null
try
type   language_factory findclass name
catch  nofactoryavailableexception e
// ignore
catch  throwable e
throw new illegalargumentexception     name  e
if  type    null
if  language class isassignablefrom type
return  language context getinjector   newinstance type
else
throw new illegalargumentexception     type getname
return nospecificlanguagefound name  context
protected language nospecificlanguagefound string name  camelcontext context
class type   null
try
type   language_resolver findclass
catch  nofactoryavailableexception e
// ignore
catch  throwable e
throw new illegalargumentexception     name  e
if  type    null
if  languageresolver class isassignablefrom type
languageresolver resolver    languageresolver context getinjector   newinstance type
return resolver resolvelanguage name  context
else
throw new illegalargumentexception     type getname
throw new nosuchlanguageexception name