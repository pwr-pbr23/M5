/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component bean
import java util map
import java util concurrent concurrenthashmap
import org apache camel exchange
import org apache camel expression
import org apache camel message
import org apache camel builder expressionbuilder
/**
* represents the strategy used to figure out how to map a message exchange to a pojo method invocation
*
* @version $revision:$
*/
public class defaultparametermappingstrategy implements parametermappingstrategy
private map<class  expression> parametertypetoexpressionmap   new concurrenthashmap<class  expression>
public defaultparametermappingstrategy
loaddefaultregistry
}
public synchronized expression getdefaultparametertypeexpression class parametertype
return parametertypetoexpressionmap get parametertype
}
/**
* adds a default parameter type mapping to an expression
*/
public synchronized void addparametermapping class parametertype  expression expression
parametertypetoexpressionmap put parametertype  expression
}
/**
* creates an invocation on the given pojo using annotations to decide which method to invoke
* and to figure out which parameters to use
*/
/*
public methodinvocation createinvocation(object pojo,
beaninfo beaninfo,
exchange messageexchange,
endpoint pojoendpoint) throws runtimecamelexception {
return beaninfo.createinvocation(pojo, messageexchange);
}
*/
public void loaddefaultregistry
addparametermapping exchange class  expressionbuilder exchangeexpression
addparametermapping message class  expressionbuilder inmessageexpression
}
}