/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component cxf interceptors
import java util list
//import java.util.resourcebundle;
//import java.util.logging.level;
import java util logging logger
import javax xml namespace qname
import org w3c dom document
import org w3c dom element
import org w3c dom node
//import org.apache.cxf.common.i18n.bundleutils;
import org apache cxf helpers domutils
import org apache cxf message message
import org apache cxf phase abstractphaseinterceptor
/**
* this is the base class for message interceptors that intercepts
* binding specific headers and message parts as dom element.
* then moves dom elements between header and message part list based on the
* binding operation info provided in the exchange.
*/
public abstract class abstractmessageoutinterceptor<t extends message>
extends abstractphaseinterceptor<t>
public abstractmessageoutinterceptor string phase
super phase
protected boolean isrequestor message message
return boolean true equals message get message requestor_role
protected abstract logger getlogger
protected element createelement qname elname  list<element> childel
document doc   domutils createdocument
string prefix   elname getprefix
stringbuilder tagname   new stringbuilder
if     equals prefix
tagname append prefix
tagname append
tagname append elname getlocalpart
element el   doc createelementns elname getnamespaceuri
tagname tostring
if     equals elname getprefix
stringbuilder attrname   new stringbuilder
attrname append
attrname append elname getprefix
el setattribute attrname tostring    elname getnamespaceuri
for  element part   childel
node adoptednode   doc adoptnode part
el appendchild adoptednode
return el