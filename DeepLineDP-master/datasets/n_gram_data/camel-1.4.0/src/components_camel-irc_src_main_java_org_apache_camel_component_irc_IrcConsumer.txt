/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component irc
import org apache camel processor
import org apache camel impl defaultconsumer
import org apache commons logging log
import org apache commons logging logfactory
import org schwering irc lib ircconnection
import org schwering irc lib irceventadapter
import org schwering irc lib ircmodeparser
import org schwering irc lib ircuser
public class ircconsumer extends defaultconsumer<ircexchange>
private static final transient log log   logfactory getlog ircconsumer class
private final ircconfiguration configuration
private final ircendpoint endpoint
private final ircconnection connection
private filteredirceventadapter listener
public ircconsumer ircendpoint endpoint  processor processor  ircconnection connection
super endpoint  processor
this endpoint   endpoint
this connection   connection
configuration   endpoint getconfiguration
@override
protected void dostop   throws exception
string target   endpoint getconfiguration   gettarget
connection dopart target
connection removeirceventlistener listener
super dostop
@override
protected void dostart   throws exception
super dostart
string target   endpoint getconfiguration   gettarget
connection addirceventlistener new filteredirceventadapter target
log debug     target
connection dojoin target
public ircconnection getconnection
return connection
class filteredirceventadapter extends irceventadapter
final string target
public filteredirceventadapter string target
this target   target
@override
public void onnick ircuser user  string newnick
if  configuration isonnick
ircexchange exchange   endpoint createonnickexchange user  newnick
try
getprocessor   process exchange
catch  exception e
// todo: what should we do when a processing failure
// occurs??
e printstacktrace
@override
public void onquit ircuser user  string msg
if  configuration isonquit
ircexchange exchange   endpoint createonquitexchange user  msg
try
getprocessor   process exchange
catch  exception e
// todo: what should we do when a processing failure
// occurs??
e printstacktrace
@override
public void onjoin string channel  ircuser user
if  configuration isonjoin
if  channel equals configuration gettarget
ircexchange exchange   endpoint createonjoinexchange channel  user
try
getprocessor   process exchange
catch  exception e
// todo: what should we do when a processing failure
// occurs??
e printstacktrace
@override
public void onkick string channel  ircuser user  string passivenick  string msg
if  configuration isonkick
if  channel equals configuration gettarget
ircexchange exchange   endpoint createonkickexchange channel  user  passivenick  msg
try
getprocessor   process exchange
catch  exception e
// todo: what should we do when a processing failure
// occurs??
e printstacktrace
@override
public void onmode string channel  ircuser user  ircmodeparser modeparser
if  configuration isonmode
if  channel equals configuration gettarget
ircexchange exchange   endpoint createonmodeexchange channel  user  modeparser
try
getprocessor   process exchange
catch  exception e
// todo: what should we do when a processing failure
// occurs??
e printstacktrace
@override
public void onpart string channel  ircuser user  string msg
if  configuration isonpart
if  channel equals configuration gettarget
ircexchange exchange   endpoint createonpartexchange channel  user  msg
try
getprocessor   process exchange
catch  exception e
// todo: what should we do when a processing failure
// occurs??
e printstacktrace
@override
public void ontopic string channel  ircuser user  string topic
if  configuration isontopic
if  channel equals configuration gettarget
ircexchange exchange   endpoint createontopicexchange channel  user  topic
try
getprocessor   process exchange
catch  exception e
// todo: what should we do when a processing failure
// occurs??
e printstacktrace
@override
public void onprivmsg string target  ircuser user  string msg
if  configuration isonprivmsg
if  target equals configuration gettarget
ircexchange exchange   endpoint createonprivmsgexchange target  user  msg
try
getprocessor   process exchange
catch  exception e
// todo: what should we do when a processing failure
// occurs??
e printstacktrace