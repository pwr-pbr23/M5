/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import java util list
import java util concurrent threadpoolexecutor
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlattribute
import javax xml bind annotation xmlrootelement
import javax xml bind annotation xmltransient
import org apache camel processor
import org apache camel processor multicastprocessor
import org apache camel processor aggregate aggregationstrategy
import org apache camel processor aggregate uselatestaggregationstrategy
import org apache camel processor interceptor streamcachinginterceptor
import org apache camel spi routecontext
/**
* represents an xml &lt;multicast/&gt; element
*
* @version $revision$
*/
@xmlrootelement name
@xmlaccessortype xmlaccesstype field
public class multicasttype extends outputtype<processortype>
@xmlattribute required   false
private boolean parallelprocessing
@xmltransient
private aggregationstrategy aggregationstrategy
@xmltransient
private threadpoolexecutor threadpoolexecutor
@override
public string tostring
return     getoutputs
@override
public string getshortname
return
@override
public processor createprocessor routecontext routecontext  throws exception
return createoutputsprocessor routecontext
protected processor createcompositeprocessor list<processor> list
if  aggregationstrategy    null
aggregationstrategy   new uselatestaggregationstrategy
return new multicastprocessor list  aggregationstrategy  isparallelprocessing    threadpoolexecutor
public aggregationstrategy getaggregationstrategy
return aggregationstrategy
public multicasttype setaggregationstrategy aggregationstrategy aggregationstrategy
this aggregationstrategy   aggregationstrategy
return this
public boolean isparallelprocessing
return parallelprocessing    null ? parallelprocessing   false
public multicasttype setparallelprocessing boolean parallelprocessing
this parallelprocessing   parallelprocessing
return this
public threadpoolexecutor getthreadpoolexecutor
return threadpoolexecutor
public multicasttype setthreadpoolexecutor threadpoolexecutor executor
this threadpoolexecutor   executor
return this
@override
protected processor wrapprocessorininterceptors routecontext routecontext  processor target  throws exception
// no need to wrap me in interceptors as they are all applied directly to my children
return new streamcachinginterceptor target