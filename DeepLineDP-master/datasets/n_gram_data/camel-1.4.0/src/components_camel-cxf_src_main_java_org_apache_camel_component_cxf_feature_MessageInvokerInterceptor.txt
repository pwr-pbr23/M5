/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component cxf feature
import java util concurrent executor
import org apache camel component cxf messageinvoker
import org apache cxf endpoint endpoint
import org apache cxf message exchange
import org apache cxf message message
import org apache cxf phase abstractphaseinterceptor
import org apache cxf phase phase
import org apache cxf service service
/**
* this interceptor just works for invoking the messageinvoker implementor
*
*/
public class messageinvokerinterceptor extends abstractphaseinterceptor<message>
public messageinvokerinterceptor
super phase invoke
public void handlemessage final message message
final exchange exchange   message getexchange
final endpoint endpoint   exchange get endpoint class
final service service   endpoint getservice
final messageinvoker invoker    messageinvoker service getinvoker
// how to deal with the oneway messge
runnable invocation   new runnable
public void run
exchange runableex   message getexchange
invoker invoke runableex
if   exchange isoneway
endpoint ep   exchange get endpoint class
message outmessage   runableex getoutmessage
copyjaxwsproperties message  outmessage
if  outmessage    null
outmessage   ep getbinding   createmessage
exchange setoutmessage outmessage
executor executor   getexecutor endpoint
if  exchange get executor class     executor
// already executing on the appropriate executor
invocation run
else
exchange put executor class  executor
executor execute invocation
/**
* get the executor for this invocation.
* @param endpoint
* @return
*/
private executor getexecutor final endpoint endpoint
return endpoint getservice   getexecutor
private void copyjaxwsproperties message inmsg  message outmsg
outmsg put message wsdl_operation  inmsg get message wsdl_operation
outmsg put message wsdl_service  inmsg get message wsdl_service
outmsg put message wsdl_interface  inmsg get message wsdl_interface
outmsg put message wsdl_port  inmsg get message wsdl_port
outmsg put message wsdl_description  inmsg get message wsdl_description