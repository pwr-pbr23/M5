/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel language bean
import org apache camel exchange
import org apache camel expression
import org apache camel predicate
import org apache camel builder predicatebuilder
import org apache camel spi language
import org apache camel util objecthelper
/**
* a <a href="http://activemq.apache.org/camel/bean-language.html>bean language</a>
* which uses a simple text notation to invoke methods on beans to evaluate predicates or expressions<p/>
* <p/>
* the notation is essentially <code>beanname.methodname</code> which is then invoked using the
* beanname to lookup in the <a href="http://activemq.apache.org/camel/registry.html>registry</a>
* then the method is invoked to evaluate the expression using the
* <a href="http://activemq.apache.org/camel/bean-integration.html>bean integration</a> to bind the
* {@link exchange} to the method arguments.
*
* @version $revision$
*/
public class beanlanguage implements language
public predicate<exchange> createpredicate string expression
return predicatebuilder topredicate createexpression expression
public expression<exchange> createexpression string expression
objecthelper notnull expression
int idx   expression lastindexof
string beanname   expression
string method   null
if  idx > 0
beanname   expression substring 0  idx
method   expression substring idx   1
return new beanexpression beanname  method