/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component file remote
import java io bytearrayoutputstream
import java io ioexception
import java util concurrent scheduledexecutorservice
import com jcraft jsch channelsftp
import com jcraft jsch jschexception
import com jcraft jsch session
import com jcraft jsch sftpexception
import org apache camel processor
import org apache camel component file filecomponent
import org apache commons logging log
import org apache commons logging logfactory
public class sftpconsumer extends remotefileconsumer<remotefileexchange>
private static final transient log log   logfactory getlog sftpconsumer class
private final sftpendpoint endpoint
private boolean recursive   true
private string regexpattern
private long lastpolltime
private channelsftp channel
private session session
private boolean setnames
public sftpconsumer sftpendpoint endpoint  processor processor  session session
super endpoint  processor
this endpoint   endpoint
this session   session
public sftpconsumer sftpendpoint endpoint  processor processor  session session  scheduledexecutorservice executor
super endpoint  processor  executor
this endpoint   endpoint
this session   session
protected void connectifnecessary   throws jschexception
if  channel    null     channel isconnected
if  session    null     session isconnected
log info
session   endpoint createsession
session connect
log info
channel   endpoint createchannelsftp session
channel connect
log info     endpoint getconfiguration   tostring
protected void disconnect   throws jschexception
if  session    null
log info
session disconnect
if  channel    null
log info
channel disconnect
protected void poll   throws exception
// todo: is there a way to avoid copy-pasting the reconnect logic?
connectifnecessary
// if the attempt to connect isn't successful, then the thrown
// exception will signify that we couldn't poll
try
final string filename   endpoint getconfiguration   getfile
if  endpoint getconfiguration   isdirectory
polldirectory filename
else
channel cd filename substring 0  filename lastindexof
final channelsftp lsentry file    channelsftp lsentry channel ls filename substring filename lastindexof      1   get 0
pollfile file
lastpolltime   system currenttimemillis
catch  jschexception e
// if the connection has gone stale, then we must manually disconnect
// the client before attempting to reconnect
log warn     e tostring
disconnect
// rethrow to signify that we didn't poll
throw e
catch  sftpexception e
// still not sure if/when these come up and what we should do about them
// client.disconnect();
log warn     e tostring
log warn
// rethrow to signify that we didn't poll
throw e
protected void polldirectory string dir  throws exception
channel cd dir
for  channelsftp lsentry sftpfile    channelsftp lsentry channel ls    toarray new channelsftp lsentry
if  sftpfile getfilename   startswith
// skip
else if  sftpfile getattrs   isdir
if  isrecursive
polldirectory getfullfilename sftpfile
else
pollfile sftpfile
protected string getfullfilename channelsftp lsentry sftpfile  throws ioexception  sftpexception
return channel pwd         sftpfile getfilename
private void pollfile channelsftp lsentry sftpfile  throws exception
if  sftpfile getattrs   getmtime     1000l > lastpolltime
if  ismatched sftpfile
final bytearrayoutputstream bytearrayoutputstream   new bytearrayoutputstream
channel get sftpfile getfilename    bytearrayoutputstream
remotefileexchange exchange   endpoint createexchange getfullfilename sftpfile   bytearrayoutputstream
if  issetnames
string relativepath   getfullfilename sftpfile  substring endpoint getconfiguration   getfile   length
if  relativepath startswith
relativepath   relativepath substring 1
exchange getin   setheader filecomponent header_file_name  relativepath
getprocessor   process exchange
protected boolean ismatched channelsftp lsentry sftpfile
boolean result   true
if  regexpattern    null    regexpattern length   > 0
result   sftpfile getfilename   matches getregexpattern
return result
public boolean isrecursive
return recursive
public void setrecursive boolean recursive
this recursive   recursive
public long getlastpolltime
return lastpolltime
public void setlastpolltime long lastpolltime
this lastpolltime   lastpolltime
public string getregexpattern
return regexpattern
public void setregexpattern string regexpattern
this regexpattern   regexpattern
public boolean issetnames
return setnames
public void setsetnames boolean setnames
this setnames   setnames