/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component jms requestor
import java util concurrent futuretask
import javax jms jmsexception
import javax jms message
import org apache camel component jms jmsconfiguration messagesentcallback
import org apache camel component jms jmsproducer
import org apache camel util timeoutmap
import org apache camel util uuidgenerator
import org apache commons logging log
import org apache commons logging logfactory
public class deferredrequestreplymap
private static final transient log log   logfactory getlog deferredrequestreplymap class
private requestor requestor
private jmsproducer producer
private timeoutmap deferredrequestmap
private timeoutmap deferredreplymap
public static class deferredmessagesentcallback implements messagesentcallback
private deferredrequestreplymap map
private string transitionalid
private message message
private object monitor
public deferredmessagesentcallback deferredrequestreplymap map  uuidgenerator uuidgenerator  object monitor
transitionalid   uuidgenerator generateid
this map   map
this monitor   monitor
public deferredrequestreplymap getdeferredrequestreplymap
return map
public string getid
return transitionalid
public message getmessage
return message
public void sent message message
this message   message
map processdeferredreplies monitor  getid    message
public deferredrequestreplymap requestor requestor
jmsproducer producer
timeoutmap deferredrequestmap
timeoutmap deferredreplymap
this requestor   requestor
this producer   producer
this deferredrequestmap   deferredrequestmap
this deferredreplymap   deferredreplymap
public long getrequesttimeout
return producer getrequesttimeout
public deferredmessagesentcallback createdeferredmessagesentcallback
return new deferredmessagesentcallback this  getuuidgenerator    requestor
public void put deferredmessagesentcallback callback  futuretask futuretask
deferredrequestmap put callback getid    futuretask  getrequesttimeout
public void processdeferredrequests string correlationid  message inmessage
processdeferredrequests requestor  deferredrequestmap  deferredreplymap
correlationid  requestor getmaxrequesttimeout    inmessage
public static void processdeferredrequests object monitor
timeoutmap requestmap
timeoutmap replymap
string correlationid
long timeout
message inmessage
synchronized  monitor
try
object handler   requestmap get correlationid
if  handler    null
if  requestmap size   > replymap size
replymap put correlationid  inmessage  timeout
else
log warn     correlationid       inmessage
if  handler    null    handler instanceof replyhandler
replyhandler replyhandler    replyhandler  handler
boolean complete   replyhandler handle inmessage
if  complete
requestmap remove correlationid
catch  jmsexception e
throw new failedtoprocessresponse inmessage  e
public void processdeferredreplies object monitor  string transitionalid  message outmessage
synchronized  monitor
try
object handler   deferredrequestmap get transitionalid
if  handler    null
return
deferredrequestmap remove transitionalid
string correlationid   outmessage getjmsmessageid
object in   deferredreplymap get correlationid
if  in    null    in instanceof message
message inmessage    message in
if  handler instanceof replyhandler
replyhandler replyhandler    replyhandler handler
try
boolean complete   replyhandler handle inmessage
if  complete
deferredreplymap remove correlationid
catch  jmsexception e
throw new failedtoprocessresponse inmessage  e
else
deferredrequestmap put correlationid  handler  getrequesttimeout
catch  jmsexception e
throw new failedtoprocessresponse outmessage  e
protected uuidgenerator getuuidgenerator
return producer getuuidgenerator