/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import java util arraylist
import java util list
import java util concurrent blockingqueue
import java util concurrent threadpoolexecutor
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlattribute
import javax xml bind annotation xmlelementref
import javax xml bind annotation xmlrootelement
import javax xml bind annotation xmltransient
import org apache camel processor
import org apache camel processor pipeline
import org apache camel processor threadprocessor
import org apache camel spi routecontext
/**
* represents an xml &lt;thread/&gt; element
*
* @version $revision$
*/
@xmlrootelement name
@xmlaccessortype xmlaccesstype field
public class threadtype extends processortype<processortype>
@xmlattribute required   false
private integer coresize   1
@xmlattribute required   false
private boolean daemon   boolean true
@xmlattribute required   false
private long keepalivetime
@xmlattribute required   false
private integer maxsize   1
@xmlattribute required   false
private string name
@xmlattribute required   false
private integer priority   thread norm_priority
@xmlattribute required   false
private long stacksize
@xmlelementref
private list<processortype<?>> outputs   new arraylist<processortype<?>>
@xmltransient
private blockingqueue<runnable> taskqueue
@xmltransient
private threadgroup threadgroup
@xmltransient
private threadpoolexecutor executor
public threadtype
public threadtype int coresize
this coresize   coresize
this maxsize   coresize
public threadtype threadpoolexecutor executor
this executor   executor
@override
public list<processortype<?>> getoutputs
return outputs
@override
public string tostring
return     getlabel
@override
public string getshortname
return
@override
public string getlabel
return     coresize
@override
public processor createprocessor routecontext routecontext  throws exception
threadprocessor thread   new threadprocessor
thread setexecutor executor
if  coresize    null
thread setcoresize coresize
if  daemon    null
thread setdaemon daemon
if  keepalivetime    null
thread setkeepalivetime keepalivetime
if  maxsize    null
thread setmaxsize maxsize
thread setname name
thread setpriority priority
if  stacksize    null
thread setstacksize stacksize
thread settaskqueue taskqueue
thread setthreadgroup threadgroup
// todo: see if we can avoid creating so many nested pipelines
arraylist<processor> pipe   new arraylist<processor> 2
pipe add thread
pipe add createoutputsprocessor routecontext  outputs
return new pipeline pipe
///////////////////////////////////////////////////////////////////
//
// fluent methods
//
///////////////////////////////////////////////////////////////////
public threadtype coresize int coresize
setcoresize coresize
return this
public threadtype daemon boolean daemon
setdaemon daemon
return this
public threadtype keepalivetime long keepalivetime
setkeepalivetime keepalivetime
return this
public threadtype maxsize int maxsize
setmaxsize maxsize
return this
public threadtype name string name
setname name
return this
public threadtype priority int priority
setpriority priority
return this
public threadtype stacksize long stacksize
setstacksize stacksize
return this
public threadtype taskqueue blockingqueue<runnable> taskqueue
settaskqueue taskqueue
return this
public threadtype threadgroup threadgroup threadgroup
setthreadgroup threadgroup
return this
public threadtype executor threadpoolexecutor executor
setexecutor executor
return this
///////////////////////////////////////////////////////////////////
//
// property accessors
//
///////////////////////////////////////////////////////////////////
public void setcoresize int coresize
this coresize   coresize
public void setdaemon boolean daemon
this daemon   daemon
public void setkeepalivetime long keepalivetime
this keepalivetime   keepalivetime
public void setmaxsize int maxsize
this maxsize   maxsize
public void setname string name
this name   name
public void setpriority int priority
this priority   priority
public void setstacksize long stacksize
this stacksize   stacksize
public void settaskqueue blockingqueue<runnable> taskqueue
this taskqueue   taskqueue
public void setthreadgroup threadgroup threadgroup
this threadgroup   threadgroup
public threadpoolexecutor getexecutor
return executor
public void setexecutor threadpoolexecutor executor
this executor   executor