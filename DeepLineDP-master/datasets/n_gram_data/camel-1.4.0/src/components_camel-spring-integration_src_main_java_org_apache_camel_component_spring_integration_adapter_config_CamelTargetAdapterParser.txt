/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component spring integration adapter config
import org w3c dom attr
import org w3c dom element
import org w3c dom namednodemap
import org apache camel component spring integration adapter cameltargetadapter
import org springframework beans factory parsing beancomponentdefinition
import org springframework beans factory support beandefinitionbuilder
import org springframework beans factory support rootbeandefinition
import org springframework beans factory xml abstractsimplebeandefinitionparser
import org springframework beans factory xml parsercontext
import org springframework integration configurationexception
import org springframework integration endpoint handlerendpoint
import org springframework util stringutils
/**
* parser for the &lt;cameltarget/&gt; element
* @author willem jiang
*
* @version $revision$
*/
public class cameltargetadapterparser extends abstractcamelcontextbeandefinitionparaser
protected class<?> getbeanclass element element
return handlerendpoint class
protected boolean shouldgenerateid
return false
protected boolean shouldgenerateidasfallback
return true
protected void parseattributes element element  parsercontext ctx  beandefinitionbuilder bean
namednodemap atts   element getattributes
for  int i   0  i < atts getlength    i
attr node    attr  atts item i
string val   node getvalue
string name   node getlocalname
if   name equals        name equals
maptoproperty bean  name  val
protected void doparse element element  parsercontext parsercontext  beandefinitionbuilder builder
beandefinitionbuilder adapterdefbuilder   beandefinitionbuilder rootbeandefinition cameltargetadapter class
string requestchannel   element getattribute
string replychannel   element getattribute
// check the requestchannel
if   stringutils hastext requestchannel
throw new configurationexception
// set the adapter bean's property
parseattributes element  parsercontext  adapterdefbuilder
parsecamelcontext element  parsercontext  adapterdefbuilder
string adapterbeanname   parsercontext getreadercontext   generatebeanname adapterdefbuilder getbeandefinition
parsercontext registerbeancomponent new beancomponentdefinition adapterdefbuilder getbeandefinition    adapterbeanname
builder addconstructorargreference adapterbeanname
builder addpropertyvalue    requestchannel
if  stringutils hastext replychannel
builder addpropertyvalue    replychannel