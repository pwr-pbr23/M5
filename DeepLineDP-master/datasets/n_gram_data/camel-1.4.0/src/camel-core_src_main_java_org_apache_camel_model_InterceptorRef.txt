/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlattribute
import javax xml bind annotation xmlrootelement
import javax xml bind annotation xmltransient
import org apache camel processor
import org apache camel processor delegateprocessor
import org apache camel spi routecontext
/**
* base class for interceptor types.
*
* @version $revision$
*/
@xmlrootelement name
@xmlaccessortype xmlaccesstype field
public class interceptorref extends interceptortype
@xmlattribute required   true
private string ref
@xmltransient
private delegateprocessor interceptor
public interceptorref
public interceptorref string ref
setref ref
public interceptorref delegateprocessor interceptor
this interceptor   interceptor
@override
public string tostring
return     getlabel
@override
public string getshortname
return
@override
public processor createprocessor routecontext routecontext  throws exception
delegateprocessor processor   createinterceptor routecontext
processor child   createoutputsprocessor routecontext
processor setprocessor child
return processor
public delegateprocessor createinterceptor routecontext routecontext
if  interceptor    null
interceptor   routecontext lookup getref    delegateprocessor class
if  interceptor    null
throw new illegalargumentexception     getref
return interceptor
public string getref
return ref
public void setref string ref
this ref   ref
public string getlabel
if  ref    null
return     ref
else if  interceptor    null
return interceptor tostring
else
return
/**
* get the underlying {@link delegateprocessor} implementation
*
* @return the {@link delegateprocessor}
*/
@xmltransient
public delegateprocessor getinterceptor
return interceptor