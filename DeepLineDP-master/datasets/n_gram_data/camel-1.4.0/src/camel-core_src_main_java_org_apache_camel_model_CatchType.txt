/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import java util arraylist
import java util list
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlelement
import javax xml bind annotation xmlelementref
import javax xml bind annotation xmlrootelement
import javax xml bind annotation xmltransient
import org apache camel processor
import org apache camel processor catchprocessor
import org apache camel spi routecontext
import org apache camel util objecthelper
/**
* represents an xml &lt;catch/&gt; element
*
* @version $revision$
*/
@xmlrootelement name
@xmlaccessortype xmlaccesstype field
public class catchtype extends processortype<processortype>
@xmlelement name
private list<string> exceptions   new arraylist<string>
@xmlelementref
private list<processortype<?>> outputs   new arraylist<processortype<?>>
@xmltransient
private list<class> exceptionclasses
public catchtype
public catchtype list<class> exceptionclasses
this exceptionclasses   exceptionclasses
public catchtype class exceptiontype
exceptionclasses   new arraylist<class>
exceptionclasses add exceptiontype
@override
public string tostring
return     getexceptionclasses         getoutputs
@override
public string getshortname
return
@override
public string getlabel
return getexceptionclasses   tostring
@override
public catchprocessor createprocessor routecontext routecontext  throws exception
processor childprocessor   routecontext createprocessor this
return new catchprocessor getexceptionclasses    childprocessor
public list<processortype<?>> getoutputs
return outputs
public void setoutputs list<processortype<?>> outputs
this outputs   outputs
public list<class> getexceptionclasses
if  exceptionclasses    null
exceptionclasses   createexceptionclasses
return exceptionclasses
public void setexceptionclasses list<class> exceptionclasses
this exceptionclasses   exceptionclasses
public list<string> getexceptions
return exceptions
public void setexceptions list<string> exceptions
this exceptions   exceptions
protected list<class> createexceptionclasses
list<string> list   getexceptions
list<class> answer   new arraylist<class> list size
for  string name   list
class type   objecthelper loadclass name  getclass   getclassloader
answer add type
return answer