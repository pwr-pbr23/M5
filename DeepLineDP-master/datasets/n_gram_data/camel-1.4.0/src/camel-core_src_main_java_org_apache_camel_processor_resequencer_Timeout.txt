/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel processor resequencer
import java util linkedlist
import java util list
import java util timer
import java util timertask
/**
* a timer task that notifies handlers about scheduled timeouts.
*
* @see timer
* @see timertask
*
* @author martin krasser
*
* @version $revision
*/
public class timeout extends timertask
private list<timeouthandler> timeouthandlers
private timer timer
private long timeout
/**
* creates a new timeout task using the given {@link timer} instance a timeout value. the
* task is not scheduled immediately. it will be scheduled by calling this
* task's {@link #schedule()} method.
*
* @param timer
* @param timeout
*/
public timeout timer timer  long timeout
this timeouthandlers   new linkedlist<timeouthandler>
this timeout   timeout
this timer   timer
/**
* returns the list of timeout handlers that have been registered for
* notification.
*
* @return the list of timeout handlers
*/
public list<timeouthandler> gettimeouthandlers
return timeouthandlers
/**
* appends a new timeout handler at the end of the timeout handler list.
*
* @param handler a timeout handler.
*/
public void addtimeouthandler timeouthandler handler
timeouthandlers add handler
/**
* inserts a new timeout handler at the beginning of the timeout handler
* list.
*
* @param handler a timeout handler.
*/
public void addtimeouthandlerfirst timeouthandler handler
timeouthandlers add 0  handler
/**
* removes all timeout handlers from the timeout handler list.
*/
public void cleartimeouthandlers
this timeouthandlers clear
/**
* schedules this timeout task.
*/
public void schedule
timer schedule this  timeout
/**
* notifies all timeout handlers about the scheduled timeout.
*/
@override
public void run
for  timeouthandler observer   timeouthandlers
observer timeout this