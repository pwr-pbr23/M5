/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel
import java util arraylist
import java util hashmap
import java util list
import java util map
/**
* a <a href="http://activemq.apache.org/camel/routes.html">route</a>
* defines the processing used on an inbound message exchange
* from a specific {@link endpoint} within a {@link camelcontext}
*
* @version $revision$
*/
public class route<e extends exchange>
public static final string parent_property
public static final string group_property
private final map<string  object> properties   new hashmap<string  object> 16
private endpoint<e> endpoint
private list<service> services   new arraylist<service>
public route endpoint<e> endpoint
this endpoint   endpoint
public route endpoint<e> endpoint  service    services
this endpoint
for  service service   services
addservice service
@override
public string tostring
return
public endpoint<e> getendpoint
return endpoint
public void setendpoint endpoint<e> endpoint
this endpoint   endpoint
/**
* this property map is used to associate information about
* the route.
*/
public map<string  object> getproperties
return properties
public list<service> getservicesforroute   throws exception
list<service> servicesforroute   new arraylist<service> getservices
addservices servicesforroute
return servicesforroute
/**
* returns the additional services required for this particular route
*/
public list<service> getservices
return services
public void setservices list<service> services
this services   services
public void addservice service service
getservices   add service
/**
* strategy method to allow derived classes to lazily load services for the route
*/
protected void addservices list<service> services  throws exception