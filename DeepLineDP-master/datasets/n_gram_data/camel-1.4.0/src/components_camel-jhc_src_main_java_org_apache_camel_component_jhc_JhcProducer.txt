/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component jhc
import java io ioexception
import java io interruptedioexception
import java net inetsocketaddress
import java net socketaddress
import java util arrays
import java util hashset
import java util iterator
import java util map
import java util set
import org apache camel asynccallback
import org apache camel asyncprocessor
import org apache camel exchange
import org apache camel message
import org apache camel impl defaultproducer
import org apache camel util asyncprocessorhelper
import org apache commons logging log
import org apache commons logging logfactory
import org apache http header
import org apache http httpentity
import org apache http httpexception
import org apache http httprequest
import org apache http httpresponse
import org apache http entity bytearrayentity
import org apache http impl defaultconnectionreusestrategy
import org apache http impl nio defaultclientioeventdispatch
import org apache http impl nio reactor defaultconnectingioreactor
import org apache http message basichttpentityenclosingrequest
import org apache http message basichttprequest
import org apache http nio nhttpconnection
import org apache http nio protocol bufferinghttpclienthandler
import org apache http nio protocol eventlistener
import org apache http nio protocol httprequestexecutionhandler
import org apache http nio reactor connectingioreactor
import org apache http nio reactor ioeventdispatch
import org apache http nio reactor sessionrequest
import org apache http nio reactor sessionrequestcallback
import org apache http params httpparams
import org apache http protocol basichttpprocessor
import org apache http protocol httpcontext
import org apache http protocol requestconncontrol
import org apache http protocol requestcontent
import org apache http protocol requestexpectcontinue
import org apache http protocol requesttargethost
import org apache http protocol requestuseragent
import org apache http util concurrent threadfactory
public class jhcproducer extends defaultproducer<jhcexchange> implements asyncprocessor
public static final string http_response_code
// this should be a set of lower-case strings
public static final set<string> headers_to_skip   new hashset<string> arrays aslist
http_response_code tolowercase
private static final transient log log   logfactory getlog jhcproducer class
private int nbthreads   2
private connectingioreactor ioreactor
private threadfactory threadfactory
private thread runner
public jhcproducer jhcendpoint endpoint
super endpoint
@override
public jhcendpoint getendpoint
return  jhcendpoint  super getendpoint
@override
protected void dostart   throws exception
super dostart
httpparams params   getendpoint   getparams
ioreactor   new defaultconnectingioreactor nbthreads  threadfactory  params
basichttpprocessor httpproc   new basichttpprocessor
httpproc addinterceptor new requestcontent
httpproc addinterceptor new requesttargethost
httpproc addinterceptor new requestconncontrol
httpproc addinterceptor new requestuseragent
httpproc addinterceptor new requestexpectcontinue
bufferinghttpclienthandler handler   new bufferinghttpclienthandler
httpproc
new myhttprequestexecutionhandler
new defaultconnectionreusestrategy
params
handler seteventlistener new eventlogger
final ioeventdispatch ioeventdispatch   new defaultclientioeventdispatch handler  params
runner   new thread new runnable
public void run
try
ioreactor execute ioeventdispatch
catch  interruptedioexception ex
log info
catch  ioexception e
log warn     e getmessage
log debug
runner start
@override
protected void dostop   throws exception
ioreactor shutdown
runner join
super dostop
public void process exchange exchange  throws exception
if  log isdebugenabled
log debug     exchange
asyncprocessorhelper process this  exchange
public boolean process exchange exchange  asynccallback callback
if  log isdebugenabled
log debug     exchange
socketaddress addr   new inetsocketaddress getendpoint   gethost    getendpoint   getport
exchange setproperty asynccallback class getname    callback
sessionrequest req   ioreactor connect addr  null  exchange  new mysessionrequestcallback
return false
protected httprequest createrequest exchange exchange
string uri   getendpoint   getendpointuri
httpentity entity   createentity exchange
httprequest req
if  entity    null
req   new basichttprequest    getendpoint   getpath
else
req   new basichttpentityenclosingrequest    getendpoint   getpath
basichttpentityenclosingrequest req  setentity entity
// propagate headers as http headers
for  string headername   exchange getin   getheaders   keyset
string headervalue   exchange getin   getheader headername  string class
if  shouldheaderbepropagated headername  headervalue
req addheader headername  headervalue
return req
protected httpentity createentity exchange exchange
message in   exchange getin
httpentity entity   in getbody httpentity class
if  entity    null
byte data   in getbody byte class
if  data    null
return null
entity   new bytearrayentity data
string contenttype   in getheader    string class
if  contenttype    null
bytearrayentity  entity  setcontenttype contenttype
string contentencoding   in getheader    string class
if  contentencoding    null
bytearrayentity  entity  setcontentencoding contentencoding
return entity
// todo should somehow reference to httpproducer as now it is copy/paste
protected boolean shouldheaderbepropagated string headername  string headervalue
if  headervalue    null
return false
if  headername startswith
return false
if  headers_to_skip contains headername tolowercase
return false
return true
static class mysessionrequestcallback implements sessionrequestcallback
public void completed sessionrequest sessionrequest
if  log isdebugenabled
log debug
public void failed sessionrequest sessionrequest
if  log isdebugenabled
log debug
public void timeout sessionrequest sessionrequest
if  log isdebugenabled
log debug
public void cancelled sessionrequest sessionrequest
if  log isdebugenabled
log debug
class myhttprequestexecutionhandler implements httprequestexecutionhandler
private static final string request_sent
private static final string response_received
public void initalizecontext httpcontext httpcontext  object o
if  log isdebugenabled
log debug
httpcontext setattribute exchange class getname     exchange  o
public httprequest submitrequest httpcontext httpcontext
if  log isdebugenabled
log debug     httpcontext
object flag   httpcontext getattribute request_sent
if  flag    null
// stick some object into the context
httpcontext setattribute request_sent  boolean true
exchange e    exchange  httpcontext getattribute exchange class getname
return createrequest e
else
return null
public void handleresponse httpresponse httpresponse  httpcontext httpcontext  throws ioexception
if  log isdebugenabled
log debug
httpcontext setattribute response_received  boolean true
exchange e    exchange  httpcontext getattribute exchange class getname
e getout   setbody httpresponse getentity
for  iterator it   httpresponse headeriterator    it hasnext
header h    header  it next
e getout   setheader h getname    h getvalue
e getout   setheader http_response_code  httpresponse getstatusline   getstatuscode
asynccallback callback    asynccallback  e removeproperty asynccallback class getname
callback done false
public void finalizecontext httpcontext httpcontext
static class eventlogger implements eventlistener
public void connectionopen final nhttpconnection conn
if  log isdebugenabled
log debug     conn
public void connectiontimeout final nhttpconnection conn
if  log isdebugenabled
log debug     conn
public void connectionclosed final nhttpconnection conn
if  log isdebugenabled
log debug     conn
public void fatalioexception final ioexception ex  final nhttpconnection conn
if  log isdebugenabled
log debug     ex getmessage
public void fatalprotocolexception final httpexception ex  final nhttpconnection conn
if  log isdebugenabled
log debug     ex getmessage