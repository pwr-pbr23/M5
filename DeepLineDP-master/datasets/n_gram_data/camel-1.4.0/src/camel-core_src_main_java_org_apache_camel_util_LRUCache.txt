/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel util
import java util linkedhashmap
import java util map
/**
* a least recently used cache
*
* @version $revision$
*/
public class lrucache<k  v> extends linkedhashmap<k  v>
private static final long serialversionuid    342098639681884413l
private int maxcachesize   10000
public lrucache int maximumcachesize
this maximumcachesize  maximumcachesize  0 75f  true
/**
* constructs an empty <tt>lrucache</tt> instance with the
* specified initial capacity, maximumcachesize,load factor and ordering mode.
*
* @param initialcapacity  the initial capacity.
* @param maximumcachesize
* @param loadfactor       the load factor.
* @param accessorder      the ordering mode - <tt>true</tt> for
*                         access-order, <tt>false</tt> for insertion-order.
* @throws illegalargumentexception if the initial capacity is negative
*                                  or the load factor is non positive.
*/
public lrucache int initialcapacity  int maximumcachesize  float loadfactor  boolean accessorder
super initialcapacity  loadfactor  accessorder
this maxcachesize   maximumcachesize
/**
* returns the maxcachesize.
*/
public int getmaxcachesize
return maxcachesize
protected boolean removeeldestentry map entry entry
return size   > maxcachesize