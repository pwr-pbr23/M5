/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel loanbroker webservice version
import java util arraylist
import java util list
import javax jms connectionfactory
import org apache activemq activemqconnectionfactory
import org apache camel camelcontext
import org apache camel exchange
import org apache camel message
import org apache camel processor
import org apache camel builder routebuilder
import org apache camel component cxf cxfconstants
import org apache camel component jms jmscomponent
import org apache camel impl defaultcamelcontext
import org apache camel loanbroker webservice version bank bankserver
import org apache camel loanbroker webservice version credit creditagencyserver
import org apache camel loanbroker webservice version credit creditagencyws
import org apache camel processor aggregate uselatestaggregationstrategy
import org apache camel spring main
import org apache cxf busfactory
import org apache cxf frontend clientfactorybean
import org apache cxf frontend clientproxyfactorybean
import org apache cxf jaxws jaxwsproxyfactorybean
/**
* the loanbroker is a routebuilder which builds the whole loan message routing rules
*
*
*/
public class loanbroker extends routebuilder
//start snippet: server
public static void main string    args  throws exception
camelcontext context   new defaultcamelcontext
creditagencyserver creditagencyserver   new creditagencyserver
// start the credit server
creditagencyserver start
// start the bank server
bankserver bankserver   new bankserver
bankserver start
// start the camel context
context addroutes new loanbroker
context start
// start the loan broker
thread sleep 5   60   1000
context stop
thread sleep 1000
bankserver stop
creditagencyserver stop
//end snippet: server
/**
* lets configure the camel routing rules using java code...
*/
public void configure
// start snippet: dsl
// router 1 to call the bank endpoints sequentially
from constants loanbroker_uri
// using the creditscoreprocessor to call the credit agency service
process new creditscoreprocessor constants creditagency_address
// set the aggregation strategy on the multicast pattern
multicast new bankresponseaggregationstrategy
// send out the request the below three different banks sequentially
to constants bank1_uri  constants bank2_uri  constants bank3_uri
// router 2 to call the bank endpoints parallelly
from constants parallel_loanbroker_uri
process new creditscoreprocessor constants creditagency_address
// using the thread pool to send out message to the below three different banks parallelly
multicast new bankresponseaggregationstrategy    true
to constants bank1_uri  constants bank2_uri  constants bank3_uri
//end snippet: dsl
//start snippet: credit
class creditscoreprocessor implements processor
private string creditagencyaddress
private creditagencyws proxy
public creditscoreprocessor string address
creditagencyaddress   address
proxy   getproxy
private creditagencyws getproxy
// here we use jaxws front end to create the proxy
jaxwsproxyfactorybean proxyfactory   new jaxwsproxyfactorybean
clientfactorybean clientbean   proxyfactory getclientfactorybean
clientbean setaddress creditagencyaddress
clientbean setserviceclass creditagencyws class
clientbean setbus busfactory getdefaultbus
return  creditagencyws proxyfactory create
@suppresswarnings
public void process exchange exchange  throws exception
message requestmessage   exchange getin
list<object> request    list<object>  requestmessage getbody
string ssn    string request get 0
double amount    double  request get 1
integer loanduriation    integer request get 2
int historylength   proxy getcredithistorylength ssn
int score   proxy getcreditscore ssn
// create the invocation message for bank client
list<object> bankrequest   new arraylist<object>
bankrequest add ssn
bankrequest add amount
bankrequest add loanduriation
bankrequest add historylength
bankrequest add score
exchange getout   setbody bankrequest
exchange getout   setheader cxfconstants operation_name
//end snippet: credit