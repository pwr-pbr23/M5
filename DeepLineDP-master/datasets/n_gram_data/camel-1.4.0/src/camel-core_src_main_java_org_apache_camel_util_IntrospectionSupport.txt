/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel util
import java beans propertyeditor
import java beans propertyeditormanager
import java lang reflect field
import java lang reflect invocationtargetexception
import java lang reflect method
import java lang reflect modifier
import java net uri
import java net urisyntaxexception
import java util arrays
import java util hashmap
import java util iterator
import java util linkedhashmap
import java util map
import java util set
import org apache camel typeconverter
import org apache commons logging log
import org apache commons logging logfactory
/**
* helper for introspections of beans.
*/
public final class introspectionsupport
private static final transient log log   logfactory getlog introspectionsupport class
/**
* utility classes should not have a public constructor.
*/
private introspectionsupport
public static boolean getproperties object target  map props  string optionprefix
boolean rc   false
if  target    null
throw new illegalargumentexception
if  props    null
throw new illegalargumentexception
if  optionprefix    null
optionprefix
class clazz   target getclass
method methods   clazz getmethods
for  method method   methods
string name   method getname
class type   method getreturntype
class params   method getparametertypes
if  name startswith       params length    0    type    null    issettabletype type
try
object value   method invoke target
if  value    null
continue
string strvalue   converttostring value  type
if  strvalue    null
continue
name   name substring 3  4  tolowercase     name substring 4
props put optionprefix   name  strvalue
rc   true
catch  throwable ignore
// ignore
return rc
public static object getproperty object target  string prop  throws securityexception  nosuchmethodexception  illegalargumentexception  illegalaccessexception  invocationtargetexception
if  target    null
throw new illegalargumentexception
if  prop    null
throw new illegalargumentexception
prop   prop substring 0  1  touppercase     prop substring 1
class clazz   target getclass
method method   getpropertygetter clazz  prop
return method invoke target
public static method getpropertygetter class type  string propertyname  throws nosuchmethodexception
method method   type getmethod     objecthelper capitalize propertyname
return method
public static boolean setproperties object target  map props  string optionprefix  throws exception
boolean rc   false
if  target    null
throw new illegalargumentexception
if  props    null
throw new illegalargumentexception
for  iterator iter   props keyset   iterator    iter hasnext
string name    string iter next
if  name startswith optionprefix
object value   props get name
name   name substring optionprefix length
if  setproperty target  name  value
iter remove
rc   true
return rc
public static map extractproperties map props  string optionprefix
if  props    null
throw new illegalargumentexception
hashmap rc   new hashmap props size
for  iterator iter   props keyset   iterator    iter hasnext
string name    string iter next
if  name startswith optionprefix
object value   props get name
name   name substring optionprefix length
rc put name  value
iter remove
return rc
public static boolean setproperties typeconverter typeconverter  object target  map props  throws exception
boolean rc   false
if  target    null
throw new illegalargumentexception
if  props    null
throw new illegalargumentexception
for  iterator iter   props entryset   iterator    iter hasnext
map entry entry    map entry iter next
if  setproperty typeconverter  target   string entry getkey    entry getvalue
iter remove
rc   true
return rc
public static boolean setproperties object target  map props  throws exception
return setproperties null  target  props
public static boolean setproperty typeconverter typeconverter  object target  string name  object value  throws exception
try
class clazz   target getclass
method setter   findsettermethod typeconverter  clazz  name  value
if  setter    null
return false
// if the type is null or it matches the needed type, just use the
// value directly
if  value    null    value getclass      setter getparametertypes
setter invoke target  value
else
// we need to convert it
object convertedvalue   convert typeconverter  setter getparametertypes    value
setter invoke target  convertedvalue
return true
catch  invocationtargetexception e
throwable throwable   e gettargetexception
if  throwable instanceof exception
exception exception    exception throwable
throw exception
else
error error    error throwable
throw error
public static boolean setproperty object target  string name  object value  throws exception
return setproperty null  target  name  value
private static object convert typeconverter typeconverter  class type  object value  throws urisyntaxexception
if  typeconverter    null
object answer   typeconverter convertto type  value
if  answer    null
throw new illegalargumentexception        type getname
return answer
propertyeditor editor   propertyeditormanager findeditor type
if  editor    null
editor setastext value tostring
return editor getvalue
if  type    uri class
return new uri value tostring
return null
private static string converttostring object value  class type  throws urisyntaxexception
propertyeditor editor   propertyeditormanager findeditor type
if  editor    null
editor setvalue value
return editor getastext
if  type    uri class
return value tostring
return null
private static method findsettermethod typeconverter typeconverter  class clazz  string name  object value
// build the method name.
name       objecthelper capitalize name
while  clazz    object class
method methods   clazz getmethods
for  method method   methods
class params   method getparametertypes
if  method getname   equals name     params length    1
class paramtype   params
if  typeconverter    null    issettabletype paramtype     paramtype isinstance value
return method
clazz   clazz getsuperclass
return null
private static boolean issettabletype class clazz
if  propertyeditormanager findeditor clazz     null
return true
if  clazz    uri class
return true
if  clazz    boolean class
return true
return false
public static string tostring object target
return tostring target  object class
public static string tostring object target  class stopclass
linkedhashmap map   new linkedhashmap
addfields target  target getclass    stopclass  map
stringbuffer buffer   new stringbuffer simplename target getclass
buffer append
set entryset   map entryset
boolean first   true
for  iterator iter   entryset iterator    iter hasnext
map entry entry    map entry iter next
if  first
first   false
else
buffer append
buffer append entry getkey
buffer append
appendtostring buffer  entry getvalue
buffer append
return buffer tostring
protected static void appendtostring stringbuffer buffer  object value
// if (value instanceof activemqdestination) {
// activemqdestination destination = (activemqdestination) value;
// buffer.append(destination.getqualifiedname());
// }
// else {
buffer append value
// }
public static string simplename class clazz
string name   clazz getname
int p   name lastindexof
if  p >  0
name   name substring p   1
return name
private static void addfields object target  class startclass  class stopclass  linkedhashmap map
if  startclass    stopclass
addfields target  startclass getsuperclass    stopclass  map
field fields   startclass getdeclaredfields
for  field field   fields
if  modifier isstatic field getmodifiers       modifier istransient field getmodifiers
modifier isprivate field getmodifiers
continue
try
field setaccessible true
object o   field get target
if  o    null    o getclass   isarray
try
o   arrays aslist  object o
catch  throwable e
// ignore
map put field getname    o
catch  throwable e
log debug    e