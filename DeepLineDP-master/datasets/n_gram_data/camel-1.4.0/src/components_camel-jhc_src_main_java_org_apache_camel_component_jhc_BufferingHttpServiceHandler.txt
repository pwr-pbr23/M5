/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component jhc
import java io ioexception
import java io outputstream
import org apache http connectionreusestrategy
import org apache http httpentity
import org apache http httpentityenclosingrequest
import org apache http httpexception
import org apache http httprequest
import org apache http httpresponse
import org apache http httpresponsefactory
import org apache http httpstatus
import org apache http httpversion
import org apache http methodnotsupportedexception
import org apache http protocolexception
import org apache http protocolversion
import org apache http unsupportedhttpversionexception
import org apache http entity bytearrayentity
import org apache http nio contentdecoder
import org apache http nio contentencoder
import org apache http nio nhttpserverconnection
import org apache http nio nhttpservicehandler
import org apache http nio entity contentbufferentity
import org apache http nio entity contentoutputstream
import org apache http nio protocol nhttpservicehandlerbase
import org apache http nio util bytebufferallocator
import org apache http nio util contentinputbuffer
import org apache http nio util contentoutputbuffer
import org apache http nio util heapbytebufferallocator
import org apache http nio util simpleinputbuffer
import org apache http nio util simpleoutputbuffer
import org apache http params httpparams
import org apache http params httpparamslinker
import org apache http protocol executioncontext
import org apache http protocol httpcontext
import org apache http protocol httpprocessor
import org apache http protocol httprequesthandler
import org apache http util encodingutils
/**
* http service handler implementation that buffers the content of http messages
* entirely in memory and processes http requests on the main i/o thread.
*
* <p>this service handler should be used only when dealing with http messages
* that are known to be limited in length</p>
*
* @author <a href="mailto:oleg at ural.ru">oleg kalnichevski</a>
*
*/
public class bufferinghttpservicehandler extends nhttpservicehandlerbase
implements nhttpservicehandler
public bufferinghttpservicehandler
final httpprocessor httpprocessor
final httpresponsefactory responsefactory
final connectionreusestrategy connstrategy
final bytebufferallocator allocator
final httpparams params
super httpprocessor  responsefactory  connstrategy  allocator  params
public bufferinghttpservicehandler
final httpprocessor httpprocessor
final httpresponsefactory responsefactory
final connectionreusestrategy connstrategy
final httpparams params
this httpprocessor  responsefactory  connstrategy
new heapbytebufferallocator    params
public void connected final nhttpserverconnection conn
httpcontext context   conn getcontext
serverconnstate connstate   new serverconnstate allocator
context setattribute conn_state  connstate
if  this eventlistener    null
this eventlistener connectionopen conn
public void requestreceived final nhttpserverconnection conn
httpcontext context   conn getcontext
httprequest request   conn gethttprequest
httpparamslinker link request  this params
serverconnstate connstate    serverconnstate  context getattribute conn_state
// update connection state
connstate resetinput
connstate setrequest request
connstate setinputstate serverconnstate request_received
protocolversion ver   request getrequestline   getprotocolversion
if   ver lessequals httpversion http_1_1
// downgrade protocol version if greater than http/1.1
ver   httpversion http_1_1
httpresponse response
try
if  request instanceof httpentityenclosingrequest
if    httpentityenclosingrequest  request  expectcontinue
response   this responsefactory newhttpresponse
ver  httpstatus sc_continue  context
httpparamslinker link response  this params
if  this expectationverifier    null
try
this expectationverifier verify request  response  context
catch  httpexception ex
response   this responsefactory newhttpresponse
httpversion http_1_0
httpstatus sc_internal_server_error
context
httpparamslinker link response  this params
handleexception ex  response
if  response getstatusline   getstatuscode   < 200
// send 1xx response indicating the server expections
// have been met
conn submitresponse response
else
// the request does not meet the server expections
conn resetinput
connstate resetinput
sendresponse conn  response
// request content is expected.
// wait until the request content is fully received
else
// no request content is expected.
// process request right away
conn suspendinput
processrequest conn  request
catch  ioexception ex
shutdownconnection conn  ex
if  this eventlistener    null
this eventlistener fatalioexception ex  conn
catch  httpexception ex
closeconnection conn  ex
if  this eventlistener    null
this eventlistener fatalprotocolexception ex  conn
public void closed final nhttpserverconnection conn
if  this eventlistener    null
this eventlistener connectionclosed conn
public void exception final nhttpserverconnection conn  final httpexception httpex
httpcontext context   conn getcontext
try
httpresponse response   this responsefactory newhttpresponse
httpversion http_1_0  httpstatus sc_internal_server_error  context
httpparamslinker link response  this params
handleexception httpex  response
response setentity null
sendresponse conn  response
catch  ioexception ex
shutdownconnection conn  ex
if  this eventlistener    null
this eventlistener fatalioexception ex  conn
catch  httpexception ex
closeconnection conn  ex
if  this eventlistener    null
this eventlistener fatalprotocolexception ex  conn
public void inputready final nhttpserverconnection conn  final contentdecoder decoder
httpcontext context   conn getcontext
httprequest request   conn gethttprequest
serverconnstate connstate    serverconnstate  context getattribute conn_state
contentinputbuffer buffer   connstate getinbuffer
// update connection state
connstate setinputstate serverconnstate request_body_stream
try
buffer consumecontent decoder
if  decoder iscompleted
// request entity has been fully received
connstate setinputstate serverconnstate request_body_done
// create a wrapper entity instead of the original one
httpentityenclosingrequest entityreq    httpentityenclosingrequest  request
if  entityreq getentity      null
entityreq setentity new contentbufferentity
entityreq getentity
connstate getinbuffer
conn suspendinput
processrequest conn  request
catch  ioexception ex
shutdownconnection conn  ex
if  this eventlistener    null
this eventlistener fatalioexception ex  conn
catch  httpexception ex
closeconnection conn  ex
if  this eventlistener    null
this eventlistener fatalprotocolexception ex  conn
public void responseready final nhttpserverconnection conn
public void outputready final nhttpserverconnection conn  final contentencoder encoder
httpcontext context   conn getcontext
httpresponse response   conn gethttpresponse
serverconnstate connstate    serverconnstate  context getattribute conn_state
contentoutputbuffer buffer   connstate getoutbuffer
// update connection state
connstate setoutputstate serverconnstate response_body_stream
try
buffer producecontent encoder
if  encoder iscompleted
connstate setoutputstate serverconnstate response_body_done
connstate resetoutput
if   this connstrategy keepalive response  context
conn close
else
conn requestinput
catch  ioexception ex
shutdownconnection conn  ex
if  this eventlistener    null
this eventlistener fatalioexception ex  conn
protected void handleexception final httpexception ex  final httpresponse response
int code   httpstatus sc_internal_server_error
if  ex instanceof methodnotsupportedexception
code   httpstatus sc_not_implemented
else if  ex instanceof unsupportedhttpversionexception
code   httpstatus sc_http_version_not_supported
else if  ex instanceof protocolexception
code   httpstatus sc_bad_request
response setstatuscode code
byte msg   encodingutils getasciibytes ex getmessage
bytearrayentity entity   new bytearrayentity msg
entity setcontenttype
response setentity entity
protected void processrequest
final nhttpserverconnection conn
final httprequest request  throws ioexception  httpexception
httpcontext context   conn getcontext
protocolversion ver   request getrequestline   getprotocolversion
if   ver lessequals httpversion http_1_1
// downgrade protocol version if greater than http/1.1
ver   httpversion http_1_1
httpresponse response   this responsefactory newhttpresponse
ver
httpstatus sc_ok
conn getcontext
httpparamslinker link response  this params
context setattribute executioncontext http_request  request
context setattribute executioncontext http_connection  conn
context setattribute executioncontext http_response  response
try
this httpprocessor process request  context
httprequesthandler handler   null
if  this handlerresolver    null
string requesturi   request getrequestline   geturi
handler   this handlerresolver lookup requesturi
if  handler    null
handler handle request  response  context
else
response setstatuscode httpstatus sc_not_implemented
catch  httpexception ex
response   this responsefactory newhttpresponse httpversion http_1_0
httpstatus sc_internal_server_error  context
httpparamslinker link response  this params
handleexception ex  response
sendresponse conn  response
protected void sendresponse
final nhttpserverconnection conn
final httpresponse response  throws ioexception  httpexception
httpcontext context   conn getcontext
serverconnstate connstate    serverconnstate  context getattribute conn_state
contentoutputbuffer buffer   connstate getoutbuffer
this httpprocessor process response  context
if   canresponsehavebody connstate getrequest    response
response setentity null
conn submitresponse response
// update connection state
connstate setoutputstate serverconnstate response_sent
httpentity entity   response getentity
if  entity    null
outputstream outstream   new contentoutputstream buffer
entity writeto outstream
outstream flush
outstream close
else
connstate resetoutput
if   this connstrategy keepalive response  context
conn close
else
conn requestinput
static class serverconnstate
public static final int ready                        0
public static final int request_received             1
public static final int request_body_stream          2
public static final int request_body_done            4
public static final int response_sent                8
public static final int response_body_stream         16
public static final int response_body_done           32
private simpleinputbuffer inbuffer
private contentoutputbuffer outbuffer
private int inputstate
private int outputstate
private httprequest request
private final bytebufferallocator allocator
public serverconnstate final bytebufferallocator allocator
super
this inputstate   ready
this outputstate   ready
this allocator   allocator
public contentinputbuffer getinbuffer
if  this inbuffer    null
this inbuffer   new simpleinputbuffer 2048  allocator
return this inbuffer
public contentoutputbuffer getoutbuffer
if  this outbuffer    null
this outbuffer   new simpleoutputbuffer 2048  allocator
return this outbuffer
public int getinputstate
return this inputstate
public void setinputstate int inputstate
this inputstate   inputstate
public int getoutputstate
return this outputstate
public void setoutputstate int outputstate
this outputstate   outputstate
public httprequest getrequest
return this request
public void setrequest final httprequest request
this request   request
public void resetinput
this inbuffer   null
this request   null
this inputstate   ready
public void resetoutput
this outbuffer   null
this outputstate   ready