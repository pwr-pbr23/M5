/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import java util arraylist
import java util collections
import java util list
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlelement
import javax xml bind annotation xmlelementref
import javax xml bind annotation xmlrootelement
import org apache camel predicate
import org apache camel processor
import org apache camel builder expressionclause
import org apache camel impl converter defaulttypeconverter
import org apache camel processor choiceprocessor
import org apache camel processor filterprocessor
import org apache camel spi routecontext
import org apache camel util collectionstringbuffer
import org apache commons logging log
import org apache commons logging logfactory
/**
* represents an xml &lt;choice/&gt; element
*
* @version $revision$
*/
@xmlrootelement name
@xmlaccessortype xmlaccesstype field
public class choicetype extends processortype<choicetype>
private static final transient log log   logfactory getlog choicetype class
@xmlelementref
private list<whentype> whenclauses   new arraylist<whentype>
@xmlelement required   false
private otherwisetype otherwise
@override
public string tostring
if  getotherwise      null
return     getwhenclauses         getotherwise
else
return     getwhenclauses
@override
public string getshortname
return
@override
public processor createprocessor routecontext routecontext  throws exception
list<filterprocessor> filters   new arraylist<filterprocessor>
for  whentype whenclaus   whenclauses
filters add whenclaus createprocessor routecontext
processor otherwiseprocessor   null
if  otherwise    null
otherwiseprocessor   otherwise createprocessor routecontext
else
log warn
return new choiceprocessor filters  otherwiseprocessor
// fluent api
// -------------------------------------------------------------------------
public choicetype when predicate predicate
getwhenclauses   add new whentype predicate
return this
public expressionclause<choicetype> when
whentype when   new whentype
getwhenclauses   add when
expressionclause<choicetype> clause   new expressionclause<choicetype> this
when setexpression clause
return clause
public choicetype otherwise
otherwisetype answer   new otherwisetype
setotherwise answer
return this
// properties
// -------------------------------------------------------------------------
@override
public string getlabel
collectionstringbuffer buffer   new collectionstringbuffer
list<whentype> list   getwhenclauses
for  whentype whentype   list
buffer append whentype getlabel
return buffer tostring
public list<whentype> getwhenclauses
return whenclauses
public void setwhenclauses list<whentype> whenclauses
this whenclauses   whenclauses
public list<processortype<?>> getoutputs
if  otherwise    null
return otherwise getoutputs
else if  whenclauses isempty
return collections empty_list
else
whentype when   whenclauses get whenclauses size     1
return when getoutputs
public otherwisetype getotherwise
return otherwise
public void setotherwise otherwisetype otherwise
this otherwise   otherwise