/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component http
import java net uri
import java util map
import org apache camel endpoint
import org apache camel impl defaultcomponent
import org apache camel util introspectionsupport
import org apache commons httpclient httpconnectionmanager
import org apache commons httpclient multithreadedhttpconnectionmanager
import org apache commons httpclient params httpclientparams
/**
* defines the <a href="http://activemq.apache.org/camel/http.html">http
* component</a>
*
* @version $revision$
*/
public class httpcomponent extends defaultcomponent<httpexchange>
private httpclientconfigurer httpclientconfigurer
private httpconnectionmanager httpconnectionmanager   new multithreadedhttpconnectionmanager
/**
* connects the url specified on the endpoint to the specified processor.
*
* @throws exception
*/
public void connect httpconsumer consumer  throws exception
/**
* disconnects the url specified on the endpoint from the specified
* processor.
*
* @throws exception
*/
public void disconnect httpconsumer consumer  throws exception
public httpclientconfigurer gethttpclientconfigurer
return httpclientconfigurer
public void sethttpclientconfigurer httpclientconfigurer httpclientconfigurer
this httpclientconfigurer   httpclientconfigurer
public httpconnectionmanager gethttpconnectionmanager
return httpconnectionmanager
public void sethttpconnectionmanager httpconnectionmanager httpconnectionmanager
this httpconnectionmanager   httpconnectionmanager
@override
protected endpoint<httpexchange> createendpoint string uri  string remaining  map parameters
throws exception
httpclientparams params   new httpclientparams
introspectionsupport setproperties params  parameters
return new httpendpoint uri  this  new uri uri   params  httpconnectionmanager  httpclientconfigurer
@override
protected boolean useintrospectiononendpoint
return false