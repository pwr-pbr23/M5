/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel processor
import java text numberformat
import java util concurrent atomic atomicinteger
import org apache camel exchange
import org apache commons logging log
/**
* a logger for logging message throughput.
*
* @version $revision$
*/
public class throughputlogger extends logger
private int groupsize   100
private long starttime
private long groupstarttime
private atomicinteger receivedcounter   new atomicinteger
private numberformat numberformat   numberformat getnumberinstance
private string action
private string logmessage
public throughputlogger
public throughputlogger log log
super log
public throughputlogger log log  logginglevel level
super log  level
public throughputlogger string logname
super logname
public throughputlogger string logname  logginglevel level
super logname  level
public throughputlogger string logname  logginglevel level  int groupsize
super logname  level
setgroupsize groupsize
public throughputlogger string logname  int groupsize
super logname
setgroupsize groupsize
public throughputlogger int groupsize
setgroupsize groupsize
@override
public void process exchange exchange
if  starttime    0
starttime   system currenttimemillis
int receivedcount   receivedcounter incrementandget
if  receivedcount % groupsize    0
logmessage   createlogmessage exchange  receivedcount
super process exchange
public int getgroupsize
return groupsize
public void setgroupsize int groupsize
if  groupsize    0
throw new illegalargumentexception
this groupsize   groupsize
public numberformat getnumberformat
return numberformat
public void setnumberformat numberformat numberformat
this numberformat   numberformat
public string getaction
return action
public void setaction string action
this action   action
@override
protected object logmessage exchange exchange
return logmessage
protected string createlogmessage exchange exchange  int receivedcount
long time   system currenttimemillis
if  groupstarttime    0
groupstarttime   starttime
double rate   messagespersecond groupsize  groupstarttime  time
double average   messagespersecond receivedcount  starttime  time
groupstarttime   time
return getaction         receivedcount        time   groupstarttime
numberformat format rate
numberformat format average
// timeonemessage = elapsed / messagecount
// messagepersend = 1000 / timeonemessage
protected double messagespersecond long messagecount  long starttime  long endtime
double rate   messagecount   1000 0
rate    endtime   starttime
return rate