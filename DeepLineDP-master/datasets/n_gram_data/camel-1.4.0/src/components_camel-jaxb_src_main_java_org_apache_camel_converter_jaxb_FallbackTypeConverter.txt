/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel converter jaxb
import java io inputstream
import java io reader
import java io stringreader
import java io stringwriter
import javax xml bind jaxbcontext
import javax xml bind jaxbexception
import javax xml bind marshaller
import javax xml bind unmarshaller
import javax xml bind annotation xmlrootelement
import javax xml bind util jaxbsource
import javax xml transform source
import org apache camel runtimecamelexception
import org apache camel typeconverter
import org apache camel spi typeconverteraware
import org apache commons logging log
import org apache commons logging logfactory
/**
* @version $revision$
*/
public class fallbacktypeconverter implements typeconverter  typeconverteraware
private static final transient log log   logfactory getlog fallbacktypeconverter class
private typeconverter parenttypeconverter
private boolean prettyprint   true
public boolean isprettyprint
return prettyprint
public void setprettyprint boolean prettyprint
this prettyprint   prettyprint
public void settypeconverter typeconverter parenttypeconverter
this parenttypeconverter   parenttypeconverter
public <t> t convertto class<t> type  object value
try
if  isjaxbtype type
return unmarshall type  value
if  value    null
if  isjaxbtype value getclass
return marshall type  value
return null
catch  jaxbexception e
throw new runtimecamelexception e
protected <t> boolean isjaxbtype class<t> type
xmlrootelement element   type getannotation xmlrootelement class
boolean jaxbtype   element    null
return jaxbtype
/**
* lets try parse via jaxb
*/
protected <t> t unmarshall class<t> type  object value  throws jaxbexception
jaxbcontext context   createcontext type
unmarshaller unmarshaller   context createunmarshaller
if  parenttypeconverter    null
inputstream inputstream   parenttypeconverter convertto inputstream class  value
if  inputstream    null
object unmarshalled   unmarshaller unmarshal inputstream
return type cast unmarshalled
reader reader   parenttypeconverter convertto reader class  value
if  reader    null
object unmarshalled   unmarshaller unmarshal reader
return type cast unmarshalled
source source   parenttypeconverter convertto source class  value
if  source    null
object unmarshalled   unmarshaller unmarshal source
return type cast unmarshalled
if  value instanceof string
value   new stringreader  string  value
if  value instanceof inputstream
object unmarshalled   unmarshaller unmarshal  inputstream  value
return type cast unmarshalled
if  value instanceof reader
object unmarshalled   unmarshaller unmarshal  reader  value
return type cast unmarshalled
return null
protected <t> t marshall class<t> type  object value  throws jaxbexception
if  parenttypeconverter    null
// lets convert the object to a jaxb source and try convert that to
// the required source
jaxbcontext context   createcontext value getclass
jaxbsource source   new jaxbsource context  value
t answer   parenttypeconverter convertto type  source
if  answer    null
// lets try a stream
stringwriter buffer   new stringwriter
marshaller marshaller   context createmarshaller
marshaller setproperty marshaller jaxb_formatted_output  isprettyprint   ? boolean true   boolean false
marshaller marshal value  buffer
return parenttypeconverter convertto type  buffer tostring
return answer
// lets try convert to the type from jaxb
return null
protected <t> jaxbcontext createcontext class<t> type  throws jaxbexception
jaxbcontext context   jaxbcontext newinstance type
return context