/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlrootelement
import org apache camel expression
import org apache camel processor
import org apache camel model language expressiontype
import org apache camel processor delayer
import org apache camel spi routecontext
/**
* represents an xml &lt;delayer/&gt; element
*
* @version $revision$
*/
@xmlrootelement name
@xmlaccessortype xmlaccesstype field
public class delayertype extends expressionnode
private long delay   0l
public delayertype
public delayertype expression processatexpression
super processatexpression
public delayertype expressiontype processatexpression
super processatexpression
public delayertype expression processatexpression  long delay
super processatexpression
this delay   delay
@override
public string tostring
return     getexpression         getoutputs
@override
public string getshortname
return
public long getdelay
return delay
public void setdelay long delay
this delay   delay
@override
public processor createprocessor routecontext routecontext  throws exception
processor childprocessor   routecontext createprocessor this
expression processatexpression   getexpression      null ? getexpression   createexpression routecontext    null
return new delayer childprocessor  processatexpression  delay