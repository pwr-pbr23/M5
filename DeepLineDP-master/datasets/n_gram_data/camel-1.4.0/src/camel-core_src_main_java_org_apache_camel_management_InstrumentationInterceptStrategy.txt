/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel management
import java util map
import org apache camel processor
import org apache camel model processortype
import org apache camel spi interceptstrategy
/**
* this strategy class wraps targeted processors with a
* {@link instrumentationprocessor}. each instrumentationprocessor has an
* embedded {@link performancecounter} for monitoring performance metrics.
* <p/>
* this class looks up a map to determine which performancecounter should go into the
* instrumentationprocessor for any particular target processor.
*
* @version $revision$
*/
public class instrumentationinterceptstrategy implements interceptstrategy
private map<processortype  performancecounter> countermap
public instrumentationinterceptstrategy map<processortype  performancecounter> countermap
this countermap   countermap
public processor wrapprocessorininterceptors processortype processortype
processor target  throws exception
processor retval   target
performancecounter counter   countermap get processortype
if  counter    null
instrumentationprocessor wrapper   new instrumentationprocessor counter
wrapper setprocessor target
retval   wrapper
return retval