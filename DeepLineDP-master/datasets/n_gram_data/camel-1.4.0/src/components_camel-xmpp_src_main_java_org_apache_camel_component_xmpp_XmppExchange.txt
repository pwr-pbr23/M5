/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component xmpp
import org apache camel camelcontext
import org apache camel exchange
import org apache camel exchangepattern
import org apache camel impl defaultexchange
import org jivesoftware smack packet message
/**
* represents an {@link exchange} for working with xmpp
*
* @version $revision:520964 $
*/
public class xmppexchange extends defaultexchange
private xmppbinding binding
public xmppexchange camelcontext context  exchangepattern pattern  xmppbinding binding
super context  pattern
this binding   binding
public xmppexchange camelcontext context  exchangepattern pattern  xmppbinding binding  message message
this context  pattern  binding
setin new xmppmessage message
public xmppexchange defaultexchange parent  xmppbinding binding
super parent
this binding   binding
@override
public xmppmessage getin
return  xmppmessage  super getin
@override
public xmppmessage getout
return  xmppmessage  super getout
@override
public xmppmessage getout boolean lazycreate
return  xmppmessage  super getout lazycreate
@override
public xmppmessage getfault
return  xmppmessage  super getfault
public xmppbinding getbinding
return binding
@override
public exchange newinstance
return new xmppexchange this  binding
// expose the underlying xmpp apis
//-------------------------------------------------------------------------
/**
* return the underlying xmpp in message
*
* @return the xmpp in message
*/
public message getinmessage
return getin   getxmppmessage
/**
* return the underlying xmpp out message
*
* @return the xmpp out message
*/
public message getoutmessage
return getout   getxmppmessage
/**
* return the underlying xmpp fault message
*
* @return the xmpp fault message
*/
public message getfaultmessage
return getout   getxmppmessage
// implementation methods
//-------------------------------------------------------------------------
@override
protected xmppmessage createinmessage
return new xmppmessage
@override
protected xmppmessage createoutmessage
return new xmppmessage