/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component cxf invoker
import java util identityhashmap
import java util list
import java util map
import java util logging level
import java util logging logger
import org w3c dom element
import org apache cxf common logging logutils
import org apache cxf message exchange
import org apache cxf message message
public class payloadinvokingcontext extends abstractinvokingcontext
private static final logger log   logutils getl7dlogger payloadinvokingcontext class
public payloadinvokingcontext
public void setrequestoutmessagecontent message message  map<class  object> contents
payloadmessage request    payloadmessage contents get payloadmessage class
element header   request getheader
list<element> payload   request getpayload
if  log isloggable level finest
log finest     header       payload
message put element class  header
message put list class  payload
@suppresswarnings
public object getresponseobject exchange exchange  map<string  object> responsecontext
payloadmessage payloadmsg   null
message msg   exchange getinmessage
list<element> payload   getresponseobject msg   responsecontext  list class
element header   exchange getinmessage   get element class
payloadmsg   new payloadmessage payload  header
if  log isloggable level finest
log finest payloadmsg tostring
return payloadmsg
@override
protected <t> t getresponseobject message inmessage  map<string  object> responsecontext
class <t> clazz
t retval   null
if  inmessage    null
if  null    responsecontext
responsecontext putall inmessage
log info     responsecontext
retval   inmessage get clazz
return retval
public void setresponsecontent message outmessage  object resultpayload
if  resultpayload    null
payloadmessage payloadmessage    payloadmessage  resultpayload
if  log isloggable level finest
log finest payloadmessage tostring
outmessage put list class  payloadmessage getpayload
outmessage put element class  payloadmessage getheader
@suppresswarnings
public map<class  object> getrequestcontent message inmessage
list<element> payload   inmessage get list class
element header   inmessage get element class
if  log isloggable level finest
log finest     header       payload
map<class  object> contents   new identityhashmap<class  object>
contents put payloadmessage class  new payloadmessage payload  header
return contents
@override
protected logger getlogger
return log