/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component direct
import org apache camel asynccallback
import org apache camel asyncprocessor
import org apache camel exchange
import org apache camel impl defaultconsumer
import org apache camel impl defaultproducer
import org apache camel impl converter asyncprocessortypeconverter
import org apache commons logging log
import org apache commons logging logfactory
/**
* the direct producer.
*
* @version $revision$
*/
public class directproducer<e extends exchange> extends defaultproducer implements asyncprocessor
private static final transient log log   logfactory getlog directproducer class
private directendpoint<e> endpoint
public directproducer directendpoint<e> endpoint
super endpoint
this endpoint   endpoint
public void process exchange exchange  throws exception
if  endpoint getconsumers   isempty
log warn     this       exchange
else
for  defaultconsumer<e> consumer   endpoint getconsumers
consumer getprocessor   process exchange
public boolean process exchange exchange  asynccallback callback
int size   endpoint getconsumers   size
if  size    0
log warn     this       exchange
else if  size    1
defaultconsumer<e> consumer   endpoint getconsumers   get 0
asyncprocessor processor   asyncprocessortypeconverter convert consumer getprocessor
return processor process exchange  callback
else if  size > 1
// too hard to do multiple async.. do it sync
try
for  defaultconsumer<e> consumer   endpoint getconsumers
consumer getprocessor   process exchange
catch  throwable error
exchange setexception error
callback done true
return true