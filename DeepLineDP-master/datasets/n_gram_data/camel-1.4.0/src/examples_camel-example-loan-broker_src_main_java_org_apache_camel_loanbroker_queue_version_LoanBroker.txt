/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel loanbroker queue version
import javax jms connectionfactory
import org apache activemq activemqconnectionfactory
import org apache camel camelcontext
import org apache camel exchange
import org apache camel message
import org apache camel processor
import org apache camel builder routebuilder
import org apache camel component jms jmscomponent
import org apache camel impl defaultcamelcontext
import org apache camel processor aggregate uselatestaggregationstrategy
import org apache camel spring main
import org apache commons logging log
import org apache commons logging logfactory
/**
* the loanbroker is a routebuilder which builds the whole loan message routing rules
*
* @version $
*/
public class loanbroker extends routebuilder
/**
* a main() so we can easily run these routing rules in our ide
* @throws exception
*/
// start snippet: starting
public static void main string    args  throws exception
camelcontext context   new defaultcamelcontext
jmsbroker broker   new jmsbroker
broker start
// set up the activemq jms components
connectionfactory connectionfactory   new activemqconnectionfactory
// note we can explicitly name the component
context addcomponent    jmscomponent jmscomponentautoacknowledge connectionfactory
context addroutes new loanbroker
// start the loan broker
context start
system out println
thread sleep 5   60   1000
context stop
thread sleep 1000
broker stop
// end snippet: starting
/**
* lets configure the camel routing rules using java code...
*/
public void configure
// start snippet: dsl
// put the message from loanrequestqueue to the creditrequestqueue
from    to
// now we can let the creditagency process the request, then the message will be put into creditresponsequeue
from    process new creditagency    to
// here we use the multicast pattern to send the message to three different bank queue
from    multicast   to
// each bank processor will process the message and put the response message into the bankreplyqueue
from    process new bank     to
from    process new bank     to
from    process new bank     to
// now we aggregating the response message by using the constants.property_ssn header
// the aggregation will completed when all the three bank responses are received
from
aggregator header constants property_ssn   new bankresponseaggregationstrategy
completedpredicate header    isequalto 3
// here we do some translation and put the message back to loanreplyqueue
process new translator    to
// end snippet: dsl