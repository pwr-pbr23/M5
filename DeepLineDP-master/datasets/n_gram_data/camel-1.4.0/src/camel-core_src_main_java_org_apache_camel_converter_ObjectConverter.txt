/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel converter
import java util collection
import java util iterator
import org apache camel converter
import org apache camel util objecthelper
/**
* some core java.lang based <a
* href="http://activemq.apache.org/camel/type-converter.html">type converters</a>
*
* @version $revision$
*/
@converter
public final class objectconverter
/**
* utility classes should not have a public constructor.
*/
private objectconverter
public static boolean iscollection object value
// todo we should handle primitive array types?
return value instanceof collection     value    null    value getclass   isarray
/**
* creates an iterator over the value
*
* @deprecated use {@link org.apache.camel.util.objecthelper#createiterator(object)}. will be removed in camel 2.0.
*/
@suppresswarnings
@converter
@deprecated
public static iterator iterator object value
return objecthelper createiterator value
/**
* converts the given value to a boolean, handling strings or boolean
* objects; otherwise returning false if the value could not be converted to
* a boolean
*/
@converter
public static boolean tobool object value
boolean answer   toboolean value
if  answer    null
return answer booleanvalue
return false
/**
* converts the given value to a boolean, handling strings or boolean
* objects; otherwise returning null if the value cannot be converted to a
* boolean
*/
@converter
public static boolean toboolean object value
return objecthelper toboolean value
/**
* returns the boolean value, or null if the value is null
*/
@converter
public static boolean toboolean boolean value
if  value    null
return value
return boolean false
/**
* returns the converted value, or null if the value is null
*/
@converter
public static byte tobyte object value
if  value instanceof byte
return  byte  value
else if  value instanceof number
number number    number  value
return byte valueof number bytevalue
else if  value instanceof string
return byte valueof  string  value
else
return null
@converter
public static byte tobytearray string value
return value getbytes
@converter
public static char tochararray string value
return value tochararray
@converter
public static string fromchararray char value
return new string value
/**
* returns the converted value, or null if the value is null
*/
@converter
public static short toshort object value
if  value instanceof short
return  short  value
else if  value instanceof number
number number    number  value
return short valueof number shortvalue
else if  value instanceof string
return short valueof  string  value
else
return null
/**
* returns the converted value, or null if the value is null
*/
@converter
public static integer tointeger object value
if  value instanceof integer
return  integer  value
else if  value instanceof number
number number    number  value
return integer valueof number intvalue
else if  value instanceof string
return integer valueof  string  value
else
return null
/**
* returns the converted value, or null if the value is null
*/
@converter
public static long tolong object value
if  value instanceof long
return  long  value
else if  value instanceof number
number number    number  value
return long valueof number longvalue
else if  value instanceof string
return long valueof  string  value
else
return null
/**
* returns the converted value, or null if the value is null
*/
@converter
public static float tofloat object value
if  value instanceof float
return  float  value
else if  value instanceof number
number number    number  value
return float valueof number floatvalue
else if  value instanceof string
return float valueof  string  value
else
return null
/**
* returns the converted value, or null if the value is null
*/
@converter
public static double todouble object value
if  value instanceof double
return  double  value
else if  value instanceof number
number number    number  value
return double valueof number doublevalue
else if  value instanceof string
return double valueof  string  value
else
return null