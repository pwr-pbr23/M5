/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component file
import java io file
import java io fileoutputstream
import java io inputstream
import java io randomaccessfile
import java nio bytebuffer
import java nio channels filechannel
import org apache camel exchange
import org apache camel message
import org apache camel impl defaultproducer
import org apache camel util exchangehelper
import org apache camel util objecthelper
import org apache camel util uuidgenerator
import org apache commons logging log
import org apache commons logging logfactory
/**
* for producing files.
*
* @version $revision$
*/
public class fileproducer extends defaultproducer
private static final transient log log   logfactory getlog fileproducer class
private fileendpoint endpoint
public fileproducer fileendpoint endpoint
super endpoint
this endpoint   endpoint
public fileendpoint getendpoint
return  fileendpoint  super getendpoint
public void process exchange exchange  throws exception
fileexchange fileexchange   endpoint createexchange exchange
process fileexchange
exchangehelper copyresults exchange  fileexchange
public void process fileexchange exchange  throws exception
inputstream in   exchangehelper getmandatoryinbody exchange  inputstream class
file file   createfilename exchange getin
builddirectory file
if  log isdebugenabled
log debug     file       exchange
filechannel fc   null
try
if  getendpoint   isappend
fc   new randomaccessfile file     getchannel
fc position fc size
else
fc   new fileoutputstream file  getchannel
int size   getendpoint   getbuffersize
byte buffer   new byte
bytebuffer bytebuffer   bytebuffer wrap buffer
while  true
int count   in read buffer
if  count <  0
break
else if  count < size
bytebuffer   bytebuffer wrap buffer  0  count
fc write bytebuffer
break
else
fc write bytebuffer
bytebuffer clear
finally
objecthelper close in  file getname    log
objecthelper close fc  file getname    log
protected file createfilename message message
file answer
string name   null
if   endpoint isignorefilenameheader
name   message getheader filecomponent header_file_name  string class
file endpointfile   endpoint getfile
if  endpointfile isdirectory
if  name    null
answer   new file endpointfile  name
if  answer isdirectory
answer   new file answer  endpoint getgeneratedfilename message
else
answer   new file endpointfile  endpoint getgeneratedfilename message
else
if  name    null
answer   endpointfile
else
answer   new file endpointfile  name
// lets store the name we really used in the header, so end-users can retrieve it
message setheader filecomponent header_file_name_produced  answer getabsolutepath
return answer
private void builddirectory file file
string dirname   file getabsolutepath
int index   dirname lastindexof file separatorchar
if  index > 0
dirname   dirname substring 0  index
file dir   new file dirname
dir mkdirs