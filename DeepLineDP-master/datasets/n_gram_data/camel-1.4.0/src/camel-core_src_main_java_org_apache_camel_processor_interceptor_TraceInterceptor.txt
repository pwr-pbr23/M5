/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel processor interceptor
import org apache camel exchange
import org apache camel predicate
import org apache camel processor
import org apache camel model processortype
import org apache camel processor delegateprocessor
import org apache camel processor logger
import org apache camel processor logginglevel
import org apache commons logging log
import org apache commons logging logfactory
/**
* an interceptor for debugging and tracing routes
*
* @version $revision$
*/
public class traceinterceptor extends delegateprocessor implements exchangeformatter
private final processortype node
private predicate tracefilter
private boolean traceexceptions   true
private logger logger   new logger logfactory getlog traceinterceptor class   this
private traceformatter formatter
public traceinterceptor processortype node  processor target  traceformatter formatter
super target
this node   node
this formatter   formatter
@override
public string tostring
return     node
public void process exchange exchange  throws exception
try
if  shouldlogexchange exchange
logexchange exchange
super proceed exchange
catch  exception e
logexception exchange  e
throw e
catch  error e
logexception exchange  e
throw e
public object format exchange exchange
return formatter format this  exchange
// properties
//-------------------------------------------------------------------------
public processortype getnode
return node
public predicate gettracefilter
return tracefilter
public void settracefilter predicate tracefilter
this tracefilter   tracefilter
public boolean istraceexceptions
return traceexceptions
public void settraceexceptions boolean traceexceptions
this traceexceptions   traceexceptions
public logger getlogger
return logger
public traceformatter getformatter
return formatter
public void setformatter traceformatter formatter
this formatter   formatter
public logginglevel getlevel
return getlogger   getlevel
public log getlog
return getlogger   getlog
public void setlog log log
getlogger   setlog log
public void setlevel logginglevel level
getlogger   setlevel level
// implementation methods
//-------------------------------------------------------------------------
protected void logexchange exchange exchange
logger process exchange
protected void logexception exchange exchange  throwable throwable
logger process exchange  throwable
/**
* returns true if the given exchange should be logged in the trace list
*/
protected boolean shouldlogexchange exchange exchange
return tracefilter    null    tracefilter matches exchange