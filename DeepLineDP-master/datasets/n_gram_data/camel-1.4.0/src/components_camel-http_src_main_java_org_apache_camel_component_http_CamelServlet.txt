/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component http
import java io ioexception
import java util concurrent concurrenthashmap
import javax servlet servletexception
import javax servlet http httpservlet
import javax servlet http httpservletrequest
import javax servlet http httpservletresponse
/**
* @version $revision$
*/
public class camelservlet extends httpservlet
private concurrenthashmap<string  httpconsumer> consumers   new concurrenthashmap<string  httpconsumer>
public camelservlet
@override
protected void service httpservletrequest request  httpservletresponse response  throws servletexception  ioexception
try
// is there a consumer registered for the request.
httpconsumer consumer   resolve request
if  consumer    null
response senderror httpservletresponse sc_not_found
return
// have the camel process the http exchange.
httpexchange exchange   new httpexchange consumer getendpoint    request  response
consumer getprocessor   process exchange
// hc: the getbinding() is interesting because it illustrates the
// impedance miss-match between
// http's stream oriented protocol, and camels more message oriented
// protocol exchanges.
// now lets output to the response
consumer getbinding   writeresponse exchange  response
catch  exception e
throw new servletexception e
protected httpconsumer resolve httpservletrequest request
string path   request getpathinfo
return consumers get path
public void connect httpconsumer consumer
consumers put consumer getpath    consumer
public void disconnect httpconsumer consumer
consumers remove consumer getpath