/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel spring remoting
import org aopalliance intercept methodinterceptor
import org aopalliance intercept methodinvocation
import org apache camel camelcontext
import org apache camel camelcontextaware
import org apache camel endpoint
import org apache camel producer
import org apache camel component bean camelinvocationhandler
import org apache camel util camelcontexthelper
import org springframework beans factory disposablebean
import org springframework beans factory initializingbean
import static org apache camel util objecthelper notnull
/**
* a spring interceptor which sends a message exchange to an endpoint before the method is invoked
*
* @version $revision$
*/
public class sendbeforeinterceptor implements methodinterceptor  camelcontextaware  initializingbean  disposablebean
private string uri
private camelcontext camelcontext
private camelinvocationhandler invocationhandler
private producer producer
public object invoke methodinvocation invocation  throws throwable
invocationhandler invoke invocation getthis    invocation getmethod    invocation getarguments
return invocation proceed
public void afterpropertiesset   throws exception
notnull uri
notnull camelcontext
endpoint endpoint   camelcontexthelper getmandatoryendpoint camelcontext  uri
producer   endpoint createproducer
producer start
invocationhandler   new camelinvocationhandler endpoint  producer
public void destroy   throws exception
if  producer    null
producer stop
public void setcamelcontext camelcontext camelcontext
this camelcontext   camelcontext
// properties
//-----------------------------------------------------------------------
public string geturi
return uri
public void seturi string uri
this uri   uri