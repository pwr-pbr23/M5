/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component list
import java beans propertychangelistener
import java beans propertychangesupport
import java util list
import java util concurrent copyonwritearraylist
import org apache camel camelcontext
import org apache camel component
import org apache camel consumer
import org apache camel exchange
import org apache camel processor
import org apache camel producer
import org apache camel impl defaultendpoint
import org apache camel impl defaultproducer
import org apache camel processor loadbalancer loadbalancerconsumer
import org apache camel processor loadbalancer topicloadbalancer
import org apache camel spi browsableendpoint
/**
* an endpoint which maintains a {@link list} of {@link exchange} instances
* which can be useful for tooling, debugging and visualising routes.
*
* @version $revision$
*/
public class listendpoint extends defaultendpoint<exchange> implements browsableendpoint<exchange>
private list<exchange> exchanges
private topicloadbalancer loadbalancer   new topicloadbalancer
private propertychangesupport propertychangesupport   new propertychangesupport this
public listendpoint string uri  camelcontext camelcontext
super uri  camelcontext
reset
public listendpoint string uri  component component
super uri  component
reset
public listendpoint string endpointuri
super endpointuri
reset
public boolean issingleton
return true
public list<exchange> getexchanges
return exchanges
public topicloadbalancer getloadbalancer
return loadbalancer
public void addpropertychangelistener propertychangelistener listener
propertychangesupport addpropertychangelistener listener
public void removepropertychangelistener propertychangelistener listener
propertychangesupport removepropertychangelistener listener
public producer<exchange> createproducer   throws exception
return new defaultproducer<exchange> this
public void process exchange exchange  throws exception
onexchange exchange
public consumer<exchange> createconsumer processor processor  throws exception
return new loadbalancerconsumer this  processor  loadbalancer
public void reset
exchanges   createexchangelist
protected list<exchange> createexchangelist
return new copyonwritearraylist<exchange>
/**
* invoked on a message exchange being sent by a producer
*/
protected void onexchange exchange exchange  throws exception
exchanges add exchange
// lets fire any consumers
loadbalancer process exchange