/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model language
import java util list
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlattribute
import javax xml bind annotation xmlid
import javax xml bind annotation xmltransient
import javax xml bind annotation xmltype
import javax xml bind annotation xmlvalue
import javax xml bind annotation adapters collapsedstringadapter
import javax xml bind annotation adapters xmljavatypeadapter
import org apache camel camelcontext
import org apache camel exchange
import org apache camel expression
import org apache camel predicate
import org apache camel builder expressionclause
import org apache camel impl defaultroutecontext
import org apache camel spi language
import org apache camel spi routecontext
import org apache camel util collectionstringbuffer
import org apache camel util introspectionsupport
import org apache camel util objecthelper
/**
* a useful base class for an expression
*
* @version $revision$
*/
@xmltype name
@xmlaccessortype xmlaccesstype field
public class expressiontype implements expression<exchange>  predicate<exchange>
@xmlattribute
@xmljavatypeadapter collapsedstringadapter class
@xmlid
private string id
@xmlvalue
private string expression
@xmltransient
private predicate predicate
@xmltransient
private expression expressionvalue
@xmltransient
private expressiontype expressiontype
public expressiontype
public expressiontype string expression
this expression   expression
public expressiontype predicate predicate
this predicate   predicate
public expressiontype expression expression
this expressionvalue   expression
public static string getlabel list<expressiontype> expressions
collectionstringbuffer buffer   new collectionstringbuffer
for  expressiontype expression   expressions
buffer append expression getlabel
return buffer tostring
@override
public string tostring
return getlanguage         getexpression
public object evaluate exchange exchange
if  expressionvalue    null
routecontext routecontext   new defaultroutecontext exchange getcontext
expressionvalue   createexpression routecontext
objecthelper notnull expressionvalue
return expressionvalue evaluate exchange
public void assertmatches string text  exchange exchange  throws assertionerror
if   matches exchange
throw new assertionerror text   getexpression         exchange
public boolean matches exchange exchange
if  predicate    null
routecontext routecontext   new defaultroutecontext exchange getcontext
predicate   createpredicate routecontext
objecthelper notnull predicate
return predicate matches exchange
public string getlanguage
return
public predicate<exchange> createpredicate routecontext routecontext
if  predicate    null
if  expressiontype    null
predicate   expressiontype createpredicate routecontext
else
camelcontext camelcontext   routecontext getcamelcontext
language language   camelcontext resolvelanguage getlanguage
predicate   language createpredicate getexpression
configurepredicate routecontext  predicate
return predicate
public expression createexpression routecontext routecontext
if  expressionvalue    null
if  expressiontype    null
expressionvalue   expressiontype createexpression routecontext
else
camelcontext camelcontext   routecontext getcamelcontext
language language   camelcontext resolvelanguage getlanguage
expressionvalue   language createexpression getexpression
configureexpression routecontext  expressionvalue
return expressionvalue
public string getexpression
return expression
public void setexpression string expression
this expression   expression
/**
* gets the value of the id property.
*
* @return possible object is
*         {@link string }
*/
public string getid
return id
/**
* sets the value of the id property.
*
* @param value allowed object is
*              {@link string }
*/
public void setid string value
this id   value
public predicate getpredicate
return predicate
public expression getexpressionvalue
return expressionvalue
protected void setexpressionvalue expression expressionvalue
this expressionvalue   expressionvalue
/**
* returns some descriptive text to describe this node
*/
public string getlabel
string language   getexpression
if  objecthelper isnullorblank language
predicate predicate   getpredicate
if  predicate    null
return predicate tostring
expression expressionvalue   getexpressionvalue
if  expressionvalue    null
return expressionvalue tostring
else
return language
return
/**
* allows derived classes to set a lazily created expressiontype instance
* such as if using the {@link expressionclause}
*/
protected void setexpressiontype expressiontype expressiontype
this expressiontype   expressiontype
protected void configurepredicate routecontext routecontext  predicate predicate
protected void configureexpression routecontext routecontext  expression expression
/**
* sets a named property on the object instance using introspection
*/
protected void setproperty object bean  string name  object value
try
introspectionsupport setproperty bean  name  value
catch  exception e
throw new illegalargumentexception     name       bean
e  e