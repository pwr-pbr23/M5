/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import java util arraylist
import java util collection
import java util list
import javax xml bind annotation xmlelement
import javax xml bind annotation xmlelementref
import javax xml bind annotation xmlrootelement
import javax xml bind annotation xmltransient
import org apache camel exchange
import org apache camel expression
import org apache camel processor
import org apache camel route
import org apache camel model config batchresequencerconfig
import org apache camel model config streamresequencerconfig
import org apache camel model language expressiontype
import org apache camel processor resequencer
import org apache camel processor streamresequencer
import org apache camel spi routecontext
/**
* represents an xml &lt;resequencer/&gt; element
*
* @version $revision$
*/
@xmlrootelement name
public class resequencertype extends processortype<processortype>
@xmlelementref
private list<expressiontype> expressions   new arraylist<expressiontype>
@xmlelementref
private list<processortype<?>> outputs   new arraylist<processortype<?>>
// binding annotation at setter
private batchresequencerconfig batchconfig
// binding annotation at setter
private streamresequencerconfig streamconfig
@xmltransient
private list<expression> expressionlist
public resequencertype
this null
public resequencertype list<expression> expressions
this expressionlist   expressions
this batch
@override
public string getshortname
return
/**
* configures the stream-based resequencing algorithm using the default
* configuration.
*
* @return <code>this</code> instance.
*/
public resequencertype stream
return stream streamresequencerconfig getdefault
/**
* configures the batch-based resequencing algorithm using the default
* configuration.
*
* @return <code>this</code> instance.
*/
public resequencertype batch
return batch batchresequencerconfig getdefault
/**
* configures the stream-based resequencing algorithm using the given
* {@link streamresequencerconfig}.
*
* @return <code>this</code> instance.
*/
public resequencertype stream streamresequencerconfig config
this streamconfig   config
this batchconfig   null
return this
/**
* configures the batch-based resequencing algorithm using the given
* {@link batchresequencerconfig}.
*
* @return <code>this</code> instance.
*/
public resequencertype batch batchresequencerconfig config
this batchconfig   config
this streamconfig   null
return this
public resequencertype expression expressiontype expression
expressions add expression
return this
@override
public string tostring
return     getexpressions         getoutputs
@override
public string getlabel
return expressiontype getlabel getexpressions
public list<expressiontype> getexpressions
return expressions
public list<processortype<?>> getoutputs
return outputs
public void setoutputs list<processortype<?>> outputs
this outputs   outputs
public batchresequencerconfig getbatchconfig
return batchconfig
public batchresequencerconfig getbatchconfig batchresequencerconfig defaultconfig
return batchconfig
public streamresequencerconfig getstreamconfig
return streamconfig
@xmlelement name      required   false
public void setbatchconfig batchresequencerconfig batchconfig
// todo: find out how to have these two within an <xsd:choice>
batch batchconfig
@xmlelement name      required   false
public void setstreamconfig streamresequencerconfig streamconfig
// todo: find out how to have these two within an <xsd:choice>
stream streamconfig
@override
public processor createprocessor routecontext routecontext  throws exception
if  batchconfig    null
return createbatchresequencer routecontext  batchconfig
else
// streamconfig should be non-null if batchconfig is null
return createstreamresequencer routecontext  streamconfig
@override
public void addroutes routecontext routecontext  collection<route> routes  throws exception
if  batchconfig    null
routes add createbatchresequencerroute routecontext
else
// streamresequencer created via createprocessor method
super addroutes routecontext  routes
private route<? extends exchange> createbatchresequencerroute routecontext routecontext  throws exception
final resequencer resequencer   createbatchresequencer routecontext  batchconfig
return new route routecontext getendpoint    resequencer
@override
public string tostring
return     getendpoint         resequencer getprocessor
protected resequencer createbatchresequencer routecontext routecontext
batchresequencerconfig config  throws exception
processor processor   routecontext createprocessor this
resequencer resequencer   new resequencer routecontext getendpoint
processor  resolveexpressionlist routecontext
resequencer setbatchsize config getbatchsize
resequencer setbatchtimeout config getbatchtimeout
return resequencer
protected streamresequencer createstreamresequencer routecontext routecontext
streamresequencerconfig config  throws exception
config getcomparator   setexpressions resolveexpressionlist routecontext
processor processor   routecontext createprocessor this
streamresequencer resequencer   new streamresequencer processor
config getcomparator    config getcapacity
resequencer settimeout config gettimeout
return resequencer
private list<expression> resolveexpressionlist routecontext routecontext
if  expressionlist    null
expressionlist   new arraylist<expression>
for  expressiontype expression   expressions
expressionlist add expression createexpression routecontext
if  expressionlist isempty
throw new illegalargumentexception     this
return expressionlist