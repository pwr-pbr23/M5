/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component cxf feature
import java util logging logger
import org apache camel component cxf interceptors domininterceptor
import org apache camel component cxf interceptors domoutinterceptor
import org apache camel component cxf interceptors faultoutinterceptor
import org apache camel component cxf interceptors payloadcontentredirectinterceptor
import org apache cxf bus
import org apache cxf binding binding
import org apache cxf common logging logutils
import org apache cxf endpoint client
import org apache cxf endpoint server
import org apache cxf phase phase
/**
* this feature just setting up the cxf endpoint interceptor for handling the
* message in payload data format
*/
public class payloaddataformatfeature extends abstractdataformatfeature
private static final logger log   logutils getl7dlogger payloaddataformatfeature class
// filter the unused phase
private static final string removing_in_phases    phase unmarshal  phase pre_logical  phase pre_logical_ending  phase post_logical  phase post_logical_ending
private static final string removing_out_phases    phase marshal  phase marshal_ending  phase pre_logical  phase pre_logical_ending  phase post_logical  phase post_logical_ending
@override
public void initialize client client  bus bus
removeinterceptorwhichisinthephases client getininterceptors    removing_in_phases
removeinterceptorwhichisinthephases client getendpoint   getservice   getininterceptors    removing_in_phases
removeinterceptorwhichisinthephases client getendpoint   getininterceptors    removing_in_phases
removeinterceptorwhichisinthephases client getendpoint   getbinding   getininterceptors    removing_in_phases
removeinterceptorwhichisinthephases client getoutinterceptors    removing_out_phases
removeinterceptorwhichisinthephases client getendpoint   getservice   getoutinterceptors    removing_out_phases
removeinterceptorwhichisinthephases client getendpoint   getoutinterceptors    removing_out_phases
removeinterceptorwhichisinthephases client getendpoint   getbinding   getoutinterceptors    removing_out_phases
adddatahandlinginterceptors client getendpoint   getbinding
client getendpoint   getbinding   getoutfaultinterceptors   add new faultoutinterceptor
@override
public void initialize server server  bus bus
removeinterceptorwhichisinthephases server getendpoint   getservice   getininterceptors    removing_in_phases
removeinterceptorwhichisinthephases server getendpoint   getininterceptors    removing_in_phases
removeinterceptorwhichisinthephases server getendpoint   getbinding   getininterceptors    removing_in_phases
removeinterceptorwhichisinthephases server getendpoint   getservice   getoutinterceptors    removing_out_phases
removeinterceptorwhichisinthephases server getendpoint   getoutinterceptors    removing_out_phases
removeinterceptorwhichisinthephases server getendpoint   getbinding   getoutinterceptors    removing_out_phases
// set the invoker interceptor
resetserviceinvokerinterceptor server
adddatahandlinginterceptors server getendpoint   getbinding
server getendpoint   getbinding   getoutfaultinterceptors   add new faultoutinterceptor
private void adddatahandlinginterceptors binding binding
binding getininterceptors   add new domininterceptor
binding getoutinterceptors   add new domoutinterceptor
binding getoutinterceptors   add new payloadcontentredirectinterceptor
@override
protected logger getlogger
return log