/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import java util hashmap
import java util map
import java util concurrent atomic atomicinteger
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlattribute
import javax xml bind annotation xmlelement
import javax xml bind annotation xmlid
import javax xml bind annotation xmltransient
import javax xml bind annotation xmltype
import javax xml bind annotation adapters collapsedstringadapter
import javax xml bind annotation adapters xmljavatypeadapter
/**
* allows an element to have an optional id specified
*
* @version $revision$
*/
@xmltype name
@xmlaccessortype xmlaccesstype field
public abstract class optionalidentifiedtype<t extends optionalidentifiedtype>
@xmltransient
protected static map<string  atomicinteger> nodecounters   new hashmap<string  atomicinteger>
@xmlattribute required   false
@xmljavatypeadapter collapsedstringadapter class
@xmlid
private string id
@xmlelement required   false
private description description
/**
* gets the value of the id property.
*
* @return possible object is
*         {@link string }
*/
public string getid
return id
/**
* sets the value of the id property.
*
* @param value allowed object is
*              {@link string }
*/
public void setid string value
this id   value
public description getdescription
return description
public void setdescription description description
this description   description
/**
* returns a short name for this node which can be useful for id generation or referring to related resources like images
*
* @return defaults to "node" but derived nodes should overload this to provide a unique name
*/
public string getshortname
return
// fluent api
// -------------------------------------------------------------------------
public t description string text
if  description    null
description   new description
description settext text
return  t  this
public t description string text  string lang
description text
description setlang lang
return  t  this
public t id string id
setid id
return  t  this
public string idorcreate
if  id    null
setid createid
return getid
// implementation methods
// -------------------------------------------------------------------------
/**
* a helper method to create a new id for this node
*/
protected string createid
string key   getshortname
return key   getnodecounter key  incrementandget
/**
* returns the counter for the given node key, lazily creating one if necessary
*/
protected static synchronized atomicinteger getnodecounter string key
atomicinteger answer   nodecounters get key
if  answer    null
answer   new atomicinteger 0
nodecounters put key  answer
return answer