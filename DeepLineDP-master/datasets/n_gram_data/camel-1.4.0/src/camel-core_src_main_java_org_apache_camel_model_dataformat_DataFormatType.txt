/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model dataformat
import java io inputstream
import java io outputstream
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmltransient
import javax xml bind annotation xmltype
import org apache camel exchange
import org apache camel model identifiedtype
import org apache camel spi dataformat
import org apache camel spi routecontext
import org apache camel util introspectionsupport
import org apache camel util objecthelper
import static org apache camel util objecthelper notnull
/**
* represents the base xml type for dataformat.
*
* @version $revision$
*/
@xmltype name
@xmlaccessortype xmlaccesstype field
public class dataformattype extends identifiedtype implements dataformat
@xmltransient
private dataformat dataformat
@xmltransient
private string dataformattypename
public dataformattype
public dataformattype dataformat dataformat
this dataformat   dataformat
protected dataformattype string dataformattypename
this dataformattypename   dataformattypename
public static dataformat getdataformat routecontext routecontext  dataformattype type  string ref
if  type    null
notnull ref
dataformat dataformat   routecontext lookup ref  dataformat class
if  dataformat instanceof dataformattype
type    dataformattype dataformat
else
return dataformat
return type getdataformat routecontext
public void marshal exchange exchange  object graph  outputstream stream  throws exception
objecthelper notnull dataformat
dataformat marshal exchange  graph  stream
public object unmarshal exchange exchange  inputstream stream  throws exception
objecthelper notnull dataformat
return dataformat unmarshal exchange  stream
public dataformat getdataformat routecontext routecontext
if  dataformat    null
dataformat   createdataformat routecontext
objecthelper notnull dataformat
configuredataformat dataformat
return dataformat
/**
* factory method to create the data format instance
*/
protected dataformat createdataformat routecontext routecontext
if  dataformattypename    null
class type   objecthelper loadclass dataformattypename  getclass   getclassloader
if  type    null
throw new illegalargumentexception     dataformattypename       this
return  dataformat  objecthelper newinstance type
return null
/**
* allows derived classes to customize the data format
*/
protected void configuredataformat dataformat dataformat
/**
* sets a named property on the data format instance using introspection
*/
protected void setproperty object bean  string name  object value
try
introspectionsupport setproperty bean  name  value
catch  exception e
throw new illegalargumentexception     name       bean
e  e