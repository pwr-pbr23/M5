/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import java util arraylist
import java util collection
import java util list
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlelement
import javax xml bind annotation xmlelementref
import javax xml bind annotation xmlrootelement
import javax xml bind annotation xmltransient
import org apache camel processor
import org apache camel route
import org apache camel builder errorhandlerbuilder
import org apache camel processor catchprocessor
import org apache camel processor redeliverypolicy
import org apache camel spi routecontext
import org apache camel util objecthelper
/**
* represents an xml &lt;onexception/&gt; element
*
* @version $revision$
*/
@xmlrootelement name
@xmlaccessortype xmlaccesstype field
public class exceptiontype extends processortype<processortype>
/*
@xmlelementref
private list<interceptortype> interceptors = new arraylist<interceptortype>();
*/
@xmlelement name
private list<string> exceptions   new arraylist<string>
@xmlelement name      required   false
private redeliverypolicytype redeliverypolicy
@xmlelementref
private list<processortype<?>> outputs   new arraylist<processortype<?>>
@xmltransient
private list<class> exceptionclasses
@xmltransient
private processor errorhandler
public exceptiontype
public exceptiontype list<class> exceptionclasses
this exceptionclasses   exceptionclasses
public exceptiontype class exceptiontype
exceptionclasses   new arraylist<class>
exceptionclasses add exceptiontype
@override
public string tostring
return     getexceptionclasses         getoutputs
/**
* allows an exception handler to create a new redelivery policy for this exception type
* @param parentpolicy the current redelivery policy
* @return a newly created redelivery policy, or return the original policy if no customization is required
* for this exception handler.
*/
public redeliverypolicy createredeliverypolicy redeliverypolicy parentpolicy
if  redeliverypolicy    null
return redeliverypolicy createredeliverypolicy parentpolicy
else if  errorhandler    null
// lets create a new error handler that has no retries
redeliverypolicy answer   parentpolicy copy
answer setmaximumredeliveries 0
return answer
return parentpolicy
public void addroutes routecontext routecontext  collection<route> routes  throws exception
// lets attach a processor to an error handler
errorhandler   routecontext createprocessor this
errorhandlerbuilder builder   routecontext getroute   geterrorhandlerbuilder
builder adderrorhandlers this
@override
public catchprocessor createprocessor routecontext routecontext  throws exception
processor childprocessor   routecontext createprocessor this
return new catchprocessor getexceptionclasses    childprocessor
// fluent api
//-------------------------------------------------------------------------
public exceptiontype backoffmultiplier double backoffmultiplier
getorcreateredeliverypolicy   backoffmultiplier backoffmultiplier
return this
public exceptiontype collisionavoidancefactor double collisionavoidancefactor
getorcreateredeliverypolicy   collisionavoidancefactor collisionavoidancefactor
return this
public exceptiontype collisionavoidancepercent short collisionavoidancepercent
getorcreateredeliverypolicy   collisionavoidancepercent collisionavoidancepercent
return this
public exceptiontype initialredeliverydelay long initialredeliverydelay
getorcreateredeliverypolicy   initialredeliverydelay initialredeliverydelay
return this
public exceptiontype maximumredeliveries int maximumredeliveries
getorcreateredeliverypolicy   maximumredeliveries maximumredeliveries
return this
public exceptiontype usecollisionavoidance
getorcreateredeliverypolicy   usecollisionavoidance
return this
public exceptiontype useexponentialbackoff
getorcreateredeliverypolicy   useexponentialbackoff
return this
// properties
//-------------------------------------------------------------------------
public list<processortype<?>> getoutputs
return outputs
public void setoutputs list<processortype<?>> outputs
this outputs   outputs
public list<class> getexceptionclasses
if  exceptionclasses    null
exceptionclasses   createexceptionclasses
return exceptionclasses
public void setexceptionclasses list<class> exceptionclasses
this exceptionclasses   exceptionclasses
public list<string> getexceptions
return exceptions
public void setexceptions list<string> exceptions
this exceptions   exceptions
public processor geterrorhandler
return errorhandler
public redeliverypolicytype getredeliverypolicy
return redeliverypolicy
public void setredeliverypolicy redeliverypolicytype redeliverypolicy
this redeliverypolicy   redeliverypolicy
// implementation methods
//-------------------------------------------------------------------------
protected redeliverypolicytype getorcreateredeliverypolicy
if  redeliverypolicy    null
redeliverypolicy   new redeliverypolicytype
return redeliverypolicy
protected list<class> createexceptionclasses
list<string> list   getexceptions
list<class> answer   new arraylist<class> list size
for  string name   list
class type   objecthelper loadclass name  getclass   getclassloader
answer add type
return answer