/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component quartz
import java net uri
import java util map
import org apache camel camelcontext
import org apache camel impl defaultcomponent
import org apache camel util introspectionsupport
import org apache commons logging log
import org apache commons logging logfactory
import org quartz crontrigger
import org quartz jobdetail
import org quartz scheduler
import org quartz schedulerexception
import org quartz schedulerfactory
import org quartz trigger
import org quartz impl stdschedulerfactory
/**
* a <a href="http://activemq.apache.org/camel/quartz.html">quartz component</a>
*
* @version $revision:520964 $
*/
public class quartzcomponent extends defaultcomponent<quartzexchange>
private static final transient log log   logfactory getlog quartzcomponent class
private schedulerfactory factory
private scheduler scheduler
private map<trigger  jobdetail> triggers
public quartzcomponent
public quartzcomponent camelcontext context
super context
@override
protected quartzendpoint createendpoint string uri  string remaining  map parameters  throws exception
quartzendpoint answer   new quartzendpoint uri  this  getscheduler
// lets split the remaining into a group/name
uri u   new uri uri
string name
string group
string path   u getpath
crontrigger crontrigger   null
if  path    null    path length   > 1
if  path startswith
path   path substring 1
int idx   path indexof
if  idx > 0
crontrigger   new crontrigger
name   path substring 0  idx
string cronexpression   path substring idx   1
// lets allow / instead of spaces and allow $ instead of ?
cronexpression   cronexpression replace
cronexpression   cronexpression replace
log debug     cronexpression
crontrigger setcronexpression cronexpression
answer settrigger crontrigger
else
name   path
group   u gethost
else
name   u gethost
/*
* string[] names = objecthelper.splitoncharacter(remaining, "/", 2); if
* (names[1] != null) { group = names[0]; name = names[1]; } else { name =
* names[0]; }
*/
trigger trigger   crontrigger
if  trigger    null
trigger   answer gettrigger
trigger setname name
trigger setgroup group
map triggerparameters   introspectionsupport extractproperties parameters
map jobparameters   introspectionsupport extractproperties parameters
setproperties trigger  triggerparameters
setproperties answer getjobdetail    jobparameters
return answer
@override
protected void dostart   throws exception
super dostart
getscheduler   start
@override
protected void dostop   throws exception
if  scheduler    null
scheduler shutdown
super dostop
// properties
// -------------------------------------------------------------------------
public schedulerfactory getfactory
if  factory    null
factory   createschedulerfactory
return factory
public void setfactory schedulerfactory factory
this factory   factory
public scheduler getscheduler   throws schedulerexception
if  scheduler    null
scheduler   createscheduler
return scheduler
public void setscheduler scheduler scheduler
this scheduler   scheduler
public map gettriggers
return triggers
public void settriggers map triggers
this triggers   triggers
// implementation methods
// -------------------------------------------------------------------------
protected schedulerfactory createschedulerfactory
return new stdschedulerfactory
protected scheduler createscheduler   throws schedulerexception
return getfactory   getscheduler