/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component mail
import javax mail message
import org apache camel consumer
import org apache camel exchangepattern
import org apache camel processor
import org apache camel producer
import org apache camel impl scheduledpollendpoint
import org springframework mail javamail javamailsender
import org springframework mail javamail javamailsenderimpl
/**
* endpoint for camel mail.
*
* @version $revision:520964 $
*/
public class mailendpoint extends scheduledpollendpoint<mailexchange>
private mailbinding binding
private mailconfiguration configuration
public mailendpoint string uri  mailcomponent component  mailconfiguration configuration
super uri  component
this configuration   configuration
public mailendpoint string endpointuri  mailconfiguration configuration
super endpointuri
this configuration   configuration
public mailendpoint string endpointuri
this endpointuri  new mailconfiguration
public producer<mailexchange> createproducer   throws exception
javamailsender sender   configuration createjavamailsender
return createproducer sender
/**
* creates a producer using the given sender
*/
public producer<mailexchange> createproducer javamailsender sender  throws exception
return new mailproducer this  sender
public consumer<mailexchange> createconsumer processor processor  throws exception
if  configuration getprotocol   startswith
throw new illegalargumentexception     configuration getprotocol
javamailsenderimpl sender   configuration createjavamailsender
return createconsumer processor  sender
/**
* creates a consumer using the given processor and sender
*/
public consumer<mailexchange> createconsumer processor processor  javamailsenderimpl sender  throws exception
mailconsumer answer   new mailconsumer this  processor  sender
// scheduledpollconsumer default delay is 500 millis and that is too often for polling a mailbox,
// so we override with a new default value. end user can override this value by providing a consumer.delay parameter
answer setdelay mailconsumer default_consumer_delay
configureconsumer answer
return answer
@override
public mailexchange createexchange exchangepattern pattern
return new mailexchange getcamelcontext    pattern  getbinding
public mailexchange createexchange message message
return new mailexchange getcamelcontext    getexchangepattern    getbinding    message
// properties
// -------------------------------------------------------------------------
public mailbinding getbinding
if  binding    null
binding   new mailbinding
return binding
/**
* sets the binding used to convert from a camel message to and from a mail
* message
*
* @param binding the binding to use
*/
public void setbinding mailbinding binding
this binding   binding
public boolean issingleton
return false
public mailconfiguration getconfiguration
return configuration