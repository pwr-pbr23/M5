/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component jhc
import java io ioexception
import org apache camel asynccallback
import org apache camel exchange
import org apache camel processor
import org apache camel impl defaultconsumer
import org apache commons logging log
import org apache commons logging logfactory
import org apache http httpentity
import org apache http httpentityenclosingrequest
import org apache http httpexception
import org apache http httprequest
import org apache http httpresponse
import org apache http httpresponsefactory
import org apache http httpstatus
import org apache http httpversion
import org apache http protocolversion
import org apache http impl defaulthttpresponsefactory
import org apache http nio nhttpconnection
import org apache http nio protocol eventlistener
import org apache http params httpparams
import org apache http params httpparamslinker
import org apache http protocol httpcontext
import org apache http protocol httprequesthandler
/**
* created by intellij idea. user: gnodet date: sep 7, 2007 time: 8:15:54 pm to
* change this template use file | settings | file templates.
*/
public class jhcconsumer extends defaultconsumer<jhcexchange>
private static final log log   logfactory getlog jhcconsumer class
private jhcserverengine engine
private myhandler handler
public jhcconsumer jhcendpoint endpoint  processor processor
super endpoint  processor
engine   jhcserverenginefactory getjhcserverengine endpoint getparams    endpoint getport    endpoint
getprotocol
handler   new myhandler endpoint getparams    endpoint getpath
public jhcendpoint getendpoint
return  jhcendpoint super getendpoint
protected void dostart   throws exception
super dostart
engine register handler getpath        handler
if   engine isstarted
engine start
protected void dostop   throws exception
engine unregister handler getpath
if  engine getreferencecounter      0
engine stop
super dostop
class myhttprequesthandler implements httprequesthandler
public void handle httprequest httprequest  httpresponse httpresponse  httpcontext httpcontext
throws httpexception  ioexception
log debug
static class eventlogger implements eventlistener
public void connectionopen final nhttpconnection conn
if  log isdebugenabled
log debug     conn
public void connectiontimeout final nhttpconnection conn
if  log isdebugenabled
log debug     conn
public void connectionclosed final nhttpconnection conn
if  log isdebugenabled
log debug     conn
public void fatalioexception final ioexception ex  final nhttpconnection conn
if  log isdebugenabled
log debug     ex getmessage
public void fatalprotocolexception final httpexception ex  final nhttpconnection conn
if  log isdebugenabled
log debug     ex getmessage
class myhandler implements asynchttprequesthandler
private final httpparams params
private final httpresponsefactory responsefactory
private final string path
public myhandler httpparams params  string path
this params  path  new defaulthttpresponsefactory
public myhandler httpparams params  string path  httpresponsefactory responsefactory
this params   params
this path   path
this responsefactory   responsefactory
public string getpath
return path
public void handle final httprequest request  final httpcontext context
final asyncresponsehandler handler  throws httpexception  ioexception
final exchange exchange   getendpoint   createexchange
exchange getin   setheader    request getrequestline   geturi
if  request instanceof httpentityenclosingrequest
exchange getin   setbody   httpentityenclosingrequest request  getentity
getasyncprocessor   process exchange  new asynccallback
public void done boolean donesynchronously
log debug
// create the default response to this request
protocolversion httpversion    httpversion request getrequestline   getprotocolversion
httpresponse response   responsefactory newhttpresponse httpversion  httpstatus sc_ok
context
httpparamslinker link response  params
httpentity entity   exchange getout   getbody httpentity class
response setentity entity
response setparams getendpoint   getparams
try
handler sendresponse response
catch  exception e
log info e
public void handle httprequest request  httpresponse response  httpcontext context
throws httpexception  ioexception
// now we just handler the requset async, do nothing here