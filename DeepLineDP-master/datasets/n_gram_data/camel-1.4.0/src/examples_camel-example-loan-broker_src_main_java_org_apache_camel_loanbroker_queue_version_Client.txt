/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel loanbroker queue version
import javax jms connectionfactory
import org apache activemq activemqconnectionfactory
import org apache camel camelcontext
import org apache camel exchange
import org apache camel processor
import org apache camel producertemplate
import org apache camel builder routebuilder
import org apache camel component jms jmscomponent
import org apache camel impl defaultcamelcontext
import org apache camel impl defaultproducertemplate
public class client extends routebuilder
public static void main string args  throws exception
camelcontext context   new defaultcamelcontext
// set up the activemq jms components
connectionfactory connectionfactory   new activemqconnectionfactory
// note we can explicit name of the component
context addcomponent    jmscomponent jmscomponentautoacknowledge connectionfactory
context addroutes new client
producertemplate template   context createproducertemplate
context start
// start snippet: sending
// send out the request message
for  int i   0  i < 2  i
template sendbodyandheader
constants property_ssn      i
thread sleep 100
// end snippet: sending
// start the loan broker
thread sleep 1000   5
context stop
/**
* lets configure the camel routing rules using java code to pull the response message
*/
public void configure
// start snippet: pulling
from    process new processor
public void process exchange exchange  throws exception
// print out the response message
system out println exchange getin   getbody
// end snippet: pulling