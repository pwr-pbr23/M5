/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component jms
import java util concurrent futuretask
import java util concurrent timeunit
import java util concurrent timeoutexception
import java util concurrent atomic atomicboolean
import javax jms destination
import javax jms jmsexception
import javax jms message
import javax jms session
import org apache camel exchange
import org apache camel exchangetimedoutexception
import org apache camel failedtocreateproducerexception
import org apache camel runtimecamelexception
import org apache camel runtimeexchangeexception
import org apache camel component jms jmsconfiguration cameljmstemplate
import org apache camel component jms requestor deferredrequestreplymap
import org apache camel component jms requestor deferredrequestreplymap deferredmessagesentcallback
import org apache camel component jms requestor persistentreplytorequestor
import org apache camel component jms requestor requestor
import org apache camel impl defaultproducer
import org apache camel util uuidgenerator
import org apache camel util valueholder
import org apache commons logging log
import org apache commons logging logfactory
import org springframework jms core jmsoperations
import org springframework jms core messagecreator
/**
* @version $revision$
*/
public class jmsproducer extends defaultproducer
private static final transient log log   logfactory getlog jmsproducer class
requestoraffinity affinity
private final jmsendpoint endpoint
private jmsoperations inonlytemplate
private jmsoperations inouttemplate
private uuidgenerator uuidgenerator
private deferredrequestreplymap deferredrequestreplymap
private requestor requestor
private atomicboolean started   new atomicboolean false
private enum requestoraffinity
per_component 0
per_endpoint 1
per_producer 2
private int value
private requestoraffinity int value
this value   value
public jmsproducer jmsendpoint endpoint
super endpoint
this endpoint   endpoint
jmsconfiguration c   endpoint getconfiguration
affinity   requestoraffinity per_producer
if  c getreplyto      null
if  c getreplytotempdestinationaffinity   equals c replyto_temp_dest_affinity_per_endpoint
affinity   requestoraffinity per_endpoint
else if  c getreplytotempdestinationaffinity   equals c replyto_temp_dest_affinity_per_component
affinity   requestoraffinity per_component
public long getrequesttimeout
return endpoint getrequesttimeout
protected void dostart   throws exception
super dostart
protected void testandsetrequestor   throws runtimecamelexception
if   started get
synchronized  this
if  started get
return
try
jmsconfiguration c   endpoint getconfiguration
if  c getreplyto      null
requestor   new persistentreplytorequestor endpoint getconfiguration    endpoint
getexecutorservice
requestor start
else
if  affinity    requestoraffinity per_producer
requestor   new requestor endpoint getconfiguration    endpoint
getexecutorservice
requestor start
else if  affinity    requestoraffinity per_endpoint
requestor   endpoint getrequestor
else if  affinity    requestoraffinity per_component
requestor     jmscomponent endpoint getcomponent    getrequestor
catch  exception e
throw new failedtocreateproducerexception endpoint  e
deferredrequestreplymap   requestor getdeferredrequestreplymap this
started set true
protected void testandunsetrequestor   throws exception
if  started get
synchronized  this
if   started get
return
requestor removedeferredrequestreplymap this
if  affinity    requestoraffinity per_producer
requestor stop
started set false
protected void dostop   throws exception
testandunsetrequestor
super dostop
public void process final exchange exchange
final org apache camel message in   exchange getin
if  exchange getpattern   isoutcapable
testandsetrequestor
// note due to jms transaction semantics we cannot use a single transaction
// for sending the request and receiving the response
final destination replyto   requestor getreplyto
if  replyto    null
throw new runtimeexchangeexception    exchange
final boolean msgidascorrid   endpoint getconfiguration   isusemessageidascorrelationid
string correlationid   in getheader    string class
if  correlationid    null     msgidascorrid
in setheader    getuuidgenerator   generateid
final valueholder<futuretask> futureholder   new valueholder<futuretask>
final deferredmessagesentcallback callback   msgidascorrid ? deferredrequestreplymap createdeferredmessagesentcallback     null
final cameljmstemplate template    cameljmstemplate getinouttemplate
template send endpoint getdestination    new messagecreator
public message createmessage session session  throws jmsexception
message message   endpoint getbinding   makejmsmessage exchange  in  session
message setjmsreplyto replyto
requestor setreplytoselectorheader in  message
futuretask future   null
future     msgidascorrid
? requestor getreceivefuture message getjmscorrelationid    endpoint
getrequesttimeout      requestor getreceivefuture callback
futureholder set future
if  log isdebugenabled
log debug endpoint       message
return message
callback
setmessageid exchange
// lets wait and return the response
long requesttimeout   endpoint getrequesttimeout
try
message message   null
try
if  requesttimeout < 0
message    message futureholder get   get
else
message    message futureholder get   get requesttimeout  timeunit milliseconds
catch  interruptedexception e
if  log isdebugenabled
log debug     e  e
catch  timeoutexception e
if  log isdebugenabled
log debug     e  e
if  message    null
exchange setout new jmsmessage message  endpoint getbinding
if  correlationid    null
message setjmscorrelationid correlationid
exchange getout false  setheader    correlationid
else
// lets set a timed out exception
exchange setexception new exchangetimedoutexception exchange  requesttimeout
catch  exception e
exchange setexception e
else
getinonlytemplate   send endpoint getdestination    new messagecreator
public message createmessage session session  throws jmsexception
message message   endpoint getbinding   makejmsmessage exchange  in  session
if  log isdebugenabled
log debug endpoint       message
return message
setmessageid exchange
protected void setmessageid exchange exchange
if    exchange instanceof jmsexchange
return
try
jmsexchange jmsexchange   jmsexchange class cast exchange
jmsmessage out   jmsexchange getout false
if  out    null
out setmessageid out getjmsmessage   getjmsmessageid
catch  jmsexception e
log warn
e
/**
* preserved for backwards compatibility.
*
* @deprecated
* @see #getinonlytemplate()
*/
public jmsoperations gettemplate
return getinonlytemplate
public jmsoperations getinonlytemplate
if  inonlytemplate    null
inonlytemplate   endpoint createinonlytemplate
return inonlytemplate
public void setinonlytemplate jmsoperations inonlytemplate
this inonlytemplate   inonlytemplate
public jmsoperations getinouttemplate
if  inouttemplate    null
inouttemplate   endpoint createinouttemplate
return inouttemplate
public void setinouttemplate jmsoperations inouttemplate
this inouttemplate   inouttemplate
public uuidgenerator getuuidgenerator
if  uuidgenerator    null
uuidgenerator   new uuidgenerator
return uuidgenerator
public void setuuidgenerator uuidgenerator uuidgenerator
this uuidgenerator   uuidgenerator