/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component mina
import java io serializable
import java util linkedhashmap
import java util map
import org apache camel exchange
/**
* holder object for sending an exchange over the wire using the mina objectserializationcodecfactory codec.
* this is configured using the <tt>transferexchange=true</tt> option for the tcp protocol.
* <p/>
* as opposed to normal usage of camel-mina where only the body part of the exchange is transfered, this holder
* object serializes the following fields over the wire:
* <ul>
*     <li>in body</li>
*     <li>out body</li>
*     <li>in headers</li>
*     <li>out headers</li>
*     <li>exchange properties</li>
*     <li>exception</li>
* </ul>
*
* @version $revision$
*/
public class minapayloadholder implements serializable
private static final long serialversionuid   1l
private object inbody
private object outbody
private map<string  object> inheaders   new linkedhashmap<string  object>
private map<string  object> outheaders   new linkedhashmap<string  object>
private map<string  object> properties   new linkedhashmap<string  object>
private throwable exception
/**
* creates a payload object with the information from the given exchange.
*
* @param exchange     the exchange
* @return the holder object with information copied form the exchange
*/
public static minapayloadholder marshal exchange exchange
minapayloadholder payload   new minapayloadholder
payload inbody   exchange getin   getbody
if  exchange getout false     null
payload outbody   exchange getout   getbody
payload inheaders putall exchange getin   getheaders
payload outheaders putall exchange getout   getheaders
payload properties putall exchange getproperties
payload exception   exchange getexception
return payload
/**
* transfers the information from the payload to the exchange.
*
* @param exchange   the exchange to set values from the payload
* @param payload    the payload with the values
*/
public static void unmarshal exchange exchange  minapayloadholder payload
exchange getin   setbody payload inbody
exchange getout   setbody payload outbody
exchange getin   setheaders payload inheaders
exchange getout   setheaders payload outheaders
for  string key   payload properties keyset
exchange setproperty key  payload properties get key
exchange setexception payload exception
public string tostring
return         inbody       outbody
inheaders       outheaders       properties
exception