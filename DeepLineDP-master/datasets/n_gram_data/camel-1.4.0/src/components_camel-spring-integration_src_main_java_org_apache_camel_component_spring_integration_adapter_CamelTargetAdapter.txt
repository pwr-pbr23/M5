/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component spring integration adapter
import org apache camel camelcontext
import org apache camel endpoint
import org apache camel exchange
import org apache camel exchangepattern
import org apache camel producertemplate
import org apache camel component spring integration springintegrationbinding
import org apache camel component spring integration springintegrationexchange
import org apache camel impl defaultcamelcontext
import org apache commons logging log
import org apache commons logging logfactory
import org springframework integration message message
/**
* cameltargeadapter will redirect the spring integration message to the camel context.
* when we inject the camel context into it, we need also specify the camel endpoint url
* we will route the spring integration message to the camel context
* @author willem jiang
*
* @version $revision$
*/
public class cameltargetadapter extends abstractcameladapter
private final log logger   logfactory getlog this getclass
private producertemplate<exchange> cameltemplate
private endpoint camelendpoint
public producertemplate<exchange> getcameltemplate
if  cameltemplate    null
camelcontext ctx   getcamelcontext
if  ctx    null
ctx   new defaultcamelcontext
cameltemplate   ctx createproducertemplate
return cameltemplate
public message<?> handle message<?> request
exchangepattern pattern
if  isexpectreply
pattern   exchangepattern inout
else
pattern   exchangepattern inonly
exchange inexchange   new springintegrationexchange getcamelcontext    pattern
springintegrationbinding storetocamelmessage request  inexchange getin
exchange outexchange   getcameltemplate   send getcamelendpointuri    inexchange
message response   null
if  isexpectreply
response   springintegrationbinding storetospringintegrationmessage outexchange getout
return response