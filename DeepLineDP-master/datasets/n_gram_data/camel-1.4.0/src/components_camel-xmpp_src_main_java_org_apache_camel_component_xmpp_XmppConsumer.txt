/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component xmpp
import java util iterator
import org apache camel processor
import org apache camel impl defaultconsumer
import org apache commons logging log
import org apache commons logging logfactory
import org jivesoftware smack packetlistener
import org jivesoftware smack packet message
import org jivesoftware smack packet packet
import org jivesoftware smack packet rosterpacket
/**
* a {@link org.apache.camel.consumer consumer} which listens to xmpp packets
*
* @version $revision$
*/
public class xmppconsumer extends defaultconsumer<xmppexchange> implements packetlistener
private static final transient log log   logfactory getlog xmppconsumer class
private final xmppendpoint endpoint
public xmppconsumer xmppendpoint endpoint  processor processor
super endpoint  processor
this endpoint   endpoint
@override
protected void dostart   throws exception
super dostart
endpoint getconnection   addpacketlistener this  endpoint getfilter
@override
protected void dostop   throws exception
endpoint getconnection   removepacketlistener this
super dostop
public void processpacket packet packet
if  packet instanceof message
message message    message packet
if  log isdebugenabled
log debug     message getbody
xmppexchange exchange   endpoint createexchange message
try
getprocessor   process exchange
catch  exception e
// todo: what should we do when a processing failure occurs??
e printstacktrace
else if  packet instanceof rosterpacket
// todo: what to do with a rosterpacket other than debug logging it
rosterpacket rosterpacket    rosterpacket packet
if  log isdebugenabled
log debug     rosterpacket getrosteritemcount
iterator rosteritems   rosterpacket getrosteritems
while  rosteritems hasnext
object item   rosteritems next
log debug     item
else
if  log isdebugenabled
log debug     packet