/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel impl
import java lang reflect parameterizedtype
import java lang reflect type
import java util map
import java util concurrent scheduledexecutorservice
import java util concurrent scheduledthreadpoolexecutor
import org apache camel camelcontext
import org apache camel camelcontextaware
import org apache camel component
import org apache camel endpoint
import org apache camel exchange
import org apache camel exchangepattern
import org apache camel pollingconsumer
import org apache camel util objecthelper
/**
* a default endpoint useful for implementation inheritance
*
* @version $revision$
*/
public abstract class defaultendpoint<e extends exchange> implements endpoint<e>  camelcontextaware
private string endpointuri
private camelcontext camelcontext
private component component
private scheduledexecutorservice executorservice
private exchangepattern exchangepattern   exchangepattern inonly
protected defaultendpoint string endpointuri  component component
this endpointuri  component getcamelcontext
this component   component
protected defaultendpoint string endpointuri  camelcontext camelcontext
this endpointuri
this camelcontext   camelcontext
protected defaultendpoint string endpointuri
this setendpointuri endpointuri
protected defaultendpoint
public int hashcode
return getendpointuri   hashcode     37   1
@override
public boolean equals object object
if  object instanceof defaultendpoint
defaultendpoint that    defaultendpoint  object
return objecthelper equal this getendpointuri    that getendpointuri
return false
@override
public string tostring
return     getendpointuri
public string getendpointuri
if  endpointuri    null
endpointuri   createendpointuri
if  endpointuri    null
throw new illegalargumentexception     getclass   getname
return endpointuri
public camelcontext getcamelcontext
return camelcontext
public component getcomponent
return component
public void setcamelcontext camelcontext camelcontext
this camelcontext   camelcontext
public synchronized scheduledexecutorservice getexecutorservice
if  executorservice    null
component c   getcomponent
if  c    null    c instanceof defaultcomponent
defaultcomponent dc    defaultcomponent  c
executorservice   dc getexecutorservice
if  executorservice    null
executorservice   createexecutorservice
return executorservice
public synchronized void setexecutorservice scheduledexecutorservice executorservice
this executorservice   executorservice
public pollingconsumer<e> createpollingconsumer   throws exception
return new eventdrivenpollingconsumer<e> this
/**
* converts the given exchange to the specified exchange type
*/
public e convertto class<e> type  exchange exchange
// todo we could infer type parameter
if  type isinstance exchange
return type cast exchange
return getcamelcontext   getexchangeconverter   convertto type  exchange
public e createexchange exchange exchange
class<e> exchangetype   getexchangetype
if  exchangetype    null
if  exchangetype isinstance exchange
return exchangetype cast exchange
e answer   createexchange
answer copyfrom exchange
return answer
/**
* returns the type of the exchange which is generated by this component
*/
public class<e> getexchangetype
type type   getclass   getgenericsuperclass
if  type instanceof parameterizedtype
parameterizedtype parameterizedtype    parameterizedtype  type
type arguments   parameterizedtype getactualtypearguments
if  arguments length > 0
type argumenttype   arguments
if  argumenttype instanceof class
return  class<e>  argumenttype
return null
public e createexchange
return createexchange getexchangepattern
public e createexchange exchangepattern pattern
return  e  new defaultexchange getcamelcontext    pattern
public exchangepattern getexchangepattern
return exchangepattern
public void setexchangepattern exchangepattern exchangepattern
this exchangepattern   exchangepattern
protected scheduledthreadpoolexecutor createexecutorservice
return new scheduledthreadpoolexecutor 10
public void configureproperties map options
/**
* a factory method to lazily create the endpointuri if none is specified
*/
protected string createendpointuri
return null
protected void setendpointuri string endpointuri
this endpointuri   endpointuri
@deprecated
public camelcontext getcontext
return getcamelcontext
@deprecated
public void setcontext camelcontext context
setcamelcontext context