/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component spring integration
import org apache camel exchange
import org apache camel exchangepattern
import org apache camel runtimecamelexception
import org apache camel impl defaultproducer
import org apache camel spring springcamelcontext
import org apache camel util objecthelper
import org apache commons logging log
import org apache commons logging logfactory
import org springframework integration channel channelregistry
import org springframework integration channel messagechannel
import org springframework integration config messagebusparser
/**
* a producer of exchanges for the spring integration
* please specify the outputchannel in the endpoint url for this producer.
* if the message pattern is inout, the inputchannel property
* should be set for receiving the response message.
* @version $revision$
*/
public class springintegrationproducer extends defaultproducer<springintegrationexchange>
private static final transient log log   logfactory getlog springintegrationproducer class
private springcamelcontext context
private messagechannel inputchannel
private messagechannel outputchannel
private string outputchannelname
private channelregistry channelregistry
private springintegrationendpoint endpoint
public springintegrationproducer springintegrationendpoint endpoint
super endpoint
this endpoint   endpoint
context    springcamelcontext  endpoint getcamelcontext
if  context    null    endpoint getmessagechannel      null
outputchannelname   endpoint getdefaultchannel
channelregistry    channelregistry  context getapplicationcontext   getbean messagebusparser message_bus_bean_name
if  objecthelper isnullorblank outputchannelname
outputchannelname   endpoint getinputchannel
if  objecthelper isnullorblank outputchannelname
throw new runtimecamelexception
else
outputchannel    messagechannel  channelregistry lookupchannel outputchannelname
else
if  endpoint getmessagechannel      null
outputchannel   endpoint getmessagechannel
else
throw new runtimecamelexception
if  endpoint isinout
endpoint setexchangepattern exchangepattern inout
// we need to setup right inputchannel for further processing
if  objecthelper isnullorblank endpoint getinputchannel
throw new runtimecamelexception
else
inputchannel    messagechannel  channelregistry lookupchannel endpoint getinputchannel
public void process exchange exchange  throws exception
org springframework integration message message sioutmessage   springintegrationbinding createspringintegrationmessage exchange
if  exchange getpattern   isincapable
//set the return channel address
sioutmessage getheader   setreturnaddress inputchannel
outputchannel send sioutmessage
org springframework integration message message siinmessage
inputchannel receive
springintegrationbinding storetocamelmessage siinmessage  exchange getout
else
outputchannel send sioutmessage