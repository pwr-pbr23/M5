/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel builder
import java util arraylist
import java util arrays
import java util list
import org apache camel camelcontext
import org apache camel endpoint
import org apache camel nosuchendpointexception
import org apache camel processor logginglevel
import org apache camel processor sendprocessor
import org apache camel util objecthelper
import org apache commons logging log
import org apache commons logging logfactory
/**
* base class for implementation inheritance for different clauses in the <a
* href="http://activemq.apache.org/camel/dsl.html">java dsl</a>
*
* @version $revision$
*/
public abstract class buildersupport
private camelcontext context
private errorhandlerbuilder errorhandlerbuilder
private boolean inheriterrorhandler   true
protected buildersupport camelcontext context
this context   context
protected buildersupport buildersupport parent
this context   parent getcontext
this inheriterrorhandler   parent inheriterrorhandler
if  inheriterrorhandler    parent errorhandlerbuilder    null
this errorhandlerbuilder   parent errorhandlerbuilder copy
// builder methods
// -------------------------------------------------------------------------
/**
* returns a value builder for the given header
*/
public valuebuilder header string name
return builder header name
/**
* returns a predicate and value builder for the inbound body on an exchange
*/
public valuebuilder body
return builder body
/**
* returns a predicate and value builder for the inbound message body as a
* specific type
*/
public <t> valuebuilder body class<t> type
return builder bodyas type
/**
* returns a predicate and value builder for the outbound body on an
* exchange
*/
public valuebuilder outbody
return builder outbody
/**
* returns a predicate and value builder for the outbound message body as a
* specific type
*/
public <t> valuebuilder outbody class<t> type
return builder outbodyas type
/**
* returns a predicate and value builder for the fault body on an
* exchange
*/
public valuebuilder faultbody
return builder faultbody
/**
* returns a predicate and value builder for the fault message body as a
* specific type
*/
public <t> valuebuilder faultbodyas class<t> type
return builder faultbodyas type
/**
* returns a value builder for the given system property
*/
public valuebuilder systemproperty string name
return builder systemproperty name
/**
* returns a value builder for the given system property
*/
public valuebuilder systemproperty string name  string defaultvalue
return builder systemproperty name  defaultvalue
/**
* returns a constant expression value builder
*/
public valuebuilder constant object value
return builder constant value
/**
* resolves the given uri to an endpoint
*
* @throws nosuchendpointexception if the endpoint uri could not be resolved
*/
public endpoint endpoint string uri  throws nosuchendpointexception
objecthelper notnull uri
endpoint endpoint   getcontext   getendpoint uri
if  endpoint    null
throw new nosuchendpointexception uri
return endpoint
/**
* resolves the given uri to an endpoint of the specified type
*
* @throws nosuchendpointexception if the endpoint uri could not be resolved
*/
public <t extends endpoint> t endpoint string uri  class<t> type  throws nosuchendpointexception
objecthelper notnull uri
t endpoint   getcontext   getendpoint uri  type
if  endpoint    null
throw new nosuchendpointexception uri
return endpoint
/**
* resolves the list of uris into a list of {@link endpoint} instances
*
* @throws nosuchendpointexception if an endpoint uri could not be resolved
*/
public list<endpoint> endpoints string    uris  throws nosuchendpointexception
list<endpoint> endpoints   new arraylist<endpoint>
for  string uri   uris
endpoints add endpoint uri
return endpoints
/**
* helper method to create a list of {@link endpoint} instances
*/
public list<endpoint> endpoints endpoint    endpoints
list<endpoint> answer   new arraylist<endpoint>
answer addall arrays aslist endpoints
return answer
/**
* creates a disabled error handler for removing the default error handler
*/
public noerrorhandlerbuilder noerrorhandler
return new noerrorhandlerbuilder
/**
* creates an error handler which just logs errors
*/
public loggingerrorhandlerbuilder loggingerrorhandler
return new loggingerrorhandlerbuilder
/**
* creates an error handler which just logs errors
*/
public loggingerrorhandlerbuilder loggingerrorhandler string log
return loggingerrorhandler logfactory getlog log
/**
* creates an error handler which just logs errors
*/
public loggingerrorhandlerbuilder loggingerrorhandler log log
return new loggingerrorhandlerbuilder log
/**
* creates an error handler which just logs errors
*/
public loggingerrorhandlerbuilder loggingerrorhandler log log  logginglevel level
return new loggingerrorhandlerbuilder log  level
public deadletterchannelbuilder deadletterchannel
return new deadletterchannelbuilder
public deadletterchannelbuilder deadletterchannel string deadletteruri
return deadletterchannel endpoint deadletteruri
public deadletterchannelbuilder deadletterchannel endpoint deadletterendpoint
return new deadletterchannelbuilder new sendprocessor deadletterendpoint
// properties
// -------------------------------------------------------------------------
public camelcontext getcontext
return context
public void setcontext camelcontext context
this context   context
public errorhandlerbuilder geterrorhandlerbuilder
if  errorhandlerbuilder    null
errorhandlerbuilder   createerrorhandlerbuilder
return errorhandlerbuilder
protected errorhandlerbuilder createerrorhandlerbuilder
if  isinheriterrorhandler
return new deadletterchannelbuilder
else
return new noerrorhandlerbuilder
/**
* sets the error handler to use with processors created by this builder
*/
public void seterrorhandlerbuilder errorhandlerbuilder errorhandlerbuilder
this errorhandlerbuilder   errorhandlerbuilder
public boolean isinheriterrorhandler
return inheriterrorhandler
public void setinheriterrorhandler boolean inheriterrorhandler
this inheriterrorhandler   inheriterrorhandler