/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model language
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlattribute
import javax xml bind annotation xmlrootelement
import javax xml bind annotation xmltransient
import org apache camel expression
import org apache camel predicate
import org apache camel spi routecontext
import org apache commons logging log
import org apache commons logging logfactory
/**
* for xquery expresions and predicates
*
* @version $revision$
*/
@xmlrootelement name
@xmlaccessortype xmlaccesstype field
public class xqueryexpression extends namespaceawareexpression
private static final transient log log   logfactory getlog xqueryexpression class
@xmlattribute required   false
private string type
@xmltransient
private class resulttype
public xqueryexpression
public xqueryexpression string expression
super expression
public string getlanguage
return
public string gettype
return type
public void settype string type
this type   type
public class getresulttype
return resulttype
public void setresulttype class resulttype
this resulttype   resulttype
@override
protected void configureexpression routecontext routecontext  expression expression
super configureexpression routecontext  expression
updateresulttype
if  resulttype    null
setproperty expression     resulttype
@override
protected void configurepredicate routecontext routecontext  predicate predicate
super configurepredicate routecontext  predicate
updateresulttype
if  resulttype    null
setproperty predicate     resulttype
private void updateresulttype
if  resulttype    null    type    null
try
resulttype   class forname type
catch  classnotfoundexception e
log error     type