/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component bean
import java io externalizable
import java io ioexception
import java io objectinput
import java io objectoutput
import java lang reflect invocationtargetexception
import java lang reflect method
import java util arrays
import org apache camel exchange
import org apache camel util iohelper
import org apache camel util objecthelper
/**
* invocation of beans that can handle being serialized.
*/
public class beaninvocation implements externalizable
private object args
private methodbean methodbean
private transient method method
public beaninvocation
public beaninvocation method method  object args
this method   method
this args   args
@override
public string tostring
object list   null
if  args    null
list   arrays aslist args
return     method       list
public object getargs
return args
public method getmethod
return method
public void setmethod method method
this method   method
public void setargs object args
this args   args
/**
* this causes us to invoke the endpoint pojo using reflection.
*
* @param pojo     the bean on which to perform this invocation
* @param exchange the exchange carrying the method invocation
*/
public void invoke object pojo  exchange exchange
try
object response   getmethod   invoke pojo  getargs
exchange getout   setbody response
catch  invocationtargetexception e
exchange setexception e getcause
catch  runtimeexception e
throw e
catch  throwable e
throw new runtimeexception e
public void readexternal objectinput objectinput  throws ioexception  classnotfoundexception
methodbean   objecthelper cast methodbean class  objectinput readobject
try
method   methodbean getmethod
catch  nosuchmethodexception e
throw iohelper createioexception e
args   objecthelper cast object class  objectinput readobject
public void writeexternal objectoutput objectoutput  throws ioexception
if  methodbean    null
methodbean   new methodbean method
objectoutput writeobject methodbean
objectoutput writeobject args