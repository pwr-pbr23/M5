/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel example cxf provider
import javax xml namespace qname
import javax xml soap messagefactory
import javax xml soap soapbody
import javax xml soap soapbodyelement
import javax xml soap soapelement
import javax xml soap soapmessage
import javax xml ws bindingprovider
import javax xml ws dispatch
import javax xml ws service
import javax xml ws webserviceexception
import javax xml ws soap soapbinding
/**
* a simple client that uses the jax-ws dispatch api to call
* a service endpoint exposed in a servlet container.
*/
public final class client
// the endpoint address of the service
string endpointaddress
public client string endpointaddress
this endpointaddress   endpointaddress
public void invoke   throws exception
// service qname as defined in the wsdl.
qname servicename   new qname
// port qname as defined in the wsdl.
qname portname   new qname
// create a dynamic service instance
service service   service create servicename
// add a port to the service
service addport portname  soapbinding soap11http_binding  endpointaddress
// create a dispatch instance
dispatch<soapmessage> dispatch   service createdispatch portname  soapmessage class
service mode message
// use dispatch as bindingprovider
bindingprovider bp    bindingprovider dispatch
messagefactory factory     soapbinding bp getbinding    getmessagefactory
// create soapmessage request
soapmessage request   factory createmessage
// request body
soapbody body   request getsoapbody
// compose the soap:body payload
qname payloadname   new qname
soapbodyelement payload   body addbodyelement payloadname
soapelement message   payload addchildelement
message addtextnode
// invoke the endpoint synchronously
soapmessage reply   null
try
// invoke endpoint operation and read response
reply   dispatch invoke request
catch  webserviceexception wse
wse printstacktrace
// process the reply
body   reply getsoapbody
qname responsename   new qname
soapelement bodyelement    soapelement body getchildelements responsename  next
string responsemessagetext   bodyelement gettextcontent
system out println responsemessagetext
public static void main string args  throws exception
client client   new client
client invoke