/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component file remote
import java io ioexception
import java io inputstream
import com jcraft jsch channelsftp
import com jcraft jsch jschexception
import com jcraft jsch session
import com jcraft jsch sftpexception
import org apache camel exchange
import org apache commons logging log
import org apache commons logging logfactory
public class sftpproducer extends remotefileproducer<remotefileexchange>
private static final transient log log   logfactory getlog sftpproducer class
private sftpendpoint endpoint
private channelsftp channel
private session session
public sftpproducer sftpendpoint endpoint  session session
super endpoint
this endpoint   endpoint
this session   session
protected void connectifnecessary   throws jschexception
if  channel    null     channel isconnected
if  session    null     session isconnected
log info
session   endpoint createsession
session connect
log info
channel   endpoint createchannelsftp session
channel connect
log info     endpoint getconfiguration   tostring
protected void disconnect   throws jschexception
if  session    null
log info
session disconnect
if  channel    null
log info
channel disconnect
public void process exchange exchange  throws exception
// todo: is there a way to avoid copy-pasting the reconnect logic?
connectifnecessary
// if the attempt to connect isn't successful, then the thrown
// exception will signify that we couldn't deliver
try
process endpoint createexchange exchange
catch  jschexception e
// if the connection has gone stale, then we must manually disconnect
// the client before attempting to reconnect
log warn     e tostring
disconnect
// rethrow to signify that we didn't deliver
throw e
catch  sftpexception e
// still not sure if/when these come up and what we should do about them
// client.disconnect();
log warn     e tostring
log warn
// rethrow to signify that we didn't deliver
throw e
public void process remotefileexchange exchange  throws exception
inputstream payload   exchange getin   getbody inputstream class
try
string filename   createfilename exchange getin    endpoint getconfiguration
int lastpathindex   filename lastindexof
if  lastpathindex     1
string directory   filename substring 0  lastpathindex
boolean success   builddirectory channel  directory
if   success
log warn     directory
channel put payload  filename
log info     filename       endpoint getconfiguration
finally
if  payload    null
payload close
@override
protected void dostart   throws exception
log info
try
connectifnecessary
catch  jschexception e
log warn     endpoint getconfiguration
super dostart
@override
protected void dostop   throws exception
log info
disconnect
super dostop
protected static boolean builddirectory channelsftp sftpclient  string dirname
throws ioexception  sftpexception
boolean atleastonesuccess   false
final stringbuilder sb   new stringbuilder dirname length
final string dirs   dirname split
for  string dir   dirs
sb append dir  append
string directory   sb tostring
if  log isdebugenabled
log debug     directory
sftpclient mkdir directory
if   atleastonesuccess
atleastonesuccess   true
return atleastonesuccess