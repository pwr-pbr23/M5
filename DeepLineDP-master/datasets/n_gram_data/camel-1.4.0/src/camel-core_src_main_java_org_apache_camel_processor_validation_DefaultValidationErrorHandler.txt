/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel processor validation
import java util arraylist
import java util list
import javax xml transform dom domresult
import javax xml validation schema
import org xml sax saxexception
import org xml sax saxparseexception
import org apache camel exchange
import org apache camel validationexception
import org apache commons logging log
import org apache commons logging logfactory
/**
* a default error handler which just stores all the errors so they can be reported or transformed.
*
* @version $revision$
*/
public class defaultvalidationerrorhandler implements validatorerrorhandler
private static final transient log log   logfactory getlog defaultvalidationerrorhandler class
private list<saxparseexception> warnings   new arraylist<saxparseexception>
private list<saxparseexception> errors   new arraylist<saxparseexception>
private list<saxparseexception> fatalerrors   new arraylist<saxparseexception>
public void warning saxparseexception e  throws saxexception
if  log isdebugenabled
log debug     e  e
warnings add e
public void error saxparseexception e  throws saxexception
if  log isdebugenabled
log debug     e  e
errors add e
public void fatalerror saxparseexception e  throws saxexception
if  log isdebugenabled
log debug     e  e
fatalerrors add e
public void reset
warnings clear
errors clear
fatalerrors clear
public boolean isvalid
return errors isempty      fatalerrors isempty
public void handleerrors exchange exchange  schema schema  domresult result  throws validationexception
if   isvalid
throw new schemavalidationexception exchange  schema  fatalerrors  errors  warnings
public void handleerrors exchange exchange  object schema  throws validationexception
if   isvalid
throw new schemavalidationexception exchange  schema  fatalerrors  errors  warnings