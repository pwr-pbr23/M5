/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component jhc
import java io ioexception
import org apache http connectionreusestrategy
import org apache http httpexception
import org apache http httprequest
import org apache http httpresponse
import org apache http httpresponsefactory
import org apache http httpstatus
import org apache http httpversion
import org apache http protocolversion
import org apache http impl defaultconnectionreusestrategy
import org apache http impl defaulthttpresponsefactory
import org apache http nio nhttpserverconnection
import org apache http nio util bytebufferallocator
import org apache http params httpparams
import org apache http params httpparamslinker
import org apache http protocol basichttpprocessor
import org apache http protocol executioncontext
import org apache http protocol httpcontext
import org apache http protocol httpprocessor
import org apache http protocol httprequesthandler
import org apache http protocol responseconncontrol
import org apache http protocol responsecontent
import org apache http protocol responsedate
import org apache http protocol responseserver
/**
* created by intellij idea.
* user: gnodet
* date: sep 11, 2007
* time: 6:57:34 pm
* to change this template use file | settings | file templates.
*/
public class asyncbufferinghttpservicehandler extends bufferinghttpservicehandler
public asyncbufferinghttpservicehandler final httpparams params
super createdefaultprocessor
new defaulthttpresponsefactory
new defaultconnectionreusestrategy
params
public asyncbufferinghttpservicehandler final httpprocessor httpprocessor
final httpresponsefactory responsefactory
final connectionreusestrategy connstrategy
final httpparams params
super httpprocessor  responsefactory  connstrategy  params
public asyncbufferinghttpservicehandler final httpprocessor httpprocessor
final httpresponsefactory responsefactory
final connectionreusestrategy connstrategy
final bytebufferallocator allocator
final httpparams params
super httpprocessor  responsefactory  connstrategy  allocator  params
protected static httpprocessor createdefaultprocessor
basichttpprocessor httpproc   new basichttpprocessor
httpproc addinterceptor new responsedate
httpproc addinterceptor new responseserver
httpproc addinterceptor new responsecontent
httpproc addinterceptor new responseconncontrol
return httpproc
protected void processrequest
final nhttpserverconnection conn
final httprequest request  throws ioexception  httpexception
httpcontext context   conn getcontext
protocolversion ver   request getrequestline   getprotocolversion
if   ver lessequals httpversion http_1_1
// downgrade protocol version if greater than http/1.1
ver   httpversion http_1_1
context setattribute executioncontext http_request  request
context setattribute executioncontext http_connection  conn
try
this httpprocessor process request  context
httprequesthandler handler   null
if  handlerresolver    null
string requesturi   request getrequestline   geturi
handler   handlerresolver lookup requesturi
if  handler    null
if  handler instanceof asynchttprequesthandler
asynchttprequesthandler handler  handle request  context  new asyncresponsehandler
public void sendresponse httpresponse response  throws ioexception  httpexception
try
asyncbufferinghttpservicehandler this sendresponse conn  response
catch  httpexception ex
response   asyncbufferinghttpservicehandler this responsefactory newhttpresponse
httpversion http_1_0
httpstatus sc_internal_server_error
conn getcontext
httpparamslinker link response  asyncbufferinghttpservicehandler this params
asyncbufferinghttpservicehandler this handleexception ex  response
asyncbufferinghttpservicehandler this sendresponse conn  response
else      just hanlder the request with sync request handler
httpresponse response   this responsefactory newhttpresponse
ver
httpstatus sc_ok
conn getcontext
httpparamslinker link response  this params
context setattribute executioncontext http_response  response
handler handle request  response  context
sendresponse conn  response
else
// add the default handler here
httpresponse response   this responsefactory newhttpresponse
ver
httpstatus sc_ok
conn getcontext
response setstatuscode httpstatus sc_not_implemented
catch  httpexception ex
httpresponse response   this responsefactory newhttpresponse
httpversion http_1_0
httpstatus sc_internal_server_error
context
httpparamslinker link response  this params
handleexception ex  response
sendresponse conn  response