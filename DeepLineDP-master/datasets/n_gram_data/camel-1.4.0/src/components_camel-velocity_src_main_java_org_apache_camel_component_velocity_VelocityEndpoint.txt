/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component velocity
import java io inputstreamreader
import java io reader
import java io stringwriter
import java util map
import org apache camel exchange
import org apache camel exchangepattern
import org apache camel message
import org apache camel component resourcebasedendpoint
import org apache camel util exchangehelper
import org apache velocity velocitycontext
import org apache velocity app velocity
import org apache velocity app velocityengine
import org apache velocity context context
import org apache velocity runtime log simplelog4jlogsystem
import org springframework core io resource
/**
* @version $revision$
*/
public class velocityendpoint extends resourcebasedendpoint
private final velocitycomponent component
private velocityengine velocityengine
private boolean loadercache   true
public velocityendpoint string uri  velocitycomponent component  string resourceuri  map parameters
super uri  component  resourceuri  null
this component   component
@override
public boolean issingleton
return true
@override
public exchangepattern getexchangepattern
return exchangepattern inout
private velocityengine getvelocityengine   throws exception
if  velocityengine    null
velocityengine   component getvelocityengine
velocityengine setproperty velocity file_resource_loader_cache  isloadercache   ? boolean true   boolean false
velocityengine setproperty velocity runtime_log_logsystem_class  simplelog4jlogsystem class getname
velocityengine setproperty    velocityendpoint class getname
velocityengine init
return velocityengine
public void setvelocityengine velocityengine velocityengine
this velocityengine   velocityengine
public boolean isloadercache
return loadercache
/**
* enables / disables the velocity resource loader cache which is enabled by default
*
* @param loadercache a flag to enable/disable the cache
*/
public void setloadercache boolean loadercache
this loadercache   loadercache
@suppresswarnings
@override
protected void onexchange exchange exchange  throws exception
resource resource   getresource
// getresourceasinputstream also considers the content cache
reader reader   new inputstreamreader getresourceasinputstream
stringwriter buffer   new stringwriter
string logtag   getclass   getname
map variablemap   exchangehelper createvariablemap exchange
context velocitycontext   new velocitycontext variablemap
// let velocity parse and generate the result in buffer
velocityengine engine   getvelocityengine
if  log isdebugenabled
log debug     variablemap
engine evaluate velocitycontext  buffer  logtag  reader
// now lets output the results to the exchange
message out   exchange getout true
out setbody buffer tostring
out setheader    resource
map<string  object> headers    map<string  object> velocitycontext get
for  string key   headers keyset
out setheader key  headers get key