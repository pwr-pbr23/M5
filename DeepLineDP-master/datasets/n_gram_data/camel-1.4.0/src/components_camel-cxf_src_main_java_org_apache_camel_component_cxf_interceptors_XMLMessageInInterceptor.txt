/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component cxf interceptors
import java util arraylist
import java util collection
import java util list
import java util resourcebundle
import java util logging level
import java util logging logger
import javax xml namespace qname
import javax xml stream xmlstreamexception
import javax xml stream xmlstreamreader
import org w3c dom document
import org w3c dom element
import org w3c dom nodelist
import org apache cxf binding xml xmlconstants
import org apache cxf binding xml xmlfault
import org apache cxf bindings xformat xmlbindingmessageformat
import org apache cxf common i18n bundleutils
import org apache cxf common logging logutils
import org apache cxf endpoint endpoint
import org apache cxf interceptor fault
import org apache cxf message exchange
import org apache cxf message xmlmessage
import org apache cxf phase phase
import org apache cxf service model bindinginfo
import org apache cxf service model bindingmessageinfo
import org apache cxf service model bindingoperationinfo
import org apache cxf service model messagepartinfo
import org apache cxf staxutils staxutils
public class xmlmessageininterceptor extends abstractmessageininterceptor<xmlmessage>
private static final logger log   logutils getl7dlogger xmlmessageininterceptor class
public xmlmessageininterceptor
super phase read
protected logger getlogger
return log
protected boolean isfaultmessage xmlmessage message
xmlstreamreader xsr   message getcontent xmlstreamreader class
boolean isfault   false
try
if  staxutils skiptostartofelement xsr
qname startqname   xsr getname
isfault   xmlconstants ns_xml_format equals startqname getnamespaceuri
xmlfault xml_fault_root equals startqname getlocalpart
catch  xmlstreamexception xse
throw new fault new org apache cxf common i18n message    log
return isfault
protected bindingoperationinfo getbindingoperation xmlmessage message  document doc
exchange ex   message getexchange
bindinginfo binding   ex get bindinginfo class
if  binding    null
endpoint ep   ex get endpoint class
binding   ep getendpointinfo   getbinding
//todo if binding is null throw exception.
element payloadel    element doc getchildnodes   item 0
qname startqname   new qname payloadel getnamespaceuri    payloadel getlocalname
// handling xml normal inbound message
boolean client   isrequestor message
list<bindingoperationinfo> boilist   new arraylist<bindingoperationinfo>
for  bindingoperationinfo boi   binding getoperations
bindingmessageinfo bmi   client ?  boi getoutput     boi getinput
qname rootname   null
if  bmi    null
xmlbindingmessageformat msgformat
bmi getextensor xmlbindingmessageformat class
if  msgformat    null
rootname   msgformat getrootnode
else
collection<messagepartinfo> bodyparts   bmi getmessageparts
if  bodyparts size      1
messagepartinfo p   bodyparts iterator   next
rootname   p getconcretename
if  startqname equals rootname
boilist add boi
bindingoperationinfo match   null
if  boilist size   > 1
if  log isloggable level info
log info
else if   boilist isempty
match   boilist get 0
return match
protected list<element> getpartlist xmlmessage inmessage  element rootnode  bindingmessageinfo bmi
list<element> partlist   new arraylist<element>
xmlbindingmessageformat msgformat
bmi getextensor xmlbindingmessageformat class
if  msgformat    null
nodelist nodelist   rootnode getchildnodes
for  int idx   0  idx < nodelist getlength    idx
partlist add  element nodelist item idx
else
partlist add rootnode
return partlist
protected element getheader xmlmessage inmessage
return null