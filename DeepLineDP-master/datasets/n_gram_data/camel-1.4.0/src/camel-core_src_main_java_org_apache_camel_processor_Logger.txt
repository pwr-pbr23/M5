/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel processor
import org apache camel exchange
import org apache camel processor
import org apache camel impl defaultexchangeformatter
import org apache camel processor interceptor exchangeformatter
import org apache camel processor interceptor traceinterceptor
import org apache commons logging log
import org apache commons logging logfactory
/**
* a {@link processor} which just logs to a {@link log} object which can be used
* as an exception handler instead of using a dead letter queue.
*
* @version $revision$
*/
public class logger implements processor
private log log
private logginglevel level
private exchangeformatter formatter   defaultexchangeformatter getinstance
public logger
this logfactory getlog logger class
public logger log log
this log  logginglevel info
public logger log log  logginglevel level
this log   log
this level   level
public logger string logname
this logfactory getlog logname
public logger string logname  logginglevel level
this logfactory getlog logname   level
public logger log log  exchangeformatter formatter
this log
this formatter   formatter
@override
public string tostring
return     log
public void process exchange exchange
switch  level
case debug
if  log isdebugenabled
log debug logmessage exchange
break
case error
if  log iserrorenabled
log error logmessage exchange
break
case fatal
if  log isfatalenabled
log fatal logmessage exchange
break
case info
if  log isinfoenabled
log info logmessage exchange
break
case trace
if  log istraceenabled
log trace logmessage exchange
break
case warn
if  log iswarnenabled
log warn logmessage exchange
break
default
log error     level       logmessage exchange
public void process exchange exchange  throwable exception
switch  level
case debug
if  log isdebugenabled
log debug logmessage exchange   exception
break
case error
if  log iserrorenabled
log error logmessage exchange   exception
break
case fatal
if  log isfatalenabled
log fatal logmessage exchange   exception
break
case info
if  log isinfoenabled
log info logmessage exchange   exception
break
case trace
if  log istraceenabled
log trace logmessage exchange   exception
break
case warn
if  log iswarnenabled
log warn logmessage exchange   exception
break
default
log error     level       logmessage exchange
public void log string message
switch  level
case debug
if  log isdebugenabled
log debug message
break
case error
if  log iserrorenabled
log error message
break
case fatal
if  log isfatalenabled
log fatal message
break
case info
if  log isinfoenabled
log debug message
break
case trace
if  log istraceenabled
log trace message
break
case warn
if  log iswarnenabled
log warn message
break
default
log error     level       message
public void log string message  throwable exception
switch  level
case debug
if  log isdebugenabled
log debug message  exception
break
case error
if  log iserrorenabled
log error message  exception
break
case fatal
if  log isfatalenabled
log fatal message  exception
break
case info
if  log isinfoenabled
log debug message  exception
break
case trace
if  log istraceenabled
log trace message  exception
break
case warn
if  log iswarnenabled
log warn message  exception
break
default
log error     level       message  exception
protected object logmessage exchange exchange
return formatter format exchange
public log getlog
return log
public void setlog log log
this log   log
public logginglevel getlevel
return level
public void setlevel logginglevel level
this level   level
public void setformatter exchangeformatter formatter
this formatter   formatter