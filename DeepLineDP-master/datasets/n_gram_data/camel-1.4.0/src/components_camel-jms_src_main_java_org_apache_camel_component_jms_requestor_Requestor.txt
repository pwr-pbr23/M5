/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component jms requestor
import java util hashmap
import java util map
import java util concurrent futuretask
import java util concurrent scheduledexecutorservice
import javax jms destination
import javax jms exceptionlistener
import javax jms jmsexception
import javax jms message
import javax jms messagelistener
import javax jms session
import javax jms temporaryqueue
import org apache camel component jms jmsconfiguration
import org apache camel component jms jmsproducer
import org apache camel component jms requestor deferredrequestreplymap deferredmessagesentcallback
import org apache camel impl servicesupport
import org apache camel util defaulttimeoutmap
import org apache camel util timeoutmap
import org apache camel util uuidgenerator
import org apache commons logging log
import org apache commons logging logfactory
import org springframework core task taskexecutor
import org springframework jms listener abstractmessagelistenercontainer
import org springframework jms listener simplemessagelistenercontainer
import org springframework jms listener simplemessagelistenercontainer102
import org springframework jms support destination destinationresolver
/**
* @version $revision$
*/
public class requestor extends servicesupport implements messagelistener
private static final transient log log   logfactory getlog requestor class
private static uuidgenerator uuidgenerator
private final jmsconfiguration configuration
private scheduledexecutorservice executorservice
private abstractmessagelistenercontainer listenercontainer
private timeoutmap requestmap
private map<jmsproducer  deferredrequestreplymap> producerdeferredrequestreplymap
private timeoutmap deferredrequestmap
private timeoutmap deferredreplymap
private destination replyto
private long maxrequesttimeout    1
private long replytoresolvertimeout   5000
public requestor jmsconfiguration configuration  scheduledexecutorservice executorservice
this configuration   configuration
this executorservice   executorservice
requestmap   new defaulttimeoutmap executorservice  configuration getrequestmappurgepolltimemillis
producerdeferredrequestreplymap   new hashmap<jmsproducer  deferredrequestreplymap>
deferredrequestmap   new defaulttimeoutmap executorservice  configuration getrequestmappurgepolltimemillis
deferredreplymap   new defaulttimeoutmap executorservice  configuration getrequestmappurgepolltimemillis
public synchronized deferredrequestreplymap getdeferredrequestreplymap jmsproducer producer
deferredrequestreplymap map   producerdeferredrequestreplymap get producer
if  map    null
map   new deferredrequestreplymap this  producer  deferredrequestmap  deferredreplymap
producerdeferredrequestreplymap put producer  map
if  maxrequesttimeout     1
maxrequesttimeout   producer getrequesttimeout
else if  maxrequesttimeout < producer getrequesttimeout
maxrequesttimeout   producer getrequesttimeout
return map
public synchronized void removedeferredrequestreplymap jmsproducer producer
deferredrequestreplymap map   producerdeferredrequestreplymap remove producer
if  map    null
// already removed;
return
if  maxrequesttimeout    producer getrequesttimeout
long max    1
for  map entry<jmsproducer  deferredrequestreplymap> entry   producerdeferredrequestreplymap entryset
if  max < entry getkey   getrequesttimeout
max   entry getkey   getrequesttimeout
maxrequesttimeout   max
public synchronized long getmaxrequesttimeout
return maxrequesttimeout
public timeoutmap getrequestmap
return requestmap
public timeoutmap getdeferredrequestmap
return deferredrequestmap
public timeoutmap getdeferredreplymap
return deferredreplymap
public futuretask getreceivefuture string correlationid  long requesttimeout
futurehandler future   createfuturehandler correlationid
requestmap put correlationid  future  requesttimeout
return future
public futuretask getreceivefuture deferredmessagesentcallback callback
futurehandler future   createfuturehandler callback
deferredrequestreplymap map   callback getdeferredrequestreplymap
map put callback  future
return future
protected futurehandler createfuturehandler string correlationid
return new futurehandler
protected futurehandler createfuturehandler deferredmessagesentcallback callback
return new futurehandler
public void onmessage message message
try
string correlationid   message getjmscorrelationid
if  log isdebugenabled
log debug     correlationid
if  correlationid    null
log warn     message
return
// lets notify the monitor for this response
object handler   requestmap get correlationid
if  handler    null    handler instanceof replyhandler
replyhandler replyhandler    replyhandler  handler
boolean complete   replyhandler handle message
if  complete
requestmap remove correlationid
else
deferredrequestreplymap processdeferredrequests
this  deferredrequestmap  deferredreplymap
correlationid  getmaxrequesttimeout    message
catch  jmsexception e
throw new failedtoprocessresponse message  e
public abstractmessagelistenercontainer getlistenercontainer
if  listenercontainer    null
listenercontainer   createlistenercontainer
return listenercontainer
public void setlistenercontainer abstractmessagelistenercontainer listenercontainer
this listenercontainer   listenercontainer
public destination getreplyto
synchronized  this
try
if  replyto    null
wait replytoresolvertimeout
catch  throwable e
// eat it
return replyto
public void setreplyto destination replyto
this replyto   replyto
// implementation methods
//-------------------------------------------------------------------------
@override
protected void dostart   throws exception
abstractmessagelistenercontainer container   getlistenercontainer
container afterpropertiesset
@override
protected void dostop   throws exception
if  listenercontainer    null
listenercontainer stop
listenercontainer destroy
protected requestor getoutterinstance
return this
protected abstractmessagelistenercontainer createlistenercontainer
simplemessagelistenercontainer answer   configuration isuseversion102
? new simplemessagelistenercontainer102     new simplemessagelistenercontainer
answer setdestinationname
answer setdestinationresolver new destinationresolver
public destination resolvedestinationname session session  string destinationname
boolean pubsubdomain  throws jmsexception
temporaryqueue queue   null
synchronized  getoutterinstance
try
queue   session createtemporaryqueue
setreplyto queue
finally
getoutterinstance   notifyall
return queue
answer setautostartup true
answer setmessagelistener this
answer setpubsubdomain false
answer setsubscriptiondurable false
answer setconcurrentconsumers 1
answer setconnectionfactory configuration getconnectionfactory
string clientid   configuration getclientid
if  clientid    null
clientid
answer setclientid clientid
taskexecutor taskexecutor   configuration gettaskexecutor
if  taskexecutor    null
answer settaskexecutor taskexecutor
exceptionlistener exceptionlistener   configuration getexceptionlistener
if  exceptionlistener    null
answer setexceptionlistener exceptionlistener
return answer
public static synchronized uuidgenerator getuuidgenerator
if  uuidgenerator    null
uuidgenerator   new uuidgenerator
return uuidgenerator
protected jmsconfiguration getconfiguration
return configuration
public void setreplytoselectorheader org apache camel message in  message jmsin  throws jmsexception
// complete