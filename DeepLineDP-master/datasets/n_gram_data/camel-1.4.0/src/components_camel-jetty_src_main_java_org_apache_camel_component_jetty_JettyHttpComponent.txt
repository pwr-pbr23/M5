/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component jetty
import java net uri
import java util hashmap
import java util map
import org apache camel endpoint
import org apache camel component http camelservlet
import org apache camel component http httpcomponent
import org apache camel component http httpconsumer
import org apache camel component http httpendpoint
import org apache camel component http httpexchange
import org mortbay jetty connector
import org mortbay jetty server
import org mortbay jetty client httpclient
import org mortbay jetty nio selectchannelconnector
import org mortbay jetty security sslsocketconnector
import org mortbay jetty servlet context
import org mortbay jetty servlet hashsessionidmanager
import org mortbay jetty servlet hashsessionmanager
import org mortbay jetty servlet servletholder
import org mortbay jetty servlet sessionhandler
/**
* an httpcomponent which starts an embedded jetty for to handle consuming from
* the http endpoints.
*
* @version $revision$
*/
public class jettyhttpcomponent extends httpcomponent
class connectorref
connector connector
int refcount
public connectorref connector connector
this connector   connector
increment
public int increment
return   refcount
public int decrement
return   refcount
private camelservlet camelservlet
private server server
private final hashmap<string  connectorref> connectors   new hashmap<string  connectorref>
private httpclient httpclient
private string sslkeypassword
private string sslpassword
private string sslkeystore
private sslsocketconnector sslsocketconnector
@override
protected endpoint<httpexchange> createendpoint string uri  string remaining  map parameters  throws exception
uri httpurl   uri startswith    ? new uri remaining    new uri uri
jettyhttpendpoint result
new jettyhttpendpoint this  uri  httpurl  gethttpconnectionmanager
setproperties result  parameters
return result
/**
* connects the url specified on the endpoint to the specified processor.
*
* @throws exception
*/
@override
public void connect httpconsumer consumer  throws exception
// make sure that there is a connector for the requested endpoint.
jettyhttpendpoint endpoint    jettyhttpendpoint consumer getendpoint
string connectorkey   endpoint getprotocol         endpoint getport
synchronized  connectors
connectorref connectorref   connectors get connectorkey
if  connectorref    null
connector connector
if    equals endpoint getprotocol
connector   getsslsocketconnector
else
connector   new selectchannelconnector
connector setport endpoint getport
getserver   addconnector connector
// check the session support
if  endpoint issessionsupport
enablesessionsupport
connector start
connectorref   new connectorref connector
connectors put connectorkey  connectorref
else
// ref track the connector
connectorref increment
// check the session support
if  endpoint issessionsupport
enablesessionsupport
camelservlet connect consumer
private void enablesessionsupport   throws exception
context context    context getserver   getchildhandlerbyclass context class
if  context getsessionhandler      null
sessionhandler sessionhandler   new sessionhandler
context setsessionhandler sessionhandler
if  context isstarted
// restart the context
context stop
context start
/**
* disconnects the url specified on the endpoint from the specified
* processor.
*
* @throws exception
*/
@override
public void disconnect httpconsumer consumer  throws exception
camelservlet disconnect consumer
// if the connector is not needed anymore.. then stop it.
httpendpoint endpoint    httpendpoint consumer getendpoint
string connectorkey   endpoint getprotocol         endpoint getport
synchronized  connectors
connectorref connectorref   connectors get connectorkey
if  connectorref    null
if  connectorref decrement      0
getserver   removeconnector connectorref connector
connectorref connector stop
connectors remove connectorkey
// properties
// -------------------------------------------------------------------------
public server getserver   throws exception
if  server    null
server   createserver
return server
public void setserver server server
this server   server
public string getsslkeypassword
return sslkeypassword
public void setsslkeypassword string sslkeypassword
this sslkeypassword   sslkeypassword
public string getsslpassword
return sslpassword
public void setsslpassword string sslpassword
this sslpassword   sslpassword
public void setkeystore string sslkeystore
this sslkeystore   sslkeystore
public string getkeystore
return sslkeystore
public synchronized sslsocketconnector getsslsocketconnector
if  sslsocketconnector    null
sslsocketconnector   new sslsocketconnector
// with default null values, jetty ssl system properties
// and console will be read by jetty implementation
sslsocketconnector setpassword sslpassword
sslsocketconnector setkeypassword sslkeypassword
if  sslkeystore    null
sslsocketconnector setkeystore sslkeystore
return sslsocketconnector
public void setsslsocketconnector sslsocketconnector connector
sslsocketconnector   connector
// implementation methods
// -------------------------------------------------------------------------
protected server createserver   throws exception
camelservlet   new camelcontinuationservlet
server server   new server
context context   new context context no_security   context no_sessions
context setcontextpath
servletholder holder   new servletholder
holder setservlet camelservlet
context addservlet holder
server sethandler context
server start
return server
@override
protected void dostop   throws exception
for  connectorref connectorref   connectors values
connectorref connector stop
connectors clear
if  server    null
server stop
httpclient stop
super dostop
@override
protected void dostart   throws exception
super dostart
if  httpclient    null
httpclient   createhttpclient
httpclient start
protected httpclient createhttpclient   throws exception
httpclient httpclient   new httpclient
httpclient setconnectortype httpclient connector_select_channel
httpclient setmaxconnectionsperaddress 2
return httpclient
public httpclient gethttpclient
return httpclient
public void sethttpclient httpclient httpclient
this httpclient   httpclient