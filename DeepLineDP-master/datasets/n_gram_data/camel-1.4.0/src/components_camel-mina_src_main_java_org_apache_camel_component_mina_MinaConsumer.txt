/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component mina
import java net socketaddress
import org apache camel camelexception
import org apache camel processor
import org apache camel impl defaultconsumer
import org apache camel util exchangehelper
import org apache commons logging log
import org apache commons logging logfactory
import org apache mina common ioacceptor
import org apache mina common iohandler
import org apache mina common iohandleradapter
import org apache mina common iosession
/**
* a {@link org.apache.camel.consumer consumer} implementation for apache mina.
*
* @version $revision$
*/
public class minaconsumer extends defaultconsumer<minaexchange>
private static final transient log log   logfactory getlog minaconsumer class
private final minaendpoint endpoint
private final socketaddress address
private final ioacceptor acceptor
public minaconsumer final minaendpoint endpoint  processor processor
super endpoint  processor
this endpoint   endpoint
this address   endpoint getaddress
this acceptor   endpoint getacceptor
@override
protected void dostart   throws exception
super dostart
if  log isdebugenabled
log debug     address       acceptor
iohandler handler   new receivehandler
acceptor bind address  handler  endpoint getacceptorconfig
@override
protected void dostop   throws exception
if  log isdebugenabled
log debug     address       acceptor
acceptor unbind address
super dostop
/**
* handles comsuming messages and replying if the exchange is out capable.
*/
private final class receivehandler extends iohandleradapter
@override
public void exceptioncaught iosession session  throwable cause  throws exception
// close invalid session
if  session    null
log debug
session close
// must wrap and rethrow since cause can be of throwable and we must only throw exception
throw new camelexception cause
@override
public void messagereceived iosession session  object object  throws exception
if  log isdebugenabled
log debug     object
minaexchange exchange   endpoint createexchange session  object
getprocessor   process exchange
if  exchangehelper isoutcapable exchange
object body   minapayloadhelper getout endpoint  exchange
boolean failed   exchange isfailed
if  failed
// can not write a response since the exchange is failed and we don't know in what state the
// in/out messages are in so the session is closed
log warn     exchange
session close
else if  body    null
// must close session if no data to write otherwise client will never receive a response
// and wait forever (if not timing out)
log warn     exchange
session close
else
// we got a response to write
if  log isdebugenabled
log debug     body
minahelper writebody session  body  exchange
else
if  log isdebugenabled
log debug     exchange