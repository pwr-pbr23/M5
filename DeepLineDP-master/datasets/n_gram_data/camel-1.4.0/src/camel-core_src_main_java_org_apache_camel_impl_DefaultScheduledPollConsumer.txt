/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel impl
import java util concurrent scheduledexecutorservice
import org apache camel consumer
import org apache camel endpoint
import org apache camel exchange
import org apache camel message
import org apache camel pollingconsumer
import org apache camel processor
/**
* a default implementation of an event driven {@link consumer} which uses the {@link pollingconsumer}
*
* @version $revision$
*/
public class defaultscheduledpollconsumer<e extends exchange> extends scheduledpollconsumer<e>
private pollingconsumer<e> pollingconsumer
public defaultscheduledpollconsumer defaultendpoint<e> defaultendpoint  processor processor
super defaultendpoint  processor
public defaultscheduledpollconsumer endpoint<e> endpoint  processor processor  scheduledexecutorservice executor
super endpoint  processor  executor
protected void poll   throws exception
while  true
e exchange   pollingconsumer receivenowait
if  exchange    null
break
// if the result of the polled exchange has output we should create a new exchange and
// use the output as input to the next processor
message out   exchange getout false
if  out    null
// lets create a new exchange
e newexchange   getendpoint   createexchange
newexchange getin   copyfrom out
exchange   newexchange
getprocessor   process exchange
@override
protected void dostart   throws exception
pollingconsumer   getendpoint   createpollingconsumer
super dostart
@override
protected void dostop   throws exception
super dostop
if  pollingconsumer    null
pollingconsumer stop