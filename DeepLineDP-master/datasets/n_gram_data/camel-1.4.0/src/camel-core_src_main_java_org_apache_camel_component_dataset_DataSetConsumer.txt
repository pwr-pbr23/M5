/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component dataset
import org apache camel exchange
import org apache camel processor
import org apache camel impl defaultconsumer
import org apache camel processor throughputlogger
import org apache commons logging log
import org apache commons logging logfactory
/**
* dataset consumer.
*
* @version $revision$
*/
public class datasetconsumer extends defaultconsumer<exchange>
private static final transient log log   logfactory getlog datasetconsumer class
private datasetendpoint endpoint
private processor reporter
public datasetconsumer datasetendpoint endpoint  processor processor
super endpoint  processor
this endpoint   endpoint
@override
protected void dostart   throws exception
super dostart
if  reporter    null
reporter   createreporter
final dataset dataset   endpoint getdataset
final long preloadsize   endpoint getpreloadsize
sendmessages 0  preloadsize
endpoint getexecutorservice   execute new runnable
public void run
sendmessages preloadsize  dataset getsize
protected void sendmessages long startindex  long endindex
try
for  long i   startindex  i < endindex  i
exchange exchange   endpoint createexchange i
getprocessor   process exchange
try
long delay   endpoint getproducedelay
if  delay < 3
// if no delay set then we must sleep at lest for 3 millis to avoid concurrency
// issues with extremely high throughput
delay   3
thread sleep delay
catch  interruptedexception e
// ignore and just log to debug
log debug e
if  reporter    null
reporter process exchange
catch  exception e
log error e
protected throughputlogger createreporter
throughputlogger answer   new throughputlogger endpoint getendpointuri     int  endpoint getdataset   getreportcount
answer setaction
return answer