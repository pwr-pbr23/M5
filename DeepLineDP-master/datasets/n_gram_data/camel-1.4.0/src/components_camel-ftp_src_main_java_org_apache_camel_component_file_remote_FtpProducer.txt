/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component file remote
import java io ioexception
import java io inputstream
import org apache camel exchange
import org apache camel runtimecamelexception
import org apache commons logging log
import org apache commons logging logfactory
import org apache commons net ftp ftpclient
import org apache commons net ftp ftpconnectionclosedexception
public class ftpproducer extends remotefileproducer<remotefileexchange>
private static final transient log log   logfactory getlog ftpproducer class
private ftpendpoint endpoint
private ftpclient client
public ftpproducer ftpendpoint endpoint  ftpclient client
super endpoint
this endpoint   endpoint
this client   client
public void process exchange exchange  throws exception
connectifnecessary
// if the attempt to connect isn't successful, then the thrown
// exception will signify that we couldn't deliver
try
process endpoint createexchange exchange
catch  ftpconnectionclosedexception e
// if the server disconnected us, then we must manually disconnect
// the client before attempting to reconnect
log warn     e tostring
disconnect
// rethrow to signify that we didn't deliver
throw e
catch  runtimecamelexception e
log warn     e tostring
log warn
disconnect
// rethrow to signify that we didn't deliver
throw e
protected void connectifnecessary   throws ioexception
// todo: is there a way to avoid copy-pasting the reconnect logic?
if   client isconnected
log warn
endpoint connect client
log info     endpoint getconfiguration
public void disconnect   throws ioexception
log info
endpoint disconnect client
public void process remotefileexchange exchange  throws exception
inputstream payload   exchange getin   getbody inputstream class
try
string filename   createfilename exchange getin    endpoint getconfiguration
int lastpathindex   filename lastindexof
if  lastpathindex     1
string directory   filename substring 0  lastpathindex
if   builddirectory client  directory
log warn     directory
final boolean success   client storefile filename  payload
if   success
// todo: should we not have better exception for this?
throw new runtimecamelexception     filename
remotefileconfiguration config   endpoint getconfiguration
log info     filename       config tostring   substring 0  config tostring   indexof config getfile
finally
if  payload    null
payload close
@override
protected void dostart   throws exception
log info
try
connectifnecessary
catch  ioexception e
log warn     endpoint getconfiguration
super dostart
@override
protected void dostop   throws exception
log info
disconnect
super dostop
protected static boolean builddirectory ftpclient ftpclient  string dirname  throws ioexception
boolean atleastonesuccess   false
final stringbuilder sb   new stringbuilder dirname length
final string dirs   dirname split
for  string dir   dirs
sb append dir  append
string directory   sb tostring
if  log isdebugenabled
log debug     directory
final boolean success   ftpclient makedirectory directory
if   atleastonesuccess    success
atleastonesuccess   true
return atleastonesuccess