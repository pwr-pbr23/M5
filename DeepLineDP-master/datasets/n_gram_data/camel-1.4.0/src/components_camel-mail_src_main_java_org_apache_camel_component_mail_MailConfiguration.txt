/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component mail
import java net uri
import java util hashmap
import java util map
import java util properties
import javax mail authenticator
import javax mail message
import javax mail passwordauthentication
import javax mail session
import org apache camel component mail security dummysslsocketfactory
import org springframework mail javamail javamailsenderimpl
/**
* represents the configuration data for communicating over email
*
* @version $revision$
*/
public class mailconfiguration
public static final string default_folder_name
public static final string default_from
public static final long default_connection_timeout   30000l
private properties javamailproperties
private string protocol
private string host
private int port    1
private string username
private string password
private session session
private string defaultencoding
private string from   default_from
private string foldername   default_folder_name
private boolean deleteprocessedmessages   true
private boolean ignoreurischeme
private boolean processonlyunseenmessages
private map<message recipienttype  string> recipients   new hashmap<message recipienttype  string>
private int fetchsize    1
private boolean debugmode
private long connectiontimeout   default_connection_timeout
private boolean dummytrustmanager
public mailconfiguration
public void configure uri uri
string value   uri gethost
if  value    null
sethost value
if   isignoreurischeme
string scheme   uri getscheme
if  scheme    null
setprotocol scheme
string userinfo   uri getuserinfo
if  userinfo    null
setusername userinfo
// set default destination to userinfo@host for backwards compatibility
// can be overridden by uri parameters
string address   userinfo       host
recipients put message recipienttype to  address
int port   uri getport
if  port >  0
setport port
else
// resolve default port if no port number was provided
setport mailutils getdefaultportforprotocol uri getscheme
protected javamailsenderimpl createjavamailsender
javamailsenderimpl answer   new javamailsenderimpl
// sets the debug mode of the underlying mail framework
answer getsession   setdebug debugmode
if  javamailproperties    null
answer setjavamailproperties javamailproperties
else
// set default properties if none provided
answer setjavamailproperties createjavamailproperties
if  defaultencoding    null
answer setdefaultencoding defaultencoding
if  host    null
answer sethost host
if  port >  0
answer setport port
if  password    null
answer setpassword password
if  protocol    null
answer setprotocol protocol
if  session    null
answer setsession session
else
// use our authenticator that does no live user interaction but returns the already configured username and password
session session   session getdefaultinstance answer getjavamailproperties    getauthenticator
answer setsession session
if  username    null
answer setusername username
return answer
private properties createjavamailproperties
// clone the system properties and set the java mail properties
properties properties    properties system getproperties   clone
properties put     protocol      connectiontimeout
properties put     protocol      connectiontimeout
properties put     protocol      host
properties put     protocol          port
properties put     protocol      username
properties put     protocol
properties put     protocol
properties put    protocol
properties put    protocol
properties put    host
properties put    username
if  debugmode
// add more debug for the ssl communication as well
properties put
if  dummytrustmanager    issecureprotocol
// set the custom ssl properties
properties put     protocol      dummysslsocketfactory class getname
properties put     protocol
properties put     protocol          port
return properties
/**
* is the used protocol to be secure or not
*/
public boolean issecureprotocol
return this protocol equalsignorecase       this protocol equalsignorecase
this protocol equalsignorecase
/**
* returns an authenticator object for use in sessions
*/
public authenticator getauthenticator
return new authenticator
protected passwordauthentication getpasswordauthentication
return new passwordauthentication getusername    getpassword
public string getmailstoreloginformation
string ssl
if  issecureprotocol
ssl        dummytrustmanager ?
return protocol       host       port   ssl       foldername
// properties
// -------------------------------------------------------------------------
public string getdefaultencoding
return defaultencoding
public void setdefaultencoding string defaultencoding
this defaultencoding   defaultencoding
public string gethost
return host
public void sethost string host
this host   host
public properties getjavamailproperties
return javamailproperties
public void setjavamailproperties properties javamailproperties
this javamailproperties   javamailproperties
public string getpassword
return password
public void setpassword string password
this password   password
public int getport
return port
public void setport int port
this port   port
public string getprotocol
return protocol
public void setprotocol string protocol
this protocol   protocol
public session getsession
return session
public void setsession session session
this session   session
public string getusername
return username
public void setusername string username
this username   username
if   recipients containskey message recipienttype to
// set default destination to username@host for backwards compatibility
// can be overridden by uri parameters
string address   username       host
recipients put message recipienttype to  address
/**
* gets the destination (recipient <tt>to</tt> email address).
*
* @deprecated use {@link #getrecipients()}
*/
public string getdestination
// for backwards compatibility
return recipients get message recipienttype to
/**
* sets the destination (recipient <tt>to</tt> email address).
*
* @deprecated use {@link #setto(string)}
*/
public void setdestination string destination
// for backwards compatibility
recipients put message recipienttype to  destination
public string getfrom
return from
public void setfrom string from
this from   from
public boolean isdeleteprocessedmessages
return deleteprocessedmessages
public void setdeleteprocessedmessages boolean deleteprocessedmessages
this deleteprocessedmessages   deleteprocessedmessages
public string getfoldername
return foldername
public void setfoldername string foldername
this foldername   foldername
public boolean isignoreurischeme
return ignoreurischeme
public void setignoreurischeme boolean ignoreurischeme
this ignoreurischeme   ignoreurischeme
public boolean isprocessonlyunseenmessages
return processonlyunseenmessages
public void setprocessonlyunseenmessages boolean processonlyunseenmessages
this processonlyunseenmessages   processonlyunseenmessages
/**
* sets the <tt>to</tt> email address. separate multiple email addresses with comma.
*/
public void setto string address
recipients put message recipienttype to  address
/**
* sets the <tt>cc</tt> email address. separate multiple email addresses with comma.
*/
public void setcc string address
recipients put message recipienttype cc  address
/**
* sets the <tt>bcc</tt> email address. separate multiple email addresses with comma.
*/
public void setbcc string address
recipients put message recipienttype bcc  address
public map<message recipienttype  string> getrecipients
return recipients
public int getfetchsize
return fetchsize
public void setfetchsize int fetchsize
this fetchsize   fetchsize
public boolean isdebugmode
return debugmode
public void setdebugmode boolean debugmode
this debugmode   debugmode
public long getconnectiontimeout
return connectiontimeout
public void setconnectiontimeout long connectiontimeout
this connectiontimeout   connectiontimeout
public boolean isdummytrustmanager
return dummytrustmanager
public void setdummytrustmanager boolean dummytrustmanager
this dummytrustmanager   dummytrustmanager