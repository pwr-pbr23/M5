/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component xquery
import java io bytearrayoutputstream
import java io file
import java io filenotfoundexception
import java io ioexception
import java io inputstream
import java io reader
import java io stringwriter
import java net url
import java util collection
import java util hashmap
import java util list
import java util map
import java util properties
import java util set
import java util concurrent atomic atomicboolean
import javax xml transform result
import javax xml transform source
import javax xml transform dom domresult
import javax xml transform stream streamresult
import org w3c dom node
import net sf saxon configuration
import net sf saxon om documentinfo
import net sf saxon om item
import net sf saxon om sequenceiterator
import net sf saxon query dynamicquerycontext
import net sf saxon query staticquerycontext
import net sf saxon query xqueryexpression
import net sf saxon trans xpathexception
import org apache camel exchange
import org apache camel expression
import org apache camel message
import org apache camel predicate
import org apache camel processor
import org apache camel runtimeexpressionexception
import org apache camel converter ioconverter
import org apache camel converter jaxp bytessource
import org apache camel converter jaxp stringsource
import org apache camel converter jaxp xmlconverter
import org apache camel spi namespaceaware
import org apache camel util objecthelper
import org apache commons logging log
import org apache commons logging logfactory
/**
* creates an xquery builder
*
* @version $revision$
*/
public abstract class xquerybuilder implements expression<exchange>  predicate<exchange>  namespaceaware  processor
private static final transient log log   logfactory getlog xquerybuilder class
private configuration configuration
private xqueryexpression expression
private staticquerycontext staticquerycontext
private map<string  object> parameters   new hashmap<string  object>
private map<string  string> namespaceprefixes   new hashmap<string  string>
private xmlconverter converter   new xmlconverter
private resultformat resultsformat   resultformat dom
private properties properties   new properties
private class resulttype
private final atomicboolean initialized   new atomicboolean false
@override
public string tostring
return     expression
public void process exchange exchange  throws exception
object body   evaluate exchange
exchange getout true  setbody body
// propogate headers
exchange getout   getheaders   putall exchange getin   getheaders
public object evaluate exchange exchange
try
initialize
if  log isdebugenabled
log debug     expression       exchange
if  resulttype    null
if  resulttype equals string class
return evaluateasstring exchange
else if  resulttype isassignablefrom collection class
return evaluateaslist exchange
else if  resulttype isassignablefrom node class
return evaluateasdom exchange
else
// todo figure out how to convert to the given type
switch  resultsformat
case bytes
return evaluateasbytes exchange
case bytessource
return evaluateasbytessource exchange
case dom
return evaluateasdom exchange
case list
return evaluateaslist exchange
case stringsource
return evaluateasstringsource exchange
case string
default
return evaluateasstring exchange
catch  exception e
throw new runtimeexpressionexception e
public list evaluateaslist exchange exchange  throws exception
initialize
return getexpression   evaluate createdynamiccontext exchange
public object evaluateasstringsource exchange exchange  throws exception
initialize
string text   evaluateasstring exchange
return new stringsource text
public object evaluateasbytessource exchange exchange  throws exception
initialize
byte bytes   evaluateasbytes exchange
return new bytessource bytes
public node evaluateasdom exchange exchange  throws exception
initialize
domresult result   new domresult
dynamicquerycontext context   createdynamiccontext exchange
xqueryexpression expression   getexpression
expression pull context  result  properties
return result getnode
public byte evaluateasbytes exchange exchange  throws exception
initialize
bytearrayoutputstream buffer   new bytearrayoutputstream
result result   new streamresult buffer
getexpression   pull createdynamiccontext exchange   result  properties
byte bytes   buffer tobytearray
return bytes
public string evaluateasstring exchange exchange  throws exception
initialize
stringwriter buffer   new stringwriter
sequenceiterator iter   getexpression   iterator createdynamiccontext exchange
for  item item   iter next    item    null  item   iter next
buffer append item getstringvaluecs
return buffer tostring
public boolean matches exchange exchange
try
list list   evaluateaslist exchange
return matches exchange  list
catch  exception e
throw new runtimeexpressionexception e
public void assertmatches string text  exchange exchange  throws assertionerror
try
list list   evaluateaslist exchange
if   matches exchange  list
throw new assertionerror this       exchange       list
catch  exception e
throw new assertionerror e
// static helper methods
//-------------------------------------------------------------------------
public static xquerybuilder xquery final string querytext
return new xquerybuilder
protected xqueryexpression createqueryexpression staticquerycontext staticquerycontext
throws xpathexception
return staticquerycontext compilequery querytext
public static xquerybuilder xquery final reader reader
return new xquerybuilder
protected xqueryexpression createqueryexpression staticquerycontext staticquerycontext
throws xpathexception  ioexception
return staticquerycontext compilequery reader
public static xquerybuilder xquery final inputstream in  final string characterset
return new xquerybuilder
protected xqueryexpression createqueryexpression staticquerycontext staticquerycontext
throws xpathexception  ioexception
return staticquerycontext compilequery in  characterset
public static xquerybuilder xquery file file  string characterset  throws filenotfoundexception
return xquery ioconverter toinputstream file   characterset
public static xquerybuilder xquery url url  string characterset  throws ioexception
return xquery ioconverter toinputstream url   characterset
public static xquerybuilder xquery file file  throws filenotfoundexception
return xquery ioconverter toinputstream file   objecthelper getdefaultcharacterset
public static xquerybuilder xquery url url  throws ioexception
return xquery ioconverter toinputstream url   objecthelper getdefaultcharacterset
// fluent api
// -------------------------------------------------------------------------
public xquerybuilder parameter string name  object value
parameters put name  value
return this
public xquerybuilder namespace string prefix  string uri
namespaceprefixes put prefix  uri
// more namespace, we must re initialize
initialized set false
return this
public xquerybuilder resulttype class resulttype
setresulttype resulttype
return this
public xquerybuilder asbytes
setresultsformat resultformat bytes
return this
public xquerybuilder asbytessource
setresultsformat resultformat bytessource
return this
public xquerybuilder asdom
setresultsformat resultformat dom
return this
public xquerybuilder asdomsource
setresultsformat resultformat domsource
return this
public xquerybuilder aslist
setresultsformat resultformat list
return this
public xquerybuilder asstring
setresultsformat resultformat string
return this
public xquerybuilder asstringsource
setresultsformat resultformat stringsource
return this
// properties
// -------------------------------------------------------------------------
/**
* configures the namespace context from the given dom element
*/
public void setnamespaces map<string  string> namespaces
namespaceprefixes putall namespaces
// more namespace, we must re initialize
initialized set false
public xqueryexpression getexpression   throws ioexception  xpathexception
return expression
public configuration getconfiguration
return configuration
public void setconfiguration configuration configuration
this configuration   configuration
// change configuration, we must re intialize
initialized set false
public staticquerycontext getstaticquerycontext
return staticquerycontext
public void setstaticquerycontext staticquerycontext staticquerycontext
this staticquerycontext   staticquerycontext
// change context, we must re intialize
initialized set false
public map<string  object> getparameters
return parameters
public void setparameters map<string  object> parameters
this parameters   parameters
public properties getproperties
return properties
public void setproperties properties properties
this properties   properties
public resultformat getresultsformat
return resultsformat
public void setresultsformat resultformat resultsformat
this resultsformat   resultsformat
public class getresulttype
return resulttype
public void setresulttype class resulttype
this resulttype   resulttype
// implementation methods
// -------------------------------------------------------------------------
/**
* a factory method to create the xquery expression
*/
protected abstract xqueryexpression createqueryexpression staticquerycontext staticquerycontext
throws xpathexception  ioexception
/**
* creates a dynamic context for the given exchange
*/
protected dynamicquerycontext createdynamiccontext exchange exchange  throws exception
configuration config   getconfiguration
dynamicquerycontext dynamicquerycontext   new dynamicquerycontext config
message in   exchange getin
item item   in getbody item class
source source   null
if  item    null
dynamicquerycontext setcontextitem item
else
source   in getbody source class
if  source    null
if  log isdebugenabled
log debug     exchange
source   converter tosource converter createdocument
documentinfo doc   getstaticquerycontext   builddocument source
dynamicquerycontext setcontextitem doc
configurequery dynamicquerycontext  exchange
return dynamicquerycontext
/**
* configures the dynamic context with exchange specific parameters
*
* @param dynamicquerycontext
* @param exchange
* @throws exception
*/
protected void configurequery dynamicquerycontext dynamicquerycontext  exchange exchange
throws exception
addparameters dynamicquerycontext  exchange getproperties
addparameters dynamicquerycontext  exchange getin   getheaders
addparameters dynamicquerycontext  getparameters
dynamicquerycontext setparameter    exchange
if  exchange getpattern   isoutcapable
dynamicquerycontext setparameter    exchange getout
protected void addparameters dynamicquerycontext dynamicquerycontext  map<string  object> map
set<map entry<string  object>> propertyentries   map entryset
for  map entry<string  object> entry   propertyentries
dynamicquerycontext setparameter entry getkey    entry getvalue
protected boolean matches exchange exchange  list results
return objecthelper matches results
/**
* initializes this builder - <b>must be invoked before evaluation</b>.
*/
protected synchronized void initialize   throws xpathexception  ioexception
// must use synchronized for concurrency issues and only let it initialize once
if   initialized get
if  log isdebugenabled
log debug     this
configuration   new configuration
configuration sethostlanguage configuration xquery
staticquerycontext   new staticquerycontext getconfiguration
set<map entry<string  string>> entries   namespaceprefixes entryset
for  map entry<string  string> entry   entries
string prefix   entry getkey
string uri   entry getvalue
staticquerycontext declarenamespace prefix  uri
staticquerycontext setinheritnamespaces true
expression   createqueryexpression staticquerycontext
initialized set true