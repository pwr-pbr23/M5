/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component bean
import java lang reflect accessibleobject
import java lang reflect invocationtargetexception
import java lang reflect method
import java util arrays
import java util list
import org apache camel exchange
import org apache camel expression
import org apache camel util exchangehelper
import org apache camel util objecthelper
/**
* information about a method to be used for invocation.
*
* @version $revision$
*/
public class methodinfo
private class type
private method method
private final list<parameterinfo> parameters
private final list<parameterinfo> bodyparameters
private final boolean hascustomannotation
private expression parametersexpression
public methodinfo class type  method method  list<parameterinfo> parameters  list<parameterinfo> bodyparameters  boolean hascustomannotation
this type   type
this method   method
this parameters   parameters
this bodyparameters   bodyparameters
this hascustomannotation   hascustomannotation
this parametersexpression   createparametersexpression
public string tostring
return method tostring
public methodinvocation createmethodinvocation final object pojo  final exchange messageexchange
final object arguments    object  parametersexpression evaluate messageexchange
return new methodinvocation
public method getmethod
return method
public object getarguments
return arguments
public object proceed   throws throwable
return invoke method  pojo  arguments  messageexchange
public object getthis
return pojo
public accessibleobject getstaticpart
return method
public class gettype
return type
public method getmethod
return method
public expression getparametersexpression
return parametersexpression
public list<parameterinfo> getbodyparameters
return bodyparameters
public class getbodyparametertype
parameterinfo parameterinfo   bodyparameters get 0
return parameterinfo gettype
public boolean bodyparametermatches class bodytype
class actualtype   getbodyparametertype
return actualtype    null    objecthelper isassignablefrom bodytype  actualtype
public list<parameterinfo> getparameters
return parameters
public boolean hasbodyparameter
return  bodyparameters isempty
public boolean ishascustomannotation
return hascustomannotation
public boolean isreturntypevoid
return method getreturntype   getname   equals
protected object invoke method mth  object pojo  object arguments  exchange exchange  throws illegalaccessexception  invocationtargetexception
return mth invoke pojo  arguments
protected expression createparametersexpression
final int size   parameters size
final expression expressions   new expression
for  int i   0  i < size  i
expression parameterexpression   parameters get i  getexpression
expressions   parameterexpression
return new expression<exchange>
public object evaluate exchange exchange
object answer   new object
for  int i   0  i < size  i
object value   expressions evaluate exchange
// now lets try to coerce the value to the required type
class expectedtype   parameters get i  gettype
value   exchangehelper converttotype exchange  expectedtype  value
answer   value
return answer
@override
public string tostring
return     arrays aslist expressions