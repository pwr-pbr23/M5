/**
*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
* http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel dataformat supercsv
import java beans propertydescriptor
import java io eofexception
import java io ioexception
import java io inputstream
import java io inputstreamreader
import java io outputstream
import java io outputstreamwriter
import java util arraylist
import java util list
import java util map
import java util set
import org apache camel exchange
import org apache camel spi dataformat
import org springframework beans beanutils
import org supercsv io csvbeanwriter
import org supercsv io csvmapreader
import org supercsv io csvmapwriter
import org supercsv io icsvbeanwriter
import org supercsv io icsvmapreader
import org supercsv io icsvmapwriter
import org supercsv prefs csvpreference
/**
* @version $revision$
*/
public class csvdataformat implements dataformat
private csvpreference preference   csvpreference standard_preference
public void marshal exchange exchange  object object  outputstream outputstream  throws exception
outputstreamwriter out   new outputstreamwriter outputstream
if  object instanceof map
icsvmapwriter writer   new csvmapwriter out  preference
map<string  ? extends object> map    map<string  ? extends object>  object
set<string> keys   map keyset
string headers   new string
keys toarray headers
writer writeheader headers
writer write map  headers
else if  object    null
icsvbeanwriter writer   new csvbeanwriter out  preference
propertydescriptor properties   beanutils getpropertydescriptors object getclass
int size   properties length
string headers   new string
for  int i   0  i < size  i
headers   properties getname
writer writeheader headers
writer write object  headers
out close
public object unmarshal exchange exchange  inputstream inputstream  throws exception
icsvmapreader reader   new csvmapreader new inputstreamreader inputstream   preference
string headers   reader getcsvheader true
list<map<string  string>> list   new arraylist<map<string  string>>
try
while  true
map<string  string> map   reader read headers
if  map    null
break
else
list add map
catch  eofexception e
// ignore exception
catch  ioexception e
throw e
if  list size      1
return list get 0
else
return list
public csvpreference getpreference
return preference
public void setpreference csvpreference preference
this preference   preference