/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component file remote
import java io bytearrayoutputstream
import java io ioexception
import java util concurrent scheduledexecutorservice
import org apache camel processor
import org apache camel runtimecamelexception
import org apache camel component file filecomponent
import org apache commons logging log
import org apache commons logging logfactory
import org apache commons net ftp ftpclient
import org apache commons net ftp ftpconnectionclosedexception
import org apache commons net ftp ftpfile
public class ftpconsumer extends remotefileconsumer<remotefileexchange>
private static final transient log log   logfactory getlog ftpconsumer class
private ftpendpoint endpoint
private long lastpolltime
private ftpclient client
private boolean recursive   true
private string regexpattern
private boolean setnames   true
public ftpconsumer ftpendpoint endpoint  processor processor  ftpclient client
super endpoint  processor
this endpoint   endpoint
this client   client
public ftpconsumer ftpendpoint endpoint  processor processor  ftpclient client  scheduledexecutorservice executor
super endpoint  processor  executor
this endpoint   endpoint
this client   client
protected void connectifnecessary   throws ioexception
// todo: is there a way to avoid copy-pasting the reconnect logic?
if   client isconnected
log warn
endpoint connect client
log info     endpoint getconfiguration
protected void disconnect   throws ioexception
log info
endpoint disconnect client
protected void poll   throws exception
connectifnecessary
// if the attempt to connect isn't successful, then the thrown
// exception will signify that we couldn't poll
try
final string filename   endpoint getconfiguration   getfile
if  endpoint getconfiguration   isdirectory
polldirectory filename
else
client changeworkingdirectory filename substring 0  filename lastindexof
final ftpfile files   client listfiles filename substring filename lastindexof      1
pollfile files
lastpolltime   system currenttimemillis
catch  ftpconnectionclosedexception e
// if the server disconnected us, then we must manually disconnect
// the client before attempting to reconnect
log warn     e tostring
disconnect
// rethrow to signify that we didn't poll
throw e
catch  runtimecamelexception e
log warn     e tostring
log warn
disconnect
// rethrow to signify that we didn't poll
throw e
protected void polldirectory string dir  throws exception
client changeworkingdirectory dir
for  ftpfile ftpfile   client listfiles
if  ftpfile isfile
pollfile ftpfile
else if  ftpfile isdirectory
if  isrecursive
polldirectory getfullfilename ftpfile
else
// todo: type can be symbolic link etc. so what should we do?
log warn     ftpfile
protected string getfullfilename ftpfile ftpfile  throws ioexception
return client printworkingdirectory         ftpfile getname
private void pollfile ftpfile ftpfile  throws exception
// todo do we need to adjust the tz? can we?
if  ftpfile gettimestamp   gettimeinmillis   > lastpolltime
if  ismatched ftpfile
string fullfilename   getfullfilename ftpfile
final bytearrayoutputstream bytearrayoutputstream   new bytearrayoutputstream
client retrievefile ftpfile getname    bytearrayoutputstream
remotefileexchange exchange   endpoint createexchange fullfilename  bytearrayoutputstream
if  issetnames
// set the filename in the special header filename marker to the ftp filename
string ftpbasepath   endpoint getconfiguration   getfile
string relativepath   fullfilename substring ftpbasepath length     1
relativepath   relativepath replacefirst
if  log isdebugenabled
log debug     relativepath
exchange getin   setheader filecomponent header_file_name  relativepath
getprocessor   process exchange
protected boolean ismatched ftpfile file
boolean result   true
if  regexpattern    null    regexpattern length   > 0
result   file getname   matches regexpattern
return result
public boolean isrecursive
return recursive
public void setrecursive boolean recursive
this recursive   recursive
public long getlastpolltime
return lastpolltime
public void setlastpolltime long lastpolltime
this lastpolltime   lastpolltime
public string getregexpattern
return regexpattern
public void setregexpattern string regexpattern
this regexpattern   regexpattern
public boolean issetnames
return setnames
public void setsetnames boolean setnames
this setnames   setnames