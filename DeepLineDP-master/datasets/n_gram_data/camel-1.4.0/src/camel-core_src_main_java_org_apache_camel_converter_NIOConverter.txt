/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel converter
import java io bufferedinputstream
import java io file
import java io fileinputstream
import java io ioexception
import java io inputstream
import java nio bytebuffer
import org apache camel converter
import org apache commons logging log
import org apache commons logging logfactory
/**
* some core java.nio based
* <a href="http://activemq.apache.org/camel/type-converter.html">type converters</a>
*
* @version $revision$
*/
@converter
public final class nioconverter
private static final transient log log   logfactory getlog nioconverter class
/**
* utility classes should not have a public constructor.
*/
private nioconverter
@converter
public static byte tobytearray bytebuffer buffer
return buffer array
@converter
public static string tostring bytebuffer buffer
return ioconverter tostring buffer array
@converter
public static bytebuffer tobytebuffer byte data
return bytebuffer wrap data
@converter
public static bytebuffer tobytebuffer file file  throws ioexception
inputstream in   null
try
byte buf   new byte
in   new bufferedinputstream new fileinputstream file
int sizeleft    int file length
int offset   0
while  sizeleft > 0
int readsize   in read buf  offset  sizeleft
sizeleft    readsize
offset    readsize
return bytebuffer wrap buf
finally
try
if  in    null
in close
catch  ioexception e
log warn     file getpath    e
@converter
public static bytebuffer tobytebuffer string value
bytebuffer buf   bytebuffer allocate value length
byte bytes   value getbytes
buf put bytes
return buf
@converter
public static bytebuffer tobytebuffer short value
bytebuffer buf   bytebuffer allocate 2
buf putshort value
return buf
@converter
public static bytebuffer tobytebuffer integer value
bytebuffer buf   bytebuffer allocate 4
buf putint value
return buf
@converter
public static bytebuffer tobytebuffer long value
bytebuffer buf   bytebuffer allocate 8
buf putlong value
return buf
@converter
public static bytebuffer tobytebuffer float value
bytebuffer buf   bytebuffer allocate 4
buf putfloat value
return buf
@converter
public static bytebuffer tobytebuffer double value
bytebuffer buf   bytebuffer allocate 8
buf putdouble value
return buf
@converter
public static inputstream toinputstream bytebuffer bufferbuffer
return ioconverter toinputstream tobytearray bufferbuffer