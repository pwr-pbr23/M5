/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel
/**
* a more complex version of {@link processor} which supports asynchronous
* processing of the {@link exchange}.  any processor can be coerced to
* have an {@link asyncprocessor} interface by using the
* {@link org.apache.camel.impl.converter.asyncprocessortypeconverter#convert asyncprocessortypeconverter.covert}
* method.
*
* @version $revision$
*/
public interface asyncprocessor extends processor
/**
* processes the message exchange.  similar to {@link processor#process}, but
* the caller supports having the exchange asynchronously processed.
*
* @param exchange the {@link exchange} to process
* @param  callback the {@link asynccallback} will be invoked when the processing
*         of the exchange is completed. if the exchange is completed synchronously, then the
*         callback is also invoked synchronously.  the callback should therefore be careful of
*         starting recursive loop.
*
* @return true if the processing was completed synchronously.
*/
boolean process exchange exchange  asynccallback callback