/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import java util arraylist
import java util list
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlelementref
import javax xml bind annotation xmltype
import org apache commons logging log
import org apache commons logging logfactory
/**
* a useful base class for output types
*
* @version $revision$
*/
@xmltype name
@xmlaccessortype xmlaccesstype field
public class outputtype<type extends processortype> extends processortype<type>
private static final transient log log   logfactory getlog outputtype class
@xmlelementref
protected list<processortype<?>> outputs   new arraylist<processortype<?>>
public list<processortype<?>> getoutputs
return outputs
}
public void setoutputs list<processortype<?>> outputs
this outputs   outputs
if  outputs    null
for  processortype output   outputs
configurechild output
}
}
}
@override
protected void configurechild processortype output
super configurechild output
if  isinheriterrorhandler
output seterrorhandlerbuilder geterrorhandlerbuilder
}
// don't inherit interceptors by default
/*
list<interceptortype> list = output.getinterceptors();
if (list == null) {
log.warn("no interceptor collection: " + output);
}
else {
list.addall(getinterceptors());
}
*/
}
}