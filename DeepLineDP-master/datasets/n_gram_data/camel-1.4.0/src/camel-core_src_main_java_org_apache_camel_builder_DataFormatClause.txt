/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel builder
import org apache camel model processortype
import org apache camel model dataformat artixdscontenttype
import org apache camel model dataformat artixdsdataformat
import org apache camel model dataformat csvdataformat
import org apache camel model dataformat dataformattype
import org apache camel model dataformat jaxbdataformat
import org apache camel model dataformat serializationdataformat
import org apache camel model dataformat stringdataformat
import org apache camel model dataformat xmlbeansdataformat
import org apache camel model dataformat xstreamdataformat
import org apache camel spi dataformat
/**
* an expression for constructing the different possible {@link dataformat}
* options.
*
* @version $revision$
*/
public class dataformatclause<t extends processortype>
private final t processortype
private final operation operation
/**
* {@link dataformat} operations.
*/
public enum operation
marshal  unmarshal
public dataformatclause t processortype  operation operation
this processortype   processortype
this operation   operation
/**
* uses the
* <a href="http://activemq.apache.org/camel/artix-data-services.html">artix data services</a>
* data format for dealing with lots of different message formats such as swift etc.
*/
public t artixds
return dataformat new artixdsdataformat
/**
* uses the
* <a href="http://activemq.apache.org/camel/artix-data-services.html">artix data services</a>
* data format with the specified type of complexdataobject
* for marshalling and unmarshalling messages using the dataobject's default source and sink.
*/
public t artixds class<?> dataobjecttype
return dataformat new artixdsdataformat dataobjecttype
/**
* uses the
* <a href="http://activemq.apache.org/camel/artix-data-services.html">artix data services</a>
* data format with the specified type of complexdataobject
* for marshalling and unmarshalling messages using the dataobject's default source and sink.
*/
public t artixds class<?> elementtype  artixdscontenttype contenttype
return dataformat new artixdsdataformat elementtype  contenttype
/**
* uses the
* <a href="http://activemq.apache.org/camel/artix-data-services.html">artix data services</a>
* data format with the specified content type
* for marshalling and unmarshalling messages
*/
public t artixds artixdscontenttype contenttype
return dataformat new artixdsdataformat contenttype
/**
* uses the csv data format
*/
public t csv
return dataformat new csvdataformat
/**
* uses the jaxb data format
*/
public t jaxb
return dataformat new jaxbdataformat
/**
* uses the jaxb data format turning pretty printing on or off
*/
public t jaxb boolean prettyprint
return dataformat new jaxbdataformat prettyprint
/**
* uses the java serialization data format
*/
public t serialization
return dataformat new serializationdataformat
/**
* uses the string data format
*/
public t string
return string null
/**
* uses the string data format supporting encoding using given charset
*/
public t string string charset
stringdataformat sdf   new stringdataformat
sdf setcharset charset
return dataformat sdf
/**
* uses the jaxb data format
*/
public t xmlbeans
return dataformat new xmlbeansdataformat
/**
* uses the xstream data format
*/
public t xstream
return dataformat new xstreamdataformat
private t dataformat dataformattype dataformattype
switch  operation
case unmarshal
return  t processortype unmarshal dataformattype
case marshal
return  t processortype marshal dataformattype
default
throw new illegalargumentexception     operation