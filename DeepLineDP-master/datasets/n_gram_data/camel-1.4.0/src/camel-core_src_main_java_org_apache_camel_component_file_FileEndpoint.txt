/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component file
import java io file
import java io ioexception
import java lang reflect method
import java util properties
import org apache camel consumer
import org apache camel exchangepattern
import org apache camel message
import org apache camel processor
import org apache camel producer
import org apache camel component file strategy fileprocessstrategysupport
import org apache camel impl scheduledpollendpoint
import org apache camel util factoryfinder
import org apache camel util objecthelper
import org apache camel util uuidgenerator
import org apache commons logging log
import org apache commons logging logfactory
/**
* a <a href="http://activemq.apache.org/camel/file.html">file endpoint</a> for
* working with file systems
*
* @version $revision$
*/
public class fileendpoint extends scheduledpollendpoint<fileexchange>
private static final transient log log   logfactory getlog fileendpoint class
private static final string default_strategyfactory_class
private file file
private fileprocessstrategy fileprocessstrategy
private boolean autocreate   true
private boolean lock   true
private boolean delete
private boolean noop
private boolean append   true
private string movenameprefix
private string movenamepostfix
private string excludednameprefixes
private string excludednamepostfixes    fileprocessstrategysupport default_lock_file_postfix
private int buffersize   128   1024
private boolean ignorefilenameheader
protected fileendpoint file file  string endpointuri  filecomponent component
super endpointuri  component
this file   file
public fileendpoint string endpointuri  file file
super endpointuri
this file   file
public fileendpoint file file
this file   file
public fileendpoint
public producer<fileexchange> createproducer   throws exception
producer<fileexchange> result   new fileproducer this
return result
public consumer<fileexchange> createconsumer processor processor  throws exception
consumer<fileexchange> result   new fileconsumer this  processor
configureconsumer result
return result
/**
* create a new exchange for communicating with this endpoint
*
* @param file  the file
* @return the created exchange
*/
public fileexchange createexchange file file
return new fileexchange getcamelcontext    getexchangepattern    file
@override
public fileexchange createexchange
return createexchange getfile
@override
public fileexchange createexchange exchangepattern pattern
return new fileexchange getcamelcontext    pattern  file
/**
* return the file name that will be auto-generated for the given message if none is provided
*/
public string getgeneratedfilename message message
return getfilefriendlymessageid message getmessageid
/**
* configures the given message with the file which sets the body to the file object
* and sets the {@link filecomponent#header_file_name} header.
*/
public void configuremessage file file  message message
message setbody file
string relativepath   file getpath   substring getfile   getpath   length
if  relativepath startswith file separator     relativepath startswith
relativepath   relativepath substring 1
message setheader filecomponent header_file_name  relativepath
public file getfile
objecthelper notnull file
if  autocreate     file exists
file mkdirs
return file
public void setfile file file
this file   file
public boolean issingleton
return true
public boolean isautocreate
return this autocreate
public void setautocreate boolean autocreate
this autocreate   autocreate
public fileprocessstrategy getfilestrategy
if  fileprocessstrategy    null
fileprocessstrategy   createfilestrategy
log debug     fileprocessstrategy
return fileprocessstrategy
/**
* sets the strategy to be used when the file has been processed such as
* deleting or renaming it etc.
*
* @param fileprocessstrategy the new strategy to use
*/
public void setfilestrategy fileprocessstrategy fileprocessstrategy
this fileprocessstrategy   fileprocessstrategy
public boolean isdelete
return delete
public void setdelete boolean delete
this delete   delete
public boolean islock
return lock
public void setlock boolean lock
this lock   lock
public string getmovenamepostfix
return movenamepostfix
/**
* sets the name postfix appended to moved files. for example to rename all
* the files from <tt>*</tt> to <tt>*.done</tt> set this value to <tt>.done</tt>
*/
public void setmovenamepostfix string movenamepostfix
this movenamepostfix   movenamepostfix
public string getmovenameprefix
return movenameprefix
/**
* sets the name prefix appended to moved files. for example to move
* processed files into a hidden directory called <tt>.camel</tt> set this value to
* <tt>.camel/</tt>
*/
public void setmovenameprefix string movenameprefix
this movenameprefix   movenameprefix
public string getexcludednameprefixes
return excludednameprefixes
/**
* sets the excluded file name prefixes, such as <tt>"."</tt> for hidden files which
* are excluded by default
*/
public void setexcludednameprefixes string excludednameprefixes
this excludednameprefixes   excludednameprefixes
public string getexcludednamepostfixes
return excludednamepostfixes
/**
* sets the excluded file name postfixes, such as {@link fileprocessstrategysupport#default_lock_file_postfix}
* to ignore lock files by default.
*/
public void setexcludednamepostfixes string excludednamepostfixes
this excludednamepostfixes   excludednamepostfixes
public boolean isnoop
return noop
/**
* if set to true then the default {@link fileprocessstrategy} will be to use the
* {@link org.apache.camel.component.file.strategy.noopfileprocessstrategy noopfileprocessstrategy}
* to not move or copy processed files
*/
public void setnoop boolean noop
this noop   noop
public boolean isappend
return append
/**
* when writing do we append to the end of the file, or replace it?
* the default is to append
*/
public void setappend boolean append
this append   append
public int getbuffersize
return buffersize
/**
* sets the buffer size used to read/write files
*/
public void setbuffersize int buffersize
this buffersize   buffersize
public boolean isignorefilenameheader
return ignorefilenameheader
/**
* if this flag is enabled then producers will ignore the {@link filecomponent#header_file_name}
* header and generate a new dynamic file
*/
public void setignorefilenameheader boolean ignorefilenameheader
this ignorefilenameheader   ignorefilenameheader
/**
* a strategy method to lazily create the file strategy
*/
protected fileprocessstrategy createfilestrategy
class<?> factory   null
try
factoryfinder finder   new factoryfinder
factory   finder findclass
catch  classnotfoundexception e
log debug    e
catch  ioexception e
log debug    e
if  factory    null
// use default
factory   objecthelper loadclass default_strategyfactory_class
if  factory    null
throw new typenotpresentexception    null
try
method factorymethod   factory getmethod    properties class
return  fileprocessstrategy  objecthelper invokemethod factorymethod  null  getparamsasproperties
catch  nosuchmethodexception e
throw new typenotpresentexception factory getsimplename
e
protected properties getparamsasproperties
properties params   new properties
if  isnoop
params setproperty    boolean tostring true
if  isdelete
params setproperty    boolean tostring true
if  isappend
params setproperty    boolean tostring true
if  islock
params setproperty    boolean tostring true
if  movenameprefix    null
params setproperty    movenameprefix
if  movenamepostfix    null
params setproperty    movenamepostfix
return params
@override
protected string createendpointuri
return     getfile   getabsolutepath
protected  string getfilefriendlymessageid string id
return uuidgenerator generatesanitizedid id