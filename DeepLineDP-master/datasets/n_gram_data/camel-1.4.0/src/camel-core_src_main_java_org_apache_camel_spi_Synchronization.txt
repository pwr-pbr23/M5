/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel spi
import org apache camel component
import org apache camel exchange
import org apache camel processor
/**
* provides a hook for custom {@link processor} or {@link component} instances to respond to
* completed or failed processing of an {@link exchange} rather like spring's
* <a href="http://static.springframework.org/spring/docs/2.0.x/api/org/springframework/transaction/support/transactionsynchronization.html">transactionsynchronization</a>
*
* @version $revision$
*/
public interface synchronization
/**
* called when the processing of the message exchange is complete
*
* @param exchange the excahnge being processed
*/
void oncomplete exchange exchange
/**
* called when the processing of the message exchange has failed for some reason.
* the exception which caused the problem is in {@link exchange#getexception()} and
* there could be a fault message via {@link exchange#getfault()}
*
* @param exchange the excahnge being processed
*/
void onfailure exchange exchange