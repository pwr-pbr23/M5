/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component atom
import java util date
import org apache abdera model entry
import org apache abdera model feed
import org apache camel consumer
import org apache camel exchange
import org apache camel processor
import org apache camel producer
import org apache camel impl defaultpollingendpoint
import org apache camel util objecthelper
/**
* an <a href="http://activemq.apache.org/camel/atom.html">atom endpoint</a>.
*
* @version $revision$
*/
public class atomendpoint extends defaultpollingendpoint<exchange>
/**
* header key for the {@link org.apache.abdera.model.feed} object is stored on the in message on the exchange.
*/
public static final string header_atom_feed
private string atomuri
private boolean splitentries   true
private date lastupdate
private boolean filter   true
public atomendpoint string endpointuri  atomcomponent component  string atomuri
super endpointuri  component
this atomuri   atomuri
objecthelper notnull atomuri
public atomendpoint string endpointuri  string atomuri
this endpointuri
this atomuri   atomuri
objecthelper notnull atomuri
public atomendpoint string endpointuri
super endpointuri
public boolean issingleton
return true
public producer<exchange> createproducer   throws exception
throw new unsupportedoperationexception
public consumer<exchange> createconsumer processor processor  throws exception
atomconsumersupport answer
if  issplitentries
answer   new atomentrypollingconsumer this  processor  filter  lastupdate
else
answer   new atompollingconsumer this  processor
// scheduledpollconsumer default delay is 500 millis and that is too often for polling a feed,
// so we override with a new default value. end user can override this value by providing a consumer.delay parameter
answer setdelay atomconsumersupport default_consumer_delay
configureconsumer answer
return answer
/**
* creates an exchange with the entries as the in body.
*
* @param feed   the atom feed
* @return the created exchange
*/
public exchange createexchange feed feed
exchange exchange   createexchange
exchange getin   setbody feed getentries
exchange getin   setheader header_atom_feed  feed
return exchange
/**
* creates an exchange with the given entry as the in body.
*
* @param feed   the atom feed
* @param entry  the entry as the in body
* @return the created exchange
*/
public exchange createexchange feed feed  entry entry
exchange exchange   createexchange
exchange getin   setbody entry
exchange getin   setheader header_atom_feed  feed
return exchange
// properties
//-------------------------------------------------------------------------
public string getatomuri
return atomuri
public void setatomuri string atomuri
this atomuri   atomuri
public boolean issplitentries
return splitentries
/**
* sets whether or not entries should be sent individually or whether the entire
* feed should be sent as a single message
*/
public void setsplitentries boolean splitentries
this splitentries   splitentries
public date getlastupdate
return lastupdate
/**
* sets the timestamp to be used for filtering entries from the atom feeds.
* this options is only in conjunction with the splitentries.
*/
public void setlastupdate date lastupdate
this lastupdate   lastupdate
public boolean isfilter
return filter
/**
* sets wether to use filtering or not of the entries.
*/
public void setfilter boolean filter
this filter   filter
// implementation methods
//-------------------------------------------------------------------------