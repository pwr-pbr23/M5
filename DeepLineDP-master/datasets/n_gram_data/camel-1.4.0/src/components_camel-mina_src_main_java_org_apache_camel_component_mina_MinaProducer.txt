/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component mina
import java net socketaddress
import java util concurrent countdownlatch
import java util concurrent timeunit
import org apache camel camelexception
import org apache camel exchange
import org apache camel exchangetimedoutexception
import org apache camel producer
import org apache camel impl defaultproducer
import org apache camel util exchangehelper
import org apache commons logging log
import org apache commons logging logfactory
import org apache mina common connectfuture
import org apache mina common ioconnector
import org apache mina common iohandler
import org apache mina common iohandleradapter
import org apache mina common iosession
import org apache mina transport socket nio socketconnector
/**
* a {@link producer} implementation for mina
*
* @version $revision$
*/
public class minaproducer extends defaultproducer
private static final transient log log   logfactory getlog minaproducer class
private iosession session
private minaendpoint endpoint
private countdownlatch latch
private boolean lazysessioncreation
private long timeout
private ioconnector connector
private boolean sync
@suppresswarnings
public minaproducer minaendpoint endpoint
super endpoint
this endpoint   endpoint
this lazysessioncreation   this endpoint islazysessioncreation
this timeout   this endpoint gettimeout
public void process exchange exchange  throws exception
if  session    null     lazysessioncreation
throw new illegalstateexception
if  session    null     session isconnected
openconnection
object body   minapayloadhelper getin endpoint  exchange
if  body    null
log warn     exchange
return     exit early since nothing to write
// if sync is true then we should also wait for a response (synchronous mode)
sync   exchangehelper isoutcapable exchange
if  sync
// only initialize latch if we should get a response
latch   new countdownlatch 1
// write the body
if  log isdebugenabled
log debug     body
minahelper writebody session  body  exchange
if  sync
// wait for response, consider timeout
log debug
latch await timeout  timeunit milliseconds
if  latch getcount      1
throw new exchangetimedoutexception exchange  timeout
// did we get a response
responsehandler handler    responsehandler  session gethandler
if  handler getcause      null
throw new camelexception    handler getcause
else
minapayloadhelper setout exchange  handler getmessage
@override
protected void dostart   throws exception
super dostart
if   lazysessioncreation
openconnection
@override
protected void dostop   throws exception
if  log isdebugenabled
log debug     connector       endpoint getaddress
if  connector instanceof socketconnector
// change the worker timeout to 0 second to make the i/o thread quit soon when there's no connection to manage.
// default worker timeout is 60 sec and therefore the client using minaproducer can not terminate the jvm
// asap but must wait for the timeout to happend, so to speed this up we set the timeout to 0.
if  log isdebugenabled
log debug
socketconnector  connector  setworkertimeout 0
if  session    null
session close
super dostop
private void openconnection
socketaddress address   endpoint getaddress
connector   endpoint getconnector
if  log isdebugenabled
log debug     address       connector       timeout
iohandler iohandler   new responsehandler endpoint
// connect and wait until the connection is established
connectfuture future   connector connect address  iohandler  endpoint getconnectorconfig
future join
session   future getsession
/**
* handles response from session writes
*
* @author <a href="mailto:karajdaar@gmail.com">nsandhu</a>
*/
private final class responsehandler extends iohandleradapter
private minaendpoint endpoint
private object message
private throwable cause
private responsehandler minaendpoint endpoint
this endpoint   endpoint
@override
public void messagereceived iosession iosession  object message  throws exception
if  log isdebugenabled
log debug     message
cause   null
this message   message
countdown
protected void countdown
countdownlatch downlatch   latch
if  downlatch    null
downlatch countdown
@override
public void sessionclosed iosession session  throws exception
if  sync    message    null
// sync=true (inout mode) so we expected a message as reply but did not get one before the session is closed
if  log isdebugenabled
log debug     this endpoint getaddress
// session was closed but no message received. this could be because the remote server had an internal error
// and could not return a response. we should count down to stop waiting for a response
countdown
@override
public void exceptioncaught iosession iosession  throwable cause
log error     this endpoint getaddress
this endpoint getconnector    cause
this message   null
this cause   cause
if  iosession    null
iosession close
public throwable getcause
return this cause
public object getmessage
return this message