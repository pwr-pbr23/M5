/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component jhc
import java io ioexception
import java net socketaddress
import java nio channels cancelledkeyexception
import java nio channels selectionkey
import java nio channels serversocketchannel
import java nio channels socketchannel
import java util iterator
import java util set
import org apache http impl nio reactor abstractmultiworkerioreactor
import org apache http impl nio reactor channelentry
import org apache http nio reactor ioreactorexception
import org apache http nio reactor listeningioreactor
import org apache http params httpparams
import org apache http util concurrent threadfactory
/**
* trunk version of defaultlistenerioreactor.
* should be removed when upgrading to httpcore > alpha5
*/
public class defaultlisteningioreactor extends abstractmultiworkerioreactor
implements listeningioreactor
private volatile boolean closed
private final httpparams params
public defaultlisteningioreactor
int workercount
final threadfactory threadfactory
final httpparams params  throws ioreactorexception
super workercount  threadfactory  params
this params   params
public defaultlisteningioreactor
int workercount
final httpparams params  throws ioreactorexception
this workercount  null  params
private void processevents final set selectedkeys  throws ioreactorexception
for  iterator it   selectedkeys iterator    it hasnext
selectionkey key    selectionkey it next
processevent key
selectedkeys clear
private void processevent final selectionkey key  throws ioreactorexception
try
if  key isacceptable
serversocketchannel serverchannel    serversocketchannel key channel
socketchannel socketchannel   null
try
socketchannel   serverchannel accept
catch  ioexception ex
if  this exceptionhandler    null     this exceptionhandler handle ex
throw new ioreactorexception    ex
if  socketchannel    null
try
preparesocket socketchannel socket
catch  ioexception ex
if  this exceptionhandler    null     this exceptionhandler handle ex
throw new ioreactorexception    ex
channelentry entry   new channelentry socketchannel
addchannel entry
catch  cancelledkeyexception ex
key attach null
public socketaddress listen
final socketaddress address  throws ioexception
if  this closed
throw new illegalstateexception
serversocketchannel serverchannel   serversocketchannel open
serverchannel configureblocking false
serverchannel socket   bind address
selectionkey key   serverchannel register this selector  selectionkey op_accept
key attach null
return serverchannel socket   getlocalsocketaddress
@override
protected void processevents int count  throws ioreactorexception
processevents this selector selectedkeys