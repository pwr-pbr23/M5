/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel builder
import org apache camel exchange
import org apache camel expression
import org apache camel predicate
import static org apache camel util objecthelper notnull
/**
* a useful base class for {@link predicate} implementations
*
* @version $revision$
*/
public abstract class binarypredicatesupport<e extends exchange> implements predicate<e>
private final expression<e> left
private final expression<e> right
protected binarypredicatesupport expression<e> left  expression<e> right
notnull left
notnull right
this left   left
this right   right
@override
public string tostring
return left       getoperationtext         right
public boolean matches e exchange
object leftvalue   left evaluate exchange
object rightvalue   right evaluate exchange
return matches exchange  leftvalue  rightvalue
public void assertmatches string text  e exchange
object leftvalue   left evaluate exchange
object rightvalue   right evaluate exchange
if   matches exchange  leftvalue  rightvalue
throw new assertionerror text   assertionfailuremessage exchange  leftvalue  rightvalue
protected abstract boolean matches e exchange  object leftvalue  object rightvalue
protected abstract string getoperationtext
protected string assertionfailuremessage e exchange  object leftvalue  object rightvalue
return this       exchange       leftvalue
rightvalue