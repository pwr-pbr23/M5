/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel model
import java util arraylist
import java util collection
import java util list
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmlattribute
import javax xml bind annotation xmlelementref
import javax xml bind annotation xmlrootelement
import javax xml bind annotation xmltransient
import javax xml bind annotation xmltype
import org apache camel camelcontext
import org apache camel camelcontextaware
import org apache camel endpoint
import org apache camel nosuchendpointexception
import org apache camel route
import org apache camel builder errorhandlerbuilder
import org apache camel impl defaultcamelcontext
import org apache camel impl defaultroutecontext
import org apache camel processor interceptor streamcachinginterceptor
import org apache camel spi routecontext
import org apache camel util camelcontexthelper
import org apache commons logging log
import org apache commons logging logfactory
/**
* represents an xml &lt;route/&gt; element
*
* @version $revision$
*/
@xmlrootelement name
@xmltype proporder
@xmlaccessortype xmlaccesstype property
public class routetype extends processortype<processortype> implements camelcontextaware
private static final transient log log   logfactory getlog routetype class
private list<interceptortype> interceptors   new arraylist<interceptortype>
private list<fromtype> inputs   new arraylist<fromtype>
private list<processortype<?>> outputs   new arraylist<processortype<?>>
private string group
private camelcontext camelcontext
private boolean streamcaching
public routetype
}
public routetype string uri
from uri
}
public routetype endpoint endpoint
from endpoint
}
@override
public string tostring
return     inputs       outputs
}
public void addroutes camelcontext context  collection<route> routes  throws exception
setcamelcontext context
if  context instanceof defaultcamelcontext
defaultcamelcontext defaultcamelcontext    defaultcamelcontext  context
errorhandlerbuilder handler   defaultcamelcontext geterrorhandlerbuilder
if  handler    null
seterrorhandlerbuilderifnull handler
}
}
for  fromtype fromtype   inputs
addroutes routes  fromtype
}
}
public endpoint resolveendpoint string uri  throws nosuchendpointexception
camelcontext context   getcamelcontext
if  context    null
throw new illegalargumentexception
}
return camelcontexthelper getmandatoryendpoint context  uri
}
// fluent api
// -----------------------------------------------------------------------
/**
* creates an input to the route
*/
public routetype from string uri
getinputs   add new fromtype uri
return this
}
/**
* creates an input to the route
*/
public routetype from endpoint endpoint
getinputs   add new fromtype endpoint
return this
}
/**
* set the group name for this route
*/
public routetype group string name
setgroup name
return this
}
// properties
// -----------------------------------------------------------------------
public list<interceptortype> getinterceptors
return interceptors
}
@xmltransient
public void setinterceptors list<interceptortype> interceptors
this interceptors   interceptors
}
public list<fromtype> getinputs
return inputs
}
@xmlelementref
public void setinputs list<fromtype> inputs
this inputs   inputs
}
public list<processortype<?>> getoutputs
return outputs
}
@xmlelementref
public void setoutputs list<processortype<?>> outputs
this outputs   outputs
// todo i don't think this is called when using jaxb!
if  outputs    null
for  processortype output   outputs
configurechild output
}
}
}
public camelcontext getcamelcontext
return camelcontext
}
@xmltransient
public void setcamelcontext camelcontext camelcontext
this camelcontext   camelcontext
}
/**
* the group that this route belongs to; could be the name of the routebuilder class
* or be explicitly configured in the xml.
*
* may be null.
*/
public string getgroup
return group
}
@xmlattribute
public void setgroup string group
this group   group
}
public boolean getstreamcaching
return streamcaching
}
/**
* enable stream caching on this route
* @param streamcaching <code>true</code> for enabling stream caching
*/
@xmlattribute required   false
public void setstreamcaching boolean streamcaching
this streamcaching   streamcaching
if  streamcaching    null    streamcaching
streamcaching
} else {
nostreamcaching
}
}
// implementation methods
// -------------------------------------------------------------------------
protected void addroutes collection<route> routes  fromtype fromtype  throws exception
routecontext routecontext   new defaultroutecontext this  fromtype  routes
routecontext getendpoint       force endpoint resolution
if  camelcontext    null
camelcontext getlifecyclestrategy   onroutecontextcreate routecontext
}
list<processortype<?>> list   new arraylist<processortype<?>> outputs
for  processortype output   list
output addroutes routecontext  routes
}
routecontext commit
}
@override
protected void configurechild processortype output
super configurechild output
if  isinheriterrorhandler
output seterrorhandlerbuilder geterrorhandlerbuilder
}
list<interceptortype> interceptors   getinterceptors
for  interceptortype interceptor   interceptors
output addinterceptor interceptor
}
/*
list<interceptortype> list = output.getinterceptors();
if (list == null) {
log.warn("no interceptor collection: " + output);
} else {
list.addall(getinterceptors());
}
*/
}
/**
* disable stream caching for this route.
*/
public routetype nostreamcaching
streamcachinginterceptor nostreamcaching interceptors
return this
}
/**
* enable stream caching for this route.
*/
public routetype streamcaching
addinterceptor new streamcachinginterceptor
return this
}
@override
public void addinterceptor interceptortype interceptor
getinterceptors   add interceptor
}
}