/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase rest model
import java io ioexception
import java io serializable
import java io stringreader
import java io stringwriter
import java util arraylist
import java util list
import java util map
import java util navigableset
import javax xml bind annotation xmlattribute
import javax xml bind annotation xmlelement
import javax xml bind annotation xmlrootelement
import org apache hadoop hbase hconstants
import org apache hadoop hbase client scan
import org apache hadoop hbase filter
import org apache hadoop hbase filter comparefilter compareop
import org apache hadoop hbase rest protobufmessagehandler
import org apache hadoop hbase rest protobuf generated scannermessage scanner
import org apache hadoop hbase util base64
import org apache hadoop hbase util bytes
import com google protobuf bytestring
import com sun jersey api json jsonconfiguration
import com sun jersey api json jsonjaxbcontext
import com sun jersey api json jsonmarshaller
import com sun jersey api json jsonunmarshaller
/**
* a representation of scanner parameters.
*
* <pre>
* &lt;complextype name="scanner"&gt;
*   &lt;sequence>
*     &lt;element name="column" type="base64binary" minoccurs="0" maxoccurs="unbounded"/&gt;
*   &lt;/sequence&gt;
*   &lt;element name="filter" type="string" minoccurs="0" maxoccurs="1"&gt;&lt;/element&gt;
*   &lt;attribute name="startrow" type="base64binary"&gt;&lt;/attribute&gt;
*   &lt;attribute name="endrow" type="base64binary"&gt;&lt;/attribute&gt;
*   &lt;attribute name="batch" type="int"&gt;&lt;/attribute&gt;
*   &lt;attribute name="starttime" type="int"&gt;&lt;/attribute&gt;
*   &lt;attribute name="endtime" type="int"&gt;&lt;/attribute&gt;
*   &lt;attribute name="maxversions" type="int"&gt;&lt;/attribute&gt;
* &lt;/complextype&gt;
* </pre>
*/
@xmlrootelement name
public class scannermodel implements protobufmessagehandler  serializable
private static final long serialversionuid   1l
private byte startrow   hconstants empty_start_row
private byte endrow   hconstants empty_end_row
private list<byte> columns   new arraylist<byte>
private int batch   integer max_value
private long starttime   0
private long endtime   long max_value
private string filter   null
private int maxversions   integer max_value
@xmlrootelement
static class filtermodel
@xmlrootelement
static class writablebytearraycomparablemodel
@xmlattribute public string type
@xmlattribute public string value
@xmlattribute public string op
static enum comparatortype
binarycomparator
binaryprefixcomparator
bitcomparator
nullcomparator
regexstringcomparator
substringcomparator
public writablebytearraycomparablemodel
public writablebytearraycomparablemodel
writablebytearraycomparable comparator
string typename   comparator getclass   getsimplename
comparatortype type   comparatortype valueof typename
this type   typename
switch  type
case binarycomparator
case binaryprefixcomparator
this value   base64 encodebytes comparator getvalue
break
case bitcomparator
this value   base64 encodebytes comparator getvalue
this op     bitcomparator comparator  getoperator   tostring
break
case nullcomparator
break
case regexstringcomparator
case substringcomparator
this value   bytes tostring comparator getvalue
break
default
throw new runtimeexception     type
public writablebytearraycomparable build
writablebytearraycomparable comparator
switch  comparatortype valueof type
case binarycomparator
comparator   new binarycomparator base64 decode value
break
case binaryprefixcomparator
comparator   new binaryprefixcomparator base64 decode value
break
case bitcomparator
comparator   new bitcomparator base64 decode value
bitcomparator bitwiseop valueof op
break
case nullcomparator
comparator   new nullcomparator
break
case regexstringcomparator
comparator   new regexstringcomparator value
break
case substringcomparator
comparator   new substringcomparator value
break
default
throw new runtimeexception     type
return comparator
// a grab bag of fields, would have been a union if this were c.
// these are null by default and will only be serialized if set (non null).
@xmlattribute public string type
@xmlattribute public string op
@xmlelement writablebytearraycomparablemodel comparator
@xmlattribute public string value
@xmlelement public list<filtermodel> filters
@xmlattribute public integer limit
@xmlattribute public integer offset
@xmlattribute public string family
@xmlattribute public string qualifier
@xmlattribute public boolean ifmissing
@xmlattribute public boolean latestversion
@xmlattribute public string mincolumn
@xmlattribute public boolean mincolumninclusive
@xmlattribute public string maxcolumn
@xmlattribute public boolean maxcolumninclusive
@xmlattribute public boolean dropdependentcolumn
@xmlattribute public float chance
@xmlelement public list<string> prefixes
@xmlelement public list<long> timestamps
static enum filtertype
columncountgetfilter
columnpaginationfilter
columnprefixfilter
columnrangefilter
dependentcolumnfilter
familyfilter
filterlist
firstkeyonlyfilter
inclusivestopfilter
keyonlyfilter
multiplecolumnprefixfilter
pagefilter
prefixfilter
qualifierfilter
randomrowfilter
rowfilter
singlecolumnvalueexcludefilter
singlecolumnvaluefilter
skipfilter
timestampsfilter
valuefilter
whilematchfilter
public filtermodel
public filtermodel filter filter
string typename   filter getclass   getsimplename
filtertype type   filtertype valueof typename
this type   typename
switch  type
case columncountgetfilter
this limit     columncountgetfilter filter  getlimit
break
case columnpaginationfilter
this limit     columnpaginationfilter filter  getlimit
this offset     columnpaginationfilter filter  getoffset
break
case columnprefixfilter
this value   base64 encodebytes   columnprefixfilter filter  getprefix
break
case columnrangefilter
this mincolumn   base64 encodebytes   columnrangefilter filter  getmincolumn
this mincolumninclusive     columnrangefilter filter  getmincolumninclusive
this maxcolumn   base64 encodebytes   columnrangefilter filter  getmaxcolumn
this maxcolumninclusive     columnrangefilter filter  getmaxcolumninclusive
break
case dependentcolumnfilter
dependentcolumnfilter dcf    dependentcolumnfilter filter
this family   base64 encodebytes dcf getfamily
byte qualifier   dcf getqualifier
if  qualifier    null
this qualifier   base64 encodebytes qualifier
this op   dcf getoperator   tostring
this comparator   new writablebytearraycomparablemodel dcf getcomparator
this dropdependentcolumn   dcf dropdependentcolumn
break
case filterlist
this op     filterlist filter  getoperator   tostring
this filters   new arraylist<filtermodel>
for  filter child    filterlist filter  getfilters
this filters add new filtermodel child
break
case firstkeyonlyfilter
case keyonlyfilter
break
case inclusivestopfilter
this value
base64 encodebytes   inclusivestopfilter filter  getstoprowkey
break
case multiplecolumnprefixfilter
this prefixes   new arraylist<string>
for  byte prefix    multiplecolumnprefixfilter filter  getprefix
this prefixes add base64 encodebytes prefix
break
case pagefilter
this value   long tostring   pagefilter filter  getpagesize
break
case prefixfilter
this value   base64 encodebytes   prefixfilter filter  getprefix
break
case familyfilter
case qualifierfilter
case rowfilter
case valuefilter
this op     comparefilter filter  getoperator   tostring
this comparator
new writablebytearraycomparablemodel
comparefilter filter  getcomparator
break
case randomrowfilter
this chance     randomrowfilter filter  getchance
break
case singlecolumnvalueexcludefilter
case singlecolumnvaluefilter
singlecolumnvaluefilter scvf    singlecolumnvaluefilter  filter
this family   base64 encodebytes scvf getfamily
byte qualifier   scvf getqualifier
if  qualifier    null
this qualifier   base64 encodebytes qualifier
this op   scvf getoperator   tostring
this comparator
new writablebytearraycomparablemodel scvf getcomparator
if  scvf getfilterifmissing
this ifmissing   true
if  scvf getlatestversiononly
this latestversion   true
break
case skipfilter
this filters   new arraylist<filtermodel>
this filters add new filtermodel   skipfilter filter  getfilter
break
case timestampsfilter
this timestamps     timestampsfilter filter  gettimestamps
break
case whilematchfilter
this filters   new arraylist<filtermodel>
this filters add
new filtermodel   whilematchfilter filter  getfilter
break
default
throw new runtimeexception     type
public filter build
filter filter
switch  filtertype valueof type
case columncountgetfilter
filter   new columncountgetfilter limit
break
case columnpaginationfilter
filter   new columnpaginationfilter limit  offset
break
case columnprefixfilter
filter   new columnprefixfilter base64 decode value
break
case columnrangefilter
filter   new columnrangefilter base64 decode mincolumn
mincolumninclusive  base64 decode maxcolumn
maxcolumninclusive
break
case dependentcolumnfilter
filter   new dependentcolumnfilter base64 decode family
qualifier    null ? base64 decode qualifier    null
dropdependentcolumn  compareop valueof op   comparator build
break
case familyfilter
filter   new familyfilter compareop valueof op   comparator build
break
case filterlist
list<filter> list   new arraylist<filter>
for  filtermodel model  filters
list add model build
filter   new filterlist filterlist operator valueof op   list
break
case firstkeyonlyfilter
filter   new firstkeyonlyfilter
break
case inclusivestopfilter
filter   new inclusivestopfilter base64 decode value
break
case keyonlyfilter
filter   new keyonlyfilter
break
case multiplecolumnprefixfilter
byte values   new byte
for  int i   0  i < prefixes size    i
values   base64 decode prefixes get i
filter   new multiplecolumnprefixfilter values
break
case pagefilter
filter   new pagefilter long valueof value
break
case prefixfilter
filter   new prefixfilter base64 decode value
break
case qualifierfilter
filter   new qualifierfilter compareop valueof op   comparator build
break
case randomrowfilter
filter   new randomrowfilter chance
break
case rowfilter
filter   new rowfilter compareop valueof op   comparator build
break
case singlecolumnvaluefilter
filter   new singlecolumnvaluefilter base64 decode family
qualifier    null ? base64 decode qualifier    null
compareop valueof op   comparator build
if  ifmissing    null
singlecolumnvaluefilter filter  setfilterifmissing ifmissing
if  latestversion    null
singlecolumnvaluefilter filter  setlatestversiononly latestversion
break
case singlecolumnvalueexcludefilter
filter   new singlecolumnvalueexcludefilter base64 decode family
qualifier    null ? base64 decode qualifier    null
compareop valueof op   comparator build
if  ifmissing    null
singlecolumnvalueexcludefilter filter  setfilterifmissing ifmissing
if  latestversion    null
singlecolumnvalueexcludefilter filter  setlatestversiononly latestversion
break
case skipfilter
filter   new skipfilter filters get 0  build
break
case timestampsfilter
filter   new timestampsfilter timestamps
break
case valuefilter
filter   new valuefilter compareop valueof op   comparator build
break
case whilematchfilter
filter   new whilematchfilter filters get 0  build
break
default
throw new runtimeexception     type
return filter
/**
* @param s the json representation of the filter
* @return the filter
* @throws exception
*/
public static filter buildfilter string s  throws exception
jsonjaxbcontext context
new jsonjaxbcontext jsonconfiguration natural   build
filtermodel class
jsonunmarshaller unmarshaller   context createjsonunmarshaller
filtermodel model   unmarshaller unmarshalfromjson new stringreader s
filtermodel class
return model build
/**
* @param filter the filter
* @return the json representation of the filter
* @throws exception
*/
public static string stringifyfilter final filter filter  throws exception
jsonjaxbcontext context
new jsonjaxbcontext jsonconfiguration natural   build
filtermodel class
jsonmarshaller marshaller   context createjsonmarshaller
stringwriter writer   new stringwriter
marshaller marshalltojson new filtermodel filter   writer
return writer tostring
private static final byte column_divider   bytes tobytes
/**
* @param scan the scan specification
* @throws exception
*/
public static scannermodel fromscan scan scan  throws exception
scannermodel model   new scannermodel
model setstartrow scan getstartrow
model setendrow scan getstoprow
map<byte   navigableset<byte >> families   scan getfamilymap
if  families    null
for  map entry<byte   navigableset<byte >> entry   families entryset
if  entry getvalue      null
for  byte qualifier  entry getvalue
model addcolumn bytes add entry getkey    column_divider  qualifier
else
model addcolumn entry getkey
model setstarttime scan gettimerange   getmin
model setendtime scan gettimerange   getmax
int caching   scan getcaching
if  caching > 0
model setbatch caching
int maxversions   scan getmaxversions
if  maxversions > 0
model setmaxversions maxversions
filter filter   scan getfilter
if  filter    null
model setfilter stringifyfilter filter
return model
/**
* default constructor
*/
public scannermodel
/**
* constructor
* @param startrow the start key of the row-range
* @param endrow the end key of the row-range
* @param columns the columns to scan
* @param batch the number of values to return in batch
* @param endtime the upper bound on timestamps of values of interest
* @param maxversions the maximum number of versions to return
* @param filter a filter specification
* (values with timestamps later than this are excluded)
*/
public scannermodel byte startrow  byte endrow  list<byte> columns
int batch  long endtime  int maxversions  string filter
super
this startrow   startrow
this endrow   endrow
this columns   columns
this batch   batch
this endtime   endtime
this maxversions   maxversions
this filter   filter
/**
* constructor
* @param startrow the start key of the row-range
* @param endrow the end key of the row-range
* @param columns the columns to scan
* @param batch the number of values to return in batch
* @param starttime the lower bound on timestamps of values of interest
* (values with timestamps earlier than this are excluded)
* @param endtime the upper bound on timestamps of values of interest
* (values with timestamps later than this are excluded)
* @param filter a filter specification
*/
public scannermodel byte startrow  byte endrow  list<byte> columns
int batch  long starttime  long endtime  string filter
super
this startrow   startrow
this endrow   endrow
this columns   columns
this batch   batch
this starttime   starttime
this endtime   endtime
this filter   filter
/**
* add a column to the column set
* @param column the column name, as &lt;column&gt;(:&lt;qualifier&gt;)?
*/
public void addcolumn byte column
columns add column
/**
* @return true if a start row was specified
*/
public boolean hasstartrow
return  bytes equals startrow  hconstants empty_start_row
/**
* @return start row
*/
@xmlattribute
public byte getstartrow
return startrow
/**
* @return true if an end row was specified
*/
public boolean hasendrow
return  bytes equals endrow  hconstants empty_end_row
/**
* @return end row
*/
@xmlattribute
public byte getendrow
return endrow
/**
* @return list of columns of interest in column:qualifier format, or empty for all
*/
@xmlelement name
public list<byte> getcolumns
return columns
/**
* @return the number of cells to return in batch
*/
@xmlattribute
public int getbatch
return batch
/**
* @return the lower bound on timestamps of items of interest
*/
@xmlattribute
public long getstarttime
return starttime
/**
* @return the upper bound on timestamps of items of interest
*/
@xmlattribute
public long getendtime
return endtime
/**
* @return maximum number of versions to return
*/
@xmlattribute
public int getmaxversions
return maxversions
/**
* @return the filter specification
*/
@xmlelement
public string getfilter
return filter
/**
* @param startrow start row
*/
public void setstartrow byte startrow
this startrow   startrow
/**
* @param endrow end row
*/
public void setendrow byte endrow
this endrow   endrow
/**
* @param columns list of columns of interest in column:qualifier format, or empty for all
*/
public void setcolumns list<byte> columns
this columns   columns
/**
* @param batch the number of cells to return in batch
*/
public void setbatch int batch
this batch   batch
/**
* @param maxversions maximum number of versions to return
*/
public void setmaxversions int maxversions
this maxversions   maxversions
/**
* @param starttime the lower bound on timestamps of values of interest
*/
public void setstarttime long starttime
this starttime   starttime
/**
* @param endtime the upper bound on timestamps of values of interest
*/
public void setendtime long endtime
this endtime   endtime
/**
* @param filter the filter specification
*/
public void setfilter string filter
this filter   filter
@override
public byte createprotobufoutput
scanner builder builder   scanner newbuilder
if   bytes equals startrow  hconstants empty_start_row
builder setstartrow bytestring copyfrom startrow
if   bytes equals endrow  hconstants empty_start_row
builder setendrow bytestring copyfrom endrow
for  byte column  columns
builder addcolumns bytestring copyfrom column
builder setbatch batch
if  starttime    0
builder setstarttime starttime
if  endtime    0
builder setendtime endtime
builder setbatch getbatch
builder setmaxversions maxversions
if  filter    null
builder setfilter filter
return builder build   tobytearray
@override
public protobufmessagehandler getobjectfrommessage byte message
throws ioexception
scanner builder builder   scanner newbuilder
builder mergefrom message
if  builder hasstartrow
startrow   builder getstartrow   tobytearray
if  builder hasendrow
endrow   builder getendrow   tobytearray
for  bytestring column  builder getcolumnslist
addcolumn column tobytearray
if  builder hasbatch
batch   builder getbatch
if  builder hasstarttime
starttime   builder getstarttime
if  builder hasendtime
endtime   builder getendtime
if  builder hasmaxversions
maxversions   builder getmaxversions
if  builder hasfilter
filter   builder getfilter
return this