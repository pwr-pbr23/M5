/*
* copyright the apache software foundation
*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements. see the notice file distributed with this
* work for additional information regarding copyright ownership. the asf
* licenses this file to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
* http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis, without
* warranties or conditions of any kind, either express or implied. see the
* license for the specific language governing permissions and limitations
* under the license.
*/
package org apache hadoop hbase regionserver metrics
import java util set
import org apache hadoop classification interfaceaudience
import org apache hadoop conf configuration
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase client append
import org apache hadoop hbase client delete
import org apache hadoop hbase client get
import org apache hadoop hbase client htable
import org apache hadoop hbase client increment
import org apache hadoop hbase client put
import org apache hadoop hbase util bytes
/**
* this class provides a simplified interface to expose time varying metrics
* about get/delete/put/icv operations on a region and on column families. all
* metrics are stored in {@link regionmetricsstorage} and exposed to hadoop
* metrics through {@link regionserverdynamicmetrics}.
*/
@interfaceaudience private
public class operationmetrics
private static final string delete_key
private static final string put_key
private static final string get_key
private static final string icv_key
private static final string increment_key
private static final string multiput_key
private static final string append_key
/** conf key controlling whether we should expose metrics.*/
private static final string conf_key
private string tablename   null
private string regionname   null
private string regionmetrixprefix   null
private configuration conf   null
/**
* create a new operationmetrics
* @param conf the configuration of the hregion reporting operations coming in.
* @param regioninfo the region info
*/
public operationmetrics configuration conf  hregioninfo regioninfo
// configure schemametrics before trying to create a regionoperationmetrics instance as
// regionoperationmetrics relies on schemametrics to do naming.
if  conf    null
schemametrics configureglobally conf
this conf   conf
if  regioninfo    null
this tablename   regioninfo gettablenameasstring
this regionname   regioninfo getencodedname
else
this tablename   schemametrics unknown
this regionname   schemametrics unknown
this regionmetrixprefix
schemametrics generateregionmetricsprefix this tablename  this regionname
/**
* this is used in creating a testing hregion where the regioninfo is unknown
* @param conf
*/
public operationmetrics
this null  null
/**
* update the stats associated with {@link htable#put(java.util.list)}.
*
* @param columnfamilies set of cf's this multiput is associated with
* @param value the time
*/
public void updatemultiputmetrics set<byte> columnfamilies  long value
doupdatetimevarying columnfamilies  multiput_key  value
/**
* update the metrics associated with a {@link get}
*
* @param columnfamilies
*          set of column families in this get.
* @param value
*          the time
*/
public void updategetmetrics set<byte> columnfamilies  long value
doupdatetimevarying columnfamilies  get_key  value
/**
* update metrics associated with an {@link increment}
* @param columnfamilies
* @param value
*/
public void updateincrementmetrics set<byte> columnfamilies  long value
doupdatetimevarying columnfamilies  increment_key  value
/**
* update the metrics associated with an {@link append}
* @param columnfamilies
* @param value
*/
public void updateappendmetrics set<byte> columnfamilies  long value
doupdatetimevarying columnfamilies  append_key  value
/**
* update the metrics associated with
* {@link htable#incrementcolumnvalue(byte[], byte[], byte[], long)}
*
* @param columnfamily
*          the single column family associated with an icv
* @param value
*          the time
*/
public void updateincrementcolumnvaluemetrics byte columnfamily  long value
string cfmetricprefix
schemametrics generateschemametricsprefix this tablename  bytes tostring columnfamily
dosafeinctimevarying cfmetricprefix  icv_key  value
dosafeinctimevarying this regionmetrixprefix  icv_key  value
/**
* update metrics associated with a {@link put}
*
* @param columnfamilies
*          set of column families involved.
* @param value
*          the time.
*/
public void updateputmetrics set<byte> columnfamilies  long value
doupdatetimevarying columnfamilies  put_key  value
/**
* update metrics associated with a {@link delete}
*
* @param columnfamilies
* @param value
*          the time.
*/
public void updatedeletemetrics set<byte> columnfamilies  long value
doupdatetimevarying columnfamilies  delete_key  value
/**
* this deletes all old metrics this instance has ever created or updated.
*/
public void closemetrics
regionmetricsstorage clear
/**
* method to send updates for cf and region metrics. this is the normal method
* used if the naming of stats and cf's are in line with put/delete/multiput.
*
* @param columnfamilies
*          the set of column families involved.
* @param key
*          the metric name.
* @param value
*          the time.
*/
private void doupdatetimevarying set<byte> columnfamilies  string key  long value
string cfprefix   null
if  columnfamilies    null
cfprefix   schemametrics generateschemametricsprefix tablename  columnfamilies
else
cfprefix   schemametrics generateschemametricsprefix tablename  schemametrics unknown
dosafeinctimevarying cfprefix  key  value
dosafeinctimevarying this regionmetrixprefix  key  value
private void dosafeinctimevarying string prefix  string key  long value
if  conf getboolean conf_key  true
if  prefix    null     prefix isempty      key    null     key isempty
string m   prefix   key
regionmetricsstorage incrtimevaryingmetric m  value