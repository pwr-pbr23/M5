/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase mapred
import java io ioexception
import java util map
import org apache hadoop conf configured
import org apache hadoop fs path
import org apache hadoop hbase hbaseconfiguration
import org apache hadoop hbase keyvalue
import org apache hadoop hbase io immutablebyteswritable
import org apache hadoop hbase client result
import org apache hadoop mapred fileoutputformat
import org apache hadoop mapred jobclient
import org apache hadoop mapred jobconf
import org apache hadoop mapred outputcollector
import org apache hadoop mapred reporter
import org apache hadoop mapred lib identityreducer
import org apache hadoop util tool
import org apache hadoop util toolrunner
/**
* a job with a map to count rows.
* map outputs table rows if the input row has columns that have content.
* uses an {@link identityreducer}
*/
@deprecated
public class rowcounter extends configured implements tool
// name of this 'program'
static final string name
/**
* mapper that runs the count.
*/
static class rowcountermapper
implements tablemap<immutablebyteswritable  result>
private static enum counters  rows
public void map immutablebyteswritable row  result values
outputcollector<immutablebyteswritable  result> output
reporter reporter
throws ioexception
// count every row containing data, whether it's in qualifiers or values
reporter incrcounter counters rows  1
public void configure jobconf jc
// nothing to do.
public void close   throws ioexception
// nothing to do.
/**
* @param args
* @return the jobconf
* @throws ioexception
*/
public jobconf createsubmittablejob string args  throws ioexception
jobconf c   new jobconf getconf    getclass
c setjobname name
// columns are space delimited
stringbuilder sb   new stringbuilder
final int columnoffset   2
for  int i   columnoffset  i < args length  i
if  i > columnoffset
sb append
sb append args
// second argument is the table name.
tablemapreduceutil inittablemapjob args  sb tostring
rowcountermapper class  immutablebyteswritable class  result class  c
c setnumreducetasks 0
// first arg is the output directory.
fileoutputformat setoutputpath c  new path args
return c
static int printusage
system out println name
return  1
public int run final string args  throws exception
// make sure there are at least 3 parameters
if  args length < 3
system err println     args length
return printusage
jobclient runjob createsubmittablejob args
return 0
/**
* @param args
* @throws exception
*/
public static void main string args  throws exception
int errcode   toolrunner run hbaseconfiguration create    new rowcounter    args
system exit errcode