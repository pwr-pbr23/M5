/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase filter
import org apache hadoop hbase keyvalue
import org apache hadoop hbase util bytes
import java io dataoutput
import java io ioexception
import java io datainput
import java util list
import java util arraylist
import com google common base preconditions
/**
* pass results that have same row prefix.
*/
public class prefixfilter extends filterbase
protected byte  prefix   null
protected boolean passedprefix   false
public prefixfilter final byte  prefix
this prefix   prefix
public prefixfilter
super
public byte getprefix
return prefix
public boolean filterrowkey byte buffer  int offset  int length
if  buffer    null    this prefix    null
return true
if  length < prefix length
return true
// if they are equal, return false => pass row
// else return true, filter row
// if we are passed the prefix, set flag
int cmp   bytes compareto buffer  offset  this prefix length  this prefix  0
this prefix length
if cmp > 0
passedprefix   true
return cmp    0
public boolean filterallremaining
return passedprefix
public static filter createfilterfromarguments arraylist<byte > filterarguments
preconditions checkargument filterarguments size      1
filterarguments size
byte  prefix   parsefilter removequotesfrombytearray filterarguments get 0
return new prefixfilter prefix
public void write dataoutput out  throws ioexception
bytes writebytearray out  this prefix
public void readfields datainput in  throws ioexception
this prefix   bytes readbytearray in
@override
public string tostring
return this getclass   getsimplename         bytes tostringbinary this prefix