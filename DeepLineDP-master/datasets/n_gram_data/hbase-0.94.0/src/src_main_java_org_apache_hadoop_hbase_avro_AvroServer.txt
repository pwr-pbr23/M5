/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase avro
import java io ioexception
import java nio bytebuffer
import java util hashmap
import org apache avro schema
import org apache avro generic genericarray
import org apache avro generic genericdata
import org apache avro ipc httpserver
import org apache avro ipc specific specificresponder
import org apache avro util utf8
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase hbaseconfiguration
import org apache hadoop hbase htabledescriptor
import org apache hadoop hbase masternotrunningexception
import org apache hadoop hbase tableexistsexception
import org apache hadoop hbase tablenotfoundexception
import org apache hadoop hbase avro generated aclusterstatus
import org apache hadoop hbase avro generated adelete
import org apache hadoop hbase avro generated afamilydescriptor
import org apache hadoop hbase avro generated aget
import org apache hadoop hbase avro generated aioerror
import org apache hadoop hbase avro generated aillegalargument
import org apache hadoop hbase avro generated amasternotrunning
import org apache hadoop hbase avro generated aput
import org apache hadoop hbase avro generated aresult
import org apache hadoop hbase avro generated ascan
import org apache hadoop hbase avro generated atabledescriptor
import org apache hadoop hbase avro generated atableexists
import org apache hadoop hbase avro generated hbase
import org apache hadoop hbase client hbaseadmin
import org apache hadoop hbase client htableinterface
import org apache hadoop hbase client htablepool
import org apache hadoop hbase client resultscanner
import org apache hadoop hbase client scan
import org apache hadoop hbase util bytes
/**
* start an avro server
*/
public class avroserver
/**
* the hbaseimpl is a glue object that connects avro rpc calls to the
* hbase client api primarily defined in the hbaseadmin and htable objects.
*/
public static class hbaseimpl implements hbase
//
// properties
//
protected configuration conf   null
protected hbaseadmin admin   null
protected htablepool htablepool   null
protected final log log   logfactory getlog this getclass   getname
// nextscannerid and scannermap are used to manage scanner state
protected int nextscannerid   0
protected hashmap<integer  resultscanner> scannermap   null
//
// utility methods
//
/**
* assigns a unique id to the scanner and adds the mapping to an internal
* hash-map.
*
* @param scanner
* @return integer scanner id
*/
protected synchronized int addscanner resultscanner scanner
int id   nextscannerid
scannermap put id  scanner
return id
/**
* returns the scanner associated with the specified id.
*
* @param id
* @return a scanner, or null if id was invalid.
*/
protected synchronized resultscanner getscanner int id
return scannermap get id
/**
* removes the scanner associated with the specified id from the internal
* id->scanner hash-map.
*
* @param id
* @return a scanner, or null if id was invalid.
*/
protected synchronized resultscanner removescanner int id
return scannermap remove id
//
// ctor methods
//
// todo(hammer): figure out appropriate setting of maxsize for htablepool
/**
* constructs an hbaseimpl object.
* @throws ioexception
*/
hbaseimpl   throws ioexception
this hbaseconfiguration create
hbaseimpl final configuration c  throws ioexception
conf   c
admin   new hbaseadmin conf
htablepool   new htablepool conf  10
scannermap   new hashmap<integer  resultscanner>
//
// service methods
//
// todo(hammer): investigate use of the command design pattern
//
// cluster metadata
//
public utf8 gethbaseversion   throws aioerror
try
return new utf8 admin getclusterstatus   gethbaseversion
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public aclusterstatus getclusterstatus   throws aioerror
try
return avroutil cstoacs admin getclusterstatus
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public genericarray<atabledescriptor> listtables   throws aioerror
try
htabledescriptor tables   admin listtables
schema atdschema   schema createarray atabledescriptor schema$
genericdata array<atabledescriptor> result   null
result   new genericdata array<atabledescriptor> tables length  atdschema
for  htabledescriptor table   tables
result add avroutil htdtoatd table
return result
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
//
// table metadata
//
// todo(hammer): handle the case where the table does not exist explicitly?
public atabledescriptor describetable bytebuffer table  throws aioerror
try
return avroutil htdtoatd admin gettabledescriptor bytes tobytes table
catch  tablenotfoundexception e
return null
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public boolean istableenabled bytebuffer table  throws aioerror
try
return admin istableenabled bytes tobytes table
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public boolean tableexists bytebuffer table  throws aioerror
try
return admin tableexists bytes tobytes table
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
//
// family metadata
//
// todo(hammer): handle the case where the family does not exist explicitly?
public afamilydescriptor describefamily bytebuffer table  bytebuffer family  throws aioerror
try
htabledescriptor htd   admin gettabledescriptor bytes tobytes table
return avroutil hcdtoafd htd getfamily bytes tobytes family
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
//
// table admin
//
public void createtable atabledescriptor table  throws aioerror
aillegalargument
atableexists
amasternotrunning
try
admin createtable avroutil atdtohtd table
return null
catch  illegalargumentexception e
aillegalargument iae   new aillegalargument
iae message   new utf8 e getmessage
throw iae
catch  tableexistsexception e
atableexists tee   new atableexists
tee message   new utf8 e getmessage
throw tee
catch  masternotrunningexception e
amasternotrunning mnre   new amasternotrunning
mnre message   new utf8 e getmessage
throw mnre
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
// note that disable, flush and major compaction of .meta. needed in client
// todo(hammer): more selective cache dirtying than flush?
public void deletetable bytebuffer table  throws aioerror
try
admin deletetable bytes tobytes table
return null
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
// nb: asynchronous operation
public void modifytable bytebuffer tablename  atabledescriptor tabledescriptor  throws aioerror
try
admin modifytable bytes tobytes tablename
avroutil atdtohtd tabledescriptor
return null
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public void enabletable bytebuffer table  throws aioerror
try
admin enabletable bytes tobytes table
return null
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public void disabletable bytebuffer table  throws aioerror
try
admin disabletable bytes tobytes table
return null
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
// nb: asynchronous operation
public void flush bytebuffer table  throws aioerror
try
admin flush bytes tobytes table
return null
catch  interruptedexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
// nb: asynchronous operation
public void split bytebuffer table  throws aioerror
try
admin split bytes tobytes table
return null
catch  interruptedexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
//
// family admin
//
public void addfamily bytebuffer table  afamilydescriptor family  throws aioerror
try
admin addcolumn bytes tobytes table
avroutil afdtohcd family
return null
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
// nb: asynchronous operation
public void deletefamily bytebuffer table  bytebuffer family  throws aioerror
try
admin deletecolumn bytes tobytes table   bytes tobytes family
return null
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
// nb: asynchronous operation
public void modifyfamily bytebuffer table  bytebuffer familyname  afamilydescriptor familydescriptor  throws aioerror
try
admin modifycolumn bytes tobytes table   avroutil afdtohcd familydescriptor
return null
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
//
// single-row dml
//
// todo(hammer): java with statement for htablepool concision?
// todo(hammer): can get have timestamp and timerange simultaneously?
// todo(hammer): do i need to catch the runtimeexception of gettable?
// todo(hammer): handle gets with no results
// todo(hammer): uses exists(get) to ensure columns exist
public aresult get bytebuffer table  aget aget  throws aioerror
htableinterface htable   htablepool gettable bytes tobytes table
try
return avroutil resulttoaresult htable get avroutil agettoget aget
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
finally
try
htablepool puttable htable
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public boolean exists bytebuffer table  aget aget  throws aioerror
htableinterface htable   htablepool gettable bytes tobytes table
try
return htable exists avroutil agettoget aget
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
finally
try
htablepool puttable htable
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public void put bytebuffer table  aput aput  throws aioerror
htableinterface htable   htablepool gettable bytes tobytes table
try
htable put avroutil aputtoput aput
return null
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
finally
try
htablepool puttable htable
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public void delete bytebuffer table  adelete adelete  throws aioerror
htableinterface htable   htablepool gettable bytes tobytes table
try
htable delete avroutil adeletetodelete adelete
return null
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
finally
try
htablepool puttable htable
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public long incrementcolumnvalue bytebuffer table  bytebuffer row  bytebuffer family  bytebuffer qualifier  long amount  boolean writetowal  throws aioerror
htableinterface htable   htablepool gettable bytes tobytes table
try
return htable incrementcolumnvalue bytes tobytes row   bytes tobytes family   bytes tobytes qualifier   amount  writetowal
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
finally
try
htablepool puttable htable
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
//
// multi-row dml
//
public int scanneropen bytebuffer table  ascan ascan  throws aioerror
htableinterface htable   htablepool gettable bytes tobytes table
try
scan scan   avroutil ascantoscan ascan
return addscanner htable getscanner scan
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
finally
try
htablepool puttable htable
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public void scannerclose int scannerid  throws aioerror  aillegalargument
try
resultscanner scanner   getscanner scannerid
if  scanner    null
aillegalargument aie   new aillegalargument
aie message   new utf8     scannerid
throw aie
scanner close
removescanner scannerid
return null
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
public genericarray<aresult> scannergetrows int scannerid  int numberofrows  throws aioerror  aillegalargument
try
resultscanner scanner   getscanner scannerid
if  scanner    null
aillegalargument aie   new aillegalargument
aie message   new utf8     scannerid
throw aie
return avroutil resultstoaresults scanner next numberofrows
catch  ioexception e
aioerror ioe   new aioerror
ioe message   new utf8 e getmessage
throw ioe
//
// main program
//
private static void printusageandexit
printusageandexit null
private static void printusageandexit final string message
if  message    null
system err println message
system out println
system out println
system out println
system out println
system out println
system out println
system out println
system exit 0
protected static void domain final string args  throws exception
if  args length < 1
printusageandexit
int port   9090
final string portargkey
for  string cmd  args
if  cmd startswith portargkey
port   integer parseint cmd substring portargkey length
continue
else if  cmd equals       cmd equals
printusageandexit
else if  cmd equals
continue
else if  cmd equals
printusageandexit
// print out usage if we get to here.
printusageandexit
log log   logfactory getlog
log info     integer tostring port
specificresponder r   new specificresponder hbase class  new hbaseimpl
httpserver server   new httpserver r  port
server start
server join
// todo(hammer): look at cassandra's daemonization and integration with jsvc
// todo(hammer): don't eat it after a single exception
// todo(hammer): figure out why we do domain()
// todo(hammer): figure out if we want string[] or string [] syntax
public static void main string args  throws exception
domain args