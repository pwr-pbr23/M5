/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase util
/**
* utility for strings.
*/
public class strings
public final static string default_separator
public final static string default_keyvalue_separator
/**
* append to a stringbuilder a key/value.
* uses default separators.
* @param sb stringbuilder to use
* @param key key to append.
* @param value value to append.
* @return passed <code>sb</code> populated with key/value.
*/
public static stringbuilder appendkeyvalue final stringbuilder sb
final string key  final object value
return appendkeyvalue sb  key  value  default_separator
default_keyvalue_separator
/**
* append to a stringbuilder a key/value.
* uses default separators.
* @param sb stringbuilder to use
* @param key key to append.
* @param value value to append.
* @param separator value to use between key and value.
* @param keyvalueseparator value to use between key/value sets.
* @return passed <code>sb</code> populated with key/value.
*/
public static stringbuilder appendkeyvalue final stringbuilder sb
final string key  final object value  final string separator
final string keyvalueseparator
if  sb length   > 0
sb append keyvalueseparator
return sb append key  append separator  append value
/**
* given a ptr string generated via reverse dns lookup, return everything
* except the trailing period. example for host.example.com., return
* host.example.com
* @param dnptr a domain name pointer (ptr) string.
* @return sanitized hostname with last period stripped off.
*
*/
public static string domainnamepointertohostname string dnptr
if  dnptr    null
return null
return dnptr endswith    ? dnptr substring 0  dnptr length   1    dnptr