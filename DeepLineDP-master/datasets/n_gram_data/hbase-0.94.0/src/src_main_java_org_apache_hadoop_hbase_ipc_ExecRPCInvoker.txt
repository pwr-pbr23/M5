/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase ipc
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase client
import org apache hadoop hbase client coprocessor exec
import org apache hadoop hbase client coprocessor execresult
import org apache hadoop hbase util bytes
import java lang reflect invocationhandler
import java lang reflect method
/**
* backs a {@link coprocessorprotocol} subclass proxy and forwards method
* invocations for server execution.  note that internally this will issue a
* separate rpc call for each method invocation (using a
* {@link org.apache.hadoop.hbase.client.servercallable} instance).
*/
public class execrpcinvoker implements invocationhandler
// log is not in hbase subpackage intentionally so that the default hbase
// debug log level does not emit rpc-level logging.
private static final log log   logfactory getlog
private configuration conf
private final hconnection connection
private class<? extends coprocessorprotocol> protocol
private final byte table
private final byte row
private byte regionname
public execrpcinvoker configuration conf
hconnection connection
class<? extends coprocessorprotocol> protocol
byte table
byte row
this conf   conf
this connection   connection
this protocol   protocol
this table   table
this row   row
@override
public object invoke object instance  final method method  final object args
throws throwable
if  log isdebugenabled
log debug   method getname      args    null ? args length   0
if  row    null
final exec exec   new exec conf  row  protocol  method  args
servercallable<execresult> callable
new servercallable<execresult> connection  table  row
public execresult call   throws exception
return server execcoprocessor location getregioninfo   getregionname
exec
execresult result   callable withretries
this regionname   result getregionname
log debug    bytes tostringbinary regionname
result getvalue
return result getvalue
return null
public byte getregionname
return regionname