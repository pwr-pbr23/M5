/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase io hfile
import java util concurrent atomic atomiclong
/**
* class that implements cache metrics.
*/
public class cachestats
/** sliding window statistics. the number of metric periods to include in
* sliding window hit ratio calculations.
*/
static final int default_window_periods   5
/** the number of getblock requests that were cache hits */
private final atomiclong hitcount   new atomiclong 0
/**
* the number of getblock requests that were cache hits, but only from
* requests that were set to use the block cache.  this is because all reads
* attempt to read from the block cache even if they will not put new blocks
* into the block cache.  see hbase-2253 for more information.
*/
private final atomiclong hitcachingcount   new atomiclong 0
/** the number of getblock requests that were cache misses */
private final atomiclong misscount   new atomiclong 0
/**
* the number of getblock requests that were cache misses, but only from
* requests that were set to use the block cache.
*/
private final atomiclong misscachingcount   new atomiclong 0
/** the number of times an eviction has occurred */
private final atomiclong evictioncount   new atomiclong 0
/** the total number of blocks that have been evicted */
private final atomiclong evictedblockcount   new atomiclong 0
/** the number of metrics periods to include in window */
private final int numperiodsinwindow
/** hit counts for each period in window */
private final long  hitcounts
/** caching hit counts for each period in window */
private final long  hitcachingcounts
/** access counts for each period in window */
private final long  requestcounts
/** caching access counts for each period in window */
private final long  requestcachingcounts
/** last hit count read */
private long lasthitcount   0
/** last hit caching count read */
private long lasthitcachingcount   0
/** last request count read */
private long lastrequestcount   0
/** last request caching count read */
private long lastrequestcachingcount   0
/** current window index (next to be updated) */
private int windowindex   0
public cachestats
this default_window_periods
public cachestats int numperiodsinwindow
this numperiodsinwindow   numperiodsinwindow
this hitcounts   initializezeros numperiodsinwindow
this hitcachingcounts   initializezeros numperiodsinwindow
this requestcounts   initializezeros numperiodsinwindow
this requestcachingcounts   initializezeros numperiodsinwindow
public void miss boolean caching
misscount incrementandget
if  caching  misscachingcount incrementandget
public void hit boolean caching
hitcount incrementandget
if  caching  hitcachingcount incrementandget
public void evict
evictioncount incrementandget
public void evicted
evictedblockcount incrementandget
public long getrequestcount
return gethitcount     getmisscount
public long getrequestcachingcount
return gethitcachingcount     getmisscachingcount
public long getmisscount
return misscount get
public long getmisscachingcount
return misscachingcount get
public long gethitcount
return hitcount get
public long gethitcachingcount
return hitcachingcount get
public long getevictioncount
return evictioncount get
public long getevictedcount
return evictedblockcount get
public double gethitratio
return   float gethitcount    float getrequestcount
public double gethitcachingratio
return   float gethitcachingcount    float getrequestcachingcount
public double getmissratio
return   float getmisscount    float getrequestcount
public double getmisscachingratio
return   float getmisscachingcount    float getrequestcachingcount
public double evictedpereviction
return   float getevictedcount    float getevictioncount
public void rollmetricsperiod
hitcounts   gethitcount     lasthitcount
lasthitcount   gethitcount
hitcachingcounts
gethitcachingcount     lasthitcachingcount
lasthitcachingcount   gethitcachingcount
requestcounts   getrequestcount     lastrequestcount
lastrequestcount   getrequestcount
requestcachingcounts
getrequestcachingcount     lastrequestcachingcount
lastrequestcachingcount   getrequestcachingcount
windowindex    windowindex   1  % numperiodsinwindow
public double gethitratiopastnperiods
double ratio     double sum hitcounts   double sum requestcounts
return double isnan ratio  ? 0   ratio
public double gethitcachingratiopastnperiods
double ratio
double sum hitcachingcounts   double sum requestcachingcounts
return double isnan ratio  ? 0   ratio
private static long sum long  counts
long sum   0
for  long count   counts  sum    count
return sum
private static long  initializezeros int n
long  zeros   new long
for  int i 0  i<n  i
zeros   0l
return zeros