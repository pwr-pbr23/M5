/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase zookeeper
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hbase abortable
import org apache hadoop hbase clusterstatus
import org apache hadoop hbase util bytes
import org apache zookeeper keeperexception
/**
* tracker on cluster settings up in zookeeper.
* this is not related to {@link clusterstatus}.  that class is a data structure
* that holds snapshot of current view on cluster.  this class is about tracking
* cluster attributes up in zookeeper.
*
*/
public class clusterstatustracker extends zookeepernodetracker
private static final log log   logfactory getlog clusterstatustracker class
/**
* creates a cluster status tracker.
*
* <p>after construction, use {@link #start} to kick off tracking.
*
* @param watcher
* @param abortable
*/
public clusterstatustracker zookeeperwatcher watcher  abortable abortable
super watcher  watcher clusterstateznode  abortable
/**
* checks if cluster is up.
* @return true if root region location is available, false if not
*/
public boolean isclusterup
return super getdata false     null
/**
* sets the cluster as up.
* @throws keeperexception unexpected zk exception
*/
public void setclusterup
throws keeperexception
byte  updata   bytes tobytes new java util date   tostring
try
zkutil createandwatch watcher  watcher clusterstateznode  updata
catch keeperexception nodeexistsexception nee
zkutil setdata watcher  watcher clusterstateznode  updata
/**
* sets the cluster as down by deleting the znode.
* @throws keeperexception unexpected zk exception
*/
public void setclusterdown
throws keeperexception
try
zkutil deletenode watcher  watcher clusterstateznode
catch keeperexception nonodeexception nne
log warn
watcher clusterstateznode