/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements. see the notice file distributed with this
* work for additional information regarding copyright ownership. the asf
* licenses this file to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
* http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis, without
* warranties or conditions of any kind, either express or implied. see the
* license for the specific language governing permissions and limitations
* under the license.
*/
package org apache hadoop hbase io hfile
import java nio bytebuffer
import org apache hadoop hbase io encoding datablockencoding
import org apache hadoop hbase regionserver storefile
import org apache hadoop hbase util pair
/**
* does not perform any kind of encoding/decoding.
*/
public class noopdatablockencoder implements hfiledatablockencoder
public static final noopdatablockencoder instance
new noopdatablockencoder
/** cannot be instantiated. use {@link #instance} instead. */
private noopdatablockencoder
@override
public hfileblock disktocacheformat hfileblock block  boolean iscompaction
if  block getblocktype      blocktype encoded_data
throw new illegalstateexception
return block
@override
public pair<bytebuffer  blocktype> beforewritetodisk
bytebuffer in  boolean includesmemstorets  byte dummyheader
return new pair<bytebuffer  blocktype> in  blocktype data
@override
public boolean useencodedscanner boolean iscompaction
return false
@override
public void savemetadata storefile writer storefilewriter
@override
public datablockencoding getencodingondisk
return datablockencoding none
@override
public datablockencoding getencodingincache
return datablockencoding none
@override
public datablockencoding geteffectiveencodingincache boolean iscompaction
return datablockencoding none
@override
public string tostring
return getclass   getsimplename