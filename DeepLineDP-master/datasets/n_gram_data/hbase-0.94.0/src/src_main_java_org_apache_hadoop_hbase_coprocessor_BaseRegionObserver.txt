/*
* copyright 2011 the apache software foundation
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase coprocessor
import java util list
import java util map
import com google common collect immutablelist
import org apache hadoop hbase coprocessorenvironment
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase keyvalue
import org apache hadoop hbase client append
import org apache hadoop hbase client delete
import org apache hadoop hbase client get
import org apache hadoop hbase client increment
import org apache hadoop hbase client put
import org apache hadoop hbase client result
import org apache hadoop hbase client scan
import org apache hadoop hbase filter comparefilter compareop
import org apache hadoop hbase filter writablebytearraycomparable
import org apache hadoop hbase regionserver hregion
import org apache hadoop hbase regionserver internalscanner
import org apache hadoop hbase regionserver regionscanner
import org apache hadoop hbase regionserver store
import org apache hadoop hbase regionserver storefile
import org apache hadoop hbase regionserver wal hlogkey
import org apache hadoop hbase regionserver wal waledit
import java io ioexception
/**
* an abstract class that implements regionobserver.
* by extending it, you can create your own region observer without
* overriding all abstract methods of regionobserver.
*/
public abstract class baseregionobserver implements regionobserver
@override
public void start coprocessorenvironment e  throws ioexception
@override
public void stop coprocessorenvironment e  throws ioexception
@override
public void preopen observercontext<regioncoprocessorenvironment> e
@override
public void postopen observercontext<regioncoprocessorenvironment> e
@override
public void preclose observercontext<regioncoprocessorenvironment> e
boolean abortrequested
@override
public void postclose observercontext<regioncoprocessorenvironment> e
boolean abortrequested
@override
public void preflush observercontext<regioncoprocessorenvironment> e
@override
public void postflush observercontext<regioncoprocessorenvironment> e
@override
public void presplit observercontext<regioncoprocessorenvironment> e
@override
public void postsplit observercontext<regioncoprocessorenvironment> e
hregion l  hregion r
@override
public void precompactselection final observercontext<regioncoprocessorenvironment> c
final store store  final list<storefile> candidates
@override
public void postcompactselection final observercontext<regioncoprocessorenvironment> c
final store store  final immutablelist<storefile> selected
@override
public internalscanner precompact observercontext<regioncoprocessorenvironment> e
final store store  final internalscanner scanner
return scanner
@override
public void postcompact observercontext<regioncoprocessorenvironment> e
final store store  final storefile resultfile
@override
public void pregetclosestrowbefore final observercontext<regioncoprocessorenvironment> e
final byte  row  final byte  family  final result result
throws ioexception
@override
public void postgetclosestrowbefore final observercontext<regioncoprocessorenvironment> e
final byte  row  final byte  family  final result result
throws ioexception
@override
public void preget final observercontext<regioncoprocessorenvironment> e
final get get  final list<keyvalue> results  throws ioexception
@override
public void postget final observercontext<regioncoprocessorenvironment> e
final get get  final list<keyvalue> results  throws ioexception
@override
public boolean preexists final observercontext<regioncoprocessorenvironment> e
final get get  final boolean exists  throws ioexception
return exists
@override
public boolean postexists final observercontext<regioncoprocessorenvironment> e
final get get  boolean exists  throws ioexception
return exists
@override
public void preput final observercontext<regioncoprocessorenvironment> e
final put put  final waledit edit  final boolean writetowal  throws ioexception
@override
public void postput final observercontext<regioncoprocessorenvironment> e
final put put  final waledit edit  final boolean writetowal  throws ioexception
@override
public void predelete final observercontext<regioncoprocessorenvironment> e
final delete delete  final waledit edit  final boolean writetowal  throws ioexception
@override
public void postdelete final observercontext<regioncoprocessorenvironment> e
final delete delete  final waledit edit  final boolean writetowal  throws ioexception
@override
public boolean precheckandput final observercontext<regioncoprocessorenvironment> e
final byte  row  final byte  family  final byte  qualifier
final compareop compareop  final writablebytearraycomparable comparator
final put put  final boolean result  throws ioexception
return result
@override
public boolean postcheckandput final observercontext<regioncoprocessorenvironment> e
final byte  row  final byte  family  final byte  qualifier
final compareop compareop  final writablebytearraycomparable comparator
final put put  final boolean result  throws ioexception
return result
@override
public boolean precheckanddelete final observercontext<regioncoprocessorenvironment> e
final byte  row  final byte  family  final byte  qualifier
final compareop compareop  final writablebytearraycomparable comparator
final delete delete  final boolean result  throws ioexception
return result
@override
public boolean postcheckanddelete final observercontext<regioncoprocessorenvironment> e
final byte  row  final byte  family  final byte  qualifier
final compareop compareop  final writablebytearraycomparable comparator
final delete delete  final boolean result  throws ioexception
return result
@override
public result preappend final observercontext<regioncoprocessorenvironment> e
final append append  throws ioexception
return null
@override
public result postappend final observercontext<regioncoprocessorenvironment> e
final append append  final result result  throws ioexception
return result
@override
public long preincrementcolumnvalue final observercontext<regioncoprocessorenvironment> e
final byte  row  final byte  family  final byte  qualifier
final long amount  final boolean writetowal  throws ioexception
return amount
@override
public long postincrementcolumnvalue final observercontext<regioncoprocessorenvironment> e
final byte  row  final byte  family  final byte  qualifier
final long amount  final boolean writetowal  long result
throws ioexception
return result
@override
public result preincrement final observercontext<regioncoprocessorenvironment> e
final increment increment  throws ioexception
return null
@override
public result postincrement final observercontext<regioncoprocessorenvironment> e
final increment increment  final result result  throws ioexception
return result
@override
public regionscanner prescanneropen final observercontext<regioncoprocessorenvironment> e
final scan scan  final regionscanner s  throws ioexception
return s
@override
public regionscanner postscanneropen final observercontext<regioncoprocessorenvironment> e
final scan scan  final regionscanner s  throws ioexception
return s
@override
public boolean prescannernext final observercontext<regioncoprocessorenvironment> e
final internalscanner s  final list<result> results
final int limit  final boolean hasmore  throws ioexception
return hasmore
@override
public boolean postscannernext final observercontext<regioncoprocessorenvironment> e
final internalscanner s  final list<result> results  final int limit
final boolean hasmore  throws ioexception
return hasmore
@override
public void prescannerclose final observercontext<regioncoprocessorenvironment> e
final internalscanner s  throws ioexception
@override
public void postscannerclose final observercontext<regioncoprocessorenvironment> e
final internalscanner s  throws ioexception
@override
public void prewalrestore observercontext<regioncoprocessorenvironment> env  hregioninfo info
hlogkey logkey  waledit logedit  throws ioexception
@override
public void postwalrestore observercontext<regioncoprocessorenvironment> env
hregioninfo info  hlogkey logkey  waledit logedit  throws ioexception