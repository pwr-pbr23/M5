/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements. see the notice file distributed with this
* work for additional information regarding copyright ownership. the asf
* licenses this file to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
* http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis, without
* warranties or conditions of any kind, either express or implied. see the
* license for the specific language governing permissions and limitations
* under the license.
*/
package org apache hadoop hbase util
import java util set
import java util treeset
import org apache commons cli basicparser
import org apache commons cli commandline
import org apache commons cli commandlineparser
import org apache commons cli helpformatter
import org apache commons cli options
import org apache commons cli parseexception
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase hbaseconfiguration
import org apache hadoop util tool
import org apache hadoop util toolrunner
/**
* common base class used for hbase command-line tools. simplifies workflow and
* command-line argument parsing.
*/
public abstract class abstracthbasetool implements tool
private static final int exit_success   0
private static final int exit_failure   1
private static final string help_option
private static final log log   logfactory getlog abstracthbasetool class
private final options options   new options
protected configuration conf   null
private static final set<string> requiredoptions   new treeset<string>
/**
* override this to add command-line options using {@link #addoptwitharg}
* and similar methods.
*/
protected abstract void addoptions
/**
* this method is called to process the options after they have been parsed.
*/
protected abstract void processoptions commandline cmd
/** the "main function" of the tool */
protected abstract void dowork   throws exception
@override
public configuration getconf
return conf
@override
public void setconf configuration conf
this conf   conf
@override
public final int run string args  throws exception
if  conf    null
log error
throw new nullpointerexception
commandline cmd
try
// parse the command line arguments
cmd   parseargs args
catch  parseexception e
log error    e
printusage
return exit_failure
if  cmd hasoption help_option      sanitycheckoptions cmd
printusage
return exit_failure
processoptions cmd
try
dowork
catch  exception e
log error    e
return exit_failure
return exit_success
private boolean sanitycheckoptions commandline cmd
boolean success   true
for  string reqopt   requiredoptions
if   cmd hasoption reqopt
log error     reqopt
success   false
return success
private commandline parseargs string args  throws parseexception
options addoption help_option  false
addoptions
commandlineparser parser   new basicparser
return parser parse options  args
private void printusage
helpformatter helpformatter   new helpformatter
helpformatter setwidth 80
string usageheader
string usagefooter
string usagestr       getclass   getname
helpformatter printhelp usagestr  usageheader  options
usagefooter
protected void addrequiredoptwitharg string opt  string description
requiredoptions add opt
addoptwitharg opt  description
protected void addoptnoarg string opt  string description
options addoption opt  false  description
protected void addoptwitharg string opt  string description
options addoption opt  true  description
/**
* parse a number and enforce a range.
*/
public static long parselong string s  long minvalue  long maxvalue
long l   long parselong s
if  l < minvalue    l > maxvalue
throw new illegalargumentexception     l
minvalue       maxvalue
return l
public static int parseint string s  int minvalue  int maxvalue
return  int  parselong s  minvalue  maxvalue
/** call this from the concrete tool class's main function. */
protected void dostaticmain string args
int ret
try
ret   toolrunner run hbaseconfiguration create    this  args
catch  exception ex
log error    ex
ret   exit_failure
system exit ret