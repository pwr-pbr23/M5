/*
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase client
import java util arraylist
import java util hashmap
import java util list
import java util map
import java util treemap
import java util uuid
import org apache hadoop hbase hconstants
import org apache hadoop hbase keyvalue
import org apache hadoop hbase util bytes
public abstract class mutation extends operationwithattributes implements row
// attribute used in mutations to indicate the originating cluster.
private static final string cluster_id_attr
protected byte  row   null
protected long ts   hconstants latest_timestamp
protected long lockid    1l
protected boolean writetowal   true
protected map<byte   list<keyvalue>> familymap
new treemap<byte   list<keyvalue>> bytes bytes_comparator
/**
* compile the column family (i.e. schema) information
* into a map. useful for parsing and aggregation by debugging,
* logging, and administration tools.
* @return map
*/
@override
public map<string  object> getfingerprint
map<string  object> map   new hashmap<string  object>
list<string> families   new arraylist<string>
// ideally, we would also include table information, but that information
// is not stored in each operation instance.
map put    families
for  map entry<byte   list<keyvalue>> entry   this familymap entryset
families add bytes tostringbinary entry getkey
return map
/**
* compile the details beyond the scope of getfingerprint (row, columns,
* timestamps, etc.) into a map along with the fingerprinted information.
* useful for debugging, logging, and administration tools.
* @param maxcols a limit on the number of columns output prior to truncation
* @return map
*/
@override
public map<string  object> tomap int maxcols
// we start with the fingerprint map and build on top of it.
map<string  object> map   getfingerprint
// replace the fingerprint's simple list of families with a
// map from column families to lists of qualifiers and kv details
map<string  list<map<string  object>>> columns
new hashmap<string  list<map<string  object>>>
map put    columns
map put    bytes tostringbinary this row
int colcount   0
// iterate through all column families affected
for  map entry<byte   list<keyvalue>> entry   this familymap entryset
// map from this family to details for each kv affected within the family
list<map<string  object>> qualifierdetails
new arraylist<map<string  object>>
columns put bytes tostringbinary entry getkey     qualifierdetails
colcount    entry getvalue   size
if  maxcols <  0
continue
// add details for each kv
for  keyvalue kv   entry getvalue
if    maxcols <  0
continue
map<string  object> kvmap   kv tostringmap
// row and family information are already available in the bigger map
kvmap remove
kvmap remove
qualifierdetails add kvmap
map put    colcount
return map
/**
* @return true if edits should be applied to wal, false if not
*/
public boolean getwritetowal
return this writetowal
/**
* set whether this delete should be written to the wal or not.
* not writing the wal means you may lose edits on server crash.
* @param write true if edits should be written to wal, false if not
*/
public void setwritetowal boolean write
this writetowal   write
/**
* method for retrieving the put's familymap
* @return familymap
*/
public map<byte   list<keyvalue>> getfamilymap
return this familymap
/**
* method for setting the put's familymap
*/
public void setfamilymap map<byte   list<keyvalue>> map
this familymap   map
/**
* method to check if the familymap is empty
* @return true if empty, false otherwise
*/
public boolean isempty
return familymap isempty
/**
* method for retrieving the delete's row
* @return row
*/
@override
public byte  getrow
return this row
public int compareto final row d
return bytes compareto this getrow    d getrow
/**
* method for retrieving the delete's rowlock
* @return rowlock
*/
public rowlock getrowlock
return new rowlock this row  this lockid
/**
* method for retrieving the delete's lock id.
*
* @return the lock id.
*/
public long getlockid
return this lockid
/**
* method for retrieving the timestamp
* @return timestamp
*/
public long gettimestamp
return this ts
/**
* set the replication custer id.
* @param clusterid
*/
public void setclusterid uuid clusterid
byte val   new byte
bytes putlong val  0  clusterid getmostsignificantbits
bytes putlong val  bytes sizeof_long  clusterid getleastsignificantbits
setattribute cluster_id_attr  val
/**
* @return the replication cluster id.
*/
public uuid getclusterid
byte attr   getattribute cluster_id_attr
if  attr    null
return hconstants default_cluster_id
return new uuid bytes tolong attr 0   bytes tolong attr  bytes sizeof_long
/**
* @return the total number of keyvalues
*/
public int size
int size   0
for list<keyvalue> kvlist   this familymap values
size    kvlist size
return size
/**
* @return the number of different families
*/
public int numfamilies
return familymap size