/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase rest model
import java io serializable
import javax xml bind annotation xmlattribute
import javax xml bind annotation xmlrootelement
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase htabledescriptor
import org apache hadoop hbase util bytes
/**
* representation of a region of a table and its current location on the
* storage cluster.
*
* <pre>
* &lt;complextype name="tableregion"&gt;
*   &lt;attribute name="name" type="string"&gt;&lt;/attribute&gt;
*   &lt;attribute name="id" type="int"&gt;&lt;/attribute&gt;
*   &lt;attribute name="startkey" type="base64binary"&gt;&lt;/attribute&gt;
*   &lt;attribute name="endkey" type="base64binary"&gt;&lt;/attribute&gt;
*   &lt;attribute name="location" type="string"&gt;&lt;/attribute&gt;
*  &lt;/complextype&gt;
* </pre>
*/
@xmlrootelement name
public class tableregionmodel implements serializable
private static final long serialversionuid   1l
private string table
private long id
private byte startkey
private byte endkey
private string location
/**
* constructor
*/
public tableregionmodel
/**
* constructor
* @param table the table name
* @param id the encoded id of the region
* @param startkey the start key of the region
* @param endkey the end key of the region
*/
public tableregionmodel string table  long id  byte startkey
byte endkey
this table  id  startkey  endkey  null
/**
* constructor
* @param table the table name
* @param id the encoded id of the region
* @param startkey the start key of the region
* @param endkey the end key of the region
* @param location the name and port of the region server hosting the region
*/
public tableregionmodel string table  long id  byte startkey
byte endkey  string location
this table   table
this id   id
this startkey   startkey
this endkey   endkey
this location   location
/**
* @return the region name
*/
@xmlattribute
public string getname
byte  tablenameasbytes   bytes tobytes this table
byte  nameasbytes   hregioninfo createregionname tablenameasbytes
this startkey  this id
htabledescriptor ismetatable tablenameasbytes
return bytes tostring nameasbytes
/**
* @return the encoded region id
*/
@xmlattribute
public long getid
return id
/**
* @return the start key
*/
@xmlattribute
public byte getstartkey
return startkey
/**
* @return the end key
*/
@xmlattribute
public byte getendkey
return endkey
/**
* @return the name and port of the region server hosting the region
*/
@xmlattribute
public string getlocation
return location
/**
* @param name region printable name
*/
public void setname string name
string split   name split
this table   split
this startkey   bytes tobytes split
string tail   split
split   tail split
id   long valueof split
/**
* @param id the region's encoded id
*/
public void setid long id
this id   id
/**
* @param startkey the start key
*/
public void setstartkey byte startkey
this startkey   startkey
/**
* @param endkey the end key
*/
public void setendkey byte endkey
this endkey   endkey
/**
* @param location the name and port of the region server hosting the region
*/
public void setlocation string location
this location   location
/* (non-javadoc)
* @see java.lang.object#tostring()
*/
@override
public string tostring
stringbuilder sb   new stringbuilder
sb append getname
sb append
sb append id
sb append
sb append bytes tostring startkey
sb append
sb append bytes tostring endkey
if  location    null
sb append
sb append location
sb append
return sb tostring