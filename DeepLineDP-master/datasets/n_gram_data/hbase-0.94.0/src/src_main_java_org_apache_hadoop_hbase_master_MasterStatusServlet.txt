/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase master
import java io ioexception
import java util list
import java util map
import java util set
import javax servlet http httpservlet
import javax servlet http httpservletrequest
import javax servlet http httpservletresponse
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase servername
import org apache hadoop hbase client hbaseadmin
import org apache hadoop hbase util fsutils
import org apache hadoop hbase tmpl master masterstatustmpl
/**
* the servlet responsible for rendering the index page of the
* master.
*/
public class masterstatusservlet extends httpservlet
private static final log log   logfactory getlog masterstatusservlet class
private static final long serialversionuid   1l
@override
public void doget httpservletrequest request  httpservletresponse response
throws ioexception
hmaster master    hmaster  getservletcontext   getattribute hmaster master
assert master    null
configuration conf   master getconfiguration
hbaseadmin admin   new hbaseadmin conf
map<string  integer> frags   getfragmentationinfo master  conf
servername rootlocation   getrootlocationornull master
servername metalocation   master getcatalogtracker   getmetalocation
list<servername> servers   master getservermanager   getonlineserverslist
set<servername> deadservers   master getservermanager   getdeadservers
response setcontenttype
masterstatustmpl tmpl   new masterstatustmpl
setfrags frags
setshowappendwarning shouldshowappendwarning conf
setrootlocation rootlocation
setmetalocation metalocation
setservers servers
setdeadservers deadservers
if  request getparameter       null
tmpl setfilter request getparameter
if  request getparameter       null
tmpl setformat request getparameter
tmpl render response getwriter
master  admin
private servername getrootlocationornull hmaster master
try
return master getcatalogtracker   getrootlocation
catch  interruptedexception e
log warn    e
return null
private map<string  integer> getfragmentationinfo
hmaster master  configuration conf  throws ioexception
boolean showfragmentation   conf getboolean
false
if  showfragmentation
return fsutils gettablefragmentation master
else
return null
static boolean shouldshowappendwarning configuration conf
try
return  fsutils isappendsupported conf     fsutils ishdfs conf
catch  ioexception e
log warn    e
return false