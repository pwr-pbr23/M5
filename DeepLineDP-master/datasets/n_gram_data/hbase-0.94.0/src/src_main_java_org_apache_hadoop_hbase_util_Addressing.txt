/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase util
import java net inetsocketaddress
/**
* utility for network addresses, resolving and naming.
*/
public class addressing
public static final string valid_port_regex
public static final string hostname_port_separator
/**
* @param hostandport formatted as <code>&lt;hostname> ':' &lt;port></code>
* @return an inetsocketinstance
*/
public static inetsocketaddress createinetsocketaddressfromhostandportstr
final string hostandport
return new inetsocketaddress parsehostname hostandport   parseport hostandport
/**
* @param hostname server hostname
* @param port server port
* @return returns a concatenation of <code>hostname</code> and
* <code>port</code> in following
* form: <code>&lt;hostname> ':' &lt;port></code>.  for example, if hostname
* is <code>example.org</code> and port is 1234, this method will return
* <code>example.org:1234</code>
*/
public static string createhostandportstr final string hostname  final int port
return hostname   hostname_port_separator   port
/**
* @param hostandport formatted as <code>&lt;hostname> ':' &lt;port></code>
* @return the hostname portion of <code>hostandport</code>
*/
public static string parsehostname final string hostandport
int colonindex   hostandport lastindexof hostname_port_separator
if  colonindex < 0
throw new illegalargumentexception     hostandport
return hostandport substring 0  colonindex
/**
* @param hostandport formatted as <code>&lt;hostname> ':' &lt;port></code>
* @return the port portion of <code>hostandport</code>
*/
public static int parseport final string hostandport
int colonindex   hostandport lastindexof hostname_port_separator
if  colonindex < 0
throw new illegalargumentexception     hostandport
return integer parseint hostandport substring colonindex   1