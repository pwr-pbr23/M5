/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase util
/**
* this is a very fast, non-cryptographic hash suitable for general hash-based
* lookup.  see http://murmurhash.googlepages.com/ for more details.
*
* <p>the c version of murmurhash 2.0 found at that site was ported
* to java by andrzej bialecki (ab at getopt org).</p>
*/
public class murmurhash extends hash
private static murmurhash _instance   new murmurhash
public static hash getinstance
return _instance
@override
public int hash byte data  int offset  int length  int seed
int m   0x5bd1e995
int r   24
int h   seed ^ length
int len_4   length >> 2
for  int i   0  i < len_4  i
int i_4    i << 2    offset
int k   data
k   k << 8
k   k    data   0xff
k   k << 8
k   k    data   0xff
k   k << 8
//noinspection pointlessarithmeticexpression
k   k    data   0xff
k    m
k ^  k >>> r
k    m
h    m
h ^  k
// avoid calculating modulo
int len_m   len_4 << 2
int left   length   len_m
int i_m   len_m   offset
if  left    0
if  left >  3
h ^  data << 16
if  left >  2
h ^  data << 8
if  left >  1
h ^  data
h    m
h ^  h >>> 13
h    m
h ^  h >>> 15
return h