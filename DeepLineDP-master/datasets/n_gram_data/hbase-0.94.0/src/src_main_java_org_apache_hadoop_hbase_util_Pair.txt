/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase util
import java io serializable
/**
* a generic class for pairs.
* @param <t1>
* @param <t2>
*/
public class pair<t1  t2> implements serializable
private static final long serialversionuid    3986244606585552569l
protected t1 first   null
protected t2 second   null
/**
* default constructor.
*/
public pair
/**
* constructor
* @param a operand
* @param b operand
*/
public pair t1 a  t2 b
this first   a
this second   b
/**
* constructs a new pair, inferring the type via the passed arguments
* @param <t1> type for first
* @param <t2> type for second
* @param a first element
* @param b second element
* @return a new pair containing the passed arguments
*/
public static <t1 t2> pair<t1 t2> newpair t1 a  t2 b
return new pair<t1 t2> a  b
/**
* replace the first element of the pair.
* @param a operand
*/
public void setfirst t1 a
this first   a
/**
* replace the second element of the pair.
* @param b operand
*/
public void setsecond t2 b
this second   b
/**
* return the first element stored in the pair.
* @return t1
*/
public t1 getfirst
return first
/**
* return the second element stored in the pair.
* @return t2
*/
public t2 getsecond
return second
private static boolean equals object x  object y
return  x    null    y    null      x    null    x equals y
@override
@suppresswarnings
public boolean equals object other
return other instanceof pair    equals first    pair other  first
equals second    pair other  second
@override
public int hashcode
if  first    null
return  second    null  ? 0   second hashcode     1
else if  second    null
return first hashcode     2
else
return first hashcode     17   second hashcode
@override
public string tostring
return     getfirst         getsecond