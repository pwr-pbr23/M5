/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase client
import org apache hadoop hbase hcolumndescriptor
import org apache hadoop hbase htabledescriptor
/**
* read-only table descriptor.
*/
public class unmodifyablehtabledescriptor extends htabledescriptor
/** default constructor */
public unmodifyablehtabledescriptor
super
/*
* create an unmodifyable copy of an htabledescriptor
* @param desc
*/
unmodifyablehtabledescriptor final htabledescriptor desc
super desc getname    getunmodifyablefamilies desc   desc getvalues
/*
* @param desc
* @return families as unmodifiable array.
*/
private static hcolumndescriptor getunmodifyablefamilies
final htabledescriptor desc
hcolumndescriptor  f   new hcolumndescriptor
int i   0
for  hcolumndescriptor c  desc getfamilies
f   c
return f
/**
* does not add a column family. this object is immutable
* @param family hcolumndescriptor of familyto add.
*/
@override
public void addfamily final hcolumndescriptor family
throw new unsupportedoperationexception
/**
* @param column
* @return column descriptor for the passed family name or the family on
* passed in column.
*/
@override
public hcolumndescriptor removefamily final byte  column
throw new unsupportedoperationexception
/**
* @see org.apache.hadoop.hbase.htabledescriptor#setreadonly(boolean)
*/
@override
public void setreadonly boolean readonly
throw new unsupportedoperationexception
/**
* @see org.apache.hadoop.hbase.htabledescriptor#setvalue(byte[], byte[])
*/
@override
public void setvalue byte key  byte value
throw new unsupportedoperationexception
/**
* @see org.apache.hadoop.hbase.htabledescriptor#setvalue(java.lang.string, java.lang.string)
*/
@override
public void setvalue string key  string value
throw new unsupportedoperationexception
/**
* @see org.apache.hadoop.hbase.htabledescriptor#setmaxfilesize(long)
*/
@override
public void setmaxfilesize long maxfilesize
throw new unsupportedoperationexception
/**
* @see org.apache.hadoop.hbase.htabledescriptor#setmemstoreflushsize(long)
*/
@override
public void setmemstoreflushsize long memstoreflushsize
throw new unsupportedoperationexception
//  /**
//   * @see org.apache.hadoop.hbase.htabledescriptor#addindex(org.apache.hadoop.hbase.client.tableindexed.indexspecification)
//   */
//  @override
//  public void addindex(indexspecification index) {
//    throw new unsupportedoperationexception("htabledescriptor is read-only");
//  }