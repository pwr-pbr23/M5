/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
* http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase master
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase
import org apache hadoop hbase coprocessor
import java io ioexception
/**
* provides the coprocessor framework and environment for master oriented
* operations.  {@link hmaster} interacts with the loaded coprocessors
* through this class.
*/
public class mastercoprocessorhost
extends coprocessorhost<mastercoprocessorhost masterenvironment>
private static final log log   logfactory getlog mastercoprocessorhost class
/**
* coprocessor environment extension providing access to master related
* services.
*/
static class masterenvironment extends coprocessorhost environment
implements mastercoprocessorenvironment
private masterservices masterservices
public masterenvironment final class<?> implclass  final coprocessor impl
final int priority  final int seq  final configuration conf
final masterservices services
super impl  priority  seq  conf
this masterservices   services
public masterservices getmasterservices
return masterservices
private masterservices masterservices
mastercoprocessorhost final masterservices services  final configuration conf
this masterservices   services
loadsystemcoprocessors conf  master_coprocessor_conf_key
@override
public masterenvironment createenvironment final class<?> implclass
final coprocessor instance  final int priority  final int seq
final configuration conf
return new masterenvironment implclass  instance  priority  seq  conf
masterservices
@override
protected void abortserver final coprocessorenvironment env  final throwable e
abortserver    masterservices  env  e
/* implementation of hooks for invoking masterobservers */
void precreatetable htabledescriptor htd  hregioninfo regions
throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    precreatetable ctx  htd  regions
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void postcreatetable htabledescriptor htd  hregioninfo regions
throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postcreatetable ctx  htd  regions
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void predeletetable byte tablename  throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    predeletetable ctx  tablename
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void postdeletetable byte tablename  throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postdeletetable ctx  tablename
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void premodifytable final byte tablename  htabledescriptor htd
throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    premodifytable ctx  tablename
htd
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void postmodifytable final byte tablename  htabledescriptor htd
throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postmodifytable ctx  tablename
htd
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
boolean preaddcolumn byte  tablename  hcolumndescriptor column
throws ioexception
boolean bypass   false
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    preaddcolumn ctx  tablename  column
catch  throwable e
handlecoprocessorthrowable env  e
bypass    ctx shouldbypass
if  ctx shouldcomplete
break
return bypass
void postaddcolumn byte  tablename  hcolumndescriptor column
throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postaddcolumn ctx  tablename
column
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
boolean premodifycolumn byte  tablename  hcolumndescriptor descriptor
throws ioexception
boolean bypass   false
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    premodifycolumn
ctx  tablename  descriptor
catch  throwable e
handlecoprocessorthrowable env  e
bypass    ctx shouldbypass
if  ctx shouldcomplete
break
return bypass
void postmodifycolumn byte  tablename  hcolumndescriptor descriptor
throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postmodifycolumn
ctx  tablename  descriptor
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
boolean predeletecolumn final byte  tablename  final byte  c
throws ioexception
boolean bypass   false
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    predeletecolumn ctx  tablename  c
catch  throwable e
handlecoprocessorthrowable env  e
bypass    ctx shouldbypass
if  ctx shouldcomplete
break
return bypass
void postdeletecolumn final byte  tablename  final byte  c
throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postdeletecolumn ctx  tablename
c
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void preenabletable final byte  tablename  throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    preenabletable ctx  tablename
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void postenabletable final byte  tablename  throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postenabletable ctx  tablename
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void predisabletable final byte  tablename  throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    predisabletable ctx  tablename
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void postdisabletable final byte  tablename  throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postdisabletable ctx  tablename
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
boolean premove final hregioninfo region  final servername srcserver  final servername destserver
throws ioexception
boolean bypass   false
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    premove
ctx  region  srcserver  destserver
catch  throwable e
handlecoprocessorthrowable env  e
bypass    ctx shouldbypass
if  ctx shouldcomplete
break
return bypass
void postmove final hregioninfo region  final servername srcserver  final servername destserver
throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postmove
ctx  region  srcserver  destserver
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
boolean preassign final hregioninfo regioninfo  throws ioexception
boolean bypass   false
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver  env getinstance    preassign ctx  regioninfo
catch  throwable e
handlecoprocessorthrowable env  e
bypass    ctx shouldbypass
if  ctx shouldcomplete
break
return bypass
void postassign final hregioninfo regioninfo  throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postassign ctx  regioninfo
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
boolean preunassign final hregioninfo regioninfo  final boolean force
throws ioexception
boolean bypass   false
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    preunassign
ctx  regioninfo  force
catch  throwable e
handlecoprocessorthrowable env  e
bypass    ctx shouldbypass
if  ctx shouldcomplete
break
return bypass
void postunassign final hregioninfo regioninfo  final boolean force
throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postunassign
ctx  regioninfo  force
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
boolean prebalance   throws ioexception
boolean bypass   false
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    prebalance ctx
catch  throwable e
handlecoprocessorthrowable env  e
bypass    ctx shouldbypass
if  ctx shouldcomplete
break
return bypass
void postbalance   throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postbalance ctx
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
boolean prebalanceswitch final boolean b  throws ioexception
boolean balance   b
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
balance     masterobserver env getinstance    prebalanceswitch
ctx  balance
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
return balance
void postbalanceswitch final boolean oldvalue  final boolean newvalue
throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    postbalanceswitch
ctx  oldvalue  newvalue
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void preshutdown   throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    preshutdown ctx
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void prestopmaster   throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    prestopmaster ctx
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break
void poststartmaster   throws ioexception
observercontext<mastercoprocessorenvironment> ctx   null
for  masterenvironment env  coprocessors
if  env getinstance   instanceof masterobserver
ctx   observercontext createandprepare env  ctx
try
masterobserver env getinstance    poststartmaster ctx
catch  throwable e
handlecoprocessorthrowable env  e
if  ctx shouldcomplete
break