/*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase security token
import java io ioexception
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hbase coprocessorenvironment
import org apache hadoop hbase coprocessor baseendpointcoprocessor
import org apache hadoop hbase coprocessor regioncoprocessorenvironment
import org apache hadoop hbase ipc requestcontext
import org apache hadoop hbase ipc rpcserver
import org apache hadoop hbase ipc secureserver
import org apache hadoop hbase security accessdeniedexception
import org apache hadoop hbase security user
import org apache hadoop security usergroupinformation
import org apache hadoop security token secretmanager
import org apache hadoop security token token
/**
* provides a service for obtaining authentication tokens via the
* {@link authenticationprotocol} coprocessor protocol.
*/
public class tokenprovider extends baseendpointcoprocessor
implements authenticationprotocol
public static final long version   0l
private static log log   logfactory getlog tokenprovider class
private authenticationtokensecretmanager secretmanager
@override
public void start coprocessorenvironment env
super start env
// if running at region
if  env instanceof regioncoprocessorenvironment
regioncoprocessorenvironment regionenv
regioncoprocessorenvironment env
rpcserver server   regionenv getregionserverservices   getrpcserver
if  server instanceof secureserver
secretmanager mgr     secureserver server  getsecretmanager
if  mgr instanceof authenticationtokensecretmanager
secretmanager    authenticationtokensecretmanager mgr
@override
public token<authenticationtokenidentifier> getauthenticationtoken
throws ioexception
if  secretmanager    null
throw new ioexception
user currentuser   requestcontext getrequestuser
usergroupinformation ugi   null
if  currentuser    null
ugi   currentuser getugi
if  currentuser    null
throw new accessdeniedexception
else if  ugi getauthenticationmethod
usergroupinformation authenticationmethod kerberos
log warn   currentuser getname
ugi getauthenticationmethod
throw new accessdeniedexception
return secretmanager generatetoken currentuser getname
@override
public string whoami
return requestcontext getrequestusername
@override
public long getprotocolversion string protocol  long clientversion
throws ioexception
if  authenticationprotocol class getname   equals protocol
return tokenprovider version
log warn   protocol
return  1