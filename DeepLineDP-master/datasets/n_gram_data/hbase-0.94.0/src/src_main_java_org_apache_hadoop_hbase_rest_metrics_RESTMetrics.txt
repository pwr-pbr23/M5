/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*   http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase rest metrics
import org apache hadoop hbase metrics metricsrate
import org apache hadoop metrics metricscontext
import org apache hadoop metrics metricsrecord
import org apache hadoop metrics metricsutil
import org apache hadoop metrics updater
import org apache hadoop metrics jvm jvmmetrics
import org apache hadoop metrics util metricsregistry
public class restmetrics implements updater
private final metricsrecord metricsrecord
private final metricsregistry registry   new metricsregistry
private final reststatistics reststatistics
private metricsrate requests   new metricsrate    registry
private metricsrate sucessfulgetcount
new metricsrate    registry
private metricsrate sucessfulputcount
new metricsrate    registry
private metricsrate sucessfuldeletecount
new metricsrate    registry
private metricsrate failedgetcount
new metricsrate    registry
private metricsrate failedputcount
new metricsrate    registry
private metricsrate faileddeletecount
new metricsrate    registry
public restmetrics
metricscontext context   metricsutil getcontext
metricsrecord   metricsutil createrecord context
string name   thread currentthread   getname
metricsrecord settag    name
context registerupdater this
jvmmetrics init    name
// expose the mbean for metrics
reststatistics   new reststatistics registry
public void shutdown
if  reststatistics    null
reststatistics shutdown
/**
* since this object is a registered updater, this method will be called
* periodically, e.g. every 5 seconds.
* @param unused
*/
public void doupdates metricscontext unused
synchronized  this
requests pushmetric metricsrecord
sucessfulgetcount pushmetric metricsrecord
sucessfulputcount pushmetric metricsrecord
sucessfuldeletecount pushmetric metricsrecord
failedgetcount pushmetric metricsrecord
failedputcount pushmetric metricsrecord
faileddeletecount pushmetric metricsrecord
this metricsrecord update
public void resetallminmax
// nothing to do
/**
* @return count of requests.
*/
public float getrequests
return requests getpreviousintervalvalue
/**
* @param inc how much to add to requests.
*/
public void incrementrequests final int inc
requests inc inc
/**
* @return count of sucessfulgetcount.
*/
public float getsucessfulgetcount
return sucessfulgetcount getpreviousintervalvalue
/**
* @param inc how much to add to sucessfulgetcount.
*/
public void incrementsucessfulgetrequests final int inc
sucessfulgetcount inc inc
/**
* @return count of sucessfulgetcount.
*/
public float getsucessfulputcount
return sucessfulputcount getpreviousintervalvalue
/**
* @param inc how much to add to sucessfulputcount.
*/
public void incrementsucessfulputrequests final int inc
sucessfulputcount inc inc
/**
* @return count of failedputcount.
*/
public float getfailedputcount
return failedputcount getpreviousintervalvalue
/**
* @param inc how much to add to failedputcount.
*/
public void incrementfailedputrequests final int inc
failedputcount inc inc
/**
* @return count of failedgetcount.
*/
public float getfailedgetcount
return failedgetcount getpreviousintervalvalue
/**
* @param inc how much to add to failedgetcount.
*/
public void incrementfailedgetrequests final int inc
failedgetcount inc inc
/**
* @return count of sucessfulgetcount.
*/
public float getsucessfuldeletecount
return sucessfuldeletecount getpreviousintervalvalue
/**
* @param inc how much to add to sucessfuldeletecount.
*/
public void incrementsucessfuldeleterequests final int inc
sucessfuldeletecount inc inc
/**
* @return count of faileddeletecount.
*/
public float getfaileddeletecount
return faileddeletecount getpreviousintervalvalue
/**
* @param inc how much to add to faileddeletecount.
*/
public void incrementfaileddeleterequests final int inc
faileddeletecount inc inc