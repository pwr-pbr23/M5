/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*   http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase rest
import org apache commons cli commandline
import org apache commons cli helpformatter
import org apache commons cli options
import org apache commons cli posixparser
import org apache commons cli parseexception
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase hbaseconfiguration
import org apache hadoop hbase rest filter gzipfilter
import org apache hadoop hbase security user
import org apache hadoop hbase util strings
import org apache hadoop hbase util versioninfo
import org apache hadoop net dns
import java util list
import java util arraylist
import org mortbay jetty connector
import org mortbay jetty server
import org mortbay jetty nio selectchannelconnector
import org mortbay jetty servlet context
import org mortbay jetty servlet servletholder
import com sun jersey spi container servlet servletcontainer
/**
* main class for launching rest gateway as a servlet hosted by jetty.
* <p>
* the following options are supported:
* <ul>
* <li>-p --port : service port</li>
* <li>-ro --readonly : server mode</li>
* </ul>
*/
public class main implements constants
private static void printusageandexit options options  int exitcode
helpformatter formatter   new helpformatter
formatter printhelp       options
true
system exit exitcode
/**
* the main method for the hbase rest server.
* @param args command-line arguments
* @throws exception exception
*/
public static void main string args  throws exception
log log   logfactory getlog
versioninfo logversion
configuration conf   hbaseconfiguration create
restservlet servlet   restservlet getinstance conf
options options   new options
options addoption       true
options addoption       false
commandline commandline   null
try
commandline   new posixparser   parse options  args
catch  parseexception e
log error    e
printusageandexit options   1
// check for user-defined port setting, if so override the conf
if  commandline    null    commandline hasoption
string val   commandline getoptionvalue
servlet getconfiguration
setint    integer valueof val
log debug     val
// check if server should only process get requests, if so override the conf
if  commandline    null    commandline hasoption
servlet getconfiguration   setboolean    true
log debug
@suppresswarnings
list<string> remainingargs   commandline    null ?
commandline getarglist     new arraylist<string>
if  remainingargs size      1
printusageandexit options  1
string command   remainingargs get 0
if    equals command
// continue and start container
else if    equals command
system exit 1
else
printusageandexit options  1
// set up the jersey servlet container for jetty
servletholder sh   new servletholder servletcontainer class
sh setinitparameter
resourceconfig class getcanonicalname
sh setinitparameter
// set up jetty and run the embedded server
server server   new server
connector connector   new selectchannelconnector
connector setport servlet getconfiguration   getint    8080
connector sethost servlet getconfiguration   get
server addconnector connector
server setsendserverversion false
server setsenddateheader false
server setstopatshutdown true
// set up context
context context   new context server     context sessions
context addservlet sh
context addfilter gzipfilter class     0
// login the server principal (if using secure hadoop)
if  user issecurityenabled      user ishbasesecurityenabled conf
string machinename   strings domainnamepointertohostname
dns getdefaulthost conf get
conf get
user login conf
machinename
// start server
server start
server join