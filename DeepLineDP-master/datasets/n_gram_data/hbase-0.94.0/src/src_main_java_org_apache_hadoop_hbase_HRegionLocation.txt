/**
* copyright 2007 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase
import org apache hadoop hbase util addressing
/**
* data structure to hold hregioninfo and the address for the hosting
* hregionserver.  immutable.  comparable, but we compare the 'location' only:
* i.e. the hostname and port, and *not* the regioninfo.  this means two
* instances are the same if they refer to the same 'location' (the same
* hostname and port), though they may be carrying different regions.
*/
public class hregionlocation implements comparable<hregionlocation>
private final hregioninfo regioninfo
private final string hostname
private final int port
// cache of the 'tostring' result.
private string cachedstring   null
// cache of the hostname + port
private string cachedhostnameport
/**
* constructor
* @param regioninfo the hregioninfo for the region
* @param hostname hostname
* @param port port
*/
public hregionlocation hregioninfo regioninfo  final string hostname
final int port
this regioninfo   regioninfo
this hostname   hostname
this port   port
/**
* @see java.lang.object#tostring()
*/
@override
public synchronized string tostring
if  this cachedstring    null
this cachedstring       this regioninfo getregionnameasstring
this hostname       this port
return this cachedstring
/**
* @see java.lang.object#equals(java.lang.object)
*/
@override
public boolean equals object o
if  this    o
return true
if  o    null
return false
if    o instanceof hregionlocation
return false
return this compareto  hregionlocation o     0
/**
* @see java.lang.object#hashcode()
*/
@override
public int hashcode
int result   this hostname hashcode
result ^  this port
return result
/** @return hregioninfo */
public hregioninfo getregioninfo
return regioninfo
/**
* do not use!!! creates a hserveraddress instance which will do a resolve.
* @return hserveraddress
* @deprecated use {@link #gethostnameport}
*/
public hserveraddress getserveraddress
return new hserveraddress this hostname  this port
public string gethostname
return this hostname
public int getport
return this port
/**
* @return string made of hostname and port formatted as per {@link addressing#createhostandportstr(string, int)}
*/
public synchronized string gethostnameport
if  this cachedhostnameport    null
this cachedhostnameport
addressing createhostandportstr this hostname  this port
return this cachedhostnameport
//
// comparable
//
public int compareto hregionlocation o
int result   this hostname compareto o gethostname
if  result    0  return result
return this port   o getport