/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase regionserver
import org apache hadoop hbase server
import java io ioexception
import java util list
/**
* interface to map of online regions.  in the  map, the key is the region's
* encoded name and the value is an {@link hregion} instance.
*/
interface onlineregions extends server
/**
* add to online regions.
* @param r
*/
public void addtoonlineregions final hregion r
/**
* this method removes hregion corresponding to hri from the map of onlineregions.
*
* @param encodedregionname
* @return true if we removed a region from online list.
*/
public boolean removefromonlineregions string encodedregionname
/**
* return {@link hregion} instance.
* only works if caller is in same context, in same jvm. hregion is not
* serializable.
* @param encodedregionname
* @return hregion for the passed encoded <code>encodedregionname</code> or
* null if named region is not member of the online regions.
*/
public hregion getfromonlineregions string encodedregionname
/**
* get all online regions of a table in this rs.
* @param tablename
* @return list of hregion
* @throws java.io.ioexception
*/
public list<hregion> getonlineregions byte tablename  throws ioexception