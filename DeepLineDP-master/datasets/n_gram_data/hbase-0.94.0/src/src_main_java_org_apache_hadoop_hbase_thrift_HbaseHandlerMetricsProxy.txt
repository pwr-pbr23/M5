/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase thrift
import java lang reflect invocationhandler
import java lang reflect invocationtargetexception
import java lang reflect method
import java lang reflect proxy
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase thrift generated hbase
/**
* converts a hbase.iface using invocationhandler so that it reports process
* time of each call to thriftmetrics.
*/
public class hbasehandlermetricsproxy implements invocationhandler
public static final log log   logfactory getlog
hbasehandlermetricsproxy class
private final hbase iface handler
private final thriftmetrics metrics
public static hbase iface newinstance hbase iface handler
thriftmetrics metrics
configuration conf
return  hbase iface  proxy newproxyinstance
handler getclass   getclassloader
new class hbase iface class
new hbasehandlermetricsproxy handler  metrics  conf
private hbasehandlermetricsproxy
hbase iface handler  thriftmetrics metrics  configuration conf
this handler   handler
this metrics   metrics
@override
public object invoke object proxy  method m  object args
throws throwable
object result
try
long start   now
result   m invoke handler  args
int processtime    int  now     start
metrics incmethodtime m getname    processtime
catch  invocationtargetexception e
throw e gettargetexception
catch  exception e
throw new runtimeexception
e getmessage
return result
private static long now
return system nanotime