/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase metrics
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop metrics metricsrecord
import org apache hadoop metrics util metricsbase
import org apache hadoop metrics util metricsregistry
import org apache hadoop util stringutils
/**
* publishes a rate based on a counter - you increment the counter each
* time an event occurs (eg: an rpc call) and this publishes a rate.
*/
public class metricsrate extends metricsbase
private static final log log   logfactory getlog
private int value
private float prevrate
private long ts
public metricsrate final string name  final metricsregistry registry
final string description
super name  description
this value   0
this prevrate   0
this ts   system currenttimemillis
registry add name  this
public metricsrate final string name  final metricsregistry registry
this name  registry  no_description
public synchronized void inc final int incr
value    incr
public synchronized void inc
value
public synchronized void intervalheartbeat
long now   system currenttimemillis
long diff    now ts    1000
if  diff < 1
// to make sure our averages aren't skewed by fast repeated calls,
// we simply ignore fast repeated calls.
return
this prevrate    float value   diff
this value   0
this ts   now
@override
public synchronized void pushmetric final metricsrecord mr
intervalheartbeat
try
mr setmetric getname    getpreviousintervalvalue
catch  exception e
log info     getname
stringutils stringifyexception e
public synchronized float getpreviousintervalvalue
return this prevrate