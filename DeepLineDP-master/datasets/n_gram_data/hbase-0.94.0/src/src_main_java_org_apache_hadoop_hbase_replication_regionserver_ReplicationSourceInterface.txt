/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase replication regionserver
import java io ioexception
import java util concurrent atomic atomicboolean
import org apache hadoop conf configuration
import org apache hadoop fs filesystem
import org apache hadoop fs path
import org apache hadoop hbase stoppable
/**
* interface that defines a replication source
*/
public interface replicationsourceinterface
/**
* initializer for the source
* @param conf the configuration to use
* @param fs the file system to use
* @param manager the manager to use
* @param stopper the stopper object for this region server
* @param replicating the status of the replication on this cluster
* @param peerclusterid the id of the peer cluster
* @throws ioexception
*/
public void init final configuration conf
final filesystem fs
final replicationsourcemanager manager
final stoppable stopper
final atomicboolean replicating
final string peerclusterid  throws ioexception
/**
* add a log to the list of logs to replicate
* @param log path to the log to replicate
*/
public void enqueuelog path log
/**
* get the current log that's replicated
* @return the current log
*/
public path getcurrentpath
/**
* start the replication
*/
public void startup
/**
* end the replication
* @param reason why it's terminating
*/
public void terminate string reason
/**
* end the replication
* @param reason why it's terminating
* @param cause the error that's causing it
*/
public void terminate string reason  exception cause
/**
* get the id that the source is replicating to
*
* @return peer cluster id
*/
public string getpeerclusterznode
/**
* get the id that the source is replicating to.
*
* @return peer cluster id
*/
public string getpeerclusterid