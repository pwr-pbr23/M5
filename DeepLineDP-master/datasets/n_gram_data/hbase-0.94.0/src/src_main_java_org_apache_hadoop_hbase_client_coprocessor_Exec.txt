/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase client coprocessor
import org apache hadoop conf configuration
import org apache hadoop hbase hbaseconfiguration
import org apache hadoop hbase client row
import org apache hadoop hbase io hbaseobjectwritable
import org apache hadoop hbase ipc coprocessorprotocol
import org apache hadoop hbase ipc invocation
import org apache hadoop hbase util bytes
import org apache hadoop hbase util classes
import java io datainput
import java io dataoutput
import java io ioexception
import java lang reflect method
/**
* represents an arbitrary method invocation against a coprocessor
* instance.  in order for a coprocessor implementation to be remotely callable
* by clients, it must define and implement a {@link coprocessorprotocol}
* subclass.  only methods defined in the {@code coprocessorprotocol} interface
* will be callable by clients.
*
* <p>
* this class is used internally by
* {@link org.apache.hadoop.hbase.client.htable#coprocessorexec(class, byte[], byte[], org.apache.hadoop.hbase.client.coprocessor.batch.call, org.apache.hadoop.hbase.client.coprocessor.batch.callback)}
* to wrap the {@code coprocessorprotocol} method invocations requested in
* rpc calls.  it should not be used directly by hbase clients.
* </p>
*
* @see execresult
* @see org.apache.hadoop.hbase.client.htable#coprocessorexec(class, byte[], byte[], org.apache.hadoop.hbase.client.coprocessor.batch.call)
* @see org.apache.hadoop.hbase.client.htable#coprocessorexec(class, byte[], byte[], org.apache.hadoop.hbase.client.coprocessor.batch.call, org.apache.hadoop.hbase.client.coprocessor.batch.callback)
*/
public class exec extends invocation implements row
/** row key used as a reference for any region lookups */
private byte referencerow
private class<? extends coprocessorprotocol> protocol
private string protocolname
public exec
public exec configuration configuration
byte row
class<? extends coprocessorprotocol> protocol
method method  object parameters
super method  parameters
this conf   configuration
this referencerow   row
this protocol   protocol
this protocolname   protocol getname
public string getprotocolname
return protocolname
public class<? extends coprocessorprotocol> getprotocol
return protocol
public byte getrow
return referencerow
public int compareto row row
return bytes compareto referencerow  row getrow
@override
public void write dataoutput out  throws ioexception
// fields for invocation
out writeutf this methodname
out writeint parameterclasses length
for  int i   0  i < parameterclasses length  i
hbaseobjectwritable writeobject out  parameters
parameters    null ? parameters getclass     parameterclasses
conf
out writeutf parameterclasses getname
// fields for exec
bytes writebytearray out  referencerow
out writeutf protocol getname
@override
public void readfields datainput in  throws ioexception
// fields for invocation
methodname   in readutf
parameters   new object
parameterclasses   new class
hbaseobjectwritable objectwritable   new hbaseobjectwritable
for  int i   0  i < parameters length  i
parameters   hbaseobjectwritable readobject in  objectwritable
this conf
string parameterclassname   in readutf
try
parameterclasses   classes extendedforname parameterclassname
catch  classnotfoundexception e
throw new ioexception     parameterclassname
// fields for exec
referencerow   bytes readbytearray in
protocolname   in readutf