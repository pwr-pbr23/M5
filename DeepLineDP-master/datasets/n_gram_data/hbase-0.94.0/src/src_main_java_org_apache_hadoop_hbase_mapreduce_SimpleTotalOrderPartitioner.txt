/**
* copyright 2009 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase mapreduce
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configurable
import org apache hadoop conf configuration
import org apache hadoop hbase io immutablebyteswritable
import org apache hadoop hbase util base64
import org apache hadoop hbase util bytes
import org apache hadoop mapreduce partitioner
/**
* a partitioner that takes start and end keys and uses bigdecimal to figure
* which reduce a key belongs to.  pass the start and end
* keys in the configuration using <code>hbase.simpletotalorder.start</code>
* and <code>hbase.simpletotalorder.end</code>.  the end key needs to be
* exclusive; i.e. one larger than the biggest key in your key space.
* you may be surprised at how this class partitions the space; it may not
* align with preconceptions; e.g. a start key of zero and an end key of 100
* divided in ten will not make regions whose range is 0-10, 10-20, and so on.
* make your own partitioner if you need the region spacing to come out a
* particular way.
* @param <value>
* @see #start
* @see #end
*/
public class simpletotalorderpartitioner<value> extends partitioner<immutablebyteswritable  value>
implements configurable
private final static log log   logfactory getlog simpletotalorderpartitioner class
@deprecated
public static final string start
@deprecated
public static final string end
static final string start_base64
static final string end_base64
private configuration c
private byte  startkey
private byte  endkey
private byte  splits
private int lastreduces    1
public static void setstartkey configuration conf  byte startkey
conf set start_base64  base64 encodebytes startkey
public static void setendkey configuration conf  byte endkey
conf set end_base64  base64 encodebytes endkey
@suppresswarnings
static byte getstartkey configuration conf
return getkeyfromconf conf  start_base64  start
@suppresswarnings
static byte getendkey configuration conf
return getkeyfromconf conf  end_base64  end
private static byte getkeyfromconf configuration conf
string base64key  string deprecatedkey
string encoded   conf get base64key
if  encoded    null
return base64 decode encoded
string oldstyleval   conf get deprecatedkey
if  oldstyleval    null
return null
log warn     deprecatedkey
return bytes tobytes oldstyleval
@override
public int getpartition final immutablebyteswritable key  final value value
final int reduces
if  reduces    1  return 0
if  this lastreduces    reduces
this splits   bytes split this startkey  this endkey  reduces   1
for  int i   0  i < splits length  i
log info bytes tostringbinary splits
int pos   bytes binarysearch this splits  key get    key getoffset
key getlength    bytes bytes_rawcomparator
// below code is from hfile index search.
if  pos < 0
pos
pos     1
if  pos    0
// falls before the beginning of the file.
throw new runtimeexception
key tostring
pos
return pos
@override
public configuration getconf
return this c
@override
public void setconf configuration conf
this c   conf
this startkey   getstartkey conf
this endkey   getendkey conf
if  startkey    null    endkey    null
throw new runtimeexception this getclass
log info     bytes tostringbinary startkey
bytes tostringbinary endkey