/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase master handler
import java io ioexception
import java util arraylist
import java util arrays
import java util list
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase htabledescriptor
import org apache hadoop hbase notallmetaregionsonlineexception
import org apache hadoop hbase server
import org apache hadoop hbase servername
import org apache hadoop hbase tableexistsexception
import org apache hadoop hbase catalog catalogtracker
import org apache hadoop hbase catalog metaeditor
import org apache hadoop hbase catalog metareader
import org apache hadoop hbase executor eventhandler
import org apache hadoop hbase master assignmentmanager
import org apache hadoop hbase master masterfilesystem
import org apache hadoop hbase master servermanager
import org apache hadoop hbase regionserver hregion
import org apache hadoop hbase regionserver wal hlog
import org apache hadoop hbase util fstabledescriptors
import org apache zookeeper keeperexception
/**
* handler to create a table.
*/
public class createtablehandler extends eventhandler
private static final log log   logfactory getlog createtablehandler class
private masterfilesystem filesystemmanager
private final htabledescriptor htabledescriptor
private configuration conf
private final assignmentmanager assignmentmanager
private final catalogtracker catalogtracker
private final servermanager servermanager
private final hregioninfo  newregions
public createtablehandler server server  masterfilesystem filesystemmanager
servermanager servermanager  htabledescriptor htabledescriptor
configuration conf  hregioninfo  newregions
catalogtracker catalogtracker  assignmentmanager assignmentmanager
throws notallmetaregionsonlineexception  tableexistsexception
ioexception
super server  eventtype c_m_create_table
this filesystemmanager   filesystemmanager
this servermanager   servermanager
this htabledescriptor   htabledescriptor
this conf   conf
this newregions   newregions
this catalogtracker   catalogtracker
this assignmentmanager   assignmentmanager
int timeout   conf getint    10000
// need meta availability to create a table
try
if catalogtracker waitformeta timeout     null
throw new notallmetaregionsonlineexception
catch  interruptedexception e
log warn    e
throw new ioexception e
string tablename   this htabledescriptor getnameasstring
if  metareader tableexists catalogtracker  tablename
throw new tableexistsexception tablename
// if we have multiple client threads trying to create the table at the
// same time, given the async nature of the operation, the table
// could be in a state where .meta. table hasn't been updated yet in
// the process() function.
// use enabling state to tell if there is already a request for the same
// table in progress. this will introduce a new zookeeper call. given
// createtable isn't a frequent operation, that should be ok.
try
if   this assignmentmanager getzktable   checkandsetenablingtable
tablename
throw new tableexistsexception tablename
catch  keeperexception e
throw new ioexception
e
@override
public string tostring
string name
if server    null    server getservername      null
name   server getservername   tostring
return getclass   getsimplename         name       getseqid
this htabledescriptor getnameasstring
@override
public void process
string tablename   this htabledescriptor getnameasstring
try
log info     tablename
handlecreatetable
catch  ioexception e
log error     tablename  e
catch  keeperexception e
log error     tablename  e
private void handlecreatetable   throws ioexception  keeperexception
// todo: currently we make the table descriptor and as side-effect the
// tabledir is created.  should we change below method to be createtable
// where we create table in tmp dir with its table descriptor file and then
// do rename to move it into place?
fstabledescriptors createtabledescriptor this htabledescriptor  this conf
list<hregioninfo> regioninfos   new arraylist<hregioninfo>
final int batchsize
this conf getint    100
hlog hlog   null
for  int regionidx   0  regionidx < this newregions length  regionidx
hregioninfo newregion   this newregions
// 1. create hregion
hregion region   hregion createhregion newregion
this filesystemmanager getrootdir    this conf
this htabledescriptor  hlog
if  hlog    null
hlog   region getlog
regioninfos add region getregioninfo
if  regionidx % batchsize    0
// 2. insert into meta
metaeditor addregionstometa this catalogtracker  regioninfos
regioninfos clear
// 3. close the new region to flush to disk.  close log file too.
region close
hlog closeanddelete
if  regioninfos size   > 0
metaeditor addregionstometa this catalogtracker  regioninfos
// 4. trigger immediate assignment of the regions in round-robin fashion
list<servername> servers   servermanager getonlineserverslist
// remove the deadnotexpired servers from the server list.
assignmentmanager removedeadnotexpiredservers servers
try
this assignmentmanager assignuserregions arrays aslist newregions
servers
catch  interruptedexception ie
log error     ie
throw new ioexception ie
// 5. set table enabled flag up in zk.
try
assignmentmanager getzktable
setenabledtable this htabledescriptor getnameasstring
catch  keeperexception e
throw new ioexception
e