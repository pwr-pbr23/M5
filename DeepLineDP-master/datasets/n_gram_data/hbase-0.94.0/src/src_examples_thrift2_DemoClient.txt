/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase thrift2
import java nio bytebuffer
import java util arraylist
import java util list
import org apache hadoop hbase thrift2 generated tcolumnvalue
import org apache hadoop hbase thrift2 generated tget
import org apache hadoop hbase thrift2 generated thbaseservice
import org apache hadoop hbase thrift2 generated tioerror
import org apache hadoop hbase thrift2 generated tput
import org apache hadoop hbase thrift2 generated tresult
import org apache thrift texception
import org apache thrift protocol tbinaryprotocol
import org apache thrift protocol tprotocol
import org apache thrift transport tframedtransport
import org apache thrift transport tsocket
import org apache thrift transport ttransport
public class democlient
public static void main string args  throws tioerror  texception
system out println
system out println  example  family1
string host
int port   9090
int timeout   10000
boolean framed   false
ttransport transport   new tsocket host  port  timeout
if  framed
transport   new tframedtransport transport
tprotocol protocol   new tbinaryprotocol transport
// this is our thrift client.
thbaseservice iface client   new thbaseservice client protocol
// open the transport
transport open
bytebuffer table   bytebuffer wrap   getbytes
tput put   new tput
put setrow   getbytes
tcolumnvalue columnvalue   new tcolumnvalue
columnvalue setfamily   getbytes
columnvalue setqualifier   getbytes
columnvalue setvalue   getbytes
list<tcolumnvalue> columnvalues   new arraylist<tcolumnvalue>
columnvalues add columnvalue
put setcolumnvalues columnvalues
client put table  put
tget get   new tget
get setrow   getbytes
tresult result   client get table  get
system out print     new string result getrow
for  tcolumnvalue resultcolumnvalue   result getcolumnvalues
system out print     new string resultcolumnvalue getfamily
system out print     new string resultcolumnvalue getfamily
system out print     new string resultcolumnvalue getvalue
system out print     resultcolumnvalue gettimestamp
transport close