/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase util
import java lang reflect array
import java util arraylist
import java util collections
import java util comparator
import java util hashmap
import java util list
import org apache hadoop hbase keyvalue
import org apache hadoop hbase client action
import org apache hadoop hbase client delete
import org apache hadoop hbase client get
import org apache hadoop hbase client increment
import org apache hadoop hbase client multiaction
import org apache hadoop hbase client put
/**
* utility methods for interacting with object instances.
*/
public class objects
private static class quantitymap extends hashmap<string quantity>
public void increment string type  int count
quantity q   get type
if  q    null
q   new quantity
q what   type
put type  q
q increment count
public void stat string type  int value
quantity q   get type
if  q    null
q   new stat
q what   type
put type  q
q increment value
private static class quantity
int count
string what
public void increment int amount
count    amount
public void appendtostring stringbuilder out
if  out length   > 0  out append
out append count  append    append what
if  count    1     what endswith
out append
private static class stat extends quantity
int min
int max
long total
public void increment int amount
if  count    0
min   max   amount
else
min   math min min  amount
max   math max max  amount
total    amount
count
public void appendtostring stringbuilder out
super appendtostring out
out append
if  count > 0
out append    append min
append    append max
append    append  int  total count
else
out append
out append
private static class quantitycomparator implements comparator<quantity>
@override
public int compare quantity q1  quantity q2
if  q1 count < q2 count
return  1
else if  q1 count > q2 count
return 1
return 0
/**
* attempts to construct a text description of the given object, by
* introspecting known classes and building a description of size.
* @param obj
* @return description
*/
public static string describequantity object obj
stringbuilder str   new stringbuilder
quantitymap quantities   new quantitymap
quantify obj  quantities
list<quantity> totals   new arraylist<quantity> quantities values
collections sort totals  new quantitycomparator
for  quantity q   totals
q appendtostring str
return str tostring
public static void quantify object obj  quantitymap quantities
if  obj    null
return
if  obj getclass   isarray
class type   obj getclass   getcomponenttype
int length   array getlength obj
if  type isprimitive
quantities increment type getsimplename    length
else
for  int i 0  i<length  i
quantify array get obj  i   quantities
else if  obj instanceof iterable
for  object child     iterable obj
quantify child  quantities
else if  obj instanceof multiaction
multiaction multi    multiaction obj
quantify multi allactions    quantities
else if  obj instanceof action
quantify   action obj  getaction    quantities
else if  obj instanceof put
quantities increment    1
quantities increment      put obj  size
for  list<keyvalue> keyvalues     put obj  getfamilymap   values
for  keyvalue kv   keyvalues
quantities stat    kv getvaluelength
else if  obj instanceof delete
quantities increment    1
for  list<keyvalue> kvs     delete obj  getfamilymap   values
quantities increment    kvs size
else if  obj instanceof increment
quantities increment    1
quantities increment      increment obj  numcolumns
else if  obj instanceof get
quantities increment    1
else
string type   obj getclass   getsimplename
quantities increment type  1