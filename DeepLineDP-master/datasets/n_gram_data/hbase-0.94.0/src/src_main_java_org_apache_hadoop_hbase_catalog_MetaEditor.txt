/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase catalog
import java io ioexception
import java net connectexception
import java util arraylist
import java util list
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hbase hconstants
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase notallmetaregionsonlineexception
import org apache hadoop hbase servername
import org apache hadoop hbase client delete
import org apache hadoop hbase client htable
import org apache hadoop hbase client put
import org apache hadoop hbase client result
import org apache hadoop hbase util bytes
import org apache hadoop hbase util writables
/**
* writes region and assignment information to <code>.meta.</code>.
* todo: put metareader and metaeditor together; doesn't make sense having
* them distinct.
*/
public class metaeditor
// todo: strip catalogtracker from this class.  its all over and in the end
// its only used to get its configuration so we can get associated
// connection.
private static final log log   logfactory getlog metaeditor class
private static put makeputfromregioninfo hregioninfo regioninfo
throws ioexception
put put   new put regioninfo getregionname
put add hconstants catalog_family  hconstants regioninfo_qualifier
writables getbytes regioninfo
return put
/**
* put the passed <code>p</code> to the <code>.meta.</code> table.
* @param ct catalogtracker on whose back we will ride the edit.
* @param p put to add to .meta.
* @throws ioexception
*/
static void puttometatable final catalogtracker ct  final put p
throws ioexception
put metareader getmetahtable ct   p
/**
* put the passed <code>p</code> to the <code>.meta.</code> table.
* @param ct catalogtracker on whose back we will ride the edit.
* @param p put to add to .meta.
* @throws ioexception
*/
static void puttoroottable final catalogtracker ct  final put p
throws ioexception
put metareader getroothtable ct   p
/**
* put the passed <code>p</code> to a catalog table.
* @param ct catalogtracker on whose back we will ride the edit.
* @param p put to add
* @throws ioexception
*/
static void puttocatalogtable final catalogtracker ct  final put p
throws ioexception
htable t   metareader getcataloghtable ct  p getrow
put t  p
/**
* @param t table to use (will be closed when done).
* @param p
* @throws ioexception
*/
private static void put final htable t  final put p  throws ioexception
try
t put p
finally
t close
/**
* put the passed <code>ps</code> to the <code>.meta.</code> table.
* @param ct catalogtracker on whose back we will ride the edit.
* @param ps put to add to .meta.
* @throws ioexception
*/
static void putstometatable final catalogtracker ct  final list<put> ps
throws ioexception
htable t   metareader getmetahtable ct
try
t put ps
finally
t close
/**
* delete the passed <code>d</code> from the <code>.meta.</code> table.
* @param ct catalogtracker on whose back we will ride the edit.
* @param d delete to add to .meta.
* @throws ioexception
*/
static void deletemetatable final catalogtracker ct  final delete d
throws ioexception
htable t   metareader getmetahtable ct
try
t delete d
finally
t close
/**
* adds a meta row for the specified new region.
* @param regioninfo region information
* @throws ioexception if problem connecting or updating meta
*/
public static void addregiontometa catalogtracker catalogtracker
hregioninfo regioninfo
throws ioexception
puttometatable catalogtracker  makeputfromregioninfo regioninfo
log info     regioninfo getregionnameasstring
/**
* adds a meta row for each of the specified new regions.
* @param catalogtracker catalogtracker
* @param regioninfos region information list
* @throws ioexception if problem connecting or updating meta
*/
public static void addregionstometa catalogtracker catalogtracker
list<hregioninfo> regioninfos
throws ioexception
list<put> puts   new arraylist<put>
for  hregioninfo regioninfo   regioninfos
puts add makeputfromregioninfo regioninfo
putstometatable catalogtracker  puts
log info     puts size
/**
* offline parent in meta.
* used when splitting.
* @param catalogtracker
* @param parent
* @param a split daughter region a
* @param b split daughter region b
* @throws notallmetaregionsonlineexception
* @throws ioexception
*/
public static void offlineparentinmeta catalogtracker catalogtracker
hregioninfo parent  final hregioninfo a  final hregioninfo b
throws notallmetaregionsonlineexception  ioexception
hregioninfo copyofparent   new hregioninfo parent
copyofparent setoffline true
copyofparent setsplit true
put put   new put copyofparent getregionname
addregioninfo put  copyofparent
put add hconstants catalog_family  hconstants splita_qualifier
writables getbytes a
put add hconstants catalog_family  hconstants splitb_qualifier
writables getbytes b
puttometatable catalogtracker  put
log info     parent getregionnameasstring
public static void adddaughter final catalogtracker catalogtracker
final hregioninfo regioninfo  final servername sn
throws notallmetaregionsonlineexception  ioexception
put put   new put regioninfo getregionname
addregioninfo put  regioninfo
if  sn    null  addlocation put  sn
puttometatable catalogtracker  put
log info     regioninfo getregionnameasstring
sn    null?        sn tostring
/**
* updates the location of the specified meta region in root to be the
* specified server hostname and startcode.
* <p>
* uses passed catalog tracker to get a connection to the server hosting
* root and makes edits to that region.
*
* @param catalogtracker catalog tracker
* @param regioninfo region to update location of
* @param sn server name
* @throws ioexception
* @throws connectexception usually because the regionserver carrying .meta.
* is down.
* @throws nullpointerexception because no -root- server connection
*/
public static void updatemetalocation catalogtracker catalogtracker
hregioninfo regioninfo  servername sn
throws ioexception  connectexception
updatelocation catalogtracker  regioninfo  sn
/**
* updates the location of the specified region in meta to be the specified
* server hostname and startcode.
* <p>
* uses passed catalog tracker to get a connection to the server hosting
* meta and makes edits to that region.
*
* @param catalogtracker catalog tracker
* @param regioninfo region to update location of
* @param sn server name
* @throws ioexception
*/
public static void updateregionlocation catalogtracker catalogtracker
hregioninfo regioninfo  servername sn
throws ioexception
updatelocation catalogtracker  regioninfo  sn
/**
* updates the location of the specified region to be the specified server.
* <p>
* connects to the specified server which should be hosting the specified
* catalog region name to perform the edit.
*
* @param catalogtracker
* @param regioninfo region to update location of
* @param sn server name
* @throws ioexception in particular could throw {@link java.net.connectexception}
* if the server is down on other end.
*/
private static void updatelocation final catalogtracker catalogtracker
hregioninfo regioninfo  servername sn
throws ioexception
put put   new put regioninfo getregionname
addlocation put  sn
puttocatalogtable catalogtracker  put
log info     regioninfo getregionnameasstring
sn
/**
* deletes the specified region from meta.
* @param catalogtracker
* @param regioninfo region to be deleted from meta
* @throws ioexception
*/
public static void deleteregion catalogtracker catalogtracker
hregioninfo regioninfo
throws ioexception
delete delete   new delete regioninfo getregionname
deletemetatable catalogtracker  delete
log info     regioninfo getregionnameasstring
/**
* deletes daughters references in offlined split parent.
* @param catalogtracker
* @param parent parent row we're to remove daughter reference from
* @throws notallmetaregionsonlineexception
* @throws ioexception
*/
public static void deletedaughtersreferencesinparent catalogtracker catalogtracker
final hregioninfo parent
throws notallmetaregionsonlineexception  ioexception
delete delete   new delete parent getregionname
delete deletecolumns hconstants catalog_family  hconstants splita_qualifier
delete deletecolumns hconstants catalog_family  hconstants splitb_qualifier
deletemetatable catalogtracker  delete
log info     bytes tostringbinary hconstants splita_qualifier
bytes tostringbinary hconstants splitb_qualifier
parent getregionnameasstring
public static hregioninfo gethregioninfo
result data  throws ioexception
byte  bytes
data getvalue hconstants catalog_family  hconstants regioninfo_qualifier
if  bytes    null  return null
hregioninfo info   writables gethregioninfo bytes
log info     info
return info
private static put addregioninfo final put p  final hregioninfo hri
throws ioexception
p add hconstants catalog_family  hconstants regioninfo_qualifier
writables getbytes hri
return p
private static put addlocation final put p  final servername sn
p add hconstants catalog_family  hconstants server_qualifier
bytes tobytes sn gethostandport
p add hconstants catalog_family  hconstants startcode_qualifier
bytes tobytes sn getstartcode
return p