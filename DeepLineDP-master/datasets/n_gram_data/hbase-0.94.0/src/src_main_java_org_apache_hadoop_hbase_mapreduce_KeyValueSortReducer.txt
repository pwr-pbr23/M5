/**
* copyright 2009 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase mapreduce
import java util treeset
import org apache hadoop hbase keyvalue
import org apache hadoop hbase io immutablebyteswritable
import org apache hadoop mapreduce reducer
/**
* emits sorted keyvalues.
* reads in all keyvalues from passed iterator, sorts them, then emits
* keyvalues in sorted order.  if lots of columns per row, it will use lots of
* memory sorting.
* @see hfileoutputformat
*/
public class keyvaluesortreducer extends reducer<immutablebyteswritable  keyvalue  immutablebyteswritable  keyvalue>
protected void reduce immutablebyteswritable row  java lang iterable<keyvalue> kvs
org apache hadoop mapreduce reducer<immutablebyteswritable  keyvalue  immutablebyteswritable  keyvalue> context context
throws java io ioexception  interruptedexception
treeset<keyvalue> map   new treeset<keyvalue> keyvalue comparator
for  keyvalue kv  kvs
map add kv clone
context setstatus     map getclass
int index   0
for  keyvalue kv  map
context write row  kv
if  index > 0    index % 100    0  context setstatus     index