/*
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase util
import java io ioexception
import java io outputstream
import java nio bytebuffer
import java nio channels channels
import java nio channels writablebytechannel
/**
* not thread safe!
*/
public class bytebufferoutputstream extends outputstream
protected bytebuffer buf
public bytebufferoutputstream int capacity
this capacity  false
public bytebufferoutputstream int capacity  boolean usedirectbytebuffer
if  usedirectbytebuffer
buf   bytebuffer allocatedirect capacity
else
buf   bytebuffer allocate capacity
public int size
return buf position
/**
* this flips the underlying bb so be sure to use it _last_!
* @return bytebuffer
*/
public bytebuffer getbytebuffer
buf flip
return buf
private void checksizeandgrow int extra
if    buf position     extra  > buf limit
// size calculation is complex, because we could overflow negative,
// and/or not allocate enough space. this fixes that.
int newsize    int math min    long buf capacity      2
long  integer max_value
newsize   math max newsize  buf position     extra
bytebuffer newbuf   bytebuffer allocate newsize
buf flip
newbuf put buf
buf   newbuf
// outputstream
@override
public void write int b  throws ioexception
checksizeandgrow bytes sizeof_byte
buf put  byte b
/**
* writes the complete contents of this byte buffer output stream to
* the specified output stream argument.
*
* @param      out   the output stream to which to write the data.
* @exception  ioexception  if an i/o error occurs.
*/
public synchronized void writeto outputstream out  throws ioexception
writablebytechannel channel   channels newchannel out
bytebuffer bb   buf duplicate
bb flip
channel write bb
@override
public void write byte b  throws ioexception
checksizeandgrow b length
buf put b
@override
public void write byte b  int off  int len  throws ioexception
checksizeandgrow len
buf put b  off  len
@override
public void flush   throws ioexception
// noop
@override
public void close   throws ioexception
// noop again. heh
public byte tobytearray int offset  int length
bytebuffer bb   buf duplicate
bb flip
byte chunk   new byte
bb position offset
bb get chunk  0  length
return chunk