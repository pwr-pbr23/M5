/*
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase io hfile
import java io datainput
import java io ioexception
import java util arraylist
import java util list
import java util map
import org apache commons cli commandline
import org apache commons cli commandlineparser
import org apache commons cli helpformatter
import org apache commons cli options
import org apache commons cli parseexception
import org apache commons cli posixparser
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop fs filesystem
import org apache hadoop fs path
import org apache hadoop hbase hbaseconfiguration
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase keyvalue
import org apache hadoop hbase io hfile hfile fileinfo
import org apache hadoop hbase regionserver timerangetracker
import org apache hadoop hbase regionserver metrics schemametrics
import org apache hadoop hbase util bloomfilter
import org apache hadoop hbase util bloomfilterfactory
import org apache hadoop hbase util bytebloomfilter
import org apache hadoop hbase util bytes
import org apache hadoop hbase util fsutils
import org apache hadoop hbase util writables
/**
* implements pretty-printing functionality for {@link hfile}s.
*/
public class hfileprettyprinter
private static final log log   logfactory getlog hfileprettyprinter class
private options options   new options
private boolean verbose
private boolean printvalue
private boolean printkey
private boolean shouldprintmeta
private boolean printblocks
private boolean printstats
private boolean checkrow
private boolean checkfamily
private boolean isseektorow   false
/**
* the row which the user wants to specify and print all the keyvalues for.
*/
private byte row   null
private configuration conf
private list<path> files   new arraylist<path>
private int count
private static final string four_spaces
public hfileprettyprinter
options addoption       false
options addoption       false
options addoption       false
options addoption       false
options addoption       false
options addoption       false
options addoption       false
options addoption       true
options addoption       true
options addoption       true
options addoption       false
public boolean parseoptions string args  throws parseexception
ioexception
if  args length    0
helpformatter formatter   new helpformatter
formatter printhelp    options  true
return false
commandlineparser parser   new posixparser
commandline cmd   parser parse options  args
verbose   cmd hasoption
printvalue   cmd hasoption
printkey   cmd hasoption       printvalue
shouldprintmeta   cmd hasoption
printblocks   cmd hasoption
printstats   cmd hasoption
checkrow   cmd hasoption
checkfamily   cmd hasoption
if  cmd hasoption
files add new path cmd getoptionvalue
if  cmd hasoption
string key   cmd getoptionvalue
if  key    null    key length      0
row   key getbytes
isseektorow   true
else
system err println
system exit  1
if  cmd hasoption
string regionname   cmd getoptionvalue
byte rn   bytes tobytes regionname
byte hri   hregioninfo parseregionname rn
path rootdir   fsutils getrootdir conf
path tabledir   new path rootdir  bytes tostring hri
string enc   hregioninfo encoderegionname rn
path regiondir   new path tabledir  enc
if  verbose
system out println     regiondir
list<path> regionfiles   hfile getstorefiles filesystem get conf
regiondir
if  verbose
system out println
regionfiles size
if  verbose
int i   1
for  path p   regionfiles
if  verbose
system out println     i         p
files addall regionfiles
return true
/**
* runs the command-line pretty-printer, and returns the desired command
* exit code (zero for success, non-zero for failure).
*/
public int run string args
conf   hbaseconfiguration create
conf set
conf get org apache hadoop hbase hconstants hbase_dir
conf set
conf get org apache hadoop hbase hconstants hbase_dir
schemametrics configureglobally conf
try
if   parseoptions args
return 1
catch  ioexception ex
log error    ex
return 1
catch  parseexception ex
log error    ex
return 1
// iterate over all files found
for  path filename   files
try
processfile filename
catch  ioexception ex
log error     filename  ex
if  verbose    printkey
system out println     count
return 0
private void processfile path file  throws ioexception
if  verbose
system out println     file
filesystem fs   file getfilesystem conf
if   fs exists file
system err println     file
hfile reader reader   hfile createreader fs  file  new cacheconfig conf
map<byte  byte> fileinfo   reader loadfileinfo
keyvaluestatscollector filestats   null
if  verbose    printkey    checkrow    checkfamily    printstats
// scan over file and read key/value's and check if requested
hfilescanner scanner   reader getscanner false  false  false
filestats   new keyvaluestatscollector
boolean shouldscankeysvalues   false
if  this isseektorow
// seek to the first kv on this row
shouldscankeysvalues
scanner seekto keyvalue createfirstonrow this row  getkey        1
else
shouldscankeysvalues   scanner seekto
if  shouldscankeysvalues
scankeysvalues file  filestats  scanner  row
// print meta data
if  shouldprintmeta
printmeta reader  fileinfo
if  printblocks
system out println
system out println reader getdatablockindexreader
if  printstats
filestats finish
system out println     filestats
reader close
private void scankeysvalues path file  keyvaluestatscollector filestats
hfilescanner scanner   byte row  throws ioexception
keyvalue pkv   null
do
keyvalue kv   scanner getkeyvalue
if  row    null    row length    0
int result   bytes compareto kv getrow    row
if  result > 0
break
else if  result < 0
continue
// collect stats
if  printstats
filestats collect kv
// dump key value
if  printkey
system out print     kv
if  printvalue
system out print     bytes tostringbinary kv getvalue
system out println
// check if rows are in order
if  checkrow    pkv    null
if  bytes compareto pkv getrow    kv getrow    > 0
system err println
file
bytes tostringbinary pkv getkey
bytes tostringbinary kv getkey
// check if families are consistent
if  checkfamily
string fam   bytes tostring kv getfamily
if   file tostring   contains fam
system err println
file
bytes tostringbinary kv getkey
if  pkv    null
bytes equals pkv getfamily    kv getfamily
system err println
file
bytes tostringbinary pkv getkey
bytes tostringbinary kv getkey
pkv   kv
count
while  scanner next
/**
* format a string of the form "k1=v1, k2=v2, ..." into separate lines
* with a four-space indentation.
*/
private static string asseparatelines string keyvaluestr
return keyvaluestr replaceall
four_spaces
private void printmeta hfile reader reader  map<byte  byte> fileinfo
throws ioexception
system out println
reader indexsize
system out println asseparatelines reader tostring
system out println
asseparatelines reader gettrailer   tostring
system out println
for  map entry<byte  byte> e   fileinfo entryset
system out print four_spaces   bytes tostring e getkey
if  bytes compareto e getkey    bytes tobytes        0
long seqid   bytes tolong e getvalue
system out println seqid
else if  bytes compareto e getkey    bytes tobytes        0
timerangetracker timerangetracker   new timerangetracker
writables copywritable e getvalue    timerangetracker
system out println timerangetracker getminimumtimestamp
timerangetracker getmaximumtimestamp
else if  bytes compareto e getkey    fileinfo avg_key_len     0
bytes compareto e getkey    fileinfo avg_value_len     0
system out println bytes toint e getvalue
else
system out println bytes tostringbinary e getvalue
system out println     bytes tostringbinary reader midkey
// printing general bloom information
datainput bloommeta   reader getgeneralbloomfiltermetadata
bloomfilter bloomfilter   null
if  bloommeta    null
bloomfilter   bloomfilterfactory createfrommeta bloommeta  reader
system out println
if  bloomfilter    null
system out println four_spaces   bloomfilter tostring   replaceall
bytebloomfilter stats_record_sep      four_spaces
else
system out println four_spaces
// printing delete bloom information
bloommeta   reader getdeletebloomfiltermetadata
bloomfilter   null
if  bloommeta    null
bloomfilter   bloomfilterfactory createfrommeta bloommeta  reader
system out println
if  bloomfilter    null
system out println four_spaces
bloomfilter tostring   replaceall bytebloomfilter stats_record_sep
four_spaces
else
system out println four_spaces
private static class longstats
private long min   long max_value
private long max   long min_value
private long sum   0
private long count   0
void collect long d
if  d < min  min   d
if  d > max  max   d
sum    d
count
public string tostring
return     count
min
max
double sum count
private static class keyvaluestatscollector
longstats keylen   new longstats
longstats vallen   new longstats
longstats rowsizebytes   new longstats
longstats rowsizecols   new longstats
long currowbytes   0
long currowcols   0
byte biggestrow   null
private keyvalue prevkv   null
private long maxrowbytes   0
public void collect keyvalue kv
keylen collect kv getkeylength
vallen collect kv getvaluelength
if  prevkv    null
keyvalue comparator comparerows prevkv  kv     0
// new row
collectrow
currowbytes    kv getlength
currowcols
prevkv   kv
private void collectrow
rowsizebytes collect currowbytes
rowsizecols collect currowcols
if  currowbytes > maxrowbytes    prevkv    null
biggestrow   prevkv getrow
currowbytes   0
currowcols   0
public void finish
if  currowcols > 0
collectrow
@override
public string tostring
if  prevkv    null
return
return
keylen
vallen
rowsizebytes
rowsizecols
bytes tostringbinary biggestrow