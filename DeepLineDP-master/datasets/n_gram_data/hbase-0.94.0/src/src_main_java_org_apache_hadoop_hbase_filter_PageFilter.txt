/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase filter
import org apache hadoop hbase keyvalue
import java io datainput
import java io dataoutput
import java io ioexception
import java util list
import java util arraylist
import com google common base preconditions
/**
* implementation of filter interface that limits results to a specific page
* size. it terminates scanning once the number of filter-passed rows is >
* the given page size.
* <p>
* note that this filter cannot guarantee that the number of results returned
* to a client are <= page size. this is because the filter is applied
* separately on different region servers. it does however optimize the scan of
* individual hregions by making sure that the page size is never exceeded
* locally.
*/
public class pagefilter extends filterbase
private long pagesize   long max_value
private int rowsaccepted   0
/**
* default constructor, filters nothing. required though for rpc
* deserialization.
*/
public pagefilter
super
/**
* constructor that takes a maximum page size.
*
* @param pagesize maximum result size.
*/
public pagefilter final long pagesize
preconditions checkargument pagesize >  0     pagesize
this pagesize   pagesize
public long getpagesize
return pagesize
public boolean filterallremaining
return this rowsaccepted >  this pagesize
public boolean filterrow
this rowsaccepted
return this rowsaccepted > this pagesize
public static filter createfilterfromarguments arraylist<byte > filterarguments
preconditions checkargument filterarguments size      1
filterarguments size
long pagesize   parsefilter convertbytearraytolong filterarguments get 0
return new pagefilter pagesize
public void readfields final datainput in  throws ioexception
this pagesize   in readlong
public void write final dataoutput out  throws ioexception
out writelong pagesize
@override
public string tostring
return this getclass   getsimplename         this pagesize