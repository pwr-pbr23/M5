/*
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
* http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase ipc
import com google common base function
import org apache hadoop io writable
import org apache hadoop hbase ipc versionedprotocol
import org apache hadoop hbase monitoring monitoredrpchandler
import java io ioexception
import java net inetsocketaddress
/**
*/
public interface rpcserver
void setsocketsendbufsize int size
void start
void stop
void join   throws interruptedexception
inetsocketaddress getlisteneraddress
/** called for each call.
* @param param writable parameter
* @param receivetime time
* @return writable
* @throws java.io.ioexception e
*/
writable call class<? extends versionedprotocol> protocol
writable param  long receivetime  monitoredrpchandler status
throws ioexception
void seterrorhandler hbaserpcerrorhandler handler
void setqosfunction function<writable  integer> newfunc
void openserver
void startthreads
/**
* needed for delayed calls.  we need to be able to store the current call
* so that we can complete it later.
* @return call the server is currently handling.
*/
delayable getcurrentcall
/**
* returns the metrics instance for reporting rpc call statistics
*/
hbaserpcmetrics getrpcmetrics