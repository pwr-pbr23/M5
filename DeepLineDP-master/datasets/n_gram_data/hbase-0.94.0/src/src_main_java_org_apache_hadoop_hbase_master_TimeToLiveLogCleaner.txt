/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase master
import java io ioexception
import org apache hadoop fs filestatus
import org apache hadoop fs path
import org apache hadoop conf configuration
import org apache commons logging log
import org apache commons logging logfactory
/**
* log cleaner that uses the timestamp of the hlog to determine if it should
* be deleted. by default they are allowed to live for 10 minutes.
*/
public class timetolivelogcleaner implements logcleanerdelegate
static final log log   logfactory getlog timetolivelogcleaner class getname
private configuration conf
// configured time a log can be kept after it was closed
private long ttl
private boolean stopped   false
@override
public boolean islogdeletable path filepath
long time   0
long currenttime   system currenttimemillis
try
filestatus fstat   filepath getfilesystem conf  getfilestatus filepath
time   fstat getmodificationtime
catch  ioexception e
log error     filepath getname
e
return false
long life   currenttime   time
if  life < 0
log warn
return false
return life > ttl
@override
public void setconf configuration conf
this conf   conf
this ttl   conf getlong    600000
@override
public configuration getconf
return conf
@override
public void stop string why
this stopped   true
@override
public boolean isstopped
return this stopped