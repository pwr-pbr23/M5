/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase zookeeper
/**
* base class for internal listeners of zookeeper events.
*
* the {@link zookeeperwatcher} for a process will execute the appropriate
* methods of implementations of this class.  in order to receive events from
* the watcher, every listener must register itself via {@link zookeeperwatcher#registerlistener}.
*
* subclasses need only override those methods in which they are interested.
*
* note that the watcher will be blocked when invoking methods in listeners so
* they must not be long-running.
*/
public abstract class zookeeperlistener
// reference to the zk watcher which also contains configuration and constants
protected zookeeperwatcher watcher
/**
* construct a zookeeper event listener.
*/
public zookeeperlistener zookeeperwatcher watcher
this watcher   watcher
/**
* called when a new node has been created.
* @param path full path of the new node
*/
public void nodecreated string path
// no-op
/**
* called when a node has been deleted
* @param path full path of the deleted node
*/
public void nodedeleted string path
// no-op
/**
* called when an existing node has changed data.
* @param path full path of the updated node
*/
public void nodedatachanged string path
// no-op
/**
* called when an existing node has a child node added or removed.
* @param path full path of the node whose children have changed
*/
public void nodechildrenchanged string path
// no-op