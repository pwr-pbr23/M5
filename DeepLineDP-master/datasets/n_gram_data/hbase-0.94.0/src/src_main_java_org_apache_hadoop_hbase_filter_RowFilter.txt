/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase filter
import java util arraylist
import org apache hadoop hbase keyvalue
import org apache hadoop hbase client scan
/**
* this filter is used to filter based on the key. it takes an operator
* (equal, greater, not equal, etc) and a byte [] comparator for the row,
* and column qualifier portions of a key.
* <p>
* this filter can be wrapped with {@link whilematchfilter} to add more control.
* <p>
* multiple filters can be combined using {@link filterlist}.
* <p>
* if an already known row range needs to be scanned, use {@link scan} start
* and stop rows directly rather than a filter.
*/
public class rowfilter extends comparefilter
private boolean filteroutrow   false
/**
* writable constructor, do not use.
*/
public rowfilter
super
/**
* constructor.
* @param rowcompareop the compare op for row matching
* @param rowcomparator the comparator for row matching
*/
public rowfilter final compareop rowcompareop
final writablebytearraycomparable rowcomparator
super rowcompareop  rowcomparator
@override
public void reset
this filteroutrow   false
@override
public returncode filterkeyvalue keyvalue v
if this filteroutrow
return returncode next_row
return returncode include
@override
public boolean filterrowkey byte data  int offset  int length
if docompare this compareop  this comparator  data  offset  length
this filteroutrow   true
return this filteroutrow
@override
public boolean filterrow
return this filteroutrow
public static filter createfilterfromarguments arraylist<byte > filterarguments
arraylist arguments   comparefilter extractarguments filterarguments
compareop compareop    compareop arguments get 0
writablebytearraycomparable comparator    writablebytearraycomparable arguments get 1
return new rowfilter compareop  comparator