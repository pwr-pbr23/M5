/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase rest client
import java io ioexception
import org apache commons httpclient header
import org apache commons httpclient httpclient
import org apache commons httpclient httpmethod
import org apache commons httpclient httpversion
import org apache commons httpclient multithreadedhttpconnectionmanager
import org apache commons httpclient uri
import org apache commons httpclient methods bytearrayrequestentity
import org apache commons httpclient methods deletemethod
import org apache commons httpclient methods getmethod
import org apache commons httpclient methods headmethod
import org apache commons httpclient methods postmethod
import org apache commons httpclient methods putmethod
import org apache commons httpclient params httpclientparams
import org apache commons httpclient params httpconnectionmanagerparams
import org apache commons logging log
import org apache commons logging logfactory
/**
* a wrapper around httpclient which provides some useful function and
* semantics for interacting with the rest gateway.
*/
public class client
public static final header empty_header_array   new header
private static final log log   logfactory getlog client class
private httpclient httpclient
private cluster cluster
/**
* default constructor
*/
public client
this null
/**
* constructor
* @param cluster the cluster definition
*/
public client cluster cluster
this cluster   cluster
multithreadedhttpconnectionmanager manager
new multithreadedhttpconnectionmanager
httpconnectionmanagerparams managerparams   manager getparams
managerparams setconnectiontimeout 2000      2 s
managerparams setdefaultmaxconnectionsperhost 10
managerparams setmaxtotalconnections 100
this httpclient   new httpclient manager
httpclientparams clientparams   httpclient getparams
clientparams setversion httpversion http_1_1
/**
* shut down the client. close any open persistent connections.
*/
public void shutdown
multithreadedhttpconnectionmanager manager
multithreadedhttpconnectionmanager  httpclient gethttpconnectionmanager
manager shutdown
/**
* execute a transaction method given only the path. will select at random
* one of the members of the supplied cluster definition and iterate through
* the list until a transaction can be successfully completed. the
* definition of success here is a complete http transaction, irrespective
* of result code.
* @param cluster the cluster definition
* @param method the transaction method
* @param headers http header values to send
* @param path the properly urlencoded path
* @return the http response code
* @throws ioexception
*/
public int executepathonly cluster cluster  httpmethod method
header headers  string path  throws ioexception
ioexception lastexception
if  cluster nodes size   < 1
throw new ioexception
int start    int math round  cluster nodes size     1    math random
int i   start
do
cluster lasthost   cluster nodes get i
try
stringbuilder sb   new stringbuilder
sb append
sb append cluster lasthost
sb append path
uri uri   new uri sb tostring    true
return executeuri method  headers  uri tostring
catch  ioexception e
lastexception   e
while    i    start    i < cluster nodes size
throw lastexception
/**
* execute a transaction method given a complete uri.
* @param method the transaction method
* @param headers http header values to send
* @param uri a properly urlencoded uri
* @return the http response code
* @throws ioexception
*/
public int executeuri httpmethod method  header headers  string uri
throws ioexception
method seturi new uri uri  true
if  headers    null
for  header header  headers
method addrequestheader header
long starttime   system currenttimemillis
int code   httpclient executemethod method
long endtime   system currenttimemillis
if  log isdebugenabled
log debug method getname         uri       code
method getstatustext          endtime   starttime
return code
/**
* execute a transaction method. will call either <tt>executepathonly</tt>
* or <tt>executeuri</tt> depending on whether a path only is supplied in
* 'path', or if a complete uri is passed instead, respectively.
* @param cluster the cluster definition
* @param method the http method
* @param headers http header values to send
* @param path the properly urlencoded path or uri
* @return the http response code
* @throws ioexception
*/
public int execute cluster cluster  httpmethod method  header headers
string path  throws ioexception
if  path startswith
return executepathonly cluster  method  headers  path
return executeuri method  headers  path
/**
* @return the cluster definition
*/
public cluster getcluster
return cluster
/**
* @param cluster the cluster definition
*/
public void setcluster cluster cluster
this cluster   cluster
/**
* send a head request
* @param path the path or uri
* @return a response object with response detail
* @throws ioexception
*/
public response head string path  throws ioexception
return head cluster  path  null
/**
* send a head request
* @param cluster the cluster definition
* @param path the path or uri
* @param headers the http headers to include in the request
* @return a response object with response detail
* @throws ioexception
*/
public response head cluster cluster  string path  header headers
throws ioexception
headmethod method   new headmethod
try
int code   execute cluster  method  null  path
headers   method getresponseheaders
return new response code  headers  null
finally
method releaseconnection
/**
* send a get request
* @param path the path or uri
* @return a response object with response detail
* @throws ioexception
*/
public response get string path  throws ioexception
return get cluster  path
/**
* send a get request
* @param cluster the cluster definition
* @param path the path or uri
* @return a response object with response detail
* @throws ioexception
*/
public response get cluster cluster  string path  throws ioexception
return get cluster  path  empty_header_array
/**
* send a get request
* @param path the path or uri
* @param accept accept header value
* @return a response object with response detail
* @throws ioexception
*/
public response get string path  string accept  throws ioexception
return get cluster  path  accept
/**
* send a get request
* @param cluster the cluster definition
* @param path the path or uri
* @param accept accept header value
* @return a response object with response detail
* @throws ioexception
*/
public response get cluster cluster  string path  string accept
throws ioexception
header headers   new header
headers   new header    accept
return get cluster  path  headers
/**
* send a get request
* @param path the path or uri
* @param headers the http headers to include in the request,
* <tt>accept</tt> must be supplied
* @return a response object with response detail
* @throws ioexception
*/
public response get string path  header headers  throws ioexception
return get cluster  path  headers
/**
* send a get request
* @param c the cluster definition
* @param path the path or uri
* @param headers the http headers to include in the request
* @return a response object with response detail
* @throws ioexception
*/
public response get cluster c  string path  header headers
throws ioexception
getmethod method   new getmethod
try
int code   execute c  method  headers  path
headers   method getresponseheaders
byte body   method getresponsebody
return new response code  headers  body
finally
method releaseconnection
/**
* send a put request
* @param path the path or uri
* @param contenttype the content mime type
* @param content the content bytes
* @return a response object with response detail
* @throws ioexception
*/
public response put string path  string contenttype  byte content
throws ioexception
return put cluster  path  contenttype  content
/**
* send a put request
* @param cluster the cluster definition
* @param path the path or uri
* @param contenttype the content mime type
* @param content the content bytes
* @return a response object with response detail
* @throws ioexception
*/
public response put cluster cluster  string path  string contenttype
byte content  throws ioexception
header headers   new header
headers   new header    contenttype
return put cluster  path  headers  content
/**
* send a put request
* @param path the path or uri
* @param headers the http headers to include, <tt>content-type</tt> must be
* supplied
* @param content the content bytes
* @return a response object with response detail
* @throws ioexception
*/
public response put string path  header headers  byte content
throws ioexception
return put cluster  path  headers  content
/**
* send a put request
* @param cluster the cluster definition
* @param path the path or uri
* @param headers the http headers to include, <tt>content-type</tt> must be
* supplied
* @param content the content bytes
* @return a response object with response detail
* @throws ioexception
*/
public response put cluster cluster  string path  header headers
byte content  throws ioexception
putmethod method   new putmethod
try
method setrequestentity new bytearrayrequestentity content
int code   execute cluster  method  headers  path
headers   method getresponseheaders
content   method getresponsebody
return new response code  headers  content
finally
method releaseconnection
/**
* send a post request
* @param path the path or uri
* @param contenttype the content mime type
* @param content the content bytes
* @return a response object with response detail
* @throws ioexception
*/
public response post string path  string contenttype  byte content
throws ioexception
return post cluster  path  contenttype  content
/**
* send a post request
* @param cluster the cluster definition
* @param path the path or uri
* @param contenttype the content mime type
* @param content the content bytes
* @return a response object with response detail
* @throws ioexception
*/
public response post cluster cluster  string path  string contenttype
byte content  throws ioexception
header headers   new header
headers   new header    contenttype
return post cluster  path  headers  content
/**
* send a post request
* @param path the path or uri
* @param headers the http headers to include, <tt>content-type</tt> must be
* supplied
* @param content the content bytes
* @return a response object with response detail
* @throws ioexception
*/
public response post string path  header headers  byte content
throws ioexception
return post cluster  path  headers  content
/**
* send a post request
* @param cluster the cluster definition
* @param path the path or uri
* @param headers the http headers to include, <tt>content-type</tt> must be
* supplied
* @param content the content bytes
* @return a response object with response detail
* @throws ioexception
*/
public response post cluster cluster  string path  header headers
byte content  throws ioexception
postmethod method   new postmethod
try
method setrequestentity new bytearrayrequestentity content
int code   execute cluster  method  headers  path
headers   method getresponseheaders
content   method getresponsebody
return new response code  headers  content
finally
method releaseconnection
/**
* send a delete request
* @param path the path or uri
* @return a response object with response detail
* @throws ioexception
*/
public response delete string path  throws ioexception
return delete cluster  path
/**
* send a delete request
* @param cluster the cluster definition
* @param path the path or uri
* @return a response object with response detail
* @throws ioexception
*/
public response delete cluster cluster  string path  throws ioexception
deletemethod method   new deletemethod
try
int code   execute cluster  method  null  path
header headers   method getresponseheaders
byte content   method getresponsebody
return new response code  headers  content
finally
method releaseconnection