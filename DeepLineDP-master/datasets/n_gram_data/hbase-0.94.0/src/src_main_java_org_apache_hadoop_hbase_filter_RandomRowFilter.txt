/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase filter
import java io datainput
import java io dataoutput
import java io ioexception
import java util random
import org apache hadoop hbase keyvalue
/**
* a filter that includes rows based on a chance.
*
*/
public class randomrowfilter extends filterbase
protected static final random random   new random
protected float chance
protected boolean filteroutrow
/**
* writable constructor, do not use.
*/
public randomrowfilter
/**
* create a new filter with a specified chance for a row to be included.
*
* @param chance
*/
public randomrowfilter float chance
this chance   chance
/**
* @return the chance that a row gets included.
*/
public float getchance
return chance
/**
* set the chance that a row is included.
*
* @param chance
*/
public void setchance float chance
this chance   chance
@override
public boolean filterallremaining
return false
@override
public returncode filterkeyvalue keyvalue v
if  filteroutrow
return returncode next_row
return returncode include
@override
public boolean filterrow
return filteroutrow
@override
public boolean filterrowkey byte buffer  int offset  int length
if  chance < 0
// with a zero chance, the rows is always excluded
filteroutrow   true
else if  chance > 1
// always included
filteroutrow   false
else
// roll the dice
filteroutrow     random nextfloat   < chance
return filteroutrow
@override
public void reset
filteroutrow   false
@override
public void readfields datainput in  throws ioexception
chance   in readfloat
@override
public void write dataoutput out  throws ioexception
out writefloat chance