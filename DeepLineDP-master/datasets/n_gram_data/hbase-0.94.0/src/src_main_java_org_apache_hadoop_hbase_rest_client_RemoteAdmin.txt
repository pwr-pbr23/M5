/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase rest client
import java io ioexception
import org apache hadoop conf configuration
import org apache hadoop hbase htabledescriptor
import org apache hadoop hbase rest constants
import org apache hadoop hbase rest model tableschemamodel
import org apache hadoop hbase util bytes
public class remoteadmin
final client client
final configuration conf
final string accesstoken
final int maxretries
final long sleeptime
/**
* constructor
* @param client
* @param conf
*/
public remoteadmin client client  configuration conf
this client  conf  null
/**
* constructor
* @param client
* @param conf
* @param accesstoken
*/
public remoteadmin client client  configuration conf  string accesstoken
this client   client
this conf   conf
this accesstoken   accesstoken
this maxretries   conf getint    10
this sleeptime   conf getlong    1000
/**
* @param tablename name of table to check
* @return true if all regions of the table are available
* @throws ioexception if a remote or network exception occurs
*/
public boolean istableavailable string tablename  throws ioexception
return istableavailable bytes tobytes tablename
/**
* @param tablename name of table to check
* @return true if all regions of the table are available
* @throws ioexception if a remote or network exception occurs
*/
public boolean istableavailable byte tablename  throws ioexception
stringbuilder sb   new stringbuilder
sb append
if  accesstoken    null
sb append accesstoken
sb append
sb append bytes tostringbinary tablename
sb append
sb append
int code   0
for  int i   0  i < maxretries  i
response response   client get sb tostring
code   response getcode
switch  code
case 200
return true
case 404
return false
case 509
try
thread sleep sleeptime
catch  interruptedexception e
break
default
throw new ioexception     code
throw new ioexception
/**
* creates a new table.
* @param desc table descriptor for table
* @throws ioexception if a remote or network exception occurs
*/
public void createtable htabledescriptor desc
throws ioexception
tableschemamodel model   new tableschemamodel desc
stringbuilder sb   new stringbuilder
sb append
if  accesstoken    null
sb append accesstoken
sb append
sb append bytes tostringbinary desc getname
sb append
sb append
int code   0
for  int i   0  i < maxretries  i
response response   client put sb tostring    constants mimetype_protobuf
model createprotobufoutput
code   response getcode
switch  code
case 201
return
case 509
try
thread sleep sleeptime
catch  interruptedexception e
break
default
throw new ioexception     code
throw new ioexception
/**
* deletes a table.
* @param tablename name of table to delete
* @throws ioexception if a remote or network exception occurs
*/
public void deletetable final string tablename  throws ioexception
deletetable bytes tobytes tablename
/**
* deletes a table.
* @param tablename name of table to delete
* @throws ioexception if a remote or network exception occurs
*/
public void deletetable final byte  tablename  throws ioexception
stringbuilder sb   new stringbuilder
sb append
if  accesstoken    null
sb append accesstoken
sb append
sb append bytes tostringbinary tablename
sb append
sb append
int code   0
for  int i   0  i < maxretries  i
response response   client delete sb tostring
code   response getcode
switch  code
case 200
return
case 509
try
thread sleep sleeptime
catch  interruptedexception e
break
default
throw new ioexception     code
throw new ioexception