/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase regionserver metrics
import java io ioexception
import java lang management managementfactory
import java lang management memoryusage
import java util list
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hbase io hfile hfile
import org apache hadoop hbase metrics hbaseinfo
import org apache hadoop hbase metrics metricsrate
import org apache hadoop hbase metrics persistentmetricstimevaryingrate
import org apache hadoop hbase metrics histogram metricshistogram
import org apache hadoop hbase metrics histogram snapshot
import org apache hadoop hbase regionserver wal hlog
import org apache hadoop hbase util pair
import org apache hadoop hbase util strings
import org apache hadoop metrics contextfactory
import org apache hadoop metrics metricscontext
import org apache hadoop metrics metricsrecord
import org apache hadoop metrics metricsutil
import org apache hadoop metrics updater
import org apache hadoop metrics jvm jvmmetrics
import org apache hadoop metrics util metricsintvalue
import org apache hadoop metrics util metricslongvalue
import org apache hadoop metrics util metricsregistry
import org apache hadoop metrics util metricstimevaryingrate
import org apache hadoop metrics util metricstimevaryinglong
import org apache hadoop util stringutils
/**
* this class is for maintaining the various regionserver statistics
* and publishing them through the metrics interfaces.
* <p>
* this class has a number of metrics variables that are publicly accessible;
* these variables (objects) have methods to update their values.
*/
public class regionservermetrics implements updater
@suppresswarnings
private final log log   logfactory getlog this getclass
private final metricsrecord metricsrecord
private long lastupdate   system currenttimemillis
private long lastextupdate   system currenttimemillis
private long extendedperiod   0
private static final int mb   1024 1024
private metricsregistry registry   new metricsregistry
private final regionserverstatistics statistics
public final metricstimevaryingrate atomicincrementtime
new metricstimevaryingrate    registry
/**
* count of regions carried by this regionserver
*/
public final metricsintvalue regions
new metricsintvalue    registry
/**
* block cache size.
*/
public final metricslongvalue blockcachesize
new metricslongvalue    registry
/**
* block cache free size.
*/
public final metricslongvalue blockcachefree
new metricslongvalue    registry
/**
* block cache item count.
*/
public final metricslongvalue blockcachecount
new metricslongvalue    registry
/**
* block cache hit count.
*/
public final metricslongvalue blockcachehitcount
new metricslongvalue    registry
/**
* block cache miss count.
*/
public final metricslongvalue blockcachemisscount
new metricslongvalue    registry
/**
* block cache evict count.
*/
public final metricslongvalue blockcacheevictedcount
new metricslongvalue    registry
/**
* block hit ratio.
*/
public final metricsintvalue blockcachehitratio
new metricsintvalue    registry
/**
* block hit caching ratio.  this only includes the requests to the block
* cache where caching was turned on.  see hbase-2253.
*/
public final metricsintvalue blockcachehitcachingratio
new metricsintvalue    registry
/** block hit ratio for past n periods. */
public final metricsintvalue blockcachehitratiopastnperiods   new metricsintvalue    registry
/** block hit caching ratio for past n periods */
public final metricsintvalue blockcachehitcachingratiopastnperiods   new metricsintvalue    registry
/**
* a latency histogram on 'get' requests
*/
public final metricshistogram getlatencies
new metricshistogram    registry
/**
* a latency histogram on 'delete' requests
*/
public final metricshistogram deletelatencies
new metricshistogram    registry
/**
* a latency histogram on 'put' requests
*/
public final metricshistogram putlatencies
new metricshistogram    registry
/*
* count of requests to the regionservers since last call to metrics update
*/
public final metricsrate requests   new metricsrate    registry
/**
* count of stores open on the regionserver.
*/
public final metricsintvalue stores   new metricsintvalue    registry
/**
* count of storefiles open on the regionserver.
*/
public final metricsintvalue storefiles
new metricsintvalue    registry
/**
* count of read requests
*/
public final metricslongvalue readrequestscount
new metricslongvalue    registry
/**
* count of write requests
*/
public final metricslongvalue writerequestscount
new metricslongvalue    registry
/**
*/
public final metricsintvalue storefileindexsizemb
new metricsintvalue    registry
/** the total size of block index root levels in this regionserver in kb. */
public final metricsintvalue rootindexsizekb
new metricsintvalue    registry
/** total size of all block indexes (not necessarily loaded in memory) */
public final metricsintvalue totalstaticindexsizekb
new metricsintvalue    registry
/** total size of all bloom filters (not necessarily loaded in memory) */
public final metricsintvalue totalstaticbloomsizekb
new metricsintvalue    registry
/**
* hdfs blocks locality index
*/
public final metricsintvalue hdfsblockslocalityindex
new metricsintvalue    registry
/**
* sum of all the memstore sizes in this regionserver in mb
*/
public final metricsintvalue memstoresizemb
new metricsintvalue    registry
/**
* size of the compaction queue.
*/
public final metricsintvalue compactionqueuesize
new metricsintvalue    registry
/**
* size of the flush queue.
*/
public final metricsintvalue flushqueuesize
new metricsintvalue    registry
/**
* filesystem sequential read latency distribution
*/
public final metricshistogram fsreadlatencyhistogram
new metricshistogram    registry
/**
* filesystem pread latency distribution
*/
public final metricshistogram fspreadlatencyhistogram
new metricshistogram    registry
/**
* metrics on the distribution of filesystem write latencies (improved version of fswritelatency)
*/
public final metricshistogram fswritelatencyhistogram
new metricshistogram    registry
/**
* filesystem read latency
*/
public final metricstimevaryingrate fsreadlatency
new metricstimevaryingrate    registry
/**
* filesystem positional read latency
*/
public final metricstimevaryingrate fspreadlatency
new metricstimevaryingrate    registry
/**
* filesystem write latency
*/
public final metricstimevaryingrate fswritelatency
new metricstimevaryingrate    registry
/**
* size (in bytes) of data in hlog append calls
*/
public final metricstimevaryingrate fswritesize
new metricstimevaryingrate    registry
/**
* filesystem sync latency
*/
public final metricstimevaryingrate fssynclatency
new metricstimevaryingrate    registry
/**
* time each scheduled compaction takes
*/
protected final persistentmetricstimevaryingrate compactiontime
new persistentmetricstimevaryingrate    registry
protected final persistentmetricstimevaryingrate compactionsize
new persistentmetricstimevaryingrate    registry
/**
* time each scheduled flush takes
*/
protected final persistentmetricstimevaryingrate flushtime
new persistentmetricstimevaryingrate    registry
protected final persistentmetricstimevaryingrate flushsize
new persistentmetricstimevaryingrate    registry
public final metricslongvalue slowhlogappendcount
new metricslongvalue    registry
public final metricstimevaryingrate slowhlogappendtime
new metricstimevaryingrate    registry
public final metricstimevaryinglong regionsplitsuccesscount
new metricstimevaryinglong    registry
public final metricstimevaryinglong regionsplitfailurecount
new metricstimevaryinglong    registry
/**
* number of times checksum verification failed.
*/
public final metricslongvalue checksumfailurescount
new metricslongvalue    registry
public regionservermetrics
metricscontext context   metricsutil getcontext
metricsrecord   metricsutil createrecord context
string name   thread currentthread   getname
metricsrecord settag    name
context registerupdater this
// add jvmmetrics.
jvmmetrics init    name
// add hbase info metrics
hbaseinfo init
// export for jmx
statistics   new regionserverstatistics this registry  name
// get custom attributes
try
object m   contextfactory getfactory   getattribute
if  m instanceof string
this extendedperiod   long parselong  string  m  1000
catch  ioexception ioe
log info
log info
public void shutdown
if  statistics    null
statistics shutdown
/**
* since this object is a registered updater, this method will be called
* periodically, e.g. every 5 seconds.
* @param caller the metrics context that this responsible for calling us
*/
public void doupdates metricscontext caller
synchronized  this
this lastupdate   system currenttimemillis
// has the extended period for long-living stats elapsed?
if  this extendedperiod > 0
this lastupdate   this lastextupdate >  this extendedperiod
this lastextupdate   this lastupdate
this compactiontime resetminmaxavg
this compactionsize resetminmaxavg
this flushtime resetminmaxavg
this flushsize resetminmaxavg
this resetallminmax
this stores pushmetric this metricsrecord
this storefiles pushmetric this metricsrecord
this storefileindexsizemb pushmetric this metricsrecord
this rootindexsizekb pushmetric this metricsrecord
this totalstaticindexsizekb pushmetric this metricsrecord
this totalstaticbloomsizekb pushmetric this metricsrecord
this memstoresizemb pushmetric this metricsrecord
this readrequestscount pushmetric this metricsrecord
this writerequestscount pushmetric this metricsrecord
this regions pushmetric this metricsrecord
this requests pushmetric this metricsrecord
this compactionqueuesize pushmetric this metricsrecord
this flushqueuesize pushmetric this metricsrecord
this blockcachesize pushmetric this metricsrecord
this blockcachefree pushmetric this metricsrecord
this blockcachecount pushmetric this metricsrecord
this blockcachehitcount pushmetric this metricsrecord
this blockcachemisscount pushmetric this metricsrecord
this blockcacheevictedcount pushmetric this metricsrecord
this blockcachehitratio pushmetric this metricsrecord
this blockcachehitcachingratio pushmetric this metricsrecord
this hdfsblockslocalityindex pushmetric this metricsrecord
this blockcachehitratiopastnperiods pushmetric this metricsrecord
this blockcachehitcachingratiopastnperiods pushmetric this metricsrecord
this putlatencies pushmetric this metricsrecord
this deletelatencies pushmetric this metricsrecord
this getlatencies pushmetric this metricsrecord
// mix in hfile and hlog metrics
// be careful. here is code for mtvr from up in hadoop:
// public synchronized void inc(final int numops, final long time) {
//   currentdata.numoperations += numops;
//   currentdata.time += time;
//   long timeperops = time/numops;
//    minmax.update(timeperops);
// }
// means you can't pass a numops of zero or get a arithmeticexception / by zero.
// hlog metrics
addhlogmetric hlog getwritetime    this fswritelatency
addhlogmetric hlog getwritesize    this fswritesize
addhlogmetric hlog getsynctime    this fssynclatency
addhlogmetric hlog getslowappendtime    this slowhlogappendtime
this slowhlogappendcount set hlog getslowappendcount
// hfile metrics, sequential reads
int ops   hfile getreadops
if  ops    0  this fsreadlatency inc ops  hfile getreadtimems
// hfile metrics, positional reads
ops   hfile getpreadops
if  ops    0  this fspreadlatency inc ops  hfile getpreadtimems
this checksumfailurescount set hfile getchecksumfailurescount
/* note: removed hfile write latency.  2 reasons:
* 1) mixing hlog latencies are far higher priority since they're
*      on-demand and hfile is used in background (compact/flush)
* 2) hfile metrics are being handled at a higher level
*      by compaction & flush metrics.
*/
for long latency   hfile getreadlatenciesnanos
this fsreadlatencyhistogram update latency
for long latency   hfile getpreadlatenciesnanos
this fspreadlatencyhistogram update latency
for long latency   hfile getwritelatenciesnanos
this fswritelatencyhistogram update latency
// push the result
this fspreadlatency pushmetric this metricsrecord
this fsreadlatency pushmetric this metricsrecord
this fswritelatency pushmetric this metricsrecord
this fswritesize pushmetric this metricsrecord
this fsreadlatencyhistogram pushmetric this metricsrecord
this fswritelatencyhistogram pushmetric this metricsrecord
this fspreadlatencyhistogram pushmetric this metricsrecord
this fssynclatency pushmetric this metricsrecord
this compactiontime pushmetric this metricsrecord
this compactionsize pushmetric this metricsrecord
this flushtime pushmetric this metricsrecord
this flushsize pushmetric this metricsrecord
this slowhlogappendcount pushmetric this metricsrecord
this regionsplitsuccesscount pushmetric this metricsrecord
this regionsplitfailurecount pushmetric this metricsrecord
this checksumfailurescount pushmetric this metricsrecord
this metricsrecord update
private void addhlogmetric hlog metric logmetric
metricstimevaryingrate hadoopmetric
if  logmetric count > 0
hadoopmetric inc logmetric min
if  logmetric count > 1
hadoopmetric inc logmetric max
if  logmetric count > 2
int ops   logmetric count   2
hadoopmetric inc ops  logmetric total   logmetric max   logmetric min
public void resetallminmax
this atomicincrementtime resetminmax
this fsreadlatency resetminmax
this fswritelatency resetminmax
this fswritesize resetminmax
this fssynclatency resetminmax
this slowhlogappendtime resetminmax
/**
* @return count of requests.
*/
public float getrequests
return this requests getpreviousintervalvalue
/**
* @param time time that compaction took
* @param size bytesize of storefiles in the compaction
*/
public synchronized void addcompaction long time  long size
this compactiontime inc time
this compactionsize inc size
/**
* @param flushes history in <time, size>
*/
public synchronized void addflush final list<pair<long long>> flushes
for  pair<long long> f   flushes
this flushtime inc f getfirst
this flushsize inc f getsecond
/**
* @param inc how much to add to requests.
*/
public void incrementrequests final int inc
this requests inc inc
public void incrementsplitsuccesscount
this regionsplitsuccesscount inc
public void incrementsplitfailurecount
this regionsplitfailurecount inc
@override
public string tostring
stringbuilder sb   new stringbuilder
sb   strings appendkeyvalue sb     integer
valueof  int  this requests getpreviousintervalvalue
sb   strings appendkeyvalue sb
integer valueof this regions get
sb   strings appendkeyvalue sb
integer valueof this stores get
sb   strings appendkeyvalue sb
integer valueof this storefiles get
sb   strings appendkeyvalue sb  this storefileindexsizemb getname
integer valueof this storefileindexsizemb get
sb   strings appendkeyvalue sb
integer valueof this rootindexsizekb get
sb   strings appendkeyvalue sb
integer valueof this totalstaticindexsizekb get
sb   strings appendkeyvalue sb
integer valueof this totalstaticbloomsizekb get
sb   strings appendkeyvalue sb  this memstoresizemb getname
integer valueof this memstoresizemb get
sb   strings appendkeyvalue sb
long valueof this readrequestscount get
sb   strings appendkeyvalue sb
long valueof this writerequestscount get
sb   strings appendkeyvalue sb
integer valueof this compactionqueuesize get
sb   strings appendkeyvalue sb
integer valueof this flushqueuesize get
// duplicate from jvmmetrics because metrics are private there so
// inaccessible.
memoryusage memory
managementfactory getmemorymxbean   getheapmemoryusage
sb   strings appendkeyvalue sb
long valueof memory getused   mb
sb   strings appendkeyvalue sb
long valueof memory getmax   mb
sb   strings appendkeyvalue sb  this blockcachesize getname
stringutils limitdecimalto2  float this blockcachesize get   mb
sb   strings appendkeyvalue sb  this blockcachefree getname
stringutils limitdecimalto2  float this blockcachefree get   mb
sb   strings appendkeyvalue sb  this blockcachecount getname
long valueof this blockcachecount get
sb   strings appendkeyvalue sb  this blockcachehitcount getname
long valueof this blockcachehitcount get
sb   strings appendkeyvalue sb  this blockcachemisscount getname
long valueof this blockcachemisscount get
sb   strings appendkeyvalue sb  this blockcacheevictedcount getname
long valueof this blockcacheevictedcount get
sb   strings appendkeyvalue sb  this blockcachehitratio getname
long valueof this blockcachehitratio get
sb   strings appendkeyvalue sb  this blockcachehitcachingratio getname
long valueof this blockcachehitcachingratio get
sb   strings appendkeyvalue sb  this hdfsblockslocalityindex getname
long valueof this hdfsblockslocalityindex get
sb   strings appendkeyvalue sb
long valueof this slowhlogappendcount get
sb   appendhistogram sb  this deletelatencies
sb   appendhistogram sb  this getlatencies
sb   appendhistogram sb  this putlatencies
sb   appendhistogram sb  this fsreadlatencyhistogram
sb   appendhistogram sb  this fspreadlatencyhistogram
sb   appendhistogram sb  this fswritelatencyhistogram
return sb tostring
private stringbuilder appendhistogram stringbuilder sb
metricshistogram histogram
sb   strings appendkeyvalue sb
histogram getname
stringutils limitdecimalto2 histogram getmean
sb   strings appendkeyvalue sb
histogram getname
stringutils limitdecimalto2 histogram getcount
final snapshot s   histogram getsnapshot
sb   strings appendkeyvalue sb
histogram getname
stringutils limitdecimalto2 s getmedian
sb   strings appendkeyvalue sb
histogram getname
stringutils limitdecimalto2 s get75thpercentile
sb   strings appendkeyvalue sb
histogram getname
stringutils limitdecimalto2 s get95thpercentile
sb   strings appendkeyvalue sb
histogram getname
stringutils limitdecimalto2 s get99thpercentile
sb   strings appendkeyvalue sb
histogram getname
stringutils limitdecimalto2 s get999thpercentile
return sb