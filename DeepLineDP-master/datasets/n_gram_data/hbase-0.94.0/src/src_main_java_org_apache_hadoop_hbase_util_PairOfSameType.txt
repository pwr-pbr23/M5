/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase util
import java util iterator
import org apache commons lang notimplementedexception
/**
* a generic, immutable class for pairs of objects both of type <code>t</code>.
* @param <t>
* @see pair if types differ.
*/
public class pairofsametype<t> implements iterable<t>
private final t first
private final t second
/**
* constructor
* @param a operand
* @param b operand
*/
public pairofsametype t a  t b
this first   a
this second   b
/**
* return the first element stored in the pair.
* @return t
*/
public t getfirst
return first
/**
* return the second element stored in the pair.
* @return t
*/
public t getsecond
return second
private static boolean equals object x  object y
return  x    null    y    null      x    null    x equals y
@override
@suppresswarnings
public boolean equals object other
return other instanceof pairofsametype
equals first    pairofsametype other  first
equals second    pairofsametype other  second
@override
public int hashcode
if  first    null
return  second    null  ? 0   second hashcode     1
else if  second    null
return first hashcode     2
else
return first hashcode     17   second hashcode
@override
public string tostring
return     getfirst         getsecond
@override
public iterator<t> iterator
return new iterator<t>
private int returned   0
@override
public boolean hasnext
return this returned < 2
@override
public t next
if    this returned    1  return getfirst
else if  this returned    2  return getsecond
else throw new illegalaccesserror     this returned
@override
public void remove
throw new notimplementedexception