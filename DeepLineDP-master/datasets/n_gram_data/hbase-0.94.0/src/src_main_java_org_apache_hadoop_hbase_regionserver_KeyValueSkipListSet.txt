/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase regionserver
import org apache hadoop hbase keyvalue
import java util collection
import java util comparator
import java util iterator
import java util navigableset
import java util sortedset
import java util concurrent concurrentnavigablemap
import java util concurrent concurrentskiplistmap
/**
* a {@link java.util.set} of {@link keyvalue}s implemented on top of a
* {@link java.util.concurrent.concurrentskiplistmap}.  works like a
* {@link java.util.concurrent.concurrentskiplistset} in all but one regard:
* an add will overwrite if already an entry for the added key.  in other words,
* where csls does "adds the specified element to this set if it is not already
* present.", this implementation "adds the specified element to this set even
* if it is already present overwriting what was there previous".  the call to
* add returns true if no value in the backing map or false if there was an
* entry with same key (though value may be different).
* <p>otherwise,
* has same attributes as concurrentskiplistset: e.g. tolerant of concurrent
* get and set and won't throw concurrentmodificationexception when iterating.
*/
class keyvalueskiplistset implements navigableset<keyvalue>
private final concurrentnavigablemap<keyvalue  keyvalue> delegatee
keyvalueskiplistset final keyvalue kvcomparator c
this delegatee   new concurrentskiplistmap<keyvalue  keyvalue> c
keyvalueskiplistset final concurrentnavigablemap<keyvalue  keyvalue> m
this delegatee   m
public keyvalue ceiling keyvalue e
throw new unsupportedoperationexception
public iterator<keyvalue> descendingiterator
return this delegatee descendingmap   values   iterator
public navigableset<keyvalue> descendingset
throw new unsupportedoperationexception
public keyvalue floor keyvalue e
throw new unsupportedoperationexception
public sortedset<keyvalue> headset final keyvalue toelement
return headset toelement  false
public navigableset<keyvalue> headset final keyvalue toelement
boolean inclusive
return new keyvalueskiplistset this delegatee headmap toelement  inclusive
public keyvalue higher keyvalue e
throw new unsupportedoperationexception
public iterator<keyvalue> iterator
return this delegatee values   iterator
public keyvalue lower keyvalue e
throw new unsupportedoperationexception
public keyvalue pollfirst
throw new unsupportedoperationexception
public keyvalue polllast
throw new unsupportedoperationexception
public sortedset<keyvalue> subset keyvalue fromelement  keyvalue toelement
throw new unsupportedoperationexception
public navigableset<keyvalue> subset keyvalue fromelement
boolean frominclusive  keyvalue toelement  boolean toinclusive
throw new unsupportedoperationexception
public sortedset<keyvalue> tailset keyvalue fromelement
return tailset fromelement  true
public navigableset<keyvalue> tailset keyvalue fromelement  boolean inclusive
return new keyvalueskiplistset this delegatee tailmap fromelement  inclusive
public comparator<? super keyvalue> comparator
throw new unsupportedoperationexception
public keyvalue first
return this delegatee get this delegatee firstkey
public keyvalue last
return this delegatee get this delegatee lastkey
public boolean add keyvalue e
return this delegatee put e  e     null
public boolean addall collection<? extends keyvalue> c
throw new unsupportedoperationexception
public void clear
this delegatee clear
public boolean contains object o
//noinspection suspiciousmethodcalls
return this delegatee containskey o
public boolean containsall collection<?> c
throw new unsupportedoperationexception
public boolean isempty
return this delegatee isempty
public boolean remove object o
return this delegatee remove o     null
public boolean removeall collection<?> c
throw new unsupportedoperationexception
public boolean retainall collection<?> c
throw new unsupportedoperationexception
public keyvalue get keyvalue kv
return this delegatee get kv
public int size
return this delegatee size
public object toarray
throw new unsupportedoperationexception
public <t> t toarray t a
throw new unsupportedoperationexception