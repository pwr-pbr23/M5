/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase master
import java io file
import java io ioexception
import java util list
import org apache commons cli commandline
import org apache commons cli gnuparser
import org apache commons cli options
import org apache commons cli parseexception
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase hconstants
import org apache hadoop hbase localhbasecluster
import org apache hadoop hbase masternotrunningexception
import org apache hadoop hbase zookeeperconnectionexception
import org apache hadoop hbase client hbaseadmin
import org apache hadoop hbase regionserver hregionserver
import org apache hadoop hbase util jvmclusterutil
import org apache hadoop hbase util servercommandline
import org apache hadoop hbase zookeeper minizookeepercluster
import org apache zookeeper keeperexception
public class hmastercommandline extends servercommandline
private static final log log   logfactory getlog hmastercommandline class
private static final string usage
private final class<? extends hmaster> masterclass
public hmastercommandline class<? extends hmaster> masterclass
this masterclass   masterclass
protected string getusage
return usage
public int run string args  throws exception
options opt   new options
opt addoption    true
opt addoption    false
commandline cmd
try
cmd   new gnuparser   parse opt  args
catch  parseexception e
log error    e
usage null
return  1
if  cmd hasoption
string val   cmd getoptionvalue
getconf   setint
integer valueof val
log debug     val
// check if we are the backup master - override the conf if so
if  cmd hasoption
getconf   setboolean hconstants master_type_backup  true
list<string> remainingargs   cmd getarglist
if  remainingargs size      1
usage null
return  1
string command   remainingargs get 0
if    equals command
return startmaster
else if    equals command
return stopmaster
else
usage     command
return  1
private int startmaster
configuration conf   getconf
try
// if 'local', defer to localhbasecluster instance.  starts master
// and regionserver both in the one jvm.
if  localhbasecluster islocal conf
final minizookeepercluster zookeepercluster
new minizookeepercluster
file zkdatapath   new file conf get hconstants zookeeper_data_dir
int zkclientport   conf getint hconstants zookeeper_client_port  0
if  zkclientport    0
throw new ioexception
hconstants zookeeper_client_port
zookeepercluster setdefaultclientport zkclientport
int clientport   zookeepercluster startup zkdatapath
if  clientport    zkclientport
string errormsg
zkclientport       clientport
system err println errormsg
throw new ioexception errormsg
conf set hconstants zookeeper_client_port
integer tostring clientport
// need to have the zk cluster shutdown when master is shutdown.
// run a subclass that does the zk cluster shutdown on its way out.
localhbasecluster cluster   new localhbasecluster conf  1  1
localhmaster class  hregionserver class
localhmaster cluster getmaster 0   setzkcluster zookeepercluster
cluster startup
waitonmasterthreads cluster
else
hmaster master   hmaster constructmaster masterclass  conf
if  master isstopped
log info
return  1
master start
master join
if master isaborted
throw new runtimeexception
catch  throwable t
log error    t
return  1
return 0
private int stopmaster
hbaseadmin adm   null
try
configuration conf   getconf
// don't try more than once
conf setint    1
adm   new hbaseadmin getconf
catch  masternotrunningexception e
log error
return  1
catch  zookeeperconnectionexception e
log error
return  1
try
adm shutdown
catch  throwable t
log error    t
return  1
return 0
private void waitonmasterthreads localhbasecluster cluster  throws interruptedexception
list<jvmclusterutil masterthread> masters   cluster getmasters
list<jvmclusterutil regionserverthread> regionservers   cluster getregionservers
if  masters    null
for  jvmclusterutil masterthread t   masters
t join
if t getmaster   isaborted
closeallregionserverthreads regionservers
throw new runtimeexception
private static void closeallregionserverthreads list<jvmclusterutil regionserverthread> regionservers
for jvmclusterutil regionserverthread t   regionservers
t getregionserver   stop
/*
* version of master that will shutdown the passed zk cluster on its way out.
*/
public static class localhmaster extends hmaster
private minizookeepercluster zkcluster   null
public localhmaster configuration conf
throws ioexception  keeperexception  interruptedexception
super conf
@override
public void run
super run
if  this zkcluster    null
try
this zkcluster shutdown
catch  ioexception e
e printstacktrace
void setzkcluster final minizookeepercluster zkcluster
this zkcluster   zkcluster