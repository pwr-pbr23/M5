/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
* http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase regionserver wal
import java io ioexception
import org apache hadoop hbase coprocessor
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase coprocessor
import org apache hadoop conf configuration
/**
* implements the coprocessor environment and runtime support for coprocessors
* loaded within a {@link hlog}.
*/
public class walcoprocessorhost
extends coprocessorhost<walcoprocessorhost walenvironment>
/**
* encapsulation of the environment of each coprocessor
*/
static class walenvironment extends coprocessorhost environment
implements walcoprocessorenvironment
private hlog wal
@override
public hlog getwal
return wal
/**
* constructor
* @param impl the coprocessor instance
* @param priority chaining priority
* @param seq load sequence
* @param conf configuration
* @param hlog hlog
*/
public walenvironment class<?> implclass  final coprocessor impl
final int priority  final int seq  final configuration conf
final hlog hlog
super impl  priority  seq  conf
this wal   hlog
hlog wal
/**
* constructor
* @param log the write ahead log
* @param conf the configuration
*/
public walcoprocessorhost final hlog log  final configuration conf
this wal   log
// load system default cp's from configuration.
loadsystemcoprocessors conf  wal_coprocessor_conf_key
@override
public walenvironment createenvironment final class<?> implclass
final coprocessor instance  final int priority  final int seq
final configuration conf
return new walenvironment implclass  instance  priority  seq  conf
this wal
/**
* @param info
* @param logkey
* @param logedit
* @return true if default behavior should be bypassed, false otherwise
* @throws ioexception
*/
public boolean prewalwrite hregioninfo info  hlogkey logkey  waledit logedit
throws ioexception
boolean bypass   false
observercontext<walcoprocessorenvironment> ctx   null
for  walenvironment env  coprocessors
if  env getinstance   instanceof
org apache hadoop hbase coprocessor walobserver
ctx   observercontext createandprepare env  ctx
org apache hadoop hbase coprocessor walobserver env getinstance
prewalwrite ctx  info  logkey  logedit
bypass    ctx shouldbypass
if  ctx shouldcomplete
break
return bypass
/**
* @param info
* @param logkey
* @param logedit
* @throws ioexception
*/
public void postwalwrite hregioninfo info  hlogkey logkey  waledit logedit
throws ioexception
observercontext<walcoprocessorenvironment> ctx   null
for  walenvironment env  coprocessors
if  env getinstance   instanceof
org apache hadoop hbase coprocessor walobserver
ctx   observercontext createandprepare env  ctx
org apache hadoop hbase coprocessor walobserver env getinstance
postwalwrite ctx  info  logkey  logedit
if  ctx shouldcomplete
break