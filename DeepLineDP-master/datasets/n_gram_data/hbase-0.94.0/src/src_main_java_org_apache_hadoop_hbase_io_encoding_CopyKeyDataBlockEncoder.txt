/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements. see the notice file distributed with this
* work for additional information regarding copyright ownership. the asf
* licenses this file to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
* http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis, without
* warranties or conditions of any kind, either express or implied. see the
* license for the specific language governing permissions and limitations
* under the license.
*/
package org apache hadoop hbase io encoding
import java io datainputstream
import java io dataoutputstream
import java io ioexception
import java nio bytebuffer
import org apache hadoop hbase util bytebufferutils
import org apache hadoop hbase util bytes
import org apache hadoop io rawcomparator
/**
* just copy data, do not do any kind of compression. use for comparison and
* benchmarking.
*/
public class copykeydatablockencoder extends buffereddatablockencoder
@override
public void compresskeyvalues dataoutputstream out
bytebuffer in  boolean includesmemstorets  throws ioexception
in rewind
bytebufferutils putint out  in limit
bytebufferutils movebuffertostream out  in  in limit
@override
public bytebuffer uncompresskeyvalues datainputstream source
int preserveheaderlength  int skiplastbytes  boolean includesmemstorets
throws ioexception
int decompressedsize   source readint
bytebuffer buffer   bytebuffer allocate decompressedsize
preserveheaderlength
buffer position preserveheaderlength
bytebufferutils copyfromstreamtobuffer buffer  source  decompressedsize
return buffer
@override
public bytebuffer getfirstkeyinblock bytebuffer block
int keylength   block getint bytes sizeof_int
return bytebuffer wrap block array
block arrayoffset     3   bytes sizeof_int  keylength  slice
@override
public string tostring
return copykeydatablockencoder class getsimplename
@override
public encodedseeker createseeker rawcomparator<byte> comparator
final boolean includesmemstorets
return new bufferedencodedseeker<seekerstate> comparator
@override
protected void decodenext
current keylength   currentbuffer getint
current valuelength   currentbuffer getint
current ensurespaceforkey
currentbuffer get current keybuffer  0  current keylength
current valueoffset   currentbuffer position
bytebufferutils skip currentbuffer  current valuelength
if  includesmemstorets
current memstorets   bytebufferutils readvlong currentbuffer
else
current memstorets   0
current nextkvoffset   currentbuffer position
@override
protected void decodefirst
bytebufferutils skip currentbuffer  bytes sizeof_int
current lastcommonprefix   0
decodenext