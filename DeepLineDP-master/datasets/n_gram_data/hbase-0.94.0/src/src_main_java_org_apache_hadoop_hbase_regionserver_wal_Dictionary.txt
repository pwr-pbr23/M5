/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase regionserver wal
import org apache hadoop classification interfaceaudience
/**
* dictionary interface
*
* dictionary indexes should be either bytes or shorts, only positive. (the
* first bit is reserved for detecting whether something is compressed or not).
*/
@interfaceaudience private
interface dictionary
static final byte not_in_dictionary    1
/**
* gets an entry from the dictionary.
*
* @param idx index of the entry
* @return the entry, or null if non existent
*/
public byte getentry short idx
/**
* finds the index of an entry.
* if no entry found, we add it.
*
* @param data the byte array that we're looking up
* @param offset offset into <code>data</code> to add to dictionary.
* @param length length beyond <code>offset</code> that comprises entry; must be > 0.
* @return the index of the entry, or {@link #not_in_dictionary} if not found
*/
public short findentry byte data  int offset  int length
/**
* adds an entry to the dictionary.
* be careful using this method.  it will add an entry to the
* dictionary even if it already has an entry for the same data.
* call {{@link #findentry(byte[], int, int)}} to add without duplicating
* dictionary entries.
*
* @param data the entry to add
* @param offset offset into <code>data</code> to add to dictionary.
* @param length length beyond <code>offset</code> that comprises entry; must be > 0.
* @return the index of the entry
*/
public short addentry byte data  int offset  int length
/**
* flushes the dictionary, empties all values.
*/
public void clear