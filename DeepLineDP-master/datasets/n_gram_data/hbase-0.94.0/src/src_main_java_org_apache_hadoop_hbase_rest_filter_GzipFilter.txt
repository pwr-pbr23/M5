/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase rest filter
import java io ioexception
import java io outputstream
import java util hashset
import java util set
import java util stringtokenizer
import javax servlet filter
import javax servlet filterchain
import javax servlet filterconfig
import javax servlet servletexception
import javax servlet servletrequest
import javax servlet servletresponse
import javax servlet http httpservletrequest
import javax servlet http httpservletresponse
public class gzipfilter implements filter
private set<string> mimetypes   new hashset<string>
@override
public void init filterconfig filterconfig  throws servletexception
string s   filterconfig getinitparameter
if  s    null
stringtokenizer tok   new stringtokenizer s     false
while  tok hasmoretokens
mimetypes add tok nexttoken
@override
public void destroy
@override
public void dofilter servletrequest req  servletresponse rsp
filterchain chain  throws ioexception  servletexception
httpservletrequest request    httpservletrequest req
httpservletresponse response    httpservletresponse rsp
string contentencoding   request getheader
string acceptencoding   request getheader
string contenttype   request getheader
if   contentencoding    null
contentencoding tolowercase   indexof    >  1
request   new gziprequestwrapper request
if    acceptencoding    null
acceptencoding tolowercase   indexof    >  1
contenttype    null     mimetypes contains contenttype
response   new gzipresponsewrapper response
chain dofilter request  response
if  response instanceof gzipresponsewrapper
outputstream os   response getoutputstream
if  os instanceof gzipresponsestream
gzipresponsestream os  finish