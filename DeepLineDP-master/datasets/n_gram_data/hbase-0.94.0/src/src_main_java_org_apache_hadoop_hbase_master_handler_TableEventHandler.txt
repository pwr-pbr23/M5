/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase master handler
import java io filenotfoundexception
import java io ioexception
import java util arraylist
import java util linkedlist
import java util list
import java util navigablemap
import java util treemap
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase htabledescriptor
import org apache hadoop hbase invalidfamilyoperationexception
import org apache hadoop hbase server
import org apache hadoop hbase servername
import org apache hadoop hbase tableexistsexception
import org apache hadoop hbase tablenotdisabledexception
import org apache hadoop hbase catalog metareader
import org apache hadoop hbase client htable
import org apache hadoop hbase executor eventhandler
import org apache hadoop hbase master bulkreopen
import org apache hadoop hbase master masterservices
import org apache hadoop hbase util bytes
import org apache zookeeper keeperexception
import com google common collect lists
import com google common collect maps
/**
* base class for performing operations against tables.
* checks on whether the process can go forward are done in constructor rather
* than later on in {@link #process()}.  the idea is to fail fast rather than
* later down in an async invocation of {@link #process()} (which currently has
* no means of reporting back issues once started).
*/
public abstract class tableeventhandler extends eventhandler
private static final log log   logfactory getlog tableeventhandler class
protected final masterservices masterservices
protected final byte  tablename
protected final string tablenamestr
public tableeventhandler eventtype eventtype  byte  tablename  server server
masterservices masterservices
throws ioexception
super server  eventtype
this masterservices   masterservices
this tablename   tablename
try
this masterservices checktablemodifiable tablename
catch  tablenotdisabledexception ex
if  isonlineschemachangeallowed
eventtype isonlineschemachangesupported
log debug
else
throw ex
this tablenamestr   bytes tostring this tablename
private boolean isonlineschemachangeallowed
return this server getconfiguration   getboolean
false
@override
public void process
try
log info     eventtype
bytes tostring tablename
list<hregioninfo> hris
metareader gettableregions this server getcatalogtracker
tablename
handletableoperation hris
if  eventtype isonlineschemachangesupported      this masterservices
getassignmentmanager   getzktable
isenabledtable bytes tostring tablename
if  reopenallregions hris
log info     eventtype
bytes tostring tablename
else
log warn
catch  ioexception e
log error     bytes tostring tablename   e
catch  keeperexception e
log error     bytes tostring tablename   e
public boolean reopenallregions list<hregioninfo> regions  throws ioexception
boolean done   false
log info
htable table   new htable masterservices getconfiguration    tablename
treemap<servername  list<hregioninfo>> servertoregions   maps
newtreemap
navigablemap<hregioninfo  servername> hrihservermapping   table getregionlocations
list<hregioninfo> reregions   new arraylist<hregioninfo>
for  hregioninfo hri   regions
servername rslocation   hrihservermapping get hri
// skip the offlined split parent region
// see hbase-4578 for more information.
if  null    rslocation
log info     hri
continue
if   servertoregions containskey rslocation
linkedlist<hregioninfo> hrilist   lists newlinkedlist
servertoregions put rslocation  hrilist
reregions add hri
servertoregions get rslocation  add hri
log info     reregions size
servertoregions size
this masterservices getassignmentmanager   setregionstoreopen reregions
bulkreopen bulkreopen   new bulkreopen this server  servertoregions
this masterservices getassignmentmanager
while  true
try
if  bulkreopen bulkreopen
done   true
break
else
log warn
catch  interruptedexception e
log warn
// preserve the interrupt.
thread currentthread   interrupt
break
return done
/**
* @return table descriptor for this table
* @throws tableexistsexception
* @throws filenotfoundexception
* @throws ioexception
*/
htabledescriptor gettabledescriptor
throws filenotfoundexception  ioexception
final string name   bytes tostring tablename
htabledescriptor htd
this masterservices gettabledescriptors   get name
if  htd    null
throw new ioexception     name
return htd
byte  hascolumnfamily final htabledescriptor htd  final byte  cf
throws invalidfamilyoperationexception
if   htd hasfamily cf
throw new invalidfamilyoperationexception
bytes tostring cf
return cf
protected abstract void handletableoperation list<hregioninfo> regions
throws ioexception  keeperexception