/*
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase zookeeper
import org apache hadoop hbase abortable
import org apache hadoop hbase util bytes
import org apache zookeeper keeperexception
/**
* publishes and synchronizes a unique identifier specific to a given hbase
* cluster.  the stored identifier is read from the file system by the active
* master on startup, and is subsequently available to all watchers (including
* clients).
*/
public class clusterid
private zookeeperwatcher watcher
private abortable abortable
private string id
public clusterid zookeeperwatcher watcher  abortable abortable
this watcher   watcher
this abortable   abortable
public boolean hasid
return getid      null
public string getid
try
if  id    null
id   readclusteridznode watcher
catch  keeperexception ke
abortable abort
ke
return id
public static string readclusteridznode zookeeperwatcher watcher
throws keeperexception
if  zkutil checkexists watcher  watcher clusteridznode      1
byte data   zkutil getdata watcher  watcher clusteridznode
if  data    null
return bytes tostring data
return null
public static void setclusterid zookeeperwatcher watcher  string id
throws keeperexception
zkutil createsetdata watcher  watcher clusteridznode  bytes tobytes id