/*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase security token
import java io ioexception
import java lang reflect undeclaredthrowableexception
import java security privilegedexceptionaction
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase hconstants
import org apache hadoop hbase client htable
import org apache hadoop io text
import org apache hadoop mapred jobconf
import org apache hadoop mapreduce job
import org apache hadoop security usergroupinformation
import org apache hadoop security token token
/**
* utility methods for obtaining authentication tokens.
*/
public class tokenutil
private static log log   logfactory getlog tokenutil class
/**
* obtain and return an authentication token for the current user.
* @param conf the configuration for connecting to the cluster
* @return the authentication token instance
*/
public static token<authenticationtokenidentifier> obtaintoken
configuration conf  throws ioexception
htable meta   null
try
meta   new htable conf
authenticationprotocol prot   meta coprocessorproxy
authenticationprotocol class  hconstants empty_start_row
return prot getauthenticationtoken
finally
if  meta    null
meta close
private static text getclusterid token<authenticationtokenidentifier> token
throws ioexception
return token getservice      null
? token getservice     new text
/**
* obtain an authentication token for the given user and add it to the
* user's credentials.
* @param conf the configuration for connecting to the cluster
* @param user the user for whom to obtain the token
* @throws ioexception if making a remote call to the {@link tokenprovider} fails
* @throws interruptedexception if executing as the given user is interrupted
*/
public static void obtainandcachetoken final configuration conf
usergroupinformation user
throws ioexception  interruptedexception
try
token<authenticationtokenidentifier> token
user doas new privilegedexceptionaction<token<authenticationtokenidentifier>>
public token<authenticationtokenidentifier> run   throws exception
return obtaintoken conf
if  token    null
throw new ioexception   user getusername
if  log isdebugenabled
log debug   token getkind   tostring
user getusername
user addtoken token
catch  ioexception ioe
throw ioe
catch  interruptedexception ie
throw ie
catch  runtimeexception re
throw re
catch  exception e
throw new undeclaredthrowableexception e
user getusername
/**
* obtain an authentication token on behalf of the given user and add it to
* the credentials for the given map reduce job.
* @param conf the configuration for connecting to the cluster
* @param user the user for whom to obtain the token
* @param job the job instance in which the token should be stored
* @throws ioexception if making a remote call to the {@link tokenprovider} fails
* @throws interruptedexception if executing as the given user is interrupted
*/
public static void obtaintokenforjob final configuration conf
usergroupinformation user  job job
throws ioexception  interruptedexception
try
token<authenticationtokenidentifier> token
user doas new privilegedexceptionaction<token<authenticationtokenidentifier>>
public token<authenticationtokenidentifier> run   throws exception
return obtaintoken conf
if  token    null
throw new ioexception   user getusername
text clusterid   getclusterid token
log info   token getkind   tostring
user getusername       clusterid tostring
job getcredentials   addtoken clusterid  token
catch  ioexception ioe
throw ioe
catch  interruptedexception ie
throw ie
catch  runtimeexception re
throw re
catch  exception e
throw new undeclaredthrowableexception e
user getusername
/**
* obtain an authentication token on behalf of the given user and add it to
* the credentials for the given map reduce job.
* @param user the user for whom to obtain the token
* @param job the job configuration in which the token should be stored
* @throws ioexception if making a remote call to the {@link tokenprovider} fails
* @throws interruptedexception if executing as the given user is interrupted
*/
public static void obtaintokenforjob final jobconf job
usergroupinformation user
throws ioexception  interruptedexception
try
token<authenticationtokenidentifier> token
user doas new privilegedexceptionaction<token<authenticationtokenidentifier>>
public token<authenticationtokenidentifier> run   throws exception
return obtaintoken job
if  token    null
throw new ioexception   user getusername
text clusterid   getclusterid token
log info   token getkind   tostring
user getusername     clusterid tostring
job getcredentials   addtoken clusterid  token
catch  ioexception ioe
throw ioe
catch  interruptedexception ie
throw ie
catch  runtimeexception re
throw re
catch  exception e
throw new undeclaredthrowableexception e
user getusername