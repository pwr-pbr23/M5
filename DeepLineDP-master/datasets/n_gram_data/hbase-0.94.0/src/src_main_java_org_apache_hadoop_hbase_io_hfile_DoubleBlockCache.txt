/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase io hfile
import java io ioexception
import java util list
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase io heapsize
import org apache hadoop hbase io hfile slab slabcache
import org apache hadoop util stringutils
/**
* doubleblockcache is an abstraction layer that combines two caches, the
* smaller onheapcache and the larger offheapcache. cacheblock attempts to cache
* the block in both caches, while readblock reads first from the faster on heap
* cache before looking for the block in the off heap cache. metrics are the
* combined size and hits and misses of both caches.
*
**/
public class doubleblockcache implements blockcache  heapsize
static final log log   logfactory getlog doubleblockcache class getname
private final lrublockcache onheapcache
private final slabcache offheapcache
private final cachestats stats
/**
* default constructor. specify maximum size and expected average block size
* (approximation is fine).
* <p>
* all other factors will be calculated based on defaults specified in this
* class.
*
* @param onheapsize maximum size of the onheapcache, in bytes.
* @param offheapsize maximum size of the offheapcache, in bytes.
* @param onheapblocksize average block size of the on heap cache.
* @param offheapblocksize average block size for the off heap cache
* @param conf configuration file. currently used only by the off heap cache.
*/
public doubleblockcache long onheapsize  long offheapsize
long onheapblocksize  long offheapblocksize  configuration conf
log info
stringutils humanreadableint onheapsize
stringutils humanreadableint onheapblocksize
onheapcache   new lrublockcache onheapsize  onheapblocksize
log info
stringutils humanreadableint offheapsize
stringutils humanreadableint offheapblocksize
offheapcache   new slabcache offheapsize  offheapblocksize
offheapcache addslabbyconf conf
this stats   new cachestats
@override
public void cacheblock blockcachekey cachekey  cacheable buf  boolean inmemory
onheapcache cacheblock cachekey  buf  inmemory
offheapcache cacheblock cachekey  buf
@override
public void cacheblock blockcachekey cachekey  cacheable buf
onheapcache cacheblock cachekey  buf
offheapcache cacheblock cachekey  buf
@override
public cacheable getblock blockcachekey cachekey  boolean caching
cacheable cachedblock
if   cachedblock   onheapcache getblock cachekey  caching      null
stats hit caching
return cachedblock
else if   cachedblock   offheapcache getblock cachekey  caching      null
if  caching
onheapcache cacheblock cachekey  cachedblock
stats hit caching
return cachedblock
stats miss caching
return null
@override
public boolean evictblock blockcachekey cachekey
stats evict
boolean cachea   onheapcache evictblock cachekey
boolean cacheb   offheapcache evictblock cachekey
boolean evicted   cachea    cacheb
if  evicted
stats evicted
return evicted
@override
public cachestats getstats
return this stats
@override
public void shutdown
onheapcache shutdown
offheapcache shutdown
@override
public long heapsize
return onheapcache heapsize     offheapcache heapsize
public long size
return onheapcache size     offheapcache size
public long getfreesize
return onheapcache getfreesize     offheapcache getfreesize
public long getcurrentsize
return onheapcache getcurrentsize     offheapcache getcurrentsize
public long getevictedcount
return onheapcache getevictedcount     offheapcache getevictedcount
@override
public int evictblocksbyhfilename string hfilename
onheapcache evictblocksbyhfilename hfilename
offheapcache evictblocksbyhfilename hfilename
return 0
@override
public list<blockcachecolumnfamilysummary> getblockcachecolumnfamilysummaries
configuration conf  throws ioexception
return onheapcache getblockcachecolumnfamilysummaries conf
@override
public long getblockcount
return onheapcache getblockcount     offheapcache getblockcount