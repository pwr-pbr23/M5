/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase zookeeper
import java io ioexception
import java util arraylist
import java util list
import java util navigableset
import java util treeset
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hbase abortable
import org apache hadoop hbase servername
import org apache hadoop hbase master servermanager
import org apache zookeeper keeperexception
/**
* tracks the online region servers via zk.
*
* <p>handling of new rss checking in is done via rpc.  this class
* is only responsible for watching for expired nodes.  it handles
* listening for changes in the rs node list and watching each node.
*
* <p>if an rs node gets deleted, this automatically handles calling of
* {@link servermanager#expireserver(servername)}
*/
public class regionservertracker extends zookeeperlistener
private static final log log   logfactory getlog regionservertracker class
private navigableset<servername> regionservers   new treeset<servername>
private servermanager servermanager
private abortable abortable
public regionservertracker zookeeperwatcher watcher
abortable abortable  servermanager servermanager
super watcher
this abortable   abortable
this servermanager   servermanager
/**
* starts the tracking of online regionservers.
*
* <p>all rss will be tracked after this method is called.
*
* @throws keeperexception
* @throws ioexception
*/
public void start   throws keeperexception  ioexception
watcher registerlistener this
list<string> servers
zkutil listchildrenandwatchthem watcher  watcher rsznode
add servers
private void add final list<string> servers  throws ioexception
synchronized this regionservers
this regionservers clear
for  string n  servers
servername sn   servername parseservername zkutil getnodename n
this regionservers add sn
private void remove final servername sn
synchronized this regionservers
this regionservers remove sn
@override
public void nodedeleted string path
if  path startswith watcher rsznode
string servername   zkutil getnodename path
log info
servername
servername sn   servername parseservername servername
if   servermanager isserveronline sn
log info servername tostring
return
remove sn
this servermanager expireserver sn
@override
public void nodechildrenchanged string path
if  path equals watcher rsznode
try
list<string> servers
zkutil listchildrenandwatchthem watcher  watcher rsznode
add servers
catch  ioexception e
abortable abort    e
catch  keeperexception e
abortable abort    e
/**
* gets the online servers.
* @return list of online servers
*/
public list<servername> getonlineservers
synchronized  this regionservers
return new arraylist<servername> this regionservers