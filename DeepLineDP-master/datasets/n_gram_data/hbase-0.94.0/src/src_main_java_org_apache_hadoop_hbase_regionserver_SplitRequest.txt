/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase regionserver
import java io ioexception
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hbase remoteexceptionhandler
import org apache hadoop hbase util bytes
import org apache hadoop util stringutils
import com google common base preconditions
/**
* handles processing region splits. put in a queue, owned by hregionserver.
*/
class splitrequest implements runnable
static final log log   logfactory getlog splitrequest class
private final hregion parent
private final byte midkey
private final hregionserver server
splitrequest hregion region  byte midkey  hregionserver hrs
preconditions checknotnull hrs
this parent   region
this midkey   midkey
this server   hrs
@override
public string tostring
return     parent       bytes tostringbinary midkey
@override
public void run
if  this server isstopping      this server isstopped
log debug
this server isstopping         this server isstopped
return
try
final long starttime   system currenttimemillis
splittransaction st   new splittransaction parent  midkey
// if prepare does not return true, for some reason -- logged inside in
// the prepare call -- we are not ready to split just now. just return.
if   st prepare    return
try
st execute this server  this server
this server getmetrics   incrementsplitsuccesscount
catch  exception e
try
log info
parent getregionnameasstring         e getmessage    e
if  st rollback this server  this server
log info
parent getregionnameasstring
this server getmetrics   incrementsplitfailurecount
else
this server abort
catch  runtimeexception ee
string msg
parent getregionnameasstring
// if failed rollback, kill this server to avoid having a hole in table.
log info msg  ee
this server abort msg
return
log info
parent getregioninfo   getregionnameasstring
st getfirstdaughter   getregionnameasstring
st getseconddaughter   getregionnameasstring
stringutils formattimediff system currenttimemillis    starttime
catch  ioexception ex
log error     this  remoteexceptionhandler
checkioexception ex
this server getmetrics   incrementsplitfailurecount
server checkfilesystem