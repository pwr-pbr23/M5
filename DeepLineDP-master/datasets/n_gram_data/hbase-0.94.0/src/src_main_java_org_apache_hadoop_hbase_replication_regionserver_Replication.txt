/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase replication regionserver
import java io ioexception
import java util navigablemap
import java util treemap
import java util concurrent atomic atomicboolean
import org apache hadoop conf configuration
import org apache hadoop fs filesystem
import org apache hadoop fs path
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase htabledescriptor
import org apache hadoop hbase keyvalue
import org apache hadoop hbase server
import org apache hadoop hbase regionserver replicationsourceservice
import org apache hadoop hbase regionserver replicationsinkservice
import org apache hadoop hbase regionserver wal hlog
import org apache hadoop hbase regionserver wal hlogkey
import org apache hadoop hbase regionserver wal waledit
import org apache hadoop hbase regionserver wal walactionslistener
import org apache hadoop hbase replication replicationzookeeper
import org apache hadoop hbase replication master replicationlogcleaner
import org apache hadoop hbase util bytes
import org apache zookeeper keeperexception
import static org apache hadoop hbase hconstants hbase_master_logcleaner_plugins
import static org apache hadoop hbase hconstants replication_enable_key
import static org apache hadoop hbase hconstants replication_scope_local
/**
* gateway to replication.  used by {@link org.apache.hadoop.hbase.regionserver.hregionserver}.
*/
public class replication implements walactionslistener
replicationsourceservice  replicationsinkservice
private boolean replication
private replicationsourcemanager replicationmanager
private final atomicboolean replicating   new atomicboolean true
private replicationzookeeper zkhelper
private configuration conf
private replicationsink replicationsink
// hosting server
private server server
/**
* instantiate the replication management (if rep is enabled).
* @param server hosting server
* @param fs handle to the filesystem
* @param logdir
* @param oldlogdir directory where logs are archived
* @throws ioexception
*/
public replication final server server  final filesystem fs
final path logdir  final path oldlogdir  throws ioexception
initialize server  fs  logdir  oldlogdir
/**
* empty constructor
*/
public replication
public void initialize final server server  final filesystem fs
final path logdir  final path oldlogdir  throws ioexception
this server   server
this conf   this server getconfiguration
this replication   isreplication this conf
if  replication
try
this zkhelper   new replicationzookeeper server  this replicating
catch  keeperexception ke
throw new ioexception
this replicating  ke
this replicationmanager   new replicationsourcemanager zkhelper  conf
this server  fs  this replicating  logdir  oldlogdir
else
this replicationmanager   null
this zkhelper   null
/**
* @param c configuration to look at
* @return true if replication is enabled.
*/
public static boolean isreplication final configuration c
return c getboolean replication_enable_key  false
/*
* returns an object to listen to new hlog changes
**/
public walactionslistener getwalactionslistener
return this
/**
* stops replication service.
*/
public void stopreplicationservice
join
/**
* join with the replication threads
*/
public void join
if  this replication
this replicationmanager join
/**
* carry on the list of log entries down to the sink
* @param entries list of entries to replicate
* @throws ioexception
*/
public void replicatelogentries hlog entry entries  throws ioexception
if  this replication
this replicationsink replicateentries entries
/**
* if replication is enabled and this cluster is a master,
* it starts
* @throws ioexception
*/
public void startreplicationservice   throws ioexception
if  this replication
this replicationmanager init
this replicationsink   new replicationsink this conf  this server
/**
* get the replication sources manager
* @return the manager if replication is enabled, else returns false
*/
public replicationsourcemanager getreplicationmanager
return this replicationmanager
@override
public void visitlogentrybeforewrite hregioninfo info  hlogkey logkey
waledit logedit
// not interested
@override
public void visitlogentrybeforewrite htabledescriptor htd  hlogkey logkey
waledit logedit
navigablemap<byte  integer> scopes
new treemap<byte  integer> bytes bytes_comparator
byte family
for  keyvalue kv   logedit getkeyvalues
family   kv getfamily
int scope   htd getfamily family  getscope
if  scope    replication_scope_local
scopes containskey family
scopes put family  scope
if   scopes isempty
logedit setscopes scopes
@override
public void prelogroll path oldpath  path newpath  throws ioexception
// not interested
@override
public void postlogroll path oldpath  path newpath  throws ioexception
getreplicationmanager   logrolled newpath
@override
public void prelogarchive path oldpath  path newpath  throws ioexception
// not interested
@override
public void postlogarchive path oldpath  path newpath  throws ioexception
// not interested
/**
* this method modifies the master's configuration in order to inject
* replication-related features
* @param conf
*/
public static void decoratemasterconfiguration configuration conf
if   isreplication conf
return
string plugins   conf get hbase_master_logcleaner_plugins
if   plugins contains replicationlogcleaner class tostring
conf set hbase_master_logcleaner_plugins
plugins       replicationlogcleaner class getcanonicalname
@override
public void logrollrequested
// not interested
@override
public void logcloserequested
// not interested