/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase constraint
import java io ioexception
import java util arraylist
import java util list
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hbase coprocessorenvironment
import org apache hadoop hbase htabledescriptor
import org apache hadoop hbase client put
import org apache hadoop hbase coprocessor baseregionobserver
import org apache hadoop hbase coprocessor observercontext
import org apache hadoop hbase coprocessor regioncoprocessorenvironment
import org apache hadoop hbase regionserver wal waledit
/***
* processes multiple {@link constraint constraints} on a given table.
* <p>
* this is an ease of use mechanism - all the functionality here could be
* implemented on any given system by a coprocessor.
*/
public class constraintprocessor extends baseregionobserver
private static final log log   logfactory getlog constraintprocessor class
private final classloader classloader
private list<? extends constraint> constraints   new arraylist<constraint>
/**
* create the constraint processor.
* <p>
* stores the current classloader.
*/
public constraintprocessor
classloader   this getclass   getclassloader
@override
public void start coprocessorenvironment environment
// make sure we are on a region server
if    environment instanceof regioncoprocessorenvironment
throw new illegalargumentexception
regioncoprocessorenvironment env    regioncoprocessorenvironment  environment
htabledescriptor desc   env getregion   gettabledesc
// load all the constraints from the htd
try
this constraints   constraints getconstraints desc  classloader
catch  ioexception e
throw new illegalargumentexception e
if  log isinfoenabled
log info     constraints size
new string desc getname
@override
public void preput observercontext<regioncoprocessorenvironment> e  put put
waledit edit  boolean writetowal  throws ioexception
// check the put against the stored constraints
for  constraint c   constraints
c check put
// if we made it here, then the put is valid