/*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase client
import java io datainput
import java io dataoutput
import java io ioexception
import java util arraylist
import java util arrays
import java util collections
import java util list
import org apache hadoop hbase hconstants
import org apache hadoop hbase io hbaseobjectwritable
import org apache hadoop hbase util bytes
/**
* performs multiple mutations atomically on a single row.
* currently {@link put} and {@link delete} are supported.
*
* the mutations are performed in the order in which they
* were added.
*/
public class rowmutations implements row
private list<mutation> mutations   new arraylist<mutation>
private byte  row
private static final byte version    byte 0
/** constructor for writable. do not use */
public rowmutations
/**
* create an atomic mutation for the specified row.
* @param row row key
*/
public rowmutations byte  row
if row    null    row length > hconstants max_row_length
throw new illegalargumentexception
this row   arrays copyof row  row length
/**
* add a {@link put} operation to the list of mutations
* @param p the {@link put} to add
* @throws ioexception
*/
public void add put p  throws ioexception
internaladd p
/**
* add a {@link delete} operation to the list of mutations
* @param d the {@link delete} to add
* @throws ioexception
*/
public void add delete d  throws ioexception
internaladd d
private void internaladd mutation m  throws ioexception
int res   bytes compareto this row  m getrow
if res    0
throw new ioexception
bytes tostringbinary m getrow
bytes tostringbinary this row
mutations add m
@override
public void readfields final datainput in  throws ioexception
int version   in readbyte
if  version > version
throw new ioexception
this row   bytes readbytearray in
int nummutations   in readint
mutations clear
for int i   0  i < nummutations  i
mutations add  mutation  hbaseobjectwritable readobject in  null
@override
public void write final dataoutput out  throws ioexception
out writebyte version
bytes writebytearray out  this row
out writeint mutations size
for  mutation m   mutations
hbaseobjectwritable writeobject out  m  m getclass    null
@override
public int compareto row i
return bytes compareto this getrow    i getrow
@override
public byte getrow
return row
/**
* @return an unmodifiable list of the current mutations.
*/
public list<mutation> getmutations
return collections unmodifiablelist mutations