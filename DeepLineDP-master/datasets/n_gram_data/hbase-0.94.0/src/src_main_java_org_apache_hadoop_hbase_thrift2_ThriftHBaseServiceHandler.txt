/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase thrift2
import static org apache hadoop hbase thrift2 thriftutilities deletefromthrift
import static org apache hadoop hbase thrift2 thriftutilities deletesfromhbase
import static org apache hadoop hbase thrift2 thriftutilities deletesfromthrift
import static org apache hadoop hbase thrift2 thriftutilities getfromthrift
import static org apache hadoop hbase thrift2 thriftutilities getsfromthrift
import static org apache hadoop hbase thrift2 thriftutilities incrementfromthrift
import static org apache hadoop hbase thrift2 thriftutilities putfromthrift
import static org apache hadoop hbase thrift2 thriftutilities putsfromthrift
import static org apache hadoop hbase thrift2 thriftutilities resultfromhbase
import static org apache hadoop hbase thrift2 thriftutilities resultsfromhbase
import static org apache hadoop hbase thrift2 thriftutilities scanfromthrift
import java io ioexception
import java lang reflect invocationhandler
import java lang reflect invocationtargetexception
import java lang reflect method
import java lang reflect proxy
import java nio bytebuffer
import java util list
import java util map
import java util concurrent concurrenthashmap
import java util concurrent atomic atomicinteger
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase client delete
import org apache hadoop hbase client htableinterface
import org apache hadoop hbase client htablepool
import org apache hadoop hbase client resultscanner
import org apache hadoop hbase thrift thriftmetrics
import org apache hadoop hbase thrift2 generated tdelete
import org apache hadoop hbase thrift2 generated tget
import org apache hadoop hbase thrift2 generated thbaseservice
import org apache hadoop hbase thrift2 generated tioerror
import org apache hadoop hbase thrift2 generated tillegalargument
import org apache hadoop hbase thrift2 generated tincrement
import org apache hadoop hbase thrift2 generated tput
import org apache hadoop hbase thrift2 generated tresult
import org apache hadoop hbase thrift2 generated tscan
import org apache thrift texception
/**
* this class is a glue object that connects thrift rpc calls to the hbase client api primarily defined in the
* htableinterface.
*/
public class thrifthbaseservicehandler implements thbaseservice iface
// todo: size of pool configuraple
private final htablepool htablepool
private static final log log   logfactory getlog thrifthbaseservicehandler class
// nextscannerid and scannermap are used to manage scanner state
// todo: cleanup thread for scanners, scanner id wrap
private final atomicinteger nextscannerid   new atomicinteger 0
private final map<integer  resultscanner> scannermap   new concurrenthashmap<integer  resultscanner>
public static thbaseservice iface newinstance
configuration conf  thriftmetrics metrics
thbaseservice iface handler   new thrifthbaseservicehandler conf
return  thbaseservice iface  proxy newproxyinstance
handler getclass   getclassloader
new class thbaseservice iface class
new thbaseservicemetricsproxy handler  metrics
private static class thbaseservicemetricsproxy implements invocationhandler
private final thbaseservice iface handler
private final thriftmetrics metrics
private thbaseservicemetricsproxy
thbaseservice iface handler  thriftmetrics metrics
this handler   handler
this metrics   metrics
@override
public object invoke object proxy  method m  object args
throws throwable
object result
try
long start   now
result   m invoke handler  args
int processtime    int  now     start
metrics incmethodtime m getname    processtime
catch  invocationtargetexception e
throw e gettargetexception
catch  exception e
throw new runtimeexception
e getmessage
return result
private static long now
return system nanotime
thrifthbaseservicehandler configuration conf
htablepool   new htablepool conf  integer max_value
private htableinterface gettable byte tablename
return htablepool gettable tablename
private void closetable htableinterface table  throws tioerror
try
table close
catch  ioexception e
throw gettioerror e
private tioerror gettioerror ioexception e
tioerror err   new tioerror
err setmessage e getmessage
return err
/**
* assigns a unique id to the scanner and adds the mapping to an internal hashmap.
*
* @param scanner to add
* @return id for this scanner
*/
private int addscanner resultscanner scanner
int id   nextscannerid getandincrement
scannermap put id  scanner
return id
/**
* returns the scanner associated with the specified id.
*
* @param id of the scanner to get
* @return a scanner, or null if the id is invalid
*/
private resultscanner getscanner int id
return scannermap get id
/**
* removes the scanner associated with the specified id from the internal hashmap.
*
* @param id of the scanner to remove
* @return the removed scanner, or <code>null</code> if the id is invalid
*/
protected resultscanner removescanner int id
return scannermap remove id
@override
public boolean exists bytebuffer table  tget get  throws tioerror  texception
htableinterface htable   gettable table array
try
return htable exists getfromthrift get
catch  ioexception e
throw gettioerror e
finally
closetable htable
@override
public tresult get bytebuffer table  tget get  throws tioerror  texception
htableinterface htable   gettable table array
try
return resultfromhbase htable get getfromthrift get
catch  ioexception e
throw gettioerror e
finally
closetable htable
@override
public list<tresult> getmultiple bytebuffer table  list<tget> gets  throws tioerror  texception
htableinterface htable   gettable table array
try
return resultsfromhbase htable get getsfromthrift gets
catch  ioexception e
throw gettioerror e
finally
closetable htable
@override
public void put bytebuffer table  tput put  throws tioerror  texception
htableinterface htable   gettable table array
try
htable put putfromthrift put
catch  ioexception e
throw gettioerror e
finally
closetable htable
@override
public boolean checkandput bytebuffer table  bytebuffer row  bytebuffer family  bytebuffer qualifier  bytebuffer value  tput put
throws tioerror  texception
htableinterface htable   gettable table array
try
return htable checkandput row array    family array    qualifier array     value    null  ? null   value array    putfromthrift put
catch  ioexception e
throw gettioerror e
finally
closetable htable
@override
public void putmultiple bytebuffer table  list<tput> puts  throws tioerror  texception
htableinterface htable   gettable table array
try
htable put putsfromthrift puts
catch  ioexception e
throw gettioerror e
finally
closetable htable
@override
public void deletesingle bytebuffer table  tdelete deletesingle  throws tioerror  texception
htableinterface htable   gettable table array
try
htable delete deletefromthrift deletesingle
catch  ioexception e
throw gettioerror e
finally
closetable htable
@override
public list<tdelete> deletemultiple bytebuffer table  list<tdelete> deletes  throws tioerror  texception
htableinterface htable   gettable table array
list<delete> tempdeletes   deletesfromthrift deletes
try
htable delete tempdeletes
catch  ioexception e
throw gettioerror e
finally
closetable htable
return deletesfromhbase tempdeletes
@override
public boolean checkanddelete bytebuffer table  bytebuffer row  bytebuffer family  bytebuffer qualifier  bytebuffer value
tdelete deletesingle  throws tioerror  texception
htableinterface htable   gettable table array
try
if  value    null
return htable checkanddelete row array    family array    qualifier array    null  deletefromthrift deletesingle
else
return htable checkanddelete row array    family array    qualifier array    value array    deletefromthrift deletesingle
catch  ioexception e
throw gettioerror e
finally
closetable htable
@override
public tresult increment bytebuffer table  tincrement increment  throws tioerror  texception
htableinterface htable   gettable table array
try
return resultfromhbase htable increment incrementfromthrift increment
catch  ioexception e
throw gettioerror e
finally
closetable htable
@override
public int openscanner bytebuffer table  tscan scan  throws tioerror  texception
htableinterface htable   gettable table array
resultscanner resultscanner   null
try
resultscanner   htable getscanner scanfromthrift scan
catch  ioexception e
throw gettioerror e
finally
closetable htable
return addscanner resultscanner
@override
public list<tresult> getscannerrows int scannerid  int numrows  throws tioerror  tillegalargument  texception
resultscanner scanner   getscanner scannerid
if  scanner    null
tillegalargument ex   new tillegalargument
ex setmessage
throw ex
try
return resultsfromhbase scanner next numrows
catch  ioexception e
throw gettioerror e
@override
public void closescanner int scannerid  throws tioerror  tillegalargument  texception
if  removescanner scannerid     null
tillegalargument ex   new tillegalargument
ex setmessage
throw ex