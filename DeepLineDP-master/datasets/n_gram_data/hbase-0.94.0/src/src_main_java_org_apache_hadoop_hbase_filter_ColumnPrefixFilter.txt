/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase filter
import org apache hadoop hbase keyvalue
import org apache hadoop hbase util bytes
import java io dataoutput
import java io ioexception
import java io datainput
import java util arraylist
import com google common base preconditions
/**
* this filter is used for selecting only those keys with columns that matches
* a particular prefix. for example, if prefix is 'an', it will pass keys with
* columns like 'and', 'anti' but not keys with columns like 'ball', 'act'.
*/
public class columnprefixfilter extends filterbase
protected byte  prefix   null
public columnprefixfilter
super
public columnprefixfilter final byte  prefix
this prefix   prefix
public byte getprefix
return prefix
@override
public returncode filterkeyvalue keyvalue kv
if  this prefix    null    kv getbuffer      null
return returncode include
else
return filtercolumn kv getbuffer    kv getqualifieroffset    kv getqualifierlength
public returncode filtercolumn byte buffer  int qualifieroffset  int qualifierlength
if  qualifierlength < prefix length
int cmp   bytes compareto buffer  qualifieroffset  qualifierlength  this prefix  0
qualifierlength
if  cmp <  0
return returncode seek_next_using_hint
else
return returncode next_row
else
int cmp   bytes compareto buffer  qualifieroffset  this prefix length  this prefix  0
this prefix length
if  cmp < 0
return returncode seek_next_using_hint
else if  cmp > 0
return returncode next_row
else
return returncode include
public static filter createfilterfromarguments arraylist<byte > filterarguments
preconditions checkargument filterarguments size      1
filterarguments size
byte  columnprefix   parsefilter removequotesfrombytearray filterarguments get 0
return new columnprefixfilter columnprefix
public void write dataoutput out  throws ioexception
bytes writebytearray out  this prefix
public void readfields datainput in  throws ioexception
this prefix   bytes readbytearray in
public keyvalue getnextkeyhint keyvalue kv
return keyvalue createfirstonrow
kv getbuffer    kv getrowoffset    kv getrowlength    kv getbuffer
kv getfamilyoffset    kv getfamilylength    prefix  0  prefix length
@override
public string tostring
return this getclass   getsimplename         bytes tostringbinary this prefix