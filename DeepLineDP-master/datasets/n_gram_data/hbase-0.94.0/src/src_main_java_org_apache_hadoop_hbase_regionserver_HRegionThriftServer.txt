/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase regionserver
import static org apache hadoop hbase thrift thriftserverrunner hbasehandler tobytes
import java io ioexception
import java nio bytebuffer
import java util list
import java util map
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase hregionlocation
import org apache hadoop hbase keyvalue
import org apache hadoop hbase notservingregionexception
import org apache hadoop hbase client get
import org apache hadoop hbase client htable
import org apache hadoop hbase client result
import org apache hadoop hbase thrift thriftserverrunner
import org apache hadoop hbase thrift thriftutilities
import org apache hadoop hbase thrift generated ioerror
import org apache hadoop hbase thrift generated trowresult
/**
* hregionthriftserver - this class starts up a thrift server in the same
* jvm where the regionserver is running. it inherits most of the
* functionality from the standard thriftserver. this is good because
* we can maintain compatibility with applications that use the
* standard thrift interface. for performance reasons, we can override
* methods to directly invoke calls into the hregionserver and avoid the hop.
* <p>
* this can be enabled with <i>hbase.regionserver.export.thrift</i> set to true.
*/
public class hregionthriftserver extends thread
public static final log log   logfactory getlog hregionthriftserver class
private final hregionserver rs
private final thriftserverrunner serverrunner
/**
* create an instance of the glue object that connects the
* regionserver with the standard thriftserver implementation
*/
hregionthriftserver hregionserver regionserver  configuration conf
throws ioexception
super
this rs   regionserver
this serverrunner
new thriftserverrunner conf  new hbasehandlerregion conf
/**
* stop thriftserver
*/
void shutdown
serverrunner shutdown
@override
public void run
serverrunner run
/**
* inherit the handler from the standard thriftserverrunner. this allows us
* to use the default implementation for most calls. we override certain calls
* for performance reasons
*/
private class hbasehandlerregion extends thriftserverrunner hbasehandler
/**
* whether requests should be redirected to other regionservers if the
* specified region is not hosted by this regionserver.
*/
private boolean redirect
hbasehandlerregion final configuration conf  throws ioexception
super conf
initialize conf
/**
* read and initialize config parameters
*/
private void initialize configuration conf
this redirect   conf getboolean
false
// todo: override more methods to short-circuit for performance
/**
* get a record. short-circuit to get better performance.
*/
@override
public list<trowresult> getrowwithcolumnsts bytebuffer tablename
bytebuffer rowb
list<bytebuffer> columns
long timestamp
map<bytebuffer  bytebuffer> attributes  throws ioerror
try
byte row   tobytes rowb
htable table   gettable tobytes tablename
hregionlocation location   table getregionlocation row  false
byte regionname   location getregioninfo   getregionname
if  columns    null
get get   new get row
get settimerange long min_value  timestamp
result result   rs get regionname  get
return thriftutilities rowresultfromhbase result
get get   new get row
for bytebuffer column   columns
byte  famandqf   keyvalue parsecolumn tobytes column
if  famandqf length    1
get addfamily famandqf
else
get addcolumn famandqf  famandqf
get settimerange long min_value  timestamp
result result   rs get regionname  get
return thriftutilities rowresultfromhbase result
catch  notservingregionexception e
if   redirect
log warn e getmessage    e
throw new ioerror e getmessage
log debug
return super getrowwithcolumnsts tablename  rowb  columns  timestamp
attributes
catch  ioexception e
log warn e getmessage    e
throw new ioerror e getmessage