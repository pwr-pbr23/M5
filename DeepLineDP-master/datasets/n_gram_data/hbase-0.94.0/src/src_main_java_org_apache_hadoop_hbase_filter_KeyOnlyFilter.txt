/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase filter
import java io datainput
import java io dataoutput
import java io ioexception
import org apache hadoop hbase keyvalue
import org apache hadoop hbase util bytes
import java util arraylist
import com google common base preconditions
/**
* a filter that will only return the key component of each kv (the value will
* be rewritten as empty).
* <p>
* this filter can be used to grab all of the keys without having to also grab
* the values.
*/
public class keyonlyfilter extends filterbase
boolean lenasval
public keyonlyfilter     this false
public keyonlyfilter boolean lenasval    this lenasval   lenasval
@override
public keyvalue transform keyvalue kv
return kv createkeyonly this lenasval
public static filter createfilterfromarguments arraylist<byte > filterarguments
preconditions checkargument filterarguments size      0
filterarguments size
return new keyonlyfilter
public void write dataoutput out  throws ioexception
out writeboolean this lenasval
public void readfields datainput in  throws ioexception
this lenasval   in readboolean