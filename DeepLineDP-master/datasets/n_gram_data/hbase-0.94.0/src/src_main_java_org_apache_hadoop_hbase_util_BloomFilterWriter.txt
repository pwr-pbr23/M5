/*
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase util
import org apache hadoop io writable
/**
* specifies methods needed to add elements to a bloom filter and serialize the
* resulting bloom filter as a sequence of bytes.
*/
public interface bloomfilterwriter extends bloomfilterbase
/** allocate memory for the bloom filter data. */
void allocbloom
/** compact the bloom filter before writing metadata & data to disk. */
void compactbloom
/**
* get a writable interface into bloom filter meta data.
*
* @return a writable instance that can be later written to a stream
*/
writable getmetawriter
/**
* get a writable interface into bloom filter data (the actual bloom bits).
* not used for compound bloom filters.
*
* @return a writable instance that can be later written to a stream
*/
writable getdatawriter
/**
* add the specified binary to the bloom filter.
*
* @param buf data to be added to the bloom
* @param offset offset into the data to be added
* @param len length of the data to be added
*/
void add byte buf  int offset  int len