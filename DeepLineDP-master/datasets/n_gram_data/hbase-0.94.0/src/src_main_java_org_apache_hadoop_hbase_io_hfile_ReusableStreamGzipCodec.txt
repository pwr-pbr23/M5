/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements. see the notice file distributed with this
* work for additional information regarding copyright ownership. the asf
* licenses this file to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
* http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis, without
* warranties or conditions of any kind, either express or implied. see the
* license for the specific language governing permissions and limitations
* under the license.
*/
package org apache hadoop hbase io hfile
import java io bytearrayoutputstream
import java io ioexception
import java io outputstream
import java util arrays
import java util zip gzipoutputstream
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop io compress compressionoutputstream
import org apache hadoop io compress compressorstream
import org apache hadoop io compress gzipcodec
import org apache hadoop io compress zlib zlibfactory
/**
* fixes an inefficiency in hadoop's gzip codec, allowing to reuse compression
* streams.
*/
public class reusablestreamgzipcodec extends gzipcodec
private static final log log   logfactory getlog compression class
/**
* a bridge that wraps around a deflateroutputstream to make it a
* compressionoutputstream.
*/
protected static class reusablegzipoutputstream extends compressorstream
private static final int gzip_header_length   10
/**
* fixed ten-byte gzip header. see {@link gzipoutputstream}'s source for
* details.
*/
private static final byte gzip_header
static
// capture the fixed ten-byte header hard-coded in gzipoutputstream.
bytearrayoutputstream baos   new bytearrayoutputstream
byte header   null
gzipoutputstream gzipstream   null
try
gzipstream    new gzipoutputstream baos
gzipstream finish
header   arrays copyofrange baos tobytearray    0  gzip_header_length
catch  ioexception e
throw new runtimeexception    e
finally
if  gzipstream    null
try
gzipstream close
catch  ioexception e
log error e
gzip_header   header
private static class resetablegzipoutputstream extends gzipoutputstream
public resetablegzipoutputstream outputstream out  throws ioexception
super out
public void resetstate   throws ioexception
def reset
crc reset
out write gzip_header
public reusablegzipoutputstream outputstream out  throws ioexception
super new resetablegzipoutputstream out
@override
public void close   throws ioexception
out close
@override
public void flush   throws ioexception
out flush
@override
public void write int b  throws ioexception
out write b
@override
public void write byte data  int offset  int length  throws ioexception
out write data  offset  length
@override
public void finish   throws ioexception
gzipoutputstream  out  finish
@override
public void resetstate   throws ioexception
resetablegzipoutputstream  out  resetstate
@override
public compressionoutputstream createoutputstream outputstream out
throws ioexception
if  zlibfactory isnativezlibloaded getconf
return super createoutputstream out
return new reusablegzipoutputstream out