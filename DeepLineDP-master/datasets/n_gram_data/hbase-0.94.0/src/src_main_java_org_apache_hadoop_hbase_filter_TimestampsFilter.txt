/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase filter
import java io datainput
import java io dataoutput
import java io ioexception
import java util arraylist
import java util list
import java util treeset
import java util arraylist
import org apache hadoop hbase keyvalue
import com google common base preconditions
/**
* filter that returns only cells whose timestamp (version) is
* in the specified list of timestamps (versions).
* <p>
* note: use of this filter overrides any time range/time stamp
* options specified using {@link org.apache.hadoop.hbase.client.get#settimerange(long, long)},
* {@link org.apache.hadoop.hbase.client.scan#settimerange(long, long)}, {@link org.apache.hadoop.hbase.client.get#settimestamp(long)},
* or {@link org.apache.hadoop.hbase.client.scan#settimestamp(long)}.
*/
public class timestampsfilter extends filterbase
treeset<long> timestamps
private static final int max_log_timestamps   5
// used during scans to hint the scan to stop early
// once the timestamps fall below the mintimestamp.
long mintimestamp   long max_value
/**
* used during deserialization. do not use otherwise.
*/
public timestampsfilter
super
/**
* constructor for filter that retains only those
* cells whose timestamp (version) is in the specified
* list of timestamps.
*
* @param timestamps
*/
public timestampsfilter list<long> timestamps
for  long timestamp   timestamps
preconditions checkargument timestamp >  0     timestamp
this timestamps   new treeset<long> timestamps
init
/**
* @return the list of timestamps
*/
public list<long> gettimestamps
list<long> list   new arraylist<long> timestamps size
list addall timestamps
return list
private void init
if  this timestamps size   > 0
mintimestamp   this timestamps first
/**
* gets the minimum timestamp requested by filter.
* @return  minimum timestamp requested by filter.
*/
public long getmin
return mintimestamp
@override
public returncode filterkeyvalue keyvalue v
if  this timestamps contains v gettimestamp
return returncode include
else if  v gettimestamp   < mintimestamp
// the remaining versions of this column are guaranteed
// to be lesser than all of the other values.
return returncode next_col
return returncode skip
public static filter createfilterfromarguments arraylist<byte > filterarguments
arraylist<long> timestamps   new arraylist<long>
for  int i   0  i<filterarguments size    i
long timestamp   parsefilter convertbytearraytolong filterarguments get i
timestamps add timestamp
return new timestampsfilter timestamps
@override
public void readfields datainput in  throws ioexception
int numtimestamps   in readint
this timestamps   new treeset<long>
for  int idx   0  idx < numtimestamps  idx
this timestamps add in readlong
init
@override
public void write dataoutput out  throws ioexception
int numtimestamps   this timestamps size
out writeint numtimestamps
for  long timestamp   this timestamps
out writelong timestamp
@override
public string tostring
return tostring max_log_timestamps
protected string tostring int maxtimestamps
stringbuilder tslist   new stringbuilder
int count   0
for  long ts   this timestamps
if  count >  maxtimestamps
break
count
tslist append ts tostring
if  count < this timestamps size      count < maxtimestamps
tslist append
return string format    this getclass   getsimplename
count  this timestamps size    tslist tostring