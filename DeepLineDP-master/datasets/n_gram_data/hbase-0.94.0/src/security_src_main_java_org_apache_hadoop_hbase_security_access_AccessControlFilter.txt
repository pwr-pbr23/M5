/*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
* http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase security access
import java io datainput
import java io dataoutput
import java io ioexception
import org apache hadoop hbase keyvalue
import org apache hadoop hbase filter filterbase
import org apache hadoop hbase security user
/**
* <strong>note: for internal use only by accesscontroller implementation</strong>
*
* <p>
* todo: there is room for further performance optimization here.
* calling tableauthmanager.authorize() per keyvalue imposes a fair amount of
* overhead.  a more optimized solution might look at the qualifiers where
* permissions are actually granted and explicitly limit the scan to those.
* </p>
* <p>
* we should aim to use this _only_ when access to the requested column families
* is not granted at the column family levels.  if table or column family
* access succeeds, then there is no need to impose the overhead of this filter.
* </p>
*/
class accesscontrolfilter extends filterbase
private tableauthmanager authmanager
private byte table
private user user
/**
* for writable
*/
accesscontrolfilter
accesscontrolfilter tableauthmanager mgr  user ugi
byte tablename
authmanager   mgr
table   tablename
user   ugi
@override
public returncode filterkeyvalue keyvalue kv
if  authmanager authorize user  table  kv  tablepermission action read
return returncode include
return returncode next_col
@override
public void write dataoutput dataoutput  throws ioexception
// no implementation, server-side use only
throw new unsupportedoperationexception
@override
public void readfields datainput datainput  throws ioexception
// no implementation, server-side use only
throw new unsupportedoperationexception