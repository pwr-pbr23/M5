/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase filter
import org apache hadoop hbase keyvalue
import java io datainput
import java io dataoutput
import java io ioexception
import java util list
/**
* a wrapper filter that returns true from {@link #filterallremaining()} as soon
* as the wrapped filters {@link filter#filterrowkey(byte[], int, int)},
* {@link filter#filterkeyvalue(org.apache.hadoop.hbase.keyvalue)},
* {@link org.apache.hadoop.hbase.filter.filter#filterrow()} or
* {@link org.apache.hadoop.hbase.filter.filter#filterallremaining()} methods
* returns true.
*/
public class whilematchfilter extends filterbase
private boolean filterallremaining   false
private filter filter
public whilematchfilter
super
public whilematchfilter filter filter
this filter   filter
public filter getfilter
return filter
public void reset
this filter reset
private void changefar boolean value
filterallremaining   filterallremaining    value
public boolean filterallremaining
return this filterallremaining    this filter filterallremaining
public boolean filterrowkey byte buffer  int offset  int length
boolean value   filter filterrowkey buffer  offset  length
changefar value
return value
public returncode filterkeyvalue keyvalue v
returncode c   filter filterkeyvalue v
changefar c    returncode include
return c
@override
public keyvalue transform keyvalue v
return filter transform v
public boolean filterrow
boolean filterrow   this filter filterrow
changefar filterrow
return filterrow
public void write dataoutput out  throws ioexception
out writeutf this filter getclass   getname
this filter write out
public void readfields datainput in  throws ioexception
string classname   in readutf
try
this filter    filter  class forname classname  newinstance
this filter readfields in
catch  instantiationexception e
throw new runtimeexception    e
catch  illegalaccessexception e
throw new runtimeexception    e
catch  classnotfoundexception e
throw new runtimeexception    e
@override
public string tostring
return this getclass   getsimplename         this filter tostring