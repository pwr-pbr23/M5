/*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase security access
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hbase util bytes
import java io datainput
import java io dataoutput
import java io ioexception
/**
* represents an authorization for access over the given table, column family
* plus qualifier, for the given user.
*/
public class userpermission extends tablepermission
private static log log   logfactory getlog userpermission class
private byte user
/** nullary constructor for writable, do not use */
public userpermission
super
/**
* creates a new instance for the given user, table and column family.
* @param user the user
* @param table the table
* @param family the family, can be null if action is allowed over the entire
*   table
* @param assigned the list of allowed actions
*/
public userpermission byte user  byte table  byte family
action    assigned
super table  family  assigned
this user   user
/**
* creates a new permission for the given user, table, column family and
* column qualifier.
* @param user the user
* @param table the table
* @param family the family, can be null if action is allowed over the entire
*   table
* @param qualifier the column qualifier, can be null if action is allowed
*   over the entire column family
* @param assigned the list of allowed actions
*/
public userpermission byte user  byte table  byte family
byte qualifier  action    assigned
super table  family  qualifier  assigned
this user   user
/**
* creates a new instance for the given user, table, column family and
* qualifier, matching the actions with the given codes.
* @param user the user
* @param table the table
* @param family the family, can be null if action is allowed over the entire
*   table
* @param qualifier the column qualifier, can be null if action is allowed
*   over the entire column family
* @param actioncodes the list of allowed action codes
*/
public userpermission byte user  byte table  byte family
byte qualifier  byte actioncodes
super table  family  qualifier  actioncodes
this user   user
public byte getuser
return user
@override
public boolean equals object obj
if    obj instanceof userpermission
return false
userpermission other    userpermission obj
if   bytes equals user  other getuser
super equals obj
return true
else
return false
@override
public int hashcode
final int prime   37
int result   super hashcode
if  user    null
result   prime   result   bytes hashcode user
return result
public string tostring
stringbuilder str   new stringbuilder
append    append bytes tostring user
append    append super tostring
return str tostring
@override
public void readfields datainput in  throws ioexception
super readfields in
user   bytes readbytearray in
@override
public void write dataoutput out  throws ioexception
super write out
bytes writebytearray out  user