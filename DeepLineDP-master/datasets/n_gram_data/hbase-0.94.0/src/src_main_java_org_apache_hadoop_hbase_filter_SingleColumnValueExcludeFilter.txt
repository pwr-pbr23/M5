/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase filter
import org apache hadoop hbase keyvalue
import org apache hadoop hbase filter comparefilter compareop
import java util arraylist
/**
* a {@link filter} that checks a single column value, but does not emit the
* tested column. this will enable a performance boost over
* {@link singlecolumnvaluefilter}, if the tested column value is not actually
* needed as input (besides for the filtering itself).
*/
public class singlecolumnvalueexcludefilter extends singlecolumnvaluefilter
/**
* writable constructor, do not use.
*/
public singlecolumnvalueexcludefilter
super
/**
* constructor for binary compare of the value of a single column. if the
* column is found and the condition passes, all columns of the row will be
* emitted; except for the tested column value. if the column is not found or
* the condition fails, the row will not be emitted.
*
* @param family name of column family
* @param qualifier name of column qualifier
* @param compareop operator
* @param value value to compare column values against
*/
public singlecolumnvalueexcludefilter byte family  byte qualifier
compareop compareop  byte value
super family  qualifier  compareop  value
/**
* constructor for binary compare of the value of a single column. if the
* column is found and the condition passes, all columns of the row will be
* emitted; except for the tested column value. if the condition fails, the
* row will not be emitted.
* <p>
* use the filterifcolumnmissing flag to set whether the rest of the columns
* in a row will be emitted if the specified column to check is not found in
* the row.
*
* @param family name of column family
* @param qualifier name of column qualifier
* @param compareop operator
* @param comparator comparator to use.
*/
public singlecolumnvalueexcludefilter byte family  byte qualifier
compareop compareop  writablebytearraycomparable comparator
super family  qualifier  compareop  comparator
public returncode filterkeyvalue keyvalue keyvalue
returncode superretcode   super filterkeyvalue keyvalue
if  superretcode    returncode include
// if the current column is actually the tested column,
// we will skip it instead.
if  keyvalue matchingcolumn this columnfamily  this columnqualifier
return returncode skip
return superretcode
public static filter createfilterfromarguments arraylist<byte > filterarguments
singlecolumnvaluefilter tempfilter    singlecolumnvaluefilter
singlecolumnvaluefilter createfilterfromarguments filterarguments
singlecolumnvalueexcludefilter filter   new singlecolumnvalueexcludefilter
tempfilter getfamily    tempfilter getqualifier
tempfilter getoperator    tempfilter getcomparator
if  filterarguments size      6
filter setfilterifmissing tempfilter getfilterifmissing
filter setlatestversiononly tempfilter getlatestversiononly
return filter