/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase master
import java io ioexception
import java util hashmap
import java util list
import java util map
import java util concurrent executorservice
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase server
import org apache hadoop hbase servername
/**
* performs bulk reopen of the list of regions provided to it.
*/
public class bulkreopen extends bulkassigner
private final map<servername  list<hregioninfo>> rstoregions
private final assignmentmanager assignmentmanager
private static final log log   logfactory getlog bulkreopen class
public bulkreopen final server server
final map<servername  list<hregioninfo>> servertoregions
final assignmentmanager am
super server
this assignmentmanager   am
this rstoregions   servertoregions
/**
* unassign all regions, so that they go through the regular region
* assignment flow (in assignment manager) and are re-opened.
*/
@override
protected void populatepool executorservice pool
log debug
for  map entry<servername  list<hregioninfo>> e   rstoregions
entryset
final list<hregioninfo> hris   e getvalue
// add plans for the regions that need to be reopened
map<string  regionplan> plans   new hashmap<string  regionplan>
for  hregioninfo hri   hris
regionplan reopenplan   new regionplan hri  null
assignmentmanager getregionserverofregion hri
plans put hri getencodedname    reopenplan
assignmentmanager addplans plans
pool execute new runnable
public void run
assignmentmanager unassign hris
/**
* reopen the regions asynchronously, so always returns true immediately.
* @return true
*/
@override
protected boolean waituntildone long timeout
return true
/**
* configuration knobs "hbase.bulk.reopen.threadpool.size" number of regions
* that can be reopened concurrently. the maximum number of threads the master
* creates is never more than the number of region servers.
* if configuration is not defined it defaults to 20
*/
protected int getthreadcount
int defaultthreadcount   super getthreadcount
return this server getconfiguration   getint
defaultthreadcount
public boolean bulkreopen   throws interruptedexception  ioexception
return bulkassign