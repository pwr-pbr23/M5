/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase rest model
import java io ioexception
import java io serializable
import java util arraylist
import java util list
import javax xml bind annotation xmlrootelement
import javax xml bind annotation xmlelement
import org apache hadoop hbase hconstants
import org apache hadoop hbase rest protobufmessagehandler
import org apache hadoop hbase rest protobuf generated cellmessage cell
import org apache hadoop hbase rest protobuf generated cellsetmessage cellset
import com google protobuf bytestring
/**
* representation of a grouping of cells. may contain cells from more than
* one row. encapsulates rowmodel and cellmodel models.
*
* <pre>
* &lt;complextype name="cellset"&gt;
*   &lt;sequence&gt;
*     &lt;element name="row" type="tns:row" maxoccurs="unbounded"
*       minoccurs="1"&gt;&lt;/element&gt;
*   &lt;/sequence&gt;
* &lt;/complextype&gt;
*
* &lt;complextype name="row"&gt;
*   &lt;sequence&gt;
*     &lt;element name="key" type="base64binary"&gt;&lt;/element&gt;
*     &lt;element name="cell" type="tns:cell"
*       maxoccurs="unbounded" minoccurs="1"&gt;&lt;/element&gt;
*   &lt;/sequence&gt;
* &lt;/complextype&gt;
*
* &lt;complextype name="cell"&gt;
*   &lt;sequence&gt;
*     &lt;element name="value" maxoccurs="1" minoccurs="1"&gt;
*       &lt;simpletype&gt;
*         &lt;restriction base="base64binary"/&gt;
*       &lt;/simpletype&gt;
*     &lt;/element&gt;
*   &lt;/sequence&gt;
*   &lt;attribute name="column" type="base64binary" /&gt;
*   &lt;attribute name="timestamp" type="int" /&gt;
* &lt;/complextype&gt;
* </pre>
*/
@xmlrootelement name
public class cellsetmodel implements serializable  protobufmessagehandler
private static final long serialversionuid   1l
private list<rowmodel> rows
/**
* constructor
*/
public cellsetmodel
this rows   new arraylist<rowmodel>
/**
* @param rows the rows
*/
public cellsetmodel list<rowmodel> rows
super
this rows   rows
/**
* add a row to this cell set
* @param row the row
*/
public void addrow rowmodel row
rows add row
/**
* @return the rows
*/
@xmlelement name
public list<rowmodel> getrows
return rows
@override
public byte createprotobufoutput
cellset builder builder   cellset newbuilder
for  rowmodel row  getrows
cellset row builder rowbuilder   cellset row newbuilder
rowbuilder setkey bytestring copyfrom row getkey
for  cellmodel cell  row getcells
cell builder cellbuilder   cell newbuilder
cellbuilder setcolumn bytestring copyfrom cell getcolumn
cellbuilder setdata bytestring copyfrom cell getvalue
if  cell hasusertimestamp
cellbuilder settimestamp cell gettimestamp
rowbuilder addvalues cellbuilder
builder addrows rowbuilder
return builder build   tobytearray
@override
public protobufmessagehandler getobjectfrommessage byte message
throws ioexception
cellset builder builder   cellset newbuilder
builder mergefrom message
for  cellset row row  builder getrowslist
rowmodel rowmodel   new rowmodel row getkey   tobytearray
for  cell cell  row getvalueslist
long timestamp   hconstants latest_timestamp
if  cell hastimestamp
timestamp   cell gettimestamp
rowmodel addcell
new cellmodel cell getcolumn   tobytearray    timestamp
cell getdata   tobytearray
addrow rowmodel
return this