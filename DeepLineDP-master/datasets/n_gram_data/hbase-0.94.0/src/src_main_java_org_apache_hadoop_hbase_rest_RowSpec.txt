/*
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase rest
import java io unsupportedencodingexception
import java net urldecoder
import java util collection
import java util treeset
import org apache hadoop hbase hcolumndescriptor
import org apache hadoop hbase hconstants
import org apache hadoop hbase util bytes
/**
* parses a path based row/column/timestamp specification into its component
* elements.
* <p>
*
*/
public class rowspec
public static final long default_start_timestamp   0
public static final long default_end_timestamp   long max_value
private byte row   hconstants empty_start_row
private byte endrow   null
private treeset<byte> columns
new treeset<byte> bytes bytes_comparator
private long starttime   default_start_timestamp
private long endtime   default_end_timestamp
private int maxversions   hcolumndescriptor default_versions
private int maxvalues   integer max_value
public rowspec string path  throws illegalargumentexception
int i   0
while  path charat i
i
i   parserowkeys path  i
i   parsecolumns path  i
i   parsetimestamp path  i
i   parsequeryparams path  i
private int parserowkeys final string path  int i
throws illegalargumentexception
string startrow   null  endrow   null
try
stringbuilder sb   new stringbuilder
char c
while  i < path length       c   path charat i
sb append c
i
i
string row   startrow   sb tostring
int idx   startrow indexof
if  idx     1
startrow   urldecoder decode row substring 0  idx
hconstants utf8_encoding
endrow   urldecoder decode row substring idx   1
hconstants utf8_encoding
else
startrow   urldecoder decode row  hconstants utf8_encoding
catch  indexoutofboundsexception e
throw new illegalargumentexception e
catch  unsupportedencodingexception e
throw new runtimeexception e
// hbase does not support wildcards on row keys so we will emulate a
// suffix glob by synthesizing appropriate start and end row keys for
// table scanning
if  startrow charat startrow length     1
if  endrow    null
throw new illegalargumentexception
this row   bytes tobytes startrow substring 0
startrow lastindexof
this endrow   new byte
system arraycopy this row  0  this endrow  0  this row length
this endrow    byte 255
else
this row   bytes tobytes startrow tostring
if  endrow    null
this endrow   bytes tobytes endrow tostring
return i
private int parsecolumns final string path  int i
throws illegalargumentexception
if  i >  path length
return i
try
char c
stringbuilder column   new stringbuilder
while  i < path length       c   path charat i
if  c
if  column length   < 1
throw new illegalargumentexception
string s   urldecoder decode column tostring
hconstants utf8_encoding
if   s contains
this columns add bytes tobytes s
else
this columns add bytes tobytes s
column setlength 0
i
continue
column append c
i
i
// trailing list entry
if  column length   > 1
string s   urldecoder decode column tostring
hconstants utf8_encoding
if   s contains
this columns add bytes tobytes s
else
this columns add bytes tobytes s
catch  indexoutofboundsexception e
throw new illegalargumentexception e
catch  unsupportedencodingexception e
// shouldn't happen
throw new runtimeexception e
return i
private int parsetimestamp final string path  int i
throws illegalargumentexception
if  i >  path length
return i
long time0   0  time1   0
try
char c   0
stringbuilder stamp   new stringbuilder
while  i < path length
c   path charat i
if  c         c
break
stamp append c
i
try
time0   long valueof urldecoder decode stamp tostring
hconstants utf8_encoding
catch  numberformatexception e
throw new illegalargumentexception e
if  c
stamp   new stringbuilder
i
while  i < path length        c   path charat i
stamp append c
i
try
time1   long valueof urldecoder decode stamp tostring
hconstants utf8_encoding
catch  numberformatexception e
throw new illegalargumentexception e
if  c
i
catch  indexoutofboundsexception e
throw new illegalargumentexception e
catch  unsupportedencodingexception e
// shouldn't happen
throw new runtimeexception e
if  time1    0
starttime   time0
endtime   time1
else
endtime   time0
return i
private int parsequeryparams final string path  int i
if  i >  path length
return i
stringbuilder query   new stringbuilder
try
query append urldecoder decode path substring i
hconstants utf8_encoding
catch  unsupportedencodingexception e
// should not happen
throw new runtimeexception e
i    query length
int j   0
while  j < query length
char c   query charat j
if  c         c
break
if    j > query length
throw new illegalargumentexception
char what   query charat j
if    j > query length
break
c   query charat j
if  c
throw new illegalargumentexception
if    j > query length
break
switch  what
case
stringbuilder sb   new stringbuilder
while  j <  query length
c   query charat i
if  c <      c >
j
break
sb append c
maxversions   integer valueof sb tostring
break
case
stringbuilder sb   new stringbuilder
while  j <  query length
c   query charat i
if  c <      c >
j
break
sb append c
maxvalues   integer valueof sb tostring
break
default
throw new illegalargumentexception     c
return i
public rowspec byte startrow  byte endrow  byte columns
long starttime  long endtime  int maxversions
this row   startrow
this endrow   endrow
if  columns    null
for  byte col  columns
this columns add col
this starttime   starttime
this endtime   endtime
this maxversions   maxversions
public rowspec byte startrow  byte endrow  collection<byte> columns
long starttime  long endtime  int maxversions
this row   startrow
this endrow   endrow
if  columns    null
this columns addall columns
this starttime   starttime
this endtime   endtime
this maxversions   maxversions
public boolean issinglerow
return endrow    null
public int getmaxversions
return maxversions
public void setmaxversions final int maxversions
this maxversions   maxversions
public int getmaxvalues
return maxvalues
public void setmaxvalues final int maxvalues
this maxvalues   maxvalues
public boolean hascolumns
return  columns isempty
public byte getrow
return row
public byte getstartrow
return row
public boolean hasendrow
return endrow    null
public byte getendrow
return endrow
public void addcolumn final byte column
columns add column
public byte getcolumns
return columns toarray new byte
public boolean hastimestamp
return  starttime    0      endtime    long max_value
public long gettimestamp
return endtime
public long getstarttime
return starttime
public void setstarttime final long starttime
this starttime   starttime
public long getendtime
return endtime
public void setendtime long endtime
this endtime   endtime
public string tostring
stringbuilder result   new stringbuilder
result append
if  row    null
result append bytes tostring row
result append
if  endrow    null
result append bytes tostring endrow
result append
for  byte col  columns
result append
result append bytes tostring col
result append
result append
result append long tostring starttime
result append
result append long tostring endtime
result append
result append integer tostring maxversions
result append
result append integer tostring maxvalues
result append
return result tostring