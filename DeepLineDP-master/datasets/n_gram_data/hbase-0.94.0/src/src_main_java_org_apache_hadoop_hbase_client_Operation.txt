/*
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase client
import java io ioexception
import java util map
import org codehaus jackson map objectmapper
/**
* superclass for any type that maps to a potentially application-level query.
* (e.g. put, get, delete, scan, next, etc.)
* contains methods for exposure to logging and debugging tools.
*/
public abstract class operation
// todo make this configurable
private static final int default_max_cols   5
/**
* produces a map containing a fingerprint which identifies the type and
* the static schema components of a query (i.e. column families)
* @return a map containing fingerprint information (i.e. column families)
*/
public abstract map<string  object> getfingerprint
/**
* produces a map containing a summary of the details of a query
* beyond the scope of the fingerprint (i.e. columns, rows...)
* @param maxcols a limit on the number of columns output prior to truncation
* @return a map containing parameters of a query (i.e. rows, columns...)
*/
public abstract map<string  object> tomap int maxcols
/**
* produces a map containing a full summary of a query.
* @return a map containing parameters of a query (i.e. rows, columns...)
*/
public map<string  object> tomap
return tomap default_max_cols
/**
* produces a json object for fingerprint and details exposure in a
* parseable format.
* @param maxcols a limit on the number of columns to include in the json
* @return a jsonobject containing this operation's information, as a string
*/
public string tojson int maxcols  throws ioexception
objectmapper mapper   new objectmapper
return mapper writevalueasstring tomap maxcols
/**
* produces a json object sufficient for description of a query
* in a debugging or logging context.
* @return the produced json object, as a string
*/
public string tojson   throws ioexception
return tojson default_max_cols
/**
* produces a string representation of this operation. it defaults to a json
* representation, but falls back to a string representation of the
* fingerprint and details in the case of a json encoding failure.
* @param maxcols a limit on the number of columns output in the summary
* prior to truncation
* @return a json-parseable string
*/
public string tostring int maxcols
/* for now this is merely a wrapper from producing a json string, but
* tojson is kept separate in case this is changed to be a less parsable
* pretty printed representation.
*/
try
return tojson maxcols
catch  ioexception ioe
return tomap maxcols  tostring
/**
* produces a string representation of this operation. it defaults to a json
* representation, but falls back to a string representation of the
* fingerprint and details in the case of a json encoding failure.
* @return string
*/
@override
public string tostring
return tostring default_max_cols