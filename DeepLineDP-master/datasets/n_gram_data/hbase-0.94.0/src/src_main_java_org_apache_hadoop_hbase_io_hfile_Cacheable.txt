/**
* copyright 2011 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase io hfile
import java nio bytebuffer
import org apache hadoop hbase io heapsize
import org apache hadoop hbase regionserver metrics schemametrics
/**
* cacheable is an interface that allows for an object to be cached. if using an
* on heap cache, just use heapsize. if using an off heap cache, cacheable
* provides methods for serialization of the object.
*
* some objects cannot be moved off heap, those objects will return a
* getserializedlength() of 0.
*
*/
public interface cacheable extends heapsize
/**
* returns the length of the bytebuffer required to serialized the object. if the
* object cannot be serialized, it should also return 0.
*
* @return int length in bytes of the serialized form.
*/
public int getserializedlength
/**
* serializes its data into destination.
*/
public void serialize bytebuffer destination
/**
* returns cacheabledeserializer instance which reconstructs original object from bytebuffer.
*
* @return cacheabledeserialzer instance.
*/
public cacheabledeserializer<cacheable> getdeserializer
/**
* @return the block type of this cached hfile block
*/
public blocktype getblocktype
/**
* @return the metrics object identified by table and column family
*/
public schemametrics getschemametrics