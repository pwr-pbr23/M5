/**
* copyright 2010 the apache software foundation
*
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase mapred
import java io ioexception
import org apache hadoop hbase hbaseconfiguration
import org apache hadoop hbase client htable
import org apache hadoop hbase client put
import org apache hadoop hbase io immutablebyteswritable
import org apache hadoop hbase security user
import org apache hadoop io writable
import org apache hadoop io writablecomparable
import org apache hadoop mapred fileinputformat
import org apache hadoop mapred jobconf
import org apache hadoop mapred inputformat
import org apache hadoop mapred outputformat
import org apache hadoop mapred textinputformat
import org apache hadoop mapred textoutputformat
/**
* utility for {@link tablemap} and {@link tablereduce}
*/
@deprecated
@suppresswarnings
public class tablemapreduceutil
/**
* use this before submitting a tablemap job. it will
* appropriately set up the jobconf.
*
* @param table  the table name to read from.
* @param columns  the columns to scan.
* @param mapper  the mapper class to use.
* @param outputkeyclass  the class of the output key.
* @param outputvalueclass  the class of the output value.
* @param job  the current job configuration to adjust.
*/
public static void inittablemapjob string table  string columns
class<? extends tablemap> mapper
class<? extends writablecomparable> outputkeyclass
class<? extends writable> outputvalueclass  jobconf job
inittablemapjob table  columns  mapper  outputkeyclass  outputvalueclass  job  true
/**
* use this before submitting a tablemap job. it will
* appropriately set up the jobconf.
*
* @param table  the table name to read from.
* @param columns  the columns to scan.
* @param mapper  the mapper class to use.
* @param outputkeyclass  the class of the output key.
* @param outputvalueclass  the class of the output value.
* @param job  the current job configuration to adjust.
* @param adddependencyjars upload hbase jars and jars for any of the configured
*           job classes via the distributed cache (tmpjars).
*/
public static void inittablemapjob string table  string columns
class<? extends tablemap> mapper
class<? extends writablecomparable> outputkeyclass
class<? extends writable> outputvalueclass  jobconf job  boolean adddependencyjars
job setinputformat tableinputformat class
job setmapoutputvalueclass outputvalueclass
job setmapoutputkeyclass outputkeyclass
job setmapperclass mapper
fileinputformat addinputpaths job  table
job set tableinputformat column_list  columns
if  adddependencyjars
try
adddependencyjars job
catch  ioexception e
e printstacktrace
try
initcredentials job
catch  ioexception ioe
// just spit out the stack trace?  really?
ioe printstacktrace
/**
* use this before submitting a tablereduce job. it will
* appropriately set up the jobconf.
*
* @param table  the output table.
* @param reducer  the reducer class to use.
* @param job  the current job configuration to adjust.
* @throws ioexception when determining the region count fails.
*/
public static void inittablereducejob string table
class<? extends tablereduce> reducer  jobconf job
throws ioexception
inittablereducejob table  reducer  job  null
/**
* use this before submitting a tablereduce job. it will
* appropriately set up the jobconf.
*
* @param table  the output table.
* @param reducer  the reducer class to use.
* @param job  the current job configuration to adjust.
* @param partitioner  partitioner to use. pass <code>null</code> to use
* default partitioner.
* @throws ioexception when determining the region count fails.
*/
public static void inittablereducejob string table
class<? extends tablereduce> reducer  jobconf job  class partitioner
throws ioexception
inittablereducejob table  reducer  job  partitioner  true
/**
* use this before submitting a tablereduce job. it will
* appropriately set up the jobconf.
*
* @param table  the output table.
* @param reducer  the reducer class to use.
* @param job  the current job configuration to adjust.
* @param partitioner  partitioner to use. pass <code>null</code> to use
* default partitioner.
* @param adddependencyjars upload hbase jars and jars for any of the configured
*           job classes via the distributed cache (tmpjars).
* @throws ioexception when determining the region count fails.
*/
public static void inittablereducejob string table
class<? extends tablereduce> reducer  jobconf job  class partitioner
boolean adddependencyjars  throws ioexception
job setoutputformat tableoutputformat class
job setreducerclass reducer
job set tableoutputformat output_table  table
job setoutputkeyclass immutablebyteswritable class
job setoutputvalueclass put class
if  partitioner    hregionpartitioner class
job setpartitionerclass hregionpartitioner class
htable outputtable   new htable hbaseconfiguration create job   table
int regions   outputtable getregionsinfo   size
if  job getnumreducetasks   > regions
job setnumreducetasks outputtable getregionsinfo   size
else if  partitioner    null
job setpartitionerclass partitioner
if  adddependencyjars
adddependencyjars job
initcredentials job
public static void initcredentials jobconf job  throws ioexception
if  user ishbasesecurityenabled job
try
user getcurrent   obtainauthtokenforjob job
catch  interruptedexception ie
ie printstacktrace
thread interrupted
/**
* ensures that the given number of reduce tasks for the given job
* configuration does not exceed the number of regions for the given table.
*
* @param table  the table to get the region count for.
* @param job  the current job configuration to adjust.
* @throws ioexception when retrieving the table details fails.
*/
public static void limitnumreducetasks string table  jobconf job
throws ioexception
htable outputtable   new htable hbaseconfiguration create job   table
int regions   outputtable getregionsinfo   size
if  job getnumreducetasks   > regions
job setnumreducetasks regions
/**
* ensures that the given number of map tasks for the given job
* configuration does not exceed the number of regions for the given table.
*
* @param table  the table to get the region count for.
* @param job  the current job configuration to adjust.
* @throws ioexception when retrieving the table details fails.
*/
public static void limitnummaptasks string table  jobconf job
throws ioexception
htable outputtable   new htable hbaseconfiguration create job   table
int regions   outputtable getregionsinfo   size
if  job getnummaptasks   > regions
job setnummaptasks regions
/**
* sets the number of reduce tasks for the given job configuration to the
* number of regions the given table has.
*
* @param table  the table to get the region count for.
* @param job  the current job configuration to adjust.
* @throws ioexception when retrieving the table details fails.
*/
public static void setnumreducetasks string table  jobconf job
throws ioexception
htable outputtable   new htable hbaseconfiguration create job   table
int regions   outputtable getregionsinfo   size
job setnumreducetasks regions
/**
* sets the number of map tasks for the given job configuration to the
* number of regions the given table has.
*
* @param table  the table to get the region count for.
* @param job  the current job configuration to adjust.
* @throws ioexception when retrieving the table details fails.
*/
public static void setnummaptasks string table  jobconf job
throws ioexception
htable outputtable   new htable hbaseconfiguration create job   table
int regions   outputtable getregionsinfo   size
job setnummaptasks regions
/**
* sets the number of rows to return and cache with each scanner iteration.
* higher caching values will enable faster mapreduce jobs at the expense of
* requiring more heap to contain the cached rows.
*
* @param job the current job configuration to adjust.
* @param batchsize the number of rows to return in batch with each scanner
* iteration.
*/
public static void setscannercaching jobconf job  int batchsize
job setint    batchsize
/**
* @see org.apache.hadoop.hbase.mapreduce.tablemapreduceutil#adddependencyjars(job)
*/
public static void adddependencyjars jobconf job  throws ioexception
org apache hadoop hbase mapreduce tablemapreduceutil adddependencyjars
job
org apache zookeeper zookeeper class
com google common base function class
com google protobuf message class
job getmapoutputkeyclass
job getmapoutputvalueclass
job getoutputkeyclass
job getoutputvalueclass
job getpartitionerclass
job getclass    textinputformat class  inputformat class
job getclass    textoutputformat class  outputformat class
job getcombinerclass