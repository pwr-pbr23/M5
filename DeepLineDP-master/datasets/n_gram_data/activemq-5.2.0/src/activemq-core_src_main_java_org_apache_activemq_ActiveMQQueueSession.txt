/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq
import java io serializable
import javax jms bytesmessage
import javax jms destination
import javax jms illegalstateexception
import javax jms invaliddestinationexception
import javax jms jmsexception
import javax jms mapmessage
import javax jms message
import javax jms messageconsumer
import javax jms messagelistener
import javax jms messageproducer
import javax jms objectmessage
import javax jms queue
import javax jms queuebrowser
import javax jms queuereceiver
import javax jms queuesender
import javax jms queuesession
import javax jms streammessage
import javax jms temporaryqueue
import javax jms temporarytopic
import javax jms textmessage
import javax jms topic
import javax jms topicsubscriber
/**
* a queuesession implementation that throws illegalstateexceptions when topic
* operations are attempted but which delegates to another queuesession for all
* other operations. the activemqsessions implement both topic and queue
* sessions methods but the spec states that queue session should throw
* exceptions if topic operations are attempted on it.
*
* @version $revision: 1.2 $
*/
public class activemqqueuesession implements queuesession
private final queuesession next
public activemqqueuesession queuesession next
this next   next
/**
* @throws jmsexception
*/
public void close   throws jmsexception
next close
/**
* @throws jmsexception
*/
public void commit   throws jmsexception
next commit
/**
* @param queue
* @return
* @throws jmsexception
*/
public queuebrowser createbrowser queue queue  throws jmsexception
return next createbrowser queue
/**
* @param queue
* @param messageselector
* @return
* @throws jmsexception
*/
public queuebrowser createbrowser queue queue  string messageselector  throws jmsexception
return next createbrowser queue  messageselector
/**
* @return
* @throws jmsexception
*/
public bytesmessage createbytesmessage   throws jmsexception
return next createbytesmessage
/**
* @param destination
* @return
* @throws jmsexception
*/
public messageconsumer createconsumer destination destination  throws jmsexception
if  destination instanceof topic
throw new invaliddestinationexception
return next createconsumer destination
/**
* @param destination
* @param messageselector
* @return
* @throws jmsexception
*/
public messageconsumer createconsumer destination destination  string messageselector  throws jmsexception
if  destination instanceof topic
throw new invaliddestinationexception
return next createconsumer destination  messageselector
/**
* @param destination
* @param messageselector
* @param nolocal
* @return
* @throws jmsexception
*/
public messageconsumer createconsumer destination destination  string messageselector  boolean nolocal  throws jmsexception
if  destination instanceof topic
throw new invaliddestinationexception
return next createconsumer destination  messageselector  nolocal
/**
* @param topic
* @param name
* @return
* @throws jmsexception
*/
public topicsubscriber createdurablesubscriber topic topic  string name  throws jmsexception
throw new illegalstateexception
/**
* @param topic
* @param name
* @param messageselector
* @param nolocal
* @return
* @throws jmsexception
*/
public topicsubscriber createdurablesubscriber topic topic  string name  string messageselector  boolean nolocal  throws jmsexception
throw new illegalstateexception
/**
* @return
* @throws jmsexception
*/
public mapmessage createmapmessage   throws jmsexception
return next createmapmessage
/**
* @return
* @throws jmsexception
*/
public message createmessage   throws jmsexception
return next createmessage
/**
* @return
* @throws jmsexception
*/
public objectmessage createobjectmessage   throws jmsexception
return next createobjectmessage
/**
* @param object
* @return
* @throws jmsexception
*/
public objectmessage createobjectmessage serializable object  throws jmsexception
return next createobjectmessage object
/**
* @param destination
* @return
* @throws jmsexception
*/
public messageproducer createproducer destination destination  throws jmsexception
if  destination instanceof topic
throw new invaliddestinationexception
return next createproducer destination
/**
* @param queuename
* @return
* @throws jmsexception
*/
public queue createqueue string queuename  throws jmsexception
return next createqueue queuename
/**
* @param queue
* @return
* @throws jmsexception
*/
public queuereceiver createreceiver queue queue  throws jmsexception
return next createreceiver queue
/**
* @param queue
* @param messageselector
* @return
* @throws jmsexception
*/
public queuereceiver createreceiver queue queue  string messageselector  throws jmsexception
return next createreceiver queue  messageselector
/**
* @param queue
* @return
* @throws jmsexception
*/
public queuesender createsender queue queue  throws jmsexception
return next createsender queue
/**
* @return
* @throws jmsexception
*/
public streammessage createstreammessage   throws jmsexception
return next createstreammessage
/**
* @return
* @throws jmsexception
*/
public temporaryqueue createtemporaryqueue   throws jmsexception
return next createtemporaryqueue
/**
* @return
* @throws jmsexception
*/
public temporarytopic createtemporarytopic   throws jmsexception
throw new illegalstateexception
/**
* @return
* @throws jmsexception
*/
public textmessage createtextmessage   throws jmsexception
return next createtextmessage
/**
* @param text
* @return
* @throws jmsexception
*/
public textmessage createtextmessage string text  throws jmsexception
return next createtextmessage text
/**
* @param topicname
* @return
* @throws jmsexception
*/
public topic createtopic string topicname  throws jmsexception
throw new illegalstateexception
/*
* (non-javadoc)
*
* @see java.lang.object#equals(java.lang.object)
*/
public boolean equals object arg0
return next equals arg0
/**
* @return
* @throws jmsexception
*/
public int getacknowledgemode   throws jmsexception
return next getacknowledgemode
/**
* @return
* @throws jmsexception
*/
public messagelistener getmessagelistener   throws jmsexception
return next getmessagelistener
/**
* @return
* @throws jmsexception
*/
public boolean gettransacted   throws jmsexception
return next gettransacted
/*
* (non-javadoc)
*
* @see java.lang.object#hashcode()
*/
public int hashcode
return next hashcode
/**
* @throws jmsexception
*/
public void recover   throws jmsexception
next recover
/**
* @throws jmsexception
*/
public void rollback   throws jmsexception
next rollback
/**
*
*/
public void run
next run
/**
* @param listener
* @throws jmsexception
*/
public void setmessagelistener messagelistener listener  throws jmsexception
next setmessagelistener listener
/*
* (non-javadoc)
*
* @see java.lang.object#tostring()
*/
public string tostring
return next tostring
/**
* @param name
* @throws jmsexception
*/
public void unsubscribe string name  throws jmsexception
throw new illegalstateexception
public queuesession getnext
return next