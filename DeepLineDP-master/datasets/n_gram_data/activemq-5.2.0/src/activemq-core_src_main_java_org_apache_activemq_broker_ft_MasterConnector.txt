/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker ft
import java io ioexception
import java net uri
import java net urisyntaxexception
import java util list
import java util concurrent atomic atomicboolean
import org apache activemq service
import org apache activemq broker brokerservice
import org apache activemq broker brokerserviceaware
import org apache activemq broker transportconnector
import org apache activemq command brokerinfo
import org apache activemq command command
import org apache activemq command commandtypes
import org apache activemq command connectionid
import org apache activemq command connectioninfo
import org apache activemq command messagedispatch
import org apache activemq command producerinfo
import org apache activemq command response
import org apache activemq command sessioninfo
import org apache activemq command shutdowninfo
import org apache activemq transport defaulttransportlistener
import org apache activemq transport transport
import org apache activemq transport transportfactory
import org apache activemq util idgenerator
import org apache activemq util servicestopper
import org apache activemq util servicesupport
import org apache commons logging log
import org apache commons logging logfactory
/**
* connects a slave broker to a master when using <a
* href="http://activemq.apache.org/masterslave.html">master slave</a> for high
* availability of messages.
*
* @org.apache.xbean.xbean
* @version $revision$
*/
public class masterconnector implements service  brokerserviceaware
private static final log log   logfactory getlog masterconnector class
private brokerservice broker
private uri remoteuri
private uri localuri
private transport localbroker
private transport remotebroker
private transportconnector connector
private atomicboolean started   new atomicboolean false
private final idgenerator idgenerator   new idgenerator
private string username
private string password
private connectioninfo connectioninfo
private sessioninfo sessioninfo
private producerinfo producerinfo
private final atomicboolean masteractive   new atomicboolean
public masterconnector
public masterconnector string remoteuri  throws urisyntaxexception
remoteuri   new uri remoteuri
public void setbrokerservice brokerservice broker
this broker   broker
if  localuri    null
localuri   broker getvmconnectoruri
if  connector    null
list transportconnectors   broker gettransportconnectors
if   transportconnectors isempty
connector    transportconnector transportconnectors get 0
public boolean isslave
return masteractive get
public void start   throws exception
if   started compareandset false  true
return
if  remoteuri    null
throw new illegalargumentexception
localbroker   transportfactory connect localuri
remotebroker   transportfactory connect remoteuri
log info     localbroker       remotebroker
localbroker settransportlistener new defaulttransportlistener
public void oncommand object command
public void onexception ioexception error
if  started get
servicelocalexception error
remotebroker settransportlistener new defaulttransportlistener
public void oncommand object o
command command    command o
if  started get
serviceremotecommand command
public void onexception ioexception error
if  started get
serviceremoteexception error
try
localbroker start
remotebroker start
startbridge
masteractive set true
catch  exception e
masteractive set false
log error     e  e
protected void startbridge   throws exception
connectioninfo   new connectioninfo
connectioninfo setconnectionid new connectionid idgenerator generateid
connectioninfo setclientid idgenerator generateid
connectioninfo setusername username
connectioninfo setpassword password
connectioninfo setbrokermasterconnector true
localbroker oneway connectioninfo
remotebroker oneway connectioninfo
sessioninfo   new sessioninfo connectioninfo  1
localbroker oneway sessioninfo
remotebroker oneway sessioninfo
producerinfo   new producerinfo sessioninfo  1
producerinfo setresponserequired false
remotebroker oneway producerinfo
brokerinfo brokerinfo   null
if  connector    null
brokerinfo   connector getbrokerinfo
else
brokerinfo   new brokerinfo
brokerinfo setbrokername broker getbrokername
brokerinfo setpeerbrokerinfos broker getbroker   getpeerbrokerinfos
brokerinfo setslavebroker true
remotebroker oneway brokerinfo
log info     localbroker       remotebroker
public void stop   throws exception
if   started compareandset true  false
return
masteractive set false
try
// if (connectioninfo!=null){
// localbroker.request(connectioninfo.createremovecommand());
// }
// localbroker.settransportlistener(null);
// remotebroker.settransportlistener(null);
remotebroker oneway new shutdowninfo
localbroker oneway new shutdowninfo
catch  ioexception e
log debug    e
finally
servicestopper ss   new servicestopper
ss stop localbroker
ss stop remotebroker
ss throwfirstexception
protected void serviceremoteexception ioexception error
log error     localbroker       remotebroker       error getmessage    error
shutdown
protected void serviceremotecommand command command
try
if  command ismessagedispatch
messagedispatch md    messagedispatch command
command   md getmessage
if  command getdatastructuretype      commandtypes shutdown_info
log warn
shutdown
else
boolean responserequired   command isresponserequired
int commandid   command getcommandid
if  responserequired
response response    response localbroker request command
response setcorrelationid commandid
remotebroker oneway response
else
localbroker oneway command
catch  ioexception e
serviceremoteexception e
protected void servicelocalexception throwable error
log info     localbroker       remotebroker       error getmessage    error
servicesupport dispose this
/**
* @return returns the localuri.
*/
public uri getlocaluri
return localuri
/**
* @param localuri the localuri to set.
*/
public void setlocaluri uri localuri
this localuri   localuri
/**
* @return returns the remoteuri.
*/
public uri getremoteuri
return remoteuri
/**
* @param remoteuri the remoteuri to set.
*/
public void setremoteuri uri remoteuri
this remoteuri   remoteuri
/**
* @return returns the password.
*/
public string getpassword
return password
/**
* @param password the password to set.
*/
public void setpassword string password
this password   password
/**
* @return returns the username.
*/
public string getusername
return username
/**
* @param username the username to set.
*/
public void setusername string username
this username   username
private void shutdown
masteractive set false
broker masterfailed
servicesupport dispose this