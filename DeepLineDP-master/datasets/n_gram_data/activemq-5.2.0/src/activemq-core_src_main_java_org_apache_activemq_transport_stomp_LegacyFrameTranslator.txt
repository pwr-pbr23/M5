/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transport stomp
import java io ioexception
import java util hashmap
import java util map
import javax jms destination
import javax jms jmsexception
import org apache activemq command activemqbytesmessage
import org apache activemq command activemqdestination
import org apache activemq command activemqmessage
import org apache activemq command activemqtextmessage
/**
* implements activemq 4.0 translations
*/
public class legacyframetranslator implements frametranslator
public activemqmessage convertframe protocolconverter converter  stompframe command  throws jmsexception  protocolexception
final map headers   command getheaders
final activemqmessage msg
if  headers containskey stomp headers content_length
headers remove stomp headers content_length
activemqbytesmessage bm   new activemqbytesmessage
bm writebytes command getcontent
msg   bm
else
activemqtextmessage text   new activemqtextmessage
try
text settext new string command getcontent
catch  throwable e
throw new protocolexception     e  false  e
msg   text
frametranslator helper copystandardheadersfromframetomessage converter  command  msg  this
return msg
public stompframe convertmessage protocolconverter converter  activemqmessage message  throws ioexception  jmsexception
stompframe command   new stompframe
command setaction stomp responses message
map<string  string> headers   new hashmap<string  string> 25
command setheaders headers
frametranslator helper copystandardheadersfrommessagetoframe converter  message  command  this
if  message getdatastructuretype      activemqtextmessage data_structure_type
activemqtextmessage msg    activemqtextmessage message copy
command setcontent msg gettext   getbytes
else if  message getdatastructuretype      activemqbytesmessage data_structure_type
activemqbytesmessage msg    activemqbytesmessage message copy
msg setreadonlybody true
byte data   new byte
msg readbytes data
headers put stomp headers content_length      data length
command setcontent data
return command
public string convertdestination protocolconverter converter  destination d
if  d    null
return null
activemqdestination activemqdestination    activemqdestination d
string physicalname   activemqdestination getphysicalname
string rc   converter getcreatedtempdestinationname activemqdestination
if  rc  null
return rc
stringbuffer buffer   new stringbuffer
if  activemqdestination isqueue
if  activemqdestination istemporary
buffer append
else
buffer append
else
if  activemqdestination istemporary
buffer append
else
buffer append
buffer append physicalname
return buffer tostring
public activemqdestination convertdestination protocolconverter converter  string name  throws protocolexception
if  name    null
return null
else if  name startswith
string qname   name substring   length    name length
return activemqdestination createdestination qname  activemqdestination queue_type
else if  name startswith
string tname   name substring   length    name length
return activemqdestination createdestination tname  activemqdestination topic_type
else if  name startswith
string tname   name substring   length    name length
return activemqdestination createdestination tname  activemqdestination temp_queue_type
else if  name startswith
string tname   name substring   length    name length
return activemqdestination createdestination tname  activemqdestination temp_topic_type
else if  name startswith
return converter createtempqueue name
else if  name startswith
return converter createtemptopic name
else
throw new protocolexception     name