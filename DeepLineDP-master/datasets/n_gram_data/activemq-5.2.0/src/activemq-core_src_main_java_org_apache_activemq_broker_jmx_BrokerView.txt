/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker jmx
import java lang reflect invocationtargetexception
import java lang reflect method
import java net url
import java util concurrent atomic atomicinteger
import javax management objectname
import org apache activemq broker broker
import org apache activemq broker brokerservice
import org apache activemq broker connectioncontext
import org apache activemq broker transportconnector
import org apache activemq broker region subscription
import org apache activemq command activemqqueue
import org apache activemq command activemqtopic
import org apache activemq command consumerid
import org apache activemq command consumerinfo
import org apache activemq command removesubscriptioninfo
import org apache activemq network networkconnector
/**
* @version $revision$
*/
public class brokerview implements brokerviewmbean
final managedregionbroker broker
private final brokerservice brokerservice
private final atomicinteger sessionidcounter   new atomicinteger 0
public brokerview brokerservice brokerservice  managedregionbroker managedbroker  throws exception
this brokerservice   brokerservice
this broker   managedbroker
public managedregionbroker getbroker
return broker
public string getbrokerid
return broker getbrokerid   tostring
public string getbrokername
return broker getbrokername
public void gc   throws exception
brokerservice getbroker   gc
public void start   throws exception
brokerservice start
public void stop   throws exception
brokerservice stop
public long gettotalenqueuecount
return broker getdestinationstatistics   getenqueues   getcount
public long gettotaldequeuecount
return broker getdestinationstatistics   getdequeues   getcount
public long gettotalconsumercount
return broker getdestinationstatistics   getconsumers   getcount
public long gettotalmessagecount
return broker getdestinationstatistics   getmessages   getcount
public long gettotalmessagescached
return broker getdestinationstatistics   getmessagescached   getcount
public int getmemorypercentusage
return brokerservice getsystemusage   getmemoryusage   getpercentusage
public long getmemorylimit
return brokerservice getsystemusage   getmemoryusage   getlimit
public void setmemorylimit long limit
brokerservice getsystemusage   getmemoryusage   setlimit limit
public long getstorelimit
return brokerservice getsystemusage   getstoreusage   getlimit
public int getstorepercentusage
return brokerservice getsystemusage   getstoreusage   getpercentusage
public long gettemplimit
return brokerservice getsystemusage   gettempusage   getlimit
public int gettemppercentusage
return brokerservice getsystemusage   gettempusage   getpercentusage
public void setstorelimit long limit
brokerservice getsystemusage   getstoreusage   setlimit limit
public void settemplimit long limit
brokerservice getsystemusage   gettempusage   setlimit limit
public void resetstatistics
broker getdestinationstatistics   reset
public void enablestatistics
broker getdestinationstatistics   setenabled true
public void disablestatistics
broker getdestinationstatistics   setenabled false
public boolean isstatisticsenabled
return broker getdestinationstatistics   isenabled
public boolean ispersistent
return brokerservice ispersistent
public boolean isslave
return brokerservice isslave
public void terminatejvm int exitcode
system exit exitcode
public objectname gettopics
return broker gettopics
public objectname getqueues
return broker getqueues
public objectname gettemporarytopics
return broker gettemporarytopics
public objectname gettemporaryqueues
return broker gettemporaryqueues
public objectname gettopicsubscribers
return broker gettopicsubscribers
public objectname getdurabletopicsubscribers
return broker getdurabletopicsubscribers
public objectname getqueuesubscribers
return broker getqueuesubscribers
public objectname gettemporarytopicsubscribers
return broker gettemporarytopicsubscribers
public objectname gettemporaryqueuesubscribers
return broker gettemporaryqueuesubscribers
public objectname getinactivedurabletopicsubscribers
return broker getinactivedurabletopicsubscribers
public string addconnector string discoveryaddress  throws exception
transportconnector connector   brokerservice addconnector discoveryaddress
connector start
return connector getname
public string addnetworkconnector string discoveryaddress  throws exception
networkconnector connector   brokerservice addnetworkconnector discoveryaddress
connector start
return connector getname
public boolean removeconnector string connectorname  throws exception
transportconnector connector   brokerservice getconnectorbyname connectorname
connector stop
return brokerservice removeconnector connector
public boolean removenetworkconnector string connectorname  throws exception
networkconnector connector   brokerservice getnetworkconnectorbyname connectorname
connector stop
return brokerservice removenetworkconnector connector
public void addtopic string name  throws exception
broker adddestination getconnectioncontext broker getcontextbroker     new activemqtopic name
public void addqueue string name  throws exception
broker adddestination getconnectioncontext broker getcontextbroker     new activemqqueue name
public void removetopic string name  throws exception
broker removedestination getconnectioncontext broker getcontextbroker     new activemqtopic name
1000
public void removequeue string name  throws exception
broker removedestination getconnectioncontext broker getcontextbroker     new activemqqueue name
1000
public objectname createdurablesubscriber string clientid  string subscribername  string topicname
string selector  throws exception
connectioncontext context   new connectioncontext
context setbroker broker
context setclientid clientid
consumerinfo info   new consumerinfo
consumerid consumerid   new consumerid
consumerid setconnectionid clientid
consumerid setsessionid sessionidcounter incrementandget
consumerid setvalue 0
info setconsumerid consumerid
info setdestination new activemqtopic topicname
info setsubscriptionname subscribername
info setselector selector
subscription subscription   broker addconsumer context  info
broker removeconsumer context  info
if  subscription    null
return subscription getobjectname
return null
public void destroydurablesubscriber string clientid  string subscribername  throws exception
removesubscriptioninfo info   new removesubscriptioninfo
info setclientid clientid
info setsubscriptionname subscribername
connectioncontext context   new connectioncontext
context setbroker broker
context setclientid clientid
broker removesubscription context  info
/**
* returns the broker's administration connection context used for
* configuring the broker at startup
*/
public static connectioncontext getconnectioncontext broker broker
connectioncontext adminconnectioncontext   broker getadminconnectioncontext
if  adminconnectioncontext    null
adminconnectioncontext   createadminconnectioncontext broker
broker setadminconnectioncontext adminconnectioncontext
return adminconnectioncontext
/**
* factory method to create the new administration connection context
* object. note this method is here rather than inside a default broker
* implementation to ensure that the broker reference inside it is the outer
* most interceptor
*/
protected static connectioncontext createadminconnectioncontext broker broker
connectioncontext context   new connectioncontext
context setbroker broker
return context
//  doc comment inherited from brokerviewmbean
public void reloadlog4jproperties   throws throwable
// avoid a direct dependency on log4j.. use reflection.
try
classloader cl   getclass   getclassloader
class logmanagerclass   cl loadclass
method resetconfiguration   logmanagerclass getmethod    new class
resetconfiguration invoke null  new object
url log4jprops   cl getresource
if  log4jprops    null
class propertyconfiguratorclass   cl loadclass
method configure   propertyconfiguratorclass getmethod    new class url class
configure invoke null  new object log4jprops
catch  invocationtargetexception e
throw e gettargetexception