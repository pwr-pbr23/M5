/*
derby - class org.apache.derby.iapi.services.io.newbytearrayinputstream
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi services io
import java io inputstream
import java io ioexception
/**
an inputstream that is like java.io.bytearrayinputstream but supports
a close() call that causes all methods to throw an ioexception.
java's byteinputstream has a close() method that does not do anything.
*/
public final class newbytearrayinputstream extends inputstream
private byte data
private int offset
private int length
public newbytearrayinputstream byte data
this data  0  data length
public newbytearrayinputstream byte data  int offset  int length
this data   data
this offset   offset
this length   length
/*
** public methods
*/
public int read   throws ioexception
if  data    null
throw new ioexception
if  length    0
return  1     end of file
length
return data   0xff
public int read byte b  int off  int len  throws ioexception
if  data    null
throw new ioexception
if  length    0
return  1
if  len > length
len   length
system arraycopy data  offset  b  off  len
offset    len
length    len
return len
public long skip long count   throws ioexception
if  data    null
throw new ioexception
if  length    0
return  1
if  count > length
count   length
offset     int  count
length     int  count
return count
public int available   throws ioexception
if  data    null
throw new ioexception
return length
public	byte	getdata     return data
public void close
data   null