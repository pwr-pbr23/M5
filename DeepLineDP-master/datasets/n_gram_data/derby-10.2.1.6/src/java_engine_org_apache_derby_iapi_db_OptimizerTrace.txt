/*
derby - class org.apache.derby.iapi.db.optimizertrace
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi db
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql conn connectionutil
/**
<p>
this  class provides static methods for controlling the
optimizer tracing in a cloudscape database.
<p>
<i>
cloudscape reserves the right to change, rename, or remove this interface
at any time. </i>
*/
public class optimizertrace
/**
* control whether or not optimizer trace is on.
*
* @param onoroff    whether to turn optimizer trace on (true) or off (false).
*
* @return whether or not the call was successful.  (false will be returned when optimizer tracing is not supported.)
*/
public static boolean setoptimizertrace boolean onoroff
boolean retcode   false
try
// get the current language connection context.  this is associated
// with the current database.
languageconnectioncontext lcc   connectionutil getcurrentlcc
retcode   lcc setoptimizertrace onoroff
catch  throwable t
// eat all exceptions, simply return false
return retcode
/**
* control whether or not optimizer trace is generated in html.
*
* @param onoroff    whether or not optimizer trace will be in html (true) or not (false).
*
* @return whether or not the call was successful.  (false will be returned when optimizer tracing is not supported.)
*/
public static boolean setoptimizertracehtml boolean onoroff
boolean retcode   false
try
// get the current language connection context.  this is associated
// with the current database.
languageconnectioncontext lcc   connectionutil getcurrentlcc
retcode   lcc setoptimizertracehtml onoroff
catch  throwable t
// eat all exceptions, simply return false
return retcode
/**
* get the optimizer trace output for the last optimized query as a string.  if optimizer trace
* html is on, then the string will contain the html tags.
*
* @return the optimizer trace output for the last optimized query as a string.
*    null will be returned if optimizer trace output is off or not supported
*    or no trace output was found or an exception occurred.
*/
public static string getoptimizertraceoutput
string retcode   null
try
// get the current language connection context.  this is associated
// with the current database.
languageconnectioncontext lcc   connectionutil getcurrentlcc
retcode   lcc getoptimizertraceoutput
catch  throwable t
// eat all exceptions, simply return null
return retcode
/**
* send the optimizer trace output for the last optimized query to a file with a .html extension.
* if optimizer trace html is on, then the output will contain the html tags.
*
* @param filename    the name of the file to write to.  (.html extension will be added.)
*
* @return whether or not the request was successful.
*    false mayl be returned for a number of reasons, including if optimizer trace output is off or not supported
*    or no trace output was found or an exception occurred.
*/
public static boolean writeoptimizertraceoutputhtml string filename
boolean retcode   true
try
string output   getoptimizertraceoutput
//resolveoptimizertrace - need to write out the html
catch  throwable t
// eat all exceptions, simply return false
retcode   false
return retcode