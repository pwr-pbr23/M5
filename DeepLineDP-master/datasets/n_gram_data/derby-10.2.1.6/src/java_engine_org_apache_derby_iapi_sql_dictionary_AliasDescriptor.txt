/*
derby - class org.apache.derby.iapi.sql.dictionary.aliasdescriptor
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi sql dictionary
import org apache derby iapi sql depend provider
import org apache derby iapi error standardexception
import org apache derby iapi services sanity sanitymanager
import	org apache derby catalog aliasinfo
import org apache derby catalog uuid
import org apache derby catalog aliasinfo
import	org apache derby catalog dependablefinder
import	org apache derby catalog dependable
import org apache derby catalog uuid
import org apache derby iapi services io storedformatids
/**
* this class represents an alias descriptor.
* the public methods for this class are:
*
* <ol>
* <li>getuuid</li>
* <li>getjavaclassname</li>
* <li>getaliastype</li>
* <li>getnamespace</li>
* <li>getsystemalias</li>
* <li>getaliasid</li>
* </ol>
*
* @author jerry brenner
*/
public final class aliasdescriptor
extends tupledescriptor
implements uniquetupledescriptor  provider
private final uuid		aliasid
private final string		aliasname
private final uuid		schemaid
private final string		javaclassname
private final char		aliastype
private final char		namespace
private final boolean		systemalias
private final aliasinfo	aliasinfo
private final string		specificname
/**
* constructor for a aliasdescriptor
*
* @param datadictionary		the data dictionary that this descriptor lives in
* @param aliasid				the uuid for this alias
* @param aliasname				the name of the method alias
* @param schemaid				the uuid for this alias's schema
* @param javaclassname			the java class name of the alias
* @param aliastype				the alias type
* @param namespace				the alias name space
* @param aliasinfo				the aliasinfo for the alias
*
*/
public	aliasdescriptor  datadictionary datadictionary  uuid aliasid
string aliasname  uuid schemaid  string javaclassname
char aliastype  char namespace  boolean systemalias
aliasinfo aliasinfo  string specificname
super  datadictionary
this aliasid   aliasid
this aliasname   aliasname
this schemaid   schemaid
this javaclassname   javaclassname
this aliastype   aliastype
this namespace   namespace
this systemalias   systemalias
this aliasinfo   aliasinfo
if  specificname    null
specificname   datadictionary getsystemsqlname
this specificname   specificname
// interface methods
/**
* gets the uuid  of the method alias.
*
* @return	the uuid string of the method alias.
*/
public uuid getuuid
return aliasid
/**
* gets the uuid  of the schema for this method alias.
*
* @return	the uuid string of the schema id.
*/
public uuid getschemauuid
return schemaid
/**
* gets the java class name of the alias.
*
* @return	the java class name of the alias.
*/
public string getjavaclassname
return javaclassname
/**
* gets the type of the alias.
*
* @return the type of the alias.
*/
public char getaliastype
return aliastype
/**
* gets the name space of the alias.
*
* @return the name space of the alias.
*/
public char getnamespace
return namespace
/**
* gets whether or not the alias is a system alias.
*
* @return whether or not the alias is a system alias.
*/
public boolean getsystemalias
return systemalias
/**
* gests the aliasinfo for the alias.
*
* @return	the aliasinfo for the alias.
*/
public aliasinfo getaliasinfo
return aliasinfo
//  	/**
//  	 * sets the id of the method alias
//  	 *
//  	 * @param aliasid	the uuid of the method alias to be set in the descriptor
//  	 *
//  	 * @return	nothing
//  	 */
//  	public void setaliasid(uuid aliasid)
//  	{
//  		this.aliasid = aliasid;
//  	}
/**
* convert the aliasdescriptor to a string.
*
* @return	a string representation of this aliasdescriptor
*/
public string	tostring
if  sanitymanager debug
return     aliasid
aliasname
schemaid
javaclassname
aliastype
namespace
systemalias
aliasinfo
else
return
//	methods so that we can put aliasdescriptors on hashed lists
/**
*	determine if two aliasdescriptors are the same.
*
*	@param	otherobject	other descriptor
*
*	@return	true if they are the same, false otherwise
*/
public boolean equals object otherobject
if    otherobject instanceof aliasdescriptor
return false
aliasdescriptor other    aliasdescriptor  otherobject
return aliasid equals  other getuuid
/**
*	get a hashcode for this aliasdescriptor
*
*	@return	hashcode
*/
public int hashcode
return	aliasid hashcode
//
// provider interface
//
/**
@return the stored form of this provider
representation
@see dependable#getdependablefinder
*/
public dependablefinder getdependablefinder
return	getdependablefinder storedformatids alias_descriptor_finder_v01_id
/**
* return the name of this provider.  (useful for errors.)
*
* @return string	the name of this provider.
*/
public string getobjectname
return aliasname
/**
* get the provider's uuid
*
* @return string	the provider's uuid
*/
public uuid getobjectid
return aliasid
/**
* get the provider's type.
*
* @return string		the provider's type.
*/
public string getclasstype
return dependable alias
/** @see tupledescriptor#getdescriptortype */
public string getdescriptortype
return getaliastype aliastype
public static final string getaliastype char namespace
switch  namespace
case aliasinfo alias_type_procedure_as_char
return
case aliasinfo alias_type_function_as_char
return
case aliasinfo alias_type_synonym_as_char
return
return  null
/** @see tupledescriptor#getdescriptorname */
public string getdescriptorname
return aliasname
/**
return the specific name for this object.
*/
public string getspecificname
return specificname
/**
* functions are persistent unless they are in the sysfun schema.
*
*/
public boolean ispersistent
return  getschemauuid   tostring   equals schemadescriptor sysfun_schema_uuid