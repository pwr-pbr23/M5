/*
derby - class org.apache.derby.impl.store.access.heap.d_heapcontroller
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl store access heap
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi error standardexception
import org apache derby iapi store raw containerhandle
import org apache derby iapi store raw page
import org apache derby iapi services diag diagnosticable
import org apache derby iapi services diag diagnosticablegeneric
import org apache derby iapi services diag diagnosticutil
import java util properties
/**
the heapcontroller_d class implements the diagnostics protocol for the
heapcontroller class.
**/
class tablestats
public int num_pages            0     number of pages in heap
public int num_overflow_pgs     0     number of overflow pages heap
public int num_entries          0     number recs on page
public int num_deleted          0     number of recs on page marked deleted
public long max_pageno          0     biggest page number allocated
public long num_free_bytes      0     number of free bytes on the pages
public long num_res_bytes       0     number of reserved bytes on the pages
public long num_overflow_rows   0     number of over flow rows on page
public long num_rowsize_bytes   0     number of bytes in rows
public long min_rowsize_bytes   long max_value     length of shortest row
public long max_rowsize_bytes   long min_value     length of longest row
public class d_heapcontroller extends diagnosticablegeneric
/* private/protected methods of this class: */
private static void diag_page
page        page
properties  prop
tablestats  stat
throws standardexception
stat num_pages
stat num_entries    page recordcount
stat num_deleted
page recordcount     page nondeletedrecordcount
stat max_pageno   math max stat max_pageno  page getpagenumber
diagnosticutil finddiagnostic page  diag_detail prop
// number of free bytes on page.
int free_bytes
integer parseint prop getproperty page diag_bytes_free
stat num_free_bytes    free_bytes
// number of bytes reserved on page.
int res_bytes
integer parseint prop getproperty page diag_bytes_reserved
stat num_res_bytes    res_bytes
// overflow rows.
int overflow
integer parseint prop getproperty page diag_numoverflowed
stat num_overflow_rows    overflow
// size of rows.
int rowsize
integer parseint prop getproperty page diag_rowsize
stat num_rowsize_bytes    rowsize
// minimum row size.
int min_rowsize
integer parseint prop getproperty page diag_minrowsize
if  min_rowsize    0
stat min_rowsize_bytes
math min stat min_rowsize_bytes  min_rowsize
// maximum row size.
int max_rowsize
integer parseint prop getproperty page diag_maxrowsize
stat max_rowsize_bytes   math max stat max_rowsize_bytes  max_rowsize
private static string out_summary
string  hdr
long    value
double  ratio
string  ratio_desc
string double_str       ratio
string short_str
if  ratio > 0 001
short_str   double_str substring
0
math min double_str lastindexof      3  double_str length
else
short_str
return
hdr   value       short_str
ratio_desc
private static string diag_tabulate
properties  prop
tablestats stat
string ret_string     new string
// totals:
ret_string
prop getproperty page diag_page_size
stat num_pages
integer parseint prop getproperty page diag_page_size
stat num_pages
stat max_pageno
prop getproperty page diag_reserved_space
prop getproperty page diag_minimum_rec_size
stat min_rowsize_bytes
stat max_rowsize_bytes
stat num_rowsize_bytes
stat num_entries    0 ?
0    stat num_rowsize_bytes   stat num_entries
out_summary
stat num_res_bytes
stat num_res_bytes   stat num_pages
out_summary
stat num_free_bytes
stat num_free_bytes   stat num_pages
out_summary
stat num_entries
double  stat num_entries    stat num_pages
out_summary
stat num_overflow_rows
double  stat num_overflow_rows    stat num_pages
out_summary
stat num_deleted
double  stat num_deleted    stat num_pages
return ret_string
/*
** methods of diagnosticable
*/
public void init object obj
if  sanitymanager debug
sanitymanager assert obj instanceof heapcontroller
super init obj
/**
* default implementation of diagnostic on the object.
* <p>
* this routine returns a string with whatever diagnostic information
* you would like to provide about this object.
* <p>
* this routine should be overriden by a real implementation of the
* diagnostic information you would like to provide.
* <p>
*
* @return a string with diagnostic information about the object.
*
* @exception standardexception  standard cloudscape exception policy
**/
public string diag
throws standardexception
long pageid
containerhandle container
heapcontroller  this diag_object  getopenconglom   getcontainer
tablestats stat   new tablestats
// ask page to provide diag info:
properties prop   new properties
prop put page diag_page_size
prop put page diag_bytes_free
prop put page diag_bytes_reserved
prop put page diag_reserved_space
prop put page diag_minimum_rec_size
prop put page diag_numoverflowed
prop put page diag_rowsize
prop put page diag_minrowsize
prop put page diag_maxrowsize
// scan all pages in the heap gathering summary stats in stat
page page   container getfirstpage
while  page    null
this diag_page page  prop  stat
pageid   page getpagenumber
page unlatch
page   container getnextpage pageid
return this diag_tabulate prop  stat