/*
derby - class org.apache.derby.impl.sql.compile.columnordering
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql compile
import org apache derby iapi sql compile rowordering
import org apache derby iapi sql compile optimizable
import org apache derby iapi services sanity sanitymanager
import java util vector
class columnordering
/* see rowordering for possible values */
int	mydirection
/* a vector of column numbers (integers) */
vector columns   new vector
/*
** a vector of table numbers (integers), corresponding to the column
** vector by position.
*/
vector tables   new vector
/**
* @param direction	see rowordering for possible values
*/
columnordering int direction
mydirection   direction
/**
* does this columnordering contain the given column in the given table
* in the right direction?
*
* @param direction		see rowordering for possible values
* @param tablenumber	the number of the table in question
* @param columnnumber	the column number in the table (one-based)
*
* @return	true if the column is found here in the right direction
*/
boolean ordered int direction  int tablenumber  int columnnumber
/*
** check the direction only if the direction isn't dontcare
*/
if  direction    rowordering dontcare
if  direction    mydirection
return false
/* the direction matches - see if the column is in this ordering */
return contains tablenumber  columnnumber
/**
* does this columnordering contain the given column?
*
* @param tablenumber	the number of table in question
* @param columnnumber	the column number in the table (one-based)
*
* @return	true if the column is found here in the right direction
*/
boolean contains int tablenumber  int columnnumber
for  int i   0  i < columns size    i
integer col    integer  columns elementat i
integer tab    integer  tables elementat i
if  tab intvalue      tablenumber
col intvalue      columnnumber
return true
return false
/**
* get the direction of this columnordering
*/
int direction
return mydirection
/**
* add a column in a table to this columnordering
*
* @param tablenumber	the number of table in question
* @param columnnumber	the column number in the table (one-based)
*/
void addcolumn int tablenumber  int columnnumber
tables addelement new integer tablenumber
columns addelement new integer columnnumber
/**
* remove all columns with the given table number
*/
void removecolumns int tablenumber
/*
** walk the list backwards, so we can remove elements
** by position.
*/
for  int i   tables size     1  i >  0  i
integer tab    integer  tables elementat i
if  tab intvalue      tablenumber
tables removeelementat i
columns removeelementat i
/**
* tell whether this columnordering has no elements.
*/
boolean empty
return  tables size      0
/** return a clone of this columnordering */
columnordering cloneme
columnordering retval   new columnordering mydirection
for  int i   0  i < columns size    i
/* integers are immutable, so just copy the pointers */
retval columns addelement columns elementat i
retval tables addelement tables elementat i
return retval
/** is the given table number in this columnordering? */
boolean hastable int tablenumber
if  tables size      0
return false
for  int i   0  i < tables size    i
integer tab    integer  tables elementat i
if  tab intvalue      tablenumber
return true
return false
/** is there any table other than the given one in this columnordering? */
boolean hasanyothertable int tablenumber
if  tables size      0
return false
for  int i   0  i < tables size    i
integer tab    integer  tables elementat i
if  tab intvalue      tablenumber
return true
return false
public string tostring
string retval
if  sanitymanager debug
retval        mydirection
for  int i   0  i < columns size    i
retval        tables elementat i
columns elementat i
return retval