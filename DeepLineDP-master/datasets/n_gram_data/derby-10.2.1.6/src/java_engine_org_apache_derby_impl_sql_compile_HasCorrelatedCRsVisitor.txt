/*
derby - class org.apache.derby.impl.sql.compile.hascorrelatedcrsvisitor
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package	org apache derby impl sql compile
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi sql compile visitable
import org apache derby iapi sql compile visitor
import org apache derby iapi store access qualifier
import org apache derby iapi error standardexception
/**
* find out if we have an correlated column reference
* anywhere below us.  stop traversal as soon as we find one.
*
* @author jamie
*/
public class hascorrelatedcrsvisitor implements visitor
private boolean hascorrelatedcrs
/**
* construct a visitor
*/
public hascorrelatedcrsvisitor
////////////////////////////////////////////////
//
// visitor interface
//
////////////////////////////////////////////////
/**
* if we have found the target node, we are done.
*
* @param node 	the node to process
*
* @return me
*/
public visitable visit visitable node
if  node instanceof columnreference
if    columnreference node  getcorrelated
hascorrelatedcrs   true
else if  node instanceof virtualcolumnnode
if    virtualcolumnnode node  getcorrelated
hascorrelatedcrs   true
else if  node instanceof methodcallnode
/* trigger action references are correlated
*/
if    methodcallnode node  getmethodname   equals
methodcallnode node  getmethodname   equals
methodcallnode node  getmethodname   equals
hascorrelatedcrs   true
return node
/**
* stop traversal if we found the target node
*
* @return true/false
*/
public boolean stoptraversal
return hascorrelatedcrs
public boolean skipchildren visitable v
return false
////////////////////////////////////////////////
//
// class interface
//
////////////////////////////////////////////////
/**
* indicate whether we found the node in
* question
*
* @return true/false
*/
public boolean hascorrelatedcrs
return hascorrelatedcrs
/**
* shortcut to set if hascorrelatedcrs
*
*	@param	value	true/false
*/
public void sethascorrelatedcrs boolean value
hascorrelatedcrs   value