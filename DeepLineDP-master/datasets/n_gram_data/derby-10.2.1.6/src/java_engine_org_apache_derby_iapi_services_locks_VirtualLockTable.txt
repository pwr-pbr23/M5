/*
derby - class org.apache.derby.iapi.services.locks.virtuallocktable
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi services locks
/**
this class acts as a conduit of information between the lock manager and
the outside world.  once a virtual lock table is initialized, it contains
a snap shot of all the locks currently held in the lock manager.  a vti can
then be written to query the content of the lock table.
<p>
each lock held by the lock manager is represented by a hashtable.  the key
to each hashtable entry is a lock attribute that is of interest to the
outside world, such as transaction id, type, mode, etc.
*/
public interface virtuallocktable
// flags for lockable.lockattributes
public static final int latch   1
public static final int table_and_rowlock   2
public static final int shexlock   4
public static final int all   ~0 	   turn on all bits
// this is a list of attributes that is known to the virtual lock table.
// list of attributes to be supplied by a participating lockable
public static final string locktype		    	   mandatory
public static final string lockname		        mandatory
// either one of conglomid or containerid mandatory
public static final string conglomid
public static final string containerid
public static final string segmentid	    	    optional
public static final string pagenum		        optional
public static final string recid		        optional
// list of attributes added by the virtual lock table by asking
// the lock for its compatibility space and count
public static final string xactid
public static final string lockcount
// list of attributes added by the virtual lock table by asking
// the lock qualifier
public static final string lockmode
// list of attributes to be supplied the virtual lock table by looking at
// the lock table
public static final string state
public static final string lockobj
// list of attributes filled in by virtual lock table with help from data
// dictionary
public static final string tablename
public static final string indexname
public static final string tabletype