/*
derby - class org.apache.derby.impl.drda.drdaprotocolexception
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
/*
/**
drdaprotocolexception is the root of all protocol exceptions that are
handled in a standard fashion by the drda as.
if a protocol error message needs to send more than
svrcod, an errcd and codpnt arg it should be subclassed
@author marsden
*/
package org apache derby impl drda
import java util hashtable
import org apache derby iapi services sanity sanitymanager
class drdaprotocolexception extends exception
/* static values, used in constructor if there is no associated
error code or the codepoint argument.
*/
protected static final int no_assoc_errcd   0
protected static final int no_codpnt_arg    0
private drdaconnthread agent
// request correlation id
private int correlationid
// correlation token
private byte crrtkn
//codepoint arg
private int codpntarg
private drdaprotocolexceptioninfo exceptioninfo
// codepoint of this error
private int errorcodepoint
// severity code
private int svrcod
// error code (e.g. synerrcd)
private int errcd
// messageid for logging errors.
private string  messageid
// database name
private string rdbnam
// database diagnostic information
private string srvdgn
// message arguments
private object  messageargs
// a verbose error message string, will be helpful
// when getmessage() is called on this exception object
private string msg
private static hashtable errorinfotable
protected static string drda_proto_cmdchkrm
protected static string drda_proto_cmdnsprm
protected static string drda_proto_dtamchrm
protected static string drda_proto_objnsprm
protected static string drda_proto_pkgbnarm
protected static string drda_proto_prccnvrm
protected static string drda_proto_prmnsrm
protected static string drda_proto_syntaxrm
protected static string drda_proto_valnsprm
protected static string drda_proto_mgrlvlrm
protected static string drda_proto_rdbnfnrm
protected static string drda_disconnect
protected static string drda_agenterror
static
/* create the errorinfotable
the hashtable is keyed on messageid and holds
drdaprotocolexceptioninfo for each of our messages.
*/
errorinfotable   new hashtable
errorinfotable put
drda_proto_cmdchkrm
new  drdaprotocolexceptioninfo
codepoint cmdchkrm
codepoint svrcod_error
no_assoc_errcd
false
errorinfotable put
drda_proto_cmdnsprm
new  drdaprotocolexceptioninfo
codepoint cmdnsprm
codepoint svrcod_error
no_assoc_errcd
true
errorinfotable put
drda_proto_dtamchrm
new  drdaprotocolexceptioninfo
codepoint dtamchrm
codepoint svrcod_error
no_assoc_errcd
false
errorinfotable put
drda_proto_objnsprm
new  drdaprotocolexceptioninfo
codepoint objnsprm
codepoint svrcod_error
no_assoc_errcd
true
errorinfotable put
drda_proto_pkgbnarm
new  drdaprotocolexceptioninfo
codepoint pkgbnarm
codepoint svrcod_error
no_assoc_errcd
false
errorinfotable put drda_proto_prccnvrm
new drdaprotocolexceptioninfo
codepoint prccnvrm
codepoint svrcod_error
codepoint prccnvcd
false
errorinfotable put drda_proto_syntaxrm
new drdaprotocolexceptioninfo
codepoint syntaxrm
codepoint svrcod_error
codepoint synerrcd
true
errorinfotable put drda_proto_valnsprm
new drdaprotocolexceptioninfo
codepoint valnsprm
codepoint svrcod_error
no_assoc_errcd
true
errorinfotable put drda_proto_mgrlvlrm
new drdaprotocolexceptioninfo
codepoint mgrlvlrm
codepoint svrcod_error
no_assoc_errcd
false
errorinfotable put drda_proto_rdbnfnrm
new drdaprotocolexceptioninfo
codepoint rdbnfnrm
codepoint svrcod_error
no_assoc_errcd
false
errorinfotable put drda_disconnect
new drdaprotocolexceptioninfo
0
0
no_assoc_errcd
false
// permanent agent error (agnprmrm) reply message indicates that the command
// requested could not be completed because of a permanent error
// condition detected at the target system.
errorinfotable put drda_agenterror
new drdaprotocolexceptioninfo
codepoint agnprmrm
codepoint svrcod_prmdmg
no_assoc_errcd
false
/**  create a new protocol exception
*
* @param agent		drdaconnthread  that threw this exception
*
* @param cparg		codpnt value  to pass to send
*
*
* @param msgid		  the messageid for this message. (needs to be
* integrated into logging mechanism)
*
* @param args		   argments for the message in an object[]
*
*/
drdaprotocolexception string msgid
drdaconnthread agent
int cparg
int errcdarg  object args
boolean agenterror   false
exceptioninfo
drdaprotocolexceptioninfo  errorinfotable get msgid
if  agent    null
this correlationid   agent getcorrelationid
this crrtkn   agent getcrrtkn
this codpntarg  cparg
this errorcodepoint   exceptioninfo errorcodepoint
this errcd   errcdarg
this messageid   msgid
if  msgid equals drda_agenterror
this svrcod     integer args  intvalue
this rdbnam    string args
// retrieve the server diagnostic error message
string srvdgn    string args
msg
java lang integer tohexstring this svrcod
rdbnam     srvdgn
agenterror   true
else if  msgid equals drda_proto_rdbnfnrm
this svrcod   exceptioninfo svrcod
this rdbnam    string args
msg
messageid
rdbnam
else
this svrcod   exceptioninfo svrcod
msg
messageid
java lang integer tohexstring cparg
java lang integer tohexstring errcdarg
if   agenterror    args    null
messageargs   args
for  int i   0  i < args length  i
//args contain managers and manager levels display in hex
if  msgid equals drda_proto_mgrlvlrm
msg
java lang integer tohexstring   integer args  intvalue
else
msg        args
// for now dump all errors except disconnects to console
// and log
if   isdisconnectexception
drdaconnthread println2log agent getdbname
agent getsession   drdaid
msg
networkservercontrolimpl s   agent getserver
s consoleexceptionprinttrace this
// constructor with no additional args
drdaprotocolexception string msgid
drdaconnthread agent
int cparg
int errcdarg
this msgid agent   cparg  errcdarg   object   null
protected static drdaprotocolexception newdisconnectexception drdaconnthread
agent object args
return new drdaprotocolexception drda_disconnect
agent
no_codpnt_arg
no_assoc_errcd
args
protected static drdaprotocolexception newagenterror drdaconnthread agent
int svrcod  string rdbnam  string srvdgn
if   sanitymanager debug
agent trace     agent
object oa    new integer svrcod   rdbnam  srvdgn
return new drdaprotocolexception drda_agenterror
agent
no_codpnt_arg
no_assoc_errcd
oa
protected final boolean isdisconnectexception
return  errorcodepoint    0
/** write will write the error information to the buffer.
* most errors will write only the codepoint and svrcod
* where appropriate the codepoint specific error code and
* codepoint of origin will be written
*
* @param writer  the ddmwriter for the agent.
*/
protected void write ddmwriter writer
//writing protocol error
writer createdssreply
writer startddm errorcodepoint
writer writescalar2bytes codepoint svrcod svrcod
if  exceptioninfo sendscodpntarg
writer writescalar2bytes codepoint codpnt codpntarg
if  exceptioninfo errcdcodepoint     no_assoc_errcd
writer writescalar1byte exceptioninfo errcdcodepoint
errcd
if  rdbnam    null    agent    null
try
agent writerdbnam rdbnam
catch  drdaprotocolexception e       ignore exceptions while processing
// for mgrlvlrm, need to write out the manager levels
if  errorcodepoint    codepoint mgrlvlrm
writer startddm codepoint mgrlvlls
for  int i   0  i < messageargs length   i    2
writer writenetworkshort   integer messageargs  intvalue
writer writenetworkshort   integer messageargs  intvalue
writer endddm
writer endddmanddss
/**
* override getmessage()
* @return the server diagnostic error message for this exception
*/
public string getmessage
return msg