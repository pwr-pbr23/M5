/*
derby - class org.apache.derby.iapi.services.io.debugbyteteeoutputstream
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi services io
import java io
import org apache derby iapi services io accessiblebytearrayoutputstream
class debugbyteteeoutputstream extends filteroutputstream
private accessiblebytearrayoutputstream tee   new accessiblebytearrayoutputstream 256
debugbyteteeoutputstream outputstream out
super out
public void write int b  throws ioexception
out write b
tee write b
public void write byte b  int off  int len  throws ioexception
out write b off len
tee write b off len
void checkobject formatable f
bytearrayinputstream in   new bytearrayinputstream tee getinternalbytearray    0  tee size
formatidinputstream fin   new formatidinputstream in
// now get an empty object given the format identification
// read it in
// then compare it???
formatable f1   null
try
f1    formatable  fin readobject
if  f1 equals f
return
// if the two objects are not equal and it looks
// like they don't implement their own equals()
// (which requires a matching hashcode() then
// just return. the object was read sucessfully.
if   f1 hashcode      system identityhashcode f1
f hashcode      system identityhashcode f
return
catch  throwable t
system out println     t tostring
system out println     f getclass
if  null    f1
system out println
else
system out println     f1 getclass
system out println     formatidutil formatidtostring f gettypeformatid
if  null    f1
system out println     formatidutil formatidtostring f1 gettypeformatid
t printstacktrace system out
//system.out.println("formatableerror:class written " + f.getclass() + " format id " + f.gettypeformatid());
//if (f1 != null)
//system.out.println("formatableerror:class read    " + f1.getclass() + " format id " + f1.gettypeformatid());