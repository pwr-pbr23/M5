/*
derby - class org.apache.derby.impl.store.raw.xact.internalxact
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl store raw xact
import org apache derby iapi reference sqlstate
import org apache derby iapi store raw transaction
import org apache derby iapi store raw log logfactory
import org apache derby iapi store raw data datafactory
import org apache derby iapi error standardexception
import org apache derby iapi services sanity sanitymanager
import java io objectinput
/**
@see xact
*/
public class internalxact extends xact
/*
** constructor
*/
protected internalxact
xactfactory     xactfactory
logfactory      logfactory
datafactory     datafactory
super xactfactory  logfactory  datafactory  false  null
// always want to hold latches & containers open past the commit/abort
setpostcomplete
/*
** methods of transaction
*/
/**
savepoints are not supported in internal transactions.
@exception standardexception  a transaction exception is thrown to
disallow savepoints.
@see transaction#setsavepoint
*/
public int setsavepoint string name  object kindofsavepoint
throws standardexception
throw standardexception newexception
sqlstate xact_not_supported_in_internal_xact
/*
** methods of rawtransaction
*/
/**
internal transactions don't allow logical operations.
@exception standardexception a transaction exception is thrown to
disallow logical operations.
@see org.apache.derby.iapi.store.raw.xact.rawtransaction#recoveryrollbackfirst
*/
public void checklogicaloperationok
throws standardexception
throw standardexception newexception
sqlstate xact_not_supported_in_internal_xact
/**
yes, we do want to be rolled back first in recovery.
@see org.apache.derby.iapi.store.raw.xact.rawtransaction#recoveryrollbackfirst
*/
public boolean recoveryrollbackfirst
return true
/*
**	implementation specific methods
*/
/**
* @param commitorabort to commit or abort
*
* @exception standardexception on error
*/
protected void docomplete integer commitorabort
throws standardexception
// release our latches on an abort
// keep everything on a commit
if  commitorabort equals abort
super docomplete commitorabort
protected void setidlestate
super setidlestate
// quiesce mode never denies an internal transaction from going active, don't
// have to worry about that
if  countobservers      0
try
super setactivestate
catch  standardexception se
if  sanitymanager debug
sanitymanager throwassert     se