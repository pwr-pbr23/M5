/*
derby - class org.apache.derby.impl.load.importabstract
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl load
import java sql sqlexception
import java sql sqlwarning
import java sql resultsetmetadata
import org apache derby vti vtitemplate
import java util arraylist
/**
*
* <p>
*/
abstract class importabstract extends vtitemplate
controlinfo controlfilereader
importreaddata importreaddata
string columnnames
int numberofcolumns
int columnwidths
string nextrow
resultsetmetadata importresultsetmetadata
int noofcolumnsexpected
private boolean wasnull
static final string columnnameprefix
abstract importreaddata getimportreaddata   throws exception
/** does all the work
* @exception	exception if there is an error
*/
void doallthework   throws exception
//prepare the input file for import. get the number of columns per row
//from the input file.
importreaddata   getimportreaddata
numberofcolumns   importreaddata getnumberofcolumns
if numberofcolumns    0
//file is empty. assume same number of columns expected
//and return no data , but no rows gets insereted.
this numberofcolumns   noofcolumnsexpected
columnwidths   controlfilereader getcolumnwidths
columnnames   new string
loadcolumnnames
nextrow   new string
// get the resultsetmetadata now as we know it's needed
importresultsetmetadata
new importresultsetmetadata numberofcolumns  columnnames  columnwidths
//fixme don't go through the resultset here. just for testing
//    while (next()) ;
//the column names will be column#
void loadcolumnnames
for  int i 1  i< numberofcolumns  i
columnnames   columnnameprefix   i
/** gets the resultset meta data
* @exception	sqlexception if there is an error
*/
public resultsetmetadata getmetadata
return importresultsetmetadata
//all the resultset interface methods
/** gets the next row
* @exception	sqlexception if there is an error
*/
public int getrow   throws sqlexception
return  importreaddata getcurrentrownumber
public boolean next   throws sqlexception
try
return  importreaddata readnextrow nextrow
catch  exception ex
throw loaderror unexpectederror ex
/** closes the resultset
* @exception	sqlexception if there is an error
*/
public void close   throws sqlexception
try
if importreaddata  null
importreaddata closestream
catch  exception ex
throw loaderror unexpectederror ex
public boolean wasnull
return wasnull
/**
* @exception	sqlexception if there is an error
*/
public string getstring int columnindex  throws sqlexception
if  columnindex <  numberofcolumns
string val   nextrow
wasnull    val    null
return val
else
throw loaderror invalidcolumnnumber numberofcolumns