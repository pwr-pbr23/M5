/*
derby - class org.apache.derby.impl.services.reflect.reflectgeneratedclass
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl services reflect
import org apache derby iapi services loader generatedmethod
import org apache derby iapi services loader generatedbytecode
import org apache derby iapi services loader classfactory
import org apache derby iapi error standardexception
import org apache derby iapi reference sqlstate
import org apache derby iapi services context context
import java lang reflect method
import java util hashtable
public final class reflectgeneratedclass extends loadedgeneratedclass
private final hashtable methodcache
private static final generatedmethod directs
private final class	factoryclass
private gcinstancefactory factory
static
directs   new generatedmethod
for  int i   0  i < directs length  i
directs   new directcall i
public reflectgeneratedclass classfactory cf  class jvmclass  class factoryclass
super cf  jvmclass
methodcache   new hashtable
this factoryclass   factoryclass
public object newinstance context context  throws standardexception
if  factoryclass    null
return super newinstance context
if  factory    null
throwable t
try
factory     gcinstancefactory  factoryclass newinstance
t   null
catch  instantiationexception ie
t   ie
catch  illegalaccessexception iae
t   iae
catch  linkageerror le
t   le
if  t    null
throw standardexception newexception sqlstate generated_class_instance_error  t  getname
generatedbytecode ni   factory getnewinstance
ni initfromcontext context
ni setgc this
ni postconstructor
return ni
public generatedmethod getmethod string simplename
throws standardexception
generatedmethod rm    generatedmethod  methodcache get simplename
if  rm    null
return rm
// only look for methods that take no arguments
try
if   simplename length      2     simplename startswith
int id     int  simplename charat 1
rm   directs
else
method m   getjvmclass   getmethod simplename   class   null
rm   new reflectmethod m
methodcache put simplename  rm
return rm
catch  nosuchmethodexception nsme
throw standardexception newexception sqlstate generated_class_no_such_method
nsme  getname    simplename
class directcall implements generatedmethod
private final int which
directcall int which
this which   which
public object invoke object ref
throws standardexception
try
generatedbytecode gref    generatedbytecode  ref
switch  which
case 0
return gref e0
case 1
return gref e1
case 2
return gref e2
case 3
return gref e3
case 4
return gref e4
case 5
return gref e5
case 6
return gref e6
case 7
return gref e7
case 8
return gref e8
case 9
return gref e9
return null
catch  standardexception se
throw se
catch  throwable t
throw standardexception unexpecteduserexception t