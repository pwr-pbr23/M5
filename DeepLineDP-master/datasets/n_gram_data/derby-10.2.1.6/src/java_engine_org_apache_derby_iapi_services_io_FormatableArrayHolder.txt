/*
derby - class org.apache.derby.iapi.services.io.formatablearrayholder
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi services io
import org apache derby iapi services io arrayinputstream
import org apache derby iapi services io storedformatids
import org apache derby iapi services io formatidutil
import org apache derby iapi services io arrayutil
import org apache derby iapi services io formatable
import org apache derby iapi services sanity sanitymanager
import java io objectoutput
import java io objectinput
import java io ioexception
import java lang reflect array
/**
* a formatable holder for an array of formatables.
* used to avoid serializing arrays.
*/
public class formatablearrayholder implements formatable
/********************************************************
**
**	this class implements formatable. that means that it
**	can write itself to and from a formatted stream. if
**	you add more fields to this class, make sure that you
**	also write/read them with the writeexternal()/readexternal()
**	methods.
**
**	if, inbetween releases, you add more fields to this class,
**	then you should bump the version number emitted by the gettypeformatid()
**	method.
**
********************************************************/
// the array
private object array
/**
* niladic constructor for formatable
*/
public formatablearrayholder
/**
* construct a formatablearrayholder using the input
* array.
*
* @param array the array to hold
*/
public formatablearrayholder object array
if  sanitymanager debug
sanitymanager assert array    null
this array   array
/**
* set the held array to the input array.
*
* @param array the array to hold
*/
public void setarray object array
if  sanitymanager debug
sanitymanager assert array    null
this array   array
/**
* get the held array of formatables, and return
* it in an array of type inputclass.
*
* @param inputclass	the class to use for the returned array
*
* @return an array of formatables
*/
public object getarray class inputclass
object outarray    object array newinstance inputclass  array length
/*
** hack: on as400 the following arraycopy() throws an
** arraystoreexception because the output array isn't
** assignment compatible with the input array.  this
** is a bug on as400, but to get around it we are
** going to do an element by element copy.
*/
//system.arraycopy(array, 0, outarray, 0, outarray.length);
for  int i   0  i < outarray length  i
outarray   array
return outarray
//////////////////////////////////////////////
//
// formatable
//
//////////////////////////////////////////////
/**
* write this array out
*
* @param out write bytes here
*
* @exception ioexception thrown on error
*/
public void writeexternal objectoutput out  throws ioexception
if  sanitymanager debug
sanitymanager assert array    null
arrayutil writearraylength out  array
arrayutil writearrayitems out  array
/**
* read this array from a stream of stored objects.
*
* @param in read this.
*
* @exception ioexception					thrown on error
* @exception classnotfoundexception		thrown on error
*/
public void readexternal objectinput in
throws ioexception  classnotfoundexception
array   new object
arrayutil readarrayitems in  array
public void readexternal arrayinputstream in
throws ioexception  classnotfoundexception
array   new formatable
arrayutil readarrayitems in  array
/**
* get the formatid which corresponds to this class.
*
*	@return	the formatid of this class
*/
public	int	gettypeformatid  	  return storedformatids formatable_array_holder_v01_id