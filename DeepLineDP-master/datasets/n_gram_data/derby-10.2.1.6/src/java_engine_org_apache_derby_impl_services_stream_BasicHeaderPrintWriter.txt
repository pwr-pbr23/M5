/*
derby - class org.apache.derby.impl.services.stream.basicheaderprintwriter
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl services stream
import org apache derby iapi services stream headerprintwriter
import org apache derby iapi services stream printwritergetheader
import java io printwriter
import java io writer
import java io outputstream
/**
* basic class to print lines with headers.
* <p>
*
* stub: should include code to emit a new line before a header
*			which is not the first thing on the line.
*
*/
class basicheaderprintwriter
extends printwriter
implements headerprintwriter
private final printwritergetheader headergetter
private final boolean canclose
private final string name
// constructors
/**
* the constructor sets up the headerprintwriter.
* <p>
* @param writeto       where to write to.
* @param headergetter	object to get headers for output lines.
* @param canclose      if true, {@link #complete} will also close writeto
* @param streamname    name of writeto, e.g. a file name
*
* @see	printwritergetheader
*/
basicheaderprintwriter outputstream writeto
printwritergetheader headergetter   boolean canclose  string streamname
super writeto  true
this headergetter   headergetter
this canclose   canclose
this name   streamname
/**
* the constructor sets up the headerprintwriter.
* <p>
* @param writeto       where to write to.
* @param headergetter	object to get headers for output lines.
* @param canclose      if true, {@link #complete} will also close writeto
* @param writername    name of writeto, e.g. a file name
*
* @see	printwritergetheader
*/
basicheaderprintwriter writer writeto
printwritergetheader headergetter  boolean canclose  string writername
super writeto  true
this headergetter   headergetter
this canclose   canclose
this name   writername
/*
* headerprintwriter interface (partial; remaining methods
* come from the printwriter supertype).
*/
public synchronized void printlnwithheader string message
print headergetter getheader
println message
public printwritergetheader getheader
return headergetter
public printwriter getprintwriter
return this
public string getname
return name
/**
* flushes stream, and optionally also closes it if constructed
* with canclose equal to true.
*/
void complete
flush
if  canclose
close