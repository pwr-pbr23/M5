/*
derby - class org.apache.derby.impl.jdbc.embedpreparedstatement20
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl jdbc
import org apache derby impl jdbc embedconnection
import org apache derby impl jdbc util
import org apache derby iapi sql resultset
import org apache derby iapi error standardexception
import org apache derby iapi reference sqlstate
import java io inputstream
import java math bigdecimal
import java sql sqlexception
import java sql sqlwarning
import java sql date
import java sql time
import java sql timestamp
/* ---- new jdbc 2.0 types ----- */
import java sql array
import java sql blob
import java sql clob
import java sql ref
import java sql types
/**
* this class extends the embedpreparedstatement class in order to support new
* methods and classes that come with jdbc 2.0.
<p><b>supports</b>
<ul>
<li> jdbc 2.0
</ul>
*	@see org.apache.derby.impl.jdbc.embedpreparedstatement
*
*	@author francois
*/
public class embedpreparedstatement20
extends org apache derby impl jdbc embedpreparedstatement
//////////////////////////////////////////////////////////////
//
// constructors
//
//////////////////////////////////////////////////////////////
/*
constructor assumes caller will setup context stack
and restore it.
@exception sqlexception on error
*/
public embedpreparedstatement20  embedconnection conn  string sql  boolean formetadata
int resultsettype
int resultsetconcurrency
int resultsetholdability
int autogeneratedkeys
int columnindexes
string columnnames
throws sqlexception
super conn  sql  formetadata  resultsettype  resultsetconcurrency  resultsetholdability
autogeneratedkeys  columnindexes  columnnames
/**
* jdbc 2.0
*
* set a ref(&lt;structured-type&gt;) parameter.
*
* @param i the first parameter is 1, the second is 2, ...
* @param x an object representing data of an sql ref type
* @exception sqlexception feature not implemented for now.
*/
public void setref  int i  ref x  throws sqlexception
throw util notimplemented
/**
* jdbc 2.0
*
* set an array parameter.
*
* @param i the first parameter is 1, the second is 2, ...
* @param x an object representing an sql array
* @exception sqlexception feature not implemented for now.
*/
public void setarray  int i  array x  throws sqlexception
throw util notimplemented
/*
** methods using bigdecimal, moved out of embedpreparedstatement
** to allow that class to support jsr169.
*/
/**
* set a parameter to a java.lang.bigdecimal value.
* the driver converts this to a sql numeric value when
* it sends it to the database.
*
* @param parameterindex the first parameter is 1, the second is 2, ...
* @param x the parameter value
* @exception sqlexception thrown on failure.
*/
public final void setbigdecimal int parameterindex  bigdecimal x  throws sqlexception
checkstatus
try
/* jdbc is one-based, dbms is zero-based */
getparms   getparameterforset parameterindex   1  setbigdecimal x
catch  throwable t
throw embedresultset nostatechangeexception t
/**
allow explict setobject conversions by sub-classes for classes
not supported by this variant. in this case handle bigdecimal.
@return true if the object was set successfully, false if no valid
conversion exists.
@exception sqlexception value could not be set.
*/
boolean setobjectconvert int parameterindex  object x  throws sqlexception
if  x instanceof bigdecimal
setbigdecimal parameterindex   bigdecimal  x
return true
return false