/*
derby - class org.apache.derby.client.am.parametermetadata
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client am
import java sql sqlexception
// parameter meta data as used internally by the driver is always a column meta data instance.
// we will only create instances of this class when getparametermetadata() is called.
// this class simply wraps a column meta data instance.
//
// once we go to jdk 1.4 as runtime pre-req, we can extend columnmetadata and new up parametermetadata instances directly,
// and we won't have to wrap column meta data instances directly.
public class parametermetadata implements java sql parametermetadata
columnmetadata columnmetadata_
// this is false unless for parametermetadata for a call statement with return clause
boolean escapedprocedurecallwithresult_   false
public parametermetadata columnmetadata columnmetadata
columnmetadata_   columnmetadata
public int getparametercount   throws sqlexception
if  escapedprocedurecallwithresult_
return columnmetadata_ columns_
return columnmetadata_ columns_
public int getparametertype int param  throws sqlexception
if  escapedprocedurecallwithresult_
param
if  param    0
return java sql types integer
return columnmetadata_ getcolumntype param
public string getparametertypename int param  throws sqlexception
if  escapedprocedurecallwithresult_
param
if  param    0
return
return columnmetadata_ getcolumntypename param
public string getparameterclassname int param  throws sqlexception
if  escapedprocedurecallwithresult_
param
if  param    0
return
return columnmetadata_ getcolumnclassname param
public int getparametermode int param  throws sqlexception
try
if  escapedprocedurecallwithresult_
param
if  param    0
return java sql parametermetadata parametermodeout
columnmetadata_ checkforvalidcolumnindex param
if  columnmetadata_ sqlxparmmode_    java sql parametermetadata parametermodeunknown
return java sql parametermetadata parametermodeunknown
else if  columnmetadata_ sqlxparmmode_    java sql parametermetadata parametermodein
return java sql parametermetadata parametermodein
else if  columnmetadata_ sqlxparmmode_    java sql parametermetadata parametermodeout
return java sql parametermetadata parametermodeout
else
return java sql parametermetadata parametermodeinout
catch   sqlexception se
throw se getsqlexception
public int isnullable int param  throws sqlexception
if  escapedprocedurecallwithresult_
param
if  param    0
return java sql resultsetmetadata columnnonulls
return columnmetadata_ isnullable param
public boolean issigned int param  throws sqlexception
if  escapedprocedurecallwithresult_
param
if  param    0
return true
return columnmetadata_ issigned param
public int getprecision int param  throws sqlexception
if  escapedprocedurecallwithresult_
param
if  param    0
return 10
return columnmetadata_ getprecision param
public int getscale int param  throws sqlexception
if  escapedprocedurecallwithresult_
param
if  param    0
return 0
return columnmetadata_ getscale param