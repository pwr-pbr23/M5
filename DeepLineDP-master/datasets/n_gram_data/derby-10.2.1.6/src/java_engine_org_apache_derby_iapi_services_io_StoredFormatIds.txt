/*
derby - class org.apache.derby.iapi.services.io.storedformatids
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
//depot/main/java/org.apache.derby.iapi.services.io/storedformatids.java#211 - edit change 20974 (text)
package org apache derby iapi services io
/**
a format id identifies a stored form of an object for the
purposes of locating a class which can read the stored form and
reconstruct the object using the java.io.externalizable interface.
<p>an important aspect of the format id concept is that it does
not impose an implementation on the stored object. rather,
multiple implementations of an object (or interface) may share a
format id. one implementation may store (write) an object
and another may restore (read) the object. the implication of this
is that a format id specifies the following properties of a
stored object.
<ul>
<li>the interface(s) the stored object must support. any implementation
which reads the object must support these interfaces.
<li>the format of the stored object. all implementaions which support
the format must be able to read and write it.
</ul>
<p>an object should implement the formatable inteface to support a
stored format. in addition, the module which contains the object
should register the object's class with the monitor (see
formatidutil.register.)
<p>when you add a format id to this file, please include the list
of interfaces an implementaion must support when it supports
the format id. when cloudscape code reads a stored form it returns an
object of a class which supports the stored form. a reader may
cast this object to any interface listed in this file. it is an error for
the reader to cast the object to a class or interface not listed in this
file.
<p>when you implement a class that supports a format, add a comment that
states the name of the class. the first implementation of a format defines
the stored form.
<p>this interface defines all the format ids for cloudscape software.
if you define a format id please be sure to declare it in this
file. if you remove support for a one please document that the
format id is deprecated. never remove or re-use a format id.
*/
public interface storedformatids
/** byte length of a two byt format id. */
int  two_byte_format_id_byte_length   2
/** minimum value for a two byte format id. */
int  min_two_byte_format_id   0    16384
/** maximum value for a two byte format id. */
int  max_two_byte_format_id   0x7fff    32767
int min_id_2   min_two_byte_format_id
// temp djd
int min_id_4   min_id_2   403
/******************************************************************
**
**      how to add an id for another formatable class
**
**      o       in the list of constants below, identify the module that
**              defines your class.
**
**      o       add your class to the list to the end of that module
**              use a number that is one greater than all existing formats
**              in that module, see max_id_2 or max_id_4 at the end of the
**              file, these are the largest existing formatid.
**
**      o       update max_id_2 and max_id_4
**
**
**      o       make sure that the getformatid() method for your class
**              returns the constant that you just made up.
**
**      o       now find your module startup code that registers format
**              ids. add your class to that list.
**
**      o   add a test for your new format id to t_storedformat.java
**
******************************************************************/
/******************************************************************
**
**      formats for the storedformatmodule
**
**
**
******************************************************************/
/** special format id for any null referance */
static public final int null_format_id
min_id_2   0
/** special format id for tagging utf8 strings */
static public final int string_format_id
min_id_2   1
/** special format id for tagging serializable objects. */
static public final int serializable_format_id
min_id_2   2
/******************************************************************
**
**      datadictionary formats
**
**
**
******************************************************************/
/**
class org.apache.derby.iapi.types.booleantypeid
*/
static public final int boolean_type_id
min_id_2   4
/**
class org.apache.derby.iapi.types.booleantypeid
*/
static public final int boolean_compilation_type_id
min_id_2   260
/**
class org.apache.derby.iapi.types.chartypeid
*/
static public final int char_type_id
min_id_2   5
/**
class org.apache.derby.iapi.types.chartypeid
*/
static public final int char_compilation_type_id
min_id_2   244
/**
class org.apache.derby.iapi.types.doubletypeid
*/
static public final int double_type_id
min_id_2   6
/**
class org.apache.derby.iapi.types.doubletypeid
*/
static public final int double_compilation_type_id
min_id_2   245
/**
class org.apache.derby.iapi.types.inttypeid
*/
static public final int int_type_id
min_id_2   7
/**
class org.apache.derby.iapi.types.inttypeid
*/
static public final int int_compilation_type_id
min_id_2   246
/**
class org.apache.derby.iapi.types.realtypeid
*/
static public final int real_type_id
min_id_2   8
/**
class org.apache.derby.iapi.types.realtypeid
*/
static public final int real_compilation_type_id
min_id_2   247
/**
class org.apache.derby.iapi.types.reftypeid
*/
static public final int ref_type_id
min_id_2   9
/**
class org.apache.derby.iapi.types.reftypeid
*/
static public final int ref_compilation_type_id
min_id_2   248
/**
class org.apache.derby.iapi.types.smallinttypeid
*/
static public final int smallint_type_id
min_id_2   10
/**
class org.apache.derby.iapi.types.smallinttypeid
*/
static public final int smallint_compilation_type_id
min_id_2   249
/**
class org.apache.derby.iapi.types.longinttypeid
*/
static public final int longint_type_id
min_id_2   11
/**
class org.apache.derby.iapi.types.longinttypeid
*/
static public final int longint_compilation_type_id
min_id_2   250
/**
class org.apache.derby.iapi.types.userdefinedtypeid
*/
//static public final int userdefined_type_id =
//      (min_id_2 + 12);
/**
class org.apache.derby.iapi.types.userdefinedtypeidv2
*/
//static public final int userdefined_type_id_v2 =
//      (min_id_2 + 267);
/**
class org.apache.derby.iapi.types.userdefinedtypeidv3
*/
static public final int userdefined_type_id_v3
min_id_2   267
/**
class org.apache.derby.iapi.types.userdefinedtypeid
*/
static public final int userdefined_compilation_type_id
min_id_2   251
/**
class org.apache.derby.iapi.types.userdefinedtypeidv2
*/
static public final int userdefined_compilation_type_id_v2
min_id_2   265
/**
class org.apache.derby.iapi.types.varchartypeid
*/
static public final int varchar_type_id
min_id_2   13
/**
class org.apache.derby.iapi.types.varchartypeid
*/
static public final int varchar_compilation_type_id
min_id_2   252
/**
class org.apache.derby.catalog.types.typedescriptorimpl
*/
static public final int data_type_impl_descriptor_v01_id
min_id_2   14
/**
class com.ibm.db2j.protcol.datatypes.execution.datatypedescriptor
*/
static public final int data_type_services_impl_v01_id
min_id_2   259
/**
class org.apache.derby.impl.sql.catalog.conglomeratedescriptorfinder
*/
static public final int conglomerate_descriptor_finder_v01_id
min_id_2   135
/**
class org.apache.derby.impl.sql.catalog.constraintdescriptorfinder
*/
static public final int constraint_descriptor_finder_v01_id
min_id_2   208
/**
class org.apache.derby.impl.sql.catalog.defaultdescriptorfinder
*/
static public final int default_descriptor_finder_v01_id
min_id_2   325
/**
class org.apache.derby.impl.sql.catalog.aliasdescriptorfinder
*/
static public final int alias_descriptor_finder_v01_id
min_id_2   136
/**
class org.apache.derby.impl.sql.catalog.tabledescriptorfinder
*/
static public final int table_descriptor_finder_v01_id
min_id_2   137
/**
class org.apache.derby.impl.sql.catalog.coreddfinderclassinfo
*/
static public final int routine_permission_finder_v01_id
min_id_2   461
/**
class org.apache.derby.impl.sql.catalog.coreddfinderclassinfo
*/
static public final int table_permission_finder_v01_id
min_id_2   462
/**
class org.apache.derby.impl.sql.catalog.coreddfinderclassinfo
*/
static public final int columns_permission_finder_v01_id
min_id_2   463
/**
class org.apache.derby.impl.sql.catalog.datadictionarydescriptorfinder
*/
static public final int data_dictionary_descriptor_finder_v01_id
min_id_2   138
/**
class org.apache.derby.impl.sql.catalog.viewdescriptorfinder
*/
static public final int view_descriptor_finder_v01_id
min_id_2   145
/**
class org.apache.derby.impl.sql.catalog.spsdescriptorfinder
*/
static public final int sps_descriptor_finder_v01_id
min_id_2   226
/**
class org.apache.derby.impl.sql.catalog.fileinfofinder
*/
static public final int file_info_finder_v01_id
min_id_2   273
/**
class org.apache.derby.impl.sql.catalog.triggerdescriptorfinder
*/
static public final int trigger_descriptor_finder_v01_id
min_id_2   320
/**
class org.apache.derby.impl.sql.catalog.triggerdescriptorfinder
*/
static public final int trigger_descriptor_v01_id
min_id_2   316
/**
class org.apache.derby.impl.sql.catalog.dd_socratesversion
*/
static public final int dd_socrates_version_id
min_id_2   174
/**
class org.apache.derby.catalog.types.referencedcolumnsdescriptorimpl
*/
static public final int referenced_columns_descriptor_impl_v01_id
min_id_2   205
/**
class org.apache.derby.impl.sql.catalog.dd_platoversion
*/
static public final int dd_plato_version_id
min_id_2   206
/**
class org.apache.derby.impl.sql.catalog.dd_aristotleversion
*/
static public final int dd_aristotle_version_id
min_id_2   272
/**
class org.apache.derby.impl.sql.catalog.dd_xenaversion
*/
static public final int dd_xena_version_id
min_id_2   302
/**
class org.apache.derby.impl.sql.catalog.dd_buffyversion
*/
static public final int dd_buffy_version_id
min_id_2   373
/**
class org.apache.derby.impl.sql.catalog.dd_mulanversion
*/
static public final int dd_mulan_version_id
min_id_2   376
/**
class org.apache.derby.impl.sql.catalog.dd_ivanovaversion
*/
static public final int dd_ivanova_version_id
min_id_2   396
/**
class org.apache.derby.impl.sql.catalog.dd_db2j72
now mapped to a single class dd_version.
5.0 databases will have this as the format identifier for their
catalog version number.
*/
static public final int dd_db2j72_version_id
min_id_2   401
/**
class org.apache.derby.impl.sql.catalog.dd_version
now mapped to a single class dd_version.
5.1 and later databases will have this as the format identifier for their
catalog version number.
*/
static public final int dd_arwen_version_id
min_id_2   402
/**
class org.apache.derby.iapi.types.longvarchartypeid
*/
static public final int longvarchar_type_id
min_id_2   230
/**
class org.apache.derby.iapi.types.longvarchartypeid
*/
static public final int longvarchar_compilation_type_id
min_id_2   256
/**
class org.apache.derby.iapi.types.longvarchartypeid
*/
static public final int clob_type_id
min_id_2   444
/**
class org.apache.derby.iapi.types.longvarchartypeid
*/
static public final int clob_compilation_type_id
min_id_2   445
/**
class org.apache.derby.iapi.types.longvarbittypeid
- xxxx does not exist!!!
*/
static public final int longvarbit_type_id
min_id_2   232
/**
class org.apache.derby.iapi.types.longvarbittypeid
- xxxx does not exist!!!
*/
static public final int longvarbit_compilation_type_id
min_id_2   255
/**
class org.apache.derby.iapi.types.longvarbittypeid
- xxxx does not exist!!!
but for blob we do the same as for longvarbit, only need different ids
*/
static public final int blob_type_id
min_id_2   440
/**
class org.apache.derby.iapi.types.longvarbittypeid
- xxxx does not exist!!!
but for blob we do the same as for longvarbit, only need different ids
*/
static public final int blob_compilation_type_id
min_id_2   441
/**
instance of typeid for xml data types.
*/
static public final int xml_type_id
min_id_2   456
/**
class org.apache.derby.iapi.types.sqlxmlutil
*/
static public final int sql_xml_util_v01_id
min_id_2   464
/**
class org.apache.derby.iapi.types.jsqltype
*/
static public final int jsqltypeimpl_id
min_id_2   307
/**
class org.apache.derby.impl.sql.catalog.rowlistimpl
*/
static public final int row_list_v01_id
min_id_2   239
/**
class org.apache.derby.impl.sql.catalog.listofrowlistsimpl
*/
static public final int unused_240
min_id_2   240
/**
class org.apache.derby.impl.sql.catalog.indexrowgeneratorimpl
*/
static public final int index_row_generator_v01_id
min_id_2   268
/**
class org.apache.derby.iapi.services.io.formatablebitset
*/
static public final int bitimpl_v01_id
min_id_2   269
/**
class org.apache.derby.iapi.services.io.formatablearrayholder
*/
static public final int formatable_array_holder_v01_id
min_id_2   270
/**
class org.apache.derby.iapi.services.io.formatableproperties
*/
static public final int formatable_properties_v01_id
min_id_2   271
/**
class org.apache.derby.iapi.services.io.formatableintholder
*/
static public final int formatable_int_holder_v01_id
min_id_2   303
/**
class org.apache.derby.iapi.services.io.formatablelongholder
*/
static public final int formatable_long_holder_v01_id
min_id_2   329
/**
class org.apache.derby.iapi.services.io.formatablehashtable
*/
static public final int formatable_hashtable_v01_id
min_id_2   313
/**
class org.apache.derby.iapi.types.nationalchartypeid
*/
static public final int national_char_type_id
min_id_2   370
/**
class org.apache.derby.iapi.types.nationallongvarchartypeid
*/
static public final int national_longvarchar_type_id
min_id_2   362
/**
class org.apache.derby.iapi.types.nationallongvarchartypeid
*/
static public final int nclob_type_id
min_id_2   448
/**
class org.apache.derby.iapi.types.nationalvarchartypeid
*/
static public final int national_varchar_type_id
min_id_2   369
/**
class org.apache.derby.impl.sql.catalog.schemadescriptorfinder
*/
static public final int schema_descriptor_finder_v01_id
min_id_2   371
/**
class org.apache.derby.impl.sql.catalog.columndescriptorfinder
*/
static public final int column_descriptor_finder_v01_id
min_id_2   393
/******************************************************************
**
**      dependencysystem formats
**
**
**
******************************************************************/
/**
unused 243
*/
static public final int unused_243
min_id_2   243
/**
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||
||            deprecated
||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
class org.apache.derby.impl.sql.catalog.oidimpl
*/
static public final int oidimpl_v01_id
min_id_2   15
/**
class org.apache.derby.catalog.types.booleantypeidimpl
*/
static public final int boolean_type_id_impl
min_id_2   16
/**
class org.apache.derby.catalog.types.chartypeidimpl
*/
static public final int char_type_id_impl
min_id_2   17
/**
class org.apache.derby.catalog.types.doubletypeidimpl
*/
static public final int double_type_id_impl
min_id_2   18
/**
class org.apache.derby.catalog.types.inttypeidimpl
*/
static public final int int_type_id_impl
min_id_2   19
/**
class org.apache.derby.catalog.types.realtypeidimpl
*/
static public final int real_type_id_impl
min_id_2   20
/**
class org.apache.derby.catalog.types.reftypeidimpl
*/
static public final int ref_type_id_impl
min_id_2   21
/**
class org.apache.derby.catalog.types.smallinttypeidimpl
*/
static public final int smallint_type_id_impl
min_id_2   22
/**
class org.apache.derby.catalog.types.longinttypeidimpl
*/
static public final int longint_type_id_impl
min_id_2   23
/**
class org.apache.derby.catalog.types.userdefinedtypeidimpl
*/
//static public final int userdefined_type_id_impl =
//      (min_id_2 + 24);
/**
class org.apache.derby.catalog.types.userdefinedtypeidimpl
*/
//static public final int userdefined_type_id_impl_v2 =
//      (min_id_2 + 264);
/**
class org.apache.derby.catalog.types.userdefinedtypeidimpl
*/
static public final int userdefined_type_id_impl_v3
min_id_2   264
/**
class org.apache.derby.catalog.types.typesimplinstancegetter
*/
static public final int date_type_id_impl
min_id_2   32
/**
class org.apache.derby.catalog.types.typesimplinstancegetter
*/
static public final int time_type_id_impl
min_id_2   33
/**
class org.apache.derby.catalog.types.typesimplinstancegetter
*/
static public final int timestamp_type_id_impl
min_id_2   34
/**
class org.apache.derby.database.language.execution.minaggregator
*/
static public final int agg_min_v01_id
min_id_2   153
/**
class org.apache.derby.database.language.execution.countstaraggregator
*/
static public final int agg_count_star_v01_id
min_id_2   150
/**
class org.apache.derby.catalog.types.varchartypeidimpl
*/
static public final int varchar_type_id_impl
min_id_2   25
/**
class org.apache.derby.impl.sql.catalog.parameterdescriptorimpl
*/
static public final int parameter_descriptor_v01_id
min_id_2   26
/**
class org.apache.derby.iapi.types.bittypeid
*/
static public final int bit_type_id
min_id_2   27
/**
class org.apache.derby.catalog.types.bittypeidimpl
*/
static public final int bit_type_id_impl
min_id_2   28
/**
class org.apache.derby.iapi.types.varbittypeid
*/
static public final int varbit_type_id
min_id_2   29
/**
class org.apache.derby.iapi.types.varbittypeid
*/
static public final int varbit_compilation_type_id
min_id_2   258
/**
class org.apache.derby.catalog.types.varbittypeidimpl
*/
static public final int varbit_type_id_impl
min_id_2   30
/**
class org.apache.derby.catalog.types.indexdescriptorimpl
*/
static public final int index_descriptor_impl_v02_id
min_id_2   387
/**
class org.apache.derby.iapi.types.tinyinttypeid
*/
static public final int tinyint_type_id
min_id_2   195
/**
class org.apache.derby.catalog.types.tinyinttypeidimpl
*/
static public final int tinyint_type_id_impl
min_id_2   196
/**
class org.apache.derby.iapi.types.decimaltypeid
*/
static public final int decimal_type_id
min_id_2   197
/**
class org.apache.derby.iapi.types.datetypeid
*/
static public final int date_type_id
min_id_2   40
/**
class org.apache.derby.iapi.types.timetypeid
*/
static public final int time_type_id
min_id_2   35
/**
class org.apache.derby.iapi.types.timestamptypeid
*/
static public final int timestamp_type_id
min_id_2   36
/**
class org.apache.derby.catalog.types.decimaltypeidimpl
*/
static public final int decimal_type_id_impl
min_id_2   198
/**
class org.apache.derby.catalog.types.longvarchartypeidimpl
*/
static public final int longvarchar_type_id_impl
min_id_2   231
/**
class org.apache.derby.catalog.types.longvarchartypeidimpl
*/
static public final int clob_type_id_impl
min_id_2   446
/**
class org.apache.derby.catalog.types.longvarbittypeidimpl
- does nto exist
*/
static public final int longvarbit_type_id_impl
min_id_2   233
/**
class org.apache.derby.catalog.types.longvarbittypeidimpl
- does not exist, but we do it the same way for blob as for longvarbit...
*/
static public final int blob_type_id_impl
min_id_2   442
/**
class org.apache.derby.iapi.types.bittypeid
*/
static public final int bit_compilation_type_id
min_id_2   253
/**
class org.apache.derby.iapi.types.decimaltypeid
*/
static public final int decimal_compilation_type_id
min_id_2   254
/**
class org.apache.derby.iapi.types.tinyinttypeid
*/
static public final int tinyint_compilation_type_id
min_id_2   257
/**
class org.apache.derby.catalog.types.nationalchartypeidimpl
*/
static public final int national_char_type_id_impl
min_id_2   366
/**
class org.apache.derby.catalog.types.nationalvarchartypeidimpl
*/
static public final int national_varchar_type_id_impl
min_id_2   367
/**
class org.apache.derby.catalog.types.nationallongvarchartypeidimpl
*/
static public final int national_longvarchar_type_id_impl
min_id_2   368
/**
class org.apache.derby.catalog.types.nationallongvarchartypeidimpl
*/
static public final int nclob_type_id_impl
min_id_2   449
/**
class org.apache.derby.iapi.types.xml (implementation of
org.apache.derby.iapi.types.xmldatavalue).
*/
static public final int xml_type_id_impl
min_id_2   457
/******************************************************************
**
**      execution module classes
**
******************************************************************/
/**
class org.apache.derby.database.language.execution.renameconstantaction
*/
static public final int rename_constant_action_v01_id
min_id_2   390
/**
class org.apache.derby.database.language.execution.deleteconstantaction
*/
static public final int delete_constant_action_v01_id
min_id_2   37
/**
class org.apache.derby.database.language.execution.insertconstantaction
*/
static public final int insert_constant_action_v01_id
min_id_2   38
/**
class org.apache.derby.database.language.execution.updateconstantaction
*/
static public final int updatable_vti_constant_action_v01_id
min_id_2   375
/**
class org.apache.derby.database.language.execution.updateconstantaction
*/
static public final int update_constant_action_v01_id
min_id_2   39
/**
*/
static public final int unused_2_204
min_id_2   204
/**
unused
*/
static public final int unused_2_41
min_id_2   41
/**
class org.apache.derby.database.language.execution.dropaliasconstantaction
*/
static public final int unused_2_42
min_id_2   42
/**
class org.apache.derby.database.language.execution.createschemaconstantaction
*/
static public final int unused_2_141
min_id_2   141
/**
*/
static public final int unused_2_142
min_id_2   142
/**
class org.apache.derby.database.language.execution.createviewconstantaction
*/
static public final int unused_2_143
min_id_2   143
/**
*/
static public final int unused_2_144
min_id_2   144
/**
class org.apache.derby.database.language.execution.providerinfo
*/
static public final int provider_info_v01_id
min_id_2   148
/**
class org.apache.derby.database.language.execution.avgaggregator
*/
static public final int agg_avg_v01_id
min_id_2   149
/**
class org.apache.derby.database.language.execution.countaggregator
*/
static public final int agg_count_v01_id
min_id_2   151
/**
class org.apache.derby.database.language.execution.maxminaggregator
*/
static public final int agg_max_min_v01_id
min_id_2   152
/**
class org.apache.derby.database.language.execution.sumaggregator
*/
static public final int agg_sum_v01_id
min_id_2   154
/**
class org.apache.derby.database.language.execution.useraggregatoraggregator
*/
static public final int agg_user_adaptor_v01_id
min_id_2   323
/**
class org.apache.derby.database.language.execution.statisticsconstantaction
*/
static public final int statistics_constant_action_v01_id
min_id_2   155
/**
class org.apache.derby.impl.sql.execute.runtimestatisticsimpl
*/
static public final int run_time_statistics_impl_v01_id
min_id_2   173
/**
class org.apache.derby.database.language.execution.locktableconstantaction
*/
static public final int unused_2_275
min_id_2   275
/**
class org.apache.derby.impl.sql.execute.realprojectrestrictstatistics
*/
static public final int real_project_restrict_statistics_impl_v01_id
min_id_2   177
/**
class org.apache.derby.impl.sql.execute.realdistinctscalaraggregatestatistics
*/
static public final int real_distinct_scalar_aggregate_statistics_impl_v01_id
min_id_2   284
/**
class org.apache.derby.impl.sql.execute.realscalaraggregatestatistics
*/
static public final int real_scalar_aggregate_statistics_impl_v01_id
min_id_2   283
/**
class org.apache.derby.impl.sql.execute.realgroupedaggregatestatistics
*/
static public final int real_grouped_aggregate_statistics_impl_v01_id
min_id_2   285
/**
class org.apache.derby.impl.sql.execute.realsortstatistics
*/
static public final int real_sort_statistics_impl_v01_id
min_id_2   178
/**
class org.apache.derby.impl.sql.execute.realtablescanstatistics
*/
static public final int real_table_scan_statistics_impl_v01_id
min_id_2   179
/**
class org.apache.derby.impl.sql.execute.realhashjoinstatistics
*/
static public final int real_hash_join_statistics_impl_v01_id
min_id_2   304
/**
class org.apache.derby.impl.sql.execute.realnestedloopjoinstatistics
*/
static public final int real_nested_loop_join_statistics_impl_v01_id
min_id_2   180
/**
class org.apache.derby.impl.sql.execute.realindexrowtobaserowstatistics
*/
static public final int real_index_row_to_base_row_statistics_impl_v01_id
min_id_2   181
/**
class org.apache.derby.impl.sql.execute.realanyresultsetstatistics
*/
static public final int real_any_result_set_statistics_impl_v01_id
min_id_2   182
/**
class org.apache.derby.impl.sql.execute.realonceresultsetstatistics
*/
static public final int real_once_result_set_statistics_impl_v01_id
min_id_2   183
/**
class org.apache.derby.impl.sql.execute.realcurrentofstatistics
*/
static public final int real_current_of_statistics_impl_v01_id
min_id_2   184
/**
class org.apache.derby.impl.sql.execute.realrowresultsetstatistics
*/
static public final int real_row_result_set_statistics_impl_v01_id
min_id_2   185
/**
class org.apache.derby.impl.sql.execute.realunionresultsetstatistics
*/
static public final int real_union_result_set_statistics_impl_v01_id
min_id_2   186
/**
class org.apache.derby.impl.sql.execute.realhashleftouterjoinstatistics
*/
static public final int real_hash_left_outer_join_statistics_impl_v01_id
min_id_2   305
/**
class org.apache.derby.impl.sql.execute.realnestedloopleftouterjoinstatistics
*/
static public final int real_nested_loop_left_outer_join_statistics_impl_v01_id
min_id_2   187
/**
class org.apache.derby.impl.sql.execute.realnormalizeresultsetstatistics
*/
static public final int real_normalize_result_set_statistics_impl_v01_id
min_id_2   188
/**
class org.apache.derby.impl.sql.execute.realinsertresultsetstatistics
*/
static public final int real_insert_result_set_statistics_impl_v01_id
min_id_2   189
/**
class org.apache.derby.impl.sql.execute.realinsertvtiresultsetstatistics
*/
static public final int real_insert_vti_result_set_statistics_impl_v01_id
min_id_2   379
/**
class org.apache.derby.impl.sql.execute.realupdateresultsetstatistics
*/
static public final int real_update_result_set_statistics_impl_v01_id
min_id_2   190
/**
class org.apache.derby.impl.sql.execute.realdeleteresultsetstatistics
*/
static public final int real_delete_vti_result_set_statistics_impl_v01_id
min_id_2   380
/**
class org.apache.derby.impl.sql.execute.realdeleteresultsetstatistics
*/
static public final int real_delete_result_set_statistics_impl_v01_id
min_id_2   191
/**
org.apache.derby.impl.sql.execute.rts.realdeletecascaderesultsetstatistics"
*/
static public final int real_delete_cascade_result_set_statistics_impl_v01_id
min_id_2   439
/**
class org.apache.derby.impl.sql.execute.realhashscanstatistics
*/
static public final int real_hash_scan_statistics_impl_v01_id
min_id_2   203
/**
class org.apache.derby.impl.sql.execute.realdistinctscanstatistics
*/
static public final int real_distinct_scan_statistics_impl_v01_id
min_id_2   334
/**
class org.apache.derby.impl.sql.execute.realhashtablestatistics
*/
static public final int real_hash_table_statistics_impl_v01_id
min_id_2   306
/**
class org.apache.derby.impl.sql.execute.realvtistatistics
*/
static public final int real_vti_statistics_impl_v01_id
min_id_2   214
/**
class org.apache.derby.impl.sql.execute.realmaterializedresultsetstatistics
*/
static public final int real_materialized_result_set_statistics_impl_v01_id
min_id_2   308
/**
class org.apache.derby.impl.sql.execute.realscrollinsensitiveresultsetstatistics
*/
static public final int real_scroll_insensitive_result_set_statistics_impl_v01_id
min_id_2   330
/**
class org.apache.derby.database.language.execution.createspsconstantaction
*/
static public final int unused_2_221
min_id_2   221
/**
class org.apache.derby.database.language.execution.createspsconstantaction
*/
static public final int unused_2_222
min_id_2   222
/**
class org.apache.derby.database.language.execution.alterspsconstantaction
*/
static public final int alter_sps_constant_action_v01_id
min_id_2   229
/**
class org.apache.derby.database.language.execution.indexcolumnorder
*/
static public final int index_column_order_v01_id
min_id_2   218
/**
class org.apache.derby.database.language.execution.aggregateinfo
*/
static public final int agg_info_v01_id
min_id_2   223
/**
class org.apache.derby.database.language.execution.aggregateinfolist
*/
static public final int agg_info_list_v01_id
min_id_2   224
/**
class org.apache.derby.database.language.execution.deleteconstantaction
this class is abstract so it doesn't need a format id!
*/
static public final int write_cursor_constant_action_v01_id
min_id_2   227
/**
class org.apache.derby.database.language.execution.valuerow
*/
static public final int value_row_v01_id
min_id_2   237
/**
class org.apache.derby.database.language.execution.indexrow
*/
static public final int index_row_v01_id
min_id_2   238
/**
class org.apache.derby.impl.sql.execute.addjarconstantaction;
*/
static public final int add_jar_constant_action_v01_id
min_id_2   211
/**
class org.apache.derby.impl.sql.execute.dropjarconstantaction;
*/
static public final int drop_jar_constant_action_v01_id
min_id_2   212
/**
class org.apache.derby.impl.sql.execute.replacejarconstantaction;
*/
static public final int replace_jar_constant_action_v01_id
min_id_2   213
/**
class org.apache.derby.database.language.execution.constraintinfo
*/
static public final int constraint_info_v01_id
min_id_2   278
/**
*/
static public final int unused_2_280
min_id_2   280
/**
class org.apache.derby.database.language.execution.fkinfo
*/
static public final int fk_info_v01_id
min_id_2   282
/**
*/
static public final int unused_2_289
min_id_2   289
/**
class org.apache.derby.impl.sql.execute.createtriggerconstantaction
*/
static public final int create_trigger_constant_action_v01_id
min_id_2   314
/**
class org.apache.derby.impl.sql.execute.droptriggerconstantaction
*/
static public final int drop_trigger_constant_action_v01_id
min_id_2   315
/**
class org.apache.derby.impl.sql.execute.triggerinfo
*/
static public final int trigger_info_v01_id
min_id_2   317
/**
class org.apache.derby.impl.sql.execute.transactionconstantaction
*/
static public final int transaction_constant_action_v01_id
min_id_2   318
/**
class org.apache.derby.database.language.execution.settriggersconstantaction
*/
static public final int set_triggers_constant_action_v01_id
min_id_2   321
/**
class org.apache.derby.replication.database.language.execution.repsettriggersconstantaction
*/
static public final int rep_set_triggers_constant_action_v01_id
min_id_2   322
/**
class org.apache.derby.impl.sql.execute.reallastindexkeyscanstatistics
*/
static public final int real_last_index_key_scan_statistics_impl_v01_id
min_id_2   327
////////////////////////////////////////////////////////////////////////////
//
// new versions of 2.0 language constantactions, versioned in 3.0
//
////////////////////////////////////////////////////////////////////////////
/** class org.apache.derby.database.language.execution.setschemaconstantaction */
static public final int set_schema_constant_action_v02_id                          min_id_2   353
/** class org.apache.derby.database.language.execution.settransactionisolationconstantaction */
static public final int set_transaction_isolation_constant_action_v02_id    min_id_2   354
/** class org.apache.derby.impl.sql.execute.columninfo */
static public final int column_info_v02_id                         min_id_2   358
/** class org.apache.derby.database.language.dependencysystem.generic.providerinfo */
static public final int provider_info_v02_id                       min_id_2   359
/** class org.apache.derby.impl.sql.execute.savepointconstantaction */
static public final int savepoint_v01_id                         min_id_2   452
/******************************************************************
**
**      languageinterface module classes
**
******************************************************************/
/**
class org.apache.derby.impl.sql.genericstorablepreparedstatement
*/
static public final int storable_prepared_statement_v01_id
min_id_2   225
/**
class org.apache.derby.impl.sql.genericresultdescription
*/
static public final int generic_result_description_v01_id
min_id_2   228
/**
unused
*/
static public final int unused_2_215       min_id_2   215
/**
class org.apache.derby.impl.sql.generictypedescriptor
*/
static public final int generic_type_descriptor_v01_id
min_id_2   216
/**
class org.apache.derby.impl.sql.generictypeid
*/
static public final int generic_type_id_v01_id
min_id_2   217
/**
class org.apache.derby.impl.sql.cursortablereference
*/
static public final int cursor_table_reference_v01_id
min_id_2   296
/**
class org.apache.derby.impl.sql.cursorinfo
*/
static public final int cursor_info_v01_id
min_id_2   297
/******************************************************************
**
**      alias info classes
**
******************************************************************/
/**
class org.apache.derby.catalog.types.classaliasinfo
*/
static public final int class_alias_info_v01_id
min_id_2   310
/**
class org.apache.derby.catalog.types.methodaliasinfo
*/
static public final int method_alias_info_v01_id
min_id_2   312
/**
class org.apache.derby.catalog.types.workunitaliasinfo
*/
static public final int work_unit_alias_info_v01_id
min_id_2   309
/**
class org.apache.derby.catalog.types.useraggregatealiasinfo
*/
static public final int user_aggregate_alias_info_v01_id
min_id_2   311
public static final int routine_info_v01_id    min_id_2   451
public static final int synonym_info_v01_id    min_id_2   455
/******************************************************************
**
**	default info classes
**
******************************************************************/
/**
class org.apache.derby.catalog.types.defaultinfoimpl
*/
static public final int default_info_impl_v01_id
min_id_2   326
/**
class org.apache.derby.impl.sql.genericcolumndescriptor
*/
static public final int generic_column_descriptor_v02_id
min_id_2   383
/**
unused (min_id_2 + 384)
*/
/**
unused (min_id_2 + 382)
*/
/******************************************************************
**
**  type system id's
**
******************************************************************/
public static final int sql_boolean_id
min_id_2   77
public static final int sql_char_id
min_id_2   78
public static final int sql_double_id
min_id_2   79
public static final int sql_integer_id
min_id_2   80
public static final int sql_real_id
min_id_2   81
public static final int sql_ref_id
min_id_2   82
public static final int sql_smallint_id
min_id_2   83
public static final int sql_longint_id
min_id_2   84
public static final int sql_varchar_id
min_id_2   85
//public static final int sql_usertype_id =
//      (min_id_2 + 86);
//public static final int sql_usertype_id_v2 =
//      (min_id_2 + 266);
public static final int sql_usertype_id_v3
min_id_2   266
public static final int sql_date_id
min_id_2   298
public static final int sql_time_id
min_id_2   299
public static final int sql_timestamp_id
min_id_2   31
public static final int sql_bit_id
min_id_2   87
public static final int sql_varbit_id
min_id_2   88
public static final int sql_tinyint_id
min_id_2   199
public static final int sql_decimal_id
min_id_2   200
public static final int sql_longvarchar_id
min_id_2   235
public static final int sql_clob_id
min_id_2   447
public static final int sql_longvarbit_id
min_id_2   234
public static final int sql_blob_id
min_id_2   443
public static final int sql_national_char_id
min_id_2   363
public static final int sql_national_varchar_id
min_id_2   364
public static final int sql_national_longvarchar_id
min_id_2   365
public static final int sql_nclob_id
min_id_2   450
// interface: org.apache.derby.iapi.types.xmldatavalue
public static final int xml_id
min_id_2   458
/******************************************************************
**
** access ids.
**
**
**
******************************************************************/
public static final int access_u8_v1_id
min_id_2   89
public static final int access_heap_row_location_v1_id
min_id_2   90
public static final int access_heap_v2_id
min_id_2   91
public static final int access_b2i_v2_id
min_id_2   92
public static final int access_format_id
min_id_2   93
public static final int access_t_stringcolumn_id
min_id_2   94
public static final int access_b2iundo_v1_id
min_id_2   95
// deleted as part of 7.2 rebrand project.
/*
public static final int access_conglomdir_v1_id =
(min_id_2 + 96);
*/
public static final int access_btree_leafcontrolrow_v1_id
min_id_2   133
public static final int access_btree_branchcontrolrow_v1_id
min_id_2   134
public static final int access_serializablewrapper_v1_id
min_id_2   202
public static final int access_b2i_static_compiled_v1_id
min_id_2   360
public static final int access_tree_v1_id
min_id_2   386
public static final int access_b2i_v3_id
min_id_2   388
public static final int access_gistundo_v1_id
min_id_2   389
public static final int access_gist_leafcontrolrow_v1_id
min_id_2   394
public static final int access_gist_branchcontrolrow_v1_id
min_id_2   395
public static final int statistics_impl_v01_id
min_id_2   397
public static final int update_statistics_constant_action_id
min_id_2       398
public static final int drop_statistics_constant_action_id
min_id_2   399
public static final int access_gist_rtree_v1_id
min_id_2   400
public static final int access_t_rectangle_id
min_id_4   34
public static final int access_t_intcol_v1_id                 min_id_4   4
/******************************************************************
**
** propertyconglomerate
**
**
**
******************************************************************/
/** class org.apache.derby.impl.store.access.propertyconglomerate */
static public final int pc_xena_version_id
min_id_2   15
/******************************************************************
**
** raw store log operation ids
**
**
**
******************************************************************/
/* org.apache.derby.impl.store.raw.data.chainallocpageoperation */
public static final int logop_chain_alloc_page
min_id_2   97
/* org.apache.derby.impl.store.raw.xact.beginxact */
public static final int logop_begin_xact
min_id_2   169
/* org.apache.derby.impl.store.raw.log.checkpointoperation */
public static final int logop_checkpoint
min_id_2   263
/* org.apache.derby.impl.store.raw.data.containeroperation */
/* creating, dropping, removing container */
public static final int logop_container
min_id_2   242
/* org.apache.derby.impl.store.raw.data.deleteoperation */
public static final int logop_delete
min_id_2   101
/* org.apache.derby.impl.store.raw.xact.endxact */
public static final int logop_end_xact
min_id_2   102
/* org.apache.derby.impl.store.raw.data.insertoperation */
public static final int logop_insert
min_id_2   103
/* org.apache.derby.impl.store.raw.data.logicalundooperation */
public static final int logop_page_logical_undo
min_id_2   104
/* org.apache.derby.impl.store.raw.data.physicalundooperation */
public static final int logop_page_physical_undo
min_id_2   105
/* org.apache.derby.impl.store.raw.data.purgeoperation */
public static final int logop_purge
min_id_2   106
/* org.apache.derby.impl.store.raw.data.containerundooperation */
public static final int logop_container_undo
min_id_2   107
/* org.apache.derby.impl.store.raw.data.updateoperation */
public static final int logop_update
min_id_2   108
/* org.apache.derby.impl.store.raw.data.updatefieldoperation */
public static final int logop_update_field
min_id_2   109
/* org.apache.derby.impl.store.raw.data.copyrowsoperation */
public static final int logop_copy_rows
min_id_2   210
/* org.apache.derby.impl.store.raw.data.allocpageoperation */
public static final int logop_alloc_page
min_id_2   111
/*org.apache.derby.impl.store.raw.data.initpageoperation */
public static final int logop_init_page
min_id_2   241
/* org.apache.derby.impl.store.raw.data.invalidatepageoperation */
public static final int logop_invalidate_page
min_id_2   113
/* org.apache.derby.impl.store.raw.data.setreservedspaceoperation */
public static final int logop_set_reserved_space
min_id_2   287
/* org.apache.derby.impl.store.raw.data.removefileoperation */
public static final int logop_remove_file
min_id_2   291
/* org.apache.derby.impl.store.raw.log.checksumoperation */
public static final int logop_checksum
min_id_2   453
/* org.apache.derby.impl.store.raw.data.compressspacepageoperation */
public static final int logop_compress_space
min_id_2   454
/* org.apache.derby.impl.store.raw.data.encryptcontaineroperation */
public static final int logop_encrypt_container
min_id_2   459
/* org.apache.derby.impl.store.raw.data.encryptcontainerundooperation */
public static final int logop_encrypt_container_undo
min_id_2   460
/*******************************************************************
**
** container types
**
******************************************************************/
/* org.apache.derby.impl.store.raw.data.filecontainer */
public static final int raw_store_single_container_file
min_id_2   116
/* org.apache.derby.impl.store.raw.data.streamfilecontainer */
public static final int raw_store_single_container_stream_file
min_id_2   290
/*******************************************************************
**
** page types
**
**
******************************************************************/
/* org.apache.derby.impl.store.raw.data.storedpage */
public static final int raw_store_stored_page
min_id_2   117
/* org.apache.derby.impl.store.raw.data.allocpage */
public static final int raw_store_alloc_page
min_id_2   118
/*****************************************************************
**
** log files
**
**
******************************************************************/
/* org.apache.derby.impl.store.raw.log.logtofile */
public static final int file_stream_log_file
min_id_2   128
/*****************************************************************
**
** log record
**
******************************************************************/
/* org.apache.derby.impl.store.raw.log.logrecord */
public static final int log_record
min_id_2   129
/* org.apache.derby.impl.store.raw.log.logcounter */
public static final int log_counter
min_id_2   130
/******************************************************************
**
**  identifiers
**
******************************************************************/
/* org.apache.derby.impl.services.uuid.basicuuid */
public static final int basic_uuid
min_id_2   131
/*
*      transaction ids
*/
/* org.apache.derby.impl.store.raw.xact.globalxactid */
public static final int raw_store_global_xact_id_v20
min_id_2   132
/* org.apache.derby.impl.store.raw.xact.xactid */
public static final int raw_store_xact_id
min_id_2   147
/* org.apache.derby.impl.store.raw.xact.xaxactid */
public static final int raw_store_global_xact_id_new
min_id_2   328
/*
* transaction table
*/
/* org.apache.derby.impl.store.raw.xact.transactiontableentry */
public static final int raw_store_transaction_table_entry
min_id_2   261
/* org.apache.derby.impl.store.raw.xact.transactiontable */
public static final int raw_store_transaction_table
min_id_2   262
/******************************************************************
**
**  localdriver formatables.
**
******************************************************************/
/* not used = org.apache.derby.impl.jdbc.externalizableconnection */
public static final int externalizable_connection_id    min_id_2   192
/******************************************************************
**
**      internalutils module classes
**
******************************************************************/
/* org.apache.derby.iapi.util.bytearray */
public static final int formatable_byte_array_v01_id    min_id_2   219
/******************************************************************
**
**  udpate max_id_2 when you add a new formatable
**
******************************************************************/
/*
* make sure this is updated when a new module is added
*/
public static final int max_id_2
min_id_2   464
// do not use 4 byte ids anymore
static public final int max_id_4
min_id_4   34