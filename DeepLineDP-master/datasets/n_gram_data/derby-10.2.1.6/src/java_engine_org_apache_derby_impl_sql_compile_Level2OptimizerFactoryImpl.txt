/*
derby - class org.apache.derby.impl.sql.compile.level2optimizerfactoryimpl
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql compile
import org apache derby iapi sql compile costestimate
import org apache derby iapi sql compile joinstrategy
import org apache derby iapi sql compile optimizablelist
import org apache derby iapi sql compile optimizablepredicatelist
import org apache derby iapi sql compile optimizer
import org apache derby iapi sql compile optimizerfactory
import org apache derby iapi sql compile requiredrowordering
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi store access transactioncontroller
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi services monitor modulecontrol
import org apache derby iapi services context contextmanager
import org apache derby iapi services property propertyutil
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi error standardexception
import org apache derby iapi reference property
import org apache derby impl sql compile optimizerfactoryimpl
import java util properties
/**
this is simply the factory for creating an optimizer.
*/
public class level2optimizerfactoryimpl
extends optimizerfactoryimpl
//
// modulecontrol interface
//
public void boot boolean create  properties startparams
throws standardexception
super boot create  startparams
//
// optimizerfactory interface
//
/**
* @see optimizerfactory#supportsoptimizertrace
*/
public boolean supportsoptimizertrace
return true
//
// class interface
//
public level2optimizerfactoryimpl
protected optimizer getoptimizerimpl
optimizablelist optimizablelist
optimizablepredicatelist predlist
datadictionary ddictionary
requiredrowordering requiredrowordering
int numtablesinquery
languageconnectioncontext lcc
throws standardexception
return new level2optimizerimpl
optimizablelist
predlist
ddictionary
rulebasedoptimization
notimeout
usestatistics
maxmemorypertable
joinstrategyset
lcc getlockescalationthreshold
requiredrowordering
numtablesinquery
lcc
/**
* @see optimizerfactory#getcostestimate
*
* @exception standardexception		thrown on error
*/
public costestimate getcostestimate
throws standardexception
return new level2costestimateimpl