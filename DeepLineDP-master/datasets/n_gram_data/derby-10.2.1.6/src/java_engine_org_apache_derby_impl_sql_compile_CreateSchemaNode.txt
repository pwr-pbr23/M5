/*
derby - class org.apache.derby.impl.sql.compile.createschemanode
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package	org apache derby impl sql compile
import org apache derby iapi services context contextmanager
import org apache derby iapi sql resultset
import org apache derby iapi sql execute constantaction
import org apache derby iapi sql dictionary datadictionarycontext
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary schemadescriptor
import org apache derby iapi sql dictionary datadescriptorgenerator
import org apache derby iapi sql compile compilercontext
import org apache derby iapi sql conn authorizer
import org apache derby iapi error standardexception
import org apache derby iapi services monitor monitor
import org apache derby iapi services sanity sanitymanager
import org apache derby impl sql compile activationclassbuilder
import org apache derby impl sql execute baseactivation
import java util properties
/**
* a createschemanode is the root of a querytree that
* represents a create schema statement.
*
* @author jamie
*/
public class createschemanode extends ddlstatementnode
private string 	name
private string	aid
/**
* initializer for a createschemanode
*
* @param schemaname	the name of the new schema
* @param aid		 	the authorization id
*
* @exception standardexception		thrown on error
*/
public void init
object	schemaname
object	aid
throws standardexception
/*
** ddlstatementnode expects tables, null out
** objectname explicitly to clarify that we
** can't hang with schema.object specifiers.
*/
initandcheck null
this name    string  schemaname
this aid    string  aid
/**
* convert this object to a string.  see comments in querytreenode.java
* for how this should be done for tree printing.
*
* @return	this object as a string
*/
public string tostring
if  sanitymanager debug
return super tostring
name
aid
else
return
/**
* bind this createschemanode. main work is to create a statementpermission
* object to require create_schema_priv at execution time.
*/
public querytreenode bind   throws standardexception
super bind
compilercontext cc   getcompilercontext
if  isprivilegecollectionrequired
cc addrequiredschemapriv name  aid  authorizer create_schema_priv
return this
public string statementtostring
return
// we inherit the generate() method from ddlstatementnode.
/**
* create the constant information that will drive the guts of execution.
*
* @exception standardexception		thrown on failure
*/
public constantaction	makeconstantaction
return	getgenericconstantactionfactory   getcreateschemaconstantaction name  aid