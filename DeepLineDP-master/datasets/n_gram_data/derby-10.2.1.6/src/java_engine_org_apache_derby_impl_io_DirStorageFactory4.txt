/*
derby - class org.apache.derby.impl.io.dirstoragefactory4
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl io
import org apache derby io storagefile
import org apache derby iapi services info jvminfo
import java io ioexception
/**
* this class implements the writablestoragefactory interface using features found in java 1.4 but
* not in earlier versions of java.
*/
public class dirstoragefactory4 extends dirstoragefactory
private static final boolean	rwsok   jvminfo jdk_id >  jvminfo j2se_142
/**
* most of the initialization is done in the init method.
*/
public dirstoragefactory4
super
/**
* construct a persistent storagefile from a path name.
*
* @param path the path name of the file. guaranteed not to be in the temporary file directory. if null
*             then the database directory should be returned.
*
* @return a corresponding storagefile object
*/
storagefile newpersistentfile  string path
if  path    null
return new dirfile4 datadirectory  rwsok
return new dirfile4 datadirectory  path  rwsok
/**
* construct a persistent storagefile from a directory and path name.
*
* @param directoryname the path name of the directory. guaranteed not to be in the temporary file directory.
*                  guaranteed not to be null
* @param filename the name of the file within the directory. guaranteed not to be null.
*
* @return a corresponding storagefile object
*/
storagefile newpersistentfile  string directoryname  string filename
return new dirfile4  separateddatadirectory   directoryname  filename  rwsok
/**
* construct a persistent storagefile from a directory and path name.
*
* @param directoryname the path name of the directory. guaranteed not to be to be null. guaranteed to be
*                  created by a call to one of the newpersistentfile methods.
* @param filename the name of the file within the directory. guaranteed not to be null.
*
* @return a corresponding storagefile object
*/
storagefile newpersistentfile  storagefile directoryname  string filename
return new dirfile4   dirfile  directoryname  filename  rwsok
/**
* this method tests whether the "rws" and "rwd" modes are implemented. if the "rws" method is supported
* then the database engine will conclude that the write methods of "rws" mode storagerandomaccessfiles are
* slow but the sync method is fast and optimize accordingly.
*
* @return <b>true</b> if an stirandomaccess file opened with "rws" or "rwd" modes immediately writes data to the
*         underlying storage, <b>false</b> if not.
*/
public boolean supportsrws
return rwsok