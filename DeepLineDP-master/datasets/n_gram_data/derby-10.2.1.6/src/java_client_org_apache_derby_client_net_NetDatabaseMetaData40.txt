/*
derby - class org.apache.derby.client.net.netdatabasemetadata40
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client net
import java sql resultset
import java sql rowidlifetime
import java sql sqlexception
import org apache derby client am clientmessageid
import org apache derby client am sqlexception
import org apache derby client am sqlexceptionfactory
import org apache derby shared common reference sqlstate
public class netdatabasemetadata40 extends org apache derby client net netdatabasemetadata
public netdatabasemetadata40 netagent netagent  netconnection netconnection
super netagent netconnection
/**
* retrieves the major jdbc version number for this driver.
* @return jdbc version major number
* @exception sqlexception if the connection is closed
*/
public int getjdbcmajorversion   throws sqlexception
checkforclosedconnection
return 4
/**
* retrieves the minor jdbc version number for this driver.
* @return jdbc version minor number
* @exception sqlexception if the connection is closed
*/
public int getjdbcminorversion   throws sqlexception
checkforclosedconnection
return 0
/**
* indicates whether or not this data source supports the sql
* <code>rowid</code> type. since derby does not support the
* <code>rowid</code> type, return <code>rowid_unsupported</code>.
*
* @return <code>rowid_unsupported</code>
* @exception sqlexception if a database access error occurs
*/
public rowidlifetime getrowidlifetime   throws sqlexception
checkforclosedconnection
return rowidlifetime rowid_unsupported
/**
* returns false unless <code>interfaces</code> is implemented
*
* @param  interfaces             a class defining an interface.
* @return true                   if this implements the interface or
*                                directly or indirectly wraps an object
*                                that does.
* @throws java.sql.sqlexception  if an error occurs while determining
*                                whether this is a wrapper for an object
*                                with the given interface.
*/
public boolean iswrapperfor class<?> interfaces  throws sqlexception
return interfaces isinstance this
/**
* returns <code>this</code> if this class implements the interface
*
* @param  interfaces a class defining an interface
* @return an object that implements the interface
* @throws java.sql.sqlexption if no object if found that implements the
* interface
*/
public <t> t unwrap java lang class<t> interfaces
throws sqlexception
try
return interfaces cast this
catch  classcastexception cce
throw new sqlexception null
new clientmessageid sqlstate unable_to_unwrap
interfaces  getsqlexception