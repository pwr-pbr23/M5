/*
derby - class org.apache.derby.impl.jdbc.authentication.noneauthenticationserviceimpl
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl jdbc authentication
import org apache derby iapi reference messageid
import org apache derby iapi error standardexception
import org apache derby iapi services i18n messageservice
import org apache derby iapi jdbc authenticationservice
import org apache derby authentication userauthenticator
import org apache derby iapi services property propertyutil
import java util properties
/**
* this authentication service does not care much about authentication.
* <p>
* it is a quiescient authentication service that will basically satisfy
* any authentication request, as jbms system was not instructed to have any
* particular authentication scheme to be loaded at boot-up time.
*
* @author francois
*/
public final class noneauthenticationserviceimpl
extends authenticationservicebase implements userauthenticator
//
// modulecontrol implementation (overriden)
//
/**
*  check if we should activate this authentication service.
*/
public boolean cansupport properties properties
return  requireauthentication properties
/**
* @see org.apache.derby.iapi.services.monitor.modulecontrol#boot
* @exception standardexception upon failure to load/boot the expected
* authentication service.
*/
public void boot boolean create  properties properties
throws standardexception
// we call the super in case there is anything to get initialized.
super boot create  properties
// nothing special to be done, other than setting other than
// setting ourselves as being ready and loading the proper
// authentication scheme for this service
//.
this setauthenticationservice this
/*
** userauthenticator
*/
/**
* authenticate the passed-in user's credentials.
*
* @param username		the user's name used to connect to jbms system
* @param userpassword	the user's password used to connect to jbms system
* @param databasename	the database which the user wants to connect to.
* @param info			additional jdbc connection info.
*/
public boolean	authenticateuser string username
string userpassword
string databasename
properties info
// since this authentication service does not really provide
// any particular authentication, therefore we satisfy the request.
// and always authenticate successfully the user.
//
return true