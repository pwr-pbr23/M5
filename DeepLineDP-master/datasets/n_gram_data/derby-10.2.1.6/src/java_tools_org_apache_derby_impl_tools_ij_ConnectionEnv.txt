/*
derby - class org.apache.derby.impl.tools.ij.connectionenv
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl tools ij
import java io file
import java io filenotfoundexception
import java util hashtable
import java util enumeration
import java util properties
import java sql connection
import java sql drivermanager
import java sql sqlexception
import org apache derby tools jdbcdisplayutil
import org apache derby iapi tools i18n localizedoutput
/**
to enable multi-user use of ij.main2
@author jerry
*/
class connectionenv
hashtable sessions   new hashtable
private session currsession
private string tag
private boolean only
private static final string connection_property
private string protocol
connectionenv int usernumber  boolean printusernumber  boolean theonly
if  printusernumber
tag      usernumber 1
only   theonly
/**
separate from the constructor so that connection
failure does not prevent object creation.
*/
void init localizedoutput out  throws sqlexception  classnotfoundexception  instantiationexception  illegalaccessexception
connection c   util startjbms null null
// only load up ij.connection.* properties if there is
// only one connectionenv in the system.
if  only
properties p   system getproperties
protocol   p getproperty ij protocol_property
string prefix   connection_property
for  enumeration e   p propertynames    e hasmoreelements
string key    string e nextelement
if  key startswith prefix
string name   key substring prefix length
installconnection name touppercase java util locale english
p getproperty key   out
if  c  null     have a database from the startup?
string sname session default_name sessions size
session s   new session c tag sname
sessions put sname s
currsession   s
void doprompt boolean newstatement  localizedoutput out
if  currsession    null  currsession doprompt newstatement  out  sessions size  >1
else utilmain doprompt newstatement  out  tag
connection getconnection
if  currsession    null  return null
return currsession getconnection
/**
making a new connection, add it to the pool, and make it current.
*/
void addsession connection conn string name
string aname
if  name    null  aname   getuniqueconnectionname
else aname   name
session s   new session conn  tag  aname
sessions put aname  s
currsession   s
//returns a unique connection# name by going through existing sessions
public string getuniqueconnectionname
int newnum   0
boolean newconnectionnameok   false
string newconnectionname
enumeration e
while   newconnectionnameok
newconnectionname   session default_name   newnum
newconnectionnameok   true
e   sessions keys
while  e hasmoreelements      newconnectionnameok
if    string e nextelement    equals newconnectionname
newconnectionnameok   false
newnum   newnum   1
return newconnectionname
session getsession
return currsession
hashtable getsessions
return sessions
session setcurrentsession string name
currsession    session  sessions get name
return currsession
boolean havesession string name
return  name    null      sessions size  >0      null    sessions get name
void removecurrentsession   throws sqlexception
if  currsession   null  return
sessions remove currsession getname
currsession close
currsession   null
void removesession string name  throws sqlexception
session s    session  sessions remove name
s close
if  currsession    s
currsession   null
void removeallsessions   throws sqlexception
if  sessions    null    sessions size      0
return
else
for  enumeration e   sessions keys    e hasmoreelements
string n    string e nextelement
removesession n
private void installconnection string name  string value  localizedoutput out  throws sqlexception
// add protocol if no driver matches url
boolean nodriver   false
try
// if we have a full url, make sure it's loaded first
try
if  value startswith
util loaddriverifknown value
catch  exception e
// want to continue with the attempt
drivermanager getdriver value
catch  sqlexception se
nodriver   true
if  nodriver     protocol    null
value   protocol   value
if  sessions get name     null
throw ijexception alreadyhaveconnectionnamed name
try
string user   util getsystemproperty
string password   util getsystemproperty
properties conninfo    util updateconninfo user  password null
connection theconnection
drivermanager getconnection value  conninfo
addsession theconnection name
catch  throwable t
jdbcdisplayutil showexception out t