/*
derby - class org.apache.derby.catalog.types.userdefinedtypeidimpl
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby catalog types
import org apache derby iapi services io storedformatids
import java sql types
import java io objectoutput
import java io objectinput
import java io ioexception
public class userdefinedtypeidimpl extends basetypeidimpl
/********************************************************
**
**	this class implements formatable. that means that it
**	can write itself to and from a formatted stream. if
**	you add more fields to this class, make sure that you
**	also write/read them with the writeexternal()/readexternal()
**	methods.
**
**	if, inbetween releases, you add more fields to this class,
**	then you should bump the version number emitted by the gettypeformatid()
**	method.
**
********************************************************/
protected string classname
/**
* public niladic constructor. needed for formatable interface to work.
*
*/
public	userdefinedtypeidimpl     super
/**
* constructor for a userdefinedtypeidimpl. the sqltypename of a userdefinedtype
* is assumed to be its classname.
*
* @param classname	the sql name of the type
*/
public userdefinedtypeidimpl string classname
super classname
this classname   classname
jdbctypeid   java sql types java_object
/** return the java class name for this type */
public string	getclassname
return classname
/** does this type id represent a user type? */
public boolean usertype
return true
// formatable interface.
/**
* read this object from a stream of stored objects.
*
* @param in read this.
*
* @exception ioexception					thrown on error
* @exception classnotfoundexception		thrown on error
*/
public void readexternal  objectinput in
throws ioexception  classnotfoundexception
super readexternal  in
classname   in readutf
jdbctypeid   java sql types java_object
/**
* write this object to a stream of stored objects.
*
* @param out write bytes here.
*
* @exception ioexception		thrown on error
*/
public void writeexternal  objectoutput out
throws ioexception
super writeexternal  out
out writeutf  classname
/**
* get the formatid which corresponds to this class.
*
*	@return	the formatid of this class
*/
public	int	gettypeformatid  	  return storedformatids userdefined_type_id_impl_v3
/**
* get the format id for the wrapper type id that corresponds to
* this type id.
*/
public int wrappertypeformatid     return storedformatids userdefined_type_id_v3