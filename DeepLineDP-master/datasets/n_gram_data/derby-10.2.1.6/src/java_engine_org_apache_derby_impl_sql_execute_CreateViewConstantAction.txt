/*
derby - class org.apache.derby.impl.sql.execute.createviewconstantaction
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby iapi sql execute constantaction
import org apache derby iapi sql dictionary datadescriptorgenerator
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary columndescriptor
import org apache derby iapi sql dictionary columndescriptorlist
import org apache derby iapi sql dictionary schemadescriptor
import org apache derby iapi sql dictionary tabledescriptor
import org apache derby iapi sql dictionary viewdescriptor
import org apache derby iapi sql depend dependencymanager
import org apache derby iapi store access transactioncontroller
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql depend provider
import org apache derby iapi sql depend providerinfo
import org apache derby iapi reference sqlstate
import org apache derby iapi sql activation
import org apache derby iapi error standardexception
import org apache derby iapi services sanity sanitymanager
import org apache derby catalog uuid
/**
*	this class  describes actions that are always performed for a
*	create view statement at execution time.
*
*	@author jerry brenner.
*/
class createviewconstantaction extends ddlconstantaction
private final string					tablename
private final string					schemaname
private final string					viewtext
private final int						tabletype
private final int						checkoption
private final columninfo			columninfo
private final providerinfo			providerinfo
private final uuid					compschemaid
// constructors
/**
*	make the constantaction for a create view statement.
*
*  @param schemaname			name for the schema that view lives in.
*  @param tablename	name of table.
*  @param tabletype	type of table (e.g., base).
*	@param viewtext		text of query expression for view definition
*  @param checkoption	check option type
*  @param columninfo	information on all the columns in the table.
*  @param providerinfo information on all the providers
*  @param compschemaid 	compilation schema id
*		 (remind tabledescriptor ignored)
*/
createviewconstantaction
string			schemaname
string			tablename
int				tabletype
string			viewtext
int				checkoption
columninfo	columninfo
providerinfo  providerinfo
uuid			compschemaid
this schemaname   schemaname
this tablename   tablename
this tabletype   tabletype
this viewtext   viewtext
this checkoption   checkoption
this columninfo   columninfo
this providerinfo   providerinfo
this compschemaid   compschemaid
if  sanitymanager debug
sanitymanager assert schemaname    null
// object methods
public	string	tostring
return constructtostring    tablename
// interface methods
/**
*	this is the guts of the execution-time logic for create table.
*
*	@see constantaction#executeconstantaction
*
* @exception standardexception		thrown on failure
*/
public void	executeconstantaction  activation activation
throws standardexception
tabledescriptor 			td
uuid 						toid
schemadescriptor			schemadescriptor
columndescriptor			columndescriptor
viewdescriptor				vd
languageconnectioncontext lcc   activation getlanguageconnectioncontext
datadictionary dd   lcc getdatadictionary
dependencymanager dm   dd getdependencymanager
transactioncontroller tc   lcc gettransactionexecute
/*
** inform the data dictionary that we are about to write to it.
** there are several calls to data dictionary "get" methods here
** that might be done in "read" mode in the data dictionary, but
** it seemed safer to do this whole operation in "write" mode.
**
** we tell the data dictionary we're done writing at the end of
** the transaction.
*/
dd startwriting lcc
schemadescriptor sd   ddlconstantaction getschemadescriptorforcreate dd  activation  schemaname
/* create a new table descriptor.
* (pass in row locking, even though meaningless for views.)
*/
datadescriptorgenerator ddg   dd getdatadescriptorgenerator
td   ddg newtabledescriptor tablename
sd
tabletype
tabledescriptor row_lock_granularity
dd adddescriptor td  sd  datadictionary systables_catalog_num  false  tc
toid   td getuuid
// for each column, stuff system.column
columndescriptor cdlarray   new columndescriptor
int index   1
for  int ix   0  ix < columninfo length  ix
columndescriptor   new columndescriptor
columninfo name
index
columninfo datatype
columninfo defaultvalue
columninfo defaultinfo
td
uuid  null
columninfo autoincstart
columninfo autoincinc
cdlarray   columndescriptor
dd adddescriptorarray cdlarray  td
datadictionary syscolumns_catalog_num  false  tc
// add columns to the column descriptor list.
columndescriptorlist cdl   td getcolumndescriptorlist
for  int i   0  i < cdlarray length  i
cdl add cdlarray
/* get and add a view descriptor */
vd   ddg newviewdescriptor toid  tablename  viewtext
checkoption
compschemaid    null  ?
lcc getdefaultschema   getuuid
compschemaid
for  int ix   0  ix < providerinfo length  ix
/* we should always be able to find the provider */
try
provider provider    provider  providerinfo
getdependablefinder
getdependable
providerinfo getobjectid
if  provider    null     see beetle 4444
throw standardexception newexception sqlstate lang_object_not_found     providerinfo getobjectid
dm adddependency vd  provider  lcc getcontextmanager
catch java sql sqlexception te
// we should allow timeout to be thrown
throw standardexception plainwrapexception te
//store view's dependency on various privileges in the dependeny system
storeviewtriggerdependenciesonprivileges activation  vd
dd adddescriptor vd  sd  datadictionary sysviews_catalog_num  true  tc