/*
derby - class org.apache.derby.impl.sql.execute.rts.realdistinctscanstatistics
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute rts
import org apache derby iapi util propertyutil
import org apache derby iapi services i18n messageservice
import org apache derby iapi reference sqlstate
import java util enumeration
import java util hashtable
import java util properties
/**
resultsetstatistics implemenation for distinctscanresultset.
@author jerry
*/
public class realdistinctscanstatistics
extends realhashscanstatistics
// constructors
/**
*
*
*/
public	realdistinctscanstatistics
int numopens
int rowsseen
int rowsfiltered
long constructortime
long opentime
long nexttime
long closetime
int resultsetnumber
string tablename
string indexname
boolean isconstraint
int hashtablesize
int hashkeycolumns
string scanqualifiers
string nextqualifiers
properties scanproperties
string startposition
string stopposition
string isolationlevel
string lockstring
double optimizerestimatedrowcount
double optimizerestimatedcost
super
numopens
rowsseen
rowsfiltered
constructortime
opentime
nexttime
closetime
resultsetnumber
tablename
indexname
isconstraint
hashtablesize
hashkeycolumns
scanqualifiers
nextqualifiers
scanproperties
startposition
stopposition
isolationlevel
lockstring
optimizerestimatedrowcount
optimizerestimatedcost
// resultsetstatistics methods
/**
* return the statement execution plan as a string.
*
* @param depth	indentation level.
*
* @return string	the statement executio plan as a string.
*/
public string getstatementexecutionplantext int depth
string header
string isolationstring   null
initformatinfo depth
if  indexname    null
header
indent   messageservice gettextmessage
sqlstate rts_distinct_scan_rs_using
tablename
isconstraint ?
messageservice gettextmessage sqlstate rts_constraint
messageservice gettextmessage sqlstate rts_index
indexname
else
header
indent
messageservice gettextmessage
sqlstate rts_distinct_scan_rs
tablename
header   header
messageservice gettextmessage
sqlstate rts_locking
isolationlevel
lockstring
string scaninfo
indent
messageservice gettextmessage sqlstate rts_scan_info
propertyutil sortproperties scanproperties  subindent
string hashkeycolumnstring
if  hashkeycolumns length    1
hashkeycolumnstring   messageservice gettextmessage
sqlstate rts_distinct_col
hashkeycolumns
else
hashkeycolumnstring   messageservice gettextmessage
sqlstate rts_distinct_cols
hashkeycolumns
for  int index   1  index < hashkeycolumns length  index
hashkeycolumnstring   hashkeycolumnstring       hashkeycolumns
hashkeycolumnstring   hashkeycolumnstring
return
header
indent   messageservice gettextmessage sqlstate rts_num_opens
numopens
indent   messageservice gettextmessage
sqlstate rts_hash_table_size
hashtablesize
indent   hashkeycolumnstring
indent   messageservice gettextmessage sqlstate rts_rows_seen
rowsseen
indent   messageservice gettextmessage
sqlstate rts_rows_filtered
rowsfiltered
dumptimestats indent  subindent
dumpestimatedcosts subindent
rowsseen > 0
?
subindent
messageservice gettextmessage
sqlstate rts_next_time
nexttime   rowsseen
scaninfo
subindent   messageservice gettextmessage
sqlstate rts_start_position
startposition
subindent   messageservice gettextmessage
sqlstate rts_stop_position
stopposition
subindent   messageservice gettextmessage
sqlstate rts_scan_quals
scanqualifiers
subindent
messageservice gettextmessage
sqlstate rts_next_quals
nextqualifiers
// resolve - estimated row count and cost will eventually
// be displayed for all nodes
dumpestimatedcosts subindent
/**
* return information on the scan nodes from the statement execution
* plan as a string.
*
* @param depth	indentation level.
* @param tablename if not null then print information for this table only
*
* @return string	the information on the scan nodes from the
*					statement execution plan as a string.
*/
public string getscanstatisticstext string tablename  int depth
if   tablename    null     tablename equals this tablename
return getstatementexecutionplantext depth
else
return  string
// formatable methods
// class implementation
public string tostring
return getstatementexecutionplantext 0
/**
* if this node is on a database item (like a table or an index), then provide a
* string that describes the on item.
*
*/
public string getnodeon
return messageservice gettextmessage
sqlstate rts_on_using
tablename
indexname
/**
* format for display, a name for this node.
*
*/
public string getnodename
return messageservice gettextmessage sqlstate rts_distinct_scan