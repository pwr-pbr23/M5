/*
derby - class org.apache.derby.jdbc.driver169
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby jdbc
import org apache derby iapi sql resultset
import org apache derby impl jdbc
import java sql connection
import java sql sqlexception
import java util properties
/**
driver169 - jdbc "driver" for j2me/cdc/foundation/jsr169, really
the jdbc object factory for the jsr169 environment.
work in progress
@author djd
*/
public class driver169 extends internaldriver
public driver169
/*
methods to be overloaded in sub-implementations such as
a tracing driver.
*/
protected embedconnection getnewembedconnection string url  properties info
throws sqlexception
// make a new local connection with a new transaction resource
return new embedconnection30 this  url  info
/**
* get a new nested connection.
*
* @param conn	the embedconnection.
*
* @return a nested connection object.
*
*/
public connection getnewnestedconnection embedconnection conn
return new embedconnection30 conn
/*
** methods to be overridden by subimplementations wishing to insert
** their classes into the mix.
*/
public java sql statement newembedstatement
embedconnection conn
boolean formetadata
int resultsettype
int resultsetconcurrency
int resultsetholdability
return new embedstatement conn  formetadata  resultsettype  resultsetconcurrency
resultsetholdability
/**
@exception sqlexception if fails to create statement
*/
public java sql preparedstatement newembedpreparedstatement
embedconnection conn
string stmt
boolean formetadata
int resultsettype
int resultsetconcurrency
int resultsetholdability
int autogeneratedkeys
int columnindexes
string columnnames
throws sqlexception
return new embedpreparedstatement169 conn  stmt  formetadata
resultsettype  resultsetconcurrency  resultsetholdability
autogeneratedkeys  columnindexes  columnnames
/**
@exception sqlexception if fails to create statement
*/
public java sql callablestatement newembedcallablestatement
embedconnection conn
string stmt
int resultsettype
int resultsetconcurrency
int resultsetholdability
throws sqlexception
return new embedcallablestatement169 conn stmt  resultsettype
resultsetconcurrency  resultsetholdability
public embedresultset
newembedresultset embedconnection conn  resultset results  boolean formetadata  embedstatement statement  boolean isatomic
throws sqlexception
return new embedresultset169 conn  results  formetadata  statement  isatomic