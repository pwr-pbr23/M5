/*
derby - class org.apache.derby.iapi.sql.dictionary.dependencydescriptor
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi sql dictionary
import org apache derby catalog uuid
import org apache derby iapi reference sqlstate
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi sql statementtype
import org apache derby catalog dependablefinder
import org apache derby catalog dependable
import org apache derby iapi services io storedformatids
import org apache derby iapi error standardexception
import org apache derby iapi sql depend dependencymanager
import org apache derby iapi sql depend dependent
import org apache derby iapi sql depend dependency
import org apache derby iapi sql depend provider
/**
* this interface is used to get information from a dependencydescriptor.
*
* @version 0.1
* @author jerry brenner
*/
public class dependencydescriptor extends tupledescriptor
implements uniquetupledescriptor
/** public interface for this class is:
<ol>
<li>public dependablefinder getdependentfinder();</li>
<li>public uuid getproviderid();</li>
<li>public dependablefinder getproviderfinder();</li>
</ol>
*/
// implementation
private final uuid					dependentid
private final dependablefinder		dependentbloodhound
private final uuid					providerid
private final dependablefinder		providerbloodhound
/**
* constructor for a dependencydescriptor
*
* @param dependent			the dependent
* @param provider			the provider
*/
public dependencydescriptor
dependent dependent
provider provider
dependentid   dependent getobjectid
dependentbloodhound   dependent getdependablefinder
providerid   provider getobjectid
providerbloodhound   provider getdependablefinder
/**
* constructor for a dependencydescriptor
*
* @param dependentid			the dependent id
* @param dependentbloodhound	the bloodhound for finding the dependent
* @param providerid			the provider id
* @param providerbloodhound	the bloodhound for finding the provider
*/
public dependencydescriptor
uuid dependentid  dependablefinder dependentbloodhound
uuid providerid  dependablefinder providerbloodhound
this dependentid   dependentid
this dependentbloodhound   dependentbloodhound
this providerid   providerid
this providerbloodhound   providerbloodhound
// dependencydescriptor interface
/**
* get the dependent's id for the dependency.
*
* @return 	the dependent's id.
*/
public uuid getuuid
return dependentid
/**
* get the dependent's type for the dependency.
*
* @return the dependent's type.
*/
public dependablefinder getdependentfinder
return dependentbloodhound
/**
* get the provider's id for the dependency.
*
* @return 	the provider's id.
*/
public uuid getproviderid
return providerid
/**
* get the provider's type for the dependency.
*
* @return the provider's type.
*/
public dependablefinder getproviderfinder
return providerbloodhound