/*
derby - class org.apache.derby.iapi.sql.execute.temporaryrowholder
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi sql execute
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi error standardexception
import org apache derby iapi sql execute execrow
/**
* this is a class that is used to temporarily
* (non-persistently) hold rows that are used in
* language execution.  it will store them in an
* array, or a temporary conglomerate, depending
* on the number of rows.
* <p>
* it is used for deferred dml processing.
*
* @author jamie
*/
public interface temporaryrowholder
/**
* insert a row
*
* @param inputrow the row to insert
*
* @exception standardexception on error
*/
public void insert execrow inputrow
throws standardexception
/**
* get a result set for scanning what has been inserted
* so far.
*
* @return a result set to use
*/
public cursorresultset getresultset
/**
* clean up
*
* @exception standardexception on error
*/
public void close   throws standardexception
//returns the conglomerate number it created
public long gettemporaryconglomid
//return the conglom id of the position index it maintains
public long getpositionindexconglomid
//sets the type of the temporary row holder to unique stream
public void setrowholdertypetouniquestream