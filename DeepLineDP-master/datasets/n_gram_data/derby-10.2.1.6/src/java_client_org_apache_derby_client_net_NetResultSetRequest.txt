/*
derby - class org.apache.derby.client.net.netresultsetrequest
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client net
import org apache derby client am columnmetadata
import org apache derby client am resultset
import org apache derby client am section
import org apache derby client am sqlexception
import org apache derby client am clientmessageid
import org apache derby shared common reference sqlstate
public class netresultsetrequest extends netstatementrequest
implements resultsetrequestinterface
public netresultsetrequest netagent netagent  ccsidmanager ccsidmanager  int buffersize
super netagent  ccsidmanager  buffersize
//----------------------------- entry points ---------------------------------
public void writefetch netresultset resultset
section section
int fetchsize  throws sqlexception
// - for forward-only cursors we do not send qryrowset on opnqry, fetchsize is ignored.
//   but qryrowset is sent on excsqlstt for a stored procedure call.
boolean sendqryrowset
netstatement  resultset statement_ materialstatement_  qryrowsetsentonopnqry_
boolean sendrtnextdta   false
if  sendqryrowset    resultset resultsettype_    java sql resultset type_forward_only
netcursor  resultset cursor_  haslobs_
fetchsize   1
resultset fetchsize_   1
sendrtnextdta   true
netcursor  resultset cursor_  rtnextrow_   false
// if one of the result sets returned from a stored procedure is scrollable,
// then we set netstatement_.qryrowsetsentonopnqry_ to true even though we didn't really
// send a qryrowset on excsqlstt for sqlam >= 7.  this is ok for scrollable cursors,
// but will cause a problem for forward-only cursors.  because if fetchsize was never
// set, we will send qryrowset(0), which will cause a syntaxrm.
else if  resultset fetchsize_    0
sendqryrowset   false
buildcntqry section
sendqryrowset
resultset queryinstanceidentifier_
fetchsize
sendrtnextdta
buildoutovr resultset
resultset resultsetmetadata_
resultset firstoutovrbuilt_
netcursor  resultset cursor_  haslobs_
public void writescrollablefetch netresultset resultset
section section
int fetchsize
int orientation
long rowtofetch
boolean resetqueryblocks  throws sqlexception
int protocolorientation   computeprotocolorientation orientation
// - for sensitive-static cursors:
//     * qryrowset must be sent on opnqry to indicate to the server that the cursor is
//       going to be used in a scrollable fashion.  (sqlam<7)
//     * if qryrowset is sent on opnqry, then it must be sent on all subsequent cntqry's
// - for sensitive-dynamic non-rowset cursors: (we should never be in this case)
//     * qryrowset is not allowed on cntqry's
// - for rowset cursors:
//     * qryrowset is optional.  it is ignored on opnqry.  if not sent on cntqry,
//       then the fetch is going fetch next row as opposed to fetch next rowset.
boolean sendqryrowset
resultset isrowsetcursor_
netstatement  resultset statement_ materialstatement_  qryrowsetsentonopnqry_
resultset sensitivity_    resultset sensitivity_sensitive_static__
netcursor  resultset cursor_  blocking_
buildscrollcntqry protocolorientation
rowtofetch
section
sendqryrowset
resultset queryinstanceidentifier_
fetchsize
resetqueryblocks
buildoutovr resultset
resultset resultsetmetadata_
resultset firstoutovrbuilt_
netcursor  resultset cursor_  haslobs_
public void writepositioningfetch netresultset resultset
section section
int orientation
long rowtofetch  throws sqlexception
int protocolorientation   computeprotocolorientation orientation
// do not send qryrowste if the cursor is a non-rowset, sensitive dynamic cursor
boolean sendqryrowset
resultset isrowsetcursor_
netstatement  resultset statement_ materialstatement_  qryrowsetsentonopnqry_
resultset sensitivity_    resultset sensitivity_sensitive_dynamic__
buildpositioningcntqry protocolorientation
rowtofetch
section
sendqryrowset
resultset queryinstanceidentifier_
resultset fetchsize_
buildoutovr resultset
resultset resultsetmetadata_
resultset firstoutovrbuilt_
netcursor  resultset cursor_  haslobs_
public void writecursorclose netresultset resultset
section section  throws sqlexception
buildclsqry section
resultset queryinstanceidentifier_
//----------------------helper methods----------------------------------------
// these methods are "private protected", which is not a recognized java privilege,
// but means that these methods are private to this class and to subclasses,
// and should not be used as package-wide friendly methods.
private void buildclsqry section section
long queryinstanceidentifier
throws sqlexception
createcommand
marklengthbytes codepoint clsqry
buildpkgnamcsn section
buildqryinsid queryinstanceidentifier
updatelengthbytes
private void buildcntqry section section
boolean sendqryrowset
long queryinstanceidentifier
int qryrowsetsize
boolean sendrtnextdta  throws sqlexception
buildcorecntqry section
sendqryrowset
queryinstanceidentifier
qryrowsetsize
// we will always let rtnextdta default to rtnextrow.  the only time we need to send
// rtnextdta rtnextall is for a stored procedure returned forward-only resultset
// that has lob columns.  since there are lobs in the
// resultset, no qrydta is returned on execute.  on the cntqry's, we will
// send qryrowset(1) and rtnextall.
if  sendrtnextdta
buildrtnextdta codepoint rtnextall
updatelengthbytes
// buildcorecntqry builds the common parameters
private void buildcorecntqry section section
boolean sendqryrowset
long queryinstanceidentifier
int qryrowsetsize
throws sqlexception
createcommand
marklengthbytes codepoint cntqry
buildpkgnamcsn section      1  packagenameandconsistencytoken
buildqryblksz       2  qryblksz
// maxblkext (-1) tells the server that the client is capable of receiving any number of query blocks
if  sendqryrowset
buildmaxblkext  1      3  maxblkext
// 4. qryinsid
buildqryinsid queryinstanceidentifier
if  sendqryrowset
buildqryrowset qryrowsetsize       5  qryrowset
// send cntqry to get a new rowset from the target server.
private void buildscrollcntqry int scrollorientation
long rownumber
section section
boolean sendqryrowset
long queryinstanceidentifier
int qryrowsetsize
boolean resetqueryblocks
throws sqlexception
buildcorecntqry section
sendqryrowset
queryinstanceidentifier
qryrowsetsize
buildqryscrorn scrollorientation      qryscrorn
if  scrollorientation    codepoint qryscrabs    scrollorientation    codepoint qryscrrel
buildqryrownbr rownumber
if  resetqueryblocks
buildqryblkrst 0xf1       do reset the rowset
else
buildqryblkrst 0xf0       do not reset the rowset
buildqryrtndta 0xf1         do return data
updatelengthbytes
// send ctnqry to reposition the cursor on the target server.
private void buildpositioningcntqry int scrollorientation
long rownumber
section section
boolean sendqryrowset
long queryinstanceidentifier
int qryrowsetsize
throws sqlexception
createcommand
marklengthbytes codepoint cntqry
buildpkgnamcsn section      1  pkgnamcsn
buildqryblksz       2  qryblksz
buildqryinsid queryinstanceidentifier      3  qryinsid
if  sendqryrowset
buildqryrowset qryrowsetsize        4  qryrowset
buildqryscrorn scrollorientation      5  qryscrorn
if  scrollorientation    codepoint qryscrabs    scrollorientation    codepoint qryscrrel
buildqryrownbr rownumber      6  qryrownbr
buildqryblkrst 0xf1      7  do reset the rowset
buildqryrtndta 0xf0      8  do not return data
updatelengthbytes       for cntqry
private void buildoutovr resultset resultset
columnmetadata resultsetmetadata
boolean firstoutovrbuilt
boolean haslobs  throws sqlexception
return
private void buildrtnextdta int rtnextdta  throws sqlexception
writescalar1byte codepoint rtnextdta  rtnextdta
private void buildqryscrorn int scrollorientation  throws sqlexception
writescalar1byte codepoint qryscrorn  scrollorientation
private void buildqryblkrst int qryblkrst  throws sqlexception
writescalar1byte codepoint qryblkrst  qryblkrst
private void buildqryrownbr long rownumber  throws sqlexception
writescalar8bytes codepoint qryrownbr  rownumber
private void buildqryrtndta int qryrtndta  throws sqlexception
writescalar1byte codepoint qryrtndta  qryrtndta
//----------------------non-parsing computational helper methods--------------
// these methods are "private protected", which is not a recognized java privilege,
// but means that these methods are private to this class and to subclasses,
// and should not be used as package-wide friendly methods.
// called by netresultsetrequest.writescrollablefetch()
private int computeprotocolorientation int orientation  throws sqlexception
switch  orientation
case resultset scrollorientation_absolute__
return codepoint qryscrabs
case resultset scrollorientation_after__
return codepoint qryscraft
case resultset scrollorientation_before__
return codepoint qryscrbef
case resultset scrollorientation_relative__
return codepoint qryscrrel
default
throw new sqlexception netagent_ logwriter_
new clientmessageid sqlstate net_invalid_scroll_orientation