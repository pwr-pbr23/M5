/*
derby - class org.apache.derby.impl.load.exportresultsetforobject
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl load
import java sql connection
import java sql statement
import java sql resultset
import java sql resultsetmetadata
import java sql databasemetadata
import java sql sqlexception
//uses the passed connection and table/view name to make the resultset on
//that entity. if the entity to be exported has non-sql types in it, an
//exception will be thrown
class exportresultsetforobject
private connection con
private string selectquery
private resultset rs
private int columncount
private string columnnames
private string columntypes
private int columnlengths
private statement expstmt   null
private string schemaname
private string tablename
/* set up the connection and table/view name or the select query
* to make the result set, whose data is exported.
**/
public exportresultsetforobject connection con  string schemaname
string tablename  string selectquery
this con   con
if  selectquery    null
this schemaname   schemaname
this tablename   tablename
// delimit schema name and table name using quotes because
// they can be case-sensitive names or sql reserved words. export
// procedures are expected to be called with case-senisitive names.
// undelimited names are passed in upper case, because that is
// the form database stores them.
this selectquery
schemaname    null ?
else
this selectquery   selectquery
public resultset getresultset   throws sqlexception
rs   null
//execute the select query and keep it's meta data info ready
expstmt   con createstatement
rs   expstmt executequery selectquery
getmetadatainfo
return rs
public int getcolumncount
return columncount
public string getcolumndefinition
return columnnames
public string getcolumntypes
return columntypes
public int getcolumnlengths
return columnlengths
//if the entity to be exported has non-sql types in it, an exception will be thrown
private void getmetadatainfo   throws sqlexception
resultsetmetadata metadata   rs getmetadata
columncount                  metadata getcolumncount
int numcolumns               columncount
columnnames                  new string
columntypes                  new string
columnlengths                new int
for  int i 0  i<numcolumns  i
int jdbctypeid   metadata getcolumntype i 1
columnnames   metadata getcolumnname i 1
columntypes   metadata getcolumntypename i 1
if  columninfo importexportsupportedtype jdbctypeid
throw loaderror nonsupportedtypecolumn
columnnames  columntypes
columnlengths   metadata getcolumndisplaysize i 1
public void  close   throws exception
if expstmt   null
expstmt close