/*
derby - class org.apache.derby.iapi.store.access.xa.xaxactid
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi store access xa
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi store access globalxact
import javax transaction xa xid
import javax transaction xa xaexception
/**
the xaxactid class is a specific implementation of the jta xid interface.  it
is only used by the transactiontable.restore() interface to return an array
of xid's back to the caller, as part of serving the xaresource.restore()
interface.
<p>
it is not the object that is stored in the log.  one reason for this is that
the formattable and xid interface's define two different return values for
the getformatid() interface.
**/
public class xaxactid extends globalxact implements xid
/**************************************************************************
* private fields of the class
**************************************************************************
*/
private static final char colon
/**************************************************************************
* constructors for this class:
**************************************************************************
*/
/**
* initialize by making array copies of appropriate fields.
* <p>
**/
private void copy_init_xid
int     format_id
byte  global_id
byte  branch_id
this format_id   format_id
this global_id   new byte
system arraycopy global_id  0  this global_id  0  global_id length
this branch_id   new byte
system arraycopy branch_id  0  this branch_id  0  branch_id length
/**
* construct from given pieces of an xid.  makes copies of arrays.
* <p>
**/
public xaxactid
int     format_id
byte  global_id
byte  branch_id
copy_init_xid format_id  global_id  branch_id
/**
* construct an xid using an external xid.
* <p>
* @exception xaexception invalid external xid
*/
public xaxactid xid xid  throws xaexception
if  xid    null
throw new xaexception xaexception xaer_nota
copy_init_xid
xid getformatid
xid getglobaltransactionid
xid getbranchqualifier
public string tohexstring
// the ascii representation of xid where xid is of
// 		format_id = f
//		global_id = byte[n]
//		branch_id = byte[m]
//
// :xx:yy:ffffffff:n...n:mmmm...m:
// where	xx = n (up to 64 max)
//			yy = m (up to 64 max)
//			n..n = hex dump of global_id (0 to 128 bytes max)
//			m..m = hex dump of branch_qualifier (0 to 128 bytes max)
// 1+2+1+2+1+9+1+1+1
int maxlength   20  global_id length branch_id length  2
stringbuffer hexdump   new stringbuffer maxlength
hexdump append colon
append integer tostring global_id length   append colon
append integer tostring branch_id length   append colon
append integer tostring format_id  16   append colon
append org apache derby iapi util stringutil tohexstring global_id  0  global_id length   append colon
append org apache derby iapi util stringutil tohexstring branch_id  0  branch_id length   append colon
return hexdump tostring
public xaxactid string xactidstring
// extract it in pieces delimited by colon
int start  end  length
// xx
start   1
end   xactidstring indexof colon  start
if  sanitymanager debug
sanitymanager assert end     1
string xx   xactidstring substring start  end
int n   integer parseint xx
if  sanitymanager debug
sanitymanager assert n > 0    n <  xid maxgtridsize
// yy
start   end 1 			   skip the colon
end   xactidstring indexof colon  start
if  sanitymanager debug
sanitymanager assert end     1
string yy   xactidstring substring start end
int m   integer parseint yy
if  sanitymanager debug
sanitymanager assert m > 0    n <  xid maxbqualsize
// ffffffff
start   end 1 			   skip the colon
end   xactidstring indexof colon  start
if  sanitymanager debug
sanitymanager assert end     1
string f   xactidstring substring start end
format_id   integer parseint f  16
// n...n
start   end 1 			   skip the colon
end   xactidstring indexof colon  start
if  sanitymanager debug
sanitymanager assert end     1
global_id   org apache derby iapi util stringutil fromhexstring xactidstring  start   end start
if  sanitymanager debug
sanitymanager assert global_id length    n
// m...m
start   end 1 			   skip the colon
end   xactidstring indexof colon  start
if  sanitymanager debug
sanitymanager assert end     1
branch_id   org apache derby iapi util stringutil fromhexstring xactidstring  start   end start
if  sanitymanager debug
sanitymanager assert branch_id length    m
m
branch_id length
/**************************************************************************
* private/protected methods of this class:
**************************************************************************
*/
/**************************************************************************
* public methods implementing the xid interface:
**************************************************************************
*/
/**
* obtain the format id part of the xid.
* <p>
*
* @return format identifier. o means the osi ccr format.
**/
public int getformatid
return format_id
/**
* obtain the global transaction identifier part of xid as an array of
* bytes.
* <p>
*
* @return a byte array containing the global transaction identifier.
**/
public byte getglobaltransactionid
return global_id
/**
* obtain the transaction branch qualifier part of the xid in a byte array.
* <p>
*
* @return a byte array containing the branch qualifier of the transaction.
**/
public byte getbranchqualifier
return branch_id
public boolean equals object other
if  other    this
return true
if  other    null
return false
try
if  other instanceof globalxact
return super equals other
// just cast it and catch the exception rather than doing the type
// checking twice.
xid other_xid    xid  other
return
java util arrays equals
other_xid getglobaltransactionid
this global_id
java util arrays equals
other_xid getbranchqualifier
this branch_id
other_xid getformatid      this format_id
catch classcastexception cce
// this class only knows how to compare with other xids
if  sanitymanager debug
sanitymanager throwassert
other getclass   getname
return false