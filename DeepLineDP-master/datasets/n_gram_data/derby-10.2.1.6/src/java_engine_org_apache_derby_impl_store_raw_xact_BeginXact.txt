/*
derby - class org.apache.derby.impl.store.raw.xact.beginxact
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl store raw xact
import org apache derby iapi services io formatidutil
import org apache derby iapi services io storedformatids
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi store raw transaction
import org apache derby iapi store raw loggable
import org apache derby iapi store raw globaltransactionid
import org apache derby iapi store raw log loginstant
import org apache derby iapi store raw xact rawtransaction
import org apache derby iapi util bytearray
import java io outputstream
import java io inputstream
import java io objectoutput
import java io objectinput
import java io ioexception
import org apache derby iapi services io limitobjectinput
/**
this operation indicates the beginning of a transaction.
@see loggable
*/
public class beginxact implements loggable
protected int transactionstatus
protected globaltransactionid xactid
public beginxact globaltransactionid xid  int s
xactid   xid
transactionstatus   s
/*
* formatable methods
*/
public beginxact
super
public void writeexternal objectoutput out  throws ioexception
out writeint transactionstatus
out writeobject xactid
public void readexternal objectinput in  throws ioexception  classnotfoundexception
transactionstatus   in readint
xactid    globaltransactionid in readobject
/**
return my format identifier.
*/
public int gettypeformatid
return storedformatids logop_begin_xact
/**
loggable methods
@see loggable
*/
/**
apply the change indicated by this operation and optional data.
@param xact			the transaction
@param instant		the log instant of this operation
@param in			optional data
*/
public void dome transaction xact  loginstant instant  limitobjectinput in
rawtransaction rt    rawtransaction xact
// if we are not doing fake logging for in memory database
if  instant    null
rt setfirstloginstant instant
// need to do this here rather than in the transaction object for
// recovery.
rt addupdatetransaction transactionstatus
/**
the default for prepared log is always null for all the operations
that don't have optionaldata.  if an operation has optional data,
the operation need to prepare the optional data for this method.
beginxact has no optional data to write out
@see objectoutput
*/
public bytearray getpreparedlog
return  bytearray  null
/**
always redo a beginxact.
@param xact		the transaction trying to redo this operation
@return true if operation needs redoing, false if not.
*/
public boolean needsredo transaction xact
return true 			   always redo this
/**
beginxact has no resource to release
*/
public void releaseresource transaction xact
/**
beginxact is both a first and a rawstore log record
*/
public int group
int group   loggable first   loggable rawstore
return group
/**
debug: print self.
*/
public string tostring
if  sanitymanager debug
return     xactid       integer tohexstring transactionstatus
else
return null
/**
beginxact method
*/
public globaltransactionid getglobalid
return xactid