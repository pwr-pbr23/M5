/*
derby - class org.apache.derby.impl.drda.reencodedinputstream
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl drda
import java io inputstream
import java io reader
import java io outputstreamwriter
import java io bytearrayoutputstream
import java io bytearrayinputstream
import java io ioexception
import java io unsupportedencodingexception
import org apache derby iapi services sanity sanitymanager
/**
*
* reencodedinputstream passes
* stream from reader, which is stream of decoded style,
* to user of this subclass of inputstream, which is stream of encoded style.
*
* the encoding of stream passed to user is limited to utf8.
*
* this class will be used to pass stream, which is served as a reader,
* as a inputstream of a arbitrary encoding.
*
*/
public class reencodedinputstream extends inputstream
private static final int buffered_char_len   1024
private reader reader_
private char decodedbuffer_
private outputstreamwriter encodedstreamwriter_
private publicbufferoutputstream encodedoutputstream_
private bytearrayinputstream encodedinputstream_
public reencodedinputstream reader reader
throws ioexception
reader_   reader
decodedbuffer_   new char
encodedoutputstream_   new publicbufferoutputstream  buffered_char_len   3
encodedstreamwriter_   new outputstreamwriter encodedoutputstream_
encodedinputstream_   reencode reader_
private bytearrayinputstream reencode reader reader
throws ioexception
int count
do
count   reader read decodedbuffer_  0  buffered_char_len
while count    0
if count < 0
return null
encodedoutputstream_ reset
encodedstreamwriter_ write decodedbuffer_ 0 count
encodedstreamwriter_ flush
int encodedlength   encodedoutputstream_ size
return new bytearrayinputstream encodedoutputstream_ getbuffer
0
encodedlength
public int available
throws ioexception
if encodedinputstream_    null
return 0
return encodedinputstream_ available
public void close
throws ioexception
if encodedinputstream_    null
encodedinputstream_ close
encodedinputstream_   null
if reader_    null
reader_ close
reader_   null
if encodedstreamwriter_    null
encodedstreamwriter_ close
encodedstreamwriter_   null
public int read
throws ioexception
if encodedinputstream_    null
return  1
int c   encodedinputstream_ read
if c >  1
return c
else
encodedinputstream_   reencode reader_
if encodedinputstream_    null
return  1
return encodedinputstream_ read
protected void finalize   throws ioexception
close
static class publicbufferoutputstream extends bytearrayoutputstream
publicbufferoutputstream int size
super size
public byte getbuffer
return buf