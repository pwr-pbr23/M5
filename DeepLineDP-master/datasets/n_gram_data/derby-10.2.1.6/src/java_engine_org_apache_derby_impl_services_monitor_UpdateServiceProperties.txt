/*
derby - class org.apache.derby.impl.services.monitor.updateserviceproperties
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl services monitor
import org apache derby iapi services monitor persistentservice
import org apache derby iapi services sanity sanitymanager
import java util properties
import java util hashtable
import org apache derby io writablestoragefactory
import org apache derby iapi error standardexception
import org apache derby iapi error passthroughexception
import org apache derby iapi reference property
/**
*/
public class updateserviceproperties extends properties
private persistentservice servicetype
private string servicename
private writablestoragefactory storagefactory
/*
fix for bug 3668: following would allow user to change properties while in the session
in which the database was created.
while the database is being created, servicebooted would be false. what that means
is, don't save changes into services.properties file from here until the database
is created. instead, let basemonitor save the properties at the end of the database
creation and also set servicebooted to true at that point. from then on, the
services.properties file updates will be made here.
*/
private boolean servicebooted
public updateserviceproperties persistentservice servicetype  string servicename
properties actualset  boolean servicebooted
super actualset
this servicetype   servicetype
this servicename   servicename
this servicebooted   servicebooted
//look at the comments for servicebooted at the top to understand this.
public void setservicebooted
servicebooted   true
public void setstoragefactory  writablestoragefactory storagefactory
this storagefactory   storagefactory
public writablestoragefactory getstoragefactory
return storagefactory
/*
** methods of hashtable (overridden)
*/
/**
put the key-value pair in the properties set and
mark this set as modified.
@see hashtable#put
*/
public object put object key  object value
object ref   defaults put key  value
if     string  key  startswith property property_runtime_prefix
update
return ref
/**
remove the key-value pair from the properties set and
mark this set as modified.
@see hashtable#remove
*/
public object remove object key
object ref   defaults remove key
if   ref    null
string  key  startswith property property_runtime_prefix
update
return ref
/**
saves the service properties to the disk.
*/
public void saveserviceproperties
if  sanitymanager debug
sanitymanager assert  storagefactory    null
try
servicetype saveserviceproperties servicename  storagefactory
basemonitor removeruntimeproperties defaults   false
catch  standardexception mse
throw new passthroughexception mse
/*
** class specific methods.
*/
private void update
try
//look at the comments for servicebooted at the top to understand this if.
if  servicebooted
servicetype saveserviceproperties servicename  storagefactory
basemonitor removeruntimeproperties defaults   true
catch  standardexception mse
throw new passthroughexception mse