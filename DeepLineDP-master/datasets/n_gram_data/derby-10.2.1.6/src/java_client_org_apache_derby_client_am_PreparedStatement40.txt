/*
derby - class org.apache.derby.client.am.preparedstatement40
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client am
import java sql rowid
import java sql nclob
import java sql sqlexception
import java sql sqlxml
import java io reader
import java io inputstream
import org apache derby client clientpooledconnection
import org apache derby client am sqlexception
import org apache derby client am clientmessageid
import org apache derby shared common reference sqlstate
public class  preparedstatement40 extends  org apache derby client am preparedstatement
/**
* the preparedstatement used for jdbc 4 positioned update statements.
* called by material statement constructors.
* it has the clientpooledconnection as one of its parameters
* this is used to raise the statement events when the prepared
* statement is closed
*
* @param agent the instance of netagent associated with this
*              callablestatement object.
* @param connection the connection object associated with this
*                   preparedstatement object.
* @param sql        a string object that is the sql statement to be sent
*                   to the database.
* @param section    section
* @param cpc the clientpooledconnection wraps the underlying physical
*            connection associated with this prepared statement.
*            it is used to pass the statement closed and the statement
*            error occurred events that occur back to the
*            clientpooledconnection.
* @throws sqlexception
*/
public preparedstatement40 agent agent
connection connection
string sql
section section clientpooledconnection cpc  throws sqlexception
super agent  connection sql section cpc
/**
* the preparedstatementconstructor used for jdbc 4 prepared statements
* with scroll attributes. called by material statement constructors.
* it has the clientpooledconnection as one of its parameters
* this is used to raise the statement events when the prepared
* statement is closed
*
* @param agent the instance of netagent associated with this
*              callablestatement object.
* @param connection  the connection object associated with this
*                    preparedstatement object.
* @param sql         a string object that is the sql statement
*                    to be sent to the database.
* @param type        one of the resultset type constants.
* @param concurrency one of the resultset concurrency constants.
* @param holdability one of the resultset holdability constants.
* @param autogeneratedkeys a flag indicating whether auto-generated
*                          keys should be returned.
* @param columnnames an array of column names indicating the columns that
*                    should be returned from the inserted row or rows.
* @param cpc the clientpooledconnection wraps the underlying physical
*            connection associated with this prepared statement
*            it is used to pass the statement closed and the statement
*            error occurred events that occur back to the
*            clientpooledconnection.
* @throws sqlexception
*/
public preparedstatement40 agent agent
connection connection
string sql
int type  int concurrency  int holdability  int autogeneratedkeys  string columnnames clientpooledconnection cpc  throws sqlexception
super agent  connection  sql  type  concurrency  holdability  autogeneratedkeys  columnnames  cpc
public void setrowid int parameterindex  rowid x  throws sqlexception
throw sqlexceptionfactory notimplemented
public void setnstring int index  string value  throws sqlexception
throw sqlexceptionfactory notimplemented
public void setncharacterstream int parameterindex  reader value
throws sqlexception
throw sqlexceptionfactory notimplemented
public void setncharacterstream int index  reader value  long length
throws sqlexception
throw sqlexceptionfactory notimplemented
public void setnclob int parameterindex  reader reader
throws sqlexception
throw sqlexceptionfactory notimplemented
public void setnclob int index  nclob value  throws sqlexception
throw sqlexceptionfactory notimplemented
public void setnclob int parameterindex  reader reader  long length
throws sqlexception
throw sqlexceptionfactory notimplemented
public void setsqlxml int parameterindex  sqlxml xmlobject
throws sqlexception
throw sqlexceptionfactory notimplemented
/**
* returns <code>this</code> if this class implements the interface
*
* @param  interfaces a class defining an interface
* @return an object that implements the interface
* @throws java.sql.sqlexption if no object if found that implements the
* interface
*/
public <t> t unwrap java lang class<t> interfaces
throws sqlexception
try
checkforclosedstatement
return interfaces cast this
catch  classcastexception cce
throw new sqlexception null new clientmessageid sqlstate unable_to_unwrap
interfaces  getsqlexception
catch  sqlexception se
throw se getsqlexception