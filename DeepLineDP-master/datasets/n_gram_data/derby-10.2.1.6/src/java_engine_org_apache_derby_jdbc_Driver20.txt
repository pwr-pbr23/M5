/*
derby - class org.apache.derby.jdbc.driver20
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby jdbc
import org apache derby iapi reference attribute
import org apache derby iapi reference messageid
import org apache derby iapi reference property
import org apache derby iapi reference sqlstate
import org apache derby impl jdbc embedconnection
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi error standardexception
import org apache derby iapi sql resultset
import org apache derby iapi jdbc brokeredconnection
import org apache derby iapi jdbc brokeredconnectioncontrol
import org apache derby iapi services i18n messageservice
import org apache derby iapi services monitor monitor
import org apache derby iapi services io formatableproperties
import org apache derby impl jdbc
import java sql connection
import java sql sqlexception
import java sql driver
import java sql drivermanager
import java sql driverpropertyinfo
import java util properties
/**
this class extends the local jdbc driver in order to determine at jbms
boot-up if the jvm that runs us does support jdbc 2.0. if it is the case
then we will load the appropriate class(es) that have jdbc 2.0 new public
methods and sql types.
*/
public class driver20 extends internaldriver implements driver
private static final string boolean_choices
private class  antigcdrivermanager
/*
**	methods from modulecontrol
*/
public void boot boolean create  properties properties  throws standardexception
super boot create  properties
// register with the driver manager
autoloadeddriver registerdrivermodule  this
// hold onto the driver manager to avoid its being garbage collected.
// make sure the class is loaded by using .class
antigcdrivermanager   java sql drivermanager class
public void stop
super stop
autoloadeddriver unregisterdrivermodule
/**
* get a new nested connection.
*
* @param conn	the embedconnection.
*
* @return a nested connection object.
*
*/
public connection getnewnestedconnection embedconnection conn
return new embedconnection conn
/*
methods to be overloaded in sub-implementations such as
a tracing driver.
*/
public embedconnection getnewembedconnection string url  properties info
throws sqlexception
// make a new local connection with a new transaction resource
return new embedconnection this  url  info
/**
@exception sqlexception if fails to create statement
*/
public java sql preparedstatement
newembedpreparedstatement  embedconnection conn
string stmt
boolean formetadata
int resultsettype
int resultsetconcurrency
int resultsetholdability
int autogeneratedkeys
int columnindexes
string columnnames
throws sqlexception
return new embedpreparedstatement20 conn  stmt  formetadata
resultsettype  resultsetconcurrency  resultsetholdability
autogeneratedkeys  columnindexes  columnnames
/**
@exception sqlexception if fails to create statement
*/
public java sql callablestatement newembedcallablestatement
embedconnection conn
string stmt
int resultsettype
int resultsetconcurrency
int resultsetholdability
throws sqlexception
return new embedcallablestatement20 conn  stmt
resultsettype  resultsetconcurrency  resultsetholdability
public org apache derby impl jdbc embedresultset
newembedresultset embedconnection conn  resultset results  boolean formetadata  org apache derby impl jdbc embedstatement statement  boolean isatomic
throws sqlexception
return new embedresultset20 conn  results  formetadata  statement
isatomic
public brokeredconnection newbrokeredconnection brokeredconnectioncontrol control
return new brokeredconnection control
/**
* <p>the getpropertyinfo method is intended to allow a generic gui tool to
* discover what properties it should prompt a human for in order to get
* enough information to connect to a database.  note that depending on
* the values the human has supplied so far, additional values may become
* necessary, so it may be necessary to iterate though several calls
* to getpropertyinfo.
*
* @param url the url of the database to connect to.
* @param info a proposed list of tag/value pairs that will be sent on
*          connect open.
* @return an array of driverpropertyinfo objects describing possible
*          properties.  this array may be an empty array if no properties
*          are required.
* @exception sqlexception if a database-access error occurs.
*/
public  driverpropertyinfo getpropertyinfo string url  properties info  throws sqlexception
// resolve other properties should be added into this method in the future ...
if  info    null
if  boolean valueof info getproperty attribute shutdown_attr   booleanvalue
// no other options possible when shutdown is set to be true
return new driverpropertyinfo
// at this point we have databasename,
string dbname   internaldriver getdatabasename url  info
// convert the ;name=value attributes in the url into
// properties.
formatableproperties finfo   getattributes url  info
info   null     ensure we don't use this reference directly again
boolean encryptdb   boolean valueof finfo getproperty attribute data_encryption   booleanvalue
string encryptpassword   finfo getproperty attribute boot_password
if  dbname length      0     encryptdb   true    encryptpassword    null
// with no database name we can have shutdown or a database name
// in future, if any new attribute info needs to be included in this
// method, it just has to be added to either string or boolean or secret array
// depending on whether it accepts string or boolean or secret(ie passwords) value.
string connstringattributes
attribute dbname_attr  messageid conn_database_identity
attribute crypto_provider  messageid conn_crypto_provider
attribute crypto_algorithm  messageid conn_crypto_algorithm
attribute crypto_key_length  messageid conn_crypto_key_length
attribute crypto_external_key  messageid conn_crypto_external_key
attribute territory  messageid conn_locale
attribute username_attr  messageid conn_username_attr
attribute log_device  messageid conn_log_device
attribute roll_forward_recovery_from  messageid conn_roll_forward_recovery_from
attribute create_from  messageid conn_create_from
attribute restore_from  messageid conn_restore_from
string connbooleanattributes
attribute shutdown_attr  messageid conn_shut_down_cloudscape
attribute create_attr  messageid conn_create_database
attribute data_encryption  messageid conn_data_encryption
attribute upgrade_attr  messageid conn_upgrade_database
string connstringsecretattributes
attribute boot_password  messageid conn_boot_password
attribute password_attr  messageid conn_password_attr
driverpropertyinfo optionsnodb   new 	driverpropertyinfo[connstringattributes length
connbooleanattributes length
connstringsecretattributes length]
int attrindex   0
for  int i   0  i < connstringattributes length  i    attrindex
optionsnodb   new driverpropertyinfo connstringattributes
finfo getproperty connstringattributes
optionsnodb description   messageservice gettextmessage connstringattributes
optionsnodb choices   monitor getmonitor   getservicelist property database_module
// since database name is not stored in formatableproperties, we
// assign here explicitly
optionsnodb value   dbname
for  int i   0  i < connstringsecretattributes length  i    attrindex
optionsnodb   new driverpropertyinfo connstringsecretattributes
finfo getproperty connstringsecretattributes     null?
optionsnodb description   messageservice gettextmessage connstringsecretattributes
for  int i   0  i < connbooleanattributes length  i    attrindex
optionsnodb   new driverpropertyinfo connbooleanattributes
boolean valueof finfo    null?     finfo getproperty connbooleanattributes   tostring
optionsnodb description   messageservice gettextmessage connbooleanattributes
optionsnodb choices   boolean_choices
return optionsnodb
return new driverpropertyinfo