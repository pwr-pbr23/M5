/*
derby - class org.apache.derby.impl.sql.compile.savepointnode
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package	org apache derby impl sql compile
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi sql execute constantaction
import org apache derby iapi error standardexception
/**
* a savepointnode is the root of a querytree that represents a savepoint (rollback savepoint, relase savepoint and savepoint)
* statement.
*/
public class savepointnode extends ddlstatementnode
private string	savepointname    name of the savepoint
private int	savepointstatementtype    type of savepoint statement ie rollback  release or set savepoint
/**
* initializer for a savepointnode
*
* @param objectname		the name of the savepoint
* @param savepointstatementtype		type of savepoint statement ie rollback, release or set savepoint
*
* @exception standardexception		thrown on error
*/
public void init
object objectname
object savepointstatementtype
throws standardexception
initandcheck null
this savepointname    string  objectname
this savepointstatementtype     integer  savepointstatementtype  intvalue
if  sanitymanager debug
if  this savepointstatementtype > 3    this savepointstatementtype < 1
sanitymanager throwassert
this savepointstatementtype
/**
* convert this object to a string.  see comments in querytreenode.java
* for how this should be done for tree printing.
*
* @return	this object as a string
*/
public string tostring
if  sanitymanager debug
string tempstring           savepointname
tempstring   tempstring           savepointstatementtype
return super tostring      tempstring
else
return
public string statementtostring
if  savepointstatementtype    1
return
else if  savepointstatementtype    2
return
else
return
/**
* returns whether or not this statement requires a set/clear savepoint
* around its execution.  the following statement "types" do not require them:
*		cursor	- unnecessary and won't work in a read only environment
*		xact	- savepoint will get blown away underneath us during commit/rollback
*
* @return boolean	whether or not this statement requires a set/clear savepoint
*/
public boolean needssavepoint
return false
// we inherit the generate() method from ddlstatementnode.
/**
* create the constant information that will drive the guts of execution.
*
* @exception standardexception		thrown on failure
*/
public constantaction	makeconstantaction   throws standardexception
return
getgenericconstantactionfactory   getsavepointconstantaction
savepointname
savepointstatementtype