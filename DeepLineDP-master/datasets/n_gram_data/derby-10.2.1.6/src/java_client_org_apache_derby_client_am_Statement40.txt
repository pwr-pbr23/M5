/*
derby - class org.apache.derby.client.am.statement40
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client am
import java sql sqlexception
import org apache derby shared common reference sqlstate
/**
* implements jdbc 4.0 specific methods
*/
public class statement40 extends statement
/**
* calls the super class constructor to pass the parameters
* @param  agent      agent
* @param  connection connection
* @throws sqlexception
*
*/
public statement40 agent agent  connection connection  throws sqlexception
super agent connection
/**
* calls the superclass constructor to pass the arguments
* @param agent             agent
* @param connection        connection
* @param type              int
* @param concurrency       int
* @param holdability       int
* @param autogeneratedkeys int
* @param columnnames       string[]
* @throws sqlexception
*
*/
public statement40 agent agent  connection connection  int type
int concurrency  int holdability
int autogeneratedkeys  string columnnames
throws sqlexception
super agent connection type concurrency holdability autogeneratedkeys
columnnames
/**
* returns <code>this</code> if this class implements the interface
*
* @param  interfaces a class defining an interface
* @return an object that implements the interface
* @throws java.sql.sqlexption if no object if found that implements the
* interface
*/
public <t> t unwrap java lang class<t> interfaces
throws sqlexception
try
checkforclosedstatement
return interfaces cast this
catch  classcastexception cce
throw new sqlexception null new clientmessageid sqlstate unable_to_unwrap
interfaces  getsqlexception
catch  sqlexception se
throw se getsqlexception