/*
derby - class org.apache.derby.impl.store.access.conglomerate.binaryorderablewrapper
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl store access conglomerate
import org apache derby iapi services io arrayinputstream
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi services io storable
import org apache derby iapi services io typedformat
import org apache derby iapi error standardexception
import org apache derby iapi store access binaryorderable
import java io externalizable
import java io objectoutput
import java io objectinput
import java io ioexception
/**
the binaryorderablewrapper is a wrapper class which intercepts the
readexternal() callback made by raw store during a fetch, and does a comparison
instead.
**/
class binaryorderablewrapper implements storable
binaryorderable    ref_object
binaryorderable    other_object
int                cmp_result
/* constructors for this class: */
binaryorderablewrapper
/* private/protected methods of this class: */
/**
* short one line description of routine.
* <p>
* longer descrption of routine.
* <p>
*
* @param ref_object    the object that this object is wrapping (ie. being
*                      read from disk)
* @param other_object  the object to compare ref_object to.
**/
protected void init
binaryorderable ref_object
binaryorderable other_object
this ref_object       ref_object
this other_object     other_object
/* public methods of this class: */
/**
* short one line description of routine.
* <p>
* longer descrption of routine.
* <p>
*
* @return the identifier to be used to open the conglomerate later.
**/
public int getcmpresult
return this cmp_result
/* public methods of storable interface - externalizable, typedformat:
*/
public int gettypeformatid
// resolve - what should this return?
if  sanitymanager debug
sanitymanager throwassert
return   typedformat this ref_object  gettypeformatid
/**
return whether the value is null or not.
the containerid being zero is what determines nullness;  subclasses
are not expected to override this method.
@see org.apache.derby.iapi.services.io.storable#isnull
**/
public boolean isnull
// resolve - what does it mean for this wrapper to be called isnull()?
if  sanitymanager debug
sanitymanager throwassert
return false
/**
restore the in-memory representation to the null value.
the containerid being zero is what determines nullness;  subclasses
are not expected to override this method.
@see org.apache.derby.iapi.services.io.storable#restoretonull
**/
public void restoretonull
// resolve - base object is null.
if  sanitymanager debug
sanitymanager throwassert
return
/**
restore the in-memory representation from the stream.
@exception classnotfoundexception thrown if the stored representation is
serialized and a class named in the stream could not be found.
@exception ioexception thrown by readobject()
@see java.io.externalizable#readexternal
*/
public void readexternal objectinput in
throws ioexception  classnotfoundexception
// do the read byte by byte and return the comparison
this cmp_result   this ref_object binarycompare in  this other_object
if  sanitymanager debug
sanitymanager throwassert
public void readexternalfromarray arrayinputstream in
throws ioexception  classnotfoundexception
// do the read byte by byte and return the comparison
this cmp_result   this ref_object binarycompare in  this other_object
if  sanitymanager debug
sanitymanager throwassert
/**
* store the stored representation of the column value in the stream.
* <p>
* a binaryorderablewrapper is never used to store data out, only to read
* data from disk and compare it to another byte stream.
*
* @param out    stream to write the object to.
*
* @exception ioexception thrown by writeobject()
*
**/
public void writeexternal objectoutput out
throws ioexception
if  sanitymanager debug
sanitymanager throwassert
return