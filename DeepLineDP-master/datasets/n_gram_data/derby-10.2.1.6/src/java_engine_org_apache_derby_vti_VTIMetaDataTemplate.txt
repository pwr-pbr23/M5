/*
derby - class org.apache.derby.vti.vtimetadatatemplate
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby vti
import java sql sqlexception
import java sql resultsetmetadata
/**
an abstract implementation of resultsetmetadata (jdbc 1.2) that is useful
when writing a vti (virtual table interface).
this class implements
most of the methods of resultsetmetadata, each one throwing a sqlexception
with the name of the method. a concrete subclass can then just implement
the methods not implemented here and override any methods it needs
to implement for correct functionality.
<p>
the methods not implemented here are
<ul>
<li>getcolumncount()
<li>getcolumntype()
</ul>
<br>
for virtual tables the database engine only calls methods defined
in the jdbc 1.2 definition of java.sql.resultsetmetadata.
<br>
classes that implement a jdbc 2.0 conformant java.sql.resultsetmetadata can be used
as the meta data for virtual tables.
<br>
developers can use the vtimetadatatemplate20 instead of this class when
developing in a java 2 environment.
*/
public abstract class vtimetadatatemplate implements resultsetmetadata
/**
* is the column automatically numbered, and thus read-only?
*
* @param column the first column is 1, the second is 2, ...
* @return true if the column is automatically numbered
* @exception sqlexception if a database-access error occurs.
*/
public boolean isautoincrement int column  throws sqlexception
throw new sqlexception
/**
* does a column's case matter?
*
* @param column the first column is 1, the second is 2, ...
* @return true if the column is case-sensitive
* @exception sqlexception if a database-access error occurs.
*/
public boolean iscasesensitive int column  throws sqlexception
throw new sqlexception
/**
* can the column be used in a where clause?
*
* @param column the first column is 1, the second is 2, ...
* @return true if the column is searchable
* @exception sqlexception if a database-access error occurs.
*/
public boolean issearchable int column  throws sqlexception
throw new sqlexception
/**
* is the column a cash value?
*
* @param column the first column is 1, the second is 2, ...
* @return true if the column is a cash value
* @exception sqlexception if a database-access error occurs.
*/
public boolean iscurrency int column  throws sqlexception
throw new sqlexception
/**
* can you put a null in this column?
*
* @param column the first column is 1, the second is 2, ...
* @return columnnonulls, columnnullable or columnnullableunknown
* @exception sqlexception if a database-access error occurs.
*/
public int isnullable int column  throws sqlexception
throw new sqlexception
/**
* is the column a signed number?
*
* @param column the first column is 1, the second is 2, ...
* @return true if the column is a signed number
* @exception sqlexception if a database-access error occurs.
*/
public boolean issigned int column  throws sqlexception
throw new sqlexception
/**
* what's the column's normal maximum width in chars?
*
* @param column the first column is 1, the second is 2, ...
* @return the column's maximum width
* @exception sqlexception if a database-access error occurs.
*/
public  int getcolumndisplaysize int column  throws sqlexception
throw new sqlexception
/**
* what's the suggested column title for use in printouts and
* displays?
*
* @param column the first column is 1, the second is 2, ...
* @return the column's title
* @exception sqlexception if a database-access error occurs.
*/
public string getcolumnlabel int column  throws sqlexception
throw new sqlexception
/**
* what's a column's name?
*
* @param column the first column is 1, the second is 2, ...
* @return column name
* @exception sqlexception if a database-access error occurs.
*/
public string getcolumnname int column  throws sqlexception
throw new sqlexception
/**
* what's a column's table's schema?
*
* @param column the first column is 1, the second is 2, ...
* @return schema name or "" if not applicable
* @exception sqlexception if a database-access error occurs.
*/
public  string getschemaname int column  throws sqlexception
throw new sqlexception
/**
* how many decimal digits are in the column?
*
* @param column the first column is 1, the second is 2, ...
* @return the column's precision
* @exception sqlexception if a database-access error occurs.
*/
public int getprecision int column  throws sqlexception
throw new sqlexception
/**
* what's a column's number of digits to the right of the decimal point?
*
* @param column the first column is 1, the second is 2, ...
* @return the column's scale
* @exception sqlexception if a database-access error occurs.
*/
public  int getscale int column  throws sqlexception
throw new sqlexception
/**
* what's a column's table name?
*
* @param column the first column is 1, the second is 2, ...
* @return the column's table name or "" if not applicable
* @exception sqlexception if a database-access error occurs.
*/
public  string gettablename int column  throws sqlexception
throw new sqlexception
/**
* what's a column's table's catalog name?
*
* @param column the first column is 1, the second is 2, ...
* @return the column's table's catalog name or "" if not applicable.
* @exception sqlexception if a database-access error occurs.
*/
public string getcatalogname int column  throws sqlexception
throw new sqlexception
/**
* what's a column's data source specific type name?
*
* @param column the first column is 1, the second is 2, ...
* @return the column's type name
* @exception sqlexception if a database-access error occurs.
*/
public  string getcolumntypename int column  throws sqlexception
throw new sqlexception
/**
* is a column definitely not writable?
*
* @param column the first column is 1, the second is 2, ...
* @return true - vti's are read only
*         false - column is not read-only
* @exception sqlexception if a database-access error occurs.
*/
public  boolean isreadonly int column  throws sqlexception
return true
/**
* is it possible for a write on the column to succeed?
*
* @param column the first column is 1, the second is 2, ...
* @return true if column is possibly writable
* @exception sqlexception if a database-access error occurs.
*/
public  boolean iswritable int column  throws sqlexception
return false
/**
* will a write on the column definitely succeed?
*
* @param column the first column is 1, the second is 2, ...
* @return true if column is definitely writable
* @exception sqlexception if a database-access error occurs.
*/
public boolean isdefinitelywritable int column  throws sqlexception
return false
/*
** jdbc 2.0
*/
/**
* returns the fully-qualified name of the java class whose instances
* are manufactured if the method <code>resultset.<!-- -->getobject</code>
* is called to retrieve a value from the column. jdbc 2.0.
*
* @exception sqlexception if a database-access error occurs
*/
public string getcolumnclassname int column  throws sqlexception
throw new sqlexception