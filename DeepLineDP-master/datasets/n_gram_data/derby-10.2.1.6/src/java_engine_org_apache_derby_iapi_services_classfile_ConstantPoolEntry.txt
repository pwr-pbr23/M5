/*
derby - class org.apache.derby.iapi.services.classfile.constantpoolentry
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi services classfile
import org apache derby iapi services classfile vmdescriptor
import org apache derby iapi services sanity sanitymanager
import java io ioexception
/** constant pool class - pages 92-99 */
public abstract class constantpoolentry   implements poolentry
protected int tag     u1  page 83
protected boolean doubleslot     some entries take up two slots   see footnote page 98
/* index within vector */
protected int index
protected constantpoolentry int tag
this tag   tag
int getindex
if  sanitymanager debug
if  index <  0
sanitymanager throwassert     index
return index
void setindex int index
this index   index
boolean doubleslot
return doubleslot
/**
return the key used to key this object in a hashtable
*/
object getkey
return this
/**
return an estimate of the size of the constant pool entry.
*/
abstract int classfilesize
void put classformatoutput out  throws ioexception
out putu1 tag
/*
** public api methods
*/
/**
return the tag or type of the entry. will be equal to one of the
constants above, e.g. constant_class.
*/
final int gettag
return tag
/**
get the first index in a index type pool entry.
this call is valid when gettag() returns one of
<ul>
<li> constant_class
<li> constant_fieldref
<li> constant_methodref
<li> constant_interfacemethodref
<li> constant_string
<li> constant_nameandtype
</ul>
*/
int geti1     return 0
/**
get the second index in a index type pool entry.
this call is valid when gettag() returns one of
<ul>
<li> constant_fieldref
<li> constant_methodref
<li> constant_interfacemethodref
<li> constant_nameandtype
</ul>
*/
int geti2     return 0