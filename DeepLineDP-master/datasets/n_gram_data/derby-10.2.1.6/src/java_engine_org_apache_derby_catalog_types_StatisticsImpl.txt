/*
derby - class org.apache.derby.catalog.types.statisticsimpl
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby catalog types
import org apache derby catalog statistics
import org apache derby iapi services io formatable
import org apache derby iapi services io storedformatids
import org apache derby iapi services io formatablehashtable
import org apache derby iapi services io formatablelongholder
import java io objectoutput
import java io objectinput
import java io ioexception
public class statisticsimpl	implements statistics  formatable
/* total count of rows for which this statistic was created-- this
is not the same as the total number of rows in the conglomerate
currently, but a snapshot; i.e the  number of rows when this
statistic was created/updated.
*/
private long numrows
/* total count of unique values for the keys
*/
private long numunique
/**
* constructor for statisticsimpl.
*
* @param numrows	number of rows in the conglomerate for which
* this statistic is being created.
* @param numunique number of unique values in the key for which
* this statistic is being created.
*/
public statisticsimpl long numrows  long numunique
this numrows   numrows
this numunique   numunique
/** zero argument constructor for formatable interface */
public statisticsimpl
/** @see statistics#selectivity */
public double selectivity object predicates
if  numrows    0 0
return 0 1
/* xxxstatresolve: for small values of numrows, should we do something
* special?
*/
return  double  1  double numunique
/*------------------ externalizable interface ------------------*/
/**
* @see java.io.externalizable#readexternal
*/
public void readexternal objectinput in
throws ioexception  classnotfoundexception
formatablehashtable fh    formatablehashtable in readobject
numrows   fh getlong
numunique   fh getlong
/**
* write this object to a stream of stored objects.
*
* @param out write bytes here.
*
* @exception ioexception		thrown on error
*/
public void writeexternal objectoutput out
throws ioexception
formatablehashtable fh   new formatablehashtable
fh putlong    numrows
fh putlong    numunique
out writeobject fh
/*------------------- formatable interface ------------------*/
/**
* @return the format id which corresponds to this class.
*/
public int gettypeformatid
return storedformatids statistics_impl_v01_id
/** @see java.lang.object#tostring */
public string tostring
return     numunique       numrows