/*
derby - class org.apache.derby.impl.sql.compile.tableelementnode
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package	org apache derby impl sql compile
import org apache derby iapi services sanity sanitymanager
/**
* a tableelementnode is an item in a tableelementlist, and represents
* a single table element such as a column or constraint in a create table
* or alter table statement.
*
* @author jeff lichtman
*/
public class tableelementnode extends querytreenode
/////////////////////////////////////////////////////////////////////////
//
//	constants
//
/////////////////////////////////////////////////////////////////////////
public	static	final	int	at_unknown						  0
public	static	final	int	at_add_foreign_key_constraint	  1
public	static	final	int	at_add_primary_key_constraint	  2
public	static	final	int	at_add_unique_constraint		  3
public	static	final	int	at_add_check_constraint			  4
public	static	final	int	at_drop_constraint				  5
public	static	final	int	at_modify_column				  6
public	static	final	int	at_drop_column					  7
/////////////////////////////////////////////////////////////////////////
//
//	state
//
/////////////////////////////////////////////////////////////////////////
string	name
int		elementtype 	   simple element nodes can share this class
// eg., drop column and rename table/column/index
// etc., no need for more classes, an effort to
// minimize footprint
/////////////////////////////////////////////////////////////////////////
//
//	behavior
//
/////////////////////////////////////////////////////////////////////////
/**
* initializer for a tableelementnode
*
* @param name	the name of the table element, if any
*/
public void init object name
this name    string  name
/**
* initializer for a tableelementnode
*
* @param name	the name of the table element, if any
*/
public void init object name  object elementtype
this name    string  name
this elementtype     integer  elementtype  intvalue
/**
* convert this object to a string.  see comments in querytreenode.java
* for how this should be done for tree printing.
*
* @return	this object as a string
*/
public string tostring
if  sanitymanager debug
return     name
super tostring
else
return
/**
* does this element have a primary key constraint.
*
* @return boolean	whether or not this element has a primary key constraint
*/
boolean hasprimarykeyconstraint
return false
/**
* does this element have a unique key constraint.
*
* @return boolean	whether or not this element has a unique key constraint
*/
boolean hasuniquekeyconstraint
return false
/**
* does this element have a foreign key constraint.
*
* @return boolean	whether or not this element has a foreign key constraint
*/
boolean hasforeignkeyconstraint
return false
/**
* does this element have a check constraint.
*
* @return boolean	whether or not this element has a check constraint
*/
boolean hascheckconstraint
return false
/**
* does this element have a constraint on it.
*
* @return boolean	whether or not this element has a constraint on it
*/
boolean hasconstraint
return false
/**
* get the name from this node.
*
* @return string	the name.
*/
public string getname
return name
/**
*	get the type of this table element.
*
*	@return	one of the constants at the front of this file
*/
int	getelementtype
if   hasforeignkeyconstraint       return at_add_foreign_key_constraint
else if   hasprimarykeyconstraint       return at_add_primary_key_constraint
else if   hasuniquekeyconstraint       return at_add_unique_constraint
else if   hascheckconstraint       return at_add_check_constraint
else if   this instanceof constraintdefinitionnode     return at_drop_constraint
else if   this instanceof modifycolumnnode     return at_modify_column
else   return elementtype