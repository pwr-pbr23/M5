/*
derby - class org.apache.derby.impl.services.reflect.reflectclassesjava2
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl services reflect
import org apache derby iapi util bytearray
/**
relfect loader with privileged block for java 2 security.
*/
public final class reflectclassesjava2 extends databaseclasses
implements java security privilegedaction
private java util hashmap precompiled
private int action    1
synchronized loadedgeneratedclass loadgeneratedclassfromdata string fullyqualifiedname  bytearray classdump
if  classdump    null    classdump getarray      null
if  precompiled    null
precompiled   new java util hashmap
else
reflectgeneratedclass gc    reflectgeneratedclass  precompiled get fullyqualifiedname
if  gc    null
return gc
// not a generated class, just load the class directly.
try
class jvmclass   class forname fullyqualifiedname
reflectgeneratedclass gc   new reflectgeneratedclass this  jvmclass  null
precompiled put fullyqualifiedname  gc
return gc
catch  classnotfoundexception cnfe
throw new noclassdeffounderror cnfe tostring
action   1
return   reflectloaderjava2  java security accesscontroller doprivileged this   loadgeneratedclass fullyqualifiedname  classdump
public final object run
try
// security permission - mp2
switch  action
case 1
return new reflectloaderjava2 getclass   getclassloader    this
case 2
return thread currentthread   getcontextclassloader
default
return null
finally
action    1
class loadclassnotindatabasejar string name  throws classnotfoundexception
class foundclass   null
// we may have two problems with calling  getcontextclassloader()
// when trying to find our own classes for aggregates.
// 1) if using the urlclassloader a classnotfoundexception may be
//    thrown (beetle 5002).
// 2) if cloudscape is loaded with jni, getcontextclassloader()
//    may return null. (beetle 5171)
//
// if this happens we need to user the class loader of this object
// (the classloader that loaded cloudscape).
// so we call class.forname to ensure that we find the class.
try
classloader cl
synchronized this
action   2
cl     classloader
java security accesscontroller doprivileged this
foundclass    cl    null  ?  cl loadclass name
class forname name
catch  classnotfoundexception cnfe
foundclass   class forname name
return foundclass