/*
derby - class org.apache.derby.impl.store.raw.data.allocationactions
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl store raw data
import org apache derby iapi store raw xact rawtransaction
import org apache derby iapi error standardexception
/**
this interface describe the operations that has to do with page
allocation/deallocation.  this interface is used for a special
allocation page that records the allocation information and dispense the
allocation policy.
*/
public interface allocationactions
/**
set the allocation status of pagenumber to dostatus.  to undo this
operation, set the allocation status of pagenumber to undostatus
@param t				the transaction
@param allocpage		the allocation page
@param pagenumber		the page to allocation or deallocation
@param dostatus			set the allocation status of the page this value
@param undostatus		on undo, set the allocation status of the page
this value
@exception standardexception	standard cloudscape error policy
*/
public void actionallocatepage rawtransaction t  basepage allocpage
long pagenumber  int dostatus  int undostatus
throws standardexception
/**
chain one allocation page to the next.
@param t				the transaction
@param allocpage		the allocation page whose next page chain needs
to be changed
@param pagenumber		the next allocation page's number
@param pageoffset		the next allocation page's page offset
@exception standardexception	standard cloudscape error policy
*/
public void actionchainallocpage rawtransaction t  basepage allocpage
long pagenumber  long pageoffset
throws standardexception
/**
* compress free pages.
* <p>
* compress the free pages at the end of the range maintained by
* this allocation page.  all pages being compressed should be free.
* only pages in the last allocation page can be compressed.
* <p>
*
* @param t				        the transaction
* @param allocpage		        the allocation page to do compress on.
* @param new_highest_page      the new highest page on this allocation
*                              page.  the number is the offset of the page
*                              in the array of pages maintained by this
*                              allocation page, for instance a value of 0
*                              indicates all page except the first one are
*                              to be truncated.  if all pages are
*                              truncated then the offset is set to -1.
* @param num_pages_truncated   the number of allocated pages in this
*                              allocation page prior to the truncate.
*                              note that all pages from newhighestpage+1
*                              through newhighestpage+num_pages_truncated
*                              should be free.
*
* @exception  standardexception  standard exception policy.
**/
public void actioncompressspaceoperation
rawtransaction  t
basepage        allocpage
int             new_highest_page
int             num_pages_truncated
throws standardexception