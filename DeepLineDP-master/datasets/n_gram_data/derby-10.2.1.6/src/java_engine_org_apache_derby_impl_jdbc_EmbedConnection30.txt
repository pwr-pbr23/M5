/*
derby - class org.apache.derby.impl.jdbc.embedconnection30
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl jdbc
import org apache derby iapi error standardexception
import org apache derby iapi sql conn statementcontext
import org apache derby impl jdbc embedconnection
import org apache derby impl jdbc util
import org apache derby jdbc internaldriver
import org apache derby iapi reference sqlstate
import org apache derby iapi reference limits
import org apache derby iapi error exceptionseverity
import java sql savepoint
import java sql sqlexception
import java util properties
import java util vector
/**
* this class extends the embedconnection20 class in order to support new
* methods and classes that come with jdbc 3.0.
<p><b>supports</b>
<ul>
<li> jsr169 - subsetting only removes gettypemap and settypemap, which references
java.util.map which exists in foundation and ee.miniumum. thus the methods can
safely be left in the implementation for jsr169.
<li> jdbc 3.0 - separate from jdbc 2.0 implementation as jdbc 3.0 introduces
a new class java.sql.savepoint, which is referenced by java.sql.connection.
</ul>
*
* @see org.apache.derby.impl.jdbc.embedconnection
*
*/
public class embedconnection30 extends embedconnection
//////////////////////////////////////////////////////////
// constructors
//////////////////////////////////////////////////////////
public embedconnection30
internaldriver driver
string url
properties info
throws sqlexception
super driver  url  info
public embedconnection30
embedconnection inputconnection
super inputconnection
/////////////////////////////////////////////////////////////////////////
//
//	jdbc 3.0	-	new public methods
//
/////////////////////////////////////////////////////////////////////////
/**
* creates an unnamed savepoint in the current transaction and
* returns the new savepoint object that represents it.
*
*
* @return  the new savepoint object
*
* @exception sqlexception if a database access error occurs or
* this connection object is currently in auto-commit mode
*/
public savepoint setsavepoint
throws sqlexception
return commonsetsavepointcode null  false
/**
* creates a savepoint with the given name in the current transaction and
* returns the new savepoint object that represents it.
*
*
* @param name  a string containing the name of the savepoint
*
* @return  the new savepoint object
*
* @exception sqlexception if a database access error occurs or
* this connection object is currently in auto-commit mode
*/
public savepoint setsavepoint
string name
throws sqlexception
return commonsetsavepointcode name  true
/**
* creates a savepoint with the given name(if it is a named savepoint else we will generate a name
* becuase cloudscape only supports named savepoints internally) in the current transaction and
* returns the new savepoint object that represents it.
*
* @param name  a string containing the name of the savepoint. will be null if this is an unnamed savepoint
* @param usersuppliedsavepointname  if true means it's a named user defined savepoint.
*
* @return  the new savepoint object
*/
private savepoint commonsetsavepointcode string name  boolean usersuppliedsavepointname  throws sqlexception
synchronized  getconnectionsynchronization
setupcontextstack
try
verifysavepointcommandisallowed
if  usersuppliedsavepointname     name    null    make sure that if it is a named savepoint then supplied name is not null
throw newsqlexception sqlstate null_name_for_savepoint
//make sure that if it is a named savepoint then supplied name length is not > 128
if  usersuppliedsavepointname     name length   > limits max_identifier_length
throw newsqlexception sqlstate lang_identifier_too_long  name  string valueof limits max_identifier_length
if  usersuppliedsavepointname    name startswith       to enforce db2 restriction which is savepoint name can't start with sys
throw newsqlexception sqlstate invalid_schema_sys
savepoint savept   new embedsavepoint30 this  name
return savept
catch  standardexception e
throw handleexception e
finally
restorecontextstack
/**
* undoes all changes made after the given savepoint object was set.
* this method should be used only when auto-commit has been disabled.
*
*
* @param savepoint  the savepoint object to rollback to
*
* @exception sqlexception  if a database access error occurs,
* the savepoint object is no longer valid, or this connection
* object is currently in auto-commit mode
*/
public void rollback
savepoint savepoint
throws sqlexception
synchronized  getconnectionsynchronization
setupcontextstack
try
verifysavepointcommandisallowed
verifysavepointarg savepoint
//need to cast and get the name because jdbc3 spec doesn't support names for
//unnamed savepoints but cloudscape keeps names for named & unnamed savepoints.
getlanguageconnection   internalrollbacktosavepoint   embedsavepoint30 savepoint  getinternalname   true  savepoint
catch  standardexception e
throw handleexception e
finally
restorecontextstack
/**
* removes the given savepoint object from the current transaction.
* any reference to the savepoint after it has been removed will cause
* an sqlexception to be thrown
*
*
* @param savepoint  the savepoint object to be removed
*
* @exception sqlexception  if a database access error occurs or the
* given savepoint object is not a valid savepoint in the current transaction
*/
public void releasesavepoint
savepoint savepoint
throws sqlexception
synchronized  getconnectionsynchronization
setupcontextstack
try
verifysavepointcommandisallowed
verifysavepointarg savepoint
//need to cast and get the name because jdbc3 spec doesn't support names for
//unnamed savepoints but cloudscape keeps name for named & unnamed savepoints.
getlanguageconnection   releasesavepoint   embedsavepoint30 savepoint  getinternalname    savepoint
catch  standardexception e
throw handleexception e
finally
restorecontextstack
// used by setsavepoint to check autocommit is false and not inside the trigger code
private void verifysavepointcommandisallowed   throws sqlexception
if  autocommit
throw newsqlexception sqlstate no_savepoint_when_auto
//bug 4507 - savepoint not allowed inside trigger
statementcontext stmtctxt   getlanguageconnection   getstatementcontext
if  stmtctxt   null    stmtctxt intrigger
throw newsqlexception sqlstate no_savepoint_in_trigger
// used by release/rollback to check savepoint argument
private void verifysavepointarg savepoint savepoint  throws sqlexception
//bug 4451 - check for null savepoint
embedsavepoint30 lsv    embedsavepoint30  savepoint
// bug 4451 need to throw error for null savepoint
if  lsv    null
throw
util generatecssqlexception sqlstate xact_savepoint_not_found
//bug 4468 - verify that savepoint rollback is for a savepoint from the current
// connection
if   lsv sameconnection this
throw newsqlexception sqlstate xact_savepoint_release_rollback_fail
return