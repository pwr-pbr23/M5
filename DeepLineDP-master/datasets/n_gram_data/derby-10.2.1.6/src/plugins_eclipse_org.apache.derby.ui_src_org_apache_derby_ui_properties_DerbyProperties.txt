/*
derby - class org.apache.derby.ui.properties.derbyproperties
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby ui properties
import org apache derby ui common commonnames
import org eclipse core resources iproject
import org eclipse core runtime coreexception
import org eclipse core runtime qualifiedname
import org eclipse jdt core ijavaproject
public class derbyproperties
public static final string dsport
//public static final string ds_running_port = "ds.running.port";
public static final string dshost
public static final string ds_sys_home
//default derby properties
private int port   1527
//private int runningport=0;
private string host
private string systemhome
public derbyproperties
public derbyproperties ijavaproject javaproject  throws coreexception
load javaproject getproject
public derbyproperties iproject project  throws coreexception
load project
public void save iproject project  throws coreexception
project setpersistentproperty new qualifiedname
commonnames ui_path  dsport   integer tostring port
project setpersistentproperty new qualifiedname
commonnames ui_path  dshost   host
project setpersistentproperty new qualifiedname
commonnames ui_path  ds_sys_home   systemhome
//		project.setpersistentproperty(new qualifiedname (
//				commonnames.ui_path, ds_running_port), integer.tostring(runningport));
public void load iproject project  throws coreexception
string property   project getpersistentproperty new qualifiedname
commonnames ui_path  dsport
port    property    null    property length   > 0  ? integer parseint property    port
property   project getpersistentproperty new qualifiedname
commonnames ui_path  dshost
host    property    null    property length   > 0  ? property   host
property   project getpersistentproperty new qualifiedname
commonnames ui_path  ds_sys_home
systemhome    property    null    property length   > 0  ? property   systemhome
//		property = project.getpersistentproperty(new qualifiedname (
//				commonnames.ui_path, ds_running_port));
//		runningport = (property != null && property.length() > 0) ? integer.parseint(property) : runningport;
public string tostring
return   getport     gethost     getsystemhome
/**
* @return returns the host.
*/
public string gethost
return host
/**
* @param host the host to set.
*/
public void sethost string host
this host   host
/**
* @return returns the port.
*/
public int getport
return port
/**
* @param port the port to set.
*/
public void setport int port
this port   port
/**
* @return returns the systemhome.
*/
public string getsystemhome
return systemhome
/**
* @param systemhome the systemhome to set.
*/
public void setsystemhome string systemhome
this systemhome   systemhome