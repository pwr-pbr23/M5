/*
derby - class org.apache.derby.impl.sql.execute.dmlvtiresultset
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi error standardexception
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql execute execrow
import org apache derby iapi sql execute noputresultset
import org apache derby iapi sql activation
import org apache derby iapi sql resultdescription
import org apache derby iapi store access transactioncontroller
import java sql preparedstatement
import java sql resultset
/**
* base class for insert, delete & updatevtiresultset
*/
abstract class dmlvtiresultset extends dmlwriteresultset
// passed in at construction time
noputresultset sourceresultset
noputresultset savedsource
updatablevticonstantaction	constants
transactioncontroller 	tc
resultdescription 		resultdescription
private int						numopens
boolean				firstexecute
/**
* returns the description of the inserted rows.
* revisit: do we want this to return null instead?
*/
public resultdescription getresultdescription
return resultdescription
/**
*
* @exception standardexception		thrown on error
*/
dmlvtiresultset noputresultset source
activation activation
throws standardexception
super activation
sourceresultset   source
constants    updatablevticonstantaction  constantaction
tc   activation gettransactioncontroller
resultdescription   sourceresultset getresultdescription
/**
@exception standardexception standard cloudscape error policy
*/
public void open   throws standardexception
// remember if this is the 1st execution
firstexecute    numopens    0
rowcount   0
if  numopens      0
sourceresultset opencore
else
sourceresultset reopencore
opencore
/* cache query plan text for source, before it gets blown away */
if  lcc getruntimestatisticsmode
/* savedsource nulled after run time statistics generation */
savedsource   sourceresultset
cleanup
endtime   getcurrenttimemillis
end of open
protected abstract void opencore   throws standardexception
/**
* @see org.apache.derby.iapi.sql.resultset#cleanup
*
* @exception standardexception		thrown on error
*/
public void	cleanup   throws standardexception
/* close down the source resultset tree */
if  null    sourceresultset
sourceresultset close
numopens   0
super close
end of cleanup
public void finish   throws standardexception
sourceresultset finish
super finish
end of finish