/*
derby - class org.apache.derby.impl.sql.compile.referencedtablesvisitor
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package	org apache derby impl sql compile
import org apache derby iapi sql compile visitable
import org apache derby iapi sql compile visitor
import org apache derby iapi error standardexception
import org apache derby iapi util jbitset
/**
* build a jbitset of all of the referenced tables in the tree.
*
* @author jerry
*/
public class referencedtablesvisitor implements visitor
private jbitset tablemap
public referencedtablesvisitor jbitset tablemap
this tablemap   tablemap
////////////////////////////////////////////////
//
// visitor interface
//
////////////////////////////////////////////////
/**
* don't do anything unless we have a columnreference,
* predicate or resultsetnode node.
*
* @param node 	the node to process
*
* @return me
*
* @exception standardexception on error
*/
public visitable visit visitable node
throws standardexception
if  node instanceof columnreference
columnreference node  gettablesreferenced tablemap
else if  node instanceof predicate
predicate pred    predicate  node
tablemap or pred getreferencedset
else if  node instanceof resultsetnode
resultsetnode rs    resultsetnode  node
tablemap or rs getreferencedtablemap
return node
/**
* no need to go below a predicate or resultset.
*
* @return whether or not to go below the node.
*/
public boolean skipchildren visitable node
return  node instanceof predicate
node instanceof resultsetnode
public boolean stoptraversal
return false
////////////////////////////////////////////////
//
// class interface
//
////////////////////////////////////////////////
jbitset gettablemap
return tablemap