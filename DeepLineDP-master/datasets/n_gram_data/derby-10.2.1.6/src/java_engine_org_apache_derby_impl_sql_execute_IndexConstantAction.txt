/*
derby - class org.apache.derby.impl.sql.execute.indexconstantaction
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi error standardexception
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql dictionary conglomeratedescriptor
import org apache derby iapi sql dictionary constraintdescriptor
import org apache derby iapi sql dictionary datadescriptorgenerator
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary datadictionarycontext
import org apache derby iapi sql dictionary schemadescriptor
import org apache derby iapi sql dictionary tabledescriptor
import org apache derby iapi sql execute constantaction
import org apache derby iapi store access transactioncontroller
import org apache derby catalog uuid
/**
*	this class is the superclass for the classes that describe actions
*  that are always performed for a create/drop index statement at execution time.
*
*	@author jerry brenner
*/
public abstract class indexconstantaction extends ddlsingletableconstantaction
string				indexname
string				tablename
string				schemaname
// constructors
/**
*	make the constantaction for a create/drop index statement.
*
*	@param	tableid				the table uuid
*	@param	indexname			index name.
*	@param	tablename			the table name
*	@param	schemaname					schema that index lives in.
*
*/
protected	indexconstantaction
uuid				tableid
string				indexname
string				tablename
string schemaname
super tableid
this indexname   indexname
this tablename   tablename
this schemaname   schemaname
if  sanitymanager debug
sanitymanager assert schemaname    null
// class methods
/**
*	get the index name.
*
*	@return	the name of the index
*/
public	string	getindexname     return indexname
/**
* set the index name at execution time.
* useful for unnamed constraints which have a backing index.
*
* @param indexname		the (generated) index name.
*/
public void setindexname string indexname
this indexname   indexname