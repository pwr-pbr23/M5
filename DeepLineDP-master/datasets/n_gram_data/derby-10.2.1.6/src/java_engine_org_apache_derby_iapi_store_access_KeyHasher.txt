/*
derby - class org.apache.derby.iapi.store.access.keyhasher
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi store access
import org apache derby iapi services sanity sanitymanager
/**
provides the ability to hash on multiple objects.
*/
public class keyhasher
private final object objects
public keyhasher int size
objects   new object
/**
* set array element at the specified index to the specified object.
*
* @param index		the specified index
* @param object	the specified object.
*/
public void setobject int index  object object
objects   object
/**
* get the object stored at the specified index.
*
* @param index	the specified index.
*
* @return the object stored in the array element.
*/
public object getobject int index
return objects
/**
* static method to return the object to hash on.
* (object stored in specifed array, if only a single
* object, otherwise a keyhasher wrapping the
* objects to hash on.
* (note: we optimize for in-memory hash tables, hence
* we only create a wrapper when needed.)
*
* @param objects	the array of objects to consider
* @param indexes	the indexes of the objects in the hash key.
*
* @return	the object to hash on.
*/
public static object buildhashkey object objects
int indexes
// hash on single object
if  indexes length    1
return objects]
// hash on multiple objects
keyhasher mh   new keyhasher indexes length
for  int index   0  index < indexes length  index
mh setobject index  objects]
return mh
/*
** methods from java.lang.object
*/
public int hashcode
int retval   0
for  int index   0  index < objects length  index
retval    objects hashcode
return retval
public boolean equals object obj
if    obj instanceof keyhasher
return false
keyhasher mh    keyhasher  obj
if  mh objects length    objects length
return false
for  int index   0  index < objects length  index
if     mh objects equals objects
return false
return true