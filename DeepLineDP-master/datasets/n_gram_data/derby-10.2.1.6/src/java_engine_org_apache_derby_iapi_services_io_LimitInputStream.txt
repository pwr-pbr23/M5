/*
derby - class org.apache.derby.iapi.services.io.limitinputstream
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi services io
import java io inputstream
import java io filterinputstream
import java io ioexception
/**
an abstract inputstream that provides abstract methods to limit the range that
can be read from the stream.
*/
public class limitinputstream extends filterinputstream implements limit
protected int remainingbytes
protected boolean limitinplace
/**
construct a limitinputstream and call the clearlimit() method.
*/
public limitinputstream inputstream in
super in
clearlimit
public int read   throws ioexception
if   limitinplace
return super read
if  remainingbytes    0
return  1     end of file
int value   super read
if  value >  0
remainingbytes
return value
public int read byte b  int off  int len  throws ioexception
if   limitinplace
return super read b  off  len
if  remainingbytes    0
return  1
if  remainingbytes < len
len   remainingbytes     end of file
len   super read b  off  len
if  len > 0
remainingbytes    len
return len
public long skip long count   throws ioexception
if   limitinplace
return super skip count
if  remainingbytes    0
return 0     end of file
if  remainingbytes < count
count   remainingbytes
count   super skip count
remainingbytes    count
return count
public int available   throws ioexception
if   limitinplace
return super available
if  remainingbytes    0
return 0     end of file
int actualleft   super available
if  remainingbytes < actualleft
return remainingbytes
return actualleft
/**
set the limit of the stream that can be read. after this
call up to and including length bytes can be read from or skipped in
the stream. any attempt to read more than length bytes will
result in an eofexception
@exception ioexception ioexception from some underlying stream
@exception eofexception the set limit would exceed
the available data in the stream.
*/
public void setlimit int length
remainingbytes   length
limitinplace   true
return
/**
clear any limit set by setlimit. after this call no limit checking
will be made on any read until a setlimit()) call is made.
@return the number of bytes within the limit that have not been read.
-1 if no limit was set.
*/
public int clearlimit
int leftover   remainingbytes
limitinplace   false
remainingbytes    1
return leftover
public void setinput inputstream in
this in   in