/*
derby - class org.apache.derby.iapi.services.classfile.constant_index_info
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi services classfile
import org apache derby iapi services classfile vmdescriptor
import java io ioexception
/**
a generic constant pool entry for entries that simply hold indexes
into other entries.
<br>
ref constant pool entry  - page 94 - section 4.4.2	- two indexes
<br>
nameandtype constant pool entry  - page 99 - section 4.4.6 - two indexes
<br>
string constant pool entry - page 96 - section 4.4.3 - one index
<br>
class reference constant pool entry - page 93 - section 4.4.1 - one index
*/
public final class constant_index_info extends constantpoolentry
private int i1
private int i2
constant_index_info int tag  int i1  int i2
super tag
this i1   i1
this i2   i2
public int hashcode
return  tag << 16      i1 << 8  ^ i2
public boolean equals object other
if  other instanceof constant_index_info
constant_index_info o    constant_index_info  other
return  tag    o tag      i1    o i1      i2    o i2
return false
/**
used when searching
*/
void set int tag  int i1  int i2
this tag   tag
this i1   i1
this i2   i2
int classfilesize
// 1 (tag) + 2 (index length) [ + 2 (index length) ]
return 1   2     i2    0  ? 2   0
void put classformatoutput out  throws ioexception
super put out
out putu2 i1
if  i2    0
out putu2 i2
public int geti1     return i1
public int geti2     return i2