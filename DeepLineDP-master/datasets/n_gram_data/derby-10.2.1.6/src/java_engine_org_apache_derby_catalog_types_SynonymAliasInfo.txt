/*
derby - class org.apache.derby.catalog.types.synonymaliasinfo
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby catalog types
import org apache derby iapi services io formatable
import org apache derby iapi services io storedformatids
import org apache derby catalog aliasinfo
import java io ioexception
import java io objectinput
import java io objectoutput
/**
* describe an s (synonym) alias.
*
* @see aliasinfo
*/
public class synonymaliasinfo implements aliasinfo  formatable
private string schemaname   null
private string tablename   null
public synonymaliasinfo
/**
create a synonymaliasinfo for synonym.
*/
public synonymaliasinfo string schemaname  string tablename
this schemaname   schemaname
this tablename   tablename
public string getsynonymtable
return tablename
public string getsynonymschema
return schemaname
// formatable methods
/**
* read this object from a stream of stored objects.
*
* @param in read this.
*
* @exception ioexception					thrown on error
* @exception classnotfoundexception		thrown on error
*/
public void readexternal  objectinput in
throws ioexception  classnotfoundexception
schemaname    string  in readobject
tablename    string  in readobject
/**
* write this object to a stream of stored objects.
*
* @param out write bytes here.
*
* @exception ioexception		thrown on error
*/
public void writeexternal  objectoutput out
throws ioexception
out writeobject schemaname
out writeobject tablename
/**
* get the formatid which corresponds to this class.
*
*	@return	the formatid of this class
*/
public	int	gettypeformatid  	  return storedformatids synonym_info_v01_id
public string tostring
return
public string getmethodname
return null