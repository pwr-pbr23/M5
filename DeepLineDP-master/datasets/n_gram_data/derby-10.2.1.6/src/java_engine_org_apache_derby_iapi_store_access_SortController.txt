/*
derby - class org.apache.derby.iapi.store.access.sortcontroller
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi store access
import org apache derby iapi types cloneableobject
import org apache derby iapi types datavaluedescriptor
import org apache derby iapi error standardexception
/**
a sort controller is an interface for inserting rows
into a sort.
<p>
a sort is created with the createsort method of
transactioncontroller. the rows are read back with
a scan controller returned from the opensortscan
method of transcationcontroller.
@see transactioncontroller#opensort
@see scancontroller
**/
public interface sortcontroller
/**
close this sort controller.
<p>
currently, since only one sort controller is allowed per sort,
closing the sort controller means the last row has been
inserted.
**/
void close
/**
insert a row into the sort.
@param row the row to insert into the conglomerate.  the stored
representations of the row's columns are copied into a new row
somewhere in the conglomerate.
@exception standardexception standard exception policy.
@see cloneableobject
**/
void insert datavaluedescriptor row
throws standardexception
/**
* return sortinfo object which contains information about the current
* state of the sort.
* <p>
*
* @see sortinfo
*
* @return the sortinfo object which contains info about current sort.
*
* @exception  standardexception  standard exception policy.
**/
sortinfo getsortinfo
throws standardexception