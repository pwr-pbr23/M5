/*
derby - class org.apache.derby.impl.store.raw.data.containerhandleactiononcommit
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl store raw data
import org apache derby iapi store raw containerhandle
import org apache derby iapi store raw containerlock
import org apache derby iapi store raw page
import org apache derby iapi store raw lockingpolicy
import org apache derby iapi store raw recordhandle
import org apache derby iapi store raw containerkey
import org apache derby iapi store raw data rawcontainerhandle
import org apache derby iapi store raw log loginstant
import org apache derby iapi store raw xact rawtransaction
import org apache derby iapi services locks lockable
import org apache derby catalog uuid
import org apache derby iapi error standardexception
import org apache derby iapi services sanity sanitymanager
/**
an abstract class that opens the container at commit and delegates
the actual work to a sub-class.
*/
public abstract class containerhandleactiononcommit extends containeractiononcommit
public containerhandleactiononcommit containerkey identity
super identity
/*
**	methods of observer
*/
/**
open the container and call the doit method
*/
public void opencontaineranddoit rawtransaction xact
basecontainerhandle handle   null
try
handle    basecontainerhandle  xact opencontainer identity   lockingpolicy  null
containerhandle mode_forupdate   containerhandle mode_no_actions_on_commit
// if the handle is null, the container may have been removed by a previous observer.
if  handle    null
try
doit handle
catch  standardexception se
xact setobserverexception se
catch  standardexception se
// if we get this exception, then the container is readonly.
// no problem if we can't open an closed temp container.
if  identity getsegmentid       containerhandle temporary_segment
xact setobserverexception se
finally
if  handle    null
handle close
protected abstract void doit basecontainerhandle handle
throws standardexception