/*
derby - class org.apache.derby.impl.sql.catalog.systablesrowfactory
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql catalog
import org apache derby iapi types datavaluedescriptor
import org apache derby iapi sql dictionary systemcolumn
import org apache derby iapi types datavaluefactory
import org apache derby iapi types rowlocation
import org apache derby iapi sql dictionary catalogrowfactory
import org apache derby iapi sql dictionary tupledescriptor
import org apache derby iapi sql dictionary datadescriptorgenerator
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary schemadescriptor
import org apache derby iapi sql dictionary tabledescriptor
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi sql execute execindexrow
import org apache derby iapi sql execute executionfactory
import org apache derby iapi sql execute execrow
import org apache derby iapi error standardexception
import org apache derby catalog uuid
import org apache derby iapi services uuid uuidfactory
/**
* factory for creating a systables row.
*
*
* @version 0.1
* @author rick hillegas (extracted from datadictionaryimpl).
*/
class systablesrowfactory extends catalogrowfactory
private static final string		tablename_string
protected static final int		systables_column_count   5
/* column #s for systables (1 based) */
protected static final int		systables_tableid   1
protected static final int		systables_tablename   2
protected static final int		systables_tabletype   3
protected static final int		systables_schemaid   4
protected static final int		systables_lockgranularity   5
protected static final int		systables_index1_id   0
protected static final int		systables_index1_tablename   1
protected static final int		systables_index1_schemaid   2
protected static final int		systables_index2_id   1
protected static final int		systables_index2_tableid   1
// all indexes are unique.
private	static	final	string	uuids
catalog uuid
heap uuid
systables_index1
systables_index2
private static final int indexcolumnpositions
systables_tablename  systables_schemaid
systables_tableid
/////////////////////////////////////////////////////////////////////////////
//
//	constructors
//
/////////////////////////////////////////////////////////////////////////////
systablesrowfactory uuidfactory uuidf  executionfactory ef  datavaluefactory dvf
boolean convertidtolower
super uuidf ef dvf convertidtolower
initinfo systables_column_count  tablename_string  indexcolumnpositions   boolean  null  uuids
/////////////////////////////////////////////////////////////////////////////
//
//	methods
//
/////////////////////////////////////////////////////////////////////////////
/**
* make a systables row
*
* @return	row suitable for inserting into systables.
*
* @exception   standardexception thrown on failure
*/
public execrow makerow tupledescriptor td
tupledescriptor	parent
throws standardexception
uuid						oid
string	   				tabstype   null
int	   					tabitype
execrow        			row
string					lockgranularity   null
string					tableid   null
string					schemaid   null
string					tablename   null
if  td    null
/*
** we only allocate a new uuid if the descriptor doesn't already have one.
** for descriptors replicated from a source system, we already have an uuid.
*/
tabledescriptor descriptor    tabledescriptor td
schemadescriptor schema    schemadescriptor parent
oid   descriptor getuuid
if   oid    null
oid   getuuidfactory   createuuid
descriptor setuuid oid
tableid   oid tostring
if  sanitymanager debug
sanitymanager assert schema    null
if  schema getuuid      null
sanitymanager throwassert     schema
schemaid   schema getuuid   tostring
tablename   descriptor getname
/* resolve - table type should really be a char in the descriptor
* t, s, v, s instead of 0, 1, 2, 3
*/
tabitype   descriptor gettabletype
switch  tabitype
case tabledescriptor base_table_type
tabstype
break
case tabledescriptor system_table_type
tabstype
break
case tabledescriptor view_type
tabstype
break
case tabledescriptor synonym_type
tabstype
break
default
if  sanitymanager debug
sanitymanager throwassert
char lockgchar   new char
lockgchar   descriptor getlockgranularity
lockgranularity   new string lockgchar
/* insert info into systables */
/* resolve - it would be nice to require less knowledge about systables
* and have this be more table driven.
*/
/* build the row to insert  */
row   getexecutionfactory   getvaluerow systables_column_count
/* 1st column is tableid (uuid - char(36)) */
row setcolumn systables_tableid  dvf getchardatavalue tableid
/* 2nd column is name (varchar(30)) */
row setcolumn systables_tablename  dvf getvarchardatavalue tablename
/* 3rd column is tabletype (char(1)) */
row setcolumn systables_tabletype  dvf getchardatavalue tabstype
/* 4th column is schemaid (uuid - char(36)) */
row setcolumn systables_schemaid  dvf getchardatavalue schemaid
/* 5th column is lockgranularity (char(1)) */
row setcolumn systables_lockgranularity  dvf getchardatavalue lockgranularity
return row
/**
* builds an empty index row.
*
*	@param	indexnumber	index to build empty row for.
*  @param  rowlocation	row location for last column of index row
*
* @return corresponding empty index row
* @exception   standardexception thrown on failure
*/
execindexrow	buildemptyindexrow  int indexnumber
rowlocation rowlocation
throws standardexception
int ncols   getindexcolumncount indexnumber
execindexrow row   getexecutionfactory   getindexablerow ncols   1
row setcolumn ncols   1  rowlocation
switch  indexnumber
case systables_index1_id
/* 1st column is tablename (varchar(128)) */
row setcolumn 1  getdatavaluefactory   getvarchardatavalue  string  null
/* 2nd column is schemaid (uuid - char(36)) */
row setcolumn 2  getdatavaluefactory   getchardatavalue  string  null
break
case systables_index2_id
/* 1st column is tableid (uuid - char(36)) */
row setcolumn 1  getdatavaluefactory   getchardatavalue  string  null
break
end switch
return	row
///////////////////////////////////////////////////////////////////////////
//
//	abstract methods to be implemented by children of catalogrowfactory
//
///////////////////////////////////////////////////////////////////////////
/**
* make a tabledescriptor out of a systables row
*
* @param row a systables row
* @param parenttupledescriptor	null for this kind of descriptor.
* @param dd datadictionary
*
* @return	a table descriptor equivalent to a systables row
*
* @exception   standardexception thrown on failure
*/
public tupledescriptor builddescriptor
execrow					row
tupledescriptor			parenttupledescriptor
datadictionary 			dd
throws standardexception
if  sanitymanager debug
sanitymanager assert row ncolumns      systables_column_count
datadescriptorgenerator ddg   dd getdatadescriptorgenerator
string	tableuuidstring
string	schemauuidstring
int		tabletypeenum
string	lockgranularity
string	tablename  tabletype
datavaluedescriptor	col
uuid		tableuuid
uuid		schemauuid
schemadescriptor	schema
tabledescriptor		tabdesc
/* 1st column is tableid (uuid - char(36)) */
col   row getcolumn systables_tableid
tableuuidstring   col getstring
tableuuid   getuuidfactory   recreateuuid tableuuidstring
/* 2nd column is tablename (varchar(128)) */
col   row getcolumn systables_tablename
tablename   col getstring
/* 3rd column is tabletype (char(1)) */
col   row getcolumn systables_tabletype
tabletype   col getstring
if  sanitymanager debug
sanitymanager assert tabletype length      1
switch  tabletype charat 0
case
tabletypeenum   tabledescriptor base_table_type
break
case
tabletypeenum   tabledescriptor system_table_type
break
case
tabletypeenum   tabledescriptor view_type
break
case
tabletypeenum   tabledescriptor synonym_type
break
default
if  sanitymanager debug
sanitymanager throwassert
tabletypeenum    1
/* 4th column is schemaid (uuid - char(36)) */
col   row getcolumn systables_schemaid
schemauuidstring   col getstring
schemauuid   getuuidfactory   recreateuuid schemauuidstring
schema   dd getschemadescriptor schemauuid  null
/* 5th column is lockgranularity (char(1)) */
col   row getcolumn systables_lockgranularity
lockgranularity   col getstring
if  sanitymanager debug
sanitymanager assert lockgranularity length      1
// resolve - deal with lock granularity
tabdesc   ddg newtabledescriptor tablename  schema  tabletypeenum  lockgranularity charat 0
tabdesc setuuid tableuuid
return tabdesc
/**
*	get the table name out of this systables row
*
* @param row a systables row
*
* @return	string, the table name
*
* @exception   standardexception thrown on failure
*/
protected string gettablename execrow	row
throws standardexception
datavaluedescriptor	col
col   row getcolumn systables_tablename
return col getstring
/**
* builds a list of columns suitable for creating this catalog.
*
*
* @return array of systemcolumn suitable for making this catalog.
*/
public systemcolumn	buildcolumnlist
systemcolumn			columnlist   new systemcolumn
// describe columns
columnlist   new systemcolumnimpl
convertidcase     			   column name
systables_tableid 	   column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
36					   maxlength
columnlist   new systemcolumnimpl 		   sqlidentifier
convertidcase     		   column name
systables_tablename  	   column number
false				   nullability
columnlist   new systemcolumnimpl
convertidcase     		   column name
systables_tabletype    column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
1					   maxlength
columnlist   new systemcolumnimpl
convertidcase     			   column name
systables_schemaid 	   schema number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
36					   maxlength
columnlist   new systemcolumnimpl
convertidcase     		   column name
systables_lockgranularity    column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
1					   maxlength
return	columnlist