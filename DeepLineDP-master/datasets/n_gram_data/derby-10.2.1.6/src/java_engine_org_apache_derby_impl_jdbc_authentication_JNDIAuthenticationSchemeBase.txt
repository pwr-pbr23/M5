/*
derby - class org.apache.derby.impl.jdbc.authentication.jndiauthenticationschemebase
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl jdbc authentication
import org apache derby iapi services context contextservice
import org apache derby iapi error standardexception
import org apache derby iapi store access accessfactory
import org apache derby iapi store access transactioncontroller
import org apache derby iapi jdbc authenticationservice
import org apache derby authentication userauthenticator
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi reference sqlstate
import org apache derby iapi error exceptionseverity
import org apache derby iapi reference messageid
import org apache derby iapi services i18n messageservice
import java util properties
import java util enumeration
import java sql sqlexception
/**
* this is the base jndi authentication scheme class.
*
* the generic environment jndi properties for the selected jndi
* scheme are retrieved here so that the user can set jndi properties
* at the database or system level.
*
* @see org.apache.derby.authentication.userauthenticator
*
*/
public abstract class jndiauthenticationschemebase implements userauthenticator
protected  final jndiauthenticationservice authenticationservice
protected string providerurl
private accessfactory store
protected properties initdircontextenv
//
// constructor
//
// we get passed some users properties if the authentication service
// could not set them as part of system properties.
//
public jndiauthenticationschemebase jndiauthenticationservice as  properties dbproperties
this authenticationservice   as
//
// let's initialize the directory context environment based on
// generic jndi properties. each jndi scheme can then add its
// specific scheme properties on top of it.
//
setinitdircontextenv dbproperties
// specify the ones for this scheme if not already specified
this setjndiproviderproperties
/**
* to be overriden by subclasses. this basically tests and sets
* default/expected jndi properties for the jndi provider scheme.
*
**/
abstract protected void setjndiproviderproperties
/**
* construct the initial jndi directory context environment properties
* object. we retrieve jndi environment properties that the user may
* have set at the database level.
*
**/
private void setinitdircontextenv properties dbprops
//
// we retrieve jndi properties set at the database level
// if any. if dbprops == null, there are obviously no database
// properties to retrieve.
//
initdircontextenv   new properties
if dbprops    null
for  enumeration keys   dbprops propertynames    keys hasmoreelements
string key    string  keys nextelement
if  key startswith
initdircontextenv put key  dbprops getproperty key
protected static final sqlexception getloginsqlexception exception e
string text   messageservice gettextmessage sqlstate login_failed  e
sqlexception sqle   new sqlexception
text  sqlstate login_failed  exceptionseverity session_severity
return sqle