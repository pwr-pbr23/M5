/*
derby - class org.apache.derby.impl.sql.compile.remapcrsvisitor
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package	org apache derby impl sql compile
import org apache derby iapi sql compile visitable
import org apache derby iapi sql compile visitor
import org apache derby iapi error standardexception
/**
* remap/unremap the crs to the underlying
* expression.
*
* @author jerry
*/
public class remapcrsvisitor implements visitor
private boolean remap
public remapcrsvisitor boolean remap
this remap   remap
////////////////////////////////////////////////
//
// visitor interface
//
////////////////////////////////////////////////
/**
* don't do anything unless we have a columnreference
* node.
*
* @param node 	the node to process
*
* @return me
*
* @exception standardexception on error
*/
public visitable visit visitable node
throws standardexception
/*
* remap all of the columnreferences in this expression tree
* to point to the resultcolumn that is 1 level under their
* current source resultcolumn.
* this is useful for pushing down single table predicates.
*/
if  node instanceof columnreference
columnreference cr    columnreference  node
if  remap
cr remapcolumnreferences
else
cr unremapcolumnreferences
return node
/**
* no need to go below a subquerynode.
*
* @return whether or not to go below the node.
*/
public boolean skipchildren visitable node
return  node instanceof subquerynode
public boolean stoptraversal
return false
////////////////////////////////////////////////
//
// class interface
//
////////////////////////////////////////////////