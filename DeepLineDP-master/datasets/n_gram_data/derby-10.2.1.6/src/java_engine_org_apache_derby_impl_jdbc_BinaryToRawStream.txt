/*
derby - class org.apache.derby.impl.jdbc.binarytorawstream
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl jdbc
import org apache derby iapi services sanity sanitymanager
import java io inputstream
import java io ioexception
import java io eofexception
/**
converts a stream containing the cloudscape stored binary form
to one that just contains the application's data.
simply read and save the length information.
*/
final class binarytorawstream
extends java io filterinputstream
/**
* length of the value represented by this stream.
* set to -1 if the length is unknown.
*/
private int length
// used by caller to insure that parent can not be gc'd until this
// stream is no longer being used.
private object          parent
binarytorawstream inputstream in  object parent
throws ioexception
super in
this parent       parent
int bl   in read
if  bl     1
throw new java io eofexception
if   bl   0x80     0
if  bl    0xc0
int v1   in read
int v2   in read
int v3   in read
int v4   in read
if  v1     1    v2     1    v3     1    v4     1
throw new java io eofexception
length      v1   0xff  << 24
v2   0xff  << 16
v3   0xff  << 8
v4   0xff
else if  bl    0xa0
// read an unsigned short
int v1   in read
int v2   in read
if  v1     1    v2     1
throw new java io eofexception
length      v1   0xff  << 8     v2   0xff
else
length   bl   0x1f
else
// old length in bits
int v2   in read
int v3   in read
int v4   in read
if  v2     1    v3     1    v4     1
throw new java io eofexception
int leninbits      bl   0xff  << 24      v2   0xff  << 16      v3   0xff  << 8     v4   0xff
length   leninbits   8
if   leninbits % 8     0
length
// signifies unknown length
if  length    0
length    1
/**
* return the length of the value in thie stream in bytes.
* if the value is unknown then -1 is returned.
*/
int getlength
return length