/*
derby - class org.apache.derby.impl.sql.compile.dropaliasnode
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package	org apache derby impl sql compile
import org apache derby iapi sql compile c_nodetypes
import org apache derby iapi services context contextmanager
import org apache derby iapi sql execute constantaction
import org apache derby iapi reference sqlstate
import org apache derby iapi error standardexception
import org apache derby iapi services monitor monitor
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi sql dictionary aliasdescriptor
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary schemadescriptor
import org apache derby catalog aliasinfo
/**
* a dropaliasnode  represents a drop alias statement.
*
* @author jerry brenner
*/
public class dropaliasnode extends ddlstatementnode
private char aliastype
private char namespace
/**
* initializer for a dropaliasnode
*
* @param dropaliasname	the name of the method alias being dropped
* @param aliastype				alias type
*
* @exception standardexception
*/
public void init object dropaliasname  object aliastype
throws standardexception
tablename dropitem    tablename  dropaliasname
initandcheck dropitem
this aliastype     character  aliastype  charvalue
switch  this aliastype
case aliasinfo alias_type_procedure_as_char
namespace   aliasinfo alias_name_space_procedure_as_char
break
case aliasinfo alias_type_function_as_char
namespace   aliasinfo alias_name_space_function_as_char
break
case aliasinfo alias_type_synonym_as_char
namespace   aliasinfo alias_name_space_synonym_as_char
break
default
if  sanitymanager debug
sanitymanager throwassert   this aliastype
public	char	getaliastype     return aliastype
public string statementtostring
return   concat aliastypename aliastype
/**
* bind this dropmethodaliasnode.
*
* @return	the bound query tree
*
* @exception standardexception		thrown on error
*/
public querytreenode bind   throws standardexception
datadictionary	datadictionary   getdatadictionary
string			aliasname   getrelativename
aliasdescriptor	ad   null
schemadescriptor sd   getschemadescriptor
if  sd getuuid      null
ad   datadictionary getaliasdescriptor
sd getuuid   tostring    aliasname  namespace
if   ad    null
throw standardexception newexception sqlstate lang_object_does_not_exist  statementtostring    aliasname
// user cannot drop a system alias
if  ad getsystemalias
throw standardexception newexception sqlstate lang_cannot_drop_system_aliases  aliasname
return this
// inherit generate() method from ddlstatementnode
/**
* create the constant information that will drive the guts of execution.
*
* @exception standardexception		thrown on failure
*/
public constantaction	makeconstantaction   throws standardexception
return	getgenericconstantactionfactory   getdropaliasconstantaction getschemadescriptor    getrelativename    namespace
/* returns the alias type name given the alias char type */
private static string aliastypename  char actualtype
string	typename   null
switch   actualtype
case aliasinfo alias_type_procedure_as_char
typename
break
case aliasinfo alias_type_function_as_char
typename
break
case aliasinfo alias_type_synonym_as_char
typename
break
return typename