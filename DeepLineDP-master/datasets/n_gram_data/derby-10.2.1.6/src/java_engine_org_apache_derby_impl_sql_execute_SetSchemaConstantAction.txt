/*
derby - class org.apache.derby.impl.sql.execute.setschemaconstantaction
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby iapi sql execute constantaction
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary schemadescriptor
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql parametervalueset
import org apache derby iapi sql statementtype
import org apache derby iapi types datavaluedescriptor
import org apache derby iapi reference limits
import org apache derby iapi error standardexception
import org apache derby iapi sql activation
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi reference sqlstate
/**
*	this class describes actions that are always performed for a
*	set schema statement at execution time.
*
*	@author jamie
*/
class setschemaconstantaction extends genericconstantaction
private final string					schemaname
private final int						type
// constructors
/**
* make the constantaction for a set schema statement.
*
*  @param schemaname	name of schema.
*  @param type		type of set schema (e.g. set_schema_dynamic, set_schema_user)
*/
setschemaconstantaction string schemaname  int type
this schemaname   schemaname
this type   type
///////////////////////////////////////////////
//
// object shadows
//
///////////////////////////////////////////////
public	string	tostring
// do not put this under sanitymanager.debug - it is needed for
// error reporting.
// if the error happens after we have figured out the schema name for
// dynamic we want to use it rather than ?
return       type    statementtype set_schema_user  ?
type    statementtype set_schema_dynamic    schemaname    null  ?     schemaname
// interface methods
/**
*	this is the guts of the execution-time logic for create schema.
*
*	@see constantaction#executeconstantaction
*
* @exception standardexception		thrown on failure
*/
public void	executeconstantaction  activation activation
throws standardexception
languageconnectioncontext 	lcc
datadictionary 				dd
// find the language context.
lcc   activation getlanguageconnectioncontext
dd   lcc getdatadictionary
string thisschemaname   schemaname
if  type    statementtype set_schema_dynamic
parametervalueset pvs   activation getparametervalueset
datavaluedescriptor dvs   pvs getparameter 0
thisschemaname   dvs getstring
//null parameter is not allowed
if  thisschemaname    null    thisschemaname length   > limits max_identifier_length
throw standardexception newexception sqlstate lang_db2_replacement_error
else if  type    statementtype set_schema_user
thisschemaname   lcc getauthorizationid
// if schemaname is null, sd will be null and default schema will be used
schemadescriptor sd   dd getschemadescriptor thisschemaname  null  true
lcc setdefaultschema sd