/*
derby - class org.apache.derby.impl.sql.catalog.dddependablefinder
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package	org apache derby impl sql catalog
import org apache derby iapi services context contextmanager
import org apache derby iapi services context contextservice
import org apache derby iapi services monitor monitor
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi services io storedformatids
import org apache derby iapi services io formatable
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql dictionary columndescriptor
import org apache derby iapi sql dictionary defaultdescriptor
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary datadictionarycontext
import org apache derby iapi sql dictionary tabledescriptor
import org apache derby iapi error standardexception
import org apache derby iapi error publicapi
import org apache derby iapi services i18n messageservice
import org apache derby iapi services uuid uuidfactory
import org apache derby catalog uuid
import org apache derby catalog dependable
import org apache derby catalog dependablefinder
import org apache derby iapi reference sqlstate
import java io objectoutput
import java io objectinput
import java io ioexception
/**
*	class for all dependablefinders in the core datadictionary
*
*
* @author rick
*/
public class dddependablefinder implements	dependablefinder  formatable
////////////////////////////////////////////////////////////////////////
//
//	state
//
////////////////////////////////////////////////////////////////////////
private transient datadictionary			datadictionary
private transient uuidfactory				uuidfactory
private final int formatid
////////////////////////////////////////////////////////////////////////
//
//	constructors
//
////////////////////////////////////////////////////////////////////////
/**
*	public constructor for formatable hoo-hah.
*/
public	dddependablefinder int formatid
this formatid   formatid
//////////////////////////////////////////////////////////////////
//
//	object support
//
//////////////////////////////////////////////////////////////////
public	string	tostring
return	getsqlobjecttype
//////////////////////////////////////////////////////////////////
//
//	vacuous formatable interface. all that a vacuousdependablefinder
//	needs to do is stamp its format id onto the output stream.
//
//////////////////////////////////////////////////////////////////
/**
* read this object from a stream of stored objects. nothing to
* do. our persistent representation is just a 2-byte format id.
*
* @param in read this.
*/
public void readexternal  objectinput in
throws ioexception  classnotfoundexception
/**
* write this object to a stream of stored objects. again, nothing
* to do. we just stamp the output stream with our format id.
*
* @param out write bytes here.
*/
public void writeexternal  objectoutput out
throws ioexception
/**
* get the formatid which corresponds to this class.
*
*	@return	the formatid of this class
*/
public	final int	gettypeformatid
return formatid
////////////////////////////////////////////////////////////////////////
//
//	dddependable methods
//
////////////////////////////////////////////////////////////////////////
/**
* gets the in-memory object associated with the passed-in object id.
*
* @param	dependableobjectid the uuid of the dependable as a string.
* 			used to locate that dependable
*
* @return	the associated dependable
*
* @exception java.sql.sqlexception		thrown on error
*/
public	final dependable	getdependable string dependableobjectid  throws java sql sqlexception
/*
** call the specific implementation of getdependable
** to do the work
*/
return getdependable recreateuuid dependableobjectid
/**
*	gets the aliasdescriptor associated with the passed-in object id.
*
*	@param	dependableobjectid	the object id of an alias. used to locate its aliasdescriptor
*
*	@return	the associated aliasdescriptor
* @exception java.sql.sqlexception		thrown on error
*/
public final dependable	getdependable uuid dependableobjectid
throws java sql sqlexception
try
return getdependable getdatadictionary   dependableobjectid
catch  standardexception se
throw publicapi wrapstandardexception se
/**
* @see dependablefinder#getsqlobjectname
* @exception java.sql.sqlexception		thrown on error
*/
public final string	getsqlobjectname string idstring  throws java sql sqlexception
try
// this should really be getdependable(idstring).getobjectname()
// and then the sub-classes would not have to provide a getsqlobjectname
// method. currently getdependable(idstring).getobjectname() would
// not always return the same result - fix in main.
return getsqlobjectname getdatadictionary    recreateuuid idstring
catch  standardexception se
throw publicapi wrapstandardexception  se
/**
* @see dependablefinder#getsqlobjecttype
*/
public	string	getsqlobjecttype
switch  formatid
case storedformatids alias_descriptor_finder_v01_id
return dependable alias
case storedformatids conglomerate_descriptor_finder_v01_id
return dependable conglomerate
case storedformatids constraint_descriptor_finder_v01_id
return dependable constraint
case storedformatids default_descriptor_finder_v01_id
return dependable default
case storedformatids file_info_finder_v01_id
return dependable file
case storedformatids schema_descriptor_finder_v01_id
return dependable schema
case storedformatids sps_descriptor_finder_v01_id
return dependable stored_prepared_statement
case storedformatids table_descriptor_finder_v01_id
return dependable table
case storedformatids column_descriptor_finder_v01_id
return dependable columns_in_table
case storedformatids trigger_descriptor_finder_v01_id
return dependable trigger
case storedformatids view_descriptor_finder_v01_id
return dependable view
case storedformatids table_permission_finder_v01_id
return dependable table_permission
case storedformatids columns_permission_finder_v01_id
return dependable columns_permission
case storedformatids routine_permission_finder_v01_id
return dependable routine_permission
default
if  sanitymanager debug
sanitymanager throwassert
formatid
return null
/**
*	gets the datadictionary for this connection.
*
*	@return	the data dictionary for this connection
*
* @exception standardexception		thrown on failure
*/
private	datadictionary	getdatadictionary
throws standardexception
if   datadictionary    null
contextmanager				cm    contextservice getfactory   getcurrentcontextmanager
datadictionarycontext		ddc    datadictionarycontext
cm getcontext datadictionarycontext context_id
datadictionary   ddc getdatadictionary
return	datadictionary
/**
* get the uuid for the given string
*
* @param idstring the string
*
* @return the uuid
*/
private uuid recreateuuid string idstring
if  uuidfactory    null
uuidfactory   monitor getmonitor   getuuidfactory
return uuidfactory recreateuuid idstring
/**
get the dependable for the given uuid
@exception standardexception thrown on error
*/
protected dependable getdependable datadictionary dd  uuid dependableobjectid
throws standardexception
switch  formatid
case storedformatids alias_descriptor_finder_v01_id
return dd getaliasdescriptor dependableobjectid
case storedformatids conglomerate_descriptor_finder_v01_id
return dd getconglomeratedescriptor dependableobjectid
case storedformatids constraint_descriptor_finder_v01_id
return dd getconstraintdescriptor dependableobjectid
case storedformatids default_descriptor_finder_v01_id
columndescriptor	cd   dd getcolumndescriptorbydefaultid dependableobjectid
defaultdescriptor ddi   new defaultdescriptor
dd
cd getdefaultuuid    cd getreferencinguuid
cd getposition
return ddi
case storedformatids file_info_finder_v01_id
return dd getfileinfodescriptor dependableobjectid
case storedformatids schema_descriptor_finder_v01_id
return dd getschemadescriptor dependableobjectid  null
case storedformatids sps_descriptor_finder_v01_id
return dd getspsdescriptor dependableobjectid
case storedformatids table_descriptor_finder_v01_id
return dd gettabledescriptor dependableobjectid
case storedformatids trigger_descriptor_finder_v01_id
return dd gettriggerdescriptor dependableobjectid
case storedformatids view_descriptor_finder_v01_id
return dd getviewdescriptor dependableobjectid
case storedformatids columns_permission_finder_v01_id
return dd getcolumnpermissions dependableobjectid
case storedformatids table_permission_finder_v01_id
return dd gettablepermissions dependableobjectid
case storedformatids routine_permission_finder_v01_id
return dd getroutinepermissions dependableobjectid
default
if  sanitymanager debug
sanitymanager throwassert
formatid
return null
/**
get the sql object name for the given uuid
@exception standardexception thrown on error
*/
protected string getsqlobjectname datadictionary dd  uuid dependableobjectid
throws standardexception
switch  formatid
case storedformatids alias_descriptor_finder_v01_id
return dd getaliasdescriptor dependableobjectid  getdescriptorname
case storedformatids conglomerate_descriptor_finder_v01_id
return dd getconglomeratedescriptor dependableobjectid  getconglomeratename
case storedformatids constraint_descriptor_finder_v01_id
return dd getconstraintdescriptor dependableobjectid  getconstraintname
case storedformatids default_descriptor_finder_v01_id
columndescriptor columndescriptor   dd getcolumndescriptorbydefaultid  dependableobjectid
tabledescriptor tabledescriptor   dd gettabledescriptor
columndescriptor getreferencinguuid
return	messageservice gettextmessage
sqlstate lang_column_default
tabledescriptor getqualifiedname
columndescriptor getcolumnname
case storedformatids file_info_finder_v01_id
return dd getfileinfodescriptor dependableobjectid  getname
case storedformatids schema_descriptor_finder_v01_id
return dd getschemadescriptor dependableobjectid  null  getschemaname
case storedformatids sps_descriptor_finder_v01_id
return dd getspsdescriptor dependableobjectid  getname
case storedformatids table_descriptor_finder_v01_id
case storedformatids column_descriptor_finder_v01_id
return getdependable dd  dependableobjectid  getobjectname
case storedformatids trigger_descriptor_finder_v01_id
return dd gettriggerdescriptor dependableobjectid  getname
case storedformatids view_descriptor_finder_v01_id
return dd gettabledescriptor dependableobjectid  getname
case storedformatids columns_permission_finder_v01_id
return dd getcolumnpermissions dependableobjectid  getobjectname
case storedformatids table_permission_finder_v01_id
return dd gettablepermissions dependableobjectid  getobjectname
case storedformatids routine_permission_finder_v01_id
return dd getroutinepermissions dependableobjectid  getobjectname
default
if  sanitymanager debug
sanitymanager throwassert
formatid
return null