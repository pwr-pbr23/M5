/*
derby - class org.apache.derby.impl.sql.execute.dropjarconstantaction
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi error standardexception
import org apache derby iapi sql execute constantaction
import org apache derby iapi sql activation
import org apache derby catalog uuid
/**
*	constant action to drop an external jar file from a database.
*
*/
class dropjarconstantaction extends ddlconstantaction
private final uuid id
private final string schemaname
private final string sqlname
//////////////////////////////////////////////////////////////
//
// constructors
//
//////////////////////////////////////////////////////////////
/**
*	make the constantaction to drop a jar file to database.
*
*	@param	id					the id for the jar file
*	@param	schemaname			the schemaname for the jar file.
*	@param	sqlname			    the sqlname for the jar file.
*/
dropjarconstantaction uuid id
string schemaname
string sqlname
this id   id
this schemaname   schemaname
this sqlname   sqlname
//////////////////////////////////////////////////////////////
//
// object shadows
//
//////////////////////////////////////////////////////////////
public	string	tostring
// do not put this under sanitymanager.debug - it is needed for
// error reporting.
return     schemaname       sqlname
//////////////////////////////////////////////////////////////
//
// constant action methods
//
//////////////////////////////////////////////////////////////
/**
* @see constantaction#executeconstantaction
* @exception standardexception thrown on failure
*/
public void	executeconstantaction  activation activation
throws standardexception
jarutil drop null schemaname sqlname
purgeoncommit
//
// replication can over-ride this to defer purging dropped jar
// files that remain in the stage.
protected boolean purgeoncommit     return true