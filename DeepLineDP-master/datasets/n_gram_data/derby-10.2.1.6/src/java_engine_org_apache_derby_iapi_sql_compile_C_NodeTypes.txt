/*
derby - class org.apache.derby.iapi.sql.compile.c_nodetypes
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi sql compile
/**
* the purpose of this interface is to hold the constant definitions
* of the different node type identifiers, for use with nodefactory.
* the reason this class exists is that it is not shipped with the
* product, so it saves footprint to have all these constant definitions
* here instead of in nodefactory.
*/
public interface c_nodetypes
/** node types, for use with getnode methods */
static final int test_constraint_node   1
static final int current_row_location_node   2
static final int group_by_list   3
static final int current_isolation_node   4
static final int identity_val_node   5
static final int current_schema_node   6
static final int order_by_list   7
static final int predicate_list   8
static final int result_column_list   9
// 10 available
static final int subquery_list   11
static final int table_element_list   12
static final int untyped_null_constant_node   13
static final int table_element_node   14
static final int value_node_list   15
static final int all_result_column   16
// 17 is available
static final int get_current_connection_node   18
static final int nop_statement_node   19
static final int db2_length_operator_node   20
static final int set_transaction_isolation_node   21
// 22 is available
static final int char_length_operator_node   23
static final int is_not_null_node   24
static final int is_null_node   25
static final int not_node   26
// 27 is available
static final int sql_to_java_value_node   28
static final int unary_minus_operator_node   29
static final int unary_plus_operator_node   30
static final int sql_boolean_constant_node   31
static final int unary_date_timestamp_operator_node   32
static final int timestamp_operator_node   33
static final int table_name   34
static final int group_by_column   35
static final int java_to_sql_value_node   36
static final int from_list   37
static final int boolean_constant_node   38
static final int and_node   39
static final int binary_divide_operator_node   40
static final int binary_equals_operator_node   41
static final int binary_greater_equals_operator_node   42
static final int binary_greater_than_operator_node   43
static final int binary_less_equals_operator_node   44
static final int binary_less_than_operator_node   45
static final int binary_minus_operator_node   46
static final int binary_not_equals_operator_node   47
static final int binary_plus_operator_node   48
static final int binary_times_operator_node   49
static final int concatenation_operator_node   50
static final int like_operator_node   51
static final int or_node   52
static final int between_operator_node   53
static final int conditional_node   54
static final int in_list_operator_node   55
static final int not_between_operator_node   56
static final int not_in_list_operator_node   57
static final int bit_constant_node   58
static final int varbit_constant_node   59
static final int cast_node   60
static final int char_constant_node   61
static final int column_reference   62
static final int drop_index_node   63
// 64 available;
static final int drop_trigger_node   65
static final int read_cursor_node   66
static final int decimal_constant_node   67
static final int double_constant_node   68
static final int float_constant_node   69
static final int int_constant_node   70
static final int longint_constant_node   71
static final int longvarbit_constant_node   72
static final int longvarchar_constant_node   73
static final int smallint_constant_node   74
static final int tinyint_constant_node   75
static final int usertype_constant_node   76
static final int varchar_constant_node   77
static final int predicate   78
// 79 available
static final int result_column   80
static final int set_schema_node   81
static final int update_column   82
static final int simple_string_operator_node   83
static final int static_class_field_reference_node   84
static final int static_method_call_node   85
static final int revoke_node   86
static final int extract_operator_node   87
static final int parameter_node   88
static final int grant_node   89
static final int drop_schema_node   90
static final int drop_table_node   91
static final int drop_view_node   92
static final int subquery_node   93
static final int base_column_node   94
static final int call_statement_node   95
static final int modify_column_default_node   97
static final int non_static_method_call_node   98
static final int current_of_node   99
static final int default_node   100
static final int delete_node   101
static final int update_node   102
static final int privilege_node   103
static final int order_by_column   104
static final int row_result_set_node   105
static final int table_privileges_node   106
static final int virtual_column_node   107
static final int current_datetime_operator_node   108
static final int current_user_node   109     special function current_user
static final int user_node   110        special function user
static final int is_node   111
static final int lock_table_node   112
// 113
static final int alter_table_node   114
static final int aggregate_node   115
static final int column_definition_node   116
// 117 is available
static final int exec_sps_node   118
static final int fk_constraint_definition_node   119
static final int from_vti   120
static final int materialize_result_set_node   121
static final int normalize_result_set_node   122
static final int scroll_insensitive_result_set_node   123
static final int distinct_node   124
static final int session_user_node   125        special function session_user
static final int system_user_node   126        special function system_user
static final int trim_operator_node   127
// 128 is available
static final int select_node   129
static final int create_view_node   130
static final int constraint_definition_node   131
// 132 available;
static final int new_invocation_node   133
static final int create_schema_node   134
static final int from_base_table   135
static final int from_subquery   136
static final int group_by_node   137
static final int insert_node   138
static final int join_node   139
static final int order_by_node   140
static final int create_table_node   141
static final int union_node   142
static final int create_trigger_node   143
static final int half_outer_join_node   144
// unused	static final int create_sps_node = 145;
static final int create_index_node   146
static final int cursor_node   147
static final int hash_table_node   148
static final int index_to_base_row_node   149
static final int create_alias_node   150
static final int project_restrict_node   151
// unused static final int boolean_true_node = 152;
// unused static final int boolean_false_node = 153;
static final int substring_operator_node   154
// unused static final int boolean_node = 155;
static final int drop_alias_node   156
static final int intersect_or_except_node   157
// 158 - 183 available
static final int timestamp_add_fn_node   184
static final int timestamp_diff_fn_node   185
static final int modify_column_type_node   186
static final int modify_column_constraint_node   187
static final int absolute_operator_node   188
static final int sqrt_operator_node   189
static final int locate_function_node   190
//for rename table/column/index
static final int rename_node   191
static final int coalesce_function_node   192
static final int modify_column_constraint_not_null_node   193
static final int mod_operator_node   194
// lob
static final int blob_constant_node   195
static final int clob_constant_node   196
static final int nclob_constant_node   197
// for savepoint sql
static final int savepoint_node   198
// xml
static final int xml_constant_node   199
static final int xml_parse_operator_node   200
static final int xml_serialize_operator_node   201
static final int xml_exists_operator_node   202
static final int xml_query_operator_node   203
/**
* extensions to this interface can use nodetypes > max_node_type with out fear of collision
* with c_nodetypes
*/
static final int max_node_type   999