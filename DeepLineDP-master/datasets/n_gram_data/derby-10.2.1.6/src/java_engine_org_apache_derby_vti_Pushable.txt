/*
derby - class org.apache.derby.vti.pushable
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby vti
import java sql sqlexception
/**
support for pushing sql statement information
down into a virtual table.
a read-write virtual tables (one that implements java.sql.preparedstatement)
implements this interface to support pushing information into the vti.
<br>
read-only vtis (those that implement java.sql.resultset) do not support the pushable interface.
*/
public interface pushable
/**
indicates the columns that must be returned by a read-write vti's resultset.
this method is called only during the runtime execution of the vti, after it has been
constructed and before the executequery() method is called.
at compile time the vti needs to describe the complete set of columns it can return.
<br>
the column identifiers contained in projectedcolumns
map to the columns described by the vti's preparedstatement's
resultsetmetadata. the resultset returned by
preparedstatement.executequery() must contain
these columns in the order given. column 1 in this
resultset maps the the column of the vti identified
by projectedcolumns[0], column 2 maps to projectedcolumns[1] etc.
<br>
any additional columns contained in the resultset are ignored
by the database engine. the resultsetmetadata returned by
resultset.getmetadata() must match the resultset.
<p>
preparedstatement's resultsetmetadata column list {"id", "desc", "price", "tax", "brand"}
<br>
projectedcolumns = { 2, 3, 5}
<br>
results in a resultset containing at least these 3 columns
{"desc", "price", "brand"}
the  jdbc column numbering scheme (1 based) ise used for projectedcolumns.
@exception sqlexception error processing the request.
*/
public boolean pushprojection vtienvironment vtienvironment  int projectedcolumns
throws sqlexception