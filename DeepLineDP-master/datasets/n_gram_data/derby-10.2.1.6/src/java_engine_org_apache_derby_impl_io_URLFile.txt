/*
derby - class org.apache.derby.impl.io.urlfile
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl io
import org apache derby io storagefile
import org apache derby io storagerandomaccessfile
import org apache derby iapi services sanity sanitymanager
import java io inputstream
import java io outputstream
import java io ioexception
import java io filenotfoundexception
import java net url
/**
* this class provides a class path based implementation of the storagefile interface. it is used by the
* database engine to access persistent data and transaction logs under the classpath subsubprotocol.
*/
class urlfile extends inputstreamfile
private final urlstoragefactory storagefactory
urlfile  urlstoragefactory storagefactory  string path
super  storagefactory  path
this storagefactory   storagefactory
urlfile  urlstoragefactory storagefactory  string parent  string name
super  storagefactory  parent  name
this storagefactory   storagefactory
urlfile  urlfile dir  string name
super  dir name
this storagefactory   dir storagefactory
private urlfile  urlstoragefactory storagefactory  string child  int pathlen
super  storagefactory  child  pathlen
this storagefactory   storagefactory
/**
* tests whether the named file exists.
*
* @return <b>true</b> if the named file exists, <b>false</b> if not.
*/
public boolean exists
try
inputstream is   getinputstream
if  is    null
return false
is close
return true
catch  ioexception ioe   return false
end of exists
/**
* get the parent of this file.
*
* @param pathlen the length of the parent's path name.
*/
storagefile getparentdir  int pathlen
return new urlfile  storagefactory  path  pathlen
/**
* creates an input stream from a file name.
*
* @return an input stream suitable for reading from the file.
*
* @exception filenotfoundexception if the file is not found.
*/
public inputstream getinputstream    throws filenotfoundexception
try
url url   new url  path
return url openstream
catch  ioexception ioe   throw new java io filenotfoundexception path
end of getinputstream