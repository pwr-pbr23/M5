/*
derby - class org.apache.derby.impl.services.bytecode.vmtypeidcacheable
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl services bytecode
import org apache derby iapi services cache cacheable
import org apache derby iapi services cache cachemanager
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi services classfile classholder
/**
* this class implements a cacheable for a byte code generator cache of
* vmtypeids.  it maps a java class or type name to a vm type id.
*/
class vmtypeidcacheable implements cacheable
/* the vm name of the java class name */
// either a type (java type) or a string (method descriptor)
private object descriptor
/* this is the identity */
private object key
/* cacheable interface */
/** @see cacheable#clearidentity */
public void clearidentity
/** @see cacheable#getidentity */
public object getidentity
return key
/** @see cacheable#createidentity */
public cacheable createidentity object key  object createparameter
if  sanitymanager debug
sanitymanager throwassert
return this
/** @see cacheable#setidentity */
public cacheable setidentity object key
this key   key
if  key instanceof string
/* the identity is the java class name */
string javaname    string  key
/* get the vm type name associated with the java class name */
string vmname   classholder converttointernaldescriptor javaname
descriptor   new type javaname  vmname
else
descriptor     bcmethoddescriptor  key  buildmethoddescriptor
return this
/** @see cacheable#clean */
public void clean boolean remove
/* no such thing as a dirty cache entry */
return
/** @see cacheable#isdirty */
public boolean isdirty
/* no such thing as a dirty cache entry */
return false
/*
** class specific methods.
*/
/**
* get the vm type name (java/lang/object) that is associated with this cacheable
*/
object descriptor
return descriptor