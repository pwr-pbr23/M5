/*
derby - class org.apache.derby.impl.sql.execute.savepointconstantaction
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby iapi sql execute constantaction
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql activation
import org apache derby iapi error standardexception
import org apache derby iapi sql conn statementcontext
import org apache derby iapi reference sqlstate
/**
*	this class  describes actions that are always performed for a
*	savepoint (rollback, release and set savepoint) statement at execution time.
*/
class savepointconstantaction extends ddlconstantaction
private final string savepointname    name of the savepoint
private final int	savepointstatementtype    type of savepoint statement ie rollback  release or set savepoint
/**
*	make the constantaction for a set savepoint, rollback or release statement.
*
*  @param savepointname	name of the savepoint.
*  @param savepointstatementtype	set savepoint, rollback savepoint or release savepoint
*/
savepointconstantaction
string			savepointname
int				savepointstatementtype
this savepointname   savepointname
this savepointstatementtype   savepointstatementtype
// object methods
public	string	tostring
if  savepointstatementtype    1
return constructtostring    savepointname
else if  savepointstatementtype    2
return constructtostring    savepointname
else
return constructtostring    savepointname
// interface methods
/**
*	this is the guts of the execution-time logic for create table.
*
*	@see constantaction#executeconstantaction
*
* @exception standardexception		thrown on failure
*/
public void	executeconstantaction  activation activation
throws standardexception
languageconnectioncontext lcc   activation getlanguageconnectioncontext
//bug 4507 - savepoint not allowed inside trigger
statementcontext stmtctxt   lcc getstatementcontext
if  stmtctxt   null    stmtctxt intrigger
throw standardexception newexception sqlstate no_savepoint_in_trigger
if  savepointstatementtype    1      this is set savepoint
if  savepointname startswith       to enforce db2 restriction which is savepoint name can't start with sys
throw standardexception newexception sqlstate invalid_schema_sys
lcc languagesetsavepoint savepointname  savepointname
else if  savepointstatementtype    2      this is rollback savepoint
lcc internalrollbacktosavepoint savepointname true  savepointname
else     this is release savepoint
lcc releasesavepoint savepointname  savepointname