/*
derby - class org.apache.derby.client.net.netxaconnectionrequest
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client net
import javax transaction xa xaresource
import javax transaction xa xid
import org apache derby client am sqlexception
public class netxaconnectionrequest extends netresultsetrequest
netxaconnectionrequest netagent netagent  ccsidmanager ccsidmanager  int buffersize
super netagent  ccsidmanager  buffersize
//----------------------------- entry points ---------------------------------
//build the synnctl commit command
public void writelocalxacommit netconnection conn  throws sqlexception
netxacallinfo callinfo
conn xares_ callinfoarray_
xid xid   callinfo xid_
buildsyncctlmigrate         xa migrate to resync server
buildsyncctlcommit codepoint tmlocal  xid        xa local commit
//build the synnctl rollback command
public void writelocalxarollback netconnection conn  throws sqlexception
netxacallinfo callinfo   conn xares_ callinfoarray_
buildsyncctlrollback codepoint tmlocal        xa local rollback
public void writexastartunitofwork netconnection conn  throws sqlexception
netxacallinfo callinfo   conn xares_ callinfoarray_
xid xid   callinfo xid_
int xaflags   callinfo xaflags_
// create dss command with reply.
createcommand
// save the length bytes for later update
marklengthbytes codepoint syncctl
// synctype
writesynctype codepoint synctype  codepoint synctype_new_uow
if  xid getformatid       1
writexid codepoint xid  xid
else
// write the null xid for local transaction on xa connection
writenullxid codepoint xid
writexaflags codepoint xaflags  xaflags
updatelengthbytes
public void writexaendunitofwork netconnection conn  throws sqlexception
netxacallinfo callinfo   conn xares_ callinfoarray_
xid xid   callinfo xid_
int xaflags   callinfo xaflags_
createcommand
// save the length bytes for later update
marklengthbytes codepoint syncctl
// synctype
writesynctype codepoint synctype  codepoint synctype_end_uow
if  xid getformatid       1
writexid codepoint xid  xid
else
// write the null xid for local transaction on xa connection
writenullxid codepoint xid
writexaflags codepoint xaflags  xaflags
updatelengthbytes
protected void writexaprepare netconnection conn  throws sqlexception
netxacallinfo callinfo   conn xares_ callinfoarray_
xid xid   callinfo xid_
// don't forget that xars.prepare() does not have flags, assume tmnoflags
int xaflags   xaresource tmnoflags
createcommand
// save the length bytes for later update
marklengthbytes codepoint syncctl
// synctype
writesynctype codepoint synctype  codepoint synctype_prepare
if  xid getformatid       1
writexid codepoint xid  xid
else
// write the null xid for local transaction on xa connection
writenullxid codepoint xid
writexaflags codepoint xaflags  xaflags
updatelengthbytes
protected void writexacommit netconnection conn  xid xid  throws sqlexception
netxacallinfo callinfo   conn xares_ callinfoarray_
int xaflags   callinfo xaflags_
// create dss command with no reply.
createcommand
// save the length bytes for later update
marklengthbytes codepoint syncctl
// synctype
writesynctype codepoint synctype  codepoint synctype_committed
if  xid getformatid       1
writexid codepoint xid  xid
else
// write the null xid for local transaction on xa connection
writenullxid codepoint xid
writexaflags codepoint xaflags  xaflags
updatelengthbytes
protected void writexarollback netconnection conn  xid xid  throws sqlexception
int xaflags   xaresource tmnoflags
// create dss command with no reply.
createcommand
// save the length bytes for later update
marklengthbytes codepoint syncctl
// synctype
writesynctype codepoint synctype  codepoint synctype_rollback
if  xid getformatid       1
writexid codepoint xid  xid
else
// write the null xid for local transaction on xa connection
writenullxid codepoint xid
writexaflags codepoint xaflags  xaflags
updatelengthbytes
protected void writexarecover netconnection conn  int flag  throws sqlexception
// create dss command with no reply.
createcommand
// save the length bytes for later update
marklengthbytes codepoint syncctl
// synctype
writesynctype codepoint synctype  codepoint synctype_indoubt
writexaflags codepoint xaflags  flag
updatelengthbytes
protected void writexaforget netconnection conn  xid xid  throws sqlexception
// create dss command with no reply.
createcommand
// save the length bytes for later update
marklengthbytes codepoint syncctl
// synctype
writesynctype codepoint synctype  codepoint synctype_req_forget
writexid codepoint xid  xid
updatelengthbytes
public void writesynctype int codepoint  int synctype
writescalar1byte codepoint  synctype
public void writeforget int codepoint  int value
writescalar1byte codepoint  value
public void writereleaseconversation int codepoint  int value
writescalar1byte codepoint  value
void writenullxid int codepoint
int nullxid    1
writescalar4bytes codepoint  nullxid
void writexid int codepoint  xid xid  throws sqlexception
int len   0
int formatid   xid getformatid
byte gtrid   xid getglobaltransactionid
byte bqual   xid getbranchqualifier
marklengthbytes codepoint
len   4                        length of formatid
len     bqual length   4       bqual length
len     gtrid length   4       gtrid length
write4bytes formatid
write4bytes gtrid length
write4bytes bqual length
// mare sure request buffer has enough space to write this byte array.
ensurelength offset_   gtrid length
system arraycopy gtrid  0  bytes_  offset_  gtrid length
offset_    gtrid length
ensurelength offset_   bqual length
system arraycopy bqual  0  bytes_  offset_  bqual length
offset_    bqual length
updatelengthbytes
void writexaflags int codepoint  int xaflags
writescalar4bytes codepoint  xaflags
//----------------------helper methods----------------------------------------
// these methods are "private protected", which is not a recognized java privilege,
// but means that these methods are private to this class and to subclasses,
// and should not be used as package-wide friendly methods.
void buildsyncctlmigrate   throws sqlexception
void buildsyncctlcommit int xaflags  xid xid  throws sqlexception
createcommand
// save the length bytes for later update
marklengthbytes codepoint syncctl
// synctype
writesynctype codepoint synctype  codepoint synctype_committed
if  xid getformatid       1
writexid codepoint xid  xid
else
// write the null xid for local transaction on xa connection
writenullxid codepoint xid
writexaflags codepoint xaflags  xaflags
updatelengthbytes
void buildsyncctlrollback int xaflags  throws sqlexception
createcommand
// save the length bytes for later update
marklengthbytes codepoint syncctl
// synctype
writesynctype codepoint synctype  codepoint synctype_rollback
// write the null xid for local transaction on xa connection
writenullxid codepoint xid
writexaflags codepoint xaflags  xaflags
updatelengthbytes