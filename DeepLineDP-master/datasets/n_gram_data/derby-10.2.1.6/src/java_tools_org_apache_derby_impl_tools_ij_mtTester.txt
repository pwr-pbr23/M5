/*
derby - class org.apache.derby.impl.tools.ij.mttester
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl tools ij
import java util vector
import java io ioexception
import java io filenotfoundexception
import java io bufferedinputstream
import java util date
import org apache derby iapi tools i18n localizedoutput
/**
* mttester grabs test and runs them forever.
* the spawner of tester is responsible for
* killing it.
*/
public class mttester implements runnable
private mttestsuite	suite
private string		name
private localizedoutput	log
private localizedoutput	out
private boolean		stop   false
private boolean   testok   false
public mttester string name  mttestsuite suite  localizedoutput out  localizedoutput log
this name   name
this suite   suite
this log   log
this out   out
log println    name       new date
/**
** run until killed or until there is a problem.
** if we get other than 'connection closed' we'll
** signal that we recieved a fatal error before
** quittiing; otherwise, we are silent.
*/
public void run
int numiterations   0
try
mttestcase testcase
bufferedinputstream	in
// loop until we get an error or
// are killed.
while   stop
numiterations
testcase   suite grabtestcase
try
in   testcase initialize suite getroot
catch  filenotfoundexception e
system out println e
return
catch  ioexception e
system out println e
return
log println name      testcase getname         new date
testcase runme log  out  in
catch  ijfatalexception e
/*
** if we got connection closed (xj010), we'll
** assume that we were deliberately killed
** via a thread.stop() and it was caught by
** jbms.  otherwise, we'll print out an
** error message.
*/
if  e getsqlstate      null      e getsqlstate   equals
log println name     e
throw new threaddeath
if  stop
log println name       numiterations
testok   true
public void stop
stop   true
public boolean nofailure
return testok