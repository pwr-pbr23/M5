/*
derby - class org.apache.derby.iapi.sql.dictionary.fileinfodescriptor
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi sql dictionary
import org apache derby iapi error standardexception
import org apache derby iapi sql depend provider
import org apache derby catalog uuid
import org apache derby iapi reference sqlstate
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi sql statementtype
import org apache derby catalog dependablefinder
import org apache derby catalog dependable
import org apache derby iapi services io storedformatids
/**
* a descriptor for a file that has been stored in the database.
*/
public final class  fileinfodescriptor extends tupledescriptor
implements provider  uniquesqlobjectdescriptor
/** a type tho indicate the file is a jar file **/
public static final int jar_file_type   0
/** external interface to this class:
<ol>
<li>public long	getgenerationid();
</ol>
*/
private final uuid id
private final schemadescriptor sd
private final string sqlname
private final long generationid
/**
* constructor for a fileinfodescriptor.
*
* @param datadictionary		the data dictionary that this descriptor lives in
* @param id        	the id for this file
* @param sd			the schema for this file.
* @param sqlname		the sql name of this file.
* @param generationid  the generation id for the
*                      version of the file this describes.
*/
public fileinfodescriptor datadictionary datadictionary
uuid id
schemadescriptor sd
string sqlname
long generationid
super  datadictionary
if  sanitymanager debug
if  sd getschemaname      null
sanitymanager throwassert
sqlname
this id   id
this sd   sd
this sqlname   sqlname
this generationid   generationid
public schemadescriptor getschemadescriptor
return sd
public string getname
return sqlname
/**
* @see uniquetupledescriptor#getuuid
*/
public uuid	getuuid
return id
/**
* gets the generationid for the current version of this file. the
* triple (schemaname,sqlname,generationid) are unique for the
* life of this database.
*
* @return	the generationid for this file
*/
public long getgenerationid
return generationid
//
// provider interface
//
/**
@see dependable#getdependablefinder
*/
public dependablefinder getdependablefinder
return	getdependablefinder storedformatids file_info_finder_v01_id
/**
@see dependable#getobjectname
*/
public string getobjectname
return sqlname
/**
@see dependable#getobjectid
*/
public uuid getobjectid
return id
/**
@see dependable#getclasstype
*/
public string getclasstype
return dependable file
//
// class interface
//
/** @see tupledescriptor#getdescriptortype */
public string getdescriptortype     return
/** @see tupledescriptor#getdescriptorname */
public string getdescriptorname     return sqlname