/*
derby - class org.apache.derby.impl.sql.execute.routineprivilegeinfo
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby iapi sql activation
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi store access transactioncontroller
import org apache derby iapi sql depend dependencymanager
import org apache derby iapi sql dictionary routinepermsdescriptor
import org apache derby iapi sql dictionary aliasdescriptor
import org apache derby iapi sql dictionary statementroutinepermission
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary datadescriptorgenerator
import org apache derby iapi error standardexception
import java util iterator
import java util list
public class routineprivilegeinfo extends privilegeinfo
private aliasdescriptor aliasdescriptor
public routineprivilegeinfo  aliasdescriptor aliasdescriptor
this aliasdescriptor   aliasdescriptor
/**
*	this is the guts of the execution-time logic for grant/revoke of a routine execute privilege
*
* @param activation
* @param grant true if grant, false if revoke
* @param grantees a list of authorization ids (strings)
*
* @exception standardexception		thrown on failure
*/
public void executegrantrevoke  activation activation
boolean grant
list grantees
throws standardexception
// check that the current user has permission to grant the privileges.
languageconnectioncontext lcc   activation getlanguageconnectioncontext
datadictionary dd   lcc getdatadictionary
string currentuser   lcc getauthorizationid
transactioncontroller tc   lcc gettransactionexecute
// check that the current user has permission to grant the privileges.
checkownership  currentuser
aliasdescriptor
dd getschemadescriptor  aliasdescriptor getschemauuid    tc
dd
datadescriptorgenerator ddg   dd getdatadescriptorgenerator
routinepermsdescriptor routinepermsdesc   ddg newroutinepermsdescriptor  aliasdescriptor  currentuser
dd startwriting lcc
for  iterator itr   grantees iterator    itr hasnext
// keep track to see if any privileges are revoked by a revoke
// statement. if a privilege is not revoked, we need to raise a
// warning.
boolean privileges_revoked   false
string grantee    string  itr next
if  dd addremovepermissionsdescriptor  grant  routinepermsdesc  grantee  tc
privileges_revoked   true
//derby currently supports only restrict form of revoke execute
//privilege and that is why, we are sending invalidation action
//as revoke_privilege_restrict rather than revoke_privilege
dd getdependencymanager   invalidatefor routinepermsdesc  dependencymanager revoke_privilege_restrict  lcc
addwarningifprivilegenotrevoked activation  grant  privileges_revoked  grantee
end of executeconstantaction