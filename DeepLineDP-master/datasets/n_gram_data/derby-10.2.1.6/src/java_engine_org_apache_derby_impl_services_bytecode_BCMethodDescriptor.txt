/*
derby - class org.apache.derby.impl.services.bytecode.bcmethoddescriptor
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl services bytecode
import org apache derby iapi services classfile vmdescriptor
/**
a method descriptor. ie. something that describes the
type of a method, parameter types and return types.
it is not an instance of a method.
<br>
this has no generated class specific state.
*/
class bcmethoddescriptor
static final string empty   new string
private final string vmparametertypes
private final string vmreturntype
private final string vmdescriptor
bcmethoddescriptor string vmparametertypes  string vmreturntype  bcjava factory
this vmparametertypes   vmparametertypes
this vmreturntype   vmreturntype
vmdescriptor   factory vmtype this
}
/*
static string get(expression[] vmparameters, string vmreturntype, bcjava factory) {
int count = vmparameters.length;
string[] vmparametertypes;
if (count == 0) {
vmparametertypes = bcmethoddescriptor.empty;
} else {
vmparametertypes = new string[count];
for (int i =0; i < count; i++) {
vmparametertypes[i] = ((bcexpr) vmparameters[i]).vmtype();
}
}
return new bcmethoddescriptor(vmparametertypes, vmreturntype, factory).tostring();
}
*/
static string get string vmparametertypes  string vmreturntype  bcjava factory
return new bcmethoddescriptor(vmparametertypes, vmreturntype, factory).tostring();
}
/**
* builds the jvm method descriptor for this method as
* defined in jvm spec 4.3.3, method descriptors.
*/
string buildmethoddescriptor
int paramcount   vmparametertypes length
int approxlength    30    paramcount   1
stringbuffer methdesc   new stringbuffer approxlength
methdesc append vmdescriptor c_method
for  int i   0  i < paramcount  i
methdesc append vmparametertypes
}
methdesc append vmdescriptor c_endmethod
methdesc append vmreturntype
return methdesc tostring
}
public string tostring
return vmdescriptor
}
public int hashcode
return vmparametertypes length    vmreturntype hashcode     0xffffff00
}
public boolean equals object other
if    other instanceof bcmethoddescriptor
return false
bcmethoddescriptor o    bcmethoddescriptor  other
if  o vmparametertypes length    vmparametertypes length
return false
for  int i   0  i < vmparametertypes length  i
if   vmparametertypes equals o vmparametertypes
return false
}
return vmreturntype equals o vmreturntype
}
}