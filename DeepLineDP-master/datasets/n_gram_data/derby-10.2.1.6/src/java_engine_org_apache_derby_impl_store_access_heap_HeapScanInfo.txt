/*
derby - class org.apache.derby.impl.store.access.heap.heapscaninfo
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl store access heap
import org apache derby iapi store access scaninfo
import org apache derby iapi error standardexception
import org apache derby iapi reference sqlstate
import org apache derby iapi services io formatablebitset
import org apache derby iapi services i18n messageservice
import java util properties
/**
this object provides performance information related to an open scan.
the information is accumulated during operations on a scancontroller() and
then copied into this object and returned by a call to
scancontroller.getstatistic().
@see  org.apache.derby.iapi.store.access.scancontroller#getscaninfo()
**/
class heapscaninfo implements scaninfo
/**
* performance counters ...
*/
private int     stat_numpages_visited         0
private int     stat_numrows_visited          0
private int     stat_numrows_qualified        0
private int     stat_numcolumnsfetched        0
private formatablebitset  stat_validcolumns             null
/* constructors for this class: */
heapscaninfo heapscan scan
// copy perfomance state out of scan, to get a fixed set of stats
stat_numpages_visited         scan getnumpagesvisited
stat_numrows_visited          scan getnumrowsvisited
stat_numrows_qualified        scan getnumrowsqualified
stat_validcolumns
scan getscancolumnlist      null ?
null     formatablebitset  scan getscancolumnlist   clone
if  stat_validcolumns    null
stat_numcolumnsfetched     heap  scan getopenconglom   getconglomerate    format_ids length
else
for  int i   0  i < stat_validcolumns size    i
if  stat_validcolumns get i
stat_numcolumnsfetched
/**
* return all information gathered about the scan.
* <p>
* this routine returns a list of properties which contains all information
* gathered about the scan.  if a property is passed in, then that property
* list is appeneded to, otherwise a new property object is created and
* returned.
* <p>
* not all scans may support all properties, if the property is not
* supported then it will not be returned.  the following is a list of
* properties that may be returned:
*
*     numpagesvisited
*         - the number of pages visited during the scan.  for btree scans
*           this number only includes the leaf pages visited.
*     numrowsvisited
*         - the number of rows visited during the scan.  this number
*           includes all rows, including: those marked deleted, those
*           that don't meet qualification, ...
*     numrowsqualified
*         - the number of undeleted rows, which met the qualification.
*     treeheight (btree's only)
*         - for btree's the height of the tree.  a tree with one page
*           has a height of 1.  total number of pages visited in a btree
*           scan is (treeheight - 1 + numpagesvisited).
*     note - this list will be expanded as more information about the scan
*            is gathered and returned.
*
* @param prop   property list to fill in.
*
* @exception  standardexception  standard exception policy.
**/
public properties getallscaninfo properties prop
throws standardexception
if  prop    null
prop   new properties
prop put
messageservice gettextmessage sqlstate store_rts_scan_type
messageservice gettextmessage sqlstate store_rts_heap
prop put
messageservice gettextmessage sqlstate store_rts_num_pages_visited
integer tostring stat_numpages_visited
prop put
messageservice gettextmessage sqlstate store_rts_num_rows_visited
integer tostring stat_numrows_visited
prop put
messageservice gettextmessage sqlstate store_rts_num_rows_qualified
integer tostring stat_numrows_qualified
prop put
messageservice gettextmessage sqlstate store_rts_num_columns_fetched
integer tostring stat_numcolumnsfetched
prop put
messageservice gettextmessage sqlstate store_rts_columns_fetched_bit_set
stat_validcolumns    null ?
messageservice gettextmessage sqlstate store_rts_all
stat_validcolumns tostring
return prop