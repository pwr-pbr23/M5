/*
derby - class org.apache.derby.client.am.floatingpoint
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client am
/**
* converters from floating point bytes to java <code>float</code>, <code>double</code>, or
* <code>java.math.bigdecimal</code>.
*/
public class floatingpoint
// hide the default constructor, this is a static class.
private floatingpoint
/**
* supported unix big endian ieee 754 floating point representation.
*/
public final static int ieee_754_floating_point   0x48
//--------------------------private helper methods----------------------------
/**
* convert the byte array to an int.
*/
private static final int convertfrombytetoint byte buffer  int offset
return  buffer << 24
buffer   0xff  << 16
buffer   0xff  << 8
buffer   0xff
/**
* convert the byte array to a long.
*/
private static final long convertfrombytetolong byte buffer  int offset
return   buffer   0xffl  << 56
buffer   0xffl  << 48
buffer   0xffl  << 40
buffer   0xffl  << 32
buffer   0xffl  << 24
buffer   0xffl  << 16
buffer   0xffl  << 8
buffer   0xffl
//--------------entry points for runtime representation-----------------------
/**
* build a java float from a 4-byte floating point representation.
* <p/>
* this includes derby types: <ul> <li> real <li> float(1<=n<=24) </ul>
*
* @throws illegalargumentexception if the specified representation is not recognized.
*/
public static final float getfloat byte buffer  int offset
return float intbitstofloat convertfrombytetoint buffer  offset
/**
* build a java double from an 8-byte floating point representation.
* <p/>
* <p/>
* this includes derby types: <ul> <li> float <li> double [precision] </ul>
*
* @throws illegalargumentexception if the specified representation is not recognized.
*/
public static final double getdouble byte buffer  int offset
return double longbitstodouble convertfrombytetolong buffer  offset
//--------------entry points for runtime representation-----------------------
/**
* write a java <code>float</code> to a 4-byte floating point representation.
*/
public static final void floattoieee754bytes byte buffer  int offset  float f
int intbits   float floattointbits f
buffer    byte    intbits >>> 24    0xff
buffer    byte    intbits >>> 16    0xff
buffer    byte    intbits >>> 8    0xff
buffer    byte   intbits   0xff
/**
* write a java <code>double</code> to an 8-byte double precision floating point representation.
*/
public static final void doubletoieee754bytes byte buffer  int offset  double d
long longbits   double doubletolongbits d
buffer    byte    longbits >>> 56    0xff
buffer    byte    longbits >>> 48    0xff
buffer    byte    longbits >>> 40    0xff
buffer    byte    longbits >>> 32    0xff
buffer    byte    longbits >>> 24    0xff
buffer    byte    longbits >>> 16    0xff
buffer    byte    longbits >>> 8    0xff
buffer    byte   longbits   0xff