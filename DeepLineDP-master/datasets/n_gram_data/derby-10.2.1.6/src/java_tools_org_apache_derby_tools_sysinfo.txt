/*
derby - class org.apache.derby.tools.sysinfo
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby tools
import org apache derby iapi services info productversionholder
import org apache derby iapi services info jvminfo
import org apache derby impl tools sysinfo main
/**
this class displays system information to system out.
to run from the command-line, enter the following:
<p>
<code>java org.apache.derby.tools.sysinfo</code>
<p>
<p>
also available on this class are methods which allow you to determine
the version of the code for the system without actually booting a database.
please note that this is the derby version of the .jar files, not of your databases.
<p>
the numbering scheme for released derby products is <b><code>m1.m2.m3 </code></b>
where <b><code>m1</code></b> is the major release version, <b><code>m2</code></b> is the minor release version,
and <b><code>m3</code></b> is the maintenance level. versions of the product with the same
major and minor version numbers are considered feature compatible.
<p>valid major and minor versions are always greater than zero. valid maintenance
versions are greater than or equal to zero.
*/
public class sysinfo
static public void main string args
main main args
private sysinfo        no instances allowed
/**
the genus name for the apache derby code. use this to determine the version of the
apache derby embedded code in derby.jar.
*/
public static final string dbms
/**
*	the genus name for the tools code. use this to determine the version of
code in derbytools.jar
*/
public static final string tools
/**
*	the genus name for the network server code. use this to determine the version of
code in derbynet.jar
*/
public static final string net
/**
*	the genus name for the client code. use this to determine the version of
code in derbyclient.jar
*/
public static final string client
/**
gets the major version of the apache derby embedded code.
@return	the major version. returns -1 if not found.
*/
static public int getmajorversion
return getmajorversion dbms
/**
gets the major version of the specified code library.
@param genus	which library to get the version of. valid inputs include
dbms, tools, net, client
@return the major version. return -1 if the information is not found.
*/
static public int getmajorversion string genus
productversionholder pvh   productversionholder getproductversionholderfrommyenv genus
if  pvh    null
return  1
return pvh getmajorversion
/**
gets the minor version of the apache derby embedded code.
@return	the minor version. returns -1 if not found.
*/
static public int getminorversion
return getminorversion dbms
/**
gets the minor version of the specified code library.
@param genus	which library to get the version of. valid inputs include
dbms, tools, net, client.
@return the minor version. return -1 if the information is not found.
*/
static public int getminorversion string genus
productversionholder pvh   productversionholder getproductversionholderfrommyenv genus
if  pvh    null
return  1
return pvh getminorversion
/**
gets the build number for the apache derby embedded library
@return the build number, or -1 if the information is not found.
*/
static public string getbuildnumber
return getbuildnumber
/**
gets the build number for the specified library
@param genus which library to get the build number for. valid inputs are
dbms, tools, net, client.
@return the build number, or ???? if the information is not found.
*/
static public string getbuildnumber string genus
productversionholder pvh   productversionholder getproductversionholderfrommyenv genus
if  pvh    null
return
return pvh getbuildnumber
/**
gets the product name for the apache derby embedded library
@return the name
*/
static public string getproductname
return getproductname
/**
gets the external name for the specified code library.
@param genus which library to get the name for
@return the name.
*/
static public string getproductname string genus
productversionholder pvh   productversionholder getproductversionholderfrommyenv genus
if  pvh    null
return main gettextmessage
return pvh getproductname
/**
return the version information string for the specified library including alpha or beta indicators.
*/
static public string getversionstring
return getversionstring dbms
/**
return the version information string for the apache derby embedded library including alpha or beta indicators.
*/
static public string getversionstring string genus
productversionholder pvh   productversionholder getproductversionholderfrommyenv genus
if  pvh    null
return main gettextmessage
return pvh getversionbuildstring false
public static void getinfo  java io printwriter out
main getmaininfo out  false