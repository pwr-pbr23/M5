/*
derby - class org.apache.derby.iapi.services.classfile.classenumeration
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi services classfile
import java util enumeration
import java util hashset
import java util stringtokenizer
import org apache derby iapi services classfile vmdescriptor
/**
an enumeration that filters only classes
from the enumeration of the class pool.
code has been added to also include classes referenced in method and
field signatures.
*/
class classenumeration implements enumeration
classholder	cpt
enumeration			inner
constant_index_info	position
hashset           foundclasses
enumeration         classlist
classenumeration    classholder cpt
enumeration e
enumeration methods
enumeration fields
this cpt   cpt
inner   e
foundclasses   new hashset 30  0 8f
findmethodreferences methods  foundclasses
findfieldreferences fields  foundclasses
findclassreferences foundclasses
classlist   java util collections enumeration foundclasses
public boolean hasmoreelements
return classlist hasmoreelements
// uses cpt and inner
private void findclassreferences hashset foundclasses
constantpoolentry	item
constant_index_info	ref
while  inner hasmoreelements
item    constantpoolentry  inner nextelement
if  item    null
continue
if  item gettag      vmdescriptor constant_class
ref    constant_index_info  item
string classname   cpt classname ref getindex
// if this is an array type, distillclasses can
// handle it
if  classname startswith
distillclasses classname  foundclasses
continue
// now we've got either a primitive type or a classname
// primitive types are all a single char
if  classname length   > 1
//we've got a class
if  classname startswith
//skip it
continue
foundclasses add classname
private void findmethodreferences   enumeration methods
hashset foundclasses
while  methods hasmoreelements
classmember member    classmember  methods nextelement
string description   member getdescriptor
distillclasses description  foundclasses
private void findfieldreferences    enumeration fields
hashset foundclasses
while  fields hasmoreelements
classmember member    classmember  fields nextelement
string description   member getdescriptor
distillclasses description  foundclasses
void distillclasses string fieldormethodsig  hashset foundclasses
if  fieldormethodsig    null    fieldormethodsig length   < 1
//empty string
return
if  fieldormethodsig charat 0
// first time through, we're dealing with a field here
// otherwise, it is a token from a method signature
int classnamestart   fieldormethodsig indexof
if  classnamestart     1
// no class in the type, so stop
return
// chop off any leading ['s or other java-primitive type
// signifiers (like i or l) *and* substitute the dots
string fieldtype
fieldormethodsig substring classnamestart   1  replace
// we have to check for the semi-colon in case we are
// actually looking at a token from a method signature
if  fieldtype endswith
fieldtype   fieldtype substring 0 fieldtype length   1
if  fieldtype startswith
return         it t care about
// that either
foundclasses add fieldtype
return
else
// it's a method signature
stringtokenizer tokens   new stringtokenizer fieldormethodsig
while  tokens hasmoreelements
string atoken    string  tokens nexttoken
// because of the semi-colon delimiter in the tokenizer, we
// can have only one class name per token and it must be the
// last item in the token
int classnamestart   atoken indexof
if  classnamestart     1
distillclasses atoken  foundclasses
else
continue
public object nextelement
return classlist nextelement