/*
derby - class org.apache.derby.vti.updatablevtitemplate
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby vti
import org apache derby iapi reference jdbc20translation
import java sql connection
import java sql date
import java sql statement
import java sql preparedstatement
import java sql resultset
import java sql resultsetmetadata
import java sql statement
import java sql sqlexception
import java sql sqlwarning
import java sql time
import java sql timestamp
import java math bigdecimal
import java sql blob
import java sql ref
import java sql clob
import java sql array
import java io reader
import java util calendar
import java io inputstream
/**
an abstract implementation of preparedstatement (jdk1.1/jdbc 1.2) that is useful
when writing a read-write (updatable) virtual table interface (vti).
this class implements
the methods of the jdbc1.2 version of preparedstatement plus the
jdbc2.0 getmetadata() method, each one throwing a sqlexception
with the name of the method. a concrete subclass can then just implement
the methods not implemented here and override any methods it needs
to implement for correct functionality.
*/
public abstract class updatablevtitemplate implements preparedstatement
protected updatablevtitemplate
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public resultset executequery string sql  throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public int executeupdate string sql  throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public void close   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public sqlwarning getwarnings   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public void clearwarnings   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public int getmaxfieldsize   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setmaxfieldsize int max  throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public int getmaxrows   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setmaxrows int max  throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setescapeprocessing boolean enable  throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public int getquerytimeout   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setquerytimeout int seconds  throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public void addbatch string sql  throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public void clearbatch   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public int executebatch   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public void cancel   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setcursorname string name  throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public boolean execute string sql  throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public resultset getresultset   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public int getupdatecount   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public boolean getmoreresults   throws sqlexception
throw new sqlexception
/**
* @see java.sql.statement
*
* @exception sqlexception on unexpected jdbc error
*/
public int getresultsetconcurrency   throws sqlexception
return jdbc20translation concur_updatable
//
// java.sql.preparedstatement calls, passed through to our preparedstatement.
//
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public resultset executequery   throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public int executeupdate   throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setnull int parameterindex  int jdbctype  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setnull int parameterindex  int jdbctype  string typename  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setboolean int parameterindex  boolean x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setbyte int parameterindex  byte x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setshort int parameterindex  short x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setint int parameterindex  int x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setlong int parameterindex  long x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setfloat int parameterindex  float x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setdouble int parameterindex  double x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setbigdecimal int parameterindex  bigdecimal x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setstring int parameterindex  string x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setbytes int parameterindex  byte x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setdate int parameterindex  date x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void settime int parameterindex  time x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void settimestamp int parameterindex  timestamp x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setasciistream int parameterindex  inputstream x  int length  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setunicodestream int parameterindex  inputstream x  int length  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setbinarystream int parameterindex  inputstream x  int length  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void clearparameters   throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setobject int parameterindex  object x  int targetjdbctype  int scale  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setobject int parameterindex  object x  int targetjdbctype  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public void setobject int parameterindex  object x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public boolean execute   throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception on unexpected jdbc error
*/
public resultsetmetadata getmetadata   throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public int getresultsettype   throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public void setblob int i  blob x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public void setfetchdirection int direction  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public void setfetchsize int rows  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public void addbatch   throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public void setcharacterstream int parameterindex
reader reader
int length  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public connection getconnection   throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public int getfetchdirection   throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public void settime int parameterindex  time x  calendar cal
throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public void settimestamp int parameterindex  timestamp x  calendar cal
throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public int getfetchsize   throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public void setref int i  ref x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public void setdate int parameterindex  date x  calendar cal
throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public void setclob int i  clob x  throws sqlexception
throw new sqlexception
/**
* @see java.sql.preparedstatement
*
* @exception sqlexception		always thrown
*/
public void setarray int i  array x  throws sqlexception
throw new sqlexception