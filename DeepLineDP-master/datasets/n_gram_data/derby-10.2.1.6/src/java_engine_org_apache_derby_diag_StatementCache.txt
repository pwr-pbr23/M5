/*
derby - class org.apache.derby.diag.statementcache
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby diag
import org apache derby vti vtitemplate
import org apache derby iapi sql conn connectionutil
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby impl sql genericpreparedstatement
import org apache derby impl sql genericstatement
import org apache derby iapi sql resultcolumndescriptor
import org apache derby impl jdbc embedresultsetmetadata
import org apache derby iapi reference limits
import org apache derby iapi util stringutil
import java sql types
import java sql resultsetmetadata
import java sql sqlexception
import java sql timestamp
import org apache derby impl sql conn cachedstatement
import org apache derby impl services cache cacheditem
import java util vector
import java util enumeration
/**
statementcache is a virtual table that shows the contents of the sql statement cache.
this virtual table can be invoked by calling it directly.
<pre> select * from new org.apache.derby.diag.statementcache() t</pre>
<p>the statementcache virtual table has the following columns:
<ul>
<li> id char(36) - not nullable.  internal identifier of the compiled statement.
<li> schemaname varchar(128) - nullable.  schema the statement was compiled in.
<li> sql_text varchar(32672) - not nullable.  text of the statement
<li> unicode bit/boolean - not nullable.  true if the statement is compiled as a pure unicode string, false if it handled unicode escapes.
<li> valid bit/boolean - not nullable.  true if the statement is currently valid, false otherwise
<li> compiled_at timestamp nullable - time statement was compiled, requires statistics timing to be enabled.
</ul>
<p>
the internal identifier of a cached statement matches the tostring() method of a preparedstatement object for a cloudscape database.
<p>
this class also provides a static method to empty the statement cache, statementcache.emptycache()
*/
public final class statementcache extends vtitemplate
private int position    1
private vector data
private genericpreparedstatement currentps
private boolean wasnull
/**
empty the statement cache. must be called from a sql statement, e.g.
<pre>
call org.apache.derby.diag.statementcache::emptycache()
</pre>
*/
public static void emptycache   throws sqlexception
org apache derby impl sql conn genericlanguageconnectioncontext lcc
org apache derby impl sql conn genericlanguageconnectioncontext  connectionutil getcurrentlcc
lcc emptycache
public statementcache   throws sqlexception
org apache derby impl sql conn genericlanguageconnectioncontext lcc
org apache derby impl sql conn genericlanguageconnectioncontext  connectionutil getcurrentlcc
if  lcc statementcache    null
java util hashtable stmtcache    java util hashtable  lcc statementcache
data   new vector stmtcache size
for  enumeration e   stmtcache elements    e hasmoreelements
cacheditem ci    cacheditem  e nextelement
cachedstatement cs    cachedstatement  ci getentry
genericpreparedstatement ps    genericpreparedstatement  cs getpreparedstatement
data addelement ps
public boolean next
if  data    null
return false
position
for    position < data size    position
currentps    genericpreparedstatement  data elementat position
if  currentps    null
return true
data   null
return false
public void close
data   null
currentps   null
public string getstring int colid
wasnull   false
switch  colid
case 1
return currentps getobjectname
case 2
return   genericstatement  currentps statement  getcompilationschema
case 3
string sql   currentps getsource
sql   stringutil truncate sql  limits db2_varchar_maxwidth
return sql
default
return null
public boolean getboolean int colid
wasnull   false
switch  colid
case 4
// was/is unicode column, but since derby 10.0 all
// statements are compiled and submitted as unicode.
return true
case 5
return currentps isvalid
default
return false
public timestamp gettimestamp int colid
timestamp ts   currentps getendcompiletimestamp
wasnull    ts    null
return ts
public boolean wasnull
return wasnull
/*
** metadata
*/
private static final resultcolumndescriptor columninfo
embedresultsetmetadata getresultcolumndescriptor   		  types char  false  36
embedresultsetmetadata getresultcolumndescriptor       types varchar  true  128
embedresultsetmetadata getresultcolumndescriptor     types varchar  false  limits db2_varchar_maxwidth
embedresultsetmetadata getresultcolumndescriptor      types bit  false
embedresultsetmetadata getresultcolumndescriptor     types bit  false
embedresultsetmetadata getresultcolumndescriptor     types timestamp  true
private static final resultsetmetadata metadata   new embedresultsetmetadata columninfo
public resultsetmetadata getmetadata
return metadata