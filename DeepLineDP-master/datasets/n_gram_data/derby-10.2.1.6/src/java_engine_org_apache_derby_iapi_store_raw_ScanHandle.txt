/*
derby - class org.apache.derby.iapi.store.raw.scanhandle
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi store raw
import org apache derby iapi error standardexception
import org apache derby iapi store access databaseinstant
import java io inputstream
/**
inteface for scanning the log from outside the rawstore.
*/
public interface scanhandle
/**
position to the next log record.
@return true if the log contains a next flushed log record and
false otherwise. if this returns false it is incorrect
to make any of the other calls on this interface.
@exception standardexception oops
*/
public boolean next   throws standardexception
/**
get the group for the current log record.
@exception standardexception oops
*/
public int getgroup   throws standardexception
/**
get the loggable associated with the currentlogrecord
@exception standardexception oops
*/
public loggable getloggable   throws standardexception
/**
get an inputstream for reading the optional data associated with
the current log record. this may only be called once per log record.
@exception standardexception oops
*/
public inputstream getoptionaldata   throws standardexception
/**
get the databaseinstant for the current log record.
@exception standardexception oops
*/
public databaseinstant getinstant   throws standardexception
/**
get the transactionid for the current log record.
@exception standardexception oops
*/
public object gettransactionid   throws standardexception
/**
close this scan.
*/
public void close