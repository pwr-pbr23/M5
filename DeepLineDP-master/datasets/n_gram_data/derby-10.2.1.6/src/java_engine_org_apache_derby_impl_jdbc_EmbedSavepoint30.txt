/*
derby - class org.apache.derby.impl.jdbc.embedsavepoint30
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl jdbc
import org apache derby impl jdbc embedconnection
import org apache derby impl jdbc connectionchild
import org apache derby impl jdbc util
import org apache derby iapi reference sqlstate
import org apache derby iapi error standardexception
import java sql savepoint
import java sql sqlexception
/**
* this class implements the savepoint interface from jdbc3.0
* this allows to set, release, or rollback a transaction to
* designated savepoints. savepoints provide finer-grained
* control of transactions by marking intermediate points within
* a transaction. once a savepoint has been set, the transaction
* can be rolled back to that savepoint without affecting preceding work.
<p><b>supports</b>
<ul>
<li> jsr169 - no subsetting for java.sql.savepoint
<li> jdbc 3.0 - class introduced in jdbc 3.0
</ul>
*
* @see java.sql.savepoint
*
*/
final class embedsavepoint30 extends connectionchild
implements savepoint
//in order to avoid name conflict, the external names are prepanded
//with "e." and internal names always start with "i." this is for bug 4467
private final string savepointname
private final int savepointid
//////////////////////////////////////////////////////////////
//
// constructors
//
//////////////////////////////////////////////////////////////
/*
constructor assumes caller will setup context stack
and restore it.
@exception sqlexception on error
*/
embedsavepoint30 embedconnection conn  string name
throws standardexception
super conn
if  name    null    this is an unnamed savepoint
//generating a unique internal name for unnamed savepoints
savepointname       conn getlanguageconnection   getuniquesavepointname
savepointid   conn getlanguageconnection   getuniquesavepointid
else
savepointname       name
savepointid    1
conn getlanguageconnection   languagesetsavepoint savepointname  this
/**
*
* retrieves the generated id for the savepoint that this savepoint object
* represents.
*
* @return the numeric id of this savepoint
* @exception sqlexception if this is a named savepoint
*/
public int getsavepointid   throws sqlexception
if  savepointid     1
throw newsqlexception sqlstate no_id_for_named_savepoint
return savepointid
/**
*
* retrieves the name of the savepoint that this savepoint object
* represents.
*
* @return the name of this savepoint
* @exception sqlexception if this is an un-named savepoint
*/
public string getsavepointname   throws sqlexception
if  savepointid     1
throw newsqlexception sqlstate no_name_for_unnamed_savepoint
return savepointname substring 2
//cloudscape internally keeps name for both named and unnamed savepoints
string getinternalname
return savepointname
//bug 4468 - verify that savepoint rollback/release is for a savepoint from
//the current connection
boolean sameconnection embedconnection con
return  getembedconnection   getlanguageconnection      con getlanguageconnection