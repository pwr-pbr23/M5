/*
derby - class org.apache.derby.impl.store.access.btree.index.b2icontroller
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl store access btree index
import java io ioexception
import java util properties
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi error standardexception
import org apache derby iapi store access conglomerate conglomerate
import org apache derby iapi store access conglomerate transactionmanager
import org apache derby iapi store access conglomeratecontroller
import org apache derby iapi store access dynamiccompiledopenconglominfo
import org apache derby iapi store access qualifier
import org apache derby iapi types rowlocation
import org apache derby iapi store access scancontroller
import org apache derby iapi store access transactioncontroller
import org apache derby iapi store access conglomeratecontroller
import org apache derby iapi store raw containerhandle
import org apache derby iapi store raw lockingpolicy
import org apache derby iapi store raw transaction
import org apache derby iapi types datavaluedescriptor
import org apache derby impl store access btree btreecontroller
import org apache derby impl store access btree btreelockingpolicy
import org apache derby impl store access conglomerate conglomerateutil
import org apache derby iapi services io formatablebitset
/**
* controller used to insert rows into a secondary index.
*
* implements the conglomeratecontroller interface for the b-tree index
* access method.
*
* note most work of this class is inherited from the generic btree
* implementation.  this class initializes the top level object and deals with
* locking information specific to a secondary index implementation of a btree.
*/
public class b2icontroller extends btreecontroller
/*
** fields of b2icontroller.
*/
private conglomeratecontroller  base_cc_for_locking
/*
** methods of b2icontroller.
*/
b2icontroller
// perform the generic b-tree construction.
super
void init
transactionmanager              xact_manager
transaction                     rawtran
boolean                         hold
int                             open_mode
int                             lock_level
lockingpolicy                   locking_policy
boolean                         get_locks
b2i                             conglomerate
b2iundo                         undo
b2istaticcompiledinfo           static_info
dynamiccompiledopenconglominfo  dynamic_info
throws standardexception
// open and lock the base table.
int base_open_mode
open_mode   transactioncontroller openmode_for_lock_only
// open the base conglomerate - just to get the lock.  since btree
// controllers only support update operations we just hard code
// the transactioncontroller.isolation_repeatable_read, which is only
// used for geting the ix intent lock on the table.
if  static_info    null
base_cc_for_locking
xact_manager opencompiledconglomerate
false
base_open_mode  lock_level
transactioncontroller isolation_repeatable_read
static_info base_table_static_info
/* todo - maintain a dynamic info for this */
conglomerate  static_info getconglom
getdynamiccompiledconglominfo
conglomerate baseconglomerateid
else
base_cc_for_locking
xact_manager openconglomerate
conglomerate baseconglomerateid
false
base_open_mode  lock_level
transactioncontroller isolation_repeatable_read
btreelockingpolicy b2i_locking_policy
if  lock_level    transactioncontroller mode_table
b2i_locking_policy
new b2itablelocking3
rawtran  lock_level  locking_policy
base_cc_for_locking  this
else if  lock_level    transactioncontroller mode_record
b2i_locking_policy
new b2irowlocking3
rawtran  lock_level  locking_policy
base_cc_for_locking  this
else
if  sanitymanager debug
sanitymanager throwassert     lock_level
b2i_locking_policy   null
// do generic b-tree initialization.
super init
xact_manager
hold
containerhandle  null
rawtran
open_mode
lock_level
b2i_locking_policy
conglomerate
undo
static_info
dynamic_info
if  sanitymanager debug
sanitymanager assert conglomerate    null
/*
** methods of conglomeratecontroller.
*/
/**
close the conglomerate controller.
<p>
any changes to this method will probably have to be reflected in close as
well.
<p>
currently delegates to openbtree.  if the btree controller ends up not
having any state of its own, we can remove this method (the vm will
dispatch to openbtree), gaining some small efficiency.  for now, this
method remains for clarity.
@see conglomeratecontroller#close
**/
public void close
throws standardexception
super close
if  base_cc_for_locking    null
base_cc_for_locking close
base_cc_for_locking   null
/**
insert a row into the conglomerate.
@see conglomeratecontroller#insert
@exception standardexception standard exception policy.
**/
public int insert datavaluedescriptor row
throws standardexception
if  sanitymanager debug
if  this container    null
sanitymanager assert this getconglomerate   instanceof b2i
rowlocation rowloc    rowlocation
row
sanitymanager assert
rowloc isnull
return super insert row