/*
derby - class org.apache.derby.impl.sql.execute.privilegeinfo
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby catalog uuid
import org apache derby iapi sql dictionary tupledescriptor
import org apache derby iapi sql dictionary schemadescriptor
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi sql activation
import org apache derby iapi reference sqlstate
import org apache derby iapi error standardexception
import java util list
public abstract class privilegeinfo
/**
*	this is the guts of the execution-time logic for grant/revoke
*
* @param activation
* @param grant true if grant, false if revoke
* @param grantees a list of authorization ids (strings)
*
* @exception standardexception		thrown on failure
*/
abstract public void executegrantrevoke  activation activation
boolean grant
list grantees
throws standardexception
/**
* determines whether a user is the owner of an object
* (table, function, or procedure). note that database owner can access
* database objects without needing to be their owner
*
* @param user					authorizationid of current user
* @param objectdescriptor		object being checked against
* @param sd					schemadescriptor
* @param dd					datadictionary
*
* @exception standardexception if user does not own the object
*/
protected void checkownership  string user
tupledescriptor objectdescriptor
schemadescriptor sd
datadictionary dd
throws standardexception
if   user equals sd getauthorizationid
user equals dd getauthorizationdatabaseowner
throw standardexception newexception sqlstate auth_not_owner
user
objectdescriptor getdescriptortype
sd getschemaname
objectdescriptor getdescriptorname
/**
* this method adds a warning if a revoke statement has not revoked
* any privileges from a grantee.
*
* @param activation
* @param grant true if grant, false if revoke
* @param privileges_revoked true, if at least one privilege has been
* 							revoked from a grantee, false otherwise
* @param grantee authorization id of the user
*/
protected void addwarningifprivilegenotrevoked  activation activation
boolean grant
boolean privileges_revoked
string grantee
if  grant     privileges_revoked
activation addwarning standardexception newwarning
sqlstate lang_privilege_not_revoked  grantee