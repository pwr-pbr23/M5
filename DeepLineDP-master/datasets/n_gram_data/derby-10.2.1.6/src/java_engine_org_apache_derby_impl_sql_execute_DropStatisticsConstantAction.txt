/*
derby - class org.apache.derby.impl.sql.execute.dropstatisticsconstantaction
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby iapi sql activation
import org apache derby iapi error standardexception
import org apache derby iapi sql dictionary schemadescriptor
import org apache derby iapi sql dictionary tabledescriptor
import org apache derby iapi sql dictionary conglomeratedescriptor
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql depend dependencymanager
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi store access transactioncontroller
import org apache derby catalog uuid
/**
* this class drops all statistics for a particular table or index.
*
* @author manish.
*/
class dropstatisticsconstantaction extends ddlconstantaction
private final string objectname
private final boolean fortable
private final schemadescriptor sd
private final string fulltablename
dropstatisticsconstantaction schemadescriptor sd
string fulltablename
string objectname
boolean fortable
this objectname   objectname
this sd   sd
this fortable   fortable
this fulltablename   fulltablename
public void executeconstantaction activation activation
throws standardexception
tabledescriptor td
conglomeratedescriptor cd   null
languageconnectioncontext lcc   activation getlanguageconnectioncontext
datadictionary dd   lcc getdatadictionary
dependencymanager dm   dd getdependencymanager
transactioncontroller tc   lcc gettransactionexecute
dd startwriting lcc
if  fortable
td   dd gettabledescriptor objectname  sd
else
cd   dd getconglomeratedescriptor objectname
sd  false
td   dd gettabledescriptor cd gettableid
/* invalidate all sps's on the table-- bad plan on sps, so user drops
* statistics and would want sps's invalidated so that recompile would
* give good plans; thats the theory anyways....
*/
dm invalidatefor td  dependencymanager drop_statistics  lcc
dd dropstatisticsdescriptors td getuuid      cd    null  ? cd getuuid
null   tc
public string tostring
return       fortable  ?
fulltablename