/*
derby - class org.apache.derby.iapi.store.raw.streamcontainerhandle
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi store raw
import org apache derby iapi error standardexception
import org apache derby iapi types datavaluedescriptor
import java util properties
/**
a stream container handle
*/
public interface streamcontainerhandle
public static final int temporary_segment    1
/**
return my identifier.
*/
public containerkey getid
/**
* request the system properties associated with a container.
* <p>
* request the value of properties that are associated with a stream table.
* the following properties can be requested:
*     derby.storage.streamfilebuffersize
* <p>
* to get the value of a particular property add it to the property list,
* and on return the value of the property will be set to it's current
* value.  for example:
*
* get_prop(conglomeratecontroller cc)
* {
*     properties prop = new properties();
*     prop.put("derby.storage.streamfilebuffersize", "");
*     cc.gettableproperties(prop);
*
*     system.out.println(
*         "table's buffer size = " +
*         prop.getproperty("derby.storage.streamfilebuffersize");
* }
*
* @param prop   property list to fill in.
*
* @exception  standardexception  standard exception policy.
**/
void getcontainerproperties properties prop
throws standardexception
/**
fetch the next record.
fills in the storable columns within the passed in row if
row is not null, otherwise the record is not fetched.
if the row.length is less than the number of fields in the row,
then, will fill the row, and ignore the rest of the row.
<br>
when no more row is found, then false is returned.
<p>
<b>locking policy</b>
<br>
no locks.
@param row row to be filled in with information from the record.
@exception standardexception	standard cloudscape error policy
*/
boolean fetchnext datavaluedescriptor row  throws standardexception
/**
close me. after using this method the caller must throw away the
reference to the container object, e.g.
<pre>
ref.close();
ref = null;
</pre>
<br>
the container will be closed automatically at the commit or abort
of the transaction if this method is not called explictly.
*/
public void close
/**
remove the stream container
@exception standardexception standard cloudscape error policy
*/
public void removecontainer   throws standardexception