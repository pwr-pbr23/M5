/*
derby - class org.apache.derby.impl.sql.conn.cachedstatement
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql conn
import org apache derby iapi services context contextmanager
import org apache derby iapi error standardexception
import org apache derby impl sql genericpreparedstatement
import org apache derby impl sql genericstatement
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql preparedstatement
import org apache derby iapi services cache cacheable
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi services monitor monitor
/**
@author ames
*/
public class cachedstatement implements cacheable
private genericpreparedstatement ps
private object identity
public cachedstatement
/**
* get the preparedstatement that is associated with this cacheable
*/
public genericpreparedstatement getpreparedstatement
return ps
/* cacheable interface */
/**
@see cacheable#clean
*/
public void clean boolean forremove
/**
*/
public cacheable setidentity object key
identity   key
ps   new genericpreparedstatement  genericstatement  key
ps setcacheholder this
return this
/** @see cacheable#createidentity */
public cacheable createidentity object key  object createparameter
if  sanitymanager debug
sanitymanager throwassert
return null
/** @see cacheable#clearidentity */
public void clearidentity
if  sanitymanager debug
sanitymanager debug     ps getsource
ps setcacheholder null
identity   null
ps   null
/** @see cacheable#getidentity */
public object getidentity
return identity
/** @see cacheable#isdirty */
public boolean isdirty
return false
/* cacheable interface */