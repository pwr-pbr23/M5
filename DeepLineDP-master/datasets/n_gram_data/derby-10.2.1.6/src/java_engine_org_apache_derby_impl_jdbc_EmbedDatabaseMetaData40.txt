/*
derby - class org.apache.derby.impl.jdbc.embeddatabasemetadata40
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl jdbc
import java sql resultset
import java sql rowidlifetime
import java sql databasemetadata
import java sql sqlexception
import java sql preparedstatement
import org apache derby impl jdbc util
import org apache derby iapi reference sqlstate
public class embeddatabasemetadata40 extends embeddatabasemetadata
private final string url
public embeddatabasemetadata40 embedconnection connection  string url  throws sqlexception
super connection url
this url   url
/**
* retrieves the major jdbc version number for this driver.
*
* @return jdbc version major number
*/
public int getjdbcmajorversion
return 4
/**
* retrieves the minor jdbc version number for this driver.
*
* @return jdbc version minor number
*/
public int getjdbcminorversion
return 0
public rowidlifetime getrowidlifetime   throws sqlexception
return rowidlifetime rowid_unsupported
public boolean supportsstoredfunctionsusingcallsyntax   throws sqlexception
return true
public boolean autocommitfailureclosesallresultsets   throws sqlexception
// todo - find out what this really should be
return false
public boolean providesqueryobjectgenerator   throws sqlexception
return false
/**
* returns false unless <code>interfaces</code> is implemented
*
* @param  interfaces             a class defining an interface.
* @return true                   if this implements the interface or
*                                directly or indirectly wraps an object
*                                that does.
* @throws java.sql.sqlexception  if an error occurs while determining
*                                whether this is a wrapper for an object
*                                with the given interface.
*/
public boolean iswrapperfor class<?> interfaces  throws sqlexception
return interfaces isinstance this
/**
* returns <code>this</code> if this class implements the interface
*
* @param  interfaces a class defining an interface
* @return an object that implements the interface
* @throws java.sql.sqlexption if no object if found that implements the
* interface
*/
public <t> t unwrap java lang class<t> interfaces
throws sqlexception
//derby does not implement non-standard methods on
//jdbc objects
//hence return this if this class implements the interface
//or throw an sqlexception
try
return interfaces cast this
catch  classcastexception cce
throw newsqlexception sqlstate unable_to_unwrap interfaces