/*
derby - class org.apache.derby.iapi.db.connectioninfo
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi db
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql conn connectionutil
import org apache derby iapi error standardexception
import org apache derby iapi error publicapi
import java sql sqlexception
/**
*
* connectioninfo class provides static methods for getting information
* related to a jdbc connection.
*
* when called from within the query language,
* each method returns information about the connection from which it was called.
* <p>
* use the methods of this class only within an sql-j statement; do not call
* them directly.
*/
public abstract class connectioninfo
/** no requirement for a constructor */
private connectioninfo
/**
* get the last autoincrement value inserted into the column by
* a statement in this connection.
<br><b> in jdbc 3.0 an application should use the standard methods provided by
jdbc 3.0 to obtain generated key values. see java.sql.statement.getgeneratedkeys().</b>
*
* @param 	schemaname		name of the schema.
* @param	tablename		name of the table.
* @param 	columnname		name of the column.
*
* @return  the last value to be inserted into the named autoincrement
* column by this connection. returns null if this connection has never
* inserted into this column.
*
* @exception sqlexception if the current connection could not be
* 			  established properly.
*/
public static long lastautoincrementvalue string schemaname
string tablename
string columnname
throws sqlexception
// a static method can manipulate lcc?
languageconnectioncontext lcc   connectionutil getcurrentlcc
return lcc lastautoincrementvalue schemaname  tablename  columnname
/**
* <b>internal use only</b>
* (<b>this method may be removed in a future release</b>.)
* @throws sqlexception on error
**/
public static long nextautoincrementvalue string schemaname
string tablename
string columnname
throws sqlexception
languageconnectioncontext lcc   connectionutil getcurrentlcc
try
return
lcc nextautoincrementvalue schemaname  tablename  columnname
catch  standardexception se
throw publicapi wrapstandardexception se