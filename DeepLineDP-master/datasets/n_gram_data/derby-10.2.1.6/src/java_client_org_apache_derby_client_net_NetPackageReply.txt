/*
derby - class org.apache.derby.client.net.netpackagereply
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client net
import org apache derby client am disconnectexception
import org apache derby client am clientmessageid
import org apache derby shared common reference sqlstate
public class netpackagereply extends netconnectionreply
netpackagereply netagent netagent  int buffersize
super netagent  buffersize
netsqlca parsesqlerrorcondition   throws disconnectexception
parsesqlerrrm
parsetypdefsormgrlvlovrs
netsqlca netsqlca   parsesqlcard null
return netsqlca
// also called by netstatementreply
void parsedtamchrm   throws disconnectexception
boolean svrcodreceived   false
int svrcod   codepoint svrcod_info
boolean rdbnamreceived   false
string rdbnam   null
parselengthandmatchcodepoint codepoint dtamchrm
pushlengthoncollectionstack
int peekcp   peekcodepoint
while  peekcp    reply end_of_collection
boolean foundinpass   false
if  peekcp    codepoint svrcod
foundinpass   true
svrcodreceived   checkandgetreceivedflag svrcodreceived
svrcod   parsesvrcod codepoint svrcod_error  codepoint svrcod_error
peekcp   peekcodepoint
if  peekcp    codepoint rdbnam
foundinpass   true
rdbnamreceived   checkandgetreceivedflag rdbnamreceived
rdbnam   parserdbnam true
peekcp   peekcodepoint
if   foundinpass
doprmnsprmsemantics peekcp
popcollectionstack
checkrequiredobjects svrcodreceived  rdbnamreceived
netagent_ setsvrcod svrcod
dodtamchrmsemantics
// rdb update reply message indicates that a ddm command resulted
// in an update at the target relational database.  if a command
// generated multiple reply messages including an rdbupdrm, then
// the rdbupdrm must be the first reply message for the command.
// for each target server, the rdbupdrm  must be returned the first
// time an update is made to the target rdb within a unit of work.
// the target server may optionally return the rdbupdrm after subsequent
// updates within the uow.  if multiple target rdbs are involved with
// the current uow and updates are made with any of them, then the rdbupdrm
// must be returned in response to the first update at each of them.
protected void parserdbupdrm   throws disconnectexception
boolean svrcodreceived   false
int svrcod   codepoint svrcod_info
boolean rdbnamreceived   false
string rdbnam   null
parselengthandmatchcodepoint codepoint rdbupdrm
pushlengthoncollectionstack
// in xa global transaction we need to know if we have a read-only
//  transaction, if we get a rdbupdrm this is not a read-only transaction
//  currently only xaconnections care about read-only transactions, if
//  non-xa wants this information they will need to initialize the flag
//  at start of uow
netagent_ netconnection_ setreadonlytransactionflag false
int peekcp   peekcodepoint
while  peekcp    reply end_of_collection
boolean foundinpass   false
if  peekcp    codepoint svrcod
foundinpass   true
svrcodreceived   checkandgetreceivedflag svrcodreceived
svrcod   parsesvrcod codepoint svrcod_info  codepoint svrcod_info
peekcp   peekcodepoint
if  peekcp    codepoint rdbnam
foundinpass   true
rdbnamreceived   checkandgetreceivedflag rdbnamreceived
rdbnam   parserdbnam true
peekcp   peekcodepoint
if   foundinpass
doprmnsprmsemantics peekcp
popcollectionstack
checkrequiredobjects svrcodreceived  rdbnamreceived
// call an event to indicate the server has been updated
netagent_ setsvrcod svrcod
// sql error condition reply message indicates that an sql error
// has occurred.  it may be sent even though no reply message
// precedes the sqlcard object that is the normal
// response to a command when an exception occurs.
// the sqlerrm is also used when a bndsqlstt command is terminated
// by an intrrdbrqs command.
// this reply message must precede an sqlcard object.
// the sqlstate is returned in the sqlcard.
//
// returned from server:
// svrcod - required  (8 - error)
// rdbnam - optional
//
// also called by netresultsetreply and netstatementreply
void parsesqlerrrm   throws disconnectexception
boolean svrcodreceived   false
int svrcod   codepoint svrcod_info
boolean rdbnamreceived   false
string rdbnam   null
parselengthandmatchcodepoint codepoint sqlerrrm
pushlengthoncollectionstack
int peekcp   peekcodepoint
while  peekcp    reply end_of_collection
boolean foundinpass   false
if  peekcp    codepoint svrcod
foundinpass   true
svrcodreceived   checkandgetreceivedflag svrcodreceived
svrcod   parsesvrcod codepoint svrcod_error  codepoint svrcod_error
peekcp   peekcodepoint
if  peekcp    codepoint rdbnam
foundinpass   true
rdbnamreceived   checkandgetreceivedflag rdbnamreceived
rdbnam   parserdbnam true
peekcp   peekcodepoint
if   foundinpass
doprmnsprmsemantics peekcp
popcollectionstack
checkrequiredobjects svrcodreceived
// move into a method
netagent_ setsvrcod svrcod
//--------------------- parse ddm reply data--------------------------------------
//------------------------parse ddm scalars-----------------------------
// rdb package name and consistency token scalar object specifies the
// fully qualified name of a relational database package and its
// consistency token.
protected object parsepkgnamct boolean skip  throws disconnectexception
parselengthandmatchcodepoint codepoint pkgnamct
if  skip
skipbytes
return null
agent_ accumulatechainbreakingreadexceptionandthrow new disconnectexception agent_
new clientmessageid sqlstate drda_command_not_implemented
return null     to make compiler happy