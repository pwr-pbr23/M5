/*
derby - class org.apache.derby.impl.sql.execute.indexcolumnorder
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby iapi store access columnordering
import org apache derby iapi services io storedformatids
import org apache derby iapi services io formatidutil
import org apache derby iapi services io formatable
import java io objectoutput
import java io objectinput
import java io ioexception
/**
basic implementation of columnordering.
not sure what to tell callers about 0-based versus 1-based numbering.
assume 0-based for now.
@author ames
*/
public class indexcolumnorder implements columnordering  formatable
/********************************************************
**
**	this class implements formatable. that means that it
**	can write itself to and from a formatted stream. if
**	you add more fields to this class, make sure that you
**	also write/read them with the writeexternal()/readexternal()
**	methods.
**
**	if, inbetween releases, you add more fields to this class,
**	then you should bump the version number emitted by the gettypeformatid()
**	method.
**
********************************************************/
int colnum
boolean ascending
/*
* class interface
*/
/**
* niladic constructor for formatable
*/
public indexcolumnorder
public indexcolumnorder int colnum
this colnum   colnum
this ascending   true
public indexcolumnorder int colnum  boolean ascending
this colnum   colnum
this ascending   ascending
/*
* columnordering interface
*/
public int getcolumnid
return colnum
public boolean getisascending
return ascending
//////////////////////////////////////////////
//
// formatable
//
//////////////////////////////////////////////
/**
* write this object out
*
* @param out write bytes here
*
* @exception ioexception thrown on error
*/
public void writeexternal objectoutput out  throws ioexception
out writeint colnum
out writeboolean ascending
/**
* read this object from a stream of stored objects.
*
* @param in read this.
*
* @exception ioexception					thrown on error
* @exception classnotfoundexception		thrown on error
*/
public void readexternal objectinput in
throws ioexception  classnotfoundexception
colnum   in readint
ascending   in readboolean
/**
* get the formatid which corresponds to this class.
*
*	@return	the formatid of this class
*/
public	int	gettypeformatid  	  return storedformatids index_column_order_v01_id