/*
derby - class org.apache.derby.client.net.codepoint
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client net
public class codepoint
public static final int fixed_row_query_protocol   0
public static final int limited_block_query_protocol   1
public static final int force_fixed_row_query_protocol   2
// character subtype mbcs
static final int cstmbcs   0x2435
// force fixed row query protocol
static final int frcfixrow   0x2410
// title
static final int title   0x0045
// ---------------callable statement codepoints-------------------------------
// pkgsnlst
static final int pkgsnlst   0x2139
// output expected
static final int outexp   0x2111
// procedure name
static final int prcnam   0x2138
// maximum result set count.
static final int maxrslcnt   0x2140
// maximum result set count no limit.
// requester is capable of receiving all result sets in the response to excsqlstt.
static final int maxrslcnt_nolimit   0xffff
// result set flags
static final int rslsetflg   0x2142
static final int rslsetflg_return_names   0x80
static final int rslsetflg_return_labels   0x40
// rslsetflgs added in sqlam 7 for requesting standard, extended, or light sqldas
static final int rslsetflg_standard_sqlda   0x00
static final int rslsetflg_extended_sqlda   0x04
// --------------------code points for constant ddm data----------------------
// indicates false state.  this 1-byte code point is used by some ddm parameters.
static final byte false    16      was 0xf0
// indicates true state.  this 1-byte code point is used by some ddm parameters.
static final byte true    15      was 0xf1
// zero indicator constant.
// indicates data does flow.
static final int zeroind   0x00
// fdoca null indicator constant.
// indicates data does not flow.
static final int nulldata   0xff
// security check was successful.
static final int secchkcd_00   0x00
// secmec value not supported.
static final int secchkcd_01   0x01
// local security service info.
static final int secchkcd_08   0x08
// local security service retryable error.
static final int secchkcd_09   0x09
// local security service non-retryable error.
static final int secchkcd_0a   0x0a
// sectkn missing or invalid.
static final int secchkcd_0b   0x0b
// password expired.
static final int secchkcd_0e   0x0e
// password invalid.
static final int secchkcd_0f   0x0f
// password missing.
static final int secchkcd_10   0x10
// userid missing.
static final int secchkcd_12   0x12
// userid invalid.
static final int secchkcd_13   0x13
// userid revoked.
static final int secchkcd_14   0x14
// new password invalid.
static final int secchkcd_15   0x15
//-----------------------ddm enumerated values-------------------------------
// typsqlda - standard output sqlda
static final int typsqlda_std_output   0
// typsqlda - standard input sqlda
static final int typsqlda_std_input   1
// typsqlda - light output sqlda
static final int typsqlda_light_output   2
// typsqlda - light input sqlda
static final int typsqlda_light_input   3
// typsqlda - extended output sqlda
static final int typsqlda_x_output   4
// typsqlda - extended input sqlda
static final int typsqlda_x_input   5
// qryclsimp - target server determines whether to implicitly
// close the cursor or not upon sqlstate 02000 based on cursor type.
static final int qryclsimp_server_choice   0x00
// qryclsimp - target server must implicitly close the cursor
// upon sqlstate 02000.
static final int qryclsimp_yes   0x01
// qryclsimp - target server must not implicitly close the cursor
// upon sqlstate 02000.
static final int qryclsimp_no   0x02
// sql error diagnostic level
// diaglvl0 a null sqldiaggrp is returned. this is the default.
// diaglvl1 a non-null sqldiaggrp should be returned.
// diaglvl2 a non-null sqldiaggrp should be returned, and both sqldcmsg
// message text fields should be returned as null strings.
static final byte diaglvl0    byte 0xf0
static final byte diaglvl1    byte 0xf1
static final byte diaglvl2    byte 0xf2
// ----------------------ddm code points--------------------------------------
// exchange server attributes.
final static int excsat   0x1041
// sync point control request.
public final static int syncctl   0x1055
// sync point resync command.
final static int syncrsy   0x1069
// access security.
final static int accsec   0x106d
// security check.
final static int secchk   0x106e
// access rdb.
final static int accrdb   0x2001
// close query.
final static int clsqry   0x2005
// continue query.
final static int cntqry   0x2006
// describe sql statement.
final static int dscsqlstt   0x2008
// execute immediate sql statement.
final static int excsqlimm   0x200a
// execute sql statement.
final static int excsqlstt   0x200b
// set sql environment.
final static int excsqlset   0x2014
// open query.
final static int opnqry   0x200c
// output override.
final static int outovr   0x2415
// prepare sql statement.
final static int prpsqlstt   0x200d
// rdb commit unit of work.
final static int rdbcmm   0x200e
// rdb rollback unit of work.
final static int rdbrllbck   0x200f
// describe rdb table.
final static int dscrdbtbl   0x2012
// sql program variable data.
final static int sqldta   0x2412
// sql data reply data.
public final static int sqldtard   0x2413
// sql statement.
final static int sqlstt   0x2414
// query answer set description.
public final static int qrydsc   0x241a
// query answer set data.
public final static int qrydta   0x241b
// sql statement attributes.
final static int sqlattr   0x2450
// access security reply data.
// contains the security information from a target server's
// security manager.  this information is returned in response
// to an accsec command.
static final int accsecrd   0x14ac
// agent codepoint constant.
static final int agent   0x1403
// the codepoint for codepoint
static final int codpnt   0x000c
// ccsid for double-byte characters codepoint constant.
static final int ccsiddbc   0x119d
// ccsid for mixed-byte characters codepoint constant.
static final int ccsidmbc   0x119e
// ccsid for single-byte characters codepoint constant.
static final int ccsidsbc   0x119c
// describes the communications manager that supports
// conversational protocols by using system network
// architecture logical unit 6.2 (sna lu 6.2) local
// communications facilities.
static final int cmnappc   0x1444
// tcp/ip communication manager codepoint constant.  min. level 5.
static final int cmntcpip   0x1474
// correlation token codepoint constant.
static final int crrtkn   0x2135
// description error code
static final int dscerrcd   0x2101
// server attributes reply data codepoint constant.
static final int excsatrd   0x1443
// external name codepoint constant.
static final int extnam   0x115e
// fixed row query protocol.
static final int fixrowprc   0x2418
// limited block query protocol.
static final int lmtblkprc   0x2417
// maximum number of extra blocks.
static final int maxblkext   0x2141
// manager level list codepoint constant.
static final int mgrlvlls   0x1404
// manager level number attribute constants.
// specifies the level of a defined ddm manager.
static final int mgrlvln   0x1473
// password
static final int password   0x11a1
// package name & consistency token
static final int pkgnamct   0x2112
// conversational protocol error code
static final int prccnvcd   0x113f
// product specific identifier codepoint constant.
static final int prdid   0x112e
// product specific data
static final int prddta   0x2104
// query attribute for scrollability.
static final int qryattscr   0x2149
// query attribute for rowset
static final int qryattset   0x214a
// query attribute for sensitivity.
static final int qryattsns   0x2157
// query attribute for updatability.
static final int qryattupd   0x2150
// query close implicit
static final int qryclsimp   0x215d
// query scroll orientation.
static final int qryscrorn   0x2152
// query scroll relative orientation.
static final int qryscrrel   1
// query scroll absolute orientation.
static final int qryscrabs   2
// query scroll after orientation.
static final int qryscraft   3
// query scroll before orientation.
static final int qryscrbef   4
// query instance identifier
static final int qryinsid   0x215b
// query insensitive to changes
static final int qryins   1
// sensitive static
static final int qrysnsstc   0x2
// query attributes is unknown or undefined
static final int qryunk   0
// query row number.
static final int qryrownbr   0x213d
// query block reset.
static final int qryblkrst   0x2154
// query returns data.
static final int qryrtndta   0x2155
// query block protocol control
static final int qryblkctl   0x2132
// query block size
static final int qryblksz   0x2114
// query protocol type
static final int qryprctyp   0x2102
// query rowset size.
static final int qryrowset   0x2156
// cursor is read-only.
static final int qryrdo   0x1
// cursor allows read, delete, and update operations.
static final int qryupd   0x4
// relational database codepoint constant.  min. level 3.
static final int rdb   0x240f
// rdb access manager class.
static final int rdbacccl   0x210f
// rdb allow updates
static final int rdbalwupd   0x211a
// relational database name codepoint constant.
static final int rdbnam   0x2110
// resynchronization manager.  min levl 5.
// it is a manager object of ddm that performs
// resynchronization for in-doubt units of work after
// a sync point operation failure.
static final int rsyncmgr   0x14c1
// retuan sql descriptor area
static final int rtnsqlda   0x2116
// type of sql descriptor area
static final int typsqlda   0x2146
// security check code codepoint constant.
static final int secchkcd   0x11a4
// security mechanism codepoint constant.
static final int secmec   0x11a2
// security manager codepoint constant.
static final int secmgr   0x1440
// security token codepoint constant.
static final int sectkn   0x11dc
// sql application manager codepoint constant.  min. level 3.
static final int sqlam   0x2407
// sql communication area reply data codepoint constant.
public static final int sqlcard   0x2408
// sql result set column information reply data.
public static final int sqlcinrd   0x240b
// hold cursor position
static final int sqlcsrhld   0x211f
// sql result set reply data.
static final int sqlrslrd   0x240e
// sqlda reply data codepoint constant.
public static final int sqldard   0x2411
// server class name codepoint constant.
static final int srvclsnm   0x1147
// server name codepoint constant.
static final int srvnam   0x116d
// server product release level codepoint constant.
static final int srvrlslv   0x115a
// severity code codepoint constant.
static final int svrcod   0x1149
// sync point manager.  min. level 4.
// it is a manager object of ddm that coordinates resource
// recovery of the units of work associated with recoverable
// resources in multiple ddm servers.
static final int syncptmgr   0x14c0
// syntax error code
static final int synerrcd   0x114a
// data type definition name codepoint constant.
public static final int typdefnam   0x002f
// typdef overrides codepoint constant.
public static final int typdefovr   0x0035
// unit of work disposition codepoint constant.
static final int uowdsp   0x2115
// unit of work disposition.  committed enumerated value.
static final int uowdsp_commit   0x01
// unit of work dispostion. rolled back enumerated value.
static final int uowdsp_rollback   0x02
// usrid codepoint constant.
static final int usrid   0x11a0
// rdb package name, consistency token, and section
// number codepoint constant.
static final int pkgnamcsn   0x2113
// rdb package section number
static final int pkgsn   0x210c
// scalar data length
static final int scldtalen   0x0100
// xa manager
static final int xamgr   0x1c01
// sql error diagnostic level
static final int diaglvl   0x2160
//-----------------------ddm reply codepoints---------------------------------
// command check codepoint constant.
public static final int cmdchkrm   0x1254
// command not supported codepoint constant.
static final int cmdnsprm   0x1250
// abnormal end of unit of work condition codepoint constant.
static final int abnuowrm   0x220d
// access to rdb completed.
// specifies that an instance of the sql application manager
// has been created and is bound to the specified rdb.
static final int accrdbrm   0x2201
final static int mgrlvlrm   0x1210
// end unit of work condition codepoint constant.
static final int enduowrm   0x220c
// object not supported codepoint constant.
static final int objnsprm   0x1253
// conversational protocol error
public static final int prccnvrm   0x1245
// query not open codepoint constant.
static final int qrynoprm   0x2202
// query previously opened codepoint
static final int qrypoprm   0x220f
// rdb currently accessed codepoint
static final int rdbaccrm   0x2207
// rdb commit allowed codepoint
static final int rdbcmtok   0x2105
// security check.
// indicates the acceptability of the security information.
static final int secchkrm   0x1219
// rdb access failed reply message codepoint
static final int rdbaflrm   0x221a
// not authorized to rdb reply message codepoint
static final int rdbathrm   0x22cb
// rdb not accessed codepoint constant.
static final int rdbnacrm   0x2204
// rdb not found codepoint
static final int rdbnfnrm   0x2211
// rdb update reply message codepoint constant.
static final int rdbupdrm   0x2218
// data stream syntax error
public static final int syntaxrm   0x124c
// parameter value not supported codepoint constant.
public static final int valnsprm   0x1252
// sql error condition codepoint constant.
static final int sqlerrrm   0x2213
// open query complete.
public final static int opnqryrm   0x2205
// end of query.
public final static int endqryrm   0x220b
// data descriptor mismatch.
final static int dtamchrm   0x220e
// open query failure.
final static int opnqflrm   0x2212
// rdb result set reply message.
public final static int rslsetrm   0x2219
// manager level overrides
public static final int mgrlvlovr   0x1c03
//----------------------------fdoca code points-------------------------------
static final int rtnextdta   0x2148
static final int rtnextrow   0x01
static final int rtnextall   0x02
// externalized fd:oca data codepoint constant.
public static final int extdta   0x146c
// fdoca data descriptor
static final int fdodsc   0x0010
// fdoca data
static final int fdodta   0x147a
//--------------------------ddm error code points---------------------------------
// syntax error code.  dss header length less than 6.
static int synerrcd_dss_less_than_6   0x01
// syntax error code.  dss header length does not match the number of
// bytes of data found.
static int synerrcd_dss_length_byte_number_mismatch   0x02
// syntax error code.  dss header c-byte not d0.
static int synerrcd_cbyte_not_d0   0x03
// syntax error code.  dss header f-bytes either not recognized or not supported.
static int synerrcd_fbyte_not_supported   0x04
// syntax error code.  object length less than four.
static int synerrcd_obj_len_less_than_4   0x07
// syntax error code.  object length not allowed.
static int synerrcd_obj_len_not_allowed   0x0b
// syntax error code.  required object not found.
static int synerrcd_req_obj_not_found   0x0e
// syntax error code.  duplicate object present.
static int synerrcd_dup_obj_present   0x12
// syntax error code.  invalid request correlator specified.
static int synerrcd_invalid_correlator   0x13
// syntax error code.  incorrect large object extended length field.
static int synerrcd_incorrect_extended_len   0x0c
// syntax error code.  dss continuation less than or equal to two.
static int synerrcd_dss_cont_less_or_equal_2   0x16
// syntax error code.  dss chaining bit not b'1', but dssfmt bit3 set to b'1'.
static int synerrcd_chain_off_same_next_correlator   0x18
// syntax error code.  dss chaining bit not b'1', but error continuation requested.
static int synerrcd_chain_off_error_continue   0x1a
// conversational protocol error code.  objdss sent when not allowed.
static int prccnvcd_objdss_sent_not_allowed   0x03
// information only severity code.
static int svrcod_info   0
// warning severity code.
static int svrcod_warning   4
// error severity code.
static int svrcod_error   8
// severe error severity code.
static int svrcod_severe   16
// access damage severity code.
static int svrcod_accdmg   32
// permanent damage severity code.
static int svrcod_prmdmg   64
// session damage severity code.
static int svrcod_sesdmg   128
//--------------------------xa code points---------------------------
// sync point control reply
public static final int synccrd   0x1248
// xa return value
public static final int xaretval   0x1904
// new unit of work for xa
public static final int synctype_new_uow   0x09
// end unit of work (sync type).
public static final int synctype_end_uow   0x0b
// prepare to commit (sync type).
public static final int synctype_prepare   0x01
// migrate to resync server sync type
public static final int synctype_migrate   0x02
// commit sync type
public static final int synctype_committed   0x03
// request to forget sync type
public static final int synctype_req_forget   0x06
//rollback sync type
public static final int synctype_rollback   0x04
// migrated unit of work sync type
public static final int synctype_migrated   0x0a
//recover sync type
public static final int synctype_indoubt   0x0c
// length codepoint
public static final int llcp   0x0004
// sync type codepoint
public static final int synctype   0x1187
// xid codepoint
public static final int xid   0x1801
// xa flag codepoint
public static final int xaflags   0x1903
// resync types
public static final int rsync_forget   0x02
// uow states
public static final int reset_state   0x01
public static final int unknown_state   0x3
public static final int indoubt_state   0x04
public static final int cold_state   0x05
// xa flags
public static final int tmnoflags   0x00000000
public static final int tmlocal   0x10000000
// prepared and hueristic complete list
static final int prphrclst   0x1905
// xid count
static final int xidcnt   0x1906
// hide the default constructor
private codepoint