/*
derby - class org.apache.derby.impl.sql.execute.rts.realindexrowtobaserowstatistics
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute rts
import org apache derby iapi services io storedformatids
import org apache derby iapi services i18n messageservice
import org apache derby iapi reference sqlstate
import org apache derby iapi services io formatablebitset
import org apache derby iapi services io formatablehashtable
import java io objectoutput
import java io objectinput
import java io ioexception
/**
resultsetstatistics implemenation for indexrowtobaserowresultset.
@author jerry
*/
public class realindexrowtobaserowstatistics
extends realnoputresultsetstatistics
/* leave these fields public for object inspectors */
public string tablename
public resultsetstatistics childresultsetstatistics
public string colsaccessedfromheap
// constructors
/**
*
*
*/
public	realindexrowtobaserowstatistics
int numopens
int rowsseen
int rowsfiltered
long constructortime
long opentime
long nexttime
long closetime
int resultsetnumber
string tablename
formatablebitset colsaccessedfromheap
double optimizerestimatedrowcount
double optimizerestimatedcost
resultsetstatistics childresultsetstatistics
super
numopens
rowsseen
rowsfiltered
constructortime
opentime
nexttime
closetime
resultsetnumber
optimizerestimatedrowcount
optimizerestimatedcost
this tablename   tablename
this colsaccessedfromheap    colsaccessedfromheap    null  ?
messageservice gettextmessage
sqlstate rts_all
colsaccessedfromheap tostring
this childresultsetstatistics   childresultsetstatistics
// resultsetstatistics interface
/**
* return the statement execution plan as a string.
*
* @param depth	indentation level.
*
* @return string	the statement execution plan as a string.
*/
public string getstatementexecutionplantext int depth
initformatinfo depth
return
indent   messageservice gettextmessage
sqlstate rts_irtbr_rs
tablename
indent   messageservice gettextmessage
sqlstate rts_num_opens
numopens
indent   messageservice gettextmessage
sqlstate rts_rows_seen
rowsseen
indent   messageservice gettextmessage
sqlstate rts_cols_accessed_from_heap
colsaccessedfromheap
dumptimestats indent  subindent
dumpestimatedcosts subindent
childresultsetstatistics getstatementexecutionplantext sourcedepth
/**
* return information on the scan nodes from the statement execution
* plan as a string.
*
* @param depth	indentation level.
* @param tablename if not null then print information for this table only
*
* @return string	the information on the scan nodes from the
*					statement execution plan as a string.
*/
public string getscanstatisticstext string tablename  int depth
if   tablename    null
tablename equals this tablename
return getstatementexecutionplantext depth
else
return  string
// class implementation
public string tostring
return getstatementexecutionplantext 0
public java util vector getchildren
java util vector children   new java util vector
children addelement childresultsetstatistics
return children
/**
* if this node is on a database item (like a table or an index), then provide a
* string that describes the on item.
*
*/
public string getnodeon
return messageservice gettextmessage
sqlstate rts_for_tab_name
tablename
/**
* format for display, a name for this node.
*
*/
public string getnodename
return messageservice gettextmessage sqlstate rts_irtbr
/**
* return the resultsetstatistics for the child of this node.
*
* @return the resultsetstatistics for the child of this node.
*/
resultsetstatistics getchildresultsetstatistics
return childresultsetstatistics