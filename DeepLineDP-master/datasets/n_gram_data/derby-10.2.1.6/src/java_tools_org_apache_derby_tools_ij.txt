/*
derby - class org.apache.derby.tools.ij
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby tools
import org apache derby iapi services info jvminfo
import org apache derby iapi tools i18n localizedinput
import org apache derby iapi tools i18n localizedoutput
import org apache derby iapi tools i18n localizedresource
import org apache derby impl tools ij main
import org apache derby impl tools ij utilmain
import java io ioexception
import java io inputstream
import java io outputstream
import java io printstream
import java io unsupportedencodingexception
import java sql connection
import java util properties
/**
ij is derby's interactive jdbc scripting tool.
it is a simple utility for running scripts against a derby database.
you can also use it interactively to run ad hoc queries.
ij provides several commands for ease in accessing a variety of jdbc features.
<p>
to run from the command line enter the following:
<p>
java [options] org.apache.derby.tools.ij [arguments]
<p>
ij is can also be used with any database server that supports a jdbc driver.
*/
public class ij
/**
@exception ioexception thrown if cannot access input or output files.
*/
static public void main string args  throws ioexception
/* we decide which verion of ij (2.0 or 4.0) to
* load based on the same criteria that the jdbc driver
* uses.
*/
if  jvminfo jdk_id    jvminfo j2se_13
main main args
else
org apache derby impl tools ij main14 main args
/**
* run a sql script from an inputstream and write
* the resulting output to the provided printstream.
* sql commands are separated by a semi-colon ';' character.
*
* @param conn connection to be used as the script's default connection.
* @param sqlin inputstream for the script.
* @param inputencoding encoding of the script.
* @param sqlout outputstream for the script's output
* @param outputencoding output encoding to use.
* @return number of sqlexceptions thrown during the execution, -1 if not known.
* @throws unsupportedencodingexception
*/
public static int runscript
connection conn
inputstream sqlin
string inputencoding
outputstream sqlout
string outputencoding
throws unsupportedencodingexception
localizedoutput lo
outputencoding    null ?
localizedresource getinstance
getnewoutput sqlout
localizedresource getinstance
getnewencodedoutput sqlout  outputencoding
main ije
if  jvminfo jdk_id    jvminfo j2se_13
ije   new main false
else
// temp - allow ij to continue to work under jdk131
// will resolve as part of debry-1609
// jdk13 gets error loading main14 due to the
// class now being built with the jdk14 target flag.
// ije = new org.apache.derby.impl.tools.ij.main14(false);
ije   new main false
localizedinput li   localizedresource getinstance
getnewencodedinput sqlin  inputencoding
utilmain um   ije getutilmain 1  lo
return um goscript conn  li
private ij        no instances allowed
public static string getarg string param  string args
return org apache derby impl tools ij util getarg param  args
public static void getpropertyarg string args  throws ioexception
org apache derby impl tools ij util getpropertyarg args
public static java sql connection startjbms
throws java sql sqlexception  illegalaccessexception  classnotfoundexception  instantiationexception
return org apache derby impl tools ij util startjbms