/*
derby - class org.apache.derby.impl.tools.ij.mttestsuite
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl tools ij
import java util vector
import java util enumeration
import java util properties
import java io filenotfoundexception
import java io ioexception
import java lang math
/**
*/
public class mttestsuite
private vector cases
private vector last
private vector init
private mttime time
private int numthreads
private string rootdir   null
mttestsuite int numthreads  mttime time
vector initcases  vector testcases  vector finalcases
this numthreads   numthreads
this time   time
this cases   testcases
this init   initcases
this last   finalcases
public void init
boolean loadinitfailed   loadcases init
boolean loadtestsfailed   loadcases cases
boolean loadlastfailed   loadcases last
if   loadinitfailed    true
loadtestsfailed    true
loadlastfailed    true
throw new error
/**
** @return boolean indicates if there was a problem loading
** 	the file
*/
private boolean loadcases vector cases
if  cases    null
return false
boolean goterror   false
enumeration e   cases elements
mttestcase tcase
while  e hasmoreelements
tcase    mttestcase e nextelement
try
tcase initialize rootdir
catch  throwable t
goterror   true
return goterror
public void setroot string rootdir
this rootdir   rootdir
public string getroot
return rootdir
public int getnumthreads
return numthreads
public vector getcases
return cases
public vector getinitcases
return init
public vector getfinalcases
return last
public mttime gettime
return time
public long gettimemillis
return   time hours   360
time minutes   60
time seconds     1000
public string tostring
string str
int	len
int i
str     numthreads
str     time
str     init size
for  i   0  len   init size    i < len  i
str    init elementat i  tostring
str     cases size
for  i   0  len   cases size    i < len  i
str    cases elementat i  tostring
str     last size
for  i   0  len   last size    i < len  i
str    last elementat i  tostring
return str
/*
** grab a test case.  pick one randomly and
** try to grab that case.  if we get it we are
** done.  otherwise, try try again.
*/
public mttestcase grabtestcase
int numcases   cases size
int casenum
mttestcase testcase
do
casenum    int   java lang math random     1311  % numcases
testcase    mttestcase cases elementat casenum
while  testcase grab      false
return testcase