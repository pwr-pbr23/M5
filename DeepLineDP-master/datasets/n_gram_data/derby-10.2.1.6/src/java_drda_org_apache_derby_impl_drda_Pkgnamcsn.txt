/*
* derby - class org.apache.derby.impl.drda.pkgnamcsn
*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*   http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or
* implied. see the license for the specific language governing
* permissions and limitations under the license.
*
*/
package org apache derby impl drda
/**
* class representing a pkgnamcsn object (rdb package name,
* consistency token, and section number).
*/
final class pkgnamcsn
/** database name. */
private final string rdbnam
/** rdb package collection identifier. */
private final string rdbcolid
/** rdb package identifier. */
private final string pkgid
/** rdb package section number. */
private final int pkgsn
/** rdb package consistency token. */
private final consistencytoken pkgcnstkn
/** object which can be used for hashing when the consistency
* token can be ignored. */
private object statementkey   null
/**
* create a new <code>pkgnamcsn</code> instance.
*
* @param rdbnam database name
* @param rdbcolid rdb package collection identifier
* @param pkgid rdb package identifier
* @param pkgsn rdb package section number
* @param pkgcnstkn rdb package consistency token
*/
pkgnamcsn string rdbnam  string rdbcolid  string pkgid
int pkgsn  consistencytoken pkgcnstkn
this rdbnam   rdbnam
this rdbcolid   rdbcolid
this pkgid   pkgid
this pkgsn   pkgsn
this pkgcnstkn   pkgcnstkn
/**
* get rdbnam.
*
* @return database name
*/
public string getrdbnam
return rdbnam
/**
* get rdbcolid.
*
* @return rdb package collection identifier
*/
public string getrdbcolid
return rdbcolid
/**
* get pkgid.
*
* @return rdb package identifier
*/
public string getpkgid
return pkgid
/**
* get pkgsn.
*
* @return rdb package section number
*/
public int getpkgsn
return pkgsn
/**
* get pkgcnstkn.
*
* @return rdb package consistency token
*/
public consistencytoken getpkgcnstkn
return pkgcnstkn
/**
* return string representation.
*
* @return a <code>string</code> value
*/
public string tostring
return super tostring         "
rdbcolid           pkgid      "   pkgsn
pkgcnstkn
/**
* return an object which can be used as a key in a hash table
* when the value of the consistency token can be ignored. the
* object has <code>equals()</code> and <code>hashcode()</code>
* methods which consider other objects returned from
* <code>getstatementkey()</code> equal if rdbnam, rdbcolid, pkgid
* and pkgsn are equal.
*
* @return an <code>object</code> value
* @see database#getdrdastatement(pkgnamcsn)
* @see database#storestatement(drdastatement)
* @see database#removestatement(drdastatement)
*/
public object getstatementkey
if  statementkey    null
statementkey   new statementkey
return statementkey
/**
* class for objects used as keys in the hash table
* <code>stmttable</code> found in the <code>database</code>
* class. the <code>equals()</code> and <code>hashcode()</code>
* methods consider other <code>statementkey</code> objects equal
* to this object if they are associated with a
* <code>pkgnamcsn</code> object with the same values for rdbnam,
* rdbcolid, pkgid and pkgsn.
*
* @see database
*/
private final class statementkey
/** cached hash code. */
private int hash   0
/**
* check whether rdbnam, rdbcolid, pkgid and pkgsn of another
* <code>statementkey</code> object matches this object.
*
* @param obj another object
* @return true if the objects are equal
*/
public boolean equals object obj
if  statementkey this    obj
return true
else if  obj instanceof statementkey
return   statementkey  obj  iskeyfor pkgnamcsn this
else
return false
/**
* calculate hash code.
*
* @return hash code
*/
public int hashcode
if  hash    0
hash
rdbnam hashcode   ^
rdbcolid hashcode   ^
pkgid hashcode   ^
pkgsn
return hash
/**
* check whether this object can be used as a key for a
* <code>pkgnamcsn</code> object.
*
* @param p a <code>pkgnamcsn</code> value
* @return true if this object can be key for the
* <code>pkgnamcsn</code> object
*/
private boolean iskeyfor pkgnamcsn p
return
rdbnam equals p rdbnam
rdbcolid equals p rdbcolid
pkgid equals p pkgid
pkgsn    p pkgsn