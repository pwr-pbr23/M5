/*
derby - class org.apache.derby.impl.jdbc.authentication.jndiauthenticationservice
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl jdbc authentication
import org apache derby iapi error standardexception
import org apache derby iapi services property propertyutil
import org apache derby iapi jdbc authenticationservice
import org apache derby authentication userauthenticator
import org apache derby iapi util stringutil
import java util properties
/**
* this is the jndi authentication service base class.
* <p>
* it instantiates the jndi authentication scheme defined by the user/
* administrator. cloudscape supports ldap jndi providers.
* <p>
* the user can configure its own jndi provider by setting the
* system or database property derby.authentication.provider .
*
* @author francois
*/
public class jndiauthenticationservice
extends authenticationservicebase
private string authenticationprovider
//
// constructor
//
// call the super
public jndiauthenticationservice
super
//
// modulecontrol implementation (overriden)
//
/**
*  check if we should activate the jndi authentication service.
*/
public boolean cansupport properties properties
if   requireauthentication properties
return false
//
// we check 2 things:
//
// - if derby.connection.requireauthentication system
//   property is set to true.
// - if derby.authentication.provider is set to one
// of the jndi scheme we support (i.e. ldap).
//
authenticationprovider   propertyutil getpropertyfromset
properties
org apache derby iapi reference property authentication_provider_parameter
if    authenticationprovider    null
stringutil sqlequalsignorecase authenticationprovider
org apache derby iapi reference property authentication_provider_ldap
return true
return false
/**
* @see org.apache.derby.iapi.services.monitor.modulecontrol#boot
* @exception standardexception upon failure to load/boot the expected
* authentication service.
*/
public void boot boolean create  properties properties
throws standardexception
// we need authentication
// setauthentication(true);
// we call the super in case there is anything to get initialized.
super boot create  properties
// we must retrieve and load the authentication scheme that we were
// told to.
// set ourselves as being ready and loading the proper
// authentication scheme for this service
userauthenticator ajndiauthscheme
// we're dealing with ldap
ajndiauthscheme   new ldapauthenticationschemeimpl this  properties
this setauthenticationservice ajndiauthscheme