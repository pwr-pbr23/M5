/*
derby - class org.apache.derby.client.am.cloboutputstream
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client am
public class cloboutputstream extends java io outputstream
private clob clob_
private long offset_
public cloboutputstream clob clob  long offset  throws sqlexception
clob_   clob
offset_   offset
/*
offset_ starts from 1 while sqllenth_=0
in the case of a empty clob hence check from
offset_-1
*/
if   offset_ 1  > clob_ sqllength_
throw new indexoutofboundsexception
public void write int b  throws java io ioexception
byte newbyte   new byte
newbyte    byte b
clob_ string_   clob_ string_ substring 0   int  offset_   1
// since this is an outputstream returned by clob.setasciistream
// use ascii encoding when creating the string from bytes
clob_ string_   clob_ string_ concat new string newbyte
clob_ asciistream_   new java io stringbufferinputstream clob_ string_
clob_ unicodestream_   new java io stringbufferinputstream clob_ string_
clob_ characterstream_   new java io stringreader clob_ string_
clob_ sqllength_   clob_ string_ length
offset_
public void write byte b  int off  int len  throws java io ioexception
if  b    null
throw new nullpointerexception
else if   off < 0      off > b length      len < 0
off   len  > b length       off   len  < 0
throw new indexoutofboundsexception
else if  len    0
return
byte newbyte   new byte
system arraycopy b  off  newbyte  0  len
// since this is an outputstream returned by clob.setasciistream
// use ascii encoding when creating the string from bytes
string str   new string newbyte
clob_ string_   clob_ string_ substring 0   int  offset_   1
clob_ string_   clob_ string_ concat str
clob_ asciistream_   new java io stringbufferinputstream clob_ string_
clob_ unicodestream_   new java io stringbufferinputstream clob_ string_
clob_ characterstream_   new java io stringreader clob_ string_
clob_ sqllength_   clob_ string_ length
offset_    len