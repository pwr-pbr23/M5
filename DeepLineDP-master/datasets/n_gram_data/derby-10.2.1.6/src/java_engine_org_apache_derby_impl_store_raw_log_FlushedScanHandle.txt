/*
derby - class org.apache.derby.impl.store.raw.log.flushedscanhandle
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl store raw log
import org apache derby iapi reference sqlstate
import org apache derby impl store raw log logcounter
import org apache derby impl store raw log logrecord
import org apache derby impl store raw log streamlogscan
import org apache derby iapi services io arrayinputstream
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi error standardexception
import org apache derby iapi store raw loggable
import org apache derby iapi store raw scanhandle
import org apache derby iapi store raw scannedtransactionhandle
import org apache derby iapi store raw log logfactory
import org apache derby iapi store raw log loginstant
import org apache derby iapi store raw xact transactionid
import org apache derby iapi store access databaseinstant
import java io ioexception
import java io inputstream
import java util enumeration
public class flushedscanhandle implements scanhandle
logfactory lf
streamlogscan fs
logrecord lr   null
boolean readoptionaldata   false
int groupsiwant
arrayinputstream rawinput   new arrayinputstream new byte
flushedscanhandle logtofile lf  databaseinstant start  int groupsiwant
throws standardexception
this lf   lf
fs   new flushedscan lf   logcounter start  getvalueaslong
this groupsiwant   groupsiwant
public boolean next   throws standardexception
readoptionaldata   false
lr   null
// filter the log stream so that only log records that belong to these
// interesting groups will be returned
try
lr   fs getnextrecord rawinput null  groupsiwant
if  lr  null  return false    end of flushed log
if  sanitymanager debug
if   groupsiwant   lr group       0
sanitymanager throwassert groupsiwant       lr group
return true
catch  ioexception ioe
ioe printstacktrace
fs close
fs   null
throw lf markcorrupt
standardexception newexception sqlstate log_io_error  ioe
/**
get the group for the current log record.
@exception standardexception oops
*/
public int getgroup   throws standardexception
return lr group
/**
get the loggable associated with the currentlogrecord
@exception standardexception oops
*/
public loggable getloggable   throws standardexception
try
return lr getloggable
catch  ioexception ioe
ioe printstacktrace
fs close
fs   null
throw lf markcorrupt
standardexception newexception sqlstate log_io_error  ioe
catch  classnotfoundexception cnfe
fs close
fs   null
throw lf markcorrupt
standardexception newexception sqlstate log_corrupted  cnfe
//this may be called only once per log record.
public inputstream getoptionaldata
throws standardexception
if  sanitymanager debug  sanitymanager assert  readoptionaldata
if  lr    null  return null
try
int datalength   rawinput readint
readoptionaldata   true
rawinput setlimit rawinput getposition    datalength
return rawinput
catch  ioexception ioe
fs close
fs   null
throw lf markcorrupt
standardexception newexception sqlstate log_io_error  ioe
public databaseinstant getinstant
throws standardexception
return fs getloginstant
public object gettransactionid
throws standardexception
try
return lr gettransactionid
catch  ioexception ioe
ioe printstacktrace
fs close
fs   null
throw lf markcorrupt
standardexception newexception sqlstate log_io_error  ioe
catch  classnotfoundexception cnfe
fs close
fs   null
throw lf markcorrupt
standardexception newexception sqlstate log_corrupted  cnfe
public void close
if  fs    null  fs close
fs   null