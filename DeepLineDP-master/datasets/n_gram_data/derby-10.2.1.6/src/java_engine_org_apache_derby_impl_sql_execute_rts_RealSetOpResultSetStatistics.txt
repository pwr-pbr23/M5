/*
derby - class org.apache.derby.impl.sql.execute.rts.realsetopresultsetstatistics
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute rts
import org apache derby iapi services i18n messageservice
import org apache derby iapi reference sqlstate
import org apache derby impl sql compile intersectorexceptnode
/**
resultsetstatistics implementation for setopresultset.
@author yip
*/
public class realsetopresultsetstatistics
extends realnoputresultsetstatistics
/* leave these fields public for object inspectors */
public int optype
public int rowsseenleft
public int rowsseenright
public int rowsreturned
public resultsetstatistics leftresultsetstatistics
public resultsetstatistics rightresultsetstatistics
// constructors
/**
*  constructs a new <code>realsetopresultsetstatistics</code> object
*  to represent the runtime statistics for <code>setopresultset</code>.
*
*  @param   optype                       set operation type
*  @param   numopens                     number of open
*  @param   rowsseen                     rows seen
*  @param   rowsfiltered                 rows filtered
*  @param   constructortime              the time for construction
*  @param   opentime                     the time for open operation
*  @param   nexttime                     the time for next operation
*  @param   closetime                    the time for close operation
*  @param   resultsetnumber              the result set number
*  @param   rowsseenleft                 rows seen by left source input
*  @param   rowsseenright                rows seen by right source input
*  @param   rowsreturned                 rows returned
*  @param   optimizerestimatedrowcount   optimizer estimated row count
*  @param   optimizerestimatedcost       optimizer estimated cost
*  @param   leftresultsetstatistics      left source runtime statistics
*  @param   rightresultsetstatistics     right source runtime statistics
*
*  @see     org.apache.derby.impl.sql.execute.setopresultset
*/
public	realsetopresultsetstatistics
int optype
int numopens
int rowsseen
int rowsfiltered
long constructortime
long opentime
long nexttime
long closetime
int resultsetnumber
int rowsseenleft
int rowsseenright
int rowsreturned
double optimizerestimatedrowcount
double optimizerestimatedcost
resultsetstatistics leftresultsetstatistics
resultsetstatistics rightresultsetstatistics
super
numopens
rowsseen
rowsfiltered
constructortime
opentime
nexttime
closetime
resultsetnumber
optimizerestimatedrowcount
optimizerestimatedcost
this optype   optype
this rowsseenleft   rowsseenleft
this rowsseenright   rowsseenright
this rowsreturned   rowsreturned
this leftresultsetstatistics   leftresultsetstatistics
this rightresultsetstatistics   rightresultsetstatistics
// resultsetstatistics methods
/**
* return the statement execution plan as a <code>string</code>.
*
* @param depth	indentation level.
*
* @return the statement execution plan as a <code>string</code>.
*/
public string getstatementexecutionplantext int depth
initformatinfo depth
string rs    optype    intersectorexceptnode intersect_op
?  sqlstate rts_intersect_rs     sqlstate rts_except_rs
return
indent   messageservice gettextmessage rs
indent   messageservice gettextmessage sqlstate rts_num_opens
numopens
indent   messageservice gettextmessage
sqlstate rts_rows_seen_left
rowsseenleft
indent   messageservice gettextmessage
sqlstate rts_rows_seen_right
rowsseenright
indent   messageservice gettextmessage
sqlstate rts_rows_returned
rowsreturned
dumptimestats indent  subindent
dumpestimatedcosts subindent
indent   messageservice gettextmessage sqlstate rts_left_rs
leftresultsetstatistics getstatementexecutionplantext sourcedepth
indent   messageservice gettextmessage sqlstate rts_right_rs
rightresultsetstatistics getstatementexecutionplantext
sourcedepth
/**
* return information on the scan nodes from the statement execution
* plan as a <code>string</code>.
*
* @param depth	indentation level.
* @param tablename if not null then print information for this table only
*
* @return string	the information on the scan nodes from the
*					statement execution plan as a <code>string</code>.
*/
public string getscanstatisticstext string tablename  int depth
return leftresultsetstatistics getscanstatisticstext tablename  depth
rightresultsetstatistics getscanstatisticstext tablename  depth
// class implementation
/**
* return the runtime statistics of this object in textual representation
*
* @return the runtime statistics of this object in textual representation
*         as a <code>string</code>.
*/
public string tostring
return getstatementexecutionplantext 0
/**
* retrieves the children runtime statistics of this <code>
* realsetopresultsetstatistics</code> object
*
* @return the children runtime statistics of this <code>
*         realsetopresultsetstatistics</code> object stored in a <code>
*         vector</code>.
*
*/
public java util vector getchildren
java util vector children   new java util vector
children addelement leftresultsetstatistics
children addelement rightresultsetstatistics
return children
/**
* format for display, a name for this node.
*
* @return the name of the node as a <code>string</code>.
*/
public string getnodename
string nodename
optype    intersectorexceptnode intersect_op
?  sqlstate rts_intersect     sqlstate rts_except
return messageservice gettextmessage nodename