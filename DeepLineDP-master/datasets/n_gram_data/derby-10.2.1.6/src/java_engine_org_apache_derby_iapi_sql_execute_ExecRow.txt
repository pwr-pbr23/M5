/*
derby - class org.apache.derby.iapi.sql.execute.execrow
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi sql execute
import org apache derby iapi error standardexception
import org apache derby iapi types datavaluedescriptor
import org apache derby iapi sql row
import org apache derby iapi services io storable
import org apache derby iapi services io formatablebitset
/**
* execution sees this extension of row that provides connectivity
* to the storage row interface and additional methods for manipulating
* rows in execution's resultsets.
*
* @author ames
*/
public interface execrow extends row
/**
* clone the row and its contents.
*
*
* @return row	a clone of the row and its contents.
*/
execrow getclone
/**
* clone the row.  the cloned row will contain clones of the
* specified columns and the same object as the original row
* for the other columns.
*
* @param clonedcols	1-based formatablebitset representing the columns to clone.
*
* @return row	a clone of the row and its contents.
*/
execrow getclone formatablebitset clonedcols
/**
* get a new row with the same columns type as this one, containing nulls.
*
*/
execrow	getnewnullrow
/**
* get a clone of a datavaluedescriptor from an execrow.
*
* @param columnposition (1 based)
*/
datavaluedescriptor clonecolumn int columnposition
/**
get a clone of the array form of the row that access expects.
@see execrow#getrowarray
*/
public datavaluedescriptor getrowarrayclone
/**
return the array of objects that the store needs.
*/
public datavaluedescriptor getrowarray
/**
set the array of objects
*/
public void setrowarray storable rowarray
// temp overload
public void setrowarray datavaluedescriptor rowarray
/**
get a new datavaluedescriptor[]
*/
public void getnewobjectarray