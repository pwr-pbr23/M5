/*
derby - class org.apache.derby.client.net.netxaconnectionreply
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client net
import javax transaction xa xaresource
import javax transaction xa xid
import org apache derby client am connectioncallbackinterface
import org apache derby client am disconnectexception
public class netxaconnectionreply extends netresultsetreply
netxaconnectionreply netagent netagent  int buffersize
super netagent  buffersize
//----------------------------- entry points ---------------------------------
public void readlocalxastart connectioncallbackinterface connection  throws disconnectexception
public void readlocalxacommit connectioncallbackinterface connection  throws disconnectexception
startsameidchainparse
parsesyncctlreply connection
endofsameidchaindata
netxacallinfo callinfo
netagent_ netconnection_ xares_ callinfoarray_
callinfo xainprogress_   false
callinfo xawassuspended   false
connection completelocalcommit
public void readlocalxarollback connectioncallbackinterface connection  throws disconnectexception
startsameidchainparse
parsesyncctlreply connection
endofsameidchaindata
connection completelocalrollback
protected void readxastartunitofwork netconnection conn  throws disconnectexception
startsameidchainparse
parsesyncctlreply conn
endofsameidchaindata
protected int readxaendunitofwork netconnection conn  throws disconnectexception
netxacallinfo callinfo   conn xares_ callinfoarray_
int xaflags   callinfo xaflags_
startsameidchainparse
parsesyncctlreply conn
endofsameidchaindata
if  xaflags    xaresource tmfail
return javax transaction xa xaexception xa_rbrollback
return javax transaction xa xaresource xa_ok
protected int readxaprepare netconnection conn  throws disconnectexception
startsameidchainparse
int synctype   parsesyncctlreply conn
endofsameidchaindata
netxacallinfo callinfo   conn xares_ callinfoarray_
if  synctype    xaresource xa_rdonly       xaretval of read only  make sure flag agrees
callinfo setreadonlytransactionflag true
else      xaretval not read only  make sure flag agrees
callinfo setreadonlytransactionflag false
return synctype
protected void readxacommit netconnection conn  throws disconnectexception
startsameidchainparse
parsesyncctlreply conn
endofsameidchaindata
netxacallinfo callinfo   conn xares_ callinfoarray_
callinfo xainprogress_   false
conn completelocalcommit
protected int readxarollback netconnection conn  throws disconnectexception
startsameidchainparse
parsesyncctlreply conn
endofsameidchaindata
netxacallinfo callinfo   conn xares_ callinfoarray_
callinfo xainprogress_   false
callinfo xawassuspended   false
conn completelocalrollback
return javax transaction xa xaresource xa_ok
protected void readxarecover netconnection conn  throws disconnectexception
startsameidchainparse
parsesyncctlreply conn
endofsameidchaindata
protected void readxaforget netconnection conn  throws disconnectexception
startsameidchainparse
parsesyncctlreply conn
endofsameidchaindata
//----------------------helper methods----------------------------------------
//--------------------- parse ddm reply data--------------------------------------
// the synccrd reply mesage
//
// returned from server:
//   xaretval - required
int parsesynccrd connectioncallbackinterface connection  throws disconnectexception
boolean svrcodreceived   false
int svrcod   codepoint svrcod_info
int xaretval   0
int synctype   0
java util hashtable indoubttransactions   null
netconnection conn   netagent_ netconnection_
parselengthandmatchcodepoint codepoint synccrd
pushlengthoncollectionstack
int peekcp   peekcodepoint
while  peekcp    reply end_of_collection
boolean foundinpass   false
if  peekcp    codepoint svrcod
foundinpass   true
svrcodreceived   checkandgetreceivedflag svrcodreceived
svrcod   parsesvrcod codepoint svrcod_error  codepoint svrcod_error
peekcp   peekcodepoint
if  peekcp    codepoint xaretval
foundinpass   true
xaretval   parsexaretval
conn xares_ callinfoarray_ xaretval_
xaretval
peekcp   peekcodepoint
if  peekcp    codepoint synctype
foundinpass   true
synctype   parsesynctype
peekcp   peekcodepoint
if  peekcp    codepoint prphrclst
foundinpass   true
indoubttransactions   parseindoubtlist
conn setindoubttransactions indoubttransactions
peekcp   peekcodepoint
if   foundinpass
doprmnsprmsemantics peekcp
popcollectionstack
return xaretval
// process xa return value
protected int parsexaretval   throws disconnectexception
parselengthandmatchcodepoint codepoint xaretval
return readint
// process xa return value
protected byte parsesynctype   throws disconnectexception
parselengthandmatchcodepoint codepoint synctype
return readbyte
// this method handles the parsing of all command replies and reply data
// for the synnctl command.
protected int parsesyncctlreply connectioncallbackinterface connection  throws disconnectexception
int retval   0
int peekcp   peekcodepoint
if  peekcp    codepoint synccrd
parsesyncctlerror peekcp
return  1
retval   parsesynccrd connection
peekcp   peekcodepoint
while  peekcp    codepoint sqlstt
string s   parsesqlstt
//jcftmp, need to null out the client list?
netagent_ netconnection_ xares_ addspecialregisters s
peekcp   peekcodepoint
return retval
//------------------------parse ddm scalars-----------------------------
private string parsesqlstt   throws disconnectexception
parselengthandmatchcodepoint codepoint sqlstt
return parsesqlsttgrpnocmornocs
private string parsesqlsttgrpnocmornocs   throws disconnectexception
int mixednullind   readunsignedbyte
int singlenullind   0
string sqlsttstring   null
int stringlength   0
if  mixednullind    codepoint nulldata
singlenullind   readunsignedbyte
if  singlenullind    codepoint nulldata
// throw dtamchrm
dodtamchrmsemantics
// read 4-byte length
stringlength   readint
// read sqlstt string
sqlsttstring   readstring stringlength  netagent_ targettypdef_ getccsidsbcencoding
else
// read 4-byte length
stringlength   readint
// read sqlstt string
sqlsttstring   readstring stringlength  netagent_ targettypdef_ getccsidmbcencoding
// read null indicator
singlenullind   readunsignedbyte
return sqlsttstring
protected int parsexidcnt   throws disconnectexception
parselengthandmatchcodepoint codepoint xidcnt
return readunsignedshort
protected xid parsexid   throws disconnectexception
parselengthandmatchcodepoint codepoint xid
int formatid   readint
int gtridlen   readint
int bquallen   readint
byte gtrid   readbytes gtridlen
byte bqual   readbytes bquallen
return new org apache derby client clientxid formatid  gtrid  bqual
protected java util hashtable parseindoubtlist   throws disconnectexception
boolean found   false
int port   0
int numxid   0
string sipaddr   null
int peekcp   peekcodepoint
parselengthandmatchcodepoint codepoint prphrclst
peekcp   peekcodepoint
if  peekcp    codepoint xidcnt
found   true
numxid   parsexidcnt
peekcp   peekcodepoint
java util hashtable indoubttransactions   new java util hashtable
while  peekcp    codepoint xid
xid xid   parsexid
indoubttransactions put xid  new netindoubttransaction xid  null  null  null  sipaddr  port
peekcp   peekcodepoint
return indoubttransactions