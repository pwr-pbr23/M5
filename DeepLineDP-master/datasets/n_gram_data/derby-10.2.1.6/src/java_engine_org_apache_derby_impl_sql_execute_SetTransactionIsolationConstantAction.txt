/*
derby - class org.apache.derby.impl.sql.execute.settransactionisolationconstantaction
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql execute
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql execute constantaction
import org apache derby iapi reference sqlstate
import org apache derby iapi sql activation
import org apache derby iapi error standardexception
import org apache derby iapi store access transactioncontroller
/**
*	this class  describes actions that are always performed for a
*	set transaction isolation statement at execution time.
*
*	@author jerry brenner.
*/
class settransactionisolationconstantaction extends genericconstantaction
private final int isolationlevel
// constructors
/**
*	make the constantaction for a set transaction isolation statement.
*
*  @param isolationlevel	the new isolation level
*/
settransactionisolationconstantaction
int		isolationlevel
this isolationlevel   isolationlevel
///////////////////////////////////////////////
//
// object shadows
//
///////////////////////////////////////////////
public	string	tostring
// do not put this under sanitymanager.debug - it is needed for
// error reporting.
return     isolationlevel
// interface methods
/**
*	this is the guts of the execution-time logic for set transaction isolation.
*
*	@see constantaction#executeconstantaction
*
* @exception standardexception		thrown on failure
*/
public void	executeconstantaction  activation activation
throws standardexception
activation getlanguageconnectioncontext   setisolationlevel isolationlevel