/*
derby - class org.apache.derby.impl.services.locks.d_lockcontrol
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl services locks
import org apache derby iapi services diag diagnosticable
import org apache derby iapi services diag diagnosticutil
import org apache derby iapi error standardexception
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi services locks lockable
import java util properties
import java util list
import java util iterator
/**
**/
public class d_lockcontrol implements diagnosticable
protected lockcontrol control
public d_lockcontrol
/* private/protected methods of this class: */
/*
** methods of diagnosticable
*/
public void init object obj
control    lockcontrol  obj
/**
*
* @exception  standardexception  standard exception policy.
**/
public string diag
throws standardexception
stringbuffer sb   new stringbuffer 1024
sb append
int i   0
object firstgrant   control getfirstgrant
if  firstgrant    null
sb append     i       diagnosticutil todiagstring firstgrant
i
list granted   control getgranted
if  granted    null
for  iterator dli   granted iterator    dli hasnext
sb append     i       diagnosticutil todiagstring dli next
i
sb append
list waiting   control getwaiting
int num_waiting   0
if  waiting    null
for  iterator dli   waiting iterator    dli hasnext
sb append
num_waiting
diagnosticutil todiagstring dli next
num_waiting
if  num_waiting    0
sb append
return sb tostring
public void diag_detail properties prop
/*
** static routines that were in singlepool
*/
/*
** debugging routines
*/
static void debuglock string type  object compatabilityspace  object group  lockable ref  object qualifier  int timeout
if  sanitymanager debug
sanitymanager debug constants lock_trace  type
debuglockstring
compatabilityspace  group  ref  qualifier  timeout
static void debuglock string type  object compatabilityspace  object group
if  sanitymanager debug
sanitymanager debug constants lock_trace  type
debuglockstring compatabilityspace  group
static void debuglock string type  object compatabilityspace  object group  lockable ref
if  sanitymanager debug
sanitymanager debug constants lock_trace  type
debuglockstring compatabilityspace  group  ref
static string debuglockstring object compatabilityspace  object group
if  sanitymanager debug
stringbuffer sb   new stringbuffer
debugappendobject sb     compatabilityspace
debugappendobject sb     group
debugaddthreadinfo sb
return sb tostring
else
return null
static string debuglockstring object compatabilityspace  object group  lockable ref
if  sanitymanager debug
stringbuffer sb   new stringbuffer
debugappendobject sb     ref
debugappendobject sb     compatabilityspace
debugappendobject sb     group
debugaddthreadinfo sb
return sb tostring
else
return null
static string debuglockstring object compatabilityspace  object group  lockable ref  object qualifier  int timeout
if  sanitymanager debug
stringbuffer sb   new stringbuffer
debugappendobject sb     ref
debugappendobject sb     qualifier
debugappendobject sb     compatabilityspace
debugappendobject sb     group
if  timeout >  0
sb append
sb append timeout
debugaddthreadinfo sb
return sb tostring
else
return null
static void debugaddthreadinfo stringbuffer sb
if  sanitymanager debug
if  sanitymanager debug_on constants lock_trace_add_thread_info
debugappendobject sb     thread currentthread
static void debugappendobject stringbuffer sb  string desc  object item
if  sanitymanager debug
sb append desc
if  item    null
sb append item tostring
else
sb append