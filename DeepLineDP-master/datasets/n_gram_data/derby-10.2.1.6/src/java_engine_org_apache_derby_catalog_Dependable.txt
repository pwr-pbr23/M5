/*
derby - class org.apache.derby.catalog.dependable
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby catalog
/**
* a dependable is an in-memory representation of an object managed
*	by the dependency system.
*
* there are two kinds of dependables:
* providers and dependents. dependents depend on providers and
*	are responsible for executing compensating logic when their
*	providers change.
* <p>
* the fields represent the known dependables.
* <p>
* persistent dependencies (those between database objects) are
* stored in sys.sysdepends.
*
* @see org.apache.derby.catalog.dependablefinder
*/
public interface dependable
/*
*	universe of known dependables.
*/
public static final string alias
public static final string conglomerate
public static final string constraint
public static final string default
public static final string heap
public static final string index
public static final string prepared_statement
public static final string file
public static final string stored_prepared_statement
public static final string table
public static final string columns_in_table
public static final string trigger
public static final string view
public static final string schema
public static final string table_permission
public static final string columns_permission
public static final string routine_permission
/**
*	get an object which can be written to disk and which,
*	when read from disk, will find or reconstruct this in-memory
* dependable.
*
*	@return		a finder object that can be written to disk if this is a
*					persistent dependable.
*				null if this is not a persistent dependable.
*/
public	dependablefinder	getdependablefinder
/**
*	get the name of this dependable object. this is useful
*	for diagnostic messages.
*
*	@return	name of dependable object.
*/
public	string	getobjectname
/**
*	get the uuid of this dependable object.
*
*	@return	uuid of this object.
*/
public	uuid	getobjectid
/**
*	return whether or not this dependable is persistent. persistent
*	dependencies are stored in sys.sysdepends.
*
*	@return	true if this dependable is persistent.
*/
public	boolean	ispersistent
/**
* get the unique class id for the dependable.
*	every dependable belongs to a class of dependables.
*
*	@return	type of this dependable.
*/
public	string	getclasstype