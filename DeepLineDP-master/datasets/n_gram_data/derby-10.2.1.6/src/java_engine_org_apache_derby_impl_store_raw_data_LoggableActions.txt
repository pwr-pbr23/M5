/*
derby - class org.apache.derby.impl.store.raw.data.loggableactions
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl store raw data
import org apache derby impl store raw data pageactions
import org apache derby impl store raw data basepage
import org apache derby iapi services io formatidutil
import org apache derby iapi store access conglomerate logicalundo
import org apache derby iapi store raw xact rawtransaction
import org apache derby iapi store raw recordhandle
import org apache derby iapi store raw loggable
import org apache derby iapi store raw log loginstant
import org apache derby iapi error standardexception
import org apache derby iapi types datavaluedescriptor
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi services io formatablebitset
import org apache derby iapi services io dynamicbytearrayoutputstream
import org apache derby iapi services io dynamicbytearrayoutputstream
import java io ioexception
public class loggableactions implements pageactions
public void actiondelete
rawtransaction  t
basepage        page
int             slot
int             recordid
boolean         delete
logicalundo     undo
throws standardexception
deleteoperation lop
new deleteoperation t  page  slot  recordid  delete  undo
doaction t  page  lop
public int actionupdate
rawtransaction          t
basepage                page
int                     slot
int                     recordid
object   row
formatablebitset                 validcolumns
int                     realstartcolumn
dynamicbytearrayoutputstream  logbuffer
int                     realspaceonpage
recordhandle            headrowhandle
throws standardexception
updateoperation lop
new updateoperation t  page  slot  recordid  row  validcolumns
realstartcolumn  logbuffer
realspaceonpage  headrowhandle
doaction t  page  lop
return lop getnextstartcolumn
public void actionpurge
rawtransaction  t
basepage        page
int             slot
int             num_rows
int           recordids
boolean         logdata
throws standardexception
purgeoperation lop
new purgeoperation t  page  slot  num_rows  recordids  logdata
doaction t  page  lop
public void actionupdatefield
rawtransaction          t
basepage                page
int                     slot
int                     recordid
int                     fieldid
object     newvalue
logicalundo             undo
throws standardexception
updatefieldoperation lop
new updatefieldoperation
t  page  slot  recordid  fieldid  newvalue  undo
doaction t  page  lop
public int actioninsert
rawtransaction          t
basepage                page
int                     slot
int                     recordid
object                row
formatablebitset                 validcolumns
logicalundo             undo
byte                    insertflag
int                     startcolumn
boolean                 islongcolumn
int                     realstartcolumn
dynamicbytearrayoutputstream  logbuffer
int                     realspaceonpage
int                     overflowthreshold
throws standardexception
insertoperation lop   new insertoperation t  page  slot  recordid
row  validcolumns  undo  insertflag  startcolumn  islongcolumn
realstartcolumn  logbuffer  realspaceonpage  overflowthreshold
doaction t  page  lop
return  lop getnextstartcolumn
public void actioncopyrows
rawtransaction  t
basepage        destpage
basepage        srcpage
int             srcslot
int             numrows
int             destslot
int           recordids
throws standardexception
copyrowsoperation lop
new copyrowsoperation
t  destpage  srcpage srcslot  numrows  destslot  recordids
doaction t  destpage  lop
public void actioninvalidatepage rawtransaction t  basepage page
throws standardexception
invalidatepageoperation lop   new invalidatepageoperation page
doaction t  page  lop
public void actioninitpage
rawtransaction  t
basepage        page
int             initflag
int             pageformatid
long            pageoffset
throws standardexception
initpageoperation lop
new initpageoperation page  initflag  pageformatid  pageoffset
doaction t  page  lop
public void actionshrinkreservedspace
rawtransaction  t
basepage        page
int             slot
int             recordid
int             newvalue
int             oldvalue
throws standardexception
setreservedspaceoperation lop
new setreservedspaceoperation
page  slot  recordid  newvalue  oldvalue
doaction t  page  lop
private void doaction rawtransaction t  basepage page  loggable lop
throws standardexception
long oldversion   0 		   sanity check
loginstant oldloginstant   null     sanity check
if  sanitymanager debug
oldloginstant   page getlastloginstant
oldversion   page getpageversion
// mark the page as pre-dirtied so that if a checkpoint happens after
// the log record is sent to the log stream, the cache cleaning will
// wait for this change.
page predirty
t loganddo lop
if  sanitymanager debug
// log instant may not supported by underlying log factory, in that
// case, it is expected to stay null
if  oldloginstant    null     page getlastloginstant      null
oldloginstant lessthan page getlastloginstant
sanitymanager throwassert
oldloginstant
page getlastloginstant
sanitymanager assert
oldversion      pagebasicoperation lop  getpageversion
sanitymanager assert page getpageversion   > oldversion