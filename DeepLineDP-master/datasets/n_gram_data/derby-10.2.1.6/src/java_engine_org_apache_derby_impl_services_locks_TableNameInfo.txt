/*
derby - class org.apache.derby.impl.services.locks.tablenameinfo
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl services locks
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi error standardexception
import org apache derby iapi sql conn languageconnectioncontext
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary conglomeratedescriptor
import org apache derby iapi sql dictionary tabledescriptor
import org apache derby iapi store access transactioncontroller
import java util hashtable
public class tablenameinfo
// things to look up table name etc
private datadictionary dd
private hashtable ddcache 			   conglomid  > conglomeratedescriptor
private hashtable tdcache 			   tableid uuid  > table descriptor
private hashtable tablecache 		   conglomid  > table descriptor
private hashtable indexcache 		   conglomid  > indexname
public tablenameinfo languageconnectioncontext lcc  boolean andindex
throws standardexception
tablecache   new hashtable 31
if  andindex
indexcache   new hashtable 13
transactioncontroller tc   lcc gettransactionexecute
dd   lcc getdatadictionary
ddcache   dd hashallconglomeratedescriptorsbynumber tc
tdcache   dd hashalltabledescriptorsbytableid tc
public string gettablename long conglomid
if  conglomid    null
return
// see if we have already seen this conglomerate
tabledescriptor td    tabledescriptor  tablecache get conglomid
if  td    null
// first time we see this conglomerate, get it from the
// ddcache
conglomeratedescriptor cd
conglomeratedescriptor ddcache get conglomid
if  cd    null
// conglomeratedescriptor is not null, this table is known
// to the data dictionary
td    tabledescriptor  tdcache get cd gettableid
if   cd    null      td    null
string name
// this table is not know to the data dictionary.  this
// can be caused by one of two reasons:
// 1. the table has just been dropped
// 2. the table is an internal one that lives below
// 		the data dictionary
if  conglomid longvalue   > 20
// table probably dropped!
name       conglomid
else
// i am hoping here that we won't create more than
// 20 tables before starting the data dictionary!
// one of the internal tables -- hack!!
switch  conglomid intvalue
case 0
name
break
case 1
name
break
case 2
name
break
default
name       conglomid
break
return name
tablecache put conglomid  td
if   indexcache    null     cd isindex
indexcache put conglomid  cd getconglomeratename
return td getname
public string gettabletype long conglomid
if  conglomid    null
return
string type
tabledescriptor td    tabledescriptor  tablecache get conglomid
if  td    null
switch td gettabletype
case tabledescriptor base_table_type
type
break
case tabledescriptor system_table_type
type
break
default
if  sanitymanager debug
sanitymanager throwassert
td getname         td gettabletype
type
break
else if  conglomid longvalue   > 20
type
else
type
return type
public string getindexname long conglomid
if  conglomid    null
return
return  string  indexcache get conglomid