/*
derby - class org.apache.derby.impl.sql.catalog.systablepermsrowfactory
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql catalog
import org apache derby catalog uuid
import org apache derby iapi error standardexception
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi services uuid uuidfactory
import org apache derby iapi sql dictionary permissionsdescriptor
import org apache derby iapi sql dictionary datadescriptorgenerator
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary systemcolumn
import org apache derby iapi sql dictionary tabledescriptor
import org apache derby iapi sql dictionary tablepermsdescriptor
import org apache derby iapi sql dictionary tupledescriptor
import org apache derby iapi sql execute execindexrow
import org apache derby iapi sql execute execrow
import org apache derby iapi sql execute executionfactory
import org apache derby iapi types datavaluedescriptor
import org apache derby iapi types datavaluefactory
import org apache derby iapi types rowlocation
import org apache derby iapi types stringdatavalue
/**
* factory for creating a systableperms row.
*
*/
public class systablepermsrowfactory extends permissionscatalogrowfactory
static final string tablename_string
// column numbers for the systableperms table. 1 based
private static final int tablepermsid_col_num   1
private static final int grantee_col_num   2
private static final int grantor_col_num   3
private static final int tableid_col_num   4
private static final int selectpriv_col_num   5
private static final int deletepriv_col_num   6
private static final int insertpriv_col_num   7
private static final int updatepriv_col_num   8
private static final int referencespriv_col_num   9
private static final int triggerpriv_col_num   10
private static final int column_count   10
public static final int grantee_table_grantor_index_num   0
public static final int tablepermsid_index_num   1
public static final int tableid_index_num   2
private static final int indexcolumnpositions
grantee_col_num  tableid_col_num  grantor_col_num
tablepermsid_col_num
tableid_col_num
private static final boolean indexuniqueness     true  true  false
private	static final string uuids
catalog uuid
heap uuid
index1
index2
index3
private systemcolumn columnlist
public systablepermsrowfactory uuidfactory uuidf  executionfactory ef  datavaluefactory dvf
boolean convertidtolower
super uuidf ef dvf convertidtolower
initinfo column_count  tablename_string  indexcolumnpositions  indexuniqueness  uuids
public execrow makerow tupledescriptor td  tupledescriptor parent  throws standardexception
uuid						oid
datavaluedescriptor grantee   null
datavaluedescriptor grantor   null
string tablepermid   null
string tableid   null
string selectpriv   null
string deletepriv   null
string insertpriv   null
string updatepriv   null
string referencespriv   null
string triggerpriv   null
if  td    null
grantee   getnullauthorizationid
grantor   getnullauthorizationid
else
tablepermsdescriptor tpd    tablepermsdescriptor  td
oid   tpd getuuid
if   oid    null
oid   getuuidfactory   createuuid
tpd setuuid oid
tablepermid   oid tostring
grantee   getauthorizationid  tpd getgrantee
grantor   getauthorizationid  tpd getgrantor
tableid   tpd gettableuuid   tostring
selectpriv   tpd getselectpriv
deletepriv   tpd getdeletepriv
insertpriv   tpd getinsertpriv
updatepriv   tpd getupdatepriv
referencespriv   tpd getreferencespriv
triggerpriv   tpd gettriggerpriv
execrow row   getexecutionfactory   getvaluerow  column_count
row setcolumn  tablepermsid_col_num  dvf getchardatavalue tablepermid
row setcolumn  grantee_col_num  grantee
row setcolumn  grantor_col_num  grantor
row setcolumn  tableid_col_num  dvf getchardatavalue  tableid
row setcolumn  selectpriv_col_num  dvf getchardatavalue  selectpriv
row setcolumn  deletepriv_col_num  dvf getchardatavalue  deletepriv
row setcolumn  insertpriv_col_num  dvf getchardatavalue  insertpriv
row setcolumn  updatepriv_col_num  dvf getchardatavalue  updatepriv
row setcolumn  referencespriv_col_num dvf getchardatavalue   referencespriv
row setcolumn  triggerpriv_col_num  dvf getchardatavalue  triggerpriv
return row
end of makerow
/** builds a tuple descriptor from a row */
public tupledescriptor builddescriptor execrow row
tupledescriptor parenttuple
datadictionary datadictionary
throws standardexception
if  sanitymanager debug
sanitymanager assert  row ncolumns      column_count
string tablepermsuuidstring   row getcolumn tablepermsid_col_num  getstring
uuid tablepermsuuid   getuuidfactory   recreateuuid tablepermsuuidstring
string tableuuidstring   row getcolumn  tableid_col_num  getstring
uuid tableuuid   getuuidfactory   recreateuuid tableuuidstring
string selectpriv    row getcolumn  selectpriv_col_num  getstring
string deletepriv    row getcolumn  deletepriv_col_num  getstring
string insertpriv    row getcolumn  insertpriv_col_num  getstring
string updatepriv    row getcolumn  updatepriv_col_num  getstring
string referencespriv    row getcolumn  referencespriv_col_num  getstring
string triggerpriv    row getcolumn  triggerpriv_col_num  getstring
if  sanitymanager debug
sanitymanager assert    equals selectpriv       equals selectpriv       equals selectpriv
selectpriv
sanitymanager assert    equals deletepriv       equals deletepriv       equals deletepriv
deletepriv
sanitymanager assert    equals insertpriv       equals insertpriv       equals insertpriv
insertpriv
sanitymanager assert    equals updatepriv       equals updatepriv       equals updatepriv
updatepriv
sanitymanager assert    equals referencespriv       equals referencespriv       equals referencespriv
referencespriv
sanitymanager assert    equals triggerpriv       equals triggerpriv       equals triggerpriv
triggerpriv
tablepermsdescriptor tabpermsdesc
new tablepermsdescriptor  datadictionary
getauthorizationid  row  grantee_col_num
getauthorizationid  row  grantor_col_num
tableuuid
selectpriv  deletepriv  insertpriv
updatepriv  referencespriv  triggerpriv
tabpermsdesc setuuid tablepermsuuid
return tabpermsdesc
end of builddescriptor
/** builds a column list for the catalog */
public systemcolumn buildcolumnlist
if  columnlist    null
columnlist   new systemcolumn
columnlist
new systemcolumnimpl  convertidcase
tablepermsid_col_num
0     precision
0     scale
false     nullability
true
36
columnlist
new systemcolumnimpl  convertidcase
grantee_col_num
0     precision
0     scale
false     nullability
authorization_id_type
authorization_id_is_builtin_type
authorization_id_length
columnlist
new systemcolumnimpl  convertidcase
grantor_col_num
0     precision
0     scale
false     nullability
authorization_id_type
authorization_id_is_builtin_type
authorization_id_length
columnlist
new systemcolumnimpl  convertidcase
tableid_col_num
0     precision
0     scale
false     nullability
datatype
true     built in type
36
columnlist
new systemcolumnimpl  convertidcase
selectpriv_col_num
0     precision
0     scale
false     nullability
datatype
true     built in type
1
columnlist
new systemcolumnimpl  convertidcase
deletepriv_col_num
0     precision
0     scale
false     nullability
datatype
true     built in type
1
columnlist
new systemcolumnimpl  convertidcase
insertpriv_col_num
0     precision
0     scale
false     nullability
datatype
true     built in type
1
columnlist
new systemcolumnimpl  convertidcase
updatepriv_col_num
0     precision
0     scale
false     nullability
datatype
true     built in type
1
columnlist
new systemcolumnimpl  convertidcase
referencespriv_col_num
0     precision
0     scale
false     nullability
datatype
true     built in type
1
columnlist
new systemcolumnimpl  convertidcase
triggerpriv_col_num
0     precision
0     scale
false     nullability
datatype
true     built in type
1
return columnlist
end of buildcolumnlist
/**
* builds a key row given for a given index number.
*/
public execindexrow buildindexkeyrow  int indexnumber
permissionsdescriptor perm
throws standardexception
execindexrow row   null
switch  indexnumber
case grantee_table_grantor_index_num
// resolve we do not support the for grant option, so table permission rows are unique on the
// grantee and table uuid columns. the grantor column will always have the name of the owner of the
// table. so the index key, used for searching the index, only has grantee and table uuid columns.
// it does not have a grantor column.
//
// if we support for grant option then there may be multiple table permissions rows for a
// (grantee, tableid) combination. we must either handle the multiple rows, which is necessary for
// checking permissions, or add a grantor column to the key, which is necessary for granting or revoking
// permissions.
row   getexecutionfactory   getindexablerow  2
row setcolumn 1  getauthorizationid  perm getgrantee
string tableuuidstr     tablepermsdescriptor  perm  gettableuuid   tostring
row setcolumn 2  getdatavaluefactory   getchardatavalue  tableuuidstr
break
case tablepermsid_index_num
row   getexecutionfactory   getindexablerow  1
string tablepermsuuidstr   perm getobjectid   tostring
row setcolumn 1  getdatavaluefactory   getchardatavalue  tablepermsuuidstr
break
case tableid_index_num
row   getexecutionfactory   getindexablerow  1
tableuuidstr     tablepermsdescriptor  perm  gettableuuid   tostring
row setcolumn 1  getdatavaluefactory   getchardatavalue  tableuuidstr
break
return row
end of buildindexrow
public int getprimarykeyindexnumber
return grantee_table_grantor_index_num
/**
* or a set of permissions in with a row from this catalog table
*
* @param row an existing row
* @param perm a permission descriptor of the appropriate class for this permissionscatalogrowfactory class.
* @param colschanged an array with one element for each column in row. it is updated to
*                    indicate which columns in row were changed
*
* @return the number of columns that were changed.
*
* @exception standardexception standard error policy
*/
public int orpermissions  execrow row  permissionsdescriptor perm  boolean colschanged
throws standardexception
tablepermsdescriptor tableperms    tablepermsdescriptor  perm
int changecount   0
changecount    oronepermission  row  colschanged  selectpriv_col_num  tableperms getselectpriv
changecount    oronepermission  row  colschanged  deletepriv_col_num  tableperms getdeletepriv
changecount    oronepermission  row  colschanged  insertpriv_col_num  tableperms getinsertpriv
changecount    oronepermission  row  colschanged  updatepriv_col_num  tableperms getupdatepriv
changecount    oronepermission  row  colschanged  referencespriv_col_num  tableperms getreferencespriv
changecount    oronepermission  row  colschanged  triggerpriv_col_num  tableperms gettriggerpriv
return changecount
end of orpermissions
private int oronepermission  execrow row  boolean colschanged  int column  string permission
throws standardexception
if  permission charat 0
return 0
if  sanitymanager debug
sanitymanager assert  permission charat 0          permission charat 0
datavaluedescriptor existingpermdvd   row getcolumn  column
char existingperm   existingpermdvd getstring   charat 0
if  existingperm         existingperm    permission charat 0
return 0
existingpermdvd setvalue  permission
colschanged   true
return 1
end of oronepermission
/**
* remove a set of permissions from a row from this catalog table
*
* @param row an existing row
* @param perm a permission descriptor of the appropriate class for this permissionscatalogrowfactory class.
* @param colschanged an array with one element for each column in row. it is updated to
*                    indicate which columns in row were changed
*
* @return -1 if there are no permissions left in the row, otherwise the number of columns that were changed.
*
* @exception standardexception standard error policy
*/
public int removepermissions  execrow row  permissionsdescriptor perm  boolean colschanged
throws standardexception
tablepermsdescriptor tableperms    tablepermsdescriptor  perm
int changecount   0
boolean permissionsleft
removeonepermission  row  colschanged  selectpriv_col_num  tableperms getselectpriv
removeonepermission  row  colschanged  deletepriv_col_num  tableperms getdeletepriv
removeonepermission  row  colschanged  insertpriv_col_num  tableperms getinsertpriv
removeonepermission  row  colschanged  updatepriv_col_num  tableperms getupdatepriv
removeonepermission  row  colschanged  referencespriv_col_num  tableperms getreferencespriv
removeonepermission  row  colschanged  triggerpriv_col_num  tableperms gettriggerpriv
if    permissionsleft
return  1
for  int i   0  i < colschanged length  i
if  colschanged
changecount
return changecount
end of removepermissions
private boolean removeonepermission  execrow row  boolean colschanged  int column  string permission
throws standardexception
datavaluedescriptor existingpermdvd   row getcolumn  column
char existingperm   existingpermdvd getstring   charat 0
if  permission charat 0           don't remove this one
return existingperm          the grantee still has some permissions on this table
if  sanitymanager debug
sanitymanager assert  permission charat 0          permission charat 0
if  existingperm
existingpermdvd setvalue
colschanged   true
return false
end of removeonepermission
/**
* @see permissionscatalogrowfactory#setuuidofthepasseddescriptor
*/
public void setuuidofthepasseddescriptor execrow row  permissionsdescriptor perm
throws standardexception
datavaluedescriptor existingpermdvd   row getcolumn tablepermsid_col_num
perm setuuid getuuidfactory   recreateuuid existingpermdvd getstring