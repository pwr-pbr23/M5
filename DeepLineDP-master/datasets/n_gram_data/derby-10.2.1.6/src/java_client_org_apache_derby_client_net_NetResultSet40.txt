/*
derby - class org.apache.derby.client.net.netresultset40
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client net
import java io inputstream
import java io reader
import java sql nclob
import java sql rowid
import java sql sqlexception
import java sql sqlxml
import org apache derby client am sqlexceptionfactory
import org apache derby iapi sql resultset
import org apache derby client am cursor
import org apache derby client am clientmessageid
import org apache derby client am sqlexception
import org apache derby shared common reference sqlstate
public class netresultset40 extends netresultset
netresultset40 netagent netagent
netstatement netstatement
cursor cursor
int qryprctyp     protocoltype  codepoint fixrowprc
//              codepoint.lmtblkprc
int sqlcsrhld     holdoption  0xf0 for false  default    0xf1 for true
int qryattscr     scrolloption  0xf0 for false  default    0xf1 for true
int qryattsns     sensitivity  codepoint qryunk
//              codepoint.qryins |
//              codepoint.qrysnsstc
int qryattset     rowsetcursor  0xf0 for false  default    0xf1 for true
long qryinsid     instanceidentifier  0  if not returned  check default  or number
int actualresultsettype
int actualresultsetconcurrency
int actualresultsetholdability    throws disconnectexception
super netagent  netstatement  cursor  qryprctyp  sqlcsrhld  qryattscr
qryattsns  qryattset  qryinsid  actualresultsettype
actualresultsetconcurrency  actualresultsetholdability
public reader getncharacterstream int columnindex
throws sqlexception
throw sqlexceptionfactory notimplemented
public reader getncharacterstream string columnname
throws sqlexception
throw sqlexceptionfactory notimplemented
public string getnstring int columnindex
throws sqlexception
throw sqlexceptionfactory notimplemented
public string getnstring string columnname
throws sqlexception
throw sqlexceptionfactory notimplemented
public rowid getrowid int columnindex  throws sqlexception
throw sqlexceptionfactory notimplemented
public rowid getrowid string columnname  throws sqlexception
throw sqlexceptionfactory notimplemented
public void updaterowid int columnindex  rowid x  throws sqlexception
throw sqlexceptionfactory notimplemented
public void updaterowid string columnname  rowid x  throws sqlexception
throw sqlexceptionfactory notimplemented
public void updatenstring int columnindex  string nstring  throws sqlexception
throw sqlexceptionfactory notimplemented
public void updatenstring string columnname  string nstring  throws sqlexception
throw sqlexceptionfactory notimplemented
public void updatencharacterstream int columnindex  reader x  long length
throws sqlexception
throw sqlexceptionfactory notimplemented
public void updatencharacterstream string columnname  reader x  long length
throws sqlexception
throw sqlexceptionfactory notimplemented
public void updatenclob int columnindex  nclob nclob  throws sqlexception
throw sqlexceptionfactory notimplemented
public void updatenclob string columnname  nclob nclob  throws sqlexception
throw sqlexceptionfactory notimplemented
public nclob getnclob int i  throws sqlexception
throw sqlexceptionfactory notimplemented
public nclob getnclob string colname  throws sqlexception
throw sqlexceptionfactory notimplemented
public sqlxml getsqlxml int columnindex  throws sqlexception
throw sqlexceptionfactory notimplemented
public sqlxml getsqlxml string colname  throws sqlexception
throw sqlexceptionfactory notimplemented
public void updatesqlxml int columnindex  sqlxml xmlobject  throws sqlexception
throw sqlexceptionfactory notimplemented
public void updatesqlxml string columnname  sqlxml xmlobject  throws sqlexception
throw sqlexceptionfactory notimplemented
/**
* returns false unless <code>interfaces</code> is implemented
*
* @param  interfaces             a class defining an interface.
* @return true                   if this implements the interface or
*                                directly or indirectly wraps an object
*                                that does.
* @throws java.sql.sqlexception  if an error occurs while determining
*                                whether this is a wrapper for an object
*                                with the given interface.
*/
public boolean iswrapperfor class<?> interfaces  throws sqlexception
try
checkforclosedresultset
catch  sqlexception se
throw se getsqlexception
return interfaces isinstance this
/**
* returns <code>this</code> if this class implements the interface
*
* @param  interfaces a class defining an interface
* @return an object that implements the interface
* @throws java.sql.sqlexption if no object if found that implements the
* interface
*/
public <t> t unwrap java lang class<t> interfaces
throws sqlexception
try
checkforclosedresultset
return interfaces cast this
catch  classcastexception cce
throw new sqlexception null
new clientmessageid sqlstate unable_to_unwrap
interfaces  getsqlexception
catch  sqlexception se
throw se getsqlexception
/**
* updates the designated column with a java.sql.blob value. the updater
* methods are used to update column values in the current row or the insert
* row. the updater methods do not update the underlying database; instead
* the updaterow or insertrow methods are called to update the database.
*
* @param columnindex -
*            the first column is 1, the second is 2
* @param x -
*            the new column value
* @param length -
*            the length of the blob datatype
* @exception sqlexception
*
*/
public void updateblob int columnindex  inputstream x  long length
throws sqlexception
throw sqlexceptionfactory notimplemented
/**
* updates the designated column with a java.sql.blob value. the updater
* methods are used to update column values in the current row or the insert
* row. the updater methods do not update the underlying database; instead
* the updaterow or insertrow methods are called to update the database.
*
* @param columnname -
*            the name of the column to be updated
* @param x -
*            the new column value
* @param length -
*            the length of the blob datatype
* @exception sqlexception
*
*/
public void updateblob string columnname  inputstream x  long length
throws sqlexception
throw sqlexceptionfactory notimplemented
/**
* updates the designated column with a java.sql.clob value. the updater
* methods are used to update column values in the current row or the insert
* row. the updater methods do not update the underlying database; instead
* the updaterow or insertrow methods are called to update the database.
*
* @param columnindex -
*            the first column is 1, the second is 2
* @param x -
*            the new column value
* @exception sqlexception
*                feature not implemented for now.
*/
public void updateclob int columnindex  reader x  long length
throws sqlexception
throw sqlexceptionfactory notimplemented
/**
* updates the designated column with a java.sql.clob value. the updater
* methods are used to update column values in the current row or the insert
* row. the updater methods do not update the underlying database; instead
* the updaterow or insertrow methods are called to update the database.
*
* @param columnname -
*            the name of the clob column
* @param x -
*            the new column value
* @exception sqlexception
*                feature not implemented for now.
*/
public void updateclob string columnname  inputstream x  long length
throws sqlexception
throw sqlexceptionfactory notimplemented
/**
* updates the designated column with a java.sql.clob value. the updater
* methods are used to update column values in the current row or the insert
* row. the updater methods do not update the underlying database; instead
* the updaterow or insertrow methods are called to update the database.
*
* @param columnname -
*            the name of the clob column
* @param x -
*            the new column value
* @exception sqlexception
*                feature not implemented for now.
*/
public void updateclob string columnname  reader x  long length
throws sqlexception
throw sqlexceptionfactory notimplemented
/**
* updates the designated column with a java.sql.nclob value. the updater
* methods are used to update column values in the current row or the insert
* row. the updater methods do not update the underlying database; instead
* the updaterow or insertrow methods are called to update the database.
*
* @param columnindex -
*            the first column is 1, the second is 2
* @param x -
*            the new column value
* @exception sqlexception
*                feature not implemented for now.
*/
public void updatenclob int columnindex  reader x  long length
throws sqlexception
throw sqlexceptionfactory notimplemented
/**
* updates the designated column with a java.sql.nclob value. the updater
* methods are used to update column values in the current row or the insert
* row. the updater methods do not update the underlying database; instead
* the updaterow or insertrow methods are called to update the database.
*
* @param columnname -
*            the name of the clob column
* @param x -
*            the new column value
* @exception sqlexception
*                feature not implemented for now.
*/
public void updatenclob string columnname  inputstream x  long length
throws sqlexception
throw sqlexceptionfactory notimplemented
/**
* updates the designated column with a java.sql.nclob value. the updater
* methods are used to update column values in the current row or the insert
* row. the updater methods do not update the underlying database; instead
* the updaterow or insertrow methods are called to update the database.
*
* @param columnname -
*            the name of the clob column
* @param x -
*            the new column value
* @exception sqlexception
*                feature not implemented for now.
*/
public void updatenclob string columnname  reader x  long length
throws sqlexception
throw sqlexceptionfactory notimplemented