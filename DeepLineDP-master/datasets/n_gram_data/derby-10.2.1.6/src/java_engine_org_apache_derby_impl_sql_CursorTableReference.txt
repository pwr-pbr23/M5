/*
derby - class org.apache.derby.impl.sql.cursortablereference
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql
import org apache derby iapi sql execute execcursortablereference
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi services io storedformatids
import org apache derby iapi services io formatidutil
import org apache derby iapi services io formatable
import java io objectoutput
import java io objectinput
import java io ioexception
/**
*
* @author jamie
*/
public class cursortablereference
implements execcursortablereference  formatable
/********************************************************
**
**	this class implements formatable. that means that it
**	can write itself to and from a formatted stream. if
**	you add more fields to this class, make sure that you
**	also write/read them with the writeexternal()/readexternal()
**	methods.
**
**	if, inbetween releases, you add more fields to this class,
**	then you should bump the version number emitted by the gettypeformatid()
**	method.
**
********************************************************/
private string		exposedname
private string		basename
private string		schemaname
/**
* niladic constructor for formatable
*/
public cursortablereference
/**
*
*/
public cursortablereference
string	exposedname
string	basename
string	schemaname
this exposedname   exposedname
this basename   basename
this schemaname   schemaname
/**
* return the base name of the table
*
* @return the base name
*/
public string getbasename
return basename
/**
* return the exposed name of the table.  exposed
* name is another term for correlation name.  if
* there is no correlation, this will return the base
* name.
*
* @return the base name
*/
public string getexposedname
return exposedname
/**
* return the schema for the table.
*
* @return the schema name
*/
public string getschemaname
return schemaname
//////////////////////////////////////////////
//
// formatable
//
//////////////////////////////////////////////
/**
* write this object out
*
* @param out write bytes here
*
* @exception ioexception thrown on error
*/
public void writeexternal objectoutput out  throws ioexception
out writeobject basename
out writeobject exposedname
out writeobject schemaname
/**
* read this object from a stream of stored objects.
*
* @param in read this.
*
* @exception ioexception					thrown on error
* @exception classnotfoundexception		thrown on error
*/
public void readexternal objectinput in
throws ioexception  classnotfoundexception
basename    string in readobject
exposedname    string in readobject
schemaname    string in readobject
/**
* get the formatid which corresponds to this class.
*
*	@return	the formatid of this class
*/
public	int gettypeformatid  	  return storedformatids cursor_table_reference_v01_id
public string tostring
if  sanitymanager debug
return
exposedname
basename
schemaname
else
return