/*
derby - class org.apache.derby.iapi.store.raw.containerlock
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi store raw
/**
a containerlock represents a qualifier that is to be used when
locking a container through a containerhandle.
<br>
mt - immutable
@see containerhandle
@see lockingpolicy
*/
public final class containerlock
private final int type
private containerlock int type
this type   type
// names of locks for virtual lock table print out
private static string shortnames
/** container intent shared lock  */
public static final containerlock cis   new containerlock 0
/**	container intent exclusive lock */
public static final containerlock cix   new containerlock 1
/**  container shared lock */
public static final containerlock cs    new containerlock 2
/** container update lock */
public static final containerlock cu    new containerlock 3
/** container exclusive lock */
public static final containerlock cx    new containerlock 4
/** number of types of container locks */
public static final int c_number   5
/** container lock compatability table */
private static final boolean c_compat
//                          granted
// request \	cis		cix		cs		cu		cx
//
cis	     	true 	true 	true 	false 	false
cix	     	true 	true 	false 	false 	false
cs	     	true 	false 	true 	false 	false
cu	  	 	false 	false 	true 	false 	false
cx	     	false 	false 	false 	false 	false
/**
get an integer representation of the type of the lock. this method is guaranteed
to return an integer >= 0 and < c_number. no correlation between the value
and one of the static variables (cis etc.) is guaranteed, except that
the values returned do not change.
*/
public int gettype
return type
public boolean iscompatible containerlock granted
return iscompatible granted gettype
public boolean iscompatible int granted
return c_compat
public string tostring
return shortnames