/*
derby - class org.apache.derby.impl.tools.dblook.db_jar
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl tools dblook
import java sql connection
import java sql statement
import java sql preparedstatement
import java sql resultset
import java sql sqlexception
import java util hashmap
import java io file
import java io fileoutputstream
import java io fileinputstream
import java io filenotfoundexception
import java io ioexception
import org apache derby tools dblook
public class db_jar
/* ************************************************
* generate the ddl for all jars in a given
* database.
* @param dbname name of the database (for locating the jar).
* @param conn connection to the source database.
* @return the ddl for the jars has been written
*  to output via logs.java.
****/
public static void dojars string dbname  connection conn
throws sqlexception
string separator   system getproperty
statement stmt   conn createstatement
resultset rs   stmt executequery
boolean firsttime   true
while  rs next
string jarname   dblook addquotes
dblook expanddoublequotes rs getstring 1
string schemaid   rs getstring 2
string schemaname   dblook lookupschemaid schemaid
if  dblook isignorableschema schemaname
continue
if  firsttime
logs reportstring
logs reportmessage
logs reportmessage
logs reportstring
string genid   rs getstring 3
string schemawithoutquotes   dblook stripquotes schemaname
stringbuffer jarfullname   new stringbuffer separator
jarfullname append dblook stripquotes jarname
jarfullname append
jarfullname append genid
stringbuffer oldjarpath   new stringbuffer
oldjarpath append dbname
oldjarpath append separator
oldjarpath append
oldjarpath append separator
oldjarpath append schemawithoutquotes
oldjarpath append jarfullname
// copy jar file to dbjars directory.
string absjardir   null
try
// create the dbjars directory.
file jardir   new file system getproperty
separator       separator   schemawithoutquotes
absjardir   jardir getabsolutepath
jardir mkdirs
// create streams.
fileinputstream oldjarfile
new fileinputstream oldjarpath tostring
fileoutputstream newjarfile
new fileoutputstream absjardir   jarfullname
// copy.
int st   0
while  true
if  oldjarfile available      0
break
byte bar   new byte
oldjarfile read bar
newjarfile write bar
newjarfile close
oldjarfile close
catch  exception e
logs debug
absjardir   jarfullname tostring
logs debug e
firsttime   false
continue
// now, add the ddl to read the jar from dbjars.
stringbuffer loadjarstring   new stringbuffer
loadjarstring append
loadjarstring append absjardir
loadjarstring append jarfullname
loadjarstring append
loadjarstring append schemaname
loadjarstring append
loadjarstring append jarname
loadjarstring append
logs writetonewddl loadjarstring tostring
logs writestmtendtonewddl
logs writenewlinetonewddl
firsttime   false
stmt close
rs close