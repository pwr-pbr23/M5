/*
derby - class org.apache.derby.client.am.productlevel
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client am
public class productlevel
public string databaseproductname_
public int versionlevel_
public int releaselevel_
public int modificationlevel_
// the following value is sent in the srvrlslv level
public string databaseproductversion_
// the productid is set by the constructors.
// dabaseproductversion added by derby to include  srvrlslv
public productlevel string productid  string databaseproductname
string srvrlslv
// this.productid has the following format
//   css for derby
// vv = version id
// rr = release id
// m = modification level
versionlevel_   integer parseint productid substring 3  5
releaselevel_   integer parseint productid substring 5  7
modificationlevel_   integer parseint productid substring 7  8
databaseproductname_    databaseproductname    null  ?
databaseproductname     this is the srvclsnm in protocol
// databaseproductversion - extracted from the srvrlslv.
// srvrlslv has the format <prdid>/<alternate version format>
// for example derby has a four part verison number so might send
// css10000/10.0.1.1 beta. if the alternate version format is not
// specified,
// databaseproductversion_ will just be set to the srvrlslvl.
// final fallback will be the product id.
// this is the value returned with the getdatabaseproductversion()
// metadata call
int dbversionoffset   0
if  srvrlslv    null
dbversionoffset   srvrlslv indexof      1
// if there was no '/' dbversionoffset will just be 0
databaseproductversion_   srvrlslv substring dbversionoffset
if  databaseproductversion_    null
databaseproductversion_   productid
public boolean greaterthanorequalto int versionlevel  int releaselevel  int modificationlevel
if  versionlevel_ > versionlevel
return true
else if  versionlevel_    versionlevel
if  releaselevel_ > releaselevel
return true
else if  releaselevel_    releaselevel
if  modificationlevel_ >  modificationlevel
return true
return false
public boolean lessthan int versionlevel  int releaselevel  int modificationlevel
if  versionlevel_ < versionlevel
return true
else if  versionlevel_    versionlevel
if  releaselevel_ < releaselevel
return true
else if  releaselevel_    releaselevel
if  modificationlevel_ < modificationlevel
return true
return false