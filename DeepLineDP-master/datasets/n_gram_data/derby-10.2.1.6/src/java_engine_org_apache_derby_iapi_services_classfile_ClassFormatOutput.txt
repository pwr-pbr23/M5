/*
derby - class org.apache.derby.iapi.services.classfile.classformatoutput
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi services classfile
import org apache derby iapi services io accessiblebytearrayoutputstream
import java io dataoutputstream
import java io ioexception
import java io outputstream
/** a wrapper around dataoutputstream to provide input functions in terms
of the types defined on pages 83 of the java virtual machine spec.
for this types use these methods of dataoutputstream
<ul>
<li>float - writefloat
<li>long - writelong
<li>double - writedouble
<li>utf/string - writeutf
<li>u1array - write(byte[])
</ul>
*/
public final class classformatoutput extends dataoutputstream
public classformatoutput
this 512
public classformatoutput int size
this new accessiblebytearrayoutputstream size
public classformatoutput java io outputstream stream
super stream
public void putu1 int i  throws ioexception
// ensure the format of the class file is not
// corrupted by writing an incorrect, truncated value.
if  i > 255
classformatoutput limit    255  i
write i
public void putu2 int i  throws ioexception
putu2    i
public void putu2 string limit  int i  throws ioexception
// ensure the format of the class file is not
// corrupted by writing an incorrect, truncated value.
if  i > 65535
classformatoutput limit limit  65535  i
write i >> 8
write i
public void putu4 int i  throws ioexception
writeint i
public void writeto outputstream outto  throws ioexception
accessiblebytearrayoutputstream  out  writeto outto
/**
get a reference to the data array the class data is being built
in. no copy is made.
*/
public byte getdata
return   accessiblebytearrayoutputstream  out  getinternalbytearray
/**
* throw an classformaterror if a limit of the java class file format is reached.
* @param name terse limit description from jvm spec.
* @param limit what the limit is.
* @param value what the value for the current class is
* @throws ioexception thrown when limit is exceeded.
*/
static void limit string name  int limit  int value
throws ioexception
throw new ioexception name       value       limit