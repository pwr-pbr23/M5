/*
derby - class org.apache.derby.iapi.services.loader.classinfo
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi services loader
import java lang reflect constructor
import java lang reflect invocationtargetexception
public class classinfo implements instancegetter
private static final class noparameters   new class
private static final object noarguments   new object
private final class clazz
private boolean useconstructor   true
private constructor noargconstructor
public classinfo class clazz
this clazz   clazz
/**
return the name of this class.
*/
public final string getclassname
return clazz getname
/**
return the class object for this class.
*/
public final class getclassobject
return clazz
/**
create an instance of this class. assumes that clazz has already been
initialized. optimizes class.newinstance() by caching and using the
no-arg constructor directly. class.newinstance() looks up the constructor
each time.
@exception instantiationexception zero arg constructor can not be executed
@exception illegalaccessexception class or zero arg constructor is not public.
@exception invocationtargetexception exception throw in zero-arg constructor.
*/
public object getnewinstance
throws instantiationexception  illegalaccessexception  invocationtargetexception
if   useconstructor
return clazz newinstance
if  noargconstructor    null
try
noargconstructor    clazz getconstructor noparameters
catch  nosuchmethodexception nsme
// let class.newinstace() generate the exception
useconstructor   false
return getnewinstance
catch  securityexception se
// not allowed to to get a handle on the constructor
// just use the standard mechanism.
useconstructor   false
return getnewinstance
try
return noargconstructor newinstance noarguments
catch  illegalargumentexception iae
// can't happen since no arguments are passed.
return null