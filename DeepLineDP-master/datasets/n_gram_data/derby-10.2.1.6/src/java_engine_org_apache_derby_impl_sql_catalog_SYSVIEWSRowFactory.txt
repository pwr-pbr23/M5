/*
derby - class org.apache.derby.impl.sql.catalog.sysviewsrowfactory
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql catalog
import org apache derby iapi types datavaluedescriptor
import org apache derby iapi types typeid
import org apache derby iapi sql dictionary systemcolumn
import org apache derby catalog typedescriptor
import org apache derby iapi types datavaluefactory
import org apache derby iapi types rowlocation
import org apache derby iapi sql dictionary catalogrowfactory
import org apache derby iapi sql dictionary conglomeratedescriptor
import org apache derby iapi sql dictionary datadescriptorgenerator
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary datadictionarycontext
import org apache derby iapi sql dictionary tupledescriptor
import org apache derby iapi sql dictionary viewdescriptor
import org apache derby iapi sql execute executioncontext
import org apache derby iapi sql execute execindexrow
import org apache derby iapi sql execute execrow
import org apache derby iapi sql execute executionfactory
import org apache derby iapi error standardexception
import org apache derby iapi services sanity sanitymanager
import org apache derby iapi services uuid uuidfactory
import org apache derby catalog uuid
import org apache derby catalog indexdescriptor
import java util properties
/**
* factory for creating a sysviews row.
*
* @author jerry
*/
public class sysviewsrowfactory extends catalogrowfactory
private  static final string	tablename_string
protected static final int		sysviews_column_count   4
protected static final int		sysviews_tableid   1
protected static final int		sysviews_viewdefinition   2
protected static final int		sysviews_checkoption   3
protected static final int		sysviews_compilation_schemaid   4
// column widths
protected static final int		sysviews_tableid_width   36
protected static final int		sysviews_index1_id   0
private static final int indexcolumnpositions
sysviews_tableid
// if you add a non-unique index allocate this array.
private	static	final	boolean	uniqueness   null
private	static	final	string	uuids
catalog uuid
heap uuid
sysviews_index1
/////////////////////////////////////////////////////////////////////////////
//
//	constructors
//
/////////////////////////////////////////////////////////////////////////////
public	sysviewsrowfactory uuidfactory uuidf  executionfactory ef  datavaluefactory dvf
boolean convertidtolower
super uuidf ef dvf convertidtolower
initinfo sysviews_column_count  tablename_string
indexcolumnpositions  uniqueness  uuids
/////////////////////////////////////////////////////////////////////////////
//
//	methods
//
/////////////////////////////////////////////////////////////////////////////
/**
* make a sysviews row
*
* @return	row suitable for inserting into sysviews.
*
* @exception   standardexception thrown on failure
*/
public execrow makerow tupledescriptor td  tupledescriptor parent
throws standardexception
datavaluedescriptor		col
execrow    				row
string					tableid   null
string					compschemaid   null
string					viewtext   null
string	   				checkstype   null
int	   					checkitype
if  td    null
uuid	tableuuid
viewdescriptor vd    viewdescriptor td
/*
** we only allocate a new uuid if the descriptor doesn't already have one.
** for descriptors replicated from a source system, we already have an uuid.
*/
tableuuid   vd getuuid
if   tableuuid    null
tableuuid   getuuidfactory   createuuid
vd setuuid tableuuid
tableid   tableuuid tostring
viewtext   vd getviewtext
/* resolve - check constraints not supported yet */
checkitype   vd getcheckoptiontype
if  sanitymanager debug
if  checkitype    viewdescriptor no_check_option
sanitymanager throwassert
viewdescriptor no_check_option
checkitype
checkstype
uuid tmpid   vd getcompschemaid
compschemaid    tmpid    null  ? null   tmpid tostring
/* insert info into sysviews */
/* resolve - it would be nice to require less knowledge about sysviews
* and have this be more table driven.
*/
/* build the row to insert  */
row   getexecutionfactory   getvaluerow sysviews_column_count
/* 1st column is tableid (uuid - char(36)) */
row setcolumn sysviews_tableid  dvf getchardatavalue tableid
/* 2nd column is viewdefinition */
row setcolumn sysviews_viewdefinition
dvf getlongvarchardatavalue viewtext
/* 3rd column is checkoption (char(1)) */
row setcolumn sysviews_checkoption  dvf getchardatavalue checkstype
/* 4th column is compilationschemaid (uuid - char(36)) */
row setcolumn sysviews_compilation_schemaid  dvf getchardatavalue compschemaid
return row
///////////////////////////////////////////////////////////////////////////
//
//	abstract methods to be implemented by children of catalogrowfactory
//
///////////////////////////////////////////////////////////////////////////
/**
* make a viewdescriptor out of a sysviews row
*
* @param row a sysviews row
* @param parenttupledescriptor	null for this kind of descriptor.
* @param dd datadictionary
*
* @exception   standardexception thrown on failure
*/
public tupledescriptor builddescriptor
execrow					row
tupledescriptor			parenttupledescriptor
datadictionary 			dd
throws standardexception
viewdescriptor vd   null
if  sanitymanager debug
sanitymanager assert
row ncolumns      sysviews_column_count
datavaluedescriptor	col
datadescriptorgenerator ddg
int					checkitype
string				checkstype
string				tableid
string				compschemaid
string				viewdefinition
uuid				tableuuid
uuid				compschemauuid   null
ddg   dd getdatadescriptorgenerator
/* 1st column is tableid (uuid - char(36)) */
col   row getcolumn sysviews_tableid
tableid   col getstring
tableuuid   getuuidfactory   recreateuuid tableid
/* 2nd column is viewdefinition */
col   row getcolumn sysviews_viewdefinition
viewdefinition   col getstring
/* 3rd column is checkoption (char(1)) */
col   row getcolumn sysviews_checkoption
checkstype   col getstring
if  sanitymanager debug
if   checkstype equals
sanitymanager throwassert     checkstype
/* resolve - no check options for now */
checkitype   viewdescriptor no_check_option
/* 4th column is compilationschemaid (uuid - char(36)) */
col   row getcolumn sysviews_compilation_schemaid
compschemaid   col getstring
if  compschemaid    null
compschemauuid   getuuidfactory   recreateuuid compschemaid
/* now build and return the descriptor */
vd   ddg newviewdescriptor tableuuid  null  viewdefinition
checkitype  compschemauuid
return vd
/**
* builds a list of columns suitable for creating this catalog.
*
*
* @return array of systemcolumn suitable for making this catalog.
*/
public systemcolumn	buildcolumnlist
systemcolumn			columnlist   new systemcolumn
columnlist   new systemcolumnimpl
convertidcase     			   name
sysviews_tableid 	   column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
36					   maxlength
// describe columns
columnlist
new systemcolumnimpl
convertidcase     		   column name
sysviews_viewdefinition 	   column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
typeid longvarchar_maxwidth    maxlength
columnlist
new systemcolumnimpl
convertidcase     		   column name
sysviews_checkoption    column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
1					   maxlength
columnlist   new systemcolumnimpl
convertidcase     	   name
sysviews_compilation_schemaid 	   column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
36					   maxlength
return	columnlist