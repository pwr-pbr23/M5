/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq state
import java io ioexception
import java util iterator
import java util linkedhashmap
import java util map
import java util concurrent concurrenthashmap
import org apache activemq command command
import org apache activemq command connectionid
import org apache activemq command connectioninfo
import org apache activemq command consumerid
import org apache activemq command consumerinfo
import org apache activemq command destinationinfo
import org apache activemq command message
import org apache activemq command messageack
import org apache activemq command messageid
import org apache activemq command producerid
import org apache activemq command producerinfo
import org apache activemq command response
import org apache activemq command sessionid
import org apache activemq command sessioninfo
import org apache activemq command transactioninfo
import org apache activemq transport transport
import org apache activemq util ioexceptionsupport
/**
* tracks the state of a connection so a newly established transport can be
* re-initialized to the state that was tracked.
*
* @version $revision$
*/
public class connectionstatetracker extends commandvisitoradapter
private static final tracked tracked_response_marker   new tracked null
protected final concurrenthashmap<connectionid  connectionstate> connectionstates   new concurrenthashmap<connectionid  connectionstate>
private boolean tracktransactions
private boolean restoresessions   true
private boolean restoreconsumers   true
private boolean restoreproducers   true
private boolean restoretransaction   true
private boolean trackmessages   true
private int maxcachesize   128   1024
private int currentcachesize
private map<messageid message> messagecache   new linkedhashmap<messageid message>
protected boolean removeeldestentry map entry<messageid message> eldest
boolean result   currentcachesize > maxcachesize
if  result
currentcachesize    eldest getvalue   getsize
return result
private class removetransactionaction implements runnable
private final transactioninfo info
public removetransactionaction transactioninfo info
this info   info
public void run
connectionid connectionid   info getconnectionid
connectionstate cs   connectionstates get connectionid
cs removetransactionstate info gettransactionid
/**
*
*
* @param command
* @return null if the command is not state tracked.
* @throws ioexception
*/
public tracked track command command  throws ioexception
try
return  tracked command visit this
catch  ioexception e
throw e
catch  throwable e
throw ioexceptionsupport create e
public void trackback command command
if  trackmessages    command    null    command ismessage
message message    message  command
if  message gettransactionid    null
currentcachesize   currentcachesize    message getsize
public void restore transport transport  throws ioexception
// restore the connections.
for  iterator<connectionstate> iter   connectionstates values   iterator    iter hasnext
connectionstate connectionstate   iter next
transport oneway connectionstate getinfo
restoretempdestinations transport  connectionstate
if  restoresessions
restoresessions transport  connectionstate
if  restoretransaction
restoretransactions transport  connectionstate
//now flush messages
for  message msg messagecache values
transport oneway msg
private void restoretransactions transport transport  connectionstate connectionstate  throws ioexception
for  iterator iter   connectionstate gettransactionstates   iterator    iter hasnext
transactionstate transactionstate    transactionstate iter next
for  iterator iterator   transactionstate getcommands   iterator    iterator hasnext
command command    command iterator next
transport oneway command
/**
* @param transport
* @param connectionstate
* @throws ioexception
*/
protected void restoresessions transport transport  connectionstate connectionstate  throws ioexception
// restore the connection's sessions
for  iterator iter2   connectionstate getsessionstates   iterator    iter2 hasnext
sessionstate sessionstate    sessionstate iter2 next
transport oneway sessionstate getinfo
if  restoreproducers
restoreproducers transport  sessionstate
if  restoreconsumers
restoreconsumers transport  sessionstate
/**
* @param transport
* @param sessionstate
* @throws ioexception
*/
protected void restoreconsumers transport transport  sessionstate sessionstate  throws ioexception
// restore the session's consumers
for  iterator iter3   sessionstate getconsumerstates   iterator    iter3 hasnext
consumerstate consumerstate    consumerstate iter3 next
transport oneway consumerstate getinfo
/**
* @param transport
* @param sessionstate
* @throws ioexception
*/
protected void restoreproducers transport transport  sessionstate sessionstate  throws ioexception
// restore the session's producers
for  iterator iter3   sessionstate getproducerstates   iterator    iter3 hasnext
producerstate producerstate    producerstate iter3 next
transport oneway producerstate getinfo
/**
* @param transport
* @param connectionstate
* @throws ioexception
*/
protected void restoretempdestinations transport transport  connectionstate connectionstate
throws ioexception
// restore the connection's temp destinations.
for  iterator iter2   connectionstate gettempdesinations   iterator    iter2 hasnext
transport oneway  destinationinfo iter2 next
public response processadddestination destinationinfo info
if  info    null
connectionstate cs   connectionstates get info getconnectionid
if  cs    null    info getdestination   istemporary
cs addtempdestination info
return tracked_response_marker
public response processremovedestination destinationinfo info
if  info    null
connectionstate cs   connectionstates get info getconnectionid
if  cs    null    info getdestination   istemporary
cs removetempdestination info getdestination
return tracked_response_marker
public response processaddproducer producerinfo info
if  info    null    info getproducerid      null
sessionid sessionid   info getproducerid   getparentid
if  sessionid    null
connectionid connectionid   sessionid getparentid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
sessionstate ss   cs getsessionstate sessionid
if  ss    null
ss addproducer info
return tracked_response_marker
public response processremoveproducer producerid id
if  id    null
sessionid sessionid   id getparentid
if  sessionid    null
connectionid connectionid   sessionid getparentid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
sessionstate ss   cs getsessionstate sessionid
if  ss    null
ss removeproducer id
return tracked_response_marker
public response processaddconsumer consumerinfo info
if  info    null
sessionid sessionid   info getconsumerid   getparentid
if  sessionid    null
connectionid connectionid   sessionid getparentid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
sessionstate ss   cs getsessionstate sessionid
if  ss    null
ss addconsumer info
return tracked_response_marker
public response processremoveconsumer consumerid id
if  id    null
sessionid sessionid   id getparentid
if  sessionid    null
connectionid connectionid   sessionid getparentid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
sessionstate ss   cs getsessionstate sessionid
if  ss    null
ss removeconsumer id
return tracked_response_marker
public response processaddsession sessioninfo info
if  info    null
connectionid connectionid   info getsessionid   getparentid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
cs addsession info
return tracked_response_marker
public response processremovesession sessionid id
if  id    null
connectionid connectionid   id getparentid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
cs removesession id
return tracked_response_marker
public response processaddconnection connectioninfo info
if  info    null
connectionstates put info getconnectionid    new connectionstate info
return tracked_response_marker
public response processremoveconnection connectionid id  throws exception
if  id    null
connectionstates remove id
return tracked_response_marker
public response processmessage message send  throws exception
if  send    null
if  tracktransactions    send gettransactionid      null
connectionid connectionid   send getproducerid   getparentid   getparentid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
transactionstate transactionstate   cs gettransactionstate send gettransactionid
if  transactionstate    null
transactionstate addcommand send
return tracked_response_marker
else if  trackmessages
messagecache put send getmessageid    send copy
return null
public response processmessageack messageack ack
if  tracktransactions    ack    null    ack gettransactionid      null
connectionid connectionid   ack getconsumerid   getparentid   getparentid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
transactionstate transactionstate   cs gettransactionstate ack gettransactionid
if  transactionstate    null
transactionstate addcommand ack
return tracked_response_marker
return null
public response processbegintransaction transactioninfo info
if  tracktransactions    info    null    info gettransactionid      null
connectionid connectionid   info getconnectionid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
cs addtransactionstate info gettransactionid
return tracked_response_marker
return null
public response processpreparetransaction transactioninfo info  throws exception
if  tracktransactions    info    null
connectionid connectionid   info getconnectionid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
transactionstate transactionstate   cs gettransactionstate info gettransactionid
if  transactionstate    null
transactionstate addcommand info
return tracked_response_marker
return null
public response processcommittransactiononephase transactioninfo info  throws exception
if  tracktransactions    info    null
connectionid connectionid   info getconnectionid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
transactionstate transactionstate   cs gettransactionstate info gettransactionid
if  transactionstate    null
transactionstate addcommand info
return new tracked new removetransactionaction info
return null
public response processcommittransactiontwophase transactioninfo info  throws exception
if  tracktransactions    info    null
connectionid connectionid   info getconnectionid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
transactionstate transactionstate   cs gettransactionstate info gettransactionid
if  transactionstate    null
transactionstate addcommand info
return new tracked new removetransactionaction info
return null
public response processrollbacktransaction transactioninfo info  throws exception
if  tracktransactions    info    null
connectionid connectionid   info getconnectionid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
transactionstate transactionstate   cs gettransactionstate info gettransactionid
if  transactionstate    null
transactionstate addcommand info
return new tracked new removetransactionaction info
return null
public response processendtransaction transactioninfo info  throws exception
if  tracktransactions    info    null
connectionid connectionid   info getconnectionid
if  connectionid    null
connectionstate cs   connectionstates get connectionid
if  cs    null
transactionstate transactionstate   cs gettransactionstate info gettransactionid
if  transactionstate    null
transactionstate addcommand info
return tracked_response_marker
return null
public boolean isrestoreconsumers
return restoreconsumers
public void setrestoreconsumers boolean restoreconsumers
this restoreconsumers   restoreconsumers
public boolean isrestoreproducers
return restoreproducers
public void setrestoreproducers boolean restoreproducers
this restoreproducers   restoreproducers
public boolean isrestoresessions
return restoresessions
public void setrestoresessions boolean restoresessions
this restoresessions   restoresessions
public boolean istracktransactions
return tracktransactions
public void settracktransactions boolean tracktransactions
this tracktransactions   tracktransactions
public boolean isrestoretransaction
return restoretransaction
public void setrestoretransaction boolean restoretransaction
this restoretransaction   restoretransaction
public boolean istrackmessages
return trackmessages
public void settrackmessages boolean trackmessages
this trackmessages   trackmessages
public int getmaxcachesize
return maxcachesize
public void setmaxcachesize int maxcachesize
this maxcachesize   maxcachesize