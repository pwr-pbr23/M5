/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker region
import org apache activemq broker broker
import org apache activemq broker brokerservice
import org apache activemq broker connectioncontext
import org apache activemq command activemqdestination
import org apache activemq command producerinfo
import org apache activemq store messagestore
import org apache activemq usage memoryusage
import org apache activemq usage systemusage
/**
* @version $revision: 1.12 $
*/
public abstract class basedestination implements destination
public static final int default_page_size 100
protected final activemqdestination destination
protected final broker broker
protected final messagestore store
protected systemusage systemusage
protected memoryusage memoryusage
private boolean producerflowcontrol   true
private int maxproducerstoaudit 1024
private int maxauditdepth 2048
private boolean enableaudit true
private int maxpagesize default_page_size
private boolean usecache true
private int minimummessagesize 1024
private boolean lazydispatch false
protected final destinationstatistics destinationstatistics   new destinationstatistics
protected final brokerservice brokerservice
protected final broker regionbroker
/**
* @param broker
* @param store
* @param destination
* @param parentstats
* @throws exception
*/
public basedestination brokerservice brokerservice messagestore store  activemqdestination destination  destinationstatistics parentstats  throws exception
this brokerservice   brokerservice
this broker brokerservice getbroker
this store store
this destination destination
// let's copy the enabled property from the parent destinationstatistics
this destinationstatistics setenabled parentstats isenabled
this destinationstatistics setparent parentstats
this systemusage   brokerservice getproducersystemusage
this memoryusage   new memoryusage systemusage getmemoryusage    destination tostring
this memoryusage setusageportion 1 0f
this regionbroker   brokerservice getregionbroker
/**
* initialize the destination
* @throws exception
*/
public void initialize   throws exception
// let the store know what usage manager we are using so that he can
// flush messages to disk when usage gets high.
if  store    null
store setmemoryusage this memoryusage
/**
* @return the producerflowcontrol
*/
public boolean isproducerflowcontrol
return producerflowcontrol
/**
* @param producerflowcontrol the producerflowcontrol to set
*/
public void setproducerflowcontrol boolean producerflowcontrol
this producerflowcontrol   producerflowcontrol
/**
* @return the maxproducerstoaudit
*/
public int getmaxproducerstoaudit
return maxproducerstoaudit
/**
* @param maxproducerstoaudit the maxproducerstoaudit to set
*/
public void setmaxproducerstoaudit int maxproducerstoaudit
this maxproducerstoaudit   maxproducerstoaudit
/**
* @return the maxauditdepth
*/
public int getmaxauditdepth
return maxauditdepth
/**
* @param maxauditdepth the maxauditdepth to set
*/
public void setmaxauditdepth int maxauditdepth
this maxauditdepth   maxauditdepth
/**
* @return the enableaudit
*/
public boolean isenableaudit
return enableaudit
/**
* @param enableaudit the enableaudit to set
*/
public void setenableaudit boolean enableaudit
this enableaudit   enableaudit
public void addproducer connectioncontext context  producerinfo info  throws exception
destinationstatistics getproducers   increment
public void removeproducer connectioncontext context  producerinfo info  throws exception
destinationstatistics getproducers   decrement
public final memoryusage getmemoryusage
return memoryusage
public destinationstatistics getdestinationstatistics
return destinationstatistics
public activemqdestination getactivemqdestination
return destination
public final string getname
return getactivemqdestination   getphysicalname
public final messagestore getmessagestore
return store
public final boolean isactive
return destinationstatistics getconsumers   getcount      0
destinationstatistics getproducers   getcount      0
public int getmaxpagesize
return maxpagesize
public void setmaxpagesize int maxpagesize
this maxpagesize   maxpagesize
public boolean isusecache
return usecache
public void setusecache boolean usecache
this usecache   usecache
public int getminimummessagesize
return minimummessagesize
public void setminimummessagesize int minimummessagesize
this minimummessagesize   minimummessagesize
public boolean islazydispatch
return lazydispatch
public void setlazydispatch boolean lazydispatch
this lazydispatch   lazydispatch
protected long getdestinationsequenceid
return regionbroker getbrokersequenceid