/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq management
/**
* a time statistic implementation
*
* @version $revision: 1.2 $
*/
public class timestatisticimpl extends statisticimpl
private long count
private long maxtime
private long mintime
private long totaltime
private timestatisticimpl parent
public timestatisticimpl string name  string description
this name     description
public timestatisticimpl timestatisticimpl parent  string name  string description
this name  description
this parent   parent
public timestatisticimpl string name  string unit  string description
super name  unit  description
public synchronized void reset
super reset
count   0
maxtime   0
mintime   0
totaltime   0
public synchronized long getcount
return count
public synchronized void addtime long time
count
totaltime    time
if  time > maxtime
maxtime   time
if  time < mintime    mintime    0
mintime   time
updatesampletime
if  parent    null
parent addtime time
/**
* @return the maximum time of any step
*/
public long getmaxtime
return maxtime
/**
* @return the minimum time of any step
*/
public synchronized long getmintime
return mintime
/**
* @return the total time of all the steps added together
*/
public synchronized long gettotaltime
return totaltime
/**
* @return the average time calculated by dividing the
*         total time by the number of counts
*/
public synchronized double getaveragetime
if  count    0
return 0
double d   totaltime
return d   count
/**
* @return the average time calculated by dividing the
*         total time by the number of counts but excluding the
*         minimum and maximum times.
*/
public synchronized double getaveragetimeexcludingminmax
if  count <  2
return 0
double d   totaltime   mintime   maxtime
return d    count   2
/**
* @return the average number of steps per second
*/
public double getaveragepersecond
double d   1000
double averagetime   getaveragetime
if  averagetime    0
return 0
return d   averagetime
/**
* @return the average number of steps per second excluding the min & max values
*/
public double getaveragepersecondexcludingminmax
double d   1000
double average   getaveragetimeexcludingminmax
if  average    0
return 0
return d   average
public timestatisticimpl getparent
return parent
public void setparent timestatisticimpl parent
this parent   parent
protected synchronized void appendfielddescription stringbuffer buffer
buffer append
buffer append long tostring count
buffer append
buffer append long tostring maxtime
buffer append
buffer append long tostring mintime
buffer append
buffer append long tostring totaltime
buffer append
buffer append double tostring getaveragetime
buffer append
buffer append double tostring getaveragetimeexcludingminmax
buffer append
buffer append double tostring getaveragepersecond
buffer append
buffer append double tostring getaveragepersecondexcludingminmax
super appendfielddescription buffer