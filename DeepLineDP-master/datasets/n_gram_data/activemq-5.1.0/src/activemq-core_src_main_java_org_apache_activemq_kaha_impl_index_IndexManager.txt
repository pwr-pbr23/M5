/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq kaha impl index
import java io file
import java io ioexception
import java io randomaccessfile
import java nio channels filelock
import java util concurrent atomic atomiclong
import org apache activemq kaha impl datamanager
import org apache activemq util iohelper
import org apache commons logging log
import org apache commons logging logfactory
/**
* optimized store reader
*
* @version $revision: 1.1.1.1 $
*/
public final class indexmanager
public static final string name_prefix
private static final log log   logfactory getlog indexmanager class
private final string name
private file directory
private file file
private randomaccessfile indexfile
private storeindexreader reader
private storeindexwriter writer
private datamanager redolog
private string mode
private long length
private indexitem firstfree
private indexitem lastfree
private boolean dirty
private final atomiclong storesize
public indexmanager file directory  string name  string mode  datamanager redolog  atomiclong storesize  throws ioexception
this directory   directory
this name   name
this mode   mode
this redolog   redolog
this storesize storesize
initialize
public synchronized boolean isempty
return lastfree    null    length    0
public synchronized indexitem getindex long offset  throws ioexception
return reader readitem offset
public synchronized indexitem refreshindex indexitem item  throws ioexception
reader updateindexes item
return item
public synchronized void freeindex indexitem item  throws ioexception
item reset
item setactive false
if  lastfree    null
firstfree   item
lastfree   item
else
lastfree setnextitem item getoffset
writer updateindexes item
dirty   true
public synchronized void storeindex indexitem index  throws ioexception
writer storeitem index
dirty   true
public synchronized void updateindexes indexitem index  throws ioexception
try
writer updateindexes index
catch  throwable e
log error name      e
dirty   true
public synchronized void redo final redostoreindexitem redo  throws ioexception
writer redostoreitem redo
dirty   true
public synchronized indexitem createnewindex   throws ioexception
indexitem result   getnextfreeindex
if  result    null
// allocate one
result   new indexitem
result setoffset length
length    indexitem index_size
storesize addandget indexitem index_size
return result
public synchronized void close   throws ioexception
if  indexfile    null
indexfile close
indexfile   null
public synchronized void force   throws ioexception
if  indexfile    null    dirty
indexfile getfd   sync
dirty   false
public synchronized boolean delete   throws ioexception
firstfree   null
lastfree   null
if  indexfile    null
indexfile close
indexfile   null
return file delete
private synchronized indexitem getnextfreeindex   throws ioexception
indexitem result   null
if  firstfree    null
if  firstfree equals lastfree
result   firstfree
firstfree   null
lastfree   null
else
result   firstfree
firstfree   getindex firstfree getnextitem
if  firstfree    null
lastfree   null
result reset
return result
synchronized long getlength
return length
public final long size
return length
public synchronized void setlength long value
this length   value
storesize addandget length
public synchronized filelock getlock   throws ioexception
return indexfile getchannel   trylock
public string tostring
return     name_prefix   name
protected void initialize   throws ioexception
file   new file directory  name_prefix   iohelper tofilesystemsafename name
file getparentfile   mkdirs
indexfile   new randomaccessfile file  mode
reader   new storeindexreader indexfile
writer   new storeindexwriter indexfile  name  redolog
long offset   0
while   offset   indexitem index_size  <  indexfile length
indexitem index   reader readitem offset
if   index isactive
index reset
if  lastfree    null
lastfree setnextitem index getoffset
updateindexes lastfree
lastfree   index
else
lastfree   index
firstfree   index
offset    indexitem index_size
length   offset
storesize addandget length