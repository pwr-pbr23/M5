/**
*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
* http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq camel component
import java util set
import javax jms connection
import javax jms connectionfactory
import org apache activemq enhancedconnection
import org apache activemq advisory destinationevent
import org apache activemq advisory destinationlistener
import org apache activemq advisory destinationsource
import org apache activemq command activemqdestination
import org apache activemq command activemqqueue
import org apache camel camelcontext
import org apache camel camelcontextaware
import org apache camel endpoint
import org apache camel component jms jmsqueueendpoint
import org apache camel util objecthelper
import org apache commons logging log
import org apache commons logging logfactory
import org springframework beans factory disposablebean
import org springframework beans factory initializingbean
/**
* a helper bean which populates a {@link camelcontext} with activemq queue endpoints
*
* @version $revision: 1.1 $
*/
public class camelendpointloader implements initializingbean  disposablebean  camelcontextaware
private static final transient log log   logfactory getlog camelendpointloader class
private camelcontext camelcontext
private enhancedconnection connection
private connectionfactory connectionfactory
private activemqcomponent component
public camelendpointloader
public camelendpointloader camelcontext camelcontext
this camelcontext   camelcontext
public void afterpropertiesset   throws exception
objecthelper notnull camelcontext
if  connection    null
connection value   getconnectionfactory   createconnection
if  value instanceof enhancedconnection
connection    enhancedconnection  value
else
throw new illegalargumentexception     value
connection start
destinationsource source   connection getdestinationsource
source setdestinationlistener new destinationlistener
public void ondestinationevent destinationevent event
try
activemqdestination destination   event getdestination
if  destination instanceof activemqqueue
activemqqueue queue    activemqqueue  destination
if  event isaddoperation
addqueue queue
else
removequeue queue
catch  exception e
log warn     e  e
set<activemqqueue> queues   source getqueues
for  activemqqueue queue   queues
addqueue queue
public void destroy   throws exception
if  connection    null
connection close
connection   null
// properties
//-------------------------------------------------------------------------
public camelcontext getcamelcontext
return camelcontext
public void setcamelcontext camelcontext camelcontext
this camelcontext   camelcontext
public enhancedconnection getconnection
return connection
public connectionfactory getconnectionfactory
if  connectionfactory    null
connectionfactory   getcomponent   getconfiguration   createconnectionfactory
return connectionfactory
public void setconnectionfactory connectionfactory connectionfactory
this connectionfactory   connectionfactory
public activemqcomponent getcomponent
if  component    null
component   camelcontext getcomponent    activemqcomponent class
return component
public void setcomponent activemqcomponent component
this component   component
// implementation methods
//-------------------------------------------------------------------------
protected void addqueue activemqqueue queue  throws exception
string queueuri   getqueueuri queue
activemqcomponent jmscomponent   getcomponent
endpoint endpoint   new jmsqueueendpoint queueuri  jmscomponent  queue getphysicalname    jmscomponent getconfiguration
camelcontext addsingletonendpoint queueuri  endpoint
protected string getqueueuri activemqqueue queue
return     queue getphysicalname
protected void removequeue activemqqueue queue  throws exception
string queueuri   getqueueuri queue
camelcontext removesingletonendpoint queueuri