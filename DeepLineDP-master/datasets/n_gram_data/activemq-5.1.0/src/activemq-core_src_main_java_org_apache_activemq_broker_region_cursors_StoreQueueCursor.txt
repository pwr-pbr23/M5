/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker region cursors
import org apache activemq activemqmessageaudit
import org apache activemq broker broker
import org apache activemq broker region messagereference
import org apache activemq broker region queue
import org apache activemq command message
import org apache activemq kaha store
import org apache activemq usage systemusage
import org apache commons logging log
import org apache commons logging logfactory
/**
* store based cursor for queues
*
* @version $revision: 474985 $
*/
public class storequeuecursor extends abstractpendingmessagecursor
private static final log log   logfactory getlog storequeuecursor class
private broker broker
private int pendingcount
private queue queue
private pendingmessagecursor nonpersistent
private queuestoreprefetch persistent
private boolean started
private pendingmessagecursor currentcursor
/**
* construct
*
* @param queue
* @param tmpstore
*/
public storequeuecursor broker broker queue queue
this broker broker
this queue   queue
this persistent   new queuestoreprefetch queue
currentcursor   persistent
public synchronized void start   throws exception
started   true
super start
if  nonpersistent    null
if  broker getbrokerservice   ispersistent
nonpersistent   new filependingmessagecursor broker queue getname
else
nonpersistent   new vmpendingmessagecursor
nonpersistent setmaxbatchsize getmaxbatchsize
nonpersistent setsystemusage systemusage
nonpersistent setenableaudit isenableaudit
nonpersistent setmaxauditdepth getmaxauditdepth
nonpersistent setmaxproducerstoaudit getmaxproducerstoaudit
nonpersistent setmessageaudit getmessageaudit
nonpersistent start
persistent setmessageaudit getmessageaudit
persistent start
pendingcount   persistent size     nonpersistent size
public synchronized void stop   throws exception
started   false
super stop
if  nonpersistent    null
nonpersistent stop
nonpersistent gc
persistent stop
persistent gc
pendingcount   0
public synchronized void addmessagelast messagereference node  throws exception
if  node    null
message msg   node getmessage
if  started
pendingcount
if   msg ispersistent
nonpersistent addmessagelast node
if  msg ispersistent
persistent addmessagelast node
public synchronized void addmessagefirst messagereference node  throws exception
if  node    null
message msg   node getmessage
if  started
pendingcount
if   msg ispersistent
nonpersistent addmessagefirst node
if  msg ispersistent
persistent addmessagefirst node
public synchronized void clear
pendingcount   0
public synchronized boolean hasnext
boolean result   true   pendingcount > 0
if  result
try
currentcursor   getnextcursor
catch  exception e
log error    e
throw new runtimeexception e
result   currentcursor    null ? currentcursor hasnext     false
return result
public synchronized messagereference next
messagereference result   currentcursor    null ? currentcursor next     null
return result
public synchronized void remove
if  currentcursor    null
currentcursor remove
pendingcount
public synchronized void remove messagereference node
if   node ispersistent
nonpersistent remove node
else
persistent remove node
pendingcount
public synchronized void reset
nonpersistent reset
persistent reset
public synchronized int size
return pendingcount
public synchronized boolean isempty
return pendingcount <  0
/**
* informs the broker if the subscription needs to intervention to recover
* it's state e.g. durabletopicsubscriber may do
*
* @see org.apache.activemq.region.cursors.pendingmessagecursor
* @return true if recovery required
*/
public boolean isrecoveryrequired
return false
/**
* @return the nonpersistent cursor
*/
public pendingmessagecursor getnonpersistent
return this nonpersistent
/**
* @param nonpersistent cursor to set
*/
public void setnonpersistent pendingmessagecursor nonpersistent
this nonpersistent   nonpersistent
public void setmaxbatchsize int maxbatchsize
persistent setmaxbatchsize maxbatchsize
if  nonpersistent    null
nonpersistent setmaxbatchsize maxbatchsize
super setmaxbatchsize maxbatchsize
public void setmaxproducerstoaudit int maxproducerstoaudit
super setmaxproducerstoaudit maxproducerstoaudit
if  persistent    null
persistent setmaxproducerstoaudit maxproducerstoaudit
if  nonpersistent    null
nonpersistent setmaxproducerstoaudit maxproducerstoaudit
public void setmaxauditdepth int maxauditdepth
super setmaxauditdepth maxauditdepth
if  persistent    null
persistent setmaxauditdepth maxauditdepth
if  nonpersistent    null
nonpersistent setmaxauditdepth maxauditdepth
public void setenableaudit boolean enableaudit
super setenableaudit enableaudit
if  persistent    null
persistent setenableaudit enableaudit
if  nonpersistent    null
nonpersistent setenableaudit enableaudit
public void setusecache boolean usecache
super setusecache usecache
if  persistent    null
persistent setusecache usecache
if  nonpersistent    null
nonpersistent setusecache usecache
public synchronized void gc
if  persistent    null
persistent gc
if  nonpersistent    null
nonpersistent gc
public void setsystemusage systemusage usagemanager
super setsystemusage usagemanager
if  persistent    null
persistent setsystemusage usagemanager
if  nonpersistent    null
nonpersistent setsystemusage usagemanager
protected synchronized pendingmessagecursor getnextcursor   throws exception
if  currentcursor    null     currentcursor hasmessagesbufferedtodeliver
currentcursor   currentcursor    persistent ? nonpersistent   persistent
// sanity check
if  currentcursor isempty
currentcursor   currentcursor    persistent ? nonpersistent   persistent
return currentcursor