/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq plugin
import java util regex pattern
import org apache activemq broker broker
import org apache activemq broker brokerfilter
import org apache activemq broker connectioncontext
import org apache activemq broker region messagereference
import org apache activemq broker region subscription
import org apache activemq command activemqdestination
import org apache activemq command message
import org slf4j logger
import org slf4j loggerfactory
/**
* @author filip hanik
* @version 1.0
*/
public class discardingdlqbroker extends brokerfilter
public static logger log   loggerfactory getlogger discardingdlqbroker class
private boolean droptemporarytopics   true
private boolean droptemporaryqueues   true
private boolean dropall   true
private pattern destfilter
private int reportinterval   1000
private long dropcount   0
public discardingdlqbroker broker next
super next
@override
public void sendtodeadletterqueue connectioncontext ctx  messagereference msgref
subscription subscription
if  log istraceenabled
log trace      msgref    null ? msgref getmessage     null
boolean dropped   true
message msg   null
activemqdestination dest   null
string destname   null
msg   msgref getmessage
dest   msg getdestination
destname   dest getphysicalname
if  dest    null    destname    null
//do nothing, no need to forward it
skipmessage   msgref
else if  dropall
//do nothing
skipmessage   msgref
else if  droptemporarytopics    dest istemporary      dest istopic
//do nothing
skipmessage   msgref
else if  droptemporaryqueues    dest istemporary      dest isqueue
//do nothing
skipmessage   msgref
else if  destfilter  null    matches destname
//do nothing
skipmessage   msgref
else
dropped   false
next sendtodeadletterqueue ctx  msgref  subscription
if  dropped    getreportinterval  >0
if     dropcount %getreportinterval      0
log info   dropcount
public boolean matches string destname
for  int i 0  destfilter  null    i<destfilter length  i
if  destfilter  null    destfilter matcher destname  matches
return true
return false
private void skipmessage string prefix  messagereference msgref
if  log isdebugenabled
string lmsg     prefix      msgref  null?msgref getmessage   null
log debug lmsg
public void setdroptemporarytopics boolean droptemporarytopics
this droptemporarytopics   droptemporarytopics
public void setdroptemporaryqueues boolean droptemporaryqueues
this droptemporaryqueues   droptemporaryqueues
public void setdropall boolean dropall
this dropall   dropall
public void setdestfilter pattern destfilter
this destfilter   destfilter
public void setreportinterval int reportinterval
this reportinterval   reportinterval
public boolean isdroptemporarytopics
return droptemporarytopics
public boolean isdroptemporaryqueues
return droptemporaryqueues
public boolean isdropall
return dropall
public pattern getdestfilter
return destfilter
public int getreportinterval
return reportinterval