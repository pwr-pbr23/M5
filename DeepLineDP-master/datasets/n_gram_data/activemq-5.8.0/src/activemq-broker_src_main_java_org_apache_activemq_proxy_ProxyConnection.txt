/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq proxy
import java io ioexception
import java util concurrent atomic atomicboolean
import org apache activemq service
import org apache activemq command shutdowninfo
import org apache activemq command wireformatinfo
import org apache activemq transport defaulttransportlistener
import org apache activemq transport transport
import org apache activemq util ioexceptionsupport
import org apache activemq util servicestopper
import org slf4j logger
import org slf4j loggerfactory
class proxyconnection implements service
private static final logger log   loggerfactory getlogger proxyconnection class
private final transport localtransport
private final transport remotetransport
private atomicboolean shuttingdown   new atomicboolean false
private atomicboolean running   new atomicboolean false
public proxyconnection transport localtransport  transport remotetransport
this localtransport   localtransport
this remotetransport   remotetransport
public void onfailure ioexception e
if   shuttingdown get
log debug     e  e
try
stop
catch  exception ignore
public void start   throws exception
if   running compareandset false  true
return
this localtransport settransportlistener new defaulttransportlistener
public void oncommand object command
boolean shutdown   false
if  command getclass      shutdowninfo class
shuttingdown set true
shutdown   true
// skipping wireformat infos
if  command getclass      wireformatinfo class
return
try
remotetransport oneway command
if  shutdown
stop
catch  ioexception error
onfailure error
catch  exception error
onfailure ioexceptionsupport create error
public void onexception ioexception error
onfailure error
this remotetransport settransportlistener new defaulttransportlistener
public void oncommand object command
try
// skipping wireformat infos
if  command getclass      wireformatinfo class
return
localtransport oneway command
catch  ioexception error
onfailure error
public void onexception ioexception error
onfailure error
localtransport start
remotetransport start
public void stop   throws exception
if   running compareandset true  false
return
shuttingdown set true
servicestopper ss   new servicestopper
ss stop localtransport
ss stop remotetransport
ss throwfirstexception