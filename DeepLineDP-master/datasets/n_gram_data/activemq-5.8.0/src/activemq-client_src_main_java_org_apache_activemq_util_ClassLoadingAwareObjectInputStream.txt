/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq util
import java io ioexception
import java io inputstream
import java io objectinputstream
import java io objectstreamclass
import java lang reflect proxy
import java util hashmap
@suppresswarnings
public class classloadingawareobjectinputstream extends objectinputstream
private static final classloader fallback_class_loader
classloadingawareobjectinputstream class getclassloader
/**
* maps primitive type names to corresponding class objects.
*/
private static final hashmap<string  class> primclasses   new hashmap<string  class> 8  1 0f
private final classloader inloader
public classloadingawareobjectinputstream inputstream in  throws ioexception
super in
inloader   in getclass   getclassloader
protected class<?> resolveclass objectstreamclass classdesc  throws ioexception  classnotfoundexception
classloader cl   thread currentthread   getcontextclassloader
return load classdesc getname    cl  inloader
protected class<?> resolveproxyclass string interfaces  throws ioexception  classnotfoundexception
classloader cl   thread currentthread   getcontextclassloader
class cinterfaces   new class
for  int i   0  i < interfaces length  i
cinterfaces   load interfaces  cl
try
return proxy getproxyclass cl  cinterfaces
catch  illegalargumentexception e
try
return proxy getproxyclass inloader  cinterfaces
catch  illegalargumentexception e1
// ignore
try
return proxy getproxyclass fallback_class_loader  cinterfaces
catch  illegalargumentexception e2
// ignore
throw new classnotfoundexception null  e
private class<?> load string classname  classloader    cl  throws classnotfoundexception
for  classloader loader   cl
try
return class forname classname  false  loader
catch  classnotfoundexception e
// ignore
// fallback
final class<?> clazz    class<?>  primclasses get classname
if  clazz    null
return clazz
else
return class forname classname  false  fallback_class_loader
static
primclasses put    boolean class
primclasses put    byte class
primclasses put    char class
primclasses put    short class
primclasses put    int class
primclasses put    long class
primclasses put    float class
primclasses put    double class
primclasses put    void class