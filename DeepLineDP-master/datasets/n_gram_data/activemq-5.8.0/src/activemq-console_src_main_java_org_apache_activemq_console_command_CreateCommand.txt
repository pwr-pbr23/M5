/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq console command
import org w3c dom attr
import org w3c dom element
import org xml sax saxexception
import javax xml parsers documentbuilder
import javax xml parsers documentbuilderfactory
import javax xml parsers parserconfigurationexception
import javax xml transform
import javax xml transform dom domsource
import javax xml transform stream streamresult
import javax xml xpath xpath
import javax xml xpath xpathconstants
import javax xml xpath xpathexpressionexception
import javax xml xpath xpathfactory
import java io
import java nio bytebuffer
import java nio channels filechannel
import java util list
public class createcommand extends abstractcommand
protected final string helpfile   new string
protected final string default_target_activemq_conf         default activemq conf to create in the new broker instance
protected final string default_brokername_xpath         default broker name xpath to change the broker name
protected final string base_sub_dirs                default sub directories that will be created
protected final string broker_name_regex         use to replace broker name property holders
protected string amqconf         default conf if no conf is specified via   amqconf
// default files to create
protected string filewritemap
protected string brokername
protected file amqhome
protected file targetamqbase
@override
public string getname
return
@override
public string getonelinedescription
return
protected void runtask list<string> tokens  throws exception
context print
amqhome   new file system getproperty
for  string token   tokens
targetamqbase   new file token
brokername   targetamqbase getname
if  targetamqbase exists
bufferedreader console   new bufferedreader new inputstreamreader system in
string resp
while  true
context print     targetamqbase getcanonicalpath
resp   console readline
if  resp equalsignorecase       resp equalsignorecase
break
else if  resp equalsignorecase       resp equalsignorecase
return
context print     targetamqbase getcanonicalpath
targetamqbase mkdirs
createsubdirs targetamqbase  base_sub_dirs
writefilemapping targetamqbase  filewritemap
copyactivemqconf amqhome  targetamqbase  amqconf
copyconfdirectory new file amqhome      new file targetamqbase
/**
* handle the --amqconf options.
*
* @param token  - option token to handle
* @param tokens - succeeding command arguments
* @throws exception
*/
protected void handleoption string token  list<string> tokens  throws exception
if  token startswith
// if no amqconf specified, or next token is a new option
if  tokens isempty      tokens get 0  startswith
context printexception new illegalargumentexception
return
amqconf   tokens remove 0
else
// let super class handle unknown option
super handleoption token  tokens
protected void createsubdirs file target  string subdirs  throws ioexception
file subdirfile
for  string subdir   base_sub_dirs
subdirfile   new file target  subdir
context print     subdirfile getcanonicalpath
subdirfile mkdirs
protected void writefilemapping file targetbase  string filewritemapping  throws ioexception
for  string filewrite   filewritemapping
file dest   new file targetbase  resolveparam broker_name_regex  brokername  filewrite
context print     dest getcanonicalpath
writefile filewrite  dest
protected void copyactivemqconf file srcbase  file targetbase  string activemqconf  throws ioexception  parserconfigurationexception  saxexception  transformerexception  xpathexpressionexception
file src   new file srcbase  activemqconf
if   src exists
throw new filenotfoundexception     src getcanonicalpath
file dest   new file targetbase  default_target_activemq_conf
context print     src getcanonicalpath         dest getcanonicalpath
documentbuilder builder   documentbuilderfactory newinstance   newdocumentbuilder
element docelem   builder parse src  getdocumentelement
xpath xpath   xpathfactory newinstance   newxpath
attr brokernameattr    attr  xpath evaluate default_brokername_xpath  docelem  xpathconstants node
brokernameattr setvalue brokername
writetofile new domsource docelem   dest
protected void printhelp
context printhelp helpfile
// write the default files to create (i.e. script files)
private void writefile string typename  file dest  throws ioexception
string data
if  typename equals
data   winactivemqdata
data   resolveparam    amqhome getcanonicalpath   replaceall        data
data   resolveparam    targetamqbase getcanonicalpath   replaceall        data
else if  typename equals
data   getunixactivemqdata
data   resolveparam    amqhome getcanonicalpath   replaceall        data
data   resolveparam    targetamqbase getcanonicalpath   replaceall        data
else
throw new illegalstateexception     typename
bytebuffer buf   bytebuffer allocate data length
buf put data getbytes
buf flip
filechannel destinationchannel   new fileoutputstream dest  getchannel
destinationchannel write buf
destinationchannel close
// set file permissions available for java 6.0 only
dest setexecutable true
dest setreadable true
dest setwritable true
// utlity method to write an xml source to file
private void writetofile source src  file file  throws transformerexception
transformerfactory tfactory   transformerfactory newinstance
transformer filetransformer   tfactory newtransformer
result res   new streamresult file
filetransformer transform src  res
// utility method to copy one file to another
private void copyfile file from  file dest  throws ioexception
if   from exists
return
filechannel sourcechannel   new fileinputstream from  getchannel
filechannel destinationchannel   new fileoutputstream dest  getchannel
sourcechannel transferto 0  sourcechannel size    destinationchannel
sourcechannel close
destinationchannel close
private void copyconfdirectory file from  file dest  throws ioexception
if  from isdirectory
string files   from list
for  string file   files
file srcfile   new file from  file
if  srcfile isfile       srcfile getname   equals
file destfile   new file dest  file
context print     srcfile getcanonicalpath         destfile getcanonicalpath
copyfile srcfile  destfile
else
throw new ioexception from
// replace a property place holder (paramname) with the paramvalue
private string resolveparam string paramname  string paramvalue  string target
return target replaceall paramname  paramvalue
// embedded windows script data
private static final string winactivemqdata
$ activemq home
$ activemq base
%1
private string getunixactivemqdata
stringbuffer res   new stringbuffer
res append
res append  $0
res append  $0
res append
res append
res append  $prg
res append  $dirname_prg
res append  $prg
res append  $prg
res append  $ls
res append  $link
res append  $link
res append
res append  $prg   $link
res append
res append
res append  $prg
res append  $saveddir
res append  $activemq_base
res append
res append   xms256m  xmx1g
res append  $activemq_opts_memory  dorg apache activemq usededicatedtaskrunner true  djava util logging config file logging properties
res append
res append
res append  $
return res tostring