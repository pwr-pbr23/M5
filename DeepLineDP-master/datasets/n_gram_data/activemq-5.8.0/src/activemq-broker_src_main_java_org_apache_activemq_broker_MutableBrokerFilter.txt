/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker
import java net uri
import java util map
import java util set
import java util concurrent threadpoolexecutor
import java util concurrent atomic atomicreference
import org apache activemq broker region destination
import org apache activemq broker region messagereference
import org apache activemq broker region subscription
import org apache activemq command activemqdestination
import org apache activemq command brokerid
import org apache activemq command brokerinfo
import org apache activemq command connectioninfo
import org apache activemq command consumercontrol
import org apache activemq command consumerinfo
import org apache activemq command destinationinfo
import org apache activemq command message
import org apache activemq command messageack
import org apache activemq command messagedispatch
import org apache activemq command messagedispatchnotification
import org apache activemq command messagepull
import org apache activemq command producerinfo
import org apache activemq command removesubscriptioninfo
import org apache activemq command response
import org apache activemq command sessioninfo
import org apache activemq command transactionid
import org apache activemq store pliststore
import org apache activemq thread scheduler
import org apache activemq usage usage
/**
* like a brokerfilter but it allows you to switch the getnext().broker. this
* has more overhead than a brokerfilter since access to the getnext().broker
* has to synchronized since it is mutable
*
*
*/
public class mutablebrokerfilter implements broker
protected atomicreference<broker> next   new atomicreference<broker>
public mutablebrokerfilter broker next
this next set next
public broker getadaptor class type
if  type isinstance this
return this
return next get   getadaptor type
public broker getnext
return next get
public void setnext broker next
this next set next
public map<activemqdestination  destination> getdestinationmap
return getnext   getdestinationmap
public set getdestinations activemqdestination destination
return getnext   getdestinations destination
public void acknowledge consumerbrokerexchange consumerexchange  messageack ack  throws exception
getnext   acknowledge consumerexchange  ack
public void addconnection connectioncontext context  connectioninfo info  throws exception
getnext   addconnection context  info
public subscription addconsumer connectioncontext context  consumerinfo info  throws exception
return getnext   addconsumer context  info
public void addproducer connectioncontext context  producerinfo info  throws exception
getnext   addproducer context  info
public void committransaction connectioncontext context  transactionid xid  boolean onephase  throws exception
getnext   committransaction context  xid  onephase
public void removesubscription connectioncontext context  removesubscriptioninfo info  throws exception
getnext   removesubscription context  info
public transactionid getpreparedtransactions connectioncontext context  throws exception
return getnext   getpreparedtransactions context
public int preparetransaction connectioncontext context  transactionid xid  throws exception
return getnext   preparetransaction context  xid
public void removeconnection connectioncontext context  connectioninfo info  throwable error  throws exception
getnext   removeconnection context  info  error
public void removeconsumer connectioncontext context  consumerinfo info  throws exception
getnext   removeconsumer context  info
public void removeproducer connectioncontext context  producerinfo info  throws exception
getnext   removeproducer context  info
public void rollbacktransaction connectioncontext context  transactionid xid  throws exception
getnext   rollbacktransaction context  xid
public void send producerbrokerexchange producerexchange  message messagesend  throws exception
getnext   send producerexchange  messagesend
public void begintransaction connectioncontext context  transactionid xid  throws exception
getnext   begintransaction context  xid
public void forgettransaction connectioncontext context  transactionid transactionid  throws exception
getnext   forgettransaction context  transactionid
public connection getclients   throws exception
return getnext   getclients
public destination adddestination connectioncontext context  activemqdestination destination boolean createiftemporary  throws exception
return getnext   adddestination context  destination createiftemporary
public void removedestination connectioncontext context  activemqdestination destination  long timeout  throws exception
getnext   removedestination context  destination  timeout
public activemqdestination getdestinations   throws exception
return getnext   getdestinations
public void start   throws exception
getnext   start
public void stop   throws exception
getnext   stop
public void addsession connectioncontext context  sessioninfo info  throws exception
getnext   addsession context  info
public void removesession connectioncontext context  sessioninfo info  throws exception
getnext   removesession context  info
public brokerid getbrokerid
return getnext   getbrokerid
public string getbrokername
return getnext   getbrokername
public void gc
getnext   gc
public void addbroker connection connection  brokerinfo info
getnext   addbroker connection  info
public void removebroker connection connection  brokerinfo info
getnext   removebroker connection  info
public brokerinfo getpeerbrokerinfos
return getnext   getpeerbrokerinfos
public void preprocessdispatch messagedispatch messagedispatch
getnext   preprocessdispatch messagedispatch
public void postprocessdispatch messagedispatch messagedispatch
getnext   postprocessdispatch messagedispatch
public void processdispatchnotification messagedispatchnotification messagedispatchnotification  throws exception
getnext   processdispatchnotification messagedispatchnotification
public boolean isstopped
return getnext   isstopped
public set<activemqdestination> getdurabledestinations
return getnext   getdurabledestinations
public void adddestinationinfo connectioncontext context  destinationinfo info  throws exception
getnext   adddestinationinfo context  info
public void removedestinationinfo connectioncontext context  destinationinfo info  throws exception
getnext   removedestinationinfo context  info
public boolean isfaulttolerantconfiguration
return getnext   isfaulttolerantconfiguration
public connectioncontext getadminconnectioncontext
return getnext   getadminconnectioncontext
public void setadminconnectioncontext connectioncontext adminconnectioncontext
getnext   setadminconnectioncontext adminconnectioncontext
public response messagepull connectioncontext context  messagepull pull  throws exception
return getnext   messagepull context  pull
public pliststore gettempdatastore
return getnext   gettempdatastore
public uri getvmconnectoruri
return getnext   getvmconnectoruri
public void brokerservicestarted
getnext   brokerservicestarted
public brokerservice getbrokerservice
return getnext   getbrokerservice
public boolean isexpired messagereference messagereference
return getnext   isexpired messagereference
public void messageexpired connectioncontext context  messagereference message  subscription subscription
getnext   messageexpired context  message  subscription
public void sendtodeadletterqueue connectioncontext context  messagereference messagereference
subscription subscription
getnext   sendtodeadletterqueue context  messagereference  subscription
public broker getroot
return getnext   getroot
public long getbrokersequenceid
return getnext   getbrokersequenceid
public void fastproducer connectioncontext context producerinfo producerinfo activemqdestination destination
getnext   fastproducer context  producerinfo  destination
public void isfull connectioncontext context destination destination  usage usage
getnext   isfull context destination  usage
public void messageconsumed connectioncontext context messagereference messagereference
getnext   messageconsumed context  messagereference
public void messagedelivered connectioncontext context messagereference messagereference
getnext   messagedelivered context  messagereference
public void messagediscarded connectioncontext context  subscription sub  messagereference messagereference
getnext   messagediscarded context  sub  messagereference
public void slowconsumer connectioncontext context  destination dest  subscription subs
getnext   slowconsumer context  dest subs
public void nowmasterbroker
getnext   nowmasterbroker
public void processconsumercontrol consumerbrokerexchange consumerexchange
consumercontrol control
getnext   processconsumercontrol consumerexchange  control
public scheduler getscheduler
return getnext   getscheduler
public threadpoolexecutor getexecutor
return getnext   getexecutor
public void networkbridgestarted brokerinfo brokerinfo  boolean createdbyduplex  string remoteip
getnext   networkbridgestarted brokerinfo  createdbyduplex  remoteip
public void networkbridgestopped brokerinfo brokerinfo
getnext   networkbridgestopped brokerinfo