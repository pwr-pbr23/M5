/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq store kahadb
import java io file
import java io filefilter
import java io ioexception
import java nio charset charset
import java util hashmap
import java util hashset
import java util linkedlist
import java util list
import java util map
import java util set
import org apache activemq broker brokerservice
import org apache activemq broker brokerserviceaware
import org apache activemq broker connectioncontext
import org apache activemq command activemqdestination
import org apache activemq command activemqqueue
import org apache activemq command activemqtopic
import org apache activemq command localtransactionid
import org apache activemq command producerid
import org apache activemq command transactionid
import org apache activemq command xatransactionid
import org apache activemq filter anydestination
import org apache activemq filter destinationmap
import org apache activemq protobuf buffer
import org apache activemq store messagestore
import org apache activemq store persistenceadapter
import org apache activemq store topicmessagestore
import org apache activemq store transactionstore
import org apache activemq store kahadb data kahatransactioninfo
import org apache activemq store kahadb data kahaxatransactionid
import org apache activemq usage systemusage
import org apache activemq util iohelper
import org apache activemq util introspectionsupport
import org slf4j logger
import org slf4j loggerfactory
/**
* an implementation of {@link org.apache.activemq.store.persistenceadapter}  that supports
* distribution of destinations across multiple kahadb persistence adapters
*
* @org.apache.xbean.xbean element="mkahadb"
*/
public class multikahadbpersistenceadapter extends destinationmap implements persistenceadapter  brokerserviceaware
static final logger log   loggerfactory getlogger multikahadbpersistenceadapter class
final static activemqdestination matchall   new anydestination new activemqdestination new activemqqueue     new activemqtopic
final int local_format_id_magic   integer valueof system getproperty
brokerservice brokerservice
list<kahadbpersistenceadapter> adapters   new linkedlist<kahadbpersistenceadapter>
private file directory   new file iohelper getdefaultdatadirectory     file separator
multikahadbtransactionstore transactionstore   new multikahadbtransactionstore this
// all local store transactions are xa, 2pc if more than one adapter involved
transactionidtransformer transactionidtransformer   new transactionidtransformer
@override
public kahatransactioninfo transform transactionid txid
if  txid    null
return null
kahatransactioninfo rc   new kahatransactioninfo
kahaxatransactionid kahatxid   new kahaxatransactionid
if  txid islocaltransaction
localtransactionid t    localtransactionid  txid
kahatxid setbranchqualifier new buffer long tostring t getvalue    getbytes charset forname
kahatxid setglobaltransactionid new buffer t getconnectionid   getvalue   getbytes charset forname
kahatxid setformatid local_format_id_magic
else
xatransactionid t    xatransactionid  txid
kahatxid setbranchqualifier new buffer t getbranchqualifier
kahatxid setglobaltransactionid new buffer t getglobaltransactionid
kahatxid setformatid t getformatid
rc setxatransactionid kahatxid
return rc
/**
* sets the  filteredkahadbpersistenceadapter entries
*
* @org.apache.xbean.elementtype class="org.apache.activemq.store.kahadb.filteredkahadbpersistenceadapter"
*/
@suppresswarnings
public void setfilteredpersistenceadapters list entries
for  object entry   entries
filteredkahadbpersistenceadapter filteredadapter    filteredkahadbpersistenceadapter  entry
kahadbpersistenceadapter adapter   filteredadapter getpersistenceadapter
if  filteredadapter getdestination      null
filteredadapter setdestination matchall
if  filteredadapter isperdestination
configuredirectory adapter  null
// per destination adapters will be created on demand or during recovery
continue
else
configuredirectory adapter  namefromdestinationfilter filteredadapter getdestination
configureadapter adapter
adapters add adapter
super setentries entries
private string namefromdestinationfilter activemqdestination destination
if  destination getqualifiedname   length   > iohelper getmaxfilenamelength
log warn
return iohelper tofilesystemsafename destination getqualifiedname
public boolean islocalxid transactionid xid
return xid instanceof xatransactionid
xatransactionid xid  getformatid      local_format_id_magic
@override
public void begintransaction connectioncontext context  throws ioexception
throw new illegalstateexception
@override
public void checkpoint final boolean sync  throws ioexception
for  persistenceadapter persistenceadapter   adapters
persistenceadapter checkpoint sync
@override
public void committransaction connectioncontext context  throws ioexception
throw new illegalstateexception
@override
public messagestore createqueuemessagestore activemqqueue destination  throws ioexception
persistenceadapter persistenceadapter   getmatchingpersistenceadapter destination
return transactionstore proxy persistenceadapter createtransactionstore    persistenceadapter createqueuemessagestore destination
private persistenceadapter getmatchingpersistenceadapter activemqdestination destination
object result   this choosevalue destination
if  result    null
throw new runtimeexception     destination       adapters
filteredkahadbpersistenceadapter filteredadapter    filteredkahadbpersistenceadapter  result
if  filteredadapter getdestination      matchall    filteredadapter isperdestination
result   addadapter filteredadapter  destination
startadapter   filteredkahadbpersistenceadapter  result  getpersistenceadapter    destination getqualifiedname
if  log istraceenabled
log info     destination        result
return   filteredkahadbpersistenceadapter  result  getpersistenceadapter
private void startadapter kahadbpersistenceadapter kahadbpersistenceadapter  string destination
try
kahadbpersistenceadapter start
catch  exception e
runtimeexception detail   new runtimeexception     destination       adapters  e
log error detail tostring    e
throw detail
private void stopadapter kahadbpersistenceadapter kahadbpersistenceadapter  string destination
try
kahadbpersistenceadapter stop
catch  exception e
runtimeexception detail   new runtimeexception     destination       adapters  e
log error detail tostring    e
throw detail
@override
public topicmessagestore createtopicmessagestore activemqtopic destination  throws ioexception
persistenceadapter persistenceadapter   getmatchingpersistenceadapter destination
return transactionstore proxy persistenceadapter createtransactionstore    persistenceadapter createtopicmessagestore destination
@override
public transactionstore createtransactionstore   throws ioexception
return transactionstore
@override
public void deleteallmessages   throws ioexception
for  persistenceadapter persistenceadapter   adapters
persistenceadapter deleteallmessages
transactionstore deleteallmessages
iohelper deletechildren getdirectory
@override
public set<activemqdestination> getdestinations
set<activemqdestination> results   new hashset<activemqdestination>
for  persistenceadapter persistenceadapter   adapters
results addall persistenceadapter getdestinations
return results
@override
public long getlastmessagebrokersequenceid   throws ioexception
long maxid    1
for  persistenceadapter persistenceadapter   adapters
maxid   math max maxid  persistenceadapter getlastmessagebrokersequenceid
return maxid
@override
public long getlastproducersequenceid producerid id  throws ioexception
long maxid    1
for  persistenceadapter persistenceadapter   adapters
maxid   math max maxid  persistenceadapter getlastproducersequenceid id
return maxid
@override
public void removequeuemessagestore activemqqueue destination
persistenceadapter adapter   getmatchingpersistenceadapter destination
if  adapter instanceof kahadbpersistenceadapter
adapter removequeuemessagestore destination
removemessagestore  kahadbpersistenceadapter adapter  destination
removeall destination
@override
public void removetopicmessagestore activemqtopic destination
persistenceadapter adapter   getmatchingpersistenceadapter destination
if  adapter instanceof kahadbpersistenceadapter
adapter removetopicmessagestore destination
removemessagestore  kahadbpersistenceadapter adapter  destination
removeall destination
private void removemessagestore kahadbpersistenceadapter adapter  activemqdestination destination
if  adapter getdestinations   isempty
stopadapter adapter  destination tostring
file adapterdir   adapter getdirectory
if  adapterdir    null
if  iohelper deletefile adapterdir
if  log istraceenabled
log info     destination
else
if  log istraceenabled
log info     destination
@override
public void rollbacktransaction connectioncontext context  throws ioexception
throw new illegalstateexception
@override
public void setbrokername string brokername
for  persistenceadapter persistenceadapter   adapters
persistenceadapter setbrokername brokername
@override
public void setusagemanager systemusage usagemanager
for  persistenceadapter persistenceadapter   adapters
persistenceadapter setusagemanager usagemanager
@override
public long size
long size   0
for  persistenceadapter persistenceadapter   adapters
size    persistenceadapter size
return size
@override
public void start   throws exception
object result   this choosevalue matchall
if  result    null
filteredkahadbpersistenceadapter filteredadapter    filteredkahadbpersistenceadapter  result
if  filteredadapter getdestination      matchall    filteredadapter isperdestination
findandregisterexistingadapters filteredadapter
for  persistenceadapter persistenceadapter   adapters
persistenceadapter start
private void findandregisterexistingadapters filteredkahadbpersistenceadapter template
filefilter destinationnames   new filefilter
@override
public boolean accept file file
return file getname   startswith       file getname   startswith
file candidates   template getpersistenceadapter   getdirectory   listfiles destinationnames
if  candidates    null
for  file candidate   candidates
registerexistingadapter template  candidate
private void registerexistingadapter filteredkahadbpersistenceadapter filteredadapter  file candidate
kahadbpersistenceadapter adapter   adapterfromtemplate filteredadapter getpersistenceadapter    candidate getname
startadapter adapter  candidate getname
set<activemqdestination> destinations   adapter getdestinations
if  destinations size      0
registeradapter adapter  destinations toarray new activemqdestination
else
stopadapter adapter  candidate getname
private filteredkahadbpersistenceadapter addadapter filteredkahadbpersistenceadapter filteredadapter  activemqdestination destination
kahadbpersistenceadapter adapter   adapterfromtemplate filteredadapter getpersistenceadapter    namefromdestinationfilter destination
return registeradapter adapter  destination
private kahadbpersistenceadapter adapterfromtemplate kahadbpersistenceadapter template  string destinationname
kahadbpersistenceadapter adapter   kahadbfromtemplate template
configureadapter adapter
configuredirectory adapter  destinationname
return adapter
private void configuredirectory kahadbpersistenceadapter adapter  string filename
file directory   null
if  messagedatabase default_directory equals adapter getdirectory
// not set so inherit from mkahadb
directory   getdirectory
else
directory   adapter getdirectory
if  filename    null
directory   new file directory  filename
adapter setdirectory directory
private filteredkahadbpersistenceadapter registeradapter kahadbpersistenceadapter adapter  activemqdestination destination
adapters add adapter
filteredkahadbpersistenceadapter result   new filteredkahadbpersistenceadapter destination  adapter
put destination  result
return result
private void configureadapter kahadbpersistenceadapter adapter
// need a per store factory that will put the store in the branch qualifier to disiambiguate xid mbeans
adapter getstore   settransactionidtransformer transactionidtransformer
adapter setbrokerservice getbrokerservice
private kahadbpersistenceadapter kahadbfromtemplate kahadbpersistenceadapter template
map<string  object> configuration   new hashmap<string  object>
introspectionsupport getproperties template  configuration  null
kahadbpersistenceadapter adapter   new kahadbpersistenceadapter
introspectionsupport setproperties adapter  configuration
return adapter
@override
public void stop   throws exception
for  persistenceadapter persistenceadapter   adapters
persistenceadapter stop
@override
public file getdirectory
return this directory
@override
public void setdirectory file directory
this directory   directory
@override
public void setbrokerservice brokerservice brokerservice
for  kahadbpersistenceadapter persistenceadapter   adapters
persistenceadapter setbrokerservice brokerservice
this brokerservice   brokerservice
public brokerservice getbrokerservice
return brokerservice
public void settransactionstore multikahadbtransactionstore transactionstore
this transactionstore   transactionstore
/**
* set the max file length of the transaction journal
* when set using xbean, values of the form "20 mb", "1024kb", and "1g" can
* be used
*
* @org.apache.xbean.property propertyeditor="org.apache.activemq.util.memoryintpropertyeditor"
*/
public void setjournalmaxfilelength int maxfilelength
transactionstore setjournalmaxfilelength maxfilelength
public int getjournalmaxfilelength
return transactionstore getjournalmaxfilelength
/**
* set the max write batch size of  the transaction journal
* when set using xbean, values of the form "20 mb", "1024kb", and "1g" can
* be used
*
* @org.apache.xbean.property propertyeditor="org.apache.activemq.util.memoryintpropertyeditor"
*/
public void setjournalwritebatchsize int journalwritebatchsize
transactionstore setjournalmaxwritebatchsize journalwritebatchsize
public int getjournalwritebatchsize
return transactionstore getjournalmaxwritebatchsize
@override
public string tostring
string path   getdirectory      null ? getdirectory   getabsolutepath
return     path       adapters