/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker region
import java io ioexception
import java util list
import java util set
import org apache activemq broker broker
import org apache activemq broker connectioncontext
import org apache activemq broker producerbrokerexchange
import org apache activemq broker region policy deadletterstrategy
import org apache activemq broker region policy slowconsumerstrategy
import org apache activemq command activemqdestination
import org apache activemq command message
import org apache activemq command messageack
import org apache activemq command messagedispatchnotification
import org apache activemq command producerinfo
import org apache activemq store messagestore
import org apache activemq usage memoryusage
import org apache activemq usage usage
/**
*
*
*/
public class destinationfilter implements destination
private final destination next
public destinationfilter destination next
this next   next
public void acknowledge connectioncontext context  subscription sub  messageack ack  messagereference node  throws ioexception
next acknowledge context  sub  ack  node
public void addsubscription connectioncontext context  subscription sub  throws exception
next addsubscription context  sub
public message browse
return next browse
public void dispose connectioncontext context  throws ioexception
next dispose context
public boolean isdisposed
return next isdisposed
public void gc
next gc
public void markforgc long timestamp
next markforgc timestamp
public boolean cangc
return next cangc
public long getinactivetimoutbeforegc
return next getinactivetimoutbeforegc
public activemqdestination getactivemqdestination
return next getactivemqdestination
public deadletterstrategy getdeadletterstrategy
return next getdeadletterstrategy
public destinationstatistics getdestinationstatistics
return next getdestinationstatistics
public string getname
return next getname
public memoryusage getmemoryusage
return next getmemoryusage
@override
public void setmemoryusage memoryusage memoryusage
next setmemoryusage memoryusage
public void removesubscription connectioncontext context  subscription sub  long lastdeliveredsequenceid  throws exception
next removesubscription context  sub  lastdeliveredsequenceid
public void send producerbrokerexchange context  message messagesend  throws exception
next send context  messagesend
public void start   throws exception
next start
public void stop   throws exception
next stop
public list<subscription> getconsumers
return next getconsumers
/**
* sends a message to the given destination which may be a wildcard
*
* @param context broker context
* @param message message to send
* @param destination possibly wildcard destination to send the message to
* @throws exception on error
*/
protected void send producerbrokerexchange context  message message  activemqdestination destination  throws exception
broker broker   context getconnectioncontext   getbroker
set<destination> destinations   broker getdestinations destination
for  destination dest   destinations
dest send context  message copy
public messagestore getmessagestore
return next getmessagestore
public boolean isproducerflowcontrol
return next isproducerflowcontrol
public void setproducerflowcontrol boolean value
next setproducerflowcontrol value
public boolean isalwaysretroactive
return next isalwaysretroactive
public void setalwaysretroactive boolean value
next setalwaysretroactive value
public void setblockedproducerwarninginterval long blockedproducerwarninginterval
next setblockedproducerwarninginterval blockedproducerwarninginterval
public long getblockedproducerwarninginterval
return next getblockedproducerwarninginterval
public void addproducer connectioncontext context  producerinfo info  throws exception
next addproducer context  info
public void removeproducer connectioncontext context  producerinfo info  throws exception
next removeproducer context  info
public int getmaxauditdepth
return next getmaxauditdepth
public int getmaxproducerstoaudit
return next getmaxproducerstoaudit
public boolean isenableaudit
return next isenableaudit
public void setenableaudit boolean enableaudit
next setenableaudit enableaudit
public void setmaxauditdepth int maxauditdepth
next setmaxauditdepth maxauditdepth
public void setmaxproducerstoaudit int maxproducerstoaudit
next setmaxproducerstoaudit maxproducerstoaudit
public boolean isactive
return next isactive
public int getmaxpagesize
return next getmaxpagesize
public void setmaxpagesize int maxpagesize
next setmaxpagesize maxpagesize
public boolean isusecache
return next isusecache
public void setusecache boolean usecache
next setusecache usecache
public int getminimummessagesize
return next getminimummessagesize
public void setminimummessagesize int minimummessagesize
next setminimummessagesize minimummessagesize
public void wakeup
next wakeup
public boolean islazydispatch
return next islazydispatch
public void setlazydispatch boolean value
next setlazydispatch value
public void messageexpired connectioncontext context  prefetchsubscription prefetchsubscription  messagereference node
next messageexpired context  prefetchsubscription  node
public boolean iterate
return next iterate
public void fastproducer connectioncontext context  producerinfo producerinfo
next fastproducer context  producerinfo
public void isfull connectioncontext context  usage<?> usage
next isfull context  usage
public void messageconsumed connectioncontext context  messagereference messagereference
next messageconsumed context  messagereference
public void messagedelivered connectioncontext context  messagereference messagereference
next messagedelivered context  messagereference
public void messagediscarded connectioncontext context  subscription sub  messagereference messagereference
next messagediscarded context  sub  messagereference
public void slowconsumer connectioncontext context  subscription subs
next slowconsumer context  subs
public void messageexpired connectioncontext context  subscription subs  messagereference node
next messageexpired context  subs  node
public int getmaxbrowsepagesize
return next getmaxbrowsepagesize
public void setmaxbrowsepagesize int maxpagesize
next setmaxbrowsepagesize maxpagesize
public void processdispatchnotification messagedispatchnotification messagedispatchnotification  throws exception
next processdispatchnotification messagedispatchnotification
public int getcursormemoryhighwatermark
return next getcursormemoryhighwatermark
public void setcursormemoryhighwatermark int cursormemoryhighwatermark
next setcursormemoryhighwatermark cursormemoryhighwatermark
public boolean isprioritizedmessages
return next isprioritizedmessages
public slowconsumerstrategy getslowconsumerstrategy
return next getslowconsumerstrategy
public boolean isdooptimzemessagestorage
return next isdooptimzemessagestorage
public void setdooptimzemessagestorage boolean dooptimzemessagestorage
next setdooptimzemessagestorage dooptimzemessagestorage
@override
public void clearpendingmessages
next clearpendingmessages