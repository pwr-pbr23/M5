/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq transaction
import java io ioexception
import javax transaction xa xaexception
import org apache activemq broker connectioncontext
import org apache activemq command localtransactionid
import org apache activemq command transactionid
import org apache activemq store transactionstore
import org slf4j logger
import org slf4j loggerfactory
/**
*
*/
public class localtransaction extends transaction
private static final logger log   loggerfactory getlogger localtransaction class
private final transactionstore transactionstore
private final localtransactionid xid
private final connectioncontext context
public localtransaction transactionstore transactionstore  localtransactionid xid  connectioncontext context
this transactionstore   transactionstore
this xid   xid
this context   context
@override
public void commit boolean onephase  throws xaexception  ioexception
if  log isdebugenabled
log debug      xid
size
// get ready for commit.
try
preprepare
catch  xaexception e
throw e
catch  throwable e
log warn    e
rollback
// let them know we rolled back.
xaexception xae   new xaexception
xae errorcode   xaexception xa_rbother
xae initcause e
throw xae
setstate transaction finished_state
context gettransactions   remove xid
// sync on transaction store to avoid out of order messages in the cursor
// https://issues.apache.org/activemq/browse/amq-2594
try
transactionstore commit gettransactionid    false precommittask  postcommittask
this waitpostcommitdone postcommittask
catch  throwable t
log warn    t
rollback
xaexception xae   new xaexception
xae errorcode   xaexception xa_rbother
xae initcause t
throw xae
@override
public void rollback   throws xaexception  ioexception
if  log isdebugenabled
log debug      xid
size
setstate transaction finished_state
context gettransactions   remove xid
// sync on transaction store to avoid out of order messages in the cursor
// https://issues.apache.org/activemq/browse/amq-2594
synchronized  transactionstore
transactionstore rollback gettransactionid
try
fireafterrollback
catch  throwable e
log warn    e
xaexception xae   new xaexception
xae errorcode   xaexception xaer_rmerr
xae initcause e
throw xae
@override
public int prepare   throws xaexception
xaexception xae   new xaexception
xae errorcode   xaexception xaer_rmerr
throw xae
@override
public transactionid gettransactionid
return xid
@override
public logger getlog
return log