/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq osgi
import org apache activemq broker brokerservice
import org apache activemq spring utils
import org apache xbean spring context resourcexmlapplicationcontext
import org osgi framework bundlecontext
import org osgi service cm configurationexception
import org osgi service cm managedservicefactory
import org slf4j logger
import org slf4j loggerfactory
import org springframework beans factory xml xmlbeandefinitionreader
import org springframework context configurableapplicationcontext
import org springframework context support classpathxmlapplicationcontext
import org springframework context support propertysourcesplaceholderconfigurer
import org springframework core io resource
import java util
public class activemqservicefactory implements managedservicefactory
private static final logger log   loggerfactory getlogger activemqservicefactory class
bundlecontext bundlecontext
hashmap<string  brokerservice> brokers   new hashmap<string  brokerservice>
@override
public string getname
return
@override
synchronized public void updated string pid  dictionary properties  throws configurationexception
// first stop currently running broker (if any)
deleted pid
string config    string properties get
if  config    null
throw new configurationexception
string name    string properties get
if  name    null
throw new configurationexception
log info     name
try
thread currentthread   setcontextclassloader brokerservice class getclassloader
resource resource   utils resourcefromstring config
resourcexmlapplicationcontext ctx   new resourcexmlapplicationcontext resource  collections empty_list  null  collections empty_list  false
protected void initbeandefinitionreader xmlbeandefinitionreader reader
reader setvalidating false
// handle properties in configuration
propertysourcesplaceholderconfigurer configurator
new propertysourcesplaceholderconfigurer
//convert dictionary to properties. is there a better way?
properties props   new properties
enumeration elements   properties keys
while  elements hasmoreelements
object key   elements nextelement
props put key  properties get key
configurator setproperties props
configurator setignoreunresolvableplaceholders true
ctx addbeanfactorypostprocessor configurator
ctx refresh
// start the broker
brokerservice broker   ctx getbean brokerservice class
if  broker    null
throw new configurationexception null
//todo deal with multiple brokers
broker start
broker waituntilstarted
brokers put pid  broker
catch  exception e
throw new configurationexception null     e
@override
synchronized public void deleted string pid
brokerservice broker   brokers get pid
if  broker    null
return
try
log info     pid
broker stop
broker waituntilstopped
catch  exception e
log error    e
synchronized public void destroy
for  string broker  brokers keyset
deleted broker
public bundlecontext getbundlecontext
return bundlecontext
public void setbundlecontext bundlecontext bundlecontext
this bundlecontext   bundlecontext