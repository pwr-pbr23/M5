/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq web
import java util linkedlist
import javax jms connection
import javax jms connectionfactory
import javax jms jmsexception
import javax jms session
import org apache activemq activemqsession
import org slf4j logger
import org slf4j loggerfactory
/**
* a simple pool of jms session objects intended for use by queue browsers.
*/
public class sessionpool
private static final logger log   loggerfactory getlogger sessionpool class
private connectionfactory connectionfactory
private connection connection
private linkedlist<session> sessions   new linkedlist<session>
public connection getconnection   throws jmsexception
if  checkconnection
return connection
synchronized  this
connection   getconnectionfactory   createconnection
connection start
return connection
private boolean checkconnection
if  connection    null
return false
try
connection getmetadata
return true
catch  jmsexception e
return false
public void setconnection connection connection
this connection   connection
public connectionfactory getconnectionfactory
if  connectionfactory    null
throw new illegalstateexception
return connectionfactory
public void setconnectionfactory connectionfactory connectionfactory
this connectionfactory   connectionfactory
public session borrowsession   throws jmsexception
session answer   null
synchronized  sessions
if  sessions isempty
log trace
answer   createsession
else
log trace
answer   sessions removelast
return answer
public void returnsession session session
if  session    null       activemqsession  session  isclosed
synchronized  sessions
log trace
sessions add session
else
log debug
protected session createsession   throws jmsexception
return getconnection   createsession false  session auto_acknowledge