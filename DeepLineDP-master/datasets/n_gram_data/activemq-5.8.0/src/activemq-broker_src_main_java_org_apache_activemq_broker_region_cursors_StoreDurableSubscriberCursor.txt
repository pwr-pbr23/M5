/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker region cursors
import java util collections
import java util hashmap
import java util list
import java util map
import java util concurrent copyonwritearraylist
import org apache activemq advisory advisorysupport
import org apache activemq broker broker
import org apache activemq broker connectioncontext
import org apache activemq broker region destination
import org apache activemq broker region durabletopicsubscription
import org apache activemq broker region messagereference
import org apache activemq broker region topic
import org apache activemq command message
import org apache activemq usage systemusage
import org slf4j logger
import org slf4j loggerfactory
/**
* persist pending messages pending message (messages awaiting dispatch to a
* consumer) cursor
*/
public class storedurablesubscribercursor extends abstractpendingmessagecursor
private static final logger log   loggerfactory getlogger storedurablesubscribercursor class
private final string clientid
private final string subscribername
private final map<destination  topicstoreprefetch> topics   new hashmap<destination  topicstoreprefetch>
private final list<pendingmessagecursor> storeprefetches   new copyonwritearraylist<pendingmessagecursor>
private final pendingmessagecursor nonpersistent
private pendingmessagecursor currentcursor
private final durabletopicsubscription subscription
private boolean immediateprioritydispatch   true
/**
* @param broker broker for this cursor
* @param clientid clientid for this cursor
* @param subscribername subscriber name for this cursor
* @param maxbatchsize currently ignored
* @param subscription  subscription for this cursor
*/
public storedurablesubscribercursor broker broker string clientid  string subscribername int maxbatchsize  durabletopicsubscription subscription
super abstractpendingmessagecursor isprioritizedmessagesubscriber broker subscription
this subscription subscription
this clientid   clientid
this subscribername   subscribername
if  broker getbrokerservice   ispersistent
this nonpersistent   new filependingmessagecursor broker clientid   subscribername this prioritizedmessages
else
this nonpersistent   new vmpendingmessagecursor this prioritizedmessages
this nonpersistent setmaxbatchsize maxbatchsize
this nonpersistent setsystemusage systemusage
this storeprefetches add this nonpersistent
if  prioritizedmessages
setmaxauditdepth 10 getmaxauditdepth
@override
public synchronized void start   throws exception
if   isstarted
super start
for  pendingmessagecursor tsp   storeprefetches
tsp setmessageaudit getmessageaudit
tsp start
@override
public synchronized void stop   throws exception
if  isstarted
if  subscription iskeepdurablesubsactive
super gc
for  pendingmessagecursor tsp   storeprefetches
tsp gc
else
super stop
for  pendingmessagecursor tsp   storeprefetches
tsp stop
getmessageaudit   clear
/**
* add a destination
*
* @param context
* @param destination
* @throws exception
*/
@override
public synchronized void add connectioncontext context  destination destination  throws exception
if  destination    null     advisorysupport isadvisorytopic destination getactivemqdestination
topicstoreprefetch tsp   new topicstoreprefetch this subscription  topic destination  clientid  subscribername
tsp setmaxbatchsize destination getmaxpagesize
tsp setsystemusage systemusage
tsp setmessageaudit getmessageaudit
tsp setenableaudit isenableaudit
tsp setmemoryusagehighwatermark getmemoryusagehighwatermark
tsp setusecache isusecache
tsp setcacheenabled isusecache      tsp isempty
topics put destination  tsp
storeprefetches add tsp
if  isstarted
tsp start
/**
* remove a destination
*
* @param context
* @param destination
* @throws exception
*/
@override
public synchronized list<messagereference> remove connectioncontext context  destination destination  throws exception
pendingmessagecursor tsp   topics remove destination
if  tsp    null
storeprefetches remove tsp
return collections empty_list
/**
* @return true if there are no pending messages
*/
@override
public synchronized boolean isempty
for  pendingmessagecursor tsp   storeprefetches
if   tsp isempty
return false
return true
@override
public synchronized boolean isempty destination destination
boolean result   true
topicstoreprefetch tsp   topics get destination
if  tsp    null
result   tsp isempty
return result
/**
* informs the broker if the subscription needs to intervention to recover
* it's state e.g. durabletopicsubscriber may do
*
* @see org.apache.activemq.broker.region.cursors.abstractpendingmessagecursor
* @return true if recovery required
*/
@override
public boolean isrecoveryrequired
return false
@override
public synchronized void addmessagelast messagereference node  throws exception
if  node    null
message msg   node getmessage
if  isstarted
if   msg ispersistent
nonpersistent addmessagelast node
if  msg ispersistent
destination dest    destination  msg getregiondestination
topicstoreprefetch tsp   topics get dest
if  tsp    null
tsp addmessagelast node
if  prioritizedmessages    immediateprioritydispatch    tsp ispaging
if  msg getpriority   > tsp getlastrecoveredpriority
tsp recovermessage node getmessage    true
if  log istraceenabled
log trace     msg getpriority
msg getmessageid
tsp getlastrecoveredpriority         tsp batchlist size
@override
public boolean istransient
return subscription iskeepdurablesubsactive
@override
public void addmessagefirst messagereference node  throws exception
// for keep durable subs active, need to deal with redispatch
if  node    null
message msg   node getmessage
if   msg ispersistent
nonpersistent addmessagefirst node
else
destination dest    destination  msg getregiondestination
topicstoreprefetch tsp   topics get dest
if  tsp    null
tsp addmessagefirst node
@override
public synchronized void addrecoveredmessage messagereference node  throws exception
nonpersistent addmessagelast node
@override
public synchronized void clear
for  pendingmessagecursor tsp   storeprefetches
tsp clear
@override
public synchronized boolean hasnext
boolean result   true
if  result
try
currentcursor   getnextcursor
catch  exception e
log error    e
throw new runtimeexception e
result   currentcursor    null ? currentcursor hasnext     false
return result
@override
public synchronized messagereference next
messagereference result   currentcursor    null ? currentcursor next     null
return result
@override
public synchronized void remove
if  currentcursor    null
currentcursor remove
@override
public synchronized void remove messagereference node
for  pendingmessagecursor tsp   storeprefetches
tsp remove node
@override
public synchronized void reset
for  pendingmessagecursor storeprefetch   storeprefetches
storeprefetch reset
@override
public synchronized void release
this currentcursor   null
for  pendingmessagecursor storeprefetch   storeprefetches
storeprefetch release
@override
public synchronized int size
int pendingcount 0
for  pendingmessagecursor tsp   storeprefetches
pendingcount    tsp size
return pendingcount
@override
public void setmaxbatchsize int newmaxbatchsize
for  pendingmessagecursor storeprefetch   storeprefetches
storeprefetch setmaxbatchsize newmaxbatchsize
super setmaxbatchsize newmaxbatchsize
@override
public synchronized void gc
for  pendingmessagecursor tsp   storeprefetches
tsp gc
@override
public void setsystemusage systemusage usagemanager
super setsystemusage usagemanager
for  pendingmessagecursor tsp   storeprefetches
tsp setsystemusage usagemanager
@override
public void setmemoryusagehighwatermark int memoryusagehighwatermark
super setmemoryusagehighwatermark memoryusagehighwatermark
for  pendingmessagecursor cursor   storeprefetches
cursor setmemoryusagehighwatermark memoryusagehighwatermark
@override
public void setmaxproducerstoaudit int maxproducerstoaudit
super setmaxproducerstoaudit maxproducerstoaudit
for  pendingmessagecursor cursor   storeprefetches
cursor setmaxauditdepth maxauditdepth
@override
public void setmaxauditdepth int maxauditdepth
super setmaxauditdepth maxauditdepth
for  pendingmessagecursor cursor   storeprefetches
cursor setmaxauditdepth maxauditdepth
@override
public void setenableaudit boolean enableaudit
super setenableaudit enableaudit
for  pendingmessagecursor cursor   storeprefetches
cursor setenableaudit enableaudit
@override
public  void setusecache boolean usecache
super setusecache usecache
for  pendingmessagecursor cursor   storeprefetches
cursor setusecache usecache
protected synchronized pendingmessagecursor getnextcursor   throws exception
if  currentcursor    null    currentcursor isempty
currentcursor   null
for  pendingmessagecursor tsp   storeprefetches
if  tsp hasnext
currentcursor   tsp
break
// round-robin
if  storeprefetches size  >1
pendingmessagecursor first   storeprefetches remove 0
storeprefetches add first
return currentcursor
@override
public string tostring
return     clientid       subscribername
public boolean isimmediateprioritydispatch
return immediateprioritydispatch
public void setimmediateprioritydispatch boolean immediateprioritydispatch
this immediateprioritydispatch   immediateprioritydispatch