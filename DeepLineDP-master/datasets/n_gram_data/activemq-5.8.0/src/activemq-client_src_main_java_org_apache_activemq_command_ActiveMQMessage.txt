/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq command
import java io ioexception
import java io unsupportedencodingexception
import java util enumeration
import java util hashmap
import java util list
import java util map
import java util vector
import javax jms deliverymode
import javax jms destination
import javax jms jmsexception
import javax jms messageformatexception
import javax jms messagenotwriteableexception
import org apache activemq activemqconnection
import org apache activemq scheduledmessage
import org apache activemq broker scheduler cronparser
import org apache activemq filter propertyexpression
import org apache activemq state commandvisitor
import org apache activemq util callback
import org apache activemq util jmsexceptionsupport
import org apache activemq util typeconversionsupport
/**
*
* @openwire:marshaller code="23"
*/
public class activemqmessage extends message implements org apache activemq message  scheduledmessage
public static final byte data_structure_type   commandtypes activemq_message
public static final string dlq_delivery_failure_cause_property
private static final map<string  propertysetter> jms_property_seters   new hashmap<string  propertysetter>
protected transient callback acknowledgecallback
@override
public byte getdatastructuretype
return data_structure_type
@override
public message copy
activemqmessage copy   new activemqmessage
copy copy
return copy
protected void copy activemqmessage copy
super copy copy
copy acknowledgecallback   acknowledgecallback
@override
public int hashcode
messageid id   getmessageid
if  id    null
return id hashcode
else
return super hashcode
@override
public boolean equals object o
if  this    o
return true
if  o    null    o getclass      getclass
return false
activemqmessage msg    activemqmessage  o
messageid omsg   msg getmessageid
messageid thismsg   this getmessageid
return thismsg    null    omsg    null    omsg equals thismsg
@override
public void acknowledge   throws jmsexception
if  acknowledgecallback    null
try
acknowledgecallback execute
catch  jmsexception e
throw e
catch  throwable e
throw jmsexceptionsupport create e
@override
public void clearbody   throws jmsexception
setcontent null
readonlybody   false
@override
public string getjmsmessageid
messageid messageid   this getmessageid
if  messageid    null
return null
return messageid tostring
/**
* seems to be invalid because the parameter doesn't initialize messageid
* instance variables producerid and producersequenceid
*
* @param value
* @throws jmsexception
*/
@override
public void setjmsmessageid string value  throws jmsexception
if  value    null
try
messageid id   new messageid value
this setmessageid id
catch  numberformatexception e
// we must be some foreign jms provider or strange user-supplied
// string
// so lets set the ids to be 1
messageid id   new messageid
id settextview value
this setmessageid messageid
else
this setmessageid null
/**
* this will create an object of messageid. for it to be valid, the instance
* variable producerid and producersequenceid must be initialized.
*
* @param producerid
* @param producersequenceid
* @throws jmsexception
*/
public void setjmsmessageid producerid producerid  long producersequenceid  throws jmsexception
messageid id   null
try
id   new messageid producerid  producersequenceid
this setmessageid id
catch  throwable e
throw jmsexceptionsupport create     id       e getmessage    e
@override
public long getjmstimestamp
return this gettimestamp
@override
public void setjmstimestamp long timestamp
this settimestamp timestamp
@override
public string getjmscorrelationid
return this getcorrelationid
@override
public void setjmscorrelationid string correlationid
this setcorrelationid correlationid
@override
public byte getjmscorrelationidasbytes   throws jmsexception
return encodestring this getcorrelationid
@override
public void setjmscorrelationidasbytes byte correlationid  throws jmsexception
this setcorrelationid decodestring correlationid
@override
public string getjmsxmimetype
return
protected static string decodestring byte data  throws jmsexception
try
if  data    null
return null
return new string data
catch  unsupportedencodingexception e
throw new jmsexception     e getmessage
protected static byte encodestring string data  throws jmsexception
try
if  data    null
return null
return data getbytes
catch  unsupportedencodingexception e
throw new jmsexception     e getmessage
@override
public destination getjmsreplyto
return this getreplyto
@override
public void setjmsreplyto destination destination  throws jmsexception
this setreplyto activemqdestination transform destination
@override
public destination getjmsdestination
return this getdestination
@override
public void setjmsdestination destination destination  throws jmsexception
this setdestination activemqdestination transform destination
@override
public int getjmsdeliverymode
return this ispersistent   ? deliverymode persistent   deliverymode non_persistent
@override
public void setjmsdeliverymode int mode
this setpersistent mode    deliverymode persistent
@override
public boolean getjmsredelivered
return this isredelivered
@override
public void setjmsredelivered boolean redelivered
this setredelivered redelivered
@override
public string getjmstype
return this gettype
@override
public void setjmstype string type
this settype type
@override
public long getjmsexpiration
return this getexpiration
@override
public void setjmsexpiration long expiration
this setexpiration expiration
@override
public int getjmspriority
return this getpriority
@override
public void setjmspriority int priority
this setpriority  byte  priority
@override
public void clearproperties
super clearproperties
readonlyproperties   false
@override
public boolean propertyexists string name  throws jmsexception
try
return  this getproperties   containskey name     getobjectproperty name    null
catch  ioexception e
throw jmsexceptionsupport create e
@override
@suppresswarnings
public enumeration getpropertynames   throws jmsexception
try
vector<string> result   new vector<string> this getproperties   keyset
if  getredeliverycounter    0
result add
if  getgroupid    null
result add
if  getgroupid    null
result add
if  getuserid    null
result add
return result elements
catch  ioexception e
throw jmsexceptionsupport create e
/**
* return all property names, including standard jms properties and jmsx properties
* @return  enumeration of all property names on this message
* @throws jmsexception
*/
@suppresswarnings
public enumeration getallpropertynames   throws jmsexception
try
vector<string> result   new vector<string> this getproperties   keyset
result addall jms_property_seters keyset
return result elements
catch  ioexception e
throw jmsexceptionsupport create e
interface propertysetter
void set message message  object value  throws messageformatexception
static
jms_property_seters put    new propertysetter
@override
public void set message message  object value  throws messageformatexception
integer rc    integer  typeconversionsupport convert value  integer class
if  rc    null
throw new messageformatexception     value getclass   getname
message setredeliverycounter rc intvalue     1
jms_property_seters put    new propertysetter
@override
public void set message message  object value  throws messageformatexception
string rc    string  typeconversionsupport convert value  string class
if  rc    null
throw new messageformatexception     value getclass   getname
message setgroupid rc
jms_property_seters put    new propertysetter
@override
public void set message message  object value  throws messageformatexception
integer rc    integer  typeconversionsupport convert value  integer class
if  rc    null
throw new messageformatexception     value getclass   getname
message setgroupsequence rc intvalue
jms_property_seters put    new propertysetter
@override
public void set message message  object value  throws messageformatexception
string rc    string  typeconversionsupport convert value  string class
if  rc    null
throw new messageformatexception     value getclass   getname
activemqmessage  message  setjmscorrelationid rc
jms_property_seters put    new propertysetter
@override
public void set message message  object value  throws messageformatexception
integer rc    integer  typeconversionsupport convert value  integer class
if  rc    null
boolean bool    boolean  typeconversionsupport convert value  boolean class
if  bool    null
throw new messageformatexception     value getclass   getname
else
rc   bool booleanvalue   ? deliverymode persistent   deliverymode non_persistent
activemqmessage  message  setjmsdeliverymode rc
jms_property_seters put    new propertysetter
@override
public void set message message  object value  throws messageformatexception
long rc    long  typeconversionsupport convert value  long class
if  rc    null
throw new messageformatexception     value getclass   getname
activemqmessage  message  setjmsexpiration rc longvalue
jms_property_seters put    new propertysetter
@override
public void set message message  object value  throws messageformatexception
integer rc    integer  typeconversionsupport convert value  integer class
if  rc    null
throw new messageformatexception     value getclass   getname
activemqmessage  message  setjmspriority rc intvalue
jms_property_seters put    new propertysetter
@override
public void set message message  object value  throws messageformatexception
boolean rc    boolean  typeconversionsupport convert value  boolean class
if  rc    null
throw new messageformatexception     value getclass   getname
activemqmessage  message  setjmsredelivered rc booleanvalue
jms_property_seters put    new propertysetter
@override
public void set message message  object value  throws messageformatexception
activemqdestination rc    activemqdestination  typeconversionsupport convert value  activemqdestination class
if  rc    null
throw new messageformatexception     value getclass   getname
activemqmessage  message  setreplyto rc
jms_property_seters put    new propertysetter
@override
public void set message message  object value  throws messageformatexception
long rc    long  typeconversionsupport convert value  long class
if  rc    null
throw new messageformatexception     value getclass   getname
activemqmessage  message  setjmstimestamp rc longvalue
jms_property_seters put    new propertysetter
@override
public void set message message  object value  throws messageformatexception
string rc    string  typeconversionsupport convert value  string class
if  rc    null
throw new messageformatexception     value getclass   getname
activemqmessage  message  setjmstype rc
@override
public void setobjectproperty string name  object value  throws jmsexception
setobjectproperty name  value  true
public void setobjectproperty string name  object value  boolean checkreadonly  throws jmsexception
if  checkreadonly
checkreadonlyproperties
if  name    null    name equals
throw new illegalargumentexception
checkvalidobject value
value   convertscheduled name  value
propertysetter setter   jms_property_seters get name
if  setter    null    value    null
setter set this  value
else
try
this setproperty name  value
catch  ioexception e
throw jmsexceptionsupport create e
public void setproperties map<string  ?> properties  throws jmsexception
for  map entry<string  ?> entry   properties entryset
// lets use the object property method as we may contain standard
// extension headers like jmsxgroupid
setobjectproperty entry getkey    entry getvalue
protected void checkvalidobject object value  throws messageformatexception
boolean valid   value instanceof boolean    value instanceof byte    value instanceof short    value instanceof integer    value instanceof long
valid   valid    value instanceof float    value instanceof double    value instanceof character    value instanceof string    value    null
if   valid
activemqconnection conn   getconnection
// conn is null if we are in the broker rather than a jms client
if  conn    null    conn isnestedmapandlistenabled
if    value instanceof map    value instanceof list
throw new messageformatexception     value       value getclass
else
throw new messageformatexception     value       value getclass
protected void checkvalidscheduled string name  object value  throws messageformatexception
if  amq_scheduled_delay equals name     amq_scheduled_period equals name     amq_scheduled_repeat equals name
if  value instanceof long    false    value instanceof integer    false
throw new messageformatexception name
if  amq_scheduled_cron equals name
cronparser validate value tostring
protected object convertscheduled string name  object value  throws messageformatexception
object result   value
if  amq_scheduled_delay equals name
result   typeconversionsupport convert value  long class
else if  amq_scheduled_period equals name
result   typeconversionsupport convert value  long class
else if  amq_scheduled_repeat equals name
result   typeconversionsupport convert value  integer class
return result
@override
public object getobjectproperty string name  throws jmsexception
if  name    null
throw new nullpointerexception
// propertyexpression handles converting message headers to properties.
propertyexpression expression   new propertyexpression name
return expression evaluate this
@override
public boolean getbooleanproperty string name  throws jmsexception
object value   getobjectproperty name
if  value    null
return false
boolean rc    boolean  typeconversionsupport convert value  boolean class
if  rc    null
throw new messageformatexception     name       value getclass   getname
return rc booleanvalue
@override
public byte getbyteproperty string name  throws jmsexception
object value   getobjectproperty name
if  value    null
throw new numberformatexception     name
byte rc    byte  typeconversionsupport convert value  byte class
if  rc    null
throw new messageformatexception     name       value getclass   getname
return rc bytevalue
@override
public short getshortproperty string name  throws jmsexception
object value   getobjectproperty name
if  value    null
throw new numberformatexception     name
short rc    short  typeconversionsupport convert value  short class
if  rc    null
throw new messageformatexception     name       value getclass   getname
return rc shortvalue
@override
public int getintproperty string name  throws jmsexception
object value   getobjectproperty name
if  value    null
throw new numberformatexception     name
integer rc    integer  typeconversionsupport convert value  integer class
if  rc    null
throw new messageformatexception     name       value getclass   getname
return rc intvalue
@override
public long getlongproperty string name  throws jmsexception
object value   getobjectproperty name
if  value    null
throw new numberformatexception     name
long rc    long  typeconversionsupport convert value  long class
if  rc    null
throw new messageformatexception     name       value getclass   getname
return rc longvalue
@override
public float getfloatproperty string name  throws jmsexception
object value   getobjectproperty name
if  value    null
throw new nullpointerexception     name
float rc    float  typeconversionsupport convert value  float class
if  rc    null
throw new messageformatexception     name       value getclass   getname
return rc floatvalue
@override
public double getdoubleproperty string name  throws jmsexception
object value   getobjectproperty name
if  value    null
throw new nullpointerexception     name
double rc    double  typeconversionsupport convert value  double class
if  rc    null
throw new messageformatexception     name       value getclass   getname
return rc doublevalue
@override
public string getstringproperty string name  throws jmsexception
object value   null
if  name equals
value   getuserid
if  value    null
value   getobjectproperty name
else
value   getobjectproperty name
if  value    null
return null
string rc    string  typeconversionsupport convert value  string class
if  rc    null
throw new messageformatexception     name       value getclass   getname
return rc
@override
public void setbooleanproperty string name  boolean value  throws jmsexception
setbooleanproperty name  value  true
public void setbooleanproperty string name  boolean value  boolean checkreadonly  throws jmsexception
setobjectproperty name  boolean valueof value   checkreadonly
@override
public void setbyteproperty string name  byte value  throws jmsexception
setobjectproperty name  byte valueof value
@override
public void setshortproperty string name  short value  throws jmsexception
setobjectproperty name  short valueof value
@override
public void setintproperty string name  int value  throws jmsexception
setobjectproperty name  integer valueof value
@override
public void setlongproperty string name  long value  throws jmsexception
setobjectproperty name  long valueof value
@override
public void setfloatproperty string name  float value  throws jmsexception
setobjectproperty name  new float value
@override
public void setdoubleproperty string name  double value  throws jmsexception
setobjectproperty name  new double value
@override
public void setstringproperty string name  string value  throws jmsexception
setobjectproperty name  value
private void checkreadonlyproperties   throws messagenotwriteableexception
if  readonlyproperties
throw new messagenotwriteableexception
protected void checkreadonlybody   throws messagenotwriteableexception
if  readonlybody
throw new messagenotwriteableexception
public callback getacknowledgecallback
return acknowledgecallback
public void setacknowledgecallback callback acknowledgecallback
this acknowledgecallback   acknowledgecallback
/**
* send operation event listener. used to get the message ready to be sent.
*/
public void onsend   throws jmsexception
setreadonlybody true
setreadonlyproperties true
@override
public response visit commandvisitor visitor  throws exception
return visitor processmessage this
@override
public void storecontent