/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker util
import java util set
import javax annotation postconstruct
import org apache activemq broker brokerpluginsupport
import org apache activemq broker connection
import org apache activemq broker connectioncontext
import org apache activemq broker consumerbrokerexchange
import org apache activemq broker producerbrokerexchange
import org apache activemq broker region destination
import org apache activemq broker region messagereference
import org apache activemq broker region subscription
import org apache activemq command activemqdestination
import org apache activemq command brokerinfo
import org apache activemq command connectioninfo
import org apache activemq command consumerinfo
import org apache activemq command destinationinfo
import org apache activemq command message
import org apache activemq command messageack
import org apache activemq command messagedispatch
import org apache activemq command messagedispatchnotification
import org apache activemq command messagepull
import org apache activemq command producerinfo
import org apache activemq command removesubscriptioninfo
import org apache activemq command response
import org apache activemq command sessioninfo
import org apache activemq command transactionid
import org apache activemq usage usage
import org slf4j logger
import org slf4j loggerfactory
/**
* a simple broker intercepter which allows you to enable/disable logging.
*
* @org.apache.xbean.xbean
*/
public class loggingbrokerplugin extends brokerpluginsupport
private static final logger log   loggerfactory getlogger loggingbrokerplugin class
private boolean logall   false
private boolean logmessageevents   false
private boolean logconnectionevents   true
private boolean logsessionevents   true
private boolean logtransactionevents   false
private boolean logconsumerevents   false
private boolean logproducerevents   false
private boolean loginternalevents   false
/**
* @throws exception
* @org.apache.xbean.initmethod
*/
@postconstruct
public void afterpropertiesset   throws exception
log info     this tostring
public boolean islogall
return logall
/**
* logger all events that go through the plugin
*/
public void setlogall boolean logall
this logall   logall
public boolean islogmessageevents
return logmessageevents
/**
* logger events that are related to message processing
*/
public void setlogmessageevents boolean logmessageevents
this logmessageevents   logmessageevents
public boolean islogconnectionevents
return logconnectionevents
/**
* logger events that are related to connections
*/
public void setlogconnectionevents boolean logconnectionevents
this logconnectionevents   logconnectionevents
public boolean islogsessionevents
return logsessionevents
/**
* logger events that are related to sessions
*/
public void setlogsessionevents boolean logsessionevents
this logsessionevents   logsessionevents
public boolean islogtransactionevents
return logtransactionevents
/**
* logger events that are related to transaction processing
*/
public void setlogtransactionevents boolean logtransactionevents
this logtransactionevents   logtransactionevents
public boolean islogconsumerevents
return logconsumerevents
/**
* logger events that are related to consumers
*/
public void setlogconsumerevents boolean logconsumerevents
this logconsumerevents   logconsumerevents
public boolean islogproducerevents
return logproducerevents
/**
* logger events that are related to producers
*/
public void setlogproducerevents boolean logproducerevents
this logproducerevents   logproducerevents
public boolean isloginternalevents
return loginternalevents
/**
* logger events that are normally internal to the broker
*/
public void setloginternalevents boolean loginternalevents
this loginternalevents   loginternalevents
@override
public void acknowledge consumerbrokerexchange consumerexchange  messageack ack  throws exception
if  islogall      islogconsumerevents
log info     consumerexchange getconnectioncontext   getclientid
ack getmessagecount      1 ?     ack getlastmessageid
if  log istraceenabled      ack getmessagecount   > 1
log trace     ack getmessagecount         ack getfirstmessageid
ack getlastmessageid
super acknowledge consumerexchange  ack
@override
public response messagepull connectioncontext context  messagepull pull  throws exception
if  islogall      islogconsumerevents
log info     context getclientid         pull getdestination   getphysicalname
return super messagepull context  pull
@override
public void addconnection connectioncontext context  connectioninfo info  throws exception
if  islogall      islogconnectionevents
log info     info
super addconnection context  info
@override
public subscription addconsumer connectioncontext context  consumerinfo info  throws exception
if  islogall      islogconsumerevents
log info     info
return super addconsumer context  info
@override
public void addproducer connectioncontext context  producerinfo info  throws exception
if  islogall      islogproducerevents
log info     info
super addproducer context  info
@override
public void committransaction connectioncontext context  transactionid xid  boolean onephase  throws exception
if  islogall      islogtransactionevents
log info     xid gettransactionkey
super committransaction context  xid  onephase
@override
public void removesubscription connectioncontext context  removesubscriptioninfo info  throws exception
if  islogall      islogconsumerevents
log info     info
super removesubscription context  info
@override
public transactionid getpreparedtransactions connectioncontext context  throws exception
transactionid result   super getpreparedtransactions context
if   islogall      islogtransactionevents       result    null
stringbuffer tids   new stringbuffer
for  transactionid tid   result
if  tids length   > 0
tids append
tids append tid gettransactionkey
log info     tids
return result
@override
public int preparetransaction connectioncontext context  transactionid xid  throws exception
if  islogall      islogtransactionevents
log info     xid gettransactionkey
return super preparetransaction context  xid
@override
public void removeconnection connectioncontext context  connectioninfo info  throwable error  throws exception
if  islogall      islogconnectionevents
log info     info
super removeconnection context  info  error
@override
public void removeconsumer connectioncontext context  consumerinfo info  throws exception
if  islogall      islogconsumerevents
log info     info
super removeconsumer context  info
@override
public void removeproducer connectioncontext context  producerinfo info  throws exception
if  islogall      islogproducerevents
log info     info
super removeproducer context  info
@override
public void rollbacktransaction connectioncontext context  transactionid xid  throws exception
if  islogall      islogtransactionevents
log info     xid gettransactionkey
super rollbacktransaction context  xid
@override
public void send producerbrokerexchange producerexchange  message messagesend  throws exception
if  islogall      islogproducerevents
log info     messagesend copy
super send producerexchange  messagesend
@override
public void begintransaction connectioncontext context  transactionid xid  throws exception
if  islogall      islogtransactionevents
log info     xid gettransactionkey
super begintransaction context  xid
@override
public void forgettransaction connectioncontext context  transactionid transactionid  throws exception
if  islogall      islogtransactionevents
log info     transactionid gettransactionkey
super forgettransaction context  transactionid
@override
public connection getclients   throws exception
connection result   super getclients
if  islogall      isloginternalevents
if  result    null
log info
else
stringbuffer cids   new stringbuffer
for  connection c   result
cids append cids length   > 0 ?
cids append c getconnectionid
log info     cids
return super getclients
@override
public org apache activemq broker region destination adddestination connectioncontext context
activemqdestination destination  boolean create  throws exception
if  islogall      isloginternalevents
log info     destination getdestinationtypeasstring
destination getphysicalname
return super adddestination context  destination  create
@override
public void removedestination connectioncontext context  activemqdestination destination  long timeout
throws exception
if  islogall      isloginternalevents
log info     destination getdestinationtypeasstring
destination getphysicalname
super removedestination context  destination  timeout
@override
public activemqdestination getdestinations   throws exception
activemqdestination result   super getdestinations
if  islogall      isloginternalevents
if  result    null
log info
else
stringbuffer destinations   new stringbuffer
for  activemqdestination dest   result
destinations append destinations length   > 0 ?
destinations append dest getphysicalname
log info     destinations
return result
@override
public void start   throws exception
if  islogall      isloginternalevents
log info     getbrokername
super start
@override
public void stop   throws exception
if  islogall      isloginternalevents
log info     getbrokername
super stop
@override
public void addsession connectioncontext context  sessioninfo info  throws exception
if  islogall      islogsessionevents
log info     info
super addsession context  info
@override
public void removesession connectioncontext context  sessioninfo info  throws exception
if  islogall      islogsessionevents
log info     info
super removesession context  info
@override
public void addbroker connection connection  brokerinfo info
if  islogall      isloginternalevents
log info     info getbrokername
super addbroker connection  info
@override
public void removebroker connection connection  brokerinfo info
if  islogall      isloginternalevents
log info     info getbrokername
super removebroker connection  info
@override
public brokerinfo getpeerbrokerinfos
brokerinfo result   super getpeerbrokerinfos
if  islogall      isloginternalevents
if  result    null
log info
else
stringbuffer peers   new stringbuffer
for  brokerinfo bi   result
peers append peers length   > 0 ?
peers append bi getbrokername
log info     peers
return result
@override
public void preprocessdispatch messagedispatch messagedispatch
if  islogall      isloginternalevents      islogconsumerevents
log info     messagedispatch
super preprocessdispatch messagedispatch
@override
public void postprocessdispatch messagedispatch messagedispatch
if  islogall      isloginternalevents      islogconsumerevents
log info     messagedispatch
super postprocessdispatch messagedispatch
@override
public void processdispatchnotification messagedispatchnotification messagedispatchnotification  throws exception
if  islogall      isloginternalevents      islogconsumerevents
log info     messagedispatchnotification
super processdispatchnotification messagedispatchnotification
@override
public set<activemqdestination> getdurabledestinations
set<activemqdestination> result   super getdurabledestinations
if  islogall      isloginternalevents
if  result    null
log info
else
stringbuffer destinations   new stringbuffer
for  activemqdestination dest   result
destinations append destinations length   > 0 ?
destinations append dest getphysicalname
log info     destinations
return result
@override
public void adddestinationinfo connectioncontext context  destinationinfo info  throws exception
if  islogall      isloginternalevents
log info     info
super adddestinationinfo context  info
@override
public void removedestinationinfo connectioncontext context  destinationinfo info  throws exception
if  islogall      isloginternalevents
log info     info
super removedestinationinfo context  info
@override
public void messageexpired connectioncontext context  messagereference message  subscription subscription
if  islogall      isloginternalevents
string msg
msg   message getmessage   tostring
log info     msg
super messageexpired context  message  subscription
@override
public void sendtodeadletterqueue connectioncontext context  messagereference messagereference
subscription subscription
if  islogall      isloginternalevents
string msg
msg   messagereference getmessage   tostring
log info     msg
super sendtodeadletterqueue context  messagereference  subscription
@override
public void fastproducer connectioncontext context  producerinfo producerinfo activemqdestination destination
if  islogall      islogproducerevents      isloginternalevents
log info     producerinfo
super fastproducer context  producerinfo  destination
@override
public void isfull connectioncontext context  destination destination  usage usage
if  islogall      islogproducerevents      isloginternalevents
log info     destination getname
super isfull context  destination  usage
@override
public void messageconsumed connectioncontext context  messagereference messagereference
if  islogall      islogconsumerevents      isloginternalevents
string msg
msg   messagereference getmessage   tostring
log info     msg
super messageconsumed context  messagereference
@override
public void messagedelivered connectioncontext context  messagereference messagereference
if  islogall      islogconsumerevents      isloginternalevents
string msg
msg   messagereference getmessage   tostring
log info     msg
super messagedelivered context  messagereference
@override
public void messagediscarded connectioncontext context  subscription sub  messagereference messagereference
if  islogall      isloginternalevents
string msg
msg   messagereference getmessage   tostring
log info     msg
super messagediscarded context  sub  messagereference
@override
public void slowconsumer connectioncontext context  destination destination  subscription subs
if  islogall      islogconsumerevents      isloginternalevents
log info     destination getname
stringbuffer buf   new stringbuffer
buf append subs getconsumerinfo   getconsumerid   getconnectionid
buf append
buf append subs getconsumerinfo   getconsumerid   getsessionid
buf append
log info buf tostring
super slowconsumer context  destination  subs
@override
public void nowmasterbroker
if  islogall      isloginternalevents
log info     getbrokername
super nowmasterbroker
@override
public string tostring
stringbuffer buf   new stringbuffer
buf append
buf append
buf append islogall
buf append
buf append islogconnectionevents
buf append
buf append islogsessionevents
buf append
buf append islogconsumerevents
buf append
buf append islogproducerevents
buf append
buf append islogmessageevents
buf append
buf append islogtransactionevents
buf append
buf append isloginternalevents
buf append
return buf tostring