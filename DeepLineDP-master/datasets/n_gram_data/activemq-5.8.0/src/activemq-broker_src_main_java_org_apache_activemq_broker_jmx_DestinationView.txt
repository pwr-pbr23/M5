/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache activemq broker jmx
import java io ioexception
import java net urisyntaxexception
import java util arraylist
import java util collections
import java util iterator
import java util list
import java util map
import javax jms connection
import javax jms invalidselectorexception
import javax jms messageproducer
import javax jms session
import javax management malformedobjectnameexception
import javax management objectname
import javax management openmbean compositedata
import javax management openmbean compositedatasupport
import javax management openmbean compositetype
import javax management openmbean opendataexception
import javax management openmbean tabulardata
import javax management openmbean tabulardatasupport
import javax management openmbean tabulartype
import org apache activemq activemqconnectionfactory
import org apache activemq broker jmx opentypesupport opentypefactory
import org apache activemq broker region destination
import org apache activemq broker region subscription
import org apache activemq broker region policy abortslowconsumerstrategy
import org apache activemq broker region policy slowconsumerstrategy
import org apache activemq command activemqdestination
import org apache activemq command activemqmessage
import org apache activemq command activemqtextmessage
import org apache activemq command message
import org apache activemq filter booleanexpression
import org apache activemq filter messageevaluationcontext
import org apache activemq selector selectorparser
import org apache activemq util urisupport
import org slf4j logger
import org slf4j loggerfactory
public class destinationview implements destinationviewmbean
private static final logger log   loggerfactory getlogger destinationviewmbean class
protected final destination destination
protected final managedregionbroker broker
public destinationview managedregionbroker broker  destination destination
this broker   broker
this destination   destination
public void gc
destination gc
@override
public string getname
return destination getname
@override
public void resetstatistics
destination getdestinationstatistics   reset
@override
public long getenqueuecount
return destination getdestinationstatistics   getenqueues   getcount
@override
public long getdequeuecount
return destination getdestinationstatistics   getdequeues   getcount
@override
public long getdispatchcount
return destination getdestinationstatistics   getdispatched   getcount
@override
public long getinflightcount
return destination getdestinationstatistics   getinflight   getcount
@override
public long getexpiredcount
return destination getdestinationstatistics   getexpired   getcount
@override
public long getconsumercount
return destination getdestinationstatistics   getconsumers   getcount
@override
public long getqueuesize
return destination getdestinationstatistics   getmessages   getcount
public long getmessagescached
return destination getdestinationstatistics   getmessagescached   getcount
@override
public int getmemorypercentusage
return destination getmemoryusage   getpercentusage
@override
public long getmemoryusagebytecount
return destination getmemoryusage   getusage
@override
public long getmemorylimit
return destination getmemoryusage   getlimit
@override
public void setmemorylimit long limit
destination getmemoryusage   setlimit limit
@override
public double getaverageenqueuetime
return destination getdestinationstatistics   getprocesstime   getaveragetime
@override
public long getmaxenqueuetime
return destination getdestinationstatistics   getprocesstime   getmaxtime
@override
public long getminenqueuetime
return destination getdestinationstatistics   getprocesstime   getmintime
@override
public boolean isprioritizedmessages
return destination isprioritizedmessages
@override
public compositedata browse   throws opendataexception
try
return browse null
catch  invalidselectorexception e
// should not happen.
throw new runtimeexception e
@override
public compositedata browse string selector  throws opendataexception  invalidselectorexception
message messages   destination browse
arraylist<compositedata> c   new arraylist<compositedata>
messageevaluationcontext ctx   new messageevaluationcontext
ctx setdestination destination getactivemqdestination
booleanexpression selectorexpression   selector    null ? null   selectorparser parse selector
for  int i   0  i < messages length  i
try
if  selectorexpression    null
c add opentypesupport convert messages
else
ctx setmessagereference messages
if  selectorexpression matches ctx
c add opentypesupport convert messages
catch  throwable e
// todo delete me
system out println e
e printstacktrace
// todo delete me
log warn    e
compositedata rc   new compositedata
c toarray rc
return rc
/**
* browses the current destination returning a list of messages
*/
@override
public list<object> browsemessages   throws invalidselectorexception
return browsemessages null
/**
* browses the current destination with the given selector returning a list
* of messages
*/
@override
public list<object> browsemessages string selector  throws invalidselectorexception
message messages   destination browse
arraylist<object> answer   new arraylist<object>
messageevaluationcontext ctx   new messageevaluationcontext
ctx setdestination destination getactivemqdestination
booleanexpression selectorexpression   selector    null ? null   selectorparser parse selector
for  int i   0  i < messages length  i
try
message message   messages
message setreadonlybody true
if  selectorexpression    null
answer add message
else
ctx setmessagereference message
if  selectorexpression matches ctx
answer add message
catch  throwable e
log warn    e
return answer
@override
public tabulardata browseastable   throws opendataexception
try
return browseastable null
catch  invalidselectorexception e
throw new runtimeexception e
@override
public tabulardata browseastable string selector  throws opendataexception  invalidselectorexception
opentypefactory factory   opentypesupport getfactory activemqmessage class
message messages   destination browse
compositetype ct   factory getcompositetype
tabulartype tt   new tabulartype       ct  new string
tabulardatasupport rc   new tabulardatasupport tt
messageevaluationcontext ctx   new messageevaluationcontext
ctx setdestination destination getactivemqdestination
booleanexpression selectorexpression   selector    null ? null   selectorparser parse selector
for  int i   0  i < messages length  i
try
if  selectorexpression    null
rc put new compositedatasupport ct  factory getfields messages
else
ctx setmessagereference messages
if  selectorexpression matches ctx
rc put new compositedatasupport ct  factory getfields messages
catch  throwable e
log warn    e
return rc
@override
public string sendtextmessage string body  throws exception
return sendtextmessage collections empty_map  body
@override
public string sendtextmessage map headers  string body  throws exception
return sendtextmessage headers  body  null  null
@override
public string sendtextmessage string body  string user  string password  throws exception
return sendtextmessage collections empty_map  body  user  password
@override
public string sendtextmessage map headers  string body  string username  string password  throws exception
string brokerurl       broker getbrokername
activemqdestination dest   destination getactivemqdestination
activemqconnectionfactory cf   new activemqconnectionfactory brokerurl
connection connection   null
try
connection   cf createconnection username  password
session session   connection createsession false  session auto_acknowledge
messageproducer producer   session createproducer dest
activemqtextmessage msg    activemqtextmessage  session createtextmessage body
for  iterator iter   headers entryset   iterator    iter hasnext
map entry entry    map entry  iter next
msg setobjectproperty  string  entry getkey    entry getvalue
producer setdeliverymode msg getjmsdeliverymode
producer setpriority msg getpriority
long ttl   msg getexpiration     system currenttimemillis
producer settimetolive ttl > 0 ? ttl   0
producer send msg
return msg getjmsmessageid
finally
connection close
@override
public int getmaxauditdepth
return destination getmaxauditdepth
@override
public int getmaxproducerstoaudit
return destination getmaxproducerstoaudit
public boolean isenableaudit
return destination isenableaudit
public void setenableaudit boolean enableaudit
destination setenableaudit enableaudit
@override
public void setmaxauditdepth int maxauditdepth
destination setmaxauditdepth maxauditdepth
@override
public void setmaxproducerstoaudit int maxproducerstoaudit
destination setmaxproducerstoaudit maxproducerstoaudit
@override
public float getmemoryusageportion
return destination getmemoryusage   getusageportion
@override
public long getproducercount
return destination getdestinationstatistics   getproducers   getcount
@override
public boolean isproducerflowcontrol
return destination isproducerflowcontrol
@override
public void setmemoryusageportion float value
destination getmemoryusage   setusageportion value
@override
public void setproducerflowcontrol boolean producerflowcontrol
destination setproducerflowcontrol producerflowcontrol
@override
public boolean isalwaysretroactive
return destination isalwaysretroactive
@override
public void setalwaysretroactive boolean alwaysretroactive
destination setalwaysretroactive alwaysretroactive
/**
* set's the interval at which warnings about producers being blocked by
* resource usage will be triggered. values of 0 or less will disable
* warnings
*
* @param blockedproducerwarninginterval the interval at which warning about
*            blocked producers will be triggered.
*/
@override
public void setblockedproducerwarninginterval long blockedproducerwarninginterval
destination setblockedproducerwarninginterval blockedproducerwarninginterval
/**
*
* @return the interval at which warning about blocked producers will be
*         triggered.
*/
@override
public long getblockedproducerwarninginterval
return destination getblockedproducerwarninginterval
@override
public int getmaxpagesize
return destination getmaxpagesize
@override
public void setmaxpagesize int pagesize
destination setmaxpagesize pagesize
@override
public boolean isusecache
return destination isusecache
@override
public void setusecache boolean value
destination setusecache value
@override
public objectname getsubscriptions   throws ioexception  malformedobjectnameexception
list<subscription> subscriptions   destination getconsumers
objectname answer   new objectname
objectname brokerobjectname   broker getbrokerservice   getbrokerobjectname
int index   0
for  subscription subscription   subscriptions
string connectionclientid   subscription getcontext   getclientid
answer   brokermbeansupport createsubscriptionname brokerobjectname  connectionclientid  subscription getconsumerinfo
return answer
@override
public objectname getslowconsumerstrategy   throws ioexception  malformedobjectnameexception
objectname result   null
slowconsumerstrategy strategy   destination getslowconsumerstrategy
if  strategy    null    strategy instanceof abortslowconsumerstrategy
result   broker registerslowconsumerstrategy  abortslowconsumerstrategy strategy
return result
@override
public string getoptions
map<string  string> options   destination getactivemqdestination   getoptions
string optionsstring
try
if  options    null
optionsstring   urisupport createquerystring options
catch  urisyntaxexception ignored
return optionsstring