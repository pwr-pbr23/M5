/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive jdbc
import java sql sqlexception
import java util arraylist
import java util arrays
import java util iterator
import java util list
import java util properties
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hive metastore api fieldschema
import org apache hadoop hive metastore api schema
import org apache hadoop hive serde serdeconstants
import org apache hadoop hive serde2 serde
import org apache hadoop hive serde2 lazy lazysimpleserde
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorutils
import org apache hadoop hive serde2 objectinspector objectinspectorutils objectinspectorcopyoption
import org apache hadoop hive serde2 objectinspector structfield
import org apache hadoop hive serde2 objectinspector structobjectinspector
import org apache hadoop hive service hiveinterface
import org apache hadoop hive service hiveserverexception
import org apache hadoop io byteswritable
/**
* hivequeryresultset.
*
*/
public class hivequeryresultset extends hivebaseresultset
public static final log log   logfactory getlog hivequeryresultset class
private hiveinterface client
private serde serde
private int maxrows   0
private int rowsfetched   0
private int fetchsize   50
private list<string> fetchedrows
private iterator<string> fetchedrowsitr
public hivequeryresultset hiveinterface client  int maxrows  throws sqlexception
this client   client
this maxrows   maxrows
initserde
row   arrays aslist new object
public hivequeryresultset hiveinterface client  throws sqlexception
this client  0
/**
* instantiate the serde used to deserialize the result rows.
*/
private void initserde   throws sqlexception
try
schema fullschema   client getschema
list<fieldschema> schema   fullschema getfieldschemas
columnnames   new arraylist<string>
columntypes   new arraylist<string>
stringbuilder namessb   new stringbuilder
stringbuilder typessb   new stringbuilder
if   schema    null       schema isempty
for  int pos   0  pos < schema size    pos
if  pos    0
namessb append
typessb append
columnnames add schema get pos  getname
columntypes add schema get pos  gettype
namessb append schema get pos  getname
typessb append schema get pos  gettype
string names   namessb tostring
string types   typessb tostring
serde   new lazysimpleserde
properties props   new properties
if  names length   > 0
log debug     names
props setproperty serdeconstants list_columns  names
if  types length   > 0
log debug     types
props setproperty serdeconstants list_column_types  types
serde initialize new configuration    props
catch  exception ex
ex printstacktrace
throw new sqlexception     ex getmessage    ex
@override
public void close   throws sqlexception
client   null
/**
* moves the cursor down one row from its current position.
*
* @see java.sql.resultset#next()
* @throws sqlexception
*           if a database access error occurs.
*/
public boolean next   throws sqlexception
if  maxrows > 0    rowsfetched >  maxrows
return false
try
if  fetchedrows    null     fetchedrowsitr hasnext
fetchedrows   client fetchn fetchsize
fetchedrowsitr   fetchedrows iterator
string rowstr
if  fetchedrowsitr hasnext
rowstr   fetchedrowsitr next
else
return false
rowsfetched
if  log isdebugenabled
log debug     rowstr
structobjectinspector soi    structobjectinspector  serde getobjectinspector
list<? extends structfield> fieldrefs   soi getallstructfieldrefs
object data   serde deserialize new byteswritable rowstr getbytes
assert row size      fieldrefs size     row size         fieldrefs size
for  int i   0  i < fieldrefs size    i
structfield fieldref   fieldrefs get i
objectinspector oi   fieldref getfieldobjectinspector
object obj   soi getstructfielddata data  fieldref
row set i  convertlazytojava obj  oi
if  log isdebugenabled
log debug     row
catch  hiveserverexception e
if  e geterrorcode      0       error code    0 means reached the eof
return false
else
throw new sqlexception    e
catch  exception ex
ex printstacktrace
throw new sqlexception    ex
// note: fetchone dosn't throw new sqlexception("method not supported").
return true
@override
public void setfetchsize int rows  throws sqlexception
fetchsize   rows
@override
public int getfetchsize   throws sqlexception
return fetchsize
/**
* convert a lazyobject to a standard java object in compliance with jdbc 3.0 (see jdbc 3.0
* specification, table b-3: mapping from jdbc types to java object types).
*
* this method is kept consistent with {@link hiveresultsetmetadata#hivetypetosqltype}.
*/
private static object convertlazytojava object o  objectinspector oi
object obj   objectinspectorutils copytostandardobject o  oi  objectinspectorcopyoption java
// for now, expose non-primitive as a string
// todo: expose non-primitive as a structured object while maintaining jdbc compliance
if  obj    null    oi getcategory      objectinspector category primitive
obj   obj tostring
return obj