/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive metastore
import static org apache hadoop hive metastore metastoreutils default_database_name
import static org apache hadoop hive metastore metastoreutils isindextable
import java io ioexception
import java lang reflect invocationhandler
import java lang reflect invocationtargetexception
import java lang reflect method
import java lang reflect proxy
import java net uri
import java net urisyntaxexception
import java util arraylist
import java util arrays
import java util linkedhashmap
import java util list
import java util map
import java util random
import javax security auth login loginexception
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive conf hiveconf
import org apache hadoop hive conf hiveconf confvars
import org apache hadoop hive metastore api alreadyexistsexception
import org apache hadoop hive metastore api columnstatistics
import org apache hadoop hive metastore api configvalsecurityexception
import org apache hadoop hive metastore api database
import org apache hadoop hive metastore api fieldschema
import org apache hadoop hive metastore api hiveobjectprivilege
import org apache hadoop hive metastore api hiveobjectref
import org apache hadoop hive metastore api index
import org apache hadoop hive metastore api invalidinputexception
import org apache hadoop hive metastore api invalidobjectexception
import org apache hadoop hive metastore api invalidoperationexception
import org apache hadoop hive metastore api invalidpartitionexception
import org apache hadoop hive metastore api metaexception
import org apache hadoop hive metastore api nosuchobjectexception
import org apache hadoop hive metastore api partition
import org apache hadoop hive metastore api partitioneventtype
import org apache hadoop hive metastore api principalprivilegeset
import org apache hadoop hive metastore api principaltype
import org apache hadoop hive metastore api privilegebag
import org apache hadoop hive metastore api role
import org apache hadoop hive metastore api table
import org apache hadoop hive metastore api thrifthivemetastore
import org apache hadoop hive metastore api type
import org apache hadoop hive metastore api unknowndbexception
import org apache hadoop hive metastore api unknownpartitionexception
import org apache hadoop hive metastore api unknowntableexception
import org apache hadoop hive shims hadoopshims
import org apache hadoop hive shims shimloader
import org apache hadoop hive thrift hadoopthriftauthbridge
import org apache hadoop security usergroupinformation
import org apache hadoop util stringutils
import org apache thrift texception
import org apache thrift protocol tbinaryprotocol
import org apache thrift transport tframedtransport
import org apache thrift transport tsocket
import org apache thrift transport ttransport
import org apache thrift transport ttransportexception
/**
* hive metastore client.
*/
public class hivemetastoreclient implements imetastoreclient
thrifthivemetastore iface client   null
private ttransport transport   null
private boolean isconnected   false
private uri metastoreuris
private final hivemetahookloader hookloader
private final hiveconf conf
private string tokenstrform
private final boolean localmetastore
// for thrift connects
private int retries   5
private int retrydelayseconds   0
static final private log log   logfactory getlog
public hivemetastoreclient hiveconf conf
throws metaexception
this conf  null
public hivemetastoreclient hiveconf conf  hivemetahookloader hookloader
throws metaexception
this hookloader   hookloader
if  conf    null
conf   new hiveconf hivemetastoreclient class
this conf   conf
string msuri   conf getvar hiveconf confvars metastoreuris
localmetastore    msuri    null  ? true   msuri trim   isempty
if  localmetastore
// instantiate the metastore server handler directly instead of connecting
// through the network
client   hivemetastore newhmshandler    conf
isconnected   true
return
// get the number retries
retries   hiveconf getintvar conf  hiveconf confvars metastorethriftconnectionretries
retrydelayseconds   conf getintvar confvars metastore_client_connect_retry_delay
// user wants file store based configuration
if  conf getvar hiveconf confvars metastoreuris     null
string metastoreurisstring   conf getvar
hiveconf confvars metastoreuris  split
metastoreuris   new uri
try
int i   0
for  string s   metastoreurisstring
uri tmpuri   new uri s
if  tmpuri getscheme      null
throw new illegalargumentexception     s
metastoreuris   tmpuri
catch  illegalargumentexception e
throw  e
catch  exception e
metastoreutils logandthrowmetaexception e
else if  conf getvar hiveconf confvars metastoredirectory     null
metastoreuris   new uri
try
metastoreuris   new uri conf
getvar hiveconf confvars metastoredirectory
catch  urisyntaxexception e
metastoreutils logandthrowmetaexception e
else
log error
throw new metaexception
// finally open the store
open
/**
* swaps the first element of the metastoreuris array with a random element from the
* remainder of the array.
*/
private void promoterandommetastoreuri
if  metastoreuris length <  1
return
random rng   new random
int index   rng nextint metastoreuris length   1    1
uri tmp   metastoreuris
metastoreuris   metastoreuris
metastoreuris   tmp
public void reconnect   throws metaexception
if  localmetastore
// for direct db connections we don't yet support reestablishing connections.
throw new metaexception
else
// swap the first element of the metastoreuris[] with a random element from the rest
// of the array. rationale being that this method will generally be called when the default
// connection has died and the default connection is likely to be the first array element.
promoterandommetastoreuri
open
/**
* @param dbname
* @param tbl_name
* @param new_tbl
* @throws invalidoperationexception
* @throws metaexception
* @throws texception
* @see
*   org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#alter_table(
*   java.lang.string, java.lang.string,
*   org.apache.hadoop.hive.metastore.api.table)
*/
public void alter_table string dbname  string tbl_name  table new_tbl
throws invalidoperationexception  metaexception  texception
client alter_table dbname  tbl_name  new_tbl
/**
* @param dbname
* @param name
* @param part_vals
* @param newpart
* @throws invalidoperationexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#rename_partition(
*      java.lang.string, java.lang.string, java.util.list, org.apache.hadoop.hive.metastore.api.partition)
*/
public void renamepartition final string dbname  final string name  final list<string> part_vals  final partition newpart
throws invalidoperationexception  metaexception  texception
client rename_partition dbname  name  part_vals  newpart
private void open   throws metaexception
isconnected   false
ttransportexception tte   null
hadoopshims shim   shimloader gethadoopshims
boolean usesasl   conf getboolvar confvars metastore_use_thrift_sasl
boolean useframedtransport   conf getboolvar confvars metastore_use_thrift_framed_transport
int clientsockettimeout   conf getintvar confvars metastore_client_socket_timeout
for  int attempt   0   isconnected    attempt < retries    attempt
for  uri store   metastoreuris
log info     store
try
transport   new tsocket store gethost    store getport    1000   clientsockettimeout
if  usesasl
// wrap thrift connection with sasl for secure connection.
try
hadoopthriftauthbridge client authbridge
shimloader gethadoopthriftauthbridge   createclient
// check if we should use delegation tokens to authenticate
// the call below gets hold of the tokens if they are set up by hadoop
// this should happen on the map/reduce tasks if the client added the
// tokens into hadoop's credential store in the front end during job
// submission.
string tokensig   conf get
// tokensig could be null
tokenstrform   shim gettokenstrform tokensig
if tokenstrform    null
// authenticate using delegation tokens via the "digest" mechanism
transport   authbridge createclienttransport null  store gethost
tokenstrform  transport
else
string principalconfig
conf getvar hiveconf confvars metastore_kerberos_principal
transport   authbridge createclienttransport
principalconfig  store gethost       null
transport
catch  ioexception ioe
log error    ioe
throw new metaexception ioe tostring
else if  useframedtransport
transport   new tframedtransport transport
client   new thrifthivemetastore client new tbinaryprotocol transport
try
transport open
isconnected   true
catch  ttransportexception e
tte   e
if  log isdebugenabled
log warn    e
else
// don't print full exception trace if debug is not on.
log warn
if  isconnected     usesasl    conf getboolvar confvars metastore_execute_set_ugi
// call set_ugi, only in unsecure mode.
try
usergroupinformation ugi   shim getugiforconf conf
client set_ugi ugi getusername    arrays aslist ugi getgroupnames
catch  loginexception e
log warn
e
catch  ioexception e
log warn
e
catch  texception e
log warn
e
catch  metaexception e
log error     store
attempt  e
if  isconnected
break
// wait before launching the next round of connection retries.
if  retrydelayseconds > 0
try
log info     retrydelayseconds
thread sleep retrydelayseconds   1000
catch  interruptedexception ignore
if   isconnected
throw new metaexception
stringutils stringifyexception tte
log info
public string gettokenstrform   throws ioexception
return tokenstrform
public void close
isconnected   false
try
if  null    client
client shutdown
catch  texception e
log error    e
// transport would have got closed via client.shutdown(), so we dont need this, but
// just in case, we make this call.
if   transport    null     transport isopen
transport close
/**
* @param new_part
* @return the added partition
* @throws invalidobjectexception
* @throws alreadyexistsexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#add_partition(org.apache.hadoop.hive.metastore.api.partition)
*/
public partition add_partition partition new_part
throws invalidobjectexception  alreadyexistsexception  metaexception
texception
return deepcopy client add_partition new_part
/**
* @param new_parts
* @throws invalidobjectexception
* @throws alreadyexistsexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#add_partitions(list)
*/
public int add_partitions list<partition> new_parts
throws invalidobjectexception  alreadyexistsexception  metaexception
texception
return client add_partitions new_parts
/**
* @param table_name
* @param db_name
* @param part_vals
* @return the appended partition
* @throws invalidobjectexception
* @throws alreadyexistsexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#append_partition(java.lang.string,
*      java.lang.string, java.util.list)
*/
public partition appendpartition string db_name  string table_name
list<string> part_vals  throws invalidobjectexception
alreadyexistsexception  metaexception  texception
return deepcopy client append_partition db_name  table_name  part_vals
public partition appendpartition string dbname  string tablename  string partname
throws invalidobjectexception  alreadyexistsexception
metaexception  texception
return deepcopy
client append_partition_by_name dbname  tablename  partname
/**
* create a new database
* @param db
* @throws alreadyexistsexception
* @throws invalidobjectexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#create_database(database)
*/
public void createdatabase database db
throws alreadyexistsexception  invalidobjectexception  metaexception  texception
client create_database db
/**
* @param tbl
* @throws metaexception
* @throws nosuchobjectexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#create_table(org.apache.hadoop.hive.metastore.api.table)
*/
public void createtable table tbl  throws alreadyexistsexception
invalidobjectexception  metaexception  nosuchobjectexception  texception
hivemetahook hook   gethook tbl
if  hook    null
hook precreatetable tbl
boolean success   false
try
client create_table tbl
if  hook    null
hook commitcreatetable tbl
success   true
finally
if   success     hook    null
hook rollbackcreatetable tbl
/**
* @param type
* @return true or false
* @throws alreadyexistsexception
* @throws invalidobjectexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#create_type(org.apache.hadoop.hive.metastore.api.type)
*/
public boolean createtype type type  throws alreadyexistsexception
invalidobjectexception  metaexception  texception
return client create_type type
/**
* @param name
* @throws nosuchobjectexception
* @throws invalidoperationexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#drop_database(java.lang.string, boolean, boolean)
*/
public void dropdatabase string name
throws nosuchobjectexception  invalidoperationexception  metaexception  texception
dropdatabase name  true  false  false
public void dropdatabase string name  boolean deletedata  boolean ignoreunknowndb
throws nosuchobjectexception  invalidoperationexception  metaexception  texception
dropdatabase name  deletedata  ignoreunknowndb  false
public void dropdatabase string name  boolean deletedata  boolean ignoreunknowndb  boolean cascade
throws nosuchobjectexception  invalidoperationexception  metaexception  texception
try
getdatabase name
catch  nosuchobjectexception e
if   ignoreunknowndb
throw e
return
if  cascade
list<string> tablelist   getalltables name
for  string table   tablelist
try
droptable name  table  deletedata  false
catch  unsupportedoperationexception e
// ignore index tables, those will be dropped with parent tables
client drop_database name  deletedata  cascade
/**
* @param tbl_name
* @param db_name
* @param part_vals
* @return true or false
* @throws nosuchobjectexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#drop_partition(java.lang.string,
*      java.lang.string, java.util.list, boolean)
*/
public boolean droppartition string db_name  string tbl_name
list<string> part_vals  throws nosuchobjectexception  metaexception
texception
return droppartition db_name  tbl_name  part_vals  true
public boolean droppartition string dbname  string tablename  string partname  boolean deletedata
throws nosuchobjectexception  metaexception  texception
return client drop_partition_by_name dbname  tablename  partname  deletedata
/**
* @param db_name
* @param tbl_name
* @param part_vals
* @param deletedata
*          delete the underlying data or just delete the table in metadata
* @return true or false
* @throws nosuchobjectexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#drop_partition(java.lang.string,
*      java.lang.string, java.util.list, boolean)
*/
public boolean droppartition string db_name  string tbl_name
list<string> part_vals  boolean deletedata  throws nosuchobjectexception
metaexception  texception
return client drop_partition db_name  tbl_name  part_vals  deletedata
/**
* @param name
* @param dbname
* @throws nosuchobjectexception
* @throws existingdependentsexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#drop_table(java.lang.string,
*      java.lang.string, boolean)
*/
public void droptable string dbname  string name
throws nosuchobjectexception  metaexception  texception
droptable dbname  name  true  true
/** {@inheritdoc} */
@deprecated
public void droptable string tablename  boolean deletedata
throws metaexception  unknowntableexception  texception  nosuchobjectexception
droptable default_database_name  tablename  deletedata  false
/**
* @param dbname
* @param name
* @param deletedata
*          delete the underlying data or just delete the table in metadata
* @throws nosuchobjectexception
* @throws existingdependentsexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#drop_table(java.lang.string,
*      java.lang.string, boolean)
*/
public void droptable string dbname  string name  boolean deletedata
boolean ignoreuknowntab  throws metaexception  texception
nosuchobjectexception  unsupportedoperationexception
table tbl
try
tbl   gettable dbname  name
catch  nosuchobjectexception e
if   ignoreuknowntab
throw e
return
if  isindextable tbl
throw new unsupportedoperationexception
hivemetahook hook   gethook tbl
if  hook    null
hook predroptable tbl
boolean success   false
try
client drop_table dbname  name  deletedata
if  hook    null
hook commitdroptable tbl  deletedata
success true
catch  nosuchobjectexception e
if   ignoreuknowntab
throw e
finally
if   success     hook    null
hook rollbackdroptable tbl
/**
* @param type
* @return true if the type is dropped
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#drop_type(java.lang.string)
*/
public boolean droptype string type  throws nosuchobjectexception  metaexception  texception
return client drop_type type
/**
* @param name
* @return map of types
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#get_type_all(java.lang.string)
*/
public map<string  type> gettypeall string name  throws metaexception
texception
map<string  type> result   null
map<string  type> fromclient   client get_type_all name
if  fromclient    null
result   new linkedhashmap<string  type>
for  string key   fromclient keyset
result put key  deepcopy fromclient get key
return result
/** {@inheritdoc} */
public list<string> getdatabases string databasepattern
throws metaexception
try
return client get_databases databasepattern
catch  exception e
metastoreutils logandthrowmetaexception e
return null
/** {@inheritdoc} */
public list<string> getalldatabases   throws metaexception
try
return client get_all_databases
catch  exception e
metastoreutils logandthrowmetaexception e
return null
/**
* @param tbl_name
* @param db_name
* @param max_parts
* @return list of partitions
* @throws nosuchobjectexception
* @throws metaexception
* @throws texception
*/
public list<partition> listpartitions string db_name  string tbl_name
short max_parts  throws nosuchobjectexception  metaexception  texception
return deepcopypartitions
client get_partitions db_name  tbl_name  max_parts
@override
public list<partition> listpartitions string db_name  string tbl_name
list<string> part_vals  short max_parts
throws nosuchobjectexception  metaexception  texception
return deepcopypartitions
client get_partitions_ps db_name  tbl_name  part_vals  max_parts
@override
public list<partition> listpartitionswithauthinfo string db_name
string tbl_name  short max_parts  string user_name  list<string> group_names
throws nosuchobjectexception  metaexception  texception
return deepcopypartitions
client get_partitions_with_auth db_name  tbl_name  max_parts  user_name  group_names
@override
public list<partition> listpartitionswithauthinfo string db_name
string tbl_name  list<string> part_vals  short max_parts
string user_name  list<string> group_names  throws nosuchobjectexception
metaexception  texception
return deepcopypartitions client get_partitions_ps_with_auth db_name
tbl_name  part_vals  max_parts  user_name  group_names
/**
* get list of partitions matching specified filter
* @param db_name the database name
* @param tbl_name the table name
* @param filter the filter string,
*    for example "part1 = \"p1_abc\" and part2 <= "\p2_test\"". filtering can
*    be done only on string partition keys.
* @param max_parts the maximum number of partitions to return,
*    all partitions are returned if -1 is passed
* @return list of partitions
* @throws metaexception
* @throws nosuchobjectexception
* @throws texception
*/
public list<partition> listpartitionsbyfilter string db_name  string tbl_name
string filter  short max_parts  throws metaexception
nosuchobjectexception  texception
return deepcopypartitions
client get_partitions_by_filter db_name  tbl_name  filter  max_parts
/**
* @param name
* @return the database
* @throws nosuchobjectexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#get_database(java.lang.string)
*/
public database getdatabase string name  throws nosuchobjectexception
metaexception  texception
return deepcopy client get_database name
/**
* @param tbl_name
* @param db_name
* @param part_vals
* @return the partition
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#get_partition(java.lang.string,
*      java.lang.string, java.util.list)
*/
public partition getpartition string db_name  string tbl_name
list<string> part_vals  throws nosuchobjectexception  metaexception  texception
return deepcopy client get_partition db_name  tbl_name  part_vals
public list<partition> getpartitionsbynames string db_name  string tbl_name
list<string> part_names  throws nosuchobjectexception  metaexception  texception
return deepcopypartitions client get_partitions_by_names db_name  tbl_name  part_names
@override
public partition getpartitionwithauthinfo string db_name  string tbl_name
list<string> part_vals  string user_name  list<string> group_names
throws metaexception  unknowntableexception  nosuchobjectexception
texception
return deepcopy client get_partition_with_auth db_name  tbl_name  part_vals  user_name  group_names
/**
* @param name
* @param dbname
* @return the table
* @throws nosuchobjectexception
* @throws metaexception
* @throws texception
* @throws nosuchobjectexception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#get_table(java.lang.string,
*      java.lang.string)
*/
public table gettable string dbname  string name  throws metaexception
texception  nosuchobjectexception
return deepcopy client get_table dbname  name
/** {@inheritdoc} */
@deprecated
public table gettable string tablename  throws metaexception  texception
nosuchobjectexception
return gettable default_database_name  tablename
/** {@inheritdoc} */
public list<table> gettableobjectsbyname string dbname  list<string> tablenames
throws metaexception  invalidoperationexception  unknowndbexception  texception
return deepcopytables client get_table_objects_by_name dbname  tablenames
/** {@inheritdoc} */
public list<string> listtablenamesbyfilter string dbname  string filter  short maxtables
throws metaexception  texception  invalidoperationexception  unknowndbexception
return client get_table_names_by_filter dbname  filter  maxtables
/**
* @param name
* @return the type
* @throws metaexception
* @throws texception
* @throws nosuchobjectexception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#get_type(java.lang.string)
*/
public type gettype string name  throws nosuchobjectexception  metaexception  texception
return deepcopy client get_type name
/** {@inheritdoc} */
public list<string> gettables string dbname  string tablepattern  throws metaexception
try
return client get_tables dbname  tablepattern
catch  exception e
metastoreutils logandthrowmetaexception e
return null
/** {@inheritdoc} */
public list<string> getalltables string dbname  throws metaexception
try
return client get_all_tables dbname
catch  exception e
metastoreutils logandthrowmetaexception e
return null
public boolean tableexists string databasename  string tablename  throws metaexception
texception  unknowndbexception
try
client get_table databasename  tablename
catch  nosuchobjectexception e
return false
return true
/** {@inheritdoc} */
@deprecated
public boolean tableexists string tablename  throws metaexception
texception  unknowndbexception
return tableexists default_database_name  tablename
public list<string> listpartitionnames string dbname  string tblname
short max  throws metaexception  texception
return client get_partition_names dbname  tblname  max
@override
public list<string> listpartitionnames string db_name  string tbl_name
list<string> part_vals  short max_parts
throws metaexception  texception  nosuchobjectexception
return client get_partition_names_ps db_name  tbl_name  part_vals  max_parts
public void alter_partition string dbname  string tblname  partition newpart
throws invalidoperationexception  metaexception  texception
client alter_partition dbname  tblname  newpart
public void alter_partitions string dbname  string tblname  list<partition> newparts
throws invalidoperationexception  metaexception  texception
client alter_partitions dbname  tblname  newparts
public void alterdatabase string dbname  database db
throws metaexception  nosuchobjectexception  texception
client alter_database dbname  db
/**
* @param db
* @param tablename
* @throws unknowntableexception
* @throws unknowndbexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#get_fields(java.lang.string,
*      java.lang.string)
*/
public list<fieldschema> getfields string db  string tablename
throws metaexception  texception  unknowntableexception
unknowndbexception
return deepcopyfieldschemas client get_fields db  tablename
/**
* create an index
* @param index the index object
* @param indextable which stores the index data
* @throws invalidobjectexception
* @throws metaexception
* @throws nosuchobjectexception
* @throws texception
* @throws alreadyexistsexception
*/
public void createindex index index  table indextable  throws alreadyexistsexception  invalidobjectexception  metaexception  nosuchobjectexception  texception
client add_index index  indextable
/**
* @param dbname
* @param base_tbl_name
* @param idx_name
* @param new_idx
* @throws invalidoperationexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#alter_index(java.lang.string,
*      java.lang.string, java.lang.string, org.apache.hadoop.hive.metastore.api.index)
*/
public void alter_index string dbname  string base_tbl_name  string idx_name  index new_idx
throws invalidoperationexception  metaexception  texception
client alter_index dbname  base_tbl_name  idx_name  new_idx
/**
* @param dbname
* @param tblname
* @param indexname
* @return the index
* @throws metaexception
* @throws unknowntableexception
* @throws nosuchobjectexception
* @throws texception
*/
public index getindex string dbname  string tblname  string indexname
throws metaexception  unknowntableexception  nosuchobjectexception
texception
return deepcopy client get_index_by_name dbname  tblname  indexname
/**
* list indexes of the give base table
* @param dbname
* @param tblname
* @param max
* @return the list of indexes
* @throws nosuchobjectexception
* @throws metaexception
* @throws texception
*/
public list<string> listindexnames string dbname  string tblname  short max
throws metaexception  texception
return client get_index_names dbname  tblname  max
/**
* list all the index names of the give base table.
*
* @param dbname
* @param tblname
* @param max
* @return list of indexes
* @throws metaexception
* @throws texception
*/
public list<index> listindexes string dbname  string tblname  short max
throws nosuchobjectexception  metaexception  texception
return client get_indexes dbname  tblname  max
/** {@inheritdoc} */
public boolean updatetablecolumnstatistics columnstatistics statsobj
throws nosuchobjectexception  invalidobjectexception  metaexception  texception
invalidinputexception
return client update_table_column_statistics statsobj
/** {@inheritdoc} */
public boolean updatepartitioncolumnstatistics columnstatistics statsobj
throws nosuchobjectexception  invalidobjectexception  metaexception  texception
invalidinputexception
return client update_partition_column_statistics statsobj
/** {@inheritdoc} */
public columnstatistics gettablecolumnstatistics string dbname  string tablename string colname
throws nosuchobjectexception  metaexception  texception  invalidinputexception
invalidobjectexception
return client get_table_column_statistics dbname  tablename  colname
/** {@inheritdoc} */
public columnstatistics getpartitioncolumnstatistics string dbname  string tablename
string partname  string colname  throws nosuchobjectexception  metaexception  texception
invalidinputexception  invalidobjectexception
return client get_partition_column_statistics dbname  tablename  partname  colname
/** {@inheritdoc} */
public boolean deletepartitioncolumnstatistics string dbname  string tablename  string partname
string colname  throws nosuchobjectexception  invalidobjectexception  metaexception
texception  invalidinputexception
return client delete_partition_column_statistics dbname  tablename  partname  colname
/** {@inheritdoc} */
public boolean deletetablecolumnstatistics string dbname  string tablename  string colname
throws nosuchobjectexception  invalidobjectexception  metaexception  texception
invalidinputexception
return client delete_table_column_statistics dbname  tablename  colname
/**
* @param db
* @param tablename
* @throws unknowntableexception
* @throws unknowndbexception
* @throws metaexception
* @throws texception
* @see org.apache.hadoop.hive.metastore.api.thrifthivemetastore.iface#get_schema(java.lang.string,
*      java.lang.string)
*/
public list<fieldschema> getschema string db  string tablename
throws metaexception  texception  unknowntableexception
unknowndbexception
return deepcopyfieldschemas client get_schema db  tablename
public string getconfigvalue string name  string defaultvalue
throws texception  configvalsecurityexception
return client get_config_value name  defaultvalue
public partition getpartition string db  string tablename  string partname
throws metaexception  texception  unknowntableexception  nosuchobjectexception
return deepcopy client get_partition_by_name db  tablename  partname
public partition appendpartitionbyname string dbname  string tablename  string partname
throws invalidobjectexception  alreadyexistsexception  metaexception  texception
return deepcopy
client append_partition_by_name dbname  tablename  partname
public boolean droppartitionbyname string dbname  string tablename  string partname  boolean deletedata
throws nosuchobjectexception  metaexception  texception
return client drop_partition_by_name dbname  tablename  partname  deletedata
private hivemetahook gethook table tbl  throws metaexception
if  hookloader    null
return null
return hookloader gethook tbl
@override
public list<string> partitionnametovals string name  throws metaexception  texception
return client partition_name_to_vals name
@override
public map<string  string> partitionnametospec string name  throws metaexception  texception
return client partition_name_to_spec name
/**
* @param partition
* @return
*/
private partition deepcopy partition partition
partition copy   null
if  partition    null
copy   new partition partition
return copy
private database deepcopy database database
database copy   null
if  database    null
copy   new database database
return copy
private table deepcopy table table
table copy   null
if  table    null
copy   new table table
return copy
private index deepcopy index index
index copy   null
if  index    null
copy   new index index
return copy
private type deepcopy type type
type copy   null
if  type    null
copy   new type type
return copy
private fieldschema deepcopy fieldschema schema
fieldschema copy   null
if  schema    null
copy   new fieldschema schema
return copy
private list<partition> deepcopypartitions list<partition> partitions
list<partition> copy   null
if  partitions    null
copy   new arraylist<partition>
for  partition part   partitions
copy add deepcopy part
return copy
private list<table> deepcopytables list<table> tables
list<table> copy   null
if  tables    null
copy   new arraylist<table>
for  table tab   tables
copy add deepcopy tab
return copy
private list<fieldschema> deepcopyfieldschemas list<fieldschema> schemas
list<fieldschema> copy   null
if  schemas    null
copy   new arraylist<fieldschema>
for  fieldschema schema   schemas
copy add deepcopy schema
return copy
@override
public boolean dropindex string dbname  string tblname  string name
boolean deletedata  throws nosuchobjectexception  metaexception
texception
return client drop_index_by_name dbname  tblname  name  deletedata
@override
public boolean grant_role string rolename  string username
principaltype principaltype  string grantor  principaltype grantortype
boolean grantoption  throws metaexception  texception
return client grant_role rolename  username  principaltype  grantor
grantortype  grantoption
@override
public boolean create_role role role
throws metaexception  texception
return client create_role role
@override
public boolean drop_role string rolename  throws metaexception  texception
return client drop_role rolename
@override
public list<role> list_roles string principalname
principaltype principaltype  throws metaexception  texception
return client list_roles principalname  principaltype
@override
public list<string> listrolenames   throws metaexception  texception
return client get_role_names
@override
public boolean grant_privileges privilegebag privileges
throws metaexception  texception
return client grant_privileges privileges
@override
public boolean revoke_role string rolename  string username
principaltype principaltype  throws metaexception  texception
return client revoke_role rolename  username  principaltype
@override
public boolean revoke_privileges privilegebag privileges  throws metaexception
texception
return client revoke_privileges privileges
@override
public principalprivilegeset get_privilege_set hiveobjectref hiveobject
string username  list<string> groupnames  throws metaexception
texception
return client get_privilege_set hiveobject  username  groupnames
@override
public list<hiveobjectprivilege> list_privileges string principalname
principaltype principaltype  hiveobjectref hiveobject
throws metaexception  texception
return client list_privileges principalname  principaltype  hiveobject
public string getdelegationtoken string renewerkerberosprincipalname  throws
metaexception  texception  ioexception
//a convenience method that makes the intended owner for the delegation
//token request the current user
string owner   conf getuser
return getdelegationtoken owner  renewerkerberosprincipalname
@override
public string getdelegationtoken string owner  string renewerkerberosprincipalname  throws
metaexception  texception
if localmetastore
throw new unsupportedoperationexception
return client get_delegation_token owner  renewerkerberosprincipalname
@override
public long renewdelegationtoken string tokenstrform  throws metaexception  texception
if localmetastore
throw new unsupportedoperationexception
return client renew_delegation_token tokenstrform
@override
public void canceldelegationtoken string tokenstrform  throws metaexception  texception
if localmetastore
throw new unsupportedoperationexception
client cancel_delegation_token tokenstrform
/**
* creates a synchronized wrapper for any {@link imetastoreclient}.
* this may be used by multi-threaded applications until we have
* fixed all reentrancy bugs.
*
* @param client unsynchronized client
*
* @return synchronized client
*/
public static imetastoreclient newsynchronizedclient
imetastoreclient client
return  imetastoreclient  proxy newproxyinstance
hivemetastoreclient class getclassloader
new class    imetastoreclient class
new synchronizedhandler client
private static class synchronizedhandler implements invocationhandler
private final imetastoreclient client
private static final object lock   synchronizedhandler class
synchronizedhandler imetastoreclient client
this client   client
public object invoke object proxy  method method  object  args
throws throwable
try
synchronized  lock
return method invoke client  args
catch  invocationtargetexception e
throw e gettargetexception
@override
public void markpartitionforevent string db_name  string tbl_name  map<string string> partkvs  partitioneventtype eventtype
throws metaexception  texception  nosuchobjectexception  unknowndbexception  unknowntableexception
invalidpartitionexception  unknownpartitionexception
assert db_name    null
assert tbl_name    null
assert partkvs    null
client markpartitionforevent db_name  tbl_name  partkvs  eventtype
@override
public boolean ispartitionmarkedforevent string db_name  string tbl_name  map<string string> partkvs  partitioneventtype eventtype
throws metaexception  nosuchobjectexception  unknowntableexception  unknowndbexception  texception
invalidpartitionexception  unknownpartitionexception
assert db_name    null
assert tbl_name    null
assert partkvs    null
return client ispartitionmarkedforevent db_name  tbl_name  partkvs  eventtype