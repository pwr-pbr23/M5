/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql exec
import java util arraylist
import java util hashmap
import java util iterator
import java util list
import java util map
import java util map entry
import org apache hadoop conf configuration
import org apache hadoop hive ql exec persistence abstractmapjoinkey
import org apache hadoop hive ql exec persistence mapjoindoublekeys
import org apache hadoop hive ql exec persistence mapjoinobjectkey
import org apache hadoop hive ql exec persistence mapjoinsinglekey
import org apache hadoop hive ql exec persistence rowcontainer
import org apache hadoop hive ql io hivesequencefileoutputformat
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql plan exprnodedesc
import org apache hadoop hive ql plan joindesc
import org apache hadoop hive ql plan tabledesc
import org apache hadoop hive serde2 serde
import org apache hadoop hive serde2 serdeexception
import org apache hadoop hive serde2 lazybinary lazybinaryserde
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorfactory
import org apache hadoop hive serde2 objectinspector objectinspectorutils
import org apache hadoop hive serde2 objectinspector primitiveobjectinspector
import org apache hadoop hive serde2 objectinspector structobjectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorutils objectinspectorcopyoption
import org apache hadoop hive serde2 typeinfo typeinfofactory
import org apache hadoop hive serde2 io bytewritable
import org apache hadoop mapred reporter
import org apache hadoop mapred sequencefileinputformat
import org apache hadoop util reflectionutils
public class joinutil
public static hashmap<byte  list<objectinspector>> getobjectinspectorsfromevaluators
map<byte  list<exprnodeevaluator>> exprentries
objectinspector inputobjinspector
int posbigtablealias  throws hiveexception
hashmap<byte  list<objectinspector>> result   new hashmap<byte  list<objectinspector>>
for  entry<byte  list<exprnodeevaluator>> exprentry   exprentries
entryset
byte alias   exprentry getkey
//get big table
if alias     byte  posbigtablealias
//skip the big tables
continue
list<exprnodeevaluator> exprlist   exprentry getvalue
arraylist<objectinspector> fieldoilist   new arraylist<objectinspector>
for  int i   0  i < exprlist size    i
fieldoilist add exprlist get i  initialize inputobjinspector
result put alias  fieldoilist
return result
public static hashmap<byte  list<objectinspector>> getstandardobjectinspectors
map<byte  list<objectinspector>> aliastoobjectinspectors
int posbigtablealias
hashmap<byte  list<objectinspector>> result   new hashmap<byte  list<objectinspector>>
for  entry<byte  list<objectinspector>> oientry   aliastoobjectinspectors
entryset
byte alias   oientry getkey
//get big table
if alias     byte  posbigtablealias
//skip the big tables
continue
list<objectinspector> oilist   oientry getvalue
arraylist<objectinspector> fieldoilist   new arraylist<objectinspector>
oilist size
for  int i   0  i < oilist size    i
fieldoilist add objectinspectorutils getstandardobjectinspector oilist
get i   objectinspectorcopyoption writable
result put alias  fieldoilist
return result
public static int populatejoinkeyvalue map<byte  list<exprnodeevaluator>> outmap
map<byte  list<exprnodedesc>> inputmap
byte order
int posbigtablealias
int total   0
iterator<map entry<byte  list<exprnodedesc>>> entryiter   inputmap
entryset   iterator
while  entryiter hasnext
map entry<byte  list<exprnodedesc>> e   entryiter next
byte key   order
list<exprnodeevaluator> valuefields   new arraylist<exprnodeevaluator>
list<exprnodedesc> expr   e getvalue
int sz   expr size
total    sz
for  int j   0  j < sz  j
if key     byte  posbigtablealias
valuefields add null
else
valuefields add exprnodeevaluatorfactory get expr get j
outmap put key  valuefields
return total
/**
* return the key as a standard object. standardobject can be inspected by a
* standard objectinspector.
*/
public static arraylist<object> computekeys object row
list<exprnodeevaluator> keyfields  list<objectinspector> keyfieldsoi
throws hiveexception
// compute the keys
arraylist<object> nr   new arraylist<object> keyfields size
for  int i   0  i < keyfields size    i
nr add objectinspectorutils copytostandardobject keyfields get i
evaluate row   keyfieldsoi get i
objectinspectorcopyoption writable
return nr
/**
* return the key as a standard object. standardobject can be inspected by a
* standard objectinspector.
*/
public static abstractmapjoinkey computemapjoinkeys object row
list<exprnodeevaluator> keyfields  list<objectinspector> keyfieldsoi
throws hiveexception
int size   keyfields size
if size    1
object obj    objectinspectorutils copytostandardobject keyfields get 0
evaluate row   keyfieldsoi get 0
objectinspectorcopyoption writable
mapjoinsinglekey key   new mapjoinsinglekey obj
return key
else if size    2
object obj1    objectinspectorutils copytostandardobject keyfields get 0
evaluate row   keyfieldsoi get 0
objectinspectorcopyoption writable
object obj2    objectinspectorutils copytostandardobject keyfields get 1
evaluate row   keyfieldsoi get 1
objectinspectorcopyoption writable
mapjoindoublekeys key   new mapjoindoublekeys obj1 obj2
return key
else
// compute the keys
object nr   new object
for  int i   0  i < keyfields size    i
nr    objectinspectorutils copytostandardobject keyfields get i
evaluate row   keyfieldsoi get i
objectinspectorcopyoption writable
mapjoinobjectkey key   new mapjoinobjectkey nr
return key
/**
* return the value as a standard object. standardobject can be inspected by a
* standard objectinspector.
*/
public static object computemapjoinvalues object row
list<exprnodeevaluator> valuefields  list<objectinspector> valuefieldsoi
list<exprnodeevaluator> filters  list<objectinspector> filtersoi
int filtermap  throws hiveexception
// compute the keys
object nr
if  filtermap    null
nr   new object
// add whether the row is filtered or not.
nr   new bytewritable isfiltered row  filters  filtersoi  filtermap
else
nr   new object
for  int i   0  i < valuefields size    i
nr   objectinspectorutils copytostandardobject valuefields get i
evaluate row   valuefieldsoi get i
objectinspectorcopyoption writable
return nr
/**
* return the value as a standard object. standardobject can be inspected by a
* standard objectinspector.
*/
public static arraylist<object> computevalues object row
list<exprnodeevaluator> valuefields  list<objectinspector> valuefieldsoi
list<exprnodeevaluator> filters  list<objectinspector> filtersoi
int filtermap  throws hiveexception
// compute the values
arraylist<object> nr   new arraylist<object> valuefields size
for  int i   0  i < valuefields size    i
nr add objectinspectorutils copytostandardobject valuefields get i
evaluate row   valuefieldsoi get i
objectinspectorcopyoption writable
if  filtermap    null
// add whether the row is filtered or not.
nr add new bytewritable isfiltered row  filters  filtersoi  filtermap
return nr
private static final byte masks   new byte
0x01  0x02  0x04  0x08  0x10  0x20  0x40   byte  0x80
/**
* returns true if the row does not pass through filters.
*/
protected static byte isfiltered object row  list<exprnodeevaluator> filters
list<objectinspector> ois  int filtermap  throws hiveexception
// apply join filters on the row.
byte ret   0
int j   0
for  int i   0  i < filtermap length  i    2
int tag   filtermap
int length   filtermap
boolean passed   true
for    length > 0  length    j
if  passed
object condition   filters get j  evaluate row
boolean result    boolean    primitiveobjectinspector
ois get j   getprimitivejavaobject condition
if  result    null     result
passed   false
if   passed
ret    masks
return ret
protected static boolean isfiltered byte filter  int tag
return  filter   masks     0
protected static boolean hasanyfiltered byte tag
return tag    0
public static tabledesc getspilltabledesc byte alias
map<byte  tabledesc> spilltabledesc joindesc conf
boolean nofilter
if  spilltabledesc    null    spilltabledesc size      0
spilltabledesc   initspilltables conf nofilter
return spilltabledesc get alias
public static map<byte  tabledesc> getspilltabledesc
map<byte  tabledesc> spilltabledesc joindesc conf
boolean nofilter
if  spilltabledesc    null
spilltabledesc   initspilltables conf nofilter
return spilltabledesc
public static serde getspillserde byte alias
map<byte  tabledesc> spilltabledesc joindesc conf
boolean nofilter
tabledesc desc   getspilltabledesc alias  spilltabledesc  conf  nofilter
if  desc    null
return null
serde sd    serde  reflectionutils newinstance desc getdeserializerclass

try
sd initialize null  desc getproperties
catch  serdeexception e
e printstacktrace
return null
return sd
public static map<byte  tabledesc> initspilltables joindesc conf  boolean nofilter
map<byte  list<exprnodedesc>> exprs   conf getexprs
map<byte  tabledesc> spilltabledesc   new hashmap<byte  tabledesc> exprs size
for  int tag   0  tag < exprs size    tag
list<exprnodedesc> valuecols   exprs get  byte  tag
int columnsize   valuecols size
stringbuilder colnames   new stringbuilder
stringbuilder coltypes   new stringbuilder
if  columnsize <  0
continue
for  int k   0  k < columnsize  k
string newcolname   tag       k     any name  it does not
// matter.
colnames append newcolname
colnames append
coltypes append valuecols get k  gettypestring
coltypes append
if   nofilter
colnames append
colnames append
coltypes append typeinfofactory bytetypeinfo gettypename
coltypes append
// remove the last ','
colnames setlength colnames length     1
coltypes setlength coltypes length     1
tabledesc tbldesc   new tabledesc lazybinaryserde class
sequencefileinputformat class  hivesequencefileoutputformat class
utilities makeproperties
org apache hadoop hive serde serdeconstants serialization_format
utilities ctrlacode
org apache hadoop hive serde serdeconstants list_columns  colnames
tostring
org apache hadoop hive serde serdeconstants list_column_types
coltypes tostring
spilltabledesc put  byte  tag  tbldesc
return spilltabledesc
public static rowcontainer getrowcontainer configuration hconf
list<objectinspector> structfieldobjectinspectors
byte alias int containersize  map<byte  tabledesc> spilltabledesc
joindesc conf boolean nofilter  reporter reporter  throws hiveexception
tabledesc tbldesc   joinutil getspilltabledesc alias spilltabledesc conf  nofilter
serde serde   joinutil getspillserde alias  spilltabledesc  conf  nofilter
if  serde    null
containersize    1
rowcontainer rc   new rowcontainer containersize  hconf  reporter
structobjectinspector rcoi   null
if  tbldesc    null
// arbitrary column names used internally for serializing to spill table
list<string> colnames   utilities getcolumnnames tbldesc getproperties
// object inspector for serializing input tuples
rcoi   objectinspectorfactory getstandardstructobjectinspector colnames
structfieldobjectinspectors
rc setserde serde  rcoi
rc settabledesc tbldesc
return rc