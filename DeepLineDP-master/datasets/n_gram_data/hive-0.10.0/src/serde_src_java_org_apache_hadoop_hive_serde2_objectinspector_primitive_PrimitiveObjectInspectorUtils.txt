/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 objectinspector primitive
import java io datainput
import java io dataoutput
import java io ioexception
import java sql timestamp
import java util hashmap
import java util map
import org apache hadoop hive serde serdeconstants
import org apache hadoop hive serde2 io bytewritable
import org apache hadoop hive serde2 io doublewritable
import org apache hadoop hive serde2 io shortwritable
import org apache hadoop hive serde2 io timestampwritable
import org apache hadoop hive serde2 lazy lazyinteger
import org apache hadoop hive serde2 lazy lazylong
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspector category
import org apache hadoop hive serde2 objectinspector primitiveobjectinspector
import org apache hadoop hive serde2 objectinspector primitiveobjectinspector primitivecategory
import org apache hadoop io booleanwritable
import org apache hadoop io byteswritable
import org apache hadoop io floatwritable
import org apache hadoop io intwritable
import org apache hadoop io longwritable
import org apache hadoop io nullwritable
import org apache hadoop io text
import org apache hadoop io writable
import org apache hadoop io writableutils
/**
* objectinspectorfactory is the primary way to create new objectinspector
* instances.
*
* serde classes should call the static functions in this library to create an
* objectinspector to return to the caller of serde2.getobjectinspector().
*/
public final class primitiveobjectinspectorutils
/**
* typeentry stores information about a hive primitive typeinfo.
*/
public static class primitivetypeentry implements writable
/**
* the category of the primitivetype.
*/
public primitiveobjectinspector primitivecategory primitivecategory
/**
* primitivejavatype refers to java types like int, double, etc.
*/
public class<?> primitivejavatype
/**
* primitivejavaclass refers to java classes like integer, double, string
* etc.
*/
public class<?> primitivejavaclass
/**
* writableclass refers to hadoop writable classes like intwritable,
* doublewritable, text etc.
*/
public class<?> primitivewritableclass
/**
* typename is the name of the type as in ddl.
*/
public string typename
primitivetypeentry
primitiveobjectinspector primitivecategory primitivecategory
string typename  class<?> primitivetype  class<?> javaclass
class<?> hiveclass
this primitivecategory   primitivecategory
primitivejavatype   primitivetype
primitivejavaclass   javaclass
primitivewritableclass   hiveclass
this typename   typename
@override
public void readfields datainput in  throws ioexception
primitivecategory   writableutils readenum in
primitiveobjectinspector primitivecategory class
typename   writableutils readstring in
try
primitivejavatype   class forname writableutils readstring in
primitivejavaclass   class forname writableutils readstring in
primitivewritableclass   class forname writableutils readstring in
catch  classnotfoundexception e
throw new ioexception e
@override
public void write dataoutput out  throws ioexception
writableutils writeenum out  primitivecategory
writableutils writestring out  typename
writableutils writestring out  primitivejavatype getname
writableutils writestring out  primitivejavaclass getname
writableutils writestring out  primitivewritableclass getname
static final map<primitivecategory  primitivetypeentry> primitivecategorytotypeentry   new hashmap<primitivecategory  primitivetypeentry>
static final map<class<?>  primitivetypeentry> primitivejavatypetotypeentry   new hashmap<class<?>  primitivetypeentry>
static final map<class<?>  primitivetypeentry> primitivejavaclasstotypeentry   new hashmap<class<?>  primitivetypeentry>
static final map<class<?>  primitivetypeentry> primitivewritableclasstotypeentry   new hashmap<class<?>  primitivetypeentry>
static final map<string  primitivetypeentry> typenametotypeentry   new hashmap<string  primitivetypeentry>
static void registertype primitivetypeentry t
if  t primitivecategory    primitivecategory unknown
primitivecategorytotypeentry put t primitivecategory  t
if  t primitivejavatype    null
primitivejavatypetotypeentry put t primitivejavatype  t
if  t primitivejavaclass    null
primitivejavaclasstotypeentry put t primitivejavaclass  t
if  t primitivewritableclass    null
primitivewritableclasstotypeentry put t primitivewritableclass  t
if  t typename    null
typenametotypeentry put t typename  t
public static final primitivetypeentry binarytypeentry   new primitivetypeentry
primitivecategory binary  serdeconstants binary_type_name  byte class
byte class  byteswritable class
public static final primitivetypeentry stringtypeentry   new primitivetypeentry
primitivecategory string  serdeconstants string_type_name  null  string class
text class
public static final primitivetypeentry booleantypeentry   new primitivetypeentry
primitivecategory boolean  serdeconstants boolean_type_name  boolean type
boolean class  booleanwritable class
public static final primitivetypeentry inttypeentry   new primitivetypeentry
primitivecategory int  serdeconstants int_type_name  integer type
integer class  intwritable class
public static final primitivetypeentry longtypeentry   new primitivetypeentry
primitivecategory long  serdeconstants bigint_type_name  long type
long class  longwritable class
public static final primitivetypeentry floattypeentry   new primitivetypeentry
primitivecategory float  serdeconstants float_type_name  float type
float class  floatwritable class
public static final primitivetypeentry voidtypeentry   new primitivetypeentry
primitivecategory void  serdeconstants void_type_name  void type  void class
nullwritable class
// no corresponding writable classes for the following 3 in hadoop 0.17.0
public static final primitivetypeentry doubletypeentry   new primitivetypeentry
primitivecategory double  serdeconstants double_type_name  double type
double class  doublewritable class
public static final primitivetypeentry bytetypeentry   new primitivetypeentry
primitivecategory byte  serdeconstants tinyint_type_name  byte type
byte class  bytewritable class
public static final primitivetypeentry shorttypeentry   new primitivetypeentry
primitivecategory short  serdeconstants smallint_type_name  short type
short class  shortwritable class
public static final primitivetypeentry timestamptypeentry   new primitivetypeentry
primitivecategory timestamp  serdeconstants timestamp_type_name  null
object class  timestampwritable class
// the following is a complex type for special handling
public static final primitivetypeentry unknowntypeentry   new primitivetypeentry
primitivecategory unknown     null  object class  null
static
registertype binarytypeentry
registertype stringtypeentry
registertype booleantypeentry
registertype inttypeentry
registertype longtypeentry
registertype floattypeentry
registertype voidtypeentry
registertype doubletypeentry
registertype bytetypeentry
registertype shorttypeentry
registertype timestamptypeentry
registertype unknowntypeentry
/**
* return whether the class is a java primitive type or a java primitive
* class.
*/
public static class<?> primitivejavatypetoclass class<?> clazz
primitivetypeentry t   primitivejavatypetotypeentry get clazz
return t    null ? clazz   t primitivejavaclass
/**
* whether the class is a java primitive type or a java primitive class.
*/
public static boolean isprimitivejava class<?> clazz
return primitivejavatypetotypeentry get clazz     null
primitivejavaclasstotypeentry get clazz     null
/**
* whether the class is a java primitive type.
*/
public static boolean isprimitivejavatype class<?> clazz
return primitivejavatypetotypeentry get clazz     null
/**
* whether the class is a java primitive class.
*/
public static boolean isprimitivejavaclass class<?> clazz
return primitivejavaclasstotypeentry get clazz     null
/**
* whether the class is a hive primitive writable class.
*/
public static boolean isprimitivewritableclass class<?> clazz
return primitivewritableclasstotypeentry get clazz     null
/**
* get the typename from a java primitive type or java primitiveclass.
*/
public static string gettypenamefromprimitivejava class<?> clazz
primitivetypeentry t   primitivejavatypetotypeentry get clazz
if  t    null
t   primitivejavaclasstotypeentry get clazz
return t    null ? null   t typename
/**
* get the typename from a primitive writable class.
*/
public static string gettypenamefromprimitivewritable class<?> clazz
primitivetypeentry t   primitivewritableclasstotypeentry get clazz
return t    null ? null   t typename
/**
* get the typename from a java primitive type or java primitiveclass.
*/
public static primitivetypeentry gettypeentryfromprimitivecategory
primitivecategory category
return primitivecategorytotypeentry get category
/**
* get the typeentry for a java primitive type or java primitiveclass.
*/
public static primitivetypeentry gettypeentryfromprimitivejava class<?> clazz
primitivetypeentry t   primitivejavatypetotypeentry get clazz
if  t    null
t   primitivejavaclasstotypeentry get clazz
return t
/**
* get the typeentry for a java primitive type or java primitiveclass.
*/
public static primitivetypeentry gettypeentryfromprimitivejavatype
class<?> clazz
return primitivejavatypetotypeentry get clazz
/**
* get the typeentry for a java primitive type or java primitiveclass.
*/
public static primitivetypeentry gettypeentryfromprimitivejavaclass
class<?> clazz
return primitivejavaclasstotypeentry get clazz
/**
* get the typeentry for a primitive writable class.
*/
public static primitivetypeentry gettypeentryfromprimitivewritableclass
class<?> clazz
return primitivewritableclasstotypeentry get clazz
/**
* get the typeentry for a primitive writable class.
*/
public static primitivetypeentry gettypeentryfromtypename string typename
return typenametotypeentry get typename
/**
* compare 2 primitive objects. conversion not allowed. note that null does
* not equal to null according to sql standard.
*/
public static boolean compareprimitiveobjects object o1
primitiveobjectinspector oi1  object o2  primitiveobjectinspector oi2
if  o1    null    o2    null
return false
if  oi1 getprimitivecategory      oi2 getprimitivecategory
return false
switch  oi1 getprimitivecategory
case boolean
return   booleanobjectinspector  oi1  get o1       booleanobjectinspector  oi2
get o2
case byte
return   byteobjectinspector  oi1  get o1       byteobjectinspector  oi2
get o2
case short
return   shortobjectinspector  oi1  get o1       shortobjectinspector  oi2
get o2
case int
return   intobjectinspector  oi1  get o1       intobjectinspector  oi2
get o2
case long
return   longobjectinspector  oi1  get o1       longobjectinspector  oi2
get o2
case float
return   floatobjectinspector  oi1  get o1       floatobjectinspector  oi2
get o2
case double
return   doubleobjectinspector  oi1  get o1       doubleobjectinspector  oi2
get o2
case string
writable t1     stringobjectinspector  oi1
getprimitivewritableobject o1
writable t2     stringobjectinspector  oi2
getprimitivewritableobject o2
return t1 equals t2
case timestamp
return   timestampobjectinspector  oi1  getprimitivewritableobject o1
equals   timestampobjectinspector  oi2  getprimitivewritableobject o2
case binary
return   binaryobjectinspector  oi1  getprimitivewritableobject o1
equals   binaryobjectinspector  oi2  getprimitivewritableobject o2
default
return false
/**
* convert a primitive object to double.
*/
public static double convertprimitivetodouble object o  primitiveobjectinspector oi
switch  oi getprimitivecategory
case boolean
return   booleanobjectinspector  oi  get o  ? 1   0
case byte
return   byteobjectinspector  oi  get o
case short
return   shortobjectinspector  oi  get o
case int
return   intobjectinspector  oi  get o
case long
return   longobjectinspector  oi  get o
case float
return   floatobjectinspector  oi  get o
case double
return   doubleobjectinspector  oi  get o
case string
return double valueof   stringobjectinspector  oi  getprimitivejavaobject o
case timestamp
return   timestampobjectinspector  oi  getprimitivewritableobject o
getdouble
default
throw new numberformatexception
/**
* compare 2 primitive objects with their object inspector, conversions
* allowed. note that null does not equal to null according to sql standard.
*/
public static boolean compareprimitiveobjectswithconversion object o1
primitiveobjectinspector oi1  object o2  primitiveobjectinspector oi2
if  o1    null    o2    null
return false
if  oi1 getprimitivecategory      oi2 getprimitivecategory
return compareprimitiveobjects o1  oi1  o2  oi2
// if not equal, convert all to double and compare
try
return convertprimitivetodouble o1  oi1     convertprimitivetodouble o2
oi2
catch  numberformatexception e
return false
/**
* get the boolean value out of a primitive object. note that
* nullpointerexception will be thrown if o is null. note that
* numberformatexception will be thrown if o is not a valid number.
*/
public static boolean getboolean object o  primitiveobjectinspector oi
boolean result   false
switch  oi getprimitivecategory
case void
result   false
break
case boolean
result     booleanobjectinspector  oi  get o
break
case byte
result     byteobjectinspector  oi  get o     0
break
case short
result     shortobjectinspector  oi  get o     0
break
case int
result     intobjectinspector  oi  get o     0
break
case long
result    int    longobjectinspector  oi  get o     0
break
case float
result    int    floatobjectinspector  oi  get o     0
break
case double
result    int    doubleobjectinspector  oi  get o     0
break
case string
stringobjectinspector soi    stringobjectinspector  oi
if  soi preferwritable
text t   soi getprimitivewritableobject o
result   t getlength      0
else
string s   soi getprimitivejavaobject o
result   s length      0
break
case timestamp
result      timestampobjectinspector  oi
getprimitivewritableobject o  getseconds      0
break
default
throw new runtimeexception
oi gettypename
return result
/**
* get the byte value out of a primitive object. note that
* nullpointerexception will be thrown if o is null. note that
* numberformatexception will be thrown if o is not a valid number.
*/
public static byte getbyte object o  primitiveobjectinspector oi
return  byte  getint o  oi
/**
* get the short value out of a primitive object. note that
* nullpointerexception will be thrown if o is null. note that
* numberformatexception will be thrown if o is not a valid number.
*/
public static short getshort object o  primitiveobjectinspector oi
return  short  getint o  oi
/**
* get the integer value out of a primitive object. note that
* nullpointerexception will be thrown if o is null. note that
* numberformatexception will be thrown if o is not a valid number.
*/
public static int getint object o  primitiveobjectinspector oi
int result   0
switch  oi getprimitivecategory
case void
result   0
break
case boolean
result      booleanobjectinspector  oi  get o  ? 1   0
break
case byte
result     byteobjectinspector  oi  get o
break
case short
result     shortobjectinspector  oi  get o
break
case int
result     intobjectinspector  oi  get o
break
case long
result    int    longobjectinspector  oi  get o
break
case float
result    int    floatobjectinspector  oi  get o
break
case double
result    int    doubleobjectinspector  oi  get o
break
case string
stringobjectinspector soi    stringobjectinspector  oi
if  soi preferwritable
text t   soi getprimitivewritableobject o
result   lazyinteger parseint t getbytes    0  t getlength
else
string s   soi getprimitivejavaobject o
result   integer parseint s
break
case timestamp
result    int     timestampobjectinspector  oi
getprimitivewritableobject o  getseconds
break
default
throw new runtimeexception
oi gettypename
return result
/**
* get the long value out of a primitive object. note that
* nullpointerexception will be thrown if o is null. note that
* numberformatexception will be thrown if o is not a valid number.
*/
public static long getlong object o  primitiveobjectinspector oi
long result   0
switch  oi getprimitivecategory
case void
result   0
break
case boolean
result      booleanobjectinspector  oi  get o  ? 1   0
break
case byte
result     byteobjectinspector  oi  get o
break
case short
result     shortobjectinspector  oi  get o
break
case int
result     intobjectinspector  oi  get o
break
case long
result     longobjectinspector  oi  get o
break
case float
result    long    floatobjectinspector  oi  get o
break
case double
result    long    doubleobjectinspector  oi  get o
break
case string
stringobjectinspector soi    stringobjectinspector  oi
if  soi preferwritable
text t   soi getprimitivewritableobject o
result   lazylong parselong t getbytes    0  t getlength
else
string s   soi getprimitivejavaobject o
result   long parselong s
break
case timestamp
result     timestampobjectinspector  oi  getprimitivewritableobject o
getseconds
break
default
throw new runtimeexception
oi gettypename
return result
/**
* get the double value out of a primitive object. note that
* nullpointerexception will be thrown if o is null. note that
* numberformatexception will be thrown if o is not a valid number.
*/
public static double getdouble object o  primitiveobjectinspector oi
double result   0
switch  oi getprimitivecategory
case void
result   0
break
case boolean
result      booleanobjectinspector  oi  get o  ? 1   0
break
case byte
result     byteobjectinspector  oi  get o
break
case short
result     shortobjectinspector  oi  get o
break
case int
result     intobjectinspector  oi  get o
break
case long
result     longobjectinspector  oi  get o
break
case float
result     floatobjectinspector  oi  get o
break
case double
result     doubleobjectinspector  oi  get o
break
case string
stringobjectinspector soi    stringobjectinspector  oi
string s   soi getprimitivejavaobject o
result   double parsedouble s
break
case timestamp
result     timestampobjectinspector  oi  getprimitivewritableobject o  getdouble
break
default
throw new runtimeexception
oi gettypename
return result
/**
* get the float value out of a primitive object. note that
* nullpointerexception will be thrown if o is null. note that
* numberformatexception will be thrown if o is not a valid number.
*/
public static float getfloat object o  primitiveobjectinspector oi
return  float  getdouble o  oi
/**
* get the string value out of a primitive object. note that
* nullpointerexception will be thrown if o is null. note that
* runtimeexception will be thrown if o is not a valid string.
*/
public static string getstring object o  primitiveobjectinspector oi
if  o    null
return null
string result   null
switch  oi getprimitivecategory
case void
result   null
break
case boolean
result   string valueof    booleanobjectinspector  oi  get o
break
case byte
result   string valueof    byteobjectinspector  oi  get o
break
case short
result   string valueof    shortobjectinspector  oi  get o
break
case int
result   string valueof    intobjectinspector  oi  get o
break
case long
result   string valueof    longobjectinspector  oi  get o
break
case float
result   string valueof    floatobjectinspector  oi  get o
break
case double
result   string valueof    doubleobjectinspector  oi  get o
break
case string
stringobjectinspector soi    stringobjectinspector  oi
result   soi getprimitivejavaobject o
break
case timestamp
result     timestampobjectinspector  oi  getprimitivewritableobject o  tostring
break
default
throw new runtimeexception
oi gettypename
return result
public static byteswritable getbinary object o  primitiveobjectinspector oi
if null    o
return null
switch  oi getprimitivecategory
case void
return null
case string
text text     stringobjectinspector  oi  getprimitivewritableobject o
byteswritable bw   new byteswritable
bw set text getbytes    0  text getlength
return bw
case binary
return   binaryobjectinspector  oi  getprimitivewritableobject o
default
throw new runtimeexception
oi gettypename
public static timestamp gettimestamp object o  primitiveobjectinspector oi
if  o    null
return null
timestamp result   null
switch  oi getprimitivecategory
case void
result   null
break
case boolean
result   new timestamp   booleanobjectinspector  oi  get o  ? 1   0
break
case byte
result   new timestamp   byteobjectinspector  oi  get o
break
case short
result   new timestamp   shortobjectinspector  oi  get o
break
case int
result   new timestamp   intobjectinspector  oi  get o
break
case long
result   new timestamp   longobjectinspector  oi  get o
break
case float
result   timestampwritable floattotimestamp   floatobjectinspector  oi  get o
break
case double
result   timestampwritable doubletotimestamp   doubleobjectinspector  oi  get o
break
case string
stringobjectinspector soi    stringobjectinspector  oi
string s   soi getprimitivejavaobject o  trim
// throw away extra if more than 9 decimal places
int periodidx   s indexof
if  periodidx     1
if  s length     periodidx > 9
s   s substring 0  periodidx   10
try
result   timestamp valueof s
catch  illegalargumentexception e
result   null
break
case timestamp
result     timestampobjectinspector  oi  getprimitivewritableobject o  gettimestamp
break
default
throw new runtimeexception
oi gettypename
return result
public static class<?> getjavaprimitiveclassfromobjectinspector objectinspector oi
if  oi getcategory      category primitive
return null
primitiveobjectinspector poi    primitiveobjectinspector oi
primitivetypeentry t
gettypeentryfromprimitivecategory poi getprimitivecategory
return t    null ? null   t primitivejavaclass
private primitiveobjectinspectorutils
// prevent instantiation