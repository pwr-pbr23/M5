/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql
import java util hashmap
import java util map
import java util regex matcher
import java util regex pattern
import org antlr runtime tree tree
import org apache hadoop hive ql metadata hiveutils
import org apache hadoop hive ql parse astnode
import org apache hadoop hive ql parse astnodeorigin
/**
* list of all error messages.
* this list contains both compile time and run-time errors.
**/
public enum errormsg
// the error codes are hive-specific and partitioned into the following ranges:
// 10000 to 19999: errors occuring during semantic analysis and compilation of the query.
// 20000 to 29999: runtime errors where hive believes that retries are unlikely to succeed.
// 30000 to 39999: runtime errors which hive thinks may be transient and retrying may succeed.
// 40000 to 49999: errors where hive is unable to advise about retries.
// in addition to the error code, errormsg also has a sqlstate field.
// sqlstates are taken from section 12.5 of iso-9075.
// see http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt
// most will just rollup to the generic syntax error state of 42000, but
// specific errors can override the that state.
// see this page for how mysql uses sqlstate codes:
// http://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-error-sqlstates.html
generic_error 40000
invalid_table 10001
invalid_column 10002
invalid_index 10003
invalid_table_or_column 10004
ambiguous_table_or_column 10005
invalid_partition 10006
ambiguous_column 10007
ambiguous_table_alias 10008
invalid_table_alias 10009
no_table_alias 10010
invalid_function 10011
invalid_function_signature 10012
invalid_operator_signature 10013
invalid_argument 10014
invalid_argument_length 10015
invalid_argument_type 10016
invalid_join_condition_1 10017
invalid_join_condition_2 10018
invalid_join_condition_3 10019
invalid_transform 10020
duplicate_groupby_key 10021
unsupported_multiple_distincts 10022
no_subquery_alias 10023
no_insert_insubquery 10024
non_key_expr_in_groupby 10025
invalid_xpath 10026
invalid_path 10027
illegal_path 10028
invalid_numerical_constant 10029
invalid_arrayindex_constant 10030
invalid_mapindex_constant 10031
invalid_mapindex_type 10032
non_collection_type 10033
select_distinct_with_groupby 10034
column_repeated_in_partitioning_cols 10035
duplicate_column_names 10036
invalid_bucket_number 10037
column_repeated_in_cluster_sort 10038
sample_restriction 10039
sample_column_not_found 10040
no_partition_predicate 10041
invalid_dot 10042
invalid_tbl_ddl_serde 10043
target_table_column_mismatch 10044
table_alias_not_allowed 10045
clusterby_distributeby_conflict 10046
orderby_distributeby_conflict 10047
clusterby_sortby_conflict 10048
orderby_sortby_conflict 10049
clusterby_orderby_conflict 10050
no_limit_with_orderby 10051
no_cartesian_product 10052
union_notin_subq 10053
invalid_input_format_type 10054
invalid_output_format_type 10055
no_valid_partn 10056
no_outer_mapjoin 10057
invalid_mapjoin_hint 10058
invalid_mapjoin_table 10059
non_bucketed_table 10060
bucketed_numerator_bigger_denominator 10061
need_partition_error 10062
ctas_ctlt_coexistence 10063
lines_terminated_by_non_newline 10064
ctas_collst_coexistence 10065
ctlt_collst_coexistence 10066
invalid_select_schema 10067
ctas_parcol_coexistence 10068
ctas_multi_loadfile 10069
ctas_exttbl_coexistence 10070
insert_external_table 10071
database_not_exists 10072
table_already_exists 10073
column_alias_already_exists 10074
udtf_multiple_expr 10075
udtf_require_as 10076
udtf_no_group_by 10077
udtf_no_sort_by 10078
udtf_no_cluster_by 10079
udtf_no_distribute_by 10080
udtf_invalid_location 10081
udtf_lateral_view 10082
udtf_alias_mismatch 10083
udf_stateful_invalid_location 10084
lateral_view_with_join 10085
lateral_view_invalid_child 10086
output_specified_multiple_times 10087
invalid_as 10088
view_col_mismatch 10089
dml_against_view 10090
analyze_view 10091
view_partition_total 10092
view_partition_mismatch 10093
partition_dyn_sta_order 10094
dynamic_partition_disabled 10095
dynamic_partition_strict_mode 10096
dynamic_partition_merge 10097
nonexistpartcol 10098
unsupported_type 10099
create_non_native_as 10100
load_into_non_native 10101
lockmgr_not_specified 10102
lockmgr_not_initialized 10103
lock_cannot_be_acquired 10104
zookeeper_client_could_not_be_initialized 10105
overwrite_archived_part 10106
archive_methods_disabled 10107
archive_on_muli_parts 10108
unarchive_on_muli_parts 10109
archive_on_table 10110
reserved_part_val 10111
hold_ddltime_on_nonexist_partitions 10112
offline_table_or_partition 10113
outerjoin_uses_filters 10114
need_partition_specification 10115
invalid_metadata 10116
need_table_specification 10117
partition_exists 10118
table_data_exists 10119
incompatible_schema 10120
exim_for_non_native 10121
insert_into_bucketized_table 10122
no_compare_bigint_string 10123
no_compare_bigint_double 10124
partspec_differ_from_schema 10125
partition_column_non_primitive 10126
insert_into_dynamicpartition_ifnotexists 10127
udaf_invalid_location 10128
drop_partition_non_string_partcols_nonequality 10129
alter_command_for_views 10131
alter_command_for_tables 10132
alter_view_disallowed_op 10133
alter_table_non_native 10134
sortmerge_mapjoin_failed 10135
bucket_mapjoin_not_possible 10136
bucketed_table_metadata_incorrect 10141
joinnode_outerjoin_morethan_8 10142
invalid_jdo_filter_expression 10043
show_createtable_index 10144
load_into_stored_as_dir 10195
alter_tbl_storedasdir_not_skewed 10196
alter_tbl_skewed_loc_no_loc 10197
alter_tbl_skewed_loc_no_map 10198
support_dir_must_true_for_list_bucketing
10199
skewed_table_no_column_name 10200
skewed_table_no_column_value 10201
skewed_table_duplicate_column_names 10202
skewed_table_invalid_column 10203
skewed_table_skewed_col_name_value_mismatch_1 10204
skewed_table_skewed_col_name_value_mismatch_2 10205
skewed_table_skewed_col_name_value_mismatch_3 10206
alter_table_not_allowed_rename_skewed_column 10207
hive_internal_ddl_list_bucketing_disabled 10208
hive_grouping_sets_aggr_nomapaggr 10209
hive_grouping_sets_aggr_expression_invalid 10210
hive_grouping_sets_aggr_nofunc 10211
hive_union_remove_optimization_needs_subdirectories 10212
hive_grouping_sets_expr_not_in_groupby 10213
script_init_error 20000
script_io_error 20001
script_generic_error 20002
script_closing_error 20003
statspublisher_not_obtained 30000
statspublisher_initialization_error 30001
statspublisher_connection_error 30002
statspublisher_publishing_error 30003
statspublisher_closing_error 30004
columnstatscollector_invalid_part_key 30005
columnstatscollector_incorrect_num_part_key 30006
columnstatscollector_invalid_partition 30007
columnstatscollector_invalid_syntax 30008
columnstatscollector_parse_error 30009
columnstatscollector_io_error 30010
private int errorcode
private string mesg
private string sqlstate
private static final char space
private static final pattern error_message_pattern   pattern compile
private static final pattern error_code_pattern
pattern compile
private static map<string  errormsg> mesgtoerrormsgmap   new hashmap<string  errormsg>
private static int minmesglength    1
static
for  errormsg errormsg   values
mesgtoerrormsgmap put errormsg getmsg   trim    errormsg
int length   errormsg getmsg   trim   length
if  minmesglength     1    length < minmesglength
minmesglength   length
/**
* given an error message string, returns the errormsg object associated with it.
* @param mesg an error message string
* @return errormsg
*/
public static errormsg geterrormsg string mesg
if  mesg    null
return generic_error
// first see if there is a direct match
errormsg errormsg   mesgtoerrormsgmap get mesg
if  errormsg    null
return errormsg
// if not see if the mesg follows type of format, which is typically the
// case:
// line 1:14 table not found table_name
string truncatedmesg   mesg trim
matcher match   error_message_pattern matcher mesg
if  match matches
truncatedmesg   match group 1
// appends might exist after the root message, so strip tokens off until we
// match
while  truncatedmesg length   > minmesglength
errormsg   mesgtoerrormsgmap get truncatedmesg trim
if  errormsg    null
return errormsg
int lastspace   truncatedmesg lastindexof space
if  lastspace     1
break
// hack off the last word and try again
truncatedmesg   truncatedmesg substring 0  lastspace  trim
return generic_error
/**
* given an error code, returns the errormsg object associated with it.
* @param errorcode an error code
* @return errormsg
*/
public static errormsg geterrormsg int errorcode
for  errormsg errormsg   values
if  errormsg geterrorcode      errorcode
return errormsg
return null
/**
* for a given error message string, searches for a <code>errormsg</code> enum
* that appears to be a match. if an match is found, returns the
* <code>sqlstate</code> associated with the <code>errormsg</code>. if a match
* is not found or <code>errormsg</code> has no <code>sqlstate</code>, returns
* the <code>sqlstate</code> bound to the <code>generic_error</code>
* <code>errormsg</code>.
*
* @param mesg
*          an error message string
* @return sqlstate
*/
public static string findsqlstate string mesg
errormsg error   geterrormsg mesg
return error getsqlstate
private errormsg int errorcode  string mesg
// 42000 is the generic sqlstate for syntax error.
this errorcode  mesg
private errormsg int errorcode  string mesg  string sqlstate
this errorcode   errorcode
this mesg   mesg
this sqlstate   sqlstate
private static int getline astnode tree
if  tree getchildcount      0
return tree gettoken   getline
return getline  astnode  tree getchild 0
private static int getcharpositioninline astnode tree
if  tree getchildcount      0
return tree gettoken   getcharpositioninline
return getcharpositioninline  astnode  tree getchild 0
// dirty hack as this will throw away spaces and other things - find a better
// way!
public static string gettext astnode tree
if  tree getchildcount      0
return tree gettext
return gettext  astnode  tree getchild tree getchildcount     1
public string getmsg astnode tree
stringbuilder sb   new stringbuilder
renderposition sb  tree
sb append
sb append mesg
sb append
sb append gettext tree
sb append
renderorigin sb  tree getorigin
return sb tostring
public static void renderorigin stringbuilder sb  astnodeorigin origin
while  origin    null
sb append
sb append origin getobjecttype
sb append
sb append origin getobjectname
sb append
sb append hiveutils line_sep
sb append origin getobjectdefinition
sb append hiveutils line_sep
sb append
sb append origin getusagealias
sb append
astnode usagenode   origin getusagenode
renderposition sb  usagenode
origin   usagenode getorigin
private static void renderposition stringbuilder sb  astnode tree
sb append
sb append getline tree
sb append
sb append getcharpositioninline tree
public string getmsg tree tree
return getmsg  astnode  tree
public string getmsg astnode tree  string reason
return getmsg tree        reason
public string getmsg tree tree  string reason
return getmsg  astnode  tree  reason
public string getmsg string reason
return mesg       reason
public string geterrorcodedmsg
return     errorcode       mesg
public static pattern geterrorcodepattern
return error_code_pattern
public string getmsg
return mesg
public string getsqlstate
return sqlstate
public int geterrorcode
return errorcode