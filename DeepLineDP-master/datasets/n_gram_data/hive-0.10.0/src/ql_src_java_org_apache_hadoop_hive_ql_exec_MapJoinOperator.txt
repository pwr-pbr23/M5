/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql exec
import java io serializable
import java util arraylist
import java util hashmap
import java util map
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop filecache distributedcache
import org apache hadoop fs filesystem
import org apache hadoop fs path
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql exec hashtablesinkoperator hashtablesinkobjectctx
import org apache hadoop hive ql exec persistence abstractmapjoinkey
import org apache hadoop hive ql exec persistence hashmapwrapper
import org apache hadoop hive ql exec persistence mapjoinobjectvalue
import org apache hadoop hive ql exec persistence mapjoinrowcontainer
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql plan mapjoindesc
import org apache hadoop hive ql plan tabledesc
import org apache hadoop hive ql plan api operatortype
import org apache hadoop hive serde2 serde
import org apache hadoop hive serde2 serdeexception
import org apache hadoop hive serde2 objectinspector objectinspectorutils
import org apache hadoop hive serde2 objectinspector objectinspectorutils objectinspectorcopyoption
import org apache hadoop hive shims shimloader
import org apache hadoop util reflectionutils
/**
* map side join operator implementation.
*/
public class mapjoinoperator extends abstractmapjoinoperator<mapjoindesc> implements serializable
private static final long serialversionuid   1l
private static final log log   logfactory getlog mapjoinoperator class getname
protected transient map<byte  hashmapwrapper<abstractmapjoinkey  mapjoinobjectvalue>> mapjointables
private static final transient string fatal_err_msg
null     counter value 0 means no error
protected transient map<byte  mapjoinrowcontainer<arraylist<object>>> rowcontainermap
transient int metadatakeytag
transient int metadatavaluetag
transient boolean hashtblinitedonce
private int bigtablealias
public mapjoinoperator
public mapjoinoperator abstractmapjoinoperator<? extends mapjoindesc> mjop
super mjop
@override
protected void initializeop configuration hconf  throws hiveexception
super initializeop hconf
metadatavaluetag   new int
for  int pos   0  pos < numaliases  pos
metadatavaluetag    1
metadatakeytag    1
bigtablealias   order
mapjointables   new hashmap<byte  hashmapwrapper<abstractmapjoinkey  mapjoinobjectvalue>>
rowcontainermap   new hashmap<byte  mapjoinrowcontainer<arraylist<object>>>
// initialize the hash tables for other tables
for  int pos   0  pos < numaliases  pos
if  pos    posbigtable
continue
hashmapwrapper<abstractmapjoinkey  mapjoinobjectvalue> hashtable   new hashmapwrapper<abstractmapjoinkey  mapjoinobjectvalue>
mapjointables put byte valueof  byte  pos   hashtable
mapjoinrowcontainer<arraylist<object>> rowcontainer   new mapjoinrowcontainer<arraylist<object>>
rowcontainermap put byte valueof  byte  pos   rowcontainer
hashtblinitedonce   false
@override
protected void fatalerrormessage stringbuilder errmsg  long countercode
errmsg append     getoperatorid         id
fatal_err_msg
public void generatemapmetadata   throws hiveexception  serdeexception
// generate the meta data for key
// index for key is -1
tabledesc keytabledesc   conf getkeytbldesc
serde keyserializer    serde  reflectionutils newinstance keytabledesc getdeserializerclass

keyserializer initialize null  keytabledesc getproperties
mapjoinmetadata put integer valueof metadatakeytag   new hashtablesinkobjectctx
objectinspectorutils getstandardobjectinspector keyserializer getobjectinspector
objectinspectorcopyoption writable   keyserializer  keytabledesc  hconf
// index for values is just alias
for  int tag   0  tag < order length  tag
int alias    int  order
if  alias    this bigtablealias
continue
tabledesc valuetabledesc
if  conf getnoouterjoin
valuetabledesc   conf getvaluetbldescs   get tag
else
valuetabledesc   conf getvaluefilteredtbldescs   get tag
serde valueserde    serde  reflectionutils newinstance valuetabledesc getdeserializerclass

valueserde initialize null  valuetabledesc getproperties
mapjoinmetadata put integer valueof alias   new hashtablesinkobjectctx objectinspectorutils
getstandardobjectinspector valueserde getobjectinspector
objectinspectorcopyoption writable   valueserde  valuetabledesc  hconf
private void loadhashtable   throws hiveexception
if   this getexeccontext   getlocalwork   getinputfilechangesensitive
if  hashtblinitedonce
return
else
hashtblinitedonce   true
string basedir   null
string currentinputfile   getexeccontext   getcurrentinputfile
log info     currentinputfile
string filename   getexeccontext   getlocalwork   getbucketfilename currentinputfile
try
if  shimloader gethadoopshims   islocalmode hconf
basedir   this getexeccontext   getlocalwork   gettmpfileuri
else
path localarchives
string stageid   this getexeccontext   getlocalwork   getstageid
string suffix   utilities generatetarfilename stageid
filesystem localfs   filesystem getlocal hconf
localarchives   distributedcache getlocalcachearchives this hconf
path archive
for  int j   0  j < localarchives length  j
archive   localarchives
if   archive getname   endswith suffix
continue
path archivelocallink   archive makequalified localfs
basedir   archivelocallink touri   getpath
for  map entry<byte  hashmapwrapper<abstractmapjoinkey  mapjoinobjectvalue>> entry   mapjointables
entryset
byte pos   entry getkey
hashmapwrapper<abstractmapjoinkey  mapjoinobjectvalue> hashtable   entry getvalue
string filepath   utilities generatepath basedir  conf getdumpfileprefix    pos  filename
path path   new path filepath
log info     path tostring
hashtable initilizepersistenthash path touri   getpath
catch  exception e
log error
throw new hiveexception e getmessage
// load the hash table
@override
public void cleanupinputfilechangedop   throws hiveexception
try
if  firstrow
// generate the map metadata
generatemapmetadata
firstrow   false
loadhashtable
catch  serdeexception e
e printstacktrace
throw new hiveexception e
@override
public void processop object row  int tag  throws hiveexception
try
if  firstrow
// generate the map metadata
generatemapmetadata
firstrow   false
// get alias
alias   order
// alias = (byte)tag;
if   lastalias    null       lastalias equals alias
nextsz   joinemitinterval
// compute keys and values as standardobjects
abstractmapjoinkey key   joinutil computemapjoinkeys row  joinkeys get alias
joinkeysobjectinspectors get alias
arraylist<object> value   joinutil computevalues row  joinvalues get alias
joinvaluesobjectinspectors get alias   joinfilters get alias   joinfilterobjectinspectors
get alias   filtermap    null ? null   filtermap
// add the value to the arraylist
storage get  byte  tag  add value
for  byte pos   order
if  pos intvalue      tag
mapjoinobjectvalue o   mapjointables get pos  get key
mapjoinrowcontainer<arraylist<object>> rowcontainer   rowcontainermap get pos
// there is no join-value or join-key has all null elements
if  o    null    key hasanynulls nullsafes
if  noouterjoin
storage put pos  emptylist
else
storage put pos  dummyobjvectors
else
rowcontainer reset o getobj
storage put pos  rowcontainer
// generate the output records
checkandgenobject
// done with the row
storage get  byte  tag  clear
for  byte pos   order
if  pos intvalue      tag
storage put pos  null
catch  serdeexception e
e printstacktrace
throw new hiveexception e
@override
public void closeop boolean abort  throws hiveexception
if  mapjointables    null
for  hashmapwrapper<?  ?> hashtable   mapjointables values
hashtable close
super closeop abort
/**
* implements the getname function for the node interface.
*
* @return the name of the operator
*/
@override
public string getname
return getoperatorname
static public string getoperatorname
return
@override
public operatortype gettype
return operatortype mapjoin