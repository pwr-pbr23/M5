/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql processors
import static org apache hadoop hive serde serdeconstants serialization_null_format
import static org apache hadoop hive serde serdeconstants string_type_name
import static org apache hadoop hive serde2 metadatatypedcolumnsetserde defaultnullstring
import java util map
import java util properties
import java util sortedmap
import java util treemap
import org apache hadoop hive conf hiveconf
import org apache hadoop hive metastore api schema
import org apache hadoop hive metastore api fieldschema
import org apache hadoop hive ql parse variablesubstitution
import org apache hadoop hive ql session sessionstate
/**
* setprocessor.
*
*/
public class setprocessor implements commandprocessor
private static string prefix
public static final string env_prefix
public static final string system_prefix
public static final string hiveconf_prefix
public static final string hivevar_prefix
public static final string set_column_name
public static boolean getboolean string value
if  value equals       value equals
return true
if  value equals       value equals
return false
throw new illegalargumentexception prefix       value
private void dumpoptions properties p
sessionstate ss   sessionstate get
sortedmap<string  string> sortedmap   new treemap<string  string>
sortedmap put     ss getissilent   ?
for  object one   p keyset
string oneprop    string  one
string onevalue   p getproperty oneprop
sortedmap put oneprop  onevalue
// inserting hive variables
for  string s   ss gethivevariables   keyset
sortedmap put setprocessor hivevar_prefix   s  ss gethivevariables   get s
for  map entry<string  string> entries   sortedmap entryset
ss out println entries getkey         entries getvalue
for  map entry<string  string> entry   maptosortedmap system getenv    entryset
ss out println env_prefix entry getkey         entry getvalue
for  map entry<string  string> entry
propertiestosortedmap system getproperties    entryset
ss out println system_prefix entry getkey         entry getvalue
private void dumpoption string s
sessionstate ss   sessionstate get
if  ss getconf   get s     null
ss out println s       ss getconf   get s
else if  ss gethivevariables   containskey s
ss out println s       ss gethivevariables   get s
else
ss out println s
public void init
private commandprocessorresponse setvariable string varname  string varvalue
sessionstate ss   sessionstate get
if  varvalue contains
ss err println
if  varname startswith setprocessor env_prefix
ss err println
return new commandprocessorresponse 1
else if  varname startswith setprocessor system_prefix
string propname   varname substring setprocessor system_prefix length
system getproperties   setproperty propname  new variablesubstitution   substitute ss getconf   varvalue
return new commandprocessorresponse 0
else if  varname startswith setprocessor hiveconf_prefix
string propname   varname substring setprocessor hiveconf_prefix length
string error   setconf varname  propname  varvalue  false
return new commandprocessorresponse error    null ? 0   1  error  null
else if  varname startswith setprocessor hivevar_prefix
string propname   varname substring setprocessor hivevar_prefix length
ss gethivevariables   put propname  new variablesubstitution   substitute ss getconf   varvalue
return new commandprocessorresponse 0
else
string error   setconf varname  varname  varvalue  true
return new commandprocessorresponse error    null ? 0   1  error  null
// returns non-null string for validation fail
private string setconf string varname  string key  string varvalue  boolean register
hiveconf conf   sessionstate get   getconf
string value   new variablesubstitution   substitute conf  varvalue
if  conf getboolvar hiveconf confvars hiveconfvalidation
hiveconf confvars confvars   hiveconf getconfvars key
if  confvars    null     confvars istype value
stringbuilder message   new stringbuilder
message append    append varname  append    append varvalue
message append     message append key  append
message append confvars typestring    append
return message tostring
conf set key  value
if  register
sessionstate get   getoverriddenconfigurations   put key  value
return null
private sortedmap<string string> propertiestosortedmap properties p
sortedmap<string string> sortedpropmap   new treemap<string string>
for  map entry<object  object> entry  system getproperties   entryset
sortedpropmap put   string  entry getkey     string  entry getvalue
return sortedpropmap
private sortedmap<string string> maptosortedmap map<string string> data
sortedmap<string string> sortedenvmap   new treemap<string string>
sortedenvmap putall  data
return sortedenvmap
private commandprocessorresponse getvariable string varname
sessionstate ss   sessionstate get
if  varname equals
ss out println         ss getissilent
return new commandprocessorresponse 0
if  varname startswith setprocessor system_prefix
string propname   varname substring setprocessor system_prefix length
string result   system getproperty propname
if  result    null
ss out println setprocessor system_prefix propname       result
return new commandprocessorresponse 0
else
ss out println  propname
return new commandprocessorresponse 1
else if  varname indexof setprocessor env_prefix   0
string var   varname substring env_prefix length
if  system getenv var   null
ss out println setprocessor env_prefix var       system getenv var
return new commandprocessorresponse 0
else
ss out println varname
return new commandprocessorresponse 1
else if  varname indexof setprocessor hiveconf_prefix   0
string var   varname substring setprocessor hiveconf_prefix length
if  ss getconf   get var   null
ss out println setprocessor hiveconf_prefix var       ss getconf   get var
return new commandprocessorresponse 0
else
ss out println varname
return new commandprocessorresponse 1
else if  varname indexof setprocessor hivevar_prefix   0
string var   varname substring setprocessor hivevar_prefix length
if  ss gethivevariables   get var   null
ss out println setprocessor hivevar_prefix var       ss gethivevariables   get var
return new commandprocessorresponse 0
else
ss out println varname
return new commandprocessorresponse 1
else
dumpoption varname
return new commandprocessorresponse 0
public commandprocessorresponse run string command
sessionstate ss   sessionstate get
schema sch   getschema
string nwcmd   command trim
if  nwcmd equals
dumpoptions ss getconf   getchangedproperties
return new commandprocessorresponse 0  null  null  sch
if  nwcmd equals
dumpoptions ss getconf   getallproperties
return new commandprocessorresponse 0  null  null  sch
string part   new string
int eqindex   nwcmd indexof
if  nwcmd contains
if  eqindex    nwcmd length     1      x
part   nwcmd substring 0  nwcmd length     1
part
else     x y
part   nwcmd substring 0  eqindex  trim
part   nwcmd substring eqindex   1  trim
if  part equals
ss setissilent getboolean part
return new commandprocessorresponse 0
return setvariable part part
else
return getvariable nwcmd
// create a schema object containing the give column
private schema getschema
schema sch   new schema
fieldschema tmpfieldschema   new fieldschema
tmpfieldschema setname set_column_name
tmpfieldschema settype string_type_name
sch puttoproperties serialization_null_format  defaultnullstring
sch addtofieldschemas tmpfieldschema
return sch