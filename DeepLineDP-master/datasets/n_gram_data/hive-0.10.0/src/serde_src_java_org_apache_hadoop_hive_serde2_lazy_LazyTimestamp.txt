/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 lazy
import java io ioexception
import java io outputstream
import java io unsupportedencodingexception
import java sql timestamp
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive serde2 io timestampwritable
import org apache hadoop hive serde2 lazy objectinspector primitive lazytimestampobjectinspector
/**
*
* lazytimestamp.
* serializes and deserializes a timestamp in the jdbc timestamp format
*
*    yyyy-mm-dd hh:mm:ss.[fff...]
*
*/
public class lazytimestamp extends lazyprimitive<lazytimestampobjectinspector  timestampwritable>
static final private log log   logfactory getlog lazytimestamp class
public lazytimestamp lazytimestampobjectinspector oi
super oi
data   new timestampwritable
public lazytimestamp lazytimestamp copy
super copy
data   new timestampwritable copy data
/**
* initilizes lazytimestamp object by interpreting the input bytes
* as a jdbc timestamp string
*
* @param bytes
* @param start
* @param length
*/
@override
public void init bytearrayref bytes  int start  int length
string s   null
try
s   new string bytes getdata    start  length
catch  unsupportedencodingexception e
log error e
s
timestamp t
if  s compareto       0
t   null
logexceptionmessage bytes  start  length
else
t   timestamp valueof s
data set t
private static final string nulltimestamp
/**
* writes a timestamp in jdbc timestamp format to the output stream
* @param out
*          the output stream
* @param i
*          the timestamp to write
* @throws ioexception
*/
public static void writeutf8 outputstream out  timestampwritable i
throws ioexception
if  i    null
// serialize as time 0
out write timestampwritable nullbytes
else
out write i tostring   getbytes
@override
public timestampwritable getwritableobject
return data