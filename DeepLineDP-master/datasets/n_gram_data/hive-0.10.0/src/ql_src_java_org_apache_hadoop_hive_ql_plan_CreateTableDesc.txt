/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql plan
import java io serializable
import java util arraylist
import java util iterator
import java util list
import java util map
import org apache commons lang stringutils
import org apache hadoop hive common javautils
import org apache hadoop hive metastore api fieldschema
import org apache hadoop hive metastore api order
import org apache hadoop hive ql errormsg
import org apache hadoop hive ql exec utilities
import org apache hadoop hive ql io hivefileformatutils
import org apache hadoop hive ql io hiveoutputformat
import org apache hadoop hive ql parse basesemanticanalyzer
import org apache hadoop hive ql parse parseutils
import org apache hadoop hive ql parse semanticexception
import org apache hadoop hive serde2 serdeutils
import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorutils
/**
* createtabledesc.
*
*/
@explain displayname
public class createtabledesc extends ddldesc implements serializable
private static final long serialversionuid   1l
string databasename
string tablename
boolean isexternal
arraylist<fieldschema> cols
arraylist<fieldschema> partcols
arraylist<string> bucketcols
arraylist<order> sortcols
int numbuckets
string fielddelim
string fieldescape
string collitemdelim
string mapkeydelim
string linedelim
string comment
string inputformat
string outputformat
string location
string sername
string storagehandler
map<string  string> serdeprops
map<string  string> tblprops
boolean ifnotexists
list<string> skewedcolnames
list<list<string>> skewedcolvalues
boolean isstoredassubdirectories   false
public createtabledesc
public createtabledesc string databasename  string tablename  boolean isexternal
list<fieldschema> cols  list<fieldschema> partcols
list<string> bucketcols  list<order> sortcols  int numbuckets
string fielddelim  string fieldescape  string collitemdelim
string mapkeydelim  string linedelim  string comment  string inputformat
string outputformat  string location  string sername
string storagehandler
map<string  string> serdeprops
map<string  string> tblprops
boolean ifnotexists  list<string> skewedcolnames  list<list<string>> skewedcolvalues
this tablename  isexternal  cols  partcols
bucketcols  sortcols  numbuckets  fielddelim  fieldescape
collitemdelim  mapkeydelim  linedelim  comment  inputformat
outputformat  location  sername  storagehandler  serdeprops
tblprops  ifnotexists  skewedcolnames  skewedcolvalues
this databasename   databasename
public createtabledesc string tablename  boolean isexternal
list<fieldschema> cols  list<fieldschema> partcols
list<string> bucketcols  list<order> sortcols  int numbuckets
string fielddelim  string fieldescape  string collitemdelim
string mapkeydelim  string linedelim  string comment  string inputformat
string outputformat  string location  string sername
string storagehandler
map<string  string> serdeprops
map<string  string> tblprops
boolean ifnotexists  list<string> skewedcolnames  list<list<string>> skewedcolvalues
this tablename   tablename
this isexternal   isexternal
this bucketcols   new arraylist<string> bucketcols
this sortcols   new arraylist<order> sortcols
this collitemdelim   collitemdelim
this cols   new arraylist<fieldschema> cols
this comment   comment
this fielddelim   fielddelim
this fieldescape   fieldescape
this inputformat   inputformat
this outputformat   outputformat
this linedelim   linedelim
this location   location
this mapkeydelim   mapkeydelim
this numbuckets   numbuckets
this partcols   new arraylist<fieldschema> partcols
this sername   sername
this storagehandler   storagehandler
this serdeprops   serdeprops
this tblprops   tblprops
this ifnotexists   ifnotexists
this skewedcolnames   new arraylist<string> skewedcolnames
this skewedcolvalues   new arraylist<list<string>> skewedcolvalues
@explain displayname
public list<string> getcolsstring
return utilities getfieldschemastring getcols
@explain displayname
public list<string> getpartcolsstring
return utilities getfieldschemastring getpartcols
@explain displayname
public boolean getifnotexists
return ifnotexists
public void setifnotexists boolean ifnotexists
this ifnotexists   ifnotexists
@explain displayname
public string gettablename
return tablename
public string getdatabasename
return databasename
public void settablename string tablename
this tablename   tablename
public arraylist<fieldschema> getcols
return cols
public void setcols arraylist<fieldschema> cols
this cols   cols
public arraylist<fieldschema> getpartcols
return partcols
public void setpartcols arraylist<fieldschema> partcols
this partcols   partcols
@explain displayname
public arraylist<string> getbucketcols
return bucketcols
public void setbucketcols arraylist<string> bucketcols
this bucketcols   bucketcols
@explain displayname
public int getnumbuckets
return numbuckets
public void setnumbuckets int numbuckets
this numbuckets   numbuckets
@explain displayname
public string getfielddelim
return fielddelim
public void setfielddelim string fielddelim
this fielddelim   fielddelim
@explain displayname
public string getfieldescape
return fieldescape
public void setfieldescape string fieldescape
this fieldescape   fieldescape
@explain displayname
public string getcollitemdelim
return collitemdelim
public void setcollitemdelim string collitemdelim
this collitemdelim   collitemdelim
@explain displayname
public string getmapkeydelim
return mapkeydelim
public void setmapkeydelim string mapkeydelim
this mapkeydelim   mapkeydelim
@explain displayname
public string getlinedelim
return linedelim
public void setlinedelim string linedelim
this linedelim   linedelim
@explain displayname
public string getcomment
return comment
public void setcomment string comment
this comment   comment
@explain displayname
public string getinputformat
return inputformat
public void setinputformat string inputformat
this inputformat   inputformat
@explain displayname
public string getoutputformat
return outputformat
public void setoutputformat string outputformat
this outputformat   outputformat
@explain displayname
public string getstoragehandler
return storagehandler
public void setstoragehandler string storagehandler
this storagehandler   storagehandler
@explain displayname
public string getlocation
return location
public void setlocation string location
this location   location
@explain displayname
public boolean isexternal
return isexternal
public void setexternal boolean isexternal
this isexternal   isexternal
/**
* @return the sortcols
*/
@explain displayname
public arraylist<order> getsortcols
return sortcols
/**
* @param sortcols
*          the sortcols to set
*/
public void setsortcols arraylist<order> sortcols
this sortcols   sortcols
/**
* @return the serdename
*/
@explain displayname
public string getsername
return sername
/**
* @param sername
*          the sername to set
*/
public void setsername string sername
this sername   sername
/**
* @return the serde properties
*/
@explain displayname
public map<string  string> getserdeprops
return serdeprops
/**
* @param serdeprops
*          the serde properties to set
*/
public void setserdeprops map<string  string> serdeprops
this serdeprops   serdeprops
/**
* @return the table properties
*/
@explain displayname
public map<string  string> gettblprops
return tblprops
/**
* @param tblprops
*          the table properties to set
*/
public void settblprops map<string  string> tblprops
this tblprops   tblprops
/**
* @return the skewedcolnames
*/
public list<string> getskewedcolnames
return skewedcolnames
/**
* @param skewedcolnames the skewedcolnames to set
*/
public void setskewedcolnames arraylist<string> skewedcolnames
this skewedcolnames   skewedcolnames
/**
* @return the skewedcolvalues
*/
public list<list<string>> getskewedcolvalues
return skewedcolvalues
/**
* @param skewedcolvalues the skewedcolvalues to set
*/
public void setskewedcolvalues arraylist<list<string>> skewedcolvalues
this skewedcolvalues   skewedcolvalues
public void validate
throws semanticexception
if   this getcols      null      this getcols   size      0
// for now make sure that serde exists
if  stringutils isempty this getsername
serdeutils shouldgetcolsfromserde this getsername
throw new semanticexception errormsg invalid_tbl_ddl_serde getmsg
return
if  this getstoragehandler      null
try
class<?> origin   class forname this getoutputformat    true
javautils getclassloader
class<? extends hiveoutputformat> replaced   hivefileformatutils
getoutputformatsubstitute origin
if  replaced    null
throw new semanticexception errormsg invalid_output_format_type
getmsg
catch  classnotfoundexception e
throw new semanticexception errormsg invalid_output_format_type getmsg
list<string> colnames   parseutils validatecolumnnameuniqueness this getcols
if  this getbucketcols      null
// all columns in cluster and sort are valid columns
iterator<string> bucketcols   this getbucketcols   iterator
while  bucketcols hasnext
string bucketcol   bucketcols next
boolean found   false
iterator<string> colnamesiter   colnames iterator
while  colnamesiter hasnext
string colname   colnamesiter next
if  bucketcol equalsignorecase colname
found   true
break
if   found
throw new semanticexception errormsg invalid_column getmsg
if  this getsortcols      null
// all columns in cluster and sort are valid columns
iterator<order> sortcols   this getsortcols   iterator
while  sortcols hasnext
string sortcol   sortcols next   getcol
boolean found   false
iterator<string> colnamesiter   colnames iterator
while  colnamesiter hasnext
string colname   colnamesiter next
if  sortcol equalsignorecase colname
found   true
break
if   found
throw new semanticexception errormsg invalid_column getmsg
if  this getpartcols      null
// there is no overlap between columns and partitioning columns
iterator<fieldschema> partcolsiter   this getpartcols   iterator
while  partcolsiter hasnext
fieldschema fs   partcolsiter next
string partcol   fs getname
primitiveobjectinspectorutils primitivetypeentry pte   primitiveobjectinspectorutils
gettypeentryfromtypename
fs gettype
if null    pte
throw new semanticexception errormsg partition_column_non_primitive getmsg
partcol       fs gettype
iterator<string> colnamesiter   colnames iterator
while  colnamesiter hasnext
string colname   basesemanticanalyzer unescapeidentifier colnamesiter next
if  partcol equalsignorecase colname
throw new semanticexception
errormsg column_repeated_in_partitioning_cols getmsg
/* validate skewed information. */
validationutility validateskewedinformation colnames  this getskewedcolnames
this getskewedcolvalues
/**
* @return the isstoredassubdirectories
*/
public boolean isstoredassubdirectories
return isstoredassubdirectories
/**
* @param isstoredassubdirectories the isstoredassubdirectories to set
*/
public void setstoredassubdirectories boolean isstoredassubdirectories
this isstoredassubdirectories   isstoredassubdirectories