/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql plan
import java io ioexception
import java io serializable
import java util arraylist
import java util hashmap
import java util iterator
import java util list
import java util map
import java util map entry
import org apache hadoop fs filestatus
import org apache hadoop fs filesystem
import org apache hadoop fs path
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql exec task
/**
* conditionalresolverskewjoin.
*
*/
public class conditionalresolverskewjoin implements conditionalresolver  serializable
private static final long serialversionuid   1l
/**
* conditionalresolverskewjoinctx.
*
*/
public static class conditionalresolverskewjoinctx implements serializable
private static final long serialversionuid   1l
// we store big keys in one table into one dir, and same keys in other
// tables into corresponding different dirs (one dir per table).
// this map stores mapping from "big key dir" to its corresponding mapjoin
// task.
hashmap<string  task<? extends serializable>> dirtotaskmap
/**
* for serialization use only.
*/
public conditionalresolverskewjoinctx
public conditionalresolverskewjoinctx
hashmap<string  task<? extends serializable>> dirtotaskmap
super
this dirtotaskmap   dirtotaskmap
public hashmap<string  task<? extends serializable>> getdirtotaskmap
return dirtotaskmap
public void setdirtotaskmap
hashmap<string  task<? extends serializable>> dirtotaskmap
this dirtotaskmap   dirtotaskmap
public conditionalresolverskewjoin
@override
public list<task<? extends serializable>> gettasks hiveconf conf
object objctx
conditionalresolverskewjoinctx ctx    conditionalresolverskewjoinctx  objctx
list<task<? extends serializable>> restsks   new arraylist<task<? extends serializable>>
map<string  task<? extends serializable>> dirtotaskmap   ctx
getdirtotaskmap
iterator<entry<string  task<? extends serializable>>> bigkeyspathsiter   dirtotaskmap
entryset   iterator
try
while  bigkeyspathsiter hasnext
entry<string  task<? extends serializable>> entry   bigkeyspathsiter
next
string path   entry getkey
path dirpath   new path path
filesystem inpfs   dirpath getfilesystem conf
filestatus fstatus   inpfs liststatus dirpath
if  fstatus    null    fstatus length > 0
task <? extends serializable> task   entry getvalue
list<task <? extends serializable>> parentops   task getparenttasks
if parentops  null
for task <? extends serializable> parentop  parentops
//right now only one parent
restsks add parentop
else
restsks add task
catch  ioexception e
e printstacktrace
return restsks