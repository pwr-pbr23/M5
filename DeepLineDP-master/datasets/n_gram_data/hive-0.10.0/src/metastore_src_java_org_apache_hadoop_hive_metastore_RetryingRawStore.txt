/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive metastore
import java lang reflect invocationhandler
import java lang reflect invocationtargetexception
import java lang reflect method
import java lang reflect proxy
import java lang reflect undeclaredthrowableexception
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hive common javautils
import org apache hadoop hive common classification interfaceaudience
import org apache hadoop hive common classification interfacestability
import org apache hadoop hive conf hiveconf
import org apache hadoop hive metastore api metaexception
import org apache hadoop hive metastore hooks jdoconnectionurlhook
import org apache hadoop util reflectionutils
@interfaceaudience private
@interfacestability evolving
public class retryingrawstore implements invocationhandler
private static final log log   logfactory getlog retryingrawstore class
private final rawstore base
private int retryinterval   0
private int retrylimit   0
private metastoreinit metastoreinitdata metastoreinitdata
new metastoreinit metastoreinitdata
private final int id
private final hiveconf hiveconf
private final configuration conf     thread local conf from hms
protected retryingrawstore hiveconf hiveconf  configuration conf
class<? extends rawstore> rawstoreclass  int id  throws metaexception
this conf   conf
this hiveconf   hiveconf
this id   id
// this has to be called before initializing the instance of rawstore
init
this base    rawstore  reflectionutils newinstance rawstoreclass  conf
public static rawstore getproxy hiveconf hiveconf  configuration conf  string rawstoreclassname
int id  throws metaexception
class<? extends rawstore> baseclass    class<? extends rawstore>  metastoreutils getclass
rawstoreclassname
retryingrawstore handler   new retryingrawstore hiveconf  conf  baseclass  id
return  rawstore  proxy newproxyinstance retryingrawstore class getclassloader
baseclass getinterfaces    handler
private void init   throws metaexception
retryinterval   hiveconf getintvar hiveconf
hiveconf confvars metastoreinterval
retrylimit   hiveconf getintvar hiveconf
hiveconf confvars metastoreattempts
// using the hook on startup ensures that the hook always has priority
// over settings in *.xml.  the thread local conf needs to be used because at this point
// it has already been initialized using hiveconf.
metastoreinit updateconnectionurl hiveconf  getconf    null  metastoreinitdata
private void initms
base setconf getconf
@override
public object invoke object proxy  method method  object args  throws throwable
object ret   null
boolean gotnewconnecturl   false
boolean reloadconf   hiveconf getboolvar hiveconf
hiveconf confvars metastoreforcereloadconf
if  reloadconf
metastoreinit updateconnectionurl hiveconf  getconf    null  metastoreinitdata
int retrycount   0
exception caughtexception   null
while  true
try
if  reloadconf    gotnewconnecturl
initms
ret   method invoke base  args
break
catch  javax jdo jdoexception e
caughtexception   e
catch  undeclaredthrowableexception e
throw e getcause
catch  invocationtargetexception e
if  e getcause   instanceof javax jdo jdoexception
// due to reflection, the jdo exception is wrapped in
// invocationtargetexception
caughtexception    javax jdo jdoexception  e getcause
else
throw e getcause
if  retrycount >  retrylimit
throw  caughtexception
assert  retryinterval >  0
retrycount
log error
string format
retryinterval  retrycount  retrylimit
thread sleep retryinterval
// if we have a connection error, the jdo connection url hook might
// provide us with a new url to access the datastore.
string lasturl   metastoreinit getconnectionurl getconf
gotnewconnecturl   metastoreinit updateconnectionurl hiveconf  getconf
lasturl  metastoreinitdata
return ret
private string addprefix string s
return id       s
public configuration getconf
return conf