/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive thrift
import java net socket
import java util concurrent concurrentmap
import org apache hadoop security usergroupinformation
import org apache thrift transport tsocket
import org apache thrift transport ttransport
import org apache thrift transport ttransportfactory
import com google common collect mapmaker
/** tugicontainingtransport associates ugi information with connection (transport).
*  wraps underlying <code>tsocket</code> transport and annotates it with ugi.
*/
public class tugicontainingtransport extends tfiltertransport
private usergroupinformation ugi
public tugicontainingtransport ttransport wrapped
super wrapped
public usergroupinformation getclientugi
return ugi
public void setclientugi usergroupinformation ugi
this ugi   ugi
/**
* if the underlying ttransport is an instance of tsocket, it returns the socket object
* which it contains.  otherwise it returns null.
*/
public socket getsocket
if  wrapped instanceof tsocket
return    tsocket wrapped  getsocket
return null
/** factory to create tugicontainingtransport.
*/
public static class factory extends ttransportfactory
// need a concurrent weakhashmap. weakkeys() so that when underlying transport gets out of
// scope, it still can be gc'ed. since value of map has a ref to key, need weekvalues as well.
private static final concurrentmap<ttransport  tugicontainingtransport> transmap
new mapmaker   weakkeys   weakvalues   makemap
/**
* get a new <code>tugicontainingtransport</code> instance, or reuse the
* existing one if a <code>tugicontainingtransport</code> has already been
* created before using the given <code>ttransport</code> as an underlying
* transport. this ensures that a given underlying transport instance
* receives the same <code>tugicontainingtransport</code>.
*/
@override
public tugicontainingtransport gettransport ttransport trans
// ugi information is not available at connection setup time, it will be set later
// via set_ugi() rpc.
transmap putifabsent trans  new tugicontainingtransport trans
return transmap get trans