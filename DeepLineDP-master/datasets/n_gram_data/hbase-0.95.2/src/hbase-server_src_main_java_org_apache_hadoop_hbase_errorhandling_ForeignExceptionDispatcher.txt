/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase errorhandling
import java util arraylist
import java util list
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop classification interfaceaudience
import org apache hadoop classification interfacestability
/**
* the dispatcher acts as the state holding entity for foreign error handling.  the first
* exception received by the dispatcher get passed directly to the listeners.  subsequent
* exceptions are dropped.
* <p>
* if there are multiple dispatchers that are all in the same foreign exception monitoring group,
* ideally all these monitors are "peers" -- any error on one dispatcher should get propagated to
* all others (via rpc, or some other mechanism).  due to racing error conditions the exact reason
* for failure may be different on different peers, but the fact that they are in error state
* should eventually hold on all.
* <p>
* this is thread-safe and must be because this is expected to be used to propagate exceptions
* from foreign threads.
*/
@interfaceaudience public
@interfacestability evolving
public class foreignexceptiondispatcher implements foreignexceptionlistener  foreignexceptionsnare
public static final log log   logfactory getlog foreignexceptiondispatcher class
protected final string name
protected final list<foreignexceptionlistener> listeners
new arraylist<foreignexceptionlistener>
private foreignexception exception
public foreignexceptiondispatcher string name
this name   name
public foreignexceptiondispatcher
this
public string getname
return name
@override
public synchronized void receive foreignexception e
// if we already have an exception, then ignore it
if  exception    null  return
log debug name       e
// mark that we got the error
if  e    null
exception   e
else
exception   new foreignexception name
// notify all the listeners
dispatch e
@override
public synchronized void rethrowexception   throws foreignexception
if  exception    null
// this gets the stack where this is caused, (instead of where it was deserialized).
// this is much more useful for debugging
throw new foreignexception exception getsource    exception getcause
@override
public synchronized boolean hasexception
return exception    null
@override
synchronized public foreignexception getexception
return exception
/**
* sends an exception to all listeners.
* @param message human readable message passed to the listener
* @param e {@link foreignexception} containing the cause.  can be null.
*/
private void dispatch foreignexception e
// update all the listeners with the passed error
for  foreignexceptionlistener l  listeners
l receive e
/**
* listen for failures to a given process.  this method should only be used during
* initialization and not added to after exceptions are accepted.
* @param errorable listener for the errors.  may be null.
*/
public synchronized void addlistener foreignexceptionlistener errorable
this listeners add errorable