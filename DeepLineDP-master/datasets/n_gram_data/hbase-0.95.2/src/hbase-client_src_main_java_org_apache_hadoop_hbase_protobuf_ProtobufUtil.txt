/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase protobuf
import static org apache hadoop hbase protobuf generated hbaseprotos regionspecifier regionspecifiertype region_name
import java io bytearrayoutputstream
import java io ioexception
import java lang reflect constructor
import java lang reflect invocationtargetexception
import java lang reflect method
import java lang reflect parameterizedtype
import java lang reflect type
import java util arraylist
import java util collection
import java util hashmap
import java util list
import java util map
import java util map entry
import java util navigableset
import org apache hadoop conf configuration
import org apache hadoop fs path
import org apache hadoop hbase cell
import org apache hadoop hbase cellscanner
import org apache hadoop hbase cellutil
import org apache hadoop hbase tablename
import org apache hadoop hbase donotretryioexception
import org apache hadoop hbase hbaseconfiguration
import org apache hadoop hbase hconstants
import org apache hadoop hbase hregioninfo
import org apache hadoop hbase htabledescriptor
import org apache hadoop hbase keyvalue
import org apache hadoop hbase keyvalueutil
import org apache hadoop hbase namespacedescriptor
import org apache hadoop hbase servername
import org apache hadoop hbase client append
import org apache hadoop hbase client delete
import org apache hadoop hbase client durability
import org apache hadoop hbase client get
import org apache hadoop hbase client increment
import org apache hadoop hbase client mutation
import org apache hadoop hbase client put
import org apache hadoop hbase client result
import org apache hadoop hbase client scan
import org apache hadoop hbase client metrics scanmetrics
import org apache hadoop hbase exceptions deserializationexception
import org apache hadoop hbase filter bytearraycomparable
import org apache hadoop hbase filter filter
import org apache hadoop hbase io timerange
import org apache hadoop hbase protobuf generated accesscontrolprotos
import org apache hadoop hbase protobuf generated accesscontrolprotos accesscontrolservice
import org apache hadoop hbase protobuf generated adminprotos adminservice
import org apache hadoop hbase protobuf generated adminprotos closeregionrequest
import org apache hadoop hbase protobuf generated adminprotos closeregionresponse
import org apache hadoop hbase protobuf generated adminprotos getonlineregionrequest
import org apache hadoop hbase protobuf generated adminprotos getonlineregionresponse
import org apache hadoop hbase protobuf generated adminprotos getregioninforequest
import org apache hadoop hbase protobuf generated adminprotos getregioninforesponse
import org apache hadoop hbase protobuf generated adminprotos getserverinforequest
import org apache hadoop hbase protobuf generated adminprotos getserverinforesponse
import org apache hadoop hbase protobuf generated adminprotos getstorefilerequest
import org apache hadoop hbase protobuf generated adminprotos getstorefileresponse
import org apache hadoop hbase protobuf generated adminprotos mergeregionsrequest
import org apache hadoop hbase protobuf generated adminprotos openregionrequest
import org apache hadoop hbase protobuf generated adminprotos serverinfo
import org apache hadoop hbase protobuf generated adminprotos splitregionrequest
import org apache hadoop hbase protobuf generated authenticationprotos
import org apache hadoop hbase protobuf generated cellprotos
import org apache hadoop hbase protobuf generated clientprotos
import org apache hadoop hbase protobuf generated clientprotos bulkloadhfilerequest
import org apache hadoop hbase protobuf generated clientprotos bulkloadhfileresponse
import org apache hadoop hbase protobuf generated clientprotos clientservice
import org apache hadoop hbase protobuf generated clientprotos column
import org apache hadoop hbase protobuf generated clientprotos coprocessorservicecall
import org apache hadoop hbase protobuf generated clientprotos coprocessorservicerequest
import org apache hadoop hbase protobuf generated clientprotos coprocessorserviceresponse
import org apache hadoop hbase protobuf generated clientprotos getrequest
import org apache hadoop hbase protobuf generated clientprotos getresponse
import org apache hadoop hbase protobuf generated clientprotos mutationproto
import org apache hadoop hbase protobuf generated clientprotos mutationproto columnvalue
import org apache hadoop hbase protobuf generated clientprotos mutationproto columnvalue qualifiervalue
import org apache hadoop hbase protobuf generated clientprotos mutationproto deletetype
import org apache hadoop hbase protobuf generated clientprotos mutationproto mutationtype
import org apache hadoop hbase protobuf generated clientprotos scanrequest
import org apache hadoop hbase protobuf generated comparatorprotos
import org apache hadoop hbase protobuf generated filterprotos
import org apache hadoop hbase protobuf generated hbaseprotos
import org apache hadoop hbase protobuf generated hbaseprotos namebytespair
import org apache hadoop hbase protobuf generated hbaseprotos regioninfo
import org apache hadoop hbase protobuf generated clusterstatusprotos regionload
import org apache hadoop hbase protobuf generated hbaseprotos regionspecifier
import org apache hadoop hbase protobuf generated hbaseprotos regionspecifier regionspecifiertype
import org apache hadoop hbase protobuf generated mapreduceprotos
import org apache hadoop hbase protobuf generated masteradminprotos createtablerequest
import org apache hadoop hbase protobuf generated masteradminprotos masteradminservice
import org apache hadoop hbase protobuf generated mastermonitorprotos gettabledescriptorsresponse
import org apache hadoop hbase protobuf generated regionserverstatusprotos regionserverreportrequest
import org apache hadoop hbase protobuf generated regionserverstatusprotos regionserverstartuprequest
import org apache hadoop hbase protobuf generated walprotos compactiondescriptor
import org apache hadoop hbase security access permission
import org apache hadoop hbase security access tablepermission
import org apache hadoop hbase security access userpermission
import org apache hadoop hbase security token authenticationtokenidentifier
import org apache hadoop hbase util bytes
import org apache hadoop hbase util dynamicclassloader
import org apache hadoop hbase util methods
import org apache hadoop hbase util pair
import org apache hadoop io text
import org apache hadoop ipc remoteexception
import org apache hadoop security token token
import com google common collect arraylistmultimap
import com google common collect listmultimap
import com google common collect lists
import com google protobuf bytestring
import com google protobuf invalidprotocolbufferexception
import com google protobuf message
import com google protobuf rpcchannel
import com google protobuf service
import com google protobuf serviceexception
import com google protobuf textformat
/**
* protobufs utility.
*/
public final class protobufutil
private protobufutil
/**
* primitive type to class mapping.
*/
private final static map<string  class<?>>
primitives   new hashmap<string  class<?>>
/**
* dynamic class loader to load filter/comparators
*/
private final static classloader class_loader
static
classloader parent   protobufutil class getclassloader
configuration conf   hbaseconfiguration create
class_loader   new dynamicclassloader conf  parent
primitives put boolean type getname    boolean type
primitives put byte type getname    byte type
primitives put character type getname    character type
primitives put short type getname    short type
primitives put integer type getname    integer type
primitives put long type getname    long type
primitives put float type getname    float type
primitives put double type getname    double type
primitives put void type getname    void type
/**
* magic we put ahead of a serialized protobuf message.
* for example, all znode content is protobuf messages with the below magic
* for preamble.
*/
public static final byte  pb_magic   new byte
private static final string pb_magic_str   bytes tostring pb_magic
/**
* prepend the passed bytes with four bytes of magic, {@link #pb_magic}, to flag what
* follows as a protobuf in hbase.  prepend these bytes to all content written to znodes, etc.
* @param bytes bytes to decorate
* @return the passed <code>bytes</codes> with magic prepended (creates a new
* byte array that is <code>bytes.length</code> plus {@link #pb_magic}.length.
*/
public static byte  prependpbmagic final byte  bytes
return bytes add pb_magic  bytes
/**
* @param bytes bytes to check.
* @return true if passed <code>bytes</code> has {@link #pb_magic} for a prefix.
*/
public static boolean ispbmagicprefix final byte  bytes
if  bytes    null    bytes length < pb_magic length  return false
return bytes compareto pb_magic  0  pb_magic length  bytes  0  pb_magic length     0
/**
* @param bytes
* @throws deserializationexception if we are missing the pb magic prefix
*/
public static void expectpbmagicprefix final byte  bytes  throws deserializationexception
if   ispbmagicprefix bytes
throw new deserializationexception     pb_magic_str
/**
* @return length of {@link #pb_magic}
*/
public static int lengthofpbmagic
return pb_magic length
/**
* return the ioexception thrown by the remote server wrapped in
* serviceexception as cause.
*
* @param se serviceexception that wraps io exception thrown by the server
* @return exception wrapped in serviceexception or
*   a new ioexception that wraps the unexpected serviceexception.
*/
public static ioexception getremoteexception serviceexception se
throwable e   se getcause
if  e    null
return new ioexception se
if  e instanceof remoteexception
e     remoteexception e  unwrapremoteexception
return e instanceof ioexception ?  ioexception  e   new ioexception se
/**
* convert a servername to a protocol buffer servername
*
* @param servername the servername to convert
* @return the converted protocol buffer servername
* @see #toservername(org.apache.hadoop.hbase.protobuf.generated.hbaseprotos.servername)
*/
public static hbaseprotos servername
toservername final servername servername
if  servername    null  return null
hbaseprotos servername builder builder
hbaseprotos servername newbuilder
builder sethostname servername gethostname
if  servername getport   >  0
builder setport servername getport
if  servername getstartcode   >  0
builder setstartcode servername getstartcode
return builder build
/**
* convert a protocol buffer servername to a servername
*
* @param proto the protocol buffer servername to convert
* @return the converted servername
*/
public static servername toservername final hbaseprotos servername proto
if  proto    null  return null
string hostname   proto gethostname
long startcode    1
int port    1
if  proto hasport
port   proto getport
if  proto hasstartcode
startcode   proto getstartcode
return new servername hostname  port  startcode
/**
* get htabledescriptor[] from gettabledescriptorsresponse protobuf
*
* @param proto the gettabledescriptorsresponse
* @return htabledescriptor[]
*/
public static htabledescriptor gethtabledescriptorarray gettabledescriptorsresponse proto
if  proto    null  return null
htabledescriptor ret   new htabledescriptor
for  int i   0  i < proto gettableschemacount      i
ret   htabledescriptor convert proto gettableschema i
return ret
/**
* get the split keys in form "byte [][]" from a createtablerequest proto
*
* @param proto the createtablerequest
* @return the split keys
*/
public static byte  getsplitkeysarray final createtablerequest proto
byte  splitkeys   new byte
for  int i   0  i < proto getsplitkeyscount      i
splitkeys   proto getsplitkeys i  tobytearray
return splitkeys
/**
* convert a protobuf durability into a client durability
*/
public static durability todurability
final clientprotos mutationproto durability proto
switch proto
case use_default
return durability use_default
case skip_wal
return durability skip_wal
case async_wal
return durability async_wal
case sync_wal
return durability sync_wal
case fsync_wal
return durability fsync_wal
default
return durability use_default
/**
* convert a client durability into a protbuf durability
*/
public static clientprotos mutationproto durability todurability
final durability d
switch d
case use_default
return clientprotos mutationproto durability use_default
case skip_wal
return clientprotos mutationproto durability skip_wal
case async_wal
return clientprotos mutationproto durability async_wal
case sync_wal
return clientprotos mutationproto durability sync_wal
case fsync_wal
return clientprotos mutationproto durability fsync_wal
default
return clientprotos mutationproto durability use_default
/**
* convert a protocol buffer get to a client get
*
* @param proto the protocol buffer get to convert
* @return the converted client get
* @throws ioexception
*/
public static get toget
final clientprotos get proto  throws ioexception
if  proto    null  return null
byte row   proto getrow   tobytearray
get get   new get row
if  proto hascacheblocks
get setcacheblocks proto getcacheblocks
if  proto hasmaxversions
get setmaxversions proto getmaxversions
if  proto hasstorelimit
get setmaxresultspercolumnfamily proto getstorelimit
if  proto hasstoreoffset
get setrowoffsetpercolumnfamily proto getstoreoffset
if  proto hastimerange
hbaseprotos timerange timerange   proto gettimerange
long minstamp   0
long maxstamp   long max_value
if  timerange hasfrom
minstamp   timerange getfrom
if  timerange hasto
maxstamp   timerange getto
get settimerange minstamp  maxstamp
if  proto hasfilter
filterprotos filter filter   proto getfilter
get setfilter protobufutil tofilter filter
for  namebytespair attribute  proto getattributelist
get setattribute attribute getname    attribute getvalue   tobytearray
if  proto getcolumncount   > 0
for  column column  proto getcolumnlist
byte family   column getfamily   tobytearray
if  column getqualifiercount   > 0
for  bytestring qualifier  column getqualifierlist
get addcolumn family  qualifier tobytearray
else
get addfamily family
return get
/**
* convert a protocol buffer mutate to a put.
*
* @param proto the protocol buffer mutationproto to convert
* @return a client put.
* @throws ioexception
*/
public static put toput final mutationproto proto
throws ioexception
return toput proto  null
/**
* convert a protocol buffer mutate to a put.
*
* @param proto the protocol buffer mutationproto to convert
* @param cellscanner if non-null, the cell data that goes with this proto.
* @return a client put.
* @throws ioexception
*/
public static put toput final mutationproto proto  final cellscanner cellscanner
throws ioexception
// todo: server-side at least why do we convert back to the client types?  why not just pb it?
mutationtype type   proto getmutatetype
assert type    mutationtype put  type name
byte  row   proto hasrow  ? proto getrow   tobytearray    null
long timestamp   proto hastimestamp  ? proto gettimestamp    hconstants latest_timestamp
put put   null
int cellcount   proto hasassociatedcellcount  ? proto getassociatedcellcount    0
if  cellcount > 0
// the proto has metadata only and the data is separate to be found in the cellscanner.
if  cellscanner    null
throw new donotretryioexception     cellcount
toshortstring proto
for  int i   0  i < cellcount  i
if   cellscanner advance
throw new donotretryioexception     cellcount       i
toshortstring proto
cell cell   cellscanner current
if  put    null
put   new put cell getrowarray    cell getrowoffset    cell getrowlength    timestamp
put add keyvalueutil ensurekeyvalue cell
else
put   new put row  timestamp
// the proto has the metadata and the data itself
for  columnvalue column  proto getcolumnvaluelist
byte family   column getfamily   tobytearray
for  qualifiervalue qv  column getqualifiervaluelist
byte qualifier   qv getqualifier   tobytearray
if   qv hasvalue
throw new donotretryioexception
byte value   qv getvalue   tobytearray
long ts   timestamp
if  qv hastimestamp
ts   qv gettimestamp
put add family  qualifier  ts  value
put setdurability todurability proto getdurability
for  namebytespair attribute  proto getattributelist
put setattribute attribute getname    attribute getvalue   tobytearray
return put
/**
* convert a protocol buffer mutate to a delete
*
* @param proto the protocol buffer mutate to convert
* @return the converted client delete
* @throws ioexception
*/
public static delete todelete final mutationproto proto
throws ioexception
return todelete proto  null
/**
* convert a protocol buffer mutate to a delete
*
* @param proto the protocol buffer mutate to convert
* @param cellscanner if non-null, the data that goes with this delete.
* @return the converted client delete
* @throws ioexception
*/
public static delete todelete final mutationproto proto  final cellscanner cellscanner
throws ioexception
mutationtype type   proto getmutatetype
assert type    mutationtype delete   type name
byte  row   proto hasrow  ? proto getrow   tobytearray    null
long timestamp   hconstants latest_timestamp
if  proto hastimestamp
timestamp   proto gettimestamp
delete delete   null
int cellcount   proto hasassociatedcellcount  ? proto getassociatedcellcount    0
if  cellcount > 0
// the proto has metadata only and the data is separate to be found in the cellscanner.
if  cellscanner    null
// textformat should be fine for a delete since it carries no data, just coordinates.
throw new donotretryioexception     cellcount
textformat shortdebugstring proto
for  int i   0  i < cellcount  i
if   cellscanner advance
// textformat should be fine for a delete since it carries no data, just coordinates.
throw new donotretryioexception     cellcount       i
textformat shortdebugstring proto
cell cell   cellscanner current
if  delete    null
delete
new delete cell getrowarray    cell getrowoffset    cell getrowlength    timestamp
delete adddeletemarker keyvalueutil ensurekeyvalue cell
else
delete   new delete row  timestamp
for  columnvalue column  proto getcolumnvaluelist
byte family   column getfamily   tobytearray
for  qualifiervalue qv  column getqualifiervaluelist
deletetype deletetype   qv getdeletetype
byte qualifier   null
if  qv hasqualifier
qualifier   qv getqualifier   tobytearray
long ts   hconstants latest_timestamp
if  qv hastimestamp
ts   qv gettimestamp
if  deletetype    deletetype delete_one_version
delete deletecolumn family  qualifier  ts
else if  deletetype    deletetype delete_multiple_versions
delete deletecolumns family  qualifier  ts
else if  deletetype    deletetype delete_family_version
delete deletefamilyversion family  ts
else
delete deletefamily family  ts
delete setdurability todurability proto getdurability
for  namebytespair attribute  proto getattributelist
delete setattribute attribute getname    attribute getvalue   tobytearray
return delete
/**
* convert a protocol buffer mutate to an append
* @param cellscanner
* @param proto the protocol buffer mutate to convert
* @return the converted client append
* @throws ioexception
*/
public static append toappend final mutationproto proto  final cellscanner cellscanner
throws ioexception
mutationtype type   proto getmutatetype
assert type    mutationtype append   type name
byte  row   proto hasrow  ? proto getrow   tobytearray    null
append append   null
int cellcount   proto hasassociatedcellcount  ? proto getassociatedcellcount    0
if  cellcount > 0
// the proto has metadata only and the data is separate to be found in the cellscanner.
if  cellscanner    null
throw new donotretryioexception     cellcount
toshortstring proto
for  int i   0  i < cellcount  i
if   cellscanner advance
throw new donotretryioexception     cellcount       i
toshortstring proto
cell cell   cellscanner current
if  append    null
append   new append cell getrowarray    cell getrowoffset    cell getrowlength
append add keyvalueutil ensurekeyvalue cell
else
append   new append row
for  columnvalue column  proto getcolumnvaluelist
byte family   column getfamily   tobytearray
for  qualifiervalue qv  column getqualifiervaluelist
byte qualifier   qv getqualifier   tobytearray
if   qv hasvalue
throw new donotretryioexception
byte value   qv getvalue   tobytearray
append add family  qualifier  value
append setdurability todurability proto getdurability
for  namebytespair attribute  proto getattributelist
append setattribute attribute getname    attribute getvalue   tobytearray
return append
/**
* convert a mutaterequest to mutation
*
* @param proto the protocol buffer mutate to convert
* @return the converted mutation
* @throws ioexception
*/
public static mutation tomutation final mutationproto proto  throws ioexception
mutationtype type   proto getmutatetype
if  type    mutationtype append
return toappend proto  null
if  type    mutationtype delete
return todelete proto  null
if  type    mutationtype put
return toput proto  null
throw new ioexception     type
/**
* convert a protocol buffer mutate to an increment
*
* @param proto the protocol buffer mutate to convert
* @return the converted client increment
* @throws ioexception
*/
public static increment toincrement final mutationproto proto  final cellscanner cellscanner
throws ioexception
mutationtype type   proto getmutatetype
assert type    mutationtype increment   type name
byte  row   proto hasrow  ? proto getrow   tobytearray    null
increment increment   null
int cellcount   proto hasassociatedcellcount  ? proto getassociatedcellcount    0
if  cellcount > 0
// the proto has metadata only and the data is separate to be found in the cellscanner.
if  cellscanner    null
throw new donotretryioexception     cellcount
textformat shortdebugstring proto
for  int i   0  i < cellcount  i
if   cellscanner advance
throw new donotretryioexception     cellcount       i
textformat shortdebugstring proto
cell cell   cellscanner current
if  increment    null
increment   new increment cell getrowarray    cell getrowoffset    cell getrowlength
increment add keyvalueutil ensurekeyvalue cell
else
increment   new increment row
for  columnvalue column  proto getcolumnvaluelist
byte family   column getfamily   tobytearray
for  qualifiervalue qv  column getqualifiervaluelist
byte qualifier   qv getqualifier   tobytearray
if   qv hasvalue
throw new donotretryioexception
long value   bytes tolong qv getvalue   tobytearray
increment addcolumn family  qualifier  value
if  proto hastimerange
hbaseprotos timerange timerange   proto gettimerange
long minstamp   0
long maxstamp   long max_value
if  timerange hasfrom
minstamp   timerange getfrom
if  timerange hasto
maxstamp   timerange getto
increment settimerange minstamp  maxstamp
increment setdurability todurability proto getdurability
return increment
/**
* convert a client scan to a protocol buffer scan
*
* @param scan the client scan to convert
* @return the converted protocol buffer scan
* @throws ioexception
*/
public static clientprotos scan toscan
final scan scan  throws ioexception
clientprotos scan builder scanbuilder
clientprotos scan newbuilder
scanbuilder setcacheblocks scan getcacheblocks
if  scan getbatch   > 0
scanbuilder setbatchsize scan getbatch
if  scan getmaxresultsize   > 0
scanbuilder setmaxresultsize scan getmaxresultsize
boolean loadcolumnfamiliesondemand   scan getloadcolumnfamiliesondemandvalue
if  loadcolumnfamiliesondemand    null
scanbuilder setloadcolumnfamiliesondemand loadcolumnfamiliesondemand booleanvalue
scanbuilder setmaxversions scan getmaxversions
timerange timerange   scan gettimerange
if   timerange isalltime
hbaseprotos timerange builder timerangebuilder
hbaseprotos timerange newbuilder
timerangebuilder setfrom timerange getmin
timerangebuilder setto timerange getmax
scanbuilder settimerange timerangebuilder build
map<string  byte> attributes   scan getattributesmap
if   attributes isempty
namebytespair builder attributebuilder   namebytespair newbuilder
for  map entry<string  byte> attribute  attributes entryset
attributebuilder setname attribute getkey
attributebuilder setvalue bytestring copyfrom attribute getvalue
scanbuilder addattribute attributebuilder build
byte startrow   scan getstartrow
if  startrow    null    startrow length > 0
scanbuilder setstartrow bytestring copyfrom startrow
byte stoprow   scan getstoprow
if  stoprow    null    stoprow length > 0
scanbuilder setstoprow bytestring copyfrom stoprow
if  scan hasfilter
scanbuilder setfilter protobufutil tofilter scan getfilter
if  scan hasfamilies
column builder columnbuilder   column newbuilder
for  map entry<byte navigableset<byte >>
family  scan getfamilymap   entryset
columnbuilder setfamily bytestring copyfrom family getkey
navigableset<byte > qualifiers   family getvalue
columnbuilder clearqualifier
if  qualifiers    null    qualifiers size   > 0
for  byte  qualifier  qualifiers
columnbuilder addqualifier bytestring copyfrom qualifier
scanbuilder addcolumn columnbuilder build
if  scan getmaxresultspercolumnfamily   >  0
scanbuilder setstorelimit scan getmaxresultspercolumnfamily
if  scan getrowoffsetpercolumnfamily   > 0
scanbuilder setstoreoffset scan getrowoffsetpercolumnfamily
return scanbuilder build
/**
* convert a protocol buffer scan to a client scan
*
* @param proto the protocol buffer scan to convert
* @return the converted client scan
* @throws ioexception
*/
public static scan toscan
final clientprotos scan proto  throws ioexception
byte  startrow   hconstants empty_start_row
byte  stoprow    hconstants empty_end_row
if  proto hasstartrow
startrow   proto getstartrow   tobytearray
if  proto hasstoprow
stoprow   proto getstoprow   tobytearray
scan scan   new scan startrow  stoprow
if  proto hascacheblocks
scan setcacheblocks proto getcacheblocks
if  proto hasmaxversions
scan setmaxversions proto getmaxversions
if  proto hasstorelimit
scan setmaxresultspercolumnfamily proto getstorelimit
if  proto hasstoreoffset
scan setrowoffsetpercolumnfamily proto getstoreoffset
if  proto hasloadcolumnfamiliesondemand
scan setloadcolumnfamiliesondemand proto getloadcolumnfamiliesondemand
if  proto hastimerange
hbaseprotos timerange timerange   proto gettimerange
long minstamp   0
long maxstamp   long max_value
if  timerange hasfrom
minstamp   timerange getfrom
if  timerange hasto
maxstamp   timerange getto
scan settimerange minstamp  maxstamp
if  proto hasfilter
filterprotos filter filter   proto getfilter
scan setfilter protobufutil tofilter filter
if  proto hasbatchsize
scan setbatch proto getbatchsize
if  proto hasmaxresultsize
scan setmaxresultsize proto getmaxresultsize
for  namebytespair attribute  proto getattributelist
scan setattribute attribute getname    attribute getvalue   tobytearray
if  proto getcolumncount   > 0
for  column column  proto getcolumnlist
byte family   column getfamily   tobytearray
if  column getqualifiercount   > 0
for  bytestring qualifier  column getqualifierlist
scan addcolumn family  qualifier tobytearray
else
scan addfamily family
return scan
/**
* create a protocol buffer get based on a client get.
*
* @param get the client get
* @return a protocol buffer get
* @throws ioexception
*/
public static clientprotos get toget
final get get  throws ioexception
clientprotos get builder builder
clientprotos get newbuilder
builder setrow bytestring copyfrom get getrow
builder setcacheblocks get getcacheblocks
builder setmaxversions get getmaxversions
if  get getfilter      null
builder setfilter protobufutil tofilter get getfilter
timerange timerange   get gettimerange
if   timerange isalltime
hbaseprotos timerange builder timerangebuilder
hbaseprotos timerange newbuilder
timerangebuilder setfrom timerange getmin
timerangebuilder setto timerange getmax
builder settimerange timerangebuilder build
map<string  byte> attributes   get getattributesmap
if   attributes isempty
namebytespair builder attributebuilder   namebytespair newbuilder
for  map entry<string  byte> attribute  attributes entryset
attributebuilder setname attribute getkey
attributebuilder setvalue bytestring copyfrom attribute getvalue
builder addattribute attributebuilder build
if  get hasfamilies
column builder columnbuilder   column newbuilder
map<byte  navigableset<byte>> families   get getfamilymap
for  map entry<byte  navigableset<byte>> family  families entryset
navigableset<byte> qualifiers   family getvalue
columnbuilder setfamily bytestring copyfrom family getkey
columnbuilder clearqualifier
if  qualifiers    null    qualifiers size   > 0
for  byte qualifier  qualifiers
columnbuilder addqualifier bytestring copyfrom qualifier
builder addcolumn columnbuilder build
if  get getmaxresultspercolumnfamily   >  0
builder setstorelimit get getmaxresultspercolumnfamily
if  get getrowoffsetpercolumnfamily   > 0
builder setstoreoffset get getrowoffsetpercolumnfamily
return builder build
/**
* convert a client increment to a protobuf mutate.
*
* @param increment
* @return the converted mutate
*/
public static mutationproto tomutation final increment increment
mutationproto builder builder   mutationproto newbuilder
builder setrow bytestring copyfrom increment getrow
builder setmutatetype mutationtype increment
builder setdurability todurability increment getdurability
timerange timerange   increment gettimerange
if   timerange isalltime
hbaseprotos timerange builder timerangebuilder
hbaseprotos timerange newbuilder
timerangebuilder setfrom timerange getmin
timerangebuilder setto timerange getmax
builder settimerange timerangebuilder build
columnvalue builder columnbuilder   columnvalue newbuilder
qualifiervalue builder valuebuilder   qualifiervalue newbuilder
for  map entry<byte  list<cell>> family  increment getfamilycellmap   entryset
columnbuilder setfamily bytestring copyfrom family getkey
columnbuilder clearqualifiervalue
list<cell> values   family getvalue
if  values    null    values size   > 0
for  cell cell  values
keyvalue kv   keyvalueutil ensurekeyvalue cell
valuebuilder setqualifier bytestring copyfrom kv getqualifier
valuebuilder setvalue bytestring copyfrom kv getvalue
columnbuilder addqualifiervalue valuebuilder build
builder addcolumnvalue columnbuilder build
return builder build
/**
* create a protocol buffer mutate based on a client mutation
*
* @param type
* @param mutation
* @return a protobuf'd mutation
* @throws ioexception
*/
public static mutationproto tomutation final mutationtype type  final mutation mutation
throws ioexception
mutationproto builder builder   getmutationbuilderandsetcommonfields type  mutation
columnvalue builder columnbuilder   columnvalue newbuilder
qualifiervalue builder valuebuilder   qualifiervalue newbuilder
for  map entry<byte list<cell>> family  mutation getfamilycellmap   entryset
columnbuilder setfamily bytestring copyfrom family getkey
columnbuilder clearqualifiervalue
for  cell cell  family getvalue
keyvalue kv   keyvalueutil ensurekeyvalue cell
valuebuilder setqualifier bytestring copyfrom kv getqualifier
valuebuilder setvalue bytestring copyfrom kv getvalue
valuebuilder settimestamp kv gettimestamp
if  type    mutationtype delete
keyvalue type keyvaluetype   keyvalue type codetotype kv gettype
valuebuilder setdeletetype todeletetype keyvaluetype
columnbuilder addqualifiervalue valuebuilder build
builder addcolumnvalue columnbuilder build
return builder build
/**
* create a protocol buffer mutationproto based on a client mutation.  does not include data.
* understanding is that the cell will be transported other than via protobuf.
* @param type
* @param mutation
* @return a protobuf'd mutation
* @throws ioexception
*/
public static mutationproto tomutationnodata final mutationtype type  final mutation mutation
throws ioexception
mutationproto builder builder   getmutationbuilderandsetcommonfields type  mutation
builder setassociatedcellcount mutation size
return builder build
/**
* code shared by {@link #tomutation(mutationtype, mutation)} and
* {@link #tomutationnodata(mutationtype, mutation)}
* @param type
* @param mutation
* @return a partly-filled out protobuf'd mutation.
*/
private static mutationproto builder getmutationbuilderandsetcommonfields final mutationtype type
final mutation mutation
mutationproto builder builder   mutationproto newbuilder
builder setrow bytestring copyfrom mutation getrow
builder setmutatetype type
builder setdurability todurability mutation getdurability
builder settimestamp mutation gettimestamp
map<string  byte> attributes   mutation getattributesmap
if   attributes isempty
namebytespair builder attributebuilder   namebytespair newbuilder
for  map entry<string  byte> attribute  attributes entryset
attributebuilder setname attribute getkey
attributebuilder setvalue bytestring copyfrom attribute getvalue
builder addattribute attributebuilder build
return builder
/**
* convert a client result to a protocol buffer result
*
* @param result the client result to convert
* @return the converted protocol buffer result
*/
public static clientprotos result toresult final result result
clientprotos result builder builder   clientprotos result newbuilder
cell  cells   result raw
if  cells    null
for  cell c   cells
builder addcell tocell c
return builder build
/**
* convert a client result to a protocol buffer result.
* the pb result does not include the cell data.  that is for transport otherwise.
*
* @param result the client result to convert
* @return the converted protocol buffer result
*/
public static clientprotos result toresultnodata final result result
clientprotos result builder builder   clientprotos result newbuilder
builder setassociatedcellcount result size
return builder build
/**
* convert a protocol buffer result to a client result
*
* @param proto the protocol buffer result to convert
* @return the converted client result
*/
public static result toresult final clientprotos result proto
list<cellprotos cell> values   proto getcelllist
list<cell> cells   new arraylist<cell> values size
for  cellprotos cell c  values
cells add tocell c
return new result cells
/**
* convert a protocol buffer result to a client result
*
* @param proto the protocol buffer result to convert
* @param scanner optional cell scanner.
* @return the converted client result
* @throws ioexception
*/
public static result toresult final clientprotos result proto  final cellscanner scanner
throws ioexception
// todo: unit test that has some cells in scanner and some in the proto.
list<cell> cells   null
if  proto hasassociatedcellcount
int count   proto getassociatedcellcount
cells   new arraylist<cell> count
for  int i   0  i < count  i
if   scanner advance    throw new ioexception     i       count
cells add scanner current
list<cellprotos cell> values   proto getcelllist
if  cells    null  cells   new arraylist<cell> values size
for  cellprotos cell c  values
cells add tocell c
return new result cells
/**
* convert a bytearraycomparable to a protocol buffer comparator
*
* @param comparator the bytearraycomparable to convert
* @return the converted protocol buffer comparator
*/
public static comparatorprotos comparator tocomparator bytearraycomparable comparator
comparatorprotos comparator builder builder   comparatorprotos comparator newbuilder
builder setname comparator getclass   getname
builder setserializedcomparator bytestring copyfrom comparator tobytearray
return builder build
/**
* convert a protocol buffer comparator to a bytearraycomparable
*
* @param proto the protocol buffer comparator to convert
* @return the converted bytearraycomparable
*/
@suppresswarnings
public static bytearraycomparable tocomparator comparatorprotos comparator proto
throws ioexception
string type   proto getname
string funcname
byte  value   proto getserializedcomparator   tobytearray
try
class<? extends bytearraycomparable> c
class<? extends bytearraycomparable> class forname type  true  class_loader
method parsefrom   c getmethod funcname  byte class
if  parsefrom    null
throw new ioexception     funcname       type
return  bytearraycomparable parsefrom invoke null  value
catch  exception e
throw new ioexception e
/**
* convert a protocol buffer filter to a client filter
*
* @param proto the protocol buffer filter to convert
* @return the converted filter
*/
@suppresswarnings
public static filter tofilter filterprotos filter proto  throws ioexception
string type   proto getname
final byte  value   proto getserializedfilter   tobytearray
string funcname
try
class<? extends filter> c
class<? extends filter> class forname type  true  class_loader
method parsefrom   c getmethod funcname  byte class
if  parsefrom    null
throw new ioexception     funcname       type
return  filter parsefrom invoke c  value
catch  exception e
throw new ioexception e
/**
* convert a client filter to a protocol buffer filter
*
* @param filter the filter to convert
* @return the converted protocol buffer filter
*/
public static filterprotos filter tofilter filter filter  throws ioexception
filterprotos filter builder builder   filterprotos filter newbuilder
builder setname filter getclass   getname
builder setserializedfilter bytestring copyfrom filter tobytearray
return builder build
/**
* convert a delete keyvalue type to protocol buffer deletetype.
*
* @param type
* @return protocol buffer deletetype
* @throws ioexception
*/
public static deletetype todeletetype
keyvalue type type  throws ioexception
switch  type
case delete
return deletetype delete_one_version
case deletecolumn
return deletetype delete_multiple_versions
case deletefamily
return deletetype delete_family
case deletefamilyversion
return deletetype delete_family_version
default
throw new ioexception     type
/**
* convert a stringified protocol buffer exception parameter to a java exception
*
* @param parameter the protocol buffer parameter to convert
* @return the converted exception
* @throws ioexception if failed to deserialize the parameter
*/
@suppresswarnings
public static throwable toexception final namebytespair parameter  throws ioexception
if  parameter    null     parameter hasvalue    return null
string desc   parameter getvalue   tostringutf8
string type   parameter getname
try
class<? extends throwable> c
class<? extends throwable> class forname type  true  class_loader
constructor<? extends throwable> cn   null
try
cn   c getdeclaredconstructor string class
return cn newinstance desc
catch  nosuchmethodexception e
// could be a raw remoteexception. see hbase-8987.
cn   c getdeclaredconstructor string class  string class
return cn newinstance type  desc
catch  exception e
throw new ioexception e
// start helpers for client
/**
* a helper to invoke a get using client protocol.
*
* @param client
* @param regionname
* @param get
* @return the result of the get
* @throws ioexception
*/
public static result get final clientservice blockinginterface client
final byte regionname  final get get  throws ioexception
getrequest request
requestconverter buildgetrequest regionname  get
try
getresponse response   client get null  request
if  response    null  return null
return toresult response getresult
catch  serviceexception se
throw getremoteexception se
/**
* a helper to get a row of the closet one before using client protocol.
*
* @param client
* @param regionname
* @param row
* @param family
* @return the row or the closestrowbefore if it doesn't exist
* @throws ioexception
*/
public static result getroworbefore final clientservice blockinginterface client
final byte regionname  final byte row
final byte family  throws ioexception
getrequest request
requestconverter buildgetroworbeforerequest
regionname  row  family
try
getresponse response   client get null  request
if   response hasresult    return null
return toresult response getresult
catch  serviceexception se
throw getremoteexception se
/**
* a helper to bulk load a list of hfiles using client protocol.
*
* @param client
* @param familypaths
* @param regionname
* @param assignseqnum
* @return true if all are loaded
* @throws ioexception
*/
public static boolean bulkloadhfile final clientservice blockinginterface client
final list<pair<byte  string>> familypaths
final byte regionname  boolean assignseqnum  throws ioexception
bulkloadhfilerequest request
requestconverter buildbulkloadhfilerequest familypaths  regionname  assignseqnum
try
bulkloadhfileresponse response
client bulkloadhfile null  request
return response getloaded
catch  serviceexception se
throw getremoteexception se
public static coprocessorserviceresponse execservice final clientservice blockinginterface client
final coprocessorservicecall call  final byte regionname  throws ioexception
coprocessorservicerequest request   coprocessorservicerequest newbuilder
setcall call  setregion
requestconverter buildregionspecifier region_name  regionname   build
try
coprocessorserviceresponse response
client execservice null  request
return response
catch  serviceexception se
throw getremoteexception se
public static coprocessorserviceresponse execservice
final masteradminservice blockinginterface client  final coprocessorservicecall call
throws ioexception
coprocessorservicerequest request   coprocessorservicerequest newbuilder
setcall call  setregion
requestconverter buildregionspecifier region_name  hconstants empty_byte_array   build
try
coprocessorserviceresponse response
client execmasterservice null  request
return response
catch  serviceexception se
throw getremoteexception se
@suppresswarnings
public static <t extends service> t newservicestub class<t> service  rpcchannel channel
throws exception
return  t methods call service  null
new class  rpcchannel class    new object  channel
// end helpers for client
// start helpers for admin
/**
* a helper to retrieve region info given a region name
* using admin protocol.
*
* @param admin
* @param regionname
* @return the retrieved region info
* @throws ioexception
*/
public static hregioninfo getregioninfo final adminservice blockinginterface admin
final byte regionname  throws ioexception
try
getregioninforequest request
requestconverter buildgetregioninforequest regionname
getregioninforesponse response
admin getregioninfo null  request
return hregioninfo convert response getregioninfo
catch  serviceexception se
throw getremoteexception se
/**
* a helper to close a region given a region name
* using admin protocol.
*
* @param admin
* @param regionname
* @param transitioninzk
* @throws ioexception
*/
public static void closeregion final adminservice blockinginterface admin
final byte regionname  final boolean transitioninzk  throws ioexception
closeregionrequest closeregionrequest
requestconverter buildcloseregionrequest regionname  transitioninzk
try
admin closeregion null  closeregionrequest
catch  serviceexception se
throw getremoteexception se
/**
* a helper to close a region given a region name
* using admin protocol.
*
* @param admin
* @param regionname
* @param versionofclosingnode
* @return true if the region is closed
* @throws ioexception
*/
public static boolean closeregion final adminservice blockinginterface admin
final byte regionname
final int versionofclosingnode  final servername destinationserver
final boolean transitioninzk  throws ioexception
closeregionrequest closeregionrequest
requestconverter buildcloseregionrequest
regionname  versionofclosingnode  destinationserver  transitioninzk
try
closeregionresponse response   admin closeregion null  closeregionrequest
return responseconverter isclosed response
catch  serviceexception se
throw getremoteexception se
/**
* a helper to open a region using admin protocol.
* @param admin
* @param region
* @throws ioexception
*/
public static void openregion final adminservice blockinginterface admin
final hregioninfo region  throws ioexception
openregionrequest request
requestconverter buildopenregionrequest region   1  null
try
admin openregion null  request
catch  serviceexception se
throw protobufutil getremoteexception se
/**
* a helper to get the all the online regions on a region
* server using admin protocol.
*
* @param admin
* @return a list of online region info
* @throws ioexception
*/
public static list<hregioninfo> getonlineregions final adminservice blockinginterface admin
throws ioexception
getonlineregionrequest request   requestconverter buildgetonlineregionrequest
getonlineregionresponse response   null
try
response   admin getonlineregion null  request
catch  serviceexception se
throw getremoteexception se
return getregioninfos response
/**
* get the list of region info from a getonlineregionresponse
*
* @param proto the getonlineregionresponse
* @return the list of region info or null if <code>proto</code> is null
*/
static list<hregioninfo> getregioninfos final getonlineregionresponse proto
if  proto    null  return null
list<hregioninfo> regioninfos   new arraylist<hregioninfo>
for  regioninfo regioninfo  proto getregioninfolist
regioninfos add hregioninfo convert regioninfo
return regioninfos
/**
* a helper to get the info of a region server using admin protocol.
*
* @param admin
* @return the server name
* @throws ioexception
*/
public static serverinfo getserverinfo final adminservice blockinginterface admin
throws ioexception
getserverinforequest request   requestconverter buildgetserverinforequest
try
getserverinforesponse response   admin getserverinfo null  request
return response getserverinfo
catch  serviceexception se
throw getremoteexception se
/**
* a helper to get the list of files of a column family
* on a given region using admin protocol.
*
* @param admin
* @param regionname
* @param family
* @return the list of store files
* @throws ioexception
*/
public static list<string> getstorefiles final adminservice blockinginterface admin
final byte regionname  final byte family
throws ioexception
getstorefilerequest request
requestconverter buildgetstorefilerequest regionname  family
try
getstorefileresponse response   admin getstorefile null  request
return response getstorefilelist
catch  serviceexception se
throw protobufutil getremoteexception se
/**
* a helper to split a region using admin protocol.
*
* @param admin
* @param hri
* @param splitpoint
* @throws ioexception
*/
public static void split final adminservice blockinginterface admin
final hregioninfo hri  byte splitpoint  throws ioexception
splitregionrequest request
requestconverter buildsplitregionrequest hri getregionname    splitpoint
try
admin splitregion null  request
catch  serviceexception se
throw protobufutil getremoteexception se
/**
* a helper to merge regions using admin protocol. send request to
* regionserver.
* @param admin
* @param region_a
* @param region_b
* @param forcible true if do a compulsory merge, otherwise we will only merge
*          two adjacent regions
* @throws ioexception
*/
public static void mergeregions final adminservice blockinginterface admin
final hregioninfo region_a  final hregioninfo region_b
final boolean forcible  throws ioexception
mergeregionsrequest request   requestconverter buildmergeregionsrequest
region_a getregionname    region_b getregionname   forcible
try
admin mergeregions null  request
catch  serviceexception se
throw protobufutil getremoteexception se
// end helpers for admin
/*
* get the total (read + write) requests from a regionload pb
* @param rl - regionload pb
* @return total (read + write) requests
*/
public static long gettotalrequestscount regionload rl
if  rl    null
return 0
return rl getreadrequestscount     rl getwriterequestscount
/**
* @param m message to get delimited pb serialization of (with pb magic prefix)
*/
public static byte  todelimitedbytearray final message m  throws ioexception
// allocate arbitrary big size so we avoid resizing.
bytearrayoutputstream baos   new bytearrayoutputstream 4096
m writedelimitedto baos
baos close
return protobufutil prependpbmagic baos tobytearray
/**
* converts a permission proto to a client permission object.
*
* @param proto the protobuf permission
* @return the converted permission
*/
public static permission topermission accesscontrolprotos permission proto
if  proto gettype      accesscontrolprotos permission type global
return totablepermission proto
else
list<permission action> actions   topermissionactions proto getglobalpermission   getactionlist
return new permission actions toarray new permission action
/**
* converts a permission proto to a client tablepermission object.
*
* @param proto the protobuf permission
* @return the converted tablepermission
*/
public static tablepermission totablepermission accesscontrolprotos permission proto
if proto gettype      accesscontrolprotos permission type global
accesscontrolprotos globalpermission perm   proto getglobalpermission
list<permission action> actions   topermissionactions perm getactionlist
return new tablepermission null  null  null
actions toarray new permission action
if proto gettype      accesscontrolprotos permission type namespace
accesscontrolprotos namespacepermission perm   proto getnamespacepermission
list<permission action> actions   topermissionactions perm getactionlist
if  proto hasnamespacepermission
throw new illegalstateexception
string namespace   perm getnamespacename   tostringutf8
return new tablepermission namespace  actions toarray new permission action
if proto gettype      accesscontrolprotos permission type table
accesscontrolprotos tablepermission perm   proto gettablepermission
list<permission action> actions   topermissionactions perm getactionlist
byte qualifier   null
byte family   null
tablename table   null
if   perm hastablename
throw new illegalstateexception
table   protobufutil totablename perm gettablename
if  perm hasfamily    family   perm getfamily   tobytearray
if  perm hasqualifier    qualifier   perm getqualifier   tobytearray
return new tablepermission table  family  qualifier
actions toarray new permission action
throw new illegalstateexception   proto gettype
/**
* convert a client permission to a permission proto
*
* @param perm the client permission
* @return the protobuf permission
*/
public static accesscontrolprotos permission topermission permission perm
accesscontrolprotos permission builder ret   accesscontrolprotos permission newbuilder
if  perm instanceof tablepermission
tablepermission tableperm    tablepermission perm
if tableperm hasnamespace
ret settype accesscontrolprotos permission type namespace
accesscontrolprotos namespacepermission builder builder
accesscontrolprotos namespacepermission newbuilder
builder setnamespacename bytestring copyfromutf8 tableperm getnamespace
for  permission action a   perm getactions
builder addaction topermissionaction a
ret setnamespacepermission builder
else if  tableperm hastable
ret settype accesscontrolprotos permission type table
accesscontrolprotos tablepermission builder builder
accesscontrolprotos tablepermission newbuilder
builder settablename protobufutil toprototablename tableperm gettable
if  tableperm hasfamily
builder setfamily bytestring copyfrom tableperm getfamily
if  tableperm hasqualifier
builder setqualifier bytestring copyfrom tableperm getqualifier
for  permission action a   perm getactions
builder addaction topermissionaction a
ret settablepermission builder
else
ret settype accesscontrolprotos permission type global
accesscontrolprotos globalpermission builder builder
accesscontrolprotos globalpermission newbuilder
for  permission action a   perm getactions
builder addaction topermissionaction a
ret setglobalpermission builder
return ret build
/**
* converts a list of permission.action proto to a list of client permission.action objects.
*
* @param protoactions the list of protobuf actions
* @return the converted list of actions
*/
public static list<permission action> topermissionactions
list<accesscontrolprotos permission action> protoactions
list<permission action> actions   new arraylist<permission action> protoactions size
for  accesscontrolprotos permission action a   protoactions
actions add topermissionaction a
return actions
/**
* converts a permission.action proto to a client permission.action object.
*
* @param action the protobuf action
* @return the converted action
*/
public static permission action topermissionaction
accesscontrolprotos permission action action
switch  action
case read
return permission action read
case write
return permission action write
case exec
return permission action exec
case create
return permission action create
case admin
return permission action admin
throw new illegalargumentexception   action name
/**
* convert a client permission.action to a permission.action proto
*
* @param action the client action
* @return the protobuf action
*/
public static accesscontrolprotos permission action topermissionaction
permission action action
switch  action
case read
return accesscontrolprotos permission action read
case write
return accesscontrolprotos permission action write
case exec
return accesscontrolprotos permission action exec
case create
return accesscontrolprotos permission action create
case admin
return accesscontrolprotos permission action admin
throw new illegalargumentexception   action name
/**
* convert a client user permission to a user permission proto
*
* @param perm the client userpermission
* @return the protobuf userpermission
*/
public static accesscontrolprotos userpermission touserpermission userpermission perm
return accesscontrolprotos userpermission newbuilder
setuser bytestring copyfrom perm getuser
setpermission topermission perm
build
/**
* converts a user permission proto to a client user permission object.
*
* @param proto the protobuf userpermission
* @return the converted userpermission
*/
public static userpermission touserpermission accesscontrolprotos userpermission proto
return new userpermission proto getuser   tobytearray
totablepermission proto getpermission
/**
* convert a listmultimap<string, tablepermission> where key is username
* to a protobuf userpermission
*
* @param perm the list of user and table permissions
* @return the protobuf usertablepermissions
*/
public static accesscontrolprotos usersandpermissions tousertablepermissions
listmultimap<string  tablepermission> perm
accesscontrolprotos usersandpermissions builder builder
accesscontrolprotos usersandpermissions newbuilder
for  map entry<string  collection<tablepermission>> entry   perm asmap   entryset
accesscontrolprotos usersandpermissions userpermissions builder userpermbuilder
accesscontrolprotos usersandpermissions userpermissions newbuilder
userpermbuilder setuser bytestring copyfromutf8 entry getkey
for  tablepermission tableperm  entry getvalue
userpermbuilder addpermissions topermission tableperm
builder adduserpermissions userpermbuilder build
return builder build
/**
* a utility used to grant a user global permissions.
* <p>
* it's also called by the shell, in case you want to find references.
*
* @param protocol the accesscontrolservice protocol proxy
* @param usershortname the short name of the user to grant permissions
* @param actions the permissions to be granted
* @throws serviceexception
*/
public static void grant accesscontrolservice blockinginterface protocol
string usershortname  permission action    actions  throws serviceexception
list<accesscontrolprotos permission action> permactions
lists newarraylistwithcapacity actions length
for  permission action a   actions
permactions add protobufutil topermissionaction a
accesscontrolprotos grantrequest request   requestconverter
buildgrantrequest usershortname  permactions toarray
new accesscontrolprotos permission action
protocol grant null  request
/**
* a utility used to grant a user table permissions. the permissions will
* be for a table table/column family/qualifier.
* <p>
* it's also called by the shell, in case you want to find references.
*
* @param protocol the accesscontrolservice protocol proxy
* @param usershortname the short name of the user to grant permissions
* @param tablename optional table name
* @param f optional column family
* @param q optional qualifier
* @param actions the permissions to be granted
* @throws serviceexception
*/
public static void grant accesscontrolservice blockinginterface protocol
string usershortname  tablename tablename  byte f  byte q
permission action    actions  throws serviceexception
list<accesscontrolprotos permission action> permactions
lists newarraylistwithcapacity actions length
for  permission action a   actions
permactions add protobufutil topermissionaction a
accesscontrolprotos grantrequest request   requestconverter
buildgrantrequest usershortname  tablename  f  q  permactions toarray
new accesscontrolprotos permission action
protocol grant null  request
/**
* a utility used to grant a user namespace permissions.
* <p>
* it's also called by the shell, in case you want to find references.
*
* @param protocol the accesscontrolservice protocol proxy
* @param namespace the short name of the user to grant permissions
* @param actions the permissions to be granted
* @throws serviceexception
*/
public static void grant accesscontrolservice blockinginterface protocol
string usershortname  string namespace
permission action    actions  throws serviceexception
list<accesscontrolprotos permission action> permactions
lists newarraylistwithcapacity actions length
for  permission action a   actions
permactions add protobufutil topermissionaction a
accesscontrolprotos grantrequest request   requestconverter
buildgrantrequest usershortname  namespace  permactions toarray
new accesscontrolprotos permission action
protocol grant null  request
/**
* a utility used to revoke a user's global permissions.
* <p>
* it's also called by the shell, in case you want to find references.
*
* @param protocol the accesscontrolservice protocol proxy
* @param usershortname the short name of the user to revoke permissions
* @param actions the permissions to be revoked
* @throws serviceexception
*/
public static void revoke accesscontrolservice blockinginterface protocol
string usershortname  permission action    actions  throws serviceexception
list<accesscontrolprotos permission action> permactions
lists newarraylistwithcapacity actions length
for  permission action a   actions
permactions add protobufutil topermissionaction a
accesscontrolprotos revokerequest request   requestconverter
buildrevokerequest usershortname  permactions toarray
new accesscontrolprotos permission action
protocol revoke null  request
/**
* a utility used to revoke a user's table permissions. the permissions will
* be for a table/column family/qualifier.
* <p>
* it's also called by the shell, in case you want to find references.
*
* @param protocol the accesscontrolservice protocol proxy
* @param usershortname the short name of the user to revoke permissions
* @param tablename optional table name
* @param f optional column family
* @param q optional qualifier
* @param actions the permissions to be revoked
* @throws serviceexception
*/
public static void revoke accesscontrolservice blockinginterface protocol
string usershortname  tablename tablename  byte f  byte q
permission action    actions  throws serviceexception
list<accesscontrolprotos permission action> permactions
lists newarraylistwithcapacity actions length
for  permission action a   actions
permactions add protobufutil topermissionaction a
accesscontrolprotos revokerequest request   requestconverter
buildrevokerequest usershortname  tablename  f  q  permactions toarray
new accesscontrolprotos permission action
protocol revoke null  request
/**
* a utility used to revoke a user's namespace permissions.
* <p>
* it's also called by the shell, in case you want to find references.
*
* @param protocol the accesscontrolservice protocol proxy
* @param usershortname the short name of the user to revoke permissions
* @param namespace optional table name
* @param actions the permissions to be revoked
* @throws serviceexception
*/
public static void revoke accesscontrolservice blockinginterface protocol
string usershortname  string namespace
permission action    actions  throws serviceexception
list<accesscontrolprotos permission action> permactions
lists newarraylistwithcapacity actions length
for  permission action a   actions
permactions add protobufutil topermissionaction a
accesscontrolprotos revokerequest request   requestconverter
buildrevokerequest usershortname  namespace  permactions toarray
new accesscontrolprotos permission action
protocol revoke null  request
/**
* a utility used to get user's global permissions.
* <p>
* it's also called by the shell, in case you want to find references.
*
* @param protocol the accesscontrolservice protocol proxy
* @throws serviceexception
*/
public static list<userpermission> getuserpermissions
accesscontrolservice blockinginterface protocol  throws serviceexception
accesscontrolprotos userpermissionsrequest builder builder
accesscontrolprotos userpermissionsrequest newbuilder
builder settype accesscontrolprotos permission type global
accesscontrolprotos userpermissionsrequest request   builder build
accesscontrolprotos userpermissionsresponse response
protocol getuserpermissions null  request
list<userpermission> perms   new arraylist<userpermission>
for  accesscontrolprotos userpermission perm  response getuserpermissionlist
perms add protobufutil touserpermission perm
return perms
/**
* a utility used to get user table permissions.
* <p>
* it's also called by the shell, in case you want to find references.
*
* @param protocol the accesscontrolservice protocol proxy
* @param t optional table name
* @throws serviceexception
*/
public static list<userpermission> getuserpermissions
accesscontrolservice blockinginterface protocol
tablename t  throws serviceexception
accesscontrolprotos userpermissionsrequest builder builder
accesscontrolprotos userpermissionsrequest newbuilder
if  t    null
builder settablename protobufutil toprototablename t
builder settype accesscontrolprotos permission type table
accesscontrolprotos userpermissionsrequest request   builder build
accesscontrolprotos userpermissionsresponse response
protocol getuserpermissions null  request
list<userpermission> perms   new arraylist<userpermission>
for  accesscontrolprotos userpermission perm  response getuserpermissionlist
perms add protobufutil touserpermission perm
return perms
/**
* convert a protobuf usertablepermissions to a
* listmultimap<string, tablepermission> where key is username.
*
* @param proto the protobuf userpermission
* @return the converted userpermission
*/
public static listmultimap<string  tablepermission> tousertablepermissions
accesscontrolprotos usersandpermissions proto
listmultimap<string  tablepermission> perms   arraylistmultimap create
accesscontrolprotos usersandpermissions userpermissions userperm
for  int i   0  i < proto getuserpermissionscount    i
userperm   proto getuserpermissions i
for  int j   0  j < userperm getpermissionscount    j
tablepermission tableperm   totablepermission userperm getpermissions j
perms put userperm getuser   tostringutf8    tableperm
return perms
/**
* converts a token instance (with embedded identifier) to the protobuf representation.
*
* @param token the token instance to copy
* @return the protobuf token message
*/
public static authenticationprotos token totoken token<authenticationtokenidentifier> token
authenticationprotos token builder builder   authenticationprotos token newbuilder
builder setidentifier bytestring copyfrom token getidentifier
builder setpassword bytestring copyfrom token getpassword
if  token getservice      null
builder setservice bytestring copyfromutf8 token getservice   tostring
return builder build
/**
* converts a protobuf token message back into a token instance.
*
* @param proto the protobuf token message
* @return the token instance
*/
public static token<authenticationtokenidentifier> totoken authenticationprotos token proto
return new token<authenticationtokenidentifier>
proto hasidentifier   ? proto getidentifier   tobytearray     null
proto haspassword   ? proto getpassword   tobytearray     null
authenticationtokenidentifier auth_token_type
proto hasservice   ? new text proto getservice   tostringutf8      null
/**
* find the hregion encoded name based on a region specifier
*
* @param regionspecifier the region specifier
* @return the corresponding region's encoded name
* @throws donotretryioexception if the specifier type is unsupported
*/
public static string getregionencodedname
final regionspecifier regionspecifier  throws donotretryioexception
byte value   regionspecifier getvalue   tobytearray
regionspecifiertype type   regionspecifier gettype
switch  type
case region_name
return hregioninfo encoderegionname value
case encoded_region_name
return bytes tostring value
default
throw new donotretryioexception
type
public static scanmetrics toscanmetrics final byte bytes
mapreduceprotos scanmetrics builder builder   mapreduceprotos scanmetrics newbuilder
try
builder mergefrom bytes
catch  invalidprotocolbufferexception e
//ignored there are just no key values to add.
mapreduceprotos scanmetrics pscanmetrics   builder build
scanmetrics scanmetrics   new scanmetrics
for  hbaseprotos nameint64pair pair   pscanmetrics getmetricslist
if  pair hasname      pair hasvalue
scanmetrics setcounter pair getname    pair getvalue
return scanmetrics
public static mapreduceprotos scanmetrics toscanmetrics scanmetrics scanmetrics
mapreduceprotos scanmetrics builder builder   mapreduceprotos scanmetrics newbuilder
map<string  long> metrics   scanmetrics getmetricsmap
for  entry<string  long> e   metrics entryset
hbaseprotos nameint64pair nameint64pair
hbaseprotos nameint64pair newbuilder
setname e getkey
setvalue e getvalue
build
builder addmetrics nameint64pair
return builder build
/**
* unwraps an exception from a protobuf service into the underlying (expected) ioexception.
* this method will <strong>always</strong> throw an exception.
* @param se the {@code serviceexception} instance to convert into an {@code ioexception}
*/
public static void toioexception serviceexception se  throws ioexception
if  se    null
throw new nullpointerexception
throwable cause   se getcause
if  cause    null    cause instanceof ioexception
throw  ioexception cause
throw new ioexception se
public static cellprotos cell tocell final cell kv
// doing this is going to kill us if we do it for all data passed.
// st.ack 20121205
cellprotos cell builder kvbuilder   cellprotos cell newbuilder
kvbuilder setrow bytestring copyfrom kv getrowarray    kv getrowoffset
kv getrowlength
kvbuilder setfamily bytestring copyfrom kv getfamilyarray
kv getfamilyoffset    kv getfamilylength
kvbuilder setqualifier bytestring copyfrom kv getqualifierarray
kv getqualifieroffset    kv getqualifierlength
kvbuilder setcelltype cellprotos celltype valueof kv gettypebyte
kvbuilder settimestamp kv gettimestamp
kvbuilder setvalue bytestring copyfrom kv getvaluearray    kv getvalueoffset    kv getvaluelength
return kvbuilder build
public static cell tocell final cellprotos cell cell
// doing this is going to kill us if we do it for all data passed.
// st.ack 20121205
return cellutil createcell cell getrow   tobytearray
cell getfamily   tobytearray
cell getqualifier   tobytearray
cell gettimestamp
byte cell getcelltype   getnumber
cell getvalue   tobytearray
public static hbaseprotos namespacedescriptor toprotonamespacedescriptor namespacedescriptor ns
hbaseprotos namespacedescriptor builder b
hbaseprotos namespacedescriptor newbuilder
setname bytestring copyfromutf8 ns getname
for map entry<string  string> entry  ns getconfiguration   entryset
b addconfiguration hbaseprotos namestringpair newbuilder
setname entry getkey
setvalue entry getvalue
return b build
public static namespacedescriptor tonamespacedescriptor
hbaseprotos namespacedescriptor desc  throws ioexception
namespacedescriptor builder b
namespacedescriptor create desc getname   tostringutf8
for hbaseprotos namestringpair prop   desc getconfigurationlist
b addconfiguration prop getname    prop getvalue
return b build
/**
* get an instance of the argument type declared in a class's signature. the
* argument type is assumed to be a pb message subclass, and the instance is
* created using parsefrom method on the passed bytestring.
* @param runtimeclass the runtime type of the class
* @param position the position of the argument in the class declaration
* @param b the bytestring which should be parsed to get the instance created
* @return the instance
* @throws ioexception
*/
@suppresswarnings
public static <t extends message>
t getparsedgenericinstance class<?> runtimeclass  int position  bytestring b
throws ioexception
type type   runtimeclass getgenericsuperclass
type argtype     parameterizedtype type  getactualtypearguments
class<t> classtype    class<t> argtype
t inst
try
method m   classtype getmethod    bytestring class
inst    t m invoke null  b
return inst
catch  securityexception e
throw new ioexception e
catch  nosuchmethodexception e
throw new ioexception e
catch  illegalargumentexception e
throw new ioexception e
catch  invocationtargetexception e
throw new ioexception e
catch  illegalaccessexception e
throw new ioexception e
public static compactiondescriptor tocompactiondescriptor hregioninfo info  byte family
list<path> inputpaths  list<path> outputpaths  path storedir
// compaction descriptor contains relative paths.
// input / output paths are relative to the store dir
// store dir is relative to region dir
compactiondescriptor builder builder   compactiondescriptor newbuilder
settablename bytestring copyfrom info gettablename   getname
setencodedregionname bytestring copyfrom info getencodednameasbytes
setfamilyname bytestring copyfrom family
setstorehomedir storedir getname       make relative
for  path inputpath   inputpaths
builder addcompactioninput inputpath getname       relative path
for  path outputpath   outputpaths
builder addcompactionoutput outputpath getname
return builder build
/**
* return short version of message tostring'd, shorter than textformat#shortdebugstring.
* tries to not print out data both because it can be big but also so we do not have data in our
* logs. use judiciously.
* @param m
* @return tostring of passed <code>m</code>
*/
public static string getshorttextformat message m
if  m    null  return
if  m instanceof scanrequest
// this should be small and safe to output.  no data.
return textformat shortdebugstring m
else if  m instanceof regionserverreportrequest
// print a short message only, just the servername and the requests, not the full load.
regionserverreportrequest r    regionserverreportrequest m
return     textformat shortdebugstring r getserver
r getload   getnumberofrequests
else if  m instanceof regionserverstartuprequest
// should be small enough.
return textformat shortdebugstring m
else if  m instanceof mutationproto
return toshortstring  mutationproto m
else if  m instanceof getrequest
getrequest r    getrequest  m
return     getstringforbytestring r getregion   getvalue
getstringforbytestring r getget   getrow
else if  m instanceof clientprotos multirequest
clientprotos multirequest r    clientprotos multirequest  m
clientprotos multiaction action   r getactionlist   get 0
return     getstringforbytestring r getregion   getvalue
r getactioncount
getstringforbytestring action hasmutation   ?
action getmutation   getrow     action getget   getrow
else if  m instanceof clientprotos mutaterequest
clientprotos mutaterequest r    clientprotos mutaterequest  m
return     getstringforbytestring r getregion   getvalue
getstringforbytestring r getmutation   getrow
return     m getclass   tostring
private static string getstringforbytestring bytestring bs
return bytes tostringbinary bs tobytearray
/**
* print out some subset of a mutationproto rather than all of it and its data
* @param proto protobuf to print out
* @return short string of mutation proto
*/
static string toshortstring final mutationproto proto
return     bytes tostring proto getrow   tobytearray
proto getmutatetype   tostring
public static tablename totablename hbaseprotos tablename tablenamepb
return tablename valueof tablenamepb getnamespace   tobytearray
tablenamepb getqualifier   tobytearray
public static hbaseprotos tablename toprototablename tablename tablename
return hbaseprotos tablename newbuilder
setnamespace bytestring copyfrom tablename getnamespace
setqualifier bytestring copyfrom tablename getqualifier     build
public static tablename gettablenamearray list<hbaseprotos tablename> tablenameslist
if  tablenameslist    null
return new tablename
tablename tablenames   new tablename
for  int i   0  i < tablenameslist size    i
tablenames   totablename tablenameslist get i
return tablenames