/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hbase codec prefixtree scanner
import org apache hadoop classification interfaceaudience
import org apache hadoop classification interfacestability
/**
* an indicator of the state of the scanner after an operation such as nextcell() or
* positionat(..). for example:
* <ul>
* <li>in a datablockscanner, the after_last position indicates to the parent storefilescanner that
* it should load the next block.</li>
* <li>in a storefilescanner, the after_last position indicates that the file has been exhausted.
* </li>
* <li>in a regionscanner, the after_last position indicates that the scanner should move to the
* next region.</li>
* </ul>
*/
@interfaceaudience public
@interfacestability evolving
public enum cellscannerposition
/**
* getcurrentcell() will not return a valid cell. calling nextcell() will advance to the first
* cell.
*/
before_first
/**
* getcurrentcell() will return a valid cell, but it is not the cell requested by positionat(..),
* rather it is the nearest cell before the requested cell.
*/
before
/**
* getcurrentcell() will return a valid cell, and it is exactly the cell that was requested by
* positionat(..).
*/
at
/**
* getcurrentcell() will return a valid cell, but it is not the cell requested by positionat(..),
* rather it is the nearest cell after the requested cell.
*/
after
/**
* getcurrentcell() will not return a valid cell. calling nextcell() will have no effect.
*/
after_last