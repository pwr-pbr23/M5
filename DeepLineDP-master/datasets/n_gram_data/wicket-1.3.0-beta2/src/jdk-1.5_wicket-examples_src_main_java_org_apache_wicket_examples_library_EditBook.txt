/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples library
import java util arraylist
import java util list
import org apache wicket page
import org apache wicket pageparameters
import org apache wicket requestcycle
import org apache wicket markup html form checkbox
import org apache wicket markup html form dropdownchoice
import org apache wicket markup html form form
import org apache wicket markup html form listmultiplechoice
import org apache wicket markup html form radiochoice
import org apache wicket markup html form textfield
import org apache wicket markup html form validation formcomponentfeedbackborder
import org apache wicket markup html link ipagelink
import org apache wicket markup html link pagelink
import org apache wicket markup html panel feedbackpanel
import org apache wicket model compoundpropertymodel
import org apache wicket util lang enumeratedtype
import org apache wicket validation validator stringvalidator
/**
* a page that contains a form that allows editing of books.
*
* @author jonathan locke
*/
public final class editbook extends authenticatedwebpage
static final book otherbook   new book       book fiction
/**
* constructs a page that edits a book
*
* @param book
*            the book to edit
*/
public editbook final book book
// create and add feedback panel to page
final feedbackpanel feedback   new feedbackpanel
add feedback
// add edit book form to page
add new editbookform    book
/**
* gets a link to a page that will edit a book
*
* @param name
*            the name of the link
* @param id
*            the id of the book that the page will edit
* @return the page link
*/
public static pagelink link final string name  final long id
return new pagelink name  new ipagelink
public page getpage
return new editbook book get id
public class getpageidentity
return editbook class
/**
* form that edits a book
*
* @author jonathan locke
*/
static public final class editbookform extends form
/**
* constructor
*
* @param id
*            id of form
* @param book
*            book model
*/
public editbookform final string id  final book book
super id  new compoundpropertymodel book
// create a required text field with a max length of 30 characters
// that edits the book's title
final textfield title   new textfield
title setrequired true
title add stringvalidator maximumlength 30
final formcomponentfeedbackborder titlefeedback   new formcomponentfeedbackborder
add titlefeedback
titlefeedback add title
// create a required text field that edits the book's author
final textfield author   new textfield
author setrequired true
final formcomponentfeedbackborder authorfeedback   new formcomponentfeedbackborder
add authorfeedback
authorfeedback add author
// add fiction checkbox
add new checkbox
// books is everything but otherbook
list books   new arraylist
books addall book getbooks
books remove otherbook
// add companion book choice
add new dropdownchoice    books
// add radio choice test
final radiochoice relatedbook   new radiochoice    books
add relatedbook
// multi-select among writing styles
add new listmultiplechoice    enumeratedtype
getvalues book writingstyle class
/**
* show the resulting valid edit
*/
public final void onsubmit
final requestcycle cycle   getrequestcycle
pageparameters parameters   new pageparameters
final book book    book getmodelobject
parameters put    new long book getid
cycle setresponsepage getpagefactory   newpage bookdetails class  parameters
cycle setredirect true