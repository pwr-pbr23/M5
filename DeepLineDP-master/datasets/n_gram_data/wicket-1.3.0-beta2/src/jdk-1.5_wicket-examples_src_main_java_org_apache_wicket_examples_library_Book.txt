/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples library
import java util arraylist
import java util collection
import java util hashmap
import java util iterator
import java util list
import java util map
import org apache wicket iclusterable
import org apache wicket util lang enumeratedtype
/**
* an example pojo model.
*
* @author jonathan locke
*/
public final class book implements iclusterable
/**
* value for fiction books.
*/
public static final boolean fiction   true
/**
* value for non-fiction books.
*/
public static final boolean non_fiction   false
/** funny book */
public static final writingstyle funny   new writingstyle
/** boring book */
public static final writingstyle boring   new writingstyle
/** sad book */
public static final writingstyle sad   new writingstyle
/** bad book */
public static final writingstyle bad   new writingstyle
private static long nextid   0
private static final map idtobook   new hashmap
static
new book       book fiction
new book       book non_fiction
new book       book fiction
private long id
private string title
private string author
private book companionbook
private book relatedbook
private boolean isfiction
private list writingstyles   new arraylist
/**
* constructor
*
* @param title
*            book title
* @param author
*            the author of the book
* @param isfiction
*            true (fiction) if the book is fiction, false (non_fiction) if
*            it is not.
*/
public book final string title  final string author  final boolean isfiction
this id   nextid
this title   title
this author   author
this isfiction   isfiction
add this
private void add final book book
boolean hit   false
final iterator iter   idtobook values   iterator
while  iter hasnext
final book value    book iter next
if  value tostring   equals book tostring
book id   value id
hit   true
break
if  hit    false
idtobook put new long book id   book
/**
* @param id
*            book id
* @return book for id
*/
public static book get final long id
return  book idtobook get new long id
/**
* @return all books
*/
public static collection getbooks
return idtobook values
/**
* @return book id
*/
public final long getid
return id
/**
* @param id
*            new id
*/
public final void setid final long id
this id   id
/**
* @return the author
*/
public final string getauthor
return author
/**
* @return the title
*/
public final string gettitle
return title
/**
* @param string
*/
public final void setauthor final string string
author   string
/**
* @param string
*/
public final void settitle final string string
title   string
/**
* @return a book that makes a good companion to this one
*/
public final book getcompanionbook
return companionbook
/**
* @param book
*            a book that makes a good companion to this one
*/
public final void setcompanionbook final book book
companionbook   book
/**
* @param isfiction
*            true if this book is fiction
*/
public final void setfiction final boolean isfiction
this isfiction   isfiction
/**
* @return true if this book is fiction
*/
public final boolean getfiction
return isfiction
/**
* @return returns the writingstyles.
*/
public final list getwritingstyles
return writingstyles
/**
* @param writingstyles
*            the writingstyles to set.
*/
public final void setwritingstyles final list writingstyles
this writingstyles   writingstyles
/**
* @return returns the relatedbook.
*/
public final book getrelatedbook
return relatedbook
/**
* @param relatedbook
*            the relatedbook to set.
*/
public final void setrelatedbook final book relatedbook
this relatedbook   relatedbook
/**
* @see java.lang.object#tostring()
*/
public final string tostring
return title       author
/**
* typesafe enumeration for writing styles
*/
public static final class writingstyle extends enumeratedtype
writingstyle final string name
super name