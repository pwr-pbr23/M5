/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket protocol http servlet
import java io ioexception
import javax servlet filter
import javax servlet filterchain
import javax servlet filterconfig
import javax servlet servletexception
import javax servlet servletrequest
import javax servlet servletresponse
import javax servlet http httpservletrequest
import javax servlet http httpsession
import org apache wicket session
import org slf4j logger
import org slf4j loggerfactory
/**
* <p>
* this filter can be used to make the wicket
* {@link org.apache.wicket.protocol.http.websession} instances available to non-wicket
* servlets.
* </p>
* <p>
* the following example displays how you can make the wicket session object of
* application sessionapplication, mapped on <code>/sessiontest/*</code>
* available for servlet wicketsessionservlet, mapped under
* <code>/servlet/sessiontest</code>:
*
* <pre>
*    &lt;filter&gt;
*      &lt;filter-name&gt;wicketsessionfilter&lt;/filter-name&gt;
*      &lt;filter-class&gt;org.apache.wicket.protocol.http.servlet.wicketsessionfilter&lt;/filter-class&gt;
*      &lt;init-param&gt;
*        &lt;param-name&gt;servletpath&lt;/param-name&gt;
*        &lt;param-value&gt;sessiontest&lt;/param-value&gt;
*      &lt;/init-param&gt;
*    &lt;/filter&gt;
*
*    &lt;filter-mapping&gt;
*      &lt;filter-name&gt;wicketsessionfilter&lt;/filter-name&gt;
*      &lt;url-pattern&gt;/servlet/sessiontest&lt;/url-pattern&gt;
*    &lt;/filter-mapping&gt;
*
*    &lt;servlet&gt;
*      &lt;servlet-name&gt;sessionapplication&lt;/servlet-name&gt;
*      &lt;servlet-class&gt;org.apache.wicket.protocol.http.wicketservlet&lt;/servlet-class&gt;
*      &lt;init-param&gt;
*        &lt;param-name&gt;applicationclassname&lt;/param-name&gt;
*        &lt;param-value&gt;session.sessionapplication&lt;/param-value&gt;
*      &lt;/init-param&gt;
*      &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
*    &lt;/servlet&gt;
*
*    &lt;servlet&gt;
*      &lt;servlet-name&gt;wicketsessionservlet&lt;/servlet-name&gt;
*      &lt;servlet-class&gt;session.wicketsessionservlet&lt;/servlet-class&gt;
*      &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
*    &lt;/servlet&gt;
*
*    &lt;servlet-mapping&gt;
*      &lt;servlet-name&gt;sessionapplication&lt;/servlet-name&gt;
*      &lt;url-pattern&gt;/sessiontest/*&lt;/url-pattern&gt;
*    &lt;/servlet-mapping&gt;
*
*    &lt;servlet-mapping&gt;
*      &lt;servlet-name&gt;wicketsessionservlet&lt;/servlet-name&gt;
*      &lt;url-pattern&gt;/servlet/sessiontest&lt;/url-pattern&gt;
*    &lt;/servlet-mapping&gt;
* </pre>
*
* after that, you can get to the wicket session in the usual fashion:
*
* <pre>
* org.apache.wicket.session wicketsession = org.apache.wicket.session.get();
* </pre>
*
* </p>
*
* @author eelco hillenius
*/
public class wicketsessionfilter implements filter
/** log. */
private static final logger log   loggerfactory getlogger wicketsessionfilter class
/** the servlet path. */
private string servletpath
/** the session key where the wicket session should be stored. */
private string sessionkey
/**
* construct.
*/
public wicketsessionfilter
/**
* @see javax.servlet.filter#init(javax.servlet.filterconfig)
*/
public void init filterconfig filterconfig  throws servletexception
servletpath   filterconfig getinitparameter
if  servletpath    null
throw new servletexception
getclass   getname
if  servletpath charat 0
servletpath       servletpath
if  log isdebugenabled
log debug     servletpath
sessionkey       servletpath       session session_attribute_name
if  log isdebugenabled
log debug     sessionkey
/**
* @see javax.servlet.filter#dofilter(javax.servlet.servletrequest,
*      javax.servlet.servletresponse, javax.servlet.filterchain)
*/
public void dofilter servletrequest request  servletresponse response  filterchain chain
throws ioexception  servletexception
httpservletrequest httpservletrequest     httpservletrequest request
httpsession httpsession   httpservletrequest getsession false
if  httpsession    null
session session    session httpsession getattribute sessionkey
if  session    null
// set the session's threadlocal
session set session
if  log isdebugenabled
log debug     session
httpservletrequest getcontextpath
httpservletrequest getservername
else
if  log isdebugenabled
log debug     sessionkey
httpservletrequest getcontextpath
httpservletrequest getservername
else
if  log isdebugenabled
log debug
httpservletrequest getcontextpath
httpservletrequest getservername
// go on with processing
chain dofilter request  response
// clean up
session unset
/**
* @see javax.servlet.filter#destroy()
*/
public void destroy