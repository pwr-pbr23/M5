/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html image
import org apache wicket iresourcelistener
import org apache wicket resource
import org apache wicket resourcereference
import org apache wicket markup componenttag
import org apache wicket markup markupstream
import org apache wicket markup html webcomponent
import org apache wicket markup html image resource localizedimageresource
import org apache wicket model imodel
import org apache wicket model model
import org apache wicket util value valuemap
/**
* an image component displays a localizable image resource.
* <p>
* for details of how images load, generate and manage images, see
* {@link localizedimageresource}.
*
* @author jonathan locke
*/
public class image extends webcomponent implements iresourcelistener
private static final long serialversionuid   1l
/** the image resource this image component references */
private final localizedimageresource localizedimageresource   new localizedimageresource this
/**
* this constructor can be used if you have a img tag that has a src that
* points to a packageresource (which will be created and bind to the shared
* resources) or if you have a value attribute in your tag for which the
* image factory can make an image.
*
* @see org.apache.wicket.component#component(string)
*/
public image final string id
super id
/**
* constructs an image from an image resourcereference. that resource
* reference will bind its resource to the current sharedresources.
*
* if you are using non sticky session clustering and the resource reference
* is pointing to a resource that isn't guaranteed to be on every server,
* for example a dynamic image or resources that aren't added with a
* iinitializer at application startup. then if only that resource is
* requested from another server, without the rendering of the page, the
* image won't be there and will result in a broken link.
*
* @param id
*            see component
* @param resourcereference
*            the shared image resource
*/
public image final string id  final resourcereference resourcereference
this id  resourcereference  null
/**
* constructs an image from an image resourcereference. that resource
* reference will bind its resource to the current sharedresources.
*
* if you are using non sticky session clustering and the resource reference
* is pointing to a resource that isn't guaranteed to be on every server,
* for example a dynamic image or resources that aren't added with a
* iinitializer at application startup. then if only that resource is
* requested from another server, without the rendering of the page, the
* image won't be there and will result in a broken link.
*
* @param id
*            see component
* @param resourcereference
*            the shared image resource
* @param resourceparameters
*            the resource parameters
*/
public image final string id  final resourcereference resourcereference
valuemap resourceparameters
super id
setimageresourcereference resourcereference resourceparameters
/**
* constructs an image directly from an image resource.
*
* this one doesn't have the 'non sticky session clustering' problem that
* the resourcereference constructor has. but this will result in a non
* 'stable' url and the url will have request parameters.
*
* @param id
*            see component
*
* @param imageresource
*            the image resource
*/
public image final string id  final resource imageresource
super id
setimageresource imageresource
/**
* @see org.apache.wicket.component#component(string, imodel)
*/
public image final string id  final imodel model
super id  model
/**
* @param id
*            see component
* @param string
*            name of image
* @see org.apache.wicket.component#component(string, imodel)
*/
public image final string id  final string string
this id  new model string
/**
* @see org.apache.wicket.iresourcelistener#onresourcerequested()
*/
public void onresourcerequested
localizedimageresource onresourcerequested
/**
* @param imageresource
*            the new imageresource to set.
*/
public void setimageresource final resource imageresource
this localizedimageresource setresource imageresource
/**
* @param resourcereference
*            the shared imageresource to set.
*/
public void setimageresourcereference final resourcereference resourcereference
this localizedimageresource setresourcereference resourcereference
/**
* @param resourcereference
*            the shared imageresource to set.
* @param parameters
* 			  set the resource parameters for the resource.
*/
public void setimageresourcereference final resourcereference resourcereference  final valuemap parameters
this localizedimageresource setresourcereference resourcereference parameters
/**
* @return resource returned from subclass
*/
protected resource getimageresource
return null
/**
* @return resourcereference returned from subclass
*/
protected resourcereference getimageresourcereference
return null
/**
* @see org.apache.wicket.component#initmodel()
*/
protected imodel initmodel
// images don't support compound models. they either have a simple
// model, explicitly set, or they use their tag's src or value
// attribute to determine the image.
return null
/**
* @see org.apache.wicket.component#oncomponenttag(componenttag)
*/
protected void oncomponenttag final componenttag tag
checkcomponenttag tag
super oncomponenttag tag
final resource resource   getimageresource
if  resource    null
localizedimageresource setresource resource
final resourcereference resourcereference   getimageresourcereference
if  resourcereference    null
localizedimageresource setresourcereference resourcereference
localizedimageresource setsrcattribute tag
/**
* @see org.apache.wicket.component#getstatelesshint()
*/
protected boolean getstatelesshint
return getimageresource      null    localizedimageresource isstateless
/**
* @see org.apache.wicket.component#oncomponenttagbody(markupstream, componenttag)
*/
protected void oncomponenttagbody final markupstream markupstream  final componenttag opentag