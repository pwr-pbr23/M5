/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket extensions yui calendar
import java text simpledateformat
import java util date
import java util hashmap
import java util iterator
import java util map
import java util properties
import java util map entry
import org apache wicket component
import org apache wicket requestcycle
import org apache wicket resourcereference
import org apache wicket response
import org apache wicket wicketruntimeexception
import org apache wicket ajax ajaxeventbehavior
import org apache wicket behavior abstractbehavior
import org apache wicket datetime markup html form datetextfield
import org apache wicket extensions yui yuilib
import org apache wicket markup html iheadercontributor
import org apache wicket markup html iheaderresponse
import org apache wicket markup html form abstracttextcomponent itextformatprovider
import org apache wicket markup html resources compressedresourcereference
import org apache wicket markup html resources javascriptresourcereference
import org apache wicket model model
import org apache wicket util convert iconverter
import org apache wicket util convert converters dateconverter
import org apache wicket util string strings
import org apache wicket util template texttemplateheadercontributor
import org joda time datetime
/**
* pops up a yui calendar component so that the user can select a date. on
* selection, the date is set in the component it is coupled to, after which the
* popup is closed again. this behavior can only be used with components that
* either implement {@link itextformatprovider} or that use
* {@link dateconverter} configured with an instance of {@link simpledateformat}
* (like wicket's default configuration has).
*
* to use, simply add a new instance to your component, which would typically a
* textfield, like {@link datetextfield}.
*
* @author eelcohillenius
*/
public class datepicker extends abstractbehavior implements iheadercontributor
/**
* exception thrown when the bound component does not produce a format this
* date picker can work with.
*/
private static final class unabletodetermineformatexception extends wicketruntimeexception
private static final long serialversionuid   1l
public unabletodetermineformatexception
super
itextformatprovider class getname
private static final long serialversionuid   1l
/** the target component. */
private component component
/**
* construct.
*/
public datepicker
/**
* @see org.apache.wicket.behavior.abstractbehavior#bind(org.apache.wicket.component)
*/
public void bind component component
this component   component
checkcomponentprovidesdateformat component
component setoutputmarkupid true
/**
* @see org.apache.wicket.behavior.abstractbehavior#onrendered(org.apache.wicket.component)
*/
public void onrendered component component
super onrendered component
// append the span and img icon right after the rendering of the
// component. not as pretty as working with a panel etc, but works
// for behaviors and is more efficient
response response   component getresponse
response
write  display none z index  99999 position absolute   "
response write getcomponentmarkupid
response write  >< div><img style
response write geticonstyle
response write   id
response write geticonid
response write   src
charsequence iconurl   geticonurl
response write strings escapemarkup iconurl    null ? iconurl tostring
response write    >< span><input type    >"
/**
* @see org.apache.wicket.markup.html.iheadercontributor#renderhead(org.apache.wicket.markup.html.iheaderresponse)
*/
public void renderhead iheaderresponse response
// add yui contributions
// note javascriptresourcereference takes care of stripping comments
// when in deployment (production) mode
response
renderjavascriptreference new javascriptresourcereference yuilib class
response
renderjavascriptreference new javascriptresourcereference yuilib class
response renderjavascriptreference new javascriptresourcereference yuilib class
response renderjavascriptreference new javascriptresourcereference datepicker class
response rendercssreference new compressedresourcereference datepicker class
response renderjavascriptreference new javascriptresourcereference datepicker class
// variables for the initialization script
map variables   new hashmap
string widgetid   getcomponentmarkupid
variables put    widgetid
variables put    getdatepattern
variables put    boolean valueof notifycomponentondateselected
// print out the initialization properties
properties p   new properties
configurewidgetproperties p
// ${calendarinit}
stringbuffer calendarinit   new stringbuffer
for  iterator i   p entryset   iterator    i hasnext
entry entry    entry i next
calendarinit append entry getkey
object value   entry getvalue
if  value instanceof charsequence
calendarinit append  "
calendarinit append value
calendarinit append  "
else if  value instanceof charsequence
calendarinit append
charsequence valuearray    charsequence value
for  int j   0  j < valuearray length  j
charsequence tmpvalue   valuearray
calendarinit append  "
calendarinit append tmpvalue
calendarinit append  "
if  j < valuearray length   1
calendarinit append
calendarinit append
else
calendarinit append
calendarinit append value
if  i hasnext
calendarinit append
variables put    calendarinit tostring
// render initialization script with the variables interpolated
texttemplateheadercontributor forjavascript datepicker class
model valueof variables   renderhead response
// initialize the calendar.
stringbuffer initbuffer   new stringbuffer
initbuffer append
initbuffer append widgetid
initbuffer append
response renderonloadjavascript initbuffer tostring
/**
* check that this behavior can get a date format out of the component it is
* coupled to. it checks whether {@link #getdatepattern()} produces a
* non-null value. if that method returns null, and exception will be thrown
*
* @param component
*            the component this behavior is being coupled to
* @throws unabletodetermineformatexception
*             if this date picker is unable to determine a format.
*/
private final void checkcomponentprovidesdateformat component component
if  getdatepattern      null
throw new unabletodetermineformatexception
/**
* append javascript to the initialization function for the yui widget. can
* be used by subclasses to conveniently extend configuration without having
* to write a separate contribution.
*
* @param markupid
*            the markup id of the calendar component
* @param javascriptid
*            the non-name spaced javascript id of the widget
* @param javascriptwidgetid
*            the name space id of the widget
* @param b
*            the buffer to append the script to
*/
protected void appendtoinit string markupid  string javascriptid  string javascriptwidgetid
stringbuffer b
/**
* gives overriding classes the option of adding (or even changing/
* removing) configuration properties for the javascript widget. see <a
* href="http://developer.yahoo.com/yui/calendar/">the widget's
* documentation</a> for the available options. if you want to override/
* remove properties, you obviously should call
* {@link super#setwidgetproperties(properties)} first.
*
* @param widgetproperties
*            the current widget properties
*/
protected void configurewidgetproperties map widgetproperties
widgetproperties put    boolean true
// todo localize
widgetproperties put
date date    date component getmodelobject
if  date    null
widgetproperties put    abstractcalendar format_date format date
widgetproperties put    abstractcalendar format_pagedate format date
/**
* gets the dom id that the calendar widget will get attached to.
*
* @return the dom id of the calendar widget - same as the component's
*         markup id + 'dp'}
*/
protected final string getcomponentmarkupid
return component getmarkupid
/**
* gets the date pattern to use for putting selected values in the coupled
* component.
*
* @return the date pattern
*/
protected string getdatepattern
string format   null
if  component instanceof itextformatprovider
format     itextformatprovider component  gettextformat
// it is possible that components implement itextformatprovider but
// don't provide a format
if  format    null
iconverter converter   component getconverter datetime class
if    converter instanceof dateconverter
converter   component getconverter date class
format     simpledateformat   dateconverter converter  getdateformat component
getlocale     topattern
return format
/**
* gets the id of the icon that triggers the popup.
*
* @return the id of the icon
*/
protected final string geticonid
return component getmarkupid
/**
* gets the style of the icon that triggers the popup.
*
* @return the style of the icon, e.g. 'cursor: point' etc.
*/
protected string geticonstyle
return
/**
* gets the url for the popup button. users can override to provide their
* own icon url.
*
* @return the url to use for the popup button/ icon
*/
protected charsequence geticonurl
return requestcycle get   urlfor new resourcereference datepicker class
/**
* whether to notify the associated component when a date is selected.
* notifying is done by calling the associated component's onchange
* javascript event handler. you can for instance attach an
* {@link ajaxeventbehavior} to that component to get a call back to the
* server. returns false by default.
*
* @return if true, notifies the associated component when a date is
*         selected
*/
protected boolean notifycomponentondateselected
return false