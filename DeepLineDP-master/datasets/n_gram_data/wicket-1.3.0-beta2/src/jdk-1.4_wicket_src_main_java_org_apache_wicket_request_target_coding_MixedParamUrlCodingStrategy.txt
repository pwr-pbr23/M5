/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket request target coding
import java util hashset
import java util iterator
import java util map
import java util set
import java util treeset
import org apache wicket pagemap
import org apache wicket pageparameters
import org apache wicket protocol http unittestsettings
import org apache wicket util string appendingstringbuffer
import org apache wicket util value valuemap
/**
*
* url coding strategy for bookmarkable pages that encodes a set of given
* parameters
*
* in the url's path path and the rest in the querystring.
*
* <p>
* strategy looks for path-parameters whose name is read from an array of
*
* names e.g. ["param0", "param1"]. found parameters will be appended to the url
* in
*
* the form <code>/mount-path/paramvalue0/paramvalue1</code>.
* </p>
*
* <p>
* all other parameters are added as parameter in the form:
*
* <code>/mount-path/paramvalue0?otherparam0=otherparamvalue0&otherparam1=otherparamvalue1</code>.
* </p>
*
* <p>
* decode is symmetric except for when a path parameter that is not at the end
* has no value during encode.
*
* for example, the names for the path parameters are: "a", "b" and "c". when
* "b" is
*
* not specified upon encoding, but "c" is, upon a decode "b" will get the empty
* string
*
* as value. when both "b" and "c" are missing on encode, the will not get a
* value during decode.
* </p>
*
* @author erik.van.oosten
*/
public class mixedparamurlcodingstrategy extends bookmarkablepagerequesttargeturlcodingstrategy
private string parameternames
/**
* construct.
*
* @param mountpath
*            mount path
* @param bookmarkablepageclass
*            class of mounted page
* @param pagemapname
*            name of pagemap
* @param parameternames
*            the parameter names (not null)
*/
public mixedparamurlcodingstrategy string mountpath  class bookmarkablepageclass
string pagemapname  string parameternames
super mountpath  bookmarkablepageclass  pagemapname
this parameternames   parameternames
/**
* construct.
*
* @param mountpath
*            mount path (not empty)
* @param bookmarkablepageclass
*            class of mounted page (not null)
* @param parameternames
*            the parameter names (not null)
*/
public mixedparamurlcodingstrategy string mountpath  class bookmarkablepageclass
string parameternames
super mountpath  bookmarkablepageclass  pagemap default_name
this parameternames   parameternames
/** {@inheritdoc} */
protected void appendparameters appendingstringbuffer url  map parameters
set parameternamestoadd   new hashset parameters keyset
// find index of last specified parameter
boolean foundparameter   false
int lastspecifiedparameter   parameternames length
while  lastspecifiedparameter    0     foundparameter
foundparameter   parameters containskey parameternames
if  foundparameter
for  int i   0  i <  lastspecifiedparameter  i
string parametername   parameternames
string value    string parameters get parametername
if  value    null
value
url append    append urlencode value
parameternamestoadd remove parametername
if   parameternamestoadd isempty
boolean first   true
final iterator iterator
if  unittestsettings getsorturlparameters
iterator   new treeset parameternamestoadd  iterator
else
iterator   parameternamestoadd iterator
while  iterator hasnext
url append first ?
string parametername    string iterator next
string value    string parameters get parametername
url append urlencode parametername   append    append urlencode value
first   false
/** {@inheritdoc} */
protected valuemap decodeparameters string urlfragment  map urlparameters
pageparameters params   new pageparameters
// add all url parameters
params putall urlparameters
string urlpath   urlfragment
if  urlpath startswith
urlpath   urlpath substring 1
if  urlpath length   > 0
string pathparts   urlpath split
if  pathparts length > parameternames length
throw new illegalargumentexception
for  int i   0  i < pathparts length  i
params put parameternames  pathparts
return params