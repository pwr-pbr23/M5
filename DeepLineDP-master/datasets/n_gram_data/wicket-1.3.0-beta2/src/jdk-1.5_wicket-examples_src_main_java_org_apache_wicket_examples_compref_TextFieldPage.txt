/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket examples compref
import org apache wicket iclusterable
import org apache wicket examples wicketexamplepage
import org apache wicket markup html form form
import org apache wicket markup html form textfield
import org apache wicket markup html panel feedbackpanel
import org apache wicket model compoundpropertymodel
/**
* page with examples on {@link org.apache.wicket.markup.html.form.textfield}.
*
* @author eelco hillenius
*/
public class textfieldpage extends wicketexamplepage
/**
* constructor
*/
public textfieldpage
final input input   new input
// we use the magical compound property model here as our 'super' model.
// when components do not have an explicit model, but on of their
// parents
// has the compound property model set, it will use that parent's model
// as the taget for getting and setting the property which is based on
// its own component id. thus, component with id 'text' will act as if
// its
// model is property 'text' of the compound property model. and as the
// compound
// property model's actual object is an instance of 'input', it will map
// to
// input's 'text' property.
setmodel new compoundpropertymodel input
// add a feedbackpanel for displaying our messages
feedbackpanel feedbackpanel   new feedbackpanel
add feedbackpanel
// add a form with an onsumbit implementation that sets a message
form form   new form
protected void onsubmit
info     input
add form
// add a simple text field that uses input's 'text' property. nothing
// can go wrong here
form add new textfield
// here we add a text field that uses input's 'integer' property.
// something could go
// wrong here, as the user's (textual) input might be an invalid value
// for an
// integer object. if we provide the class constructor argument like we
// do here, we
// get two things:
// 1. a type validator is added, so that before any actual updating is
// tried, first the
// user input is checked for validity. when the user input is wrong for
// an integer,
// the model updating is cancelled, and an error message is displayed to
// the user
// 2.when updating the model, the given type is explicitly used instead
// of trying
// to figure out what type should be converted to.
// note that the default validation message mechanism uses resource
// bundles for the actual
// message lookup. the message for this component can be found in
// textfieldpage.properties
// with key 'form.integer.iconverter'. read more about how this works
// in the javadocs
// of abstractvalidator
form add new textfield    integer class
/** simple data class that acts as a model for the input fields. */
private static class input implements iclusterable
// normally we would have played nice and made it a proper javabean with
// getters and
// setters for its properties. but this is an example which we like to
// keep small.
/** some plain text. */
public string text
/** an integer. */
public integer integer   new integer 12
/**
* @see java.lang.object#tostring()
*/
public string tostring
return     text       integer
/**
* override base method to provide an explanation
*/
protected void explain
string html    text  text
text  integer
string code
text
integer
add new explainpanel html  code