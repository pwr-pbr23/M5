/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup repeater data
import java util iterator
import org apache wicket markup html navigation paging ipageable
import org apache wicket markup repeater abstractpageableview
import org apache wicket markup repeater refreshingview
import org apache wicket model idetachable
/**
* base class for data views.
*
* data views aim to make it very simple to populate your repeating view from a
* database by utilizing {@link idataprovider} to act as an interface between
* the database and the dataview.
*
* @see idataprovider
* @see dataview
* @see ipageable
* @see refreshingview
*
* @author igor vaynberg (ivaynberg)
*
*/
public abstract class dataviewbase extends abstractpageableview
private idataprovider dataprovider
/**
* @param id
*            component id
* @param dataprovider
*            data provider
*/
public dataviewbase string id  idataprovider dataprovider
super id
if  dataprovider    null
throw new illegalargumentexception
this dataprovider   dataprovider
/**
* @return data provider associated with this view
*/
protected final idataprovider internalgetdataprovider
return dataprovider
protected final iterator getitemmodels int offset  int count
return new modeliterator internalgetdataprovider    offset  count
/**
* helper class that converts input from idataprovider to an iterator over
* view items.
*
* @author igor vaynberg (ivaynberg)
*
*/
private static final class modeliterator implements iterator
private iterator items
private idataprovider dataprovider
private int max
private int index
/**
* constructor
*
* @param dataprovider
*            data provider
* @param offset
*            index of first item
* @param count
*            max number of items to return
*/
public modeliterator idataprovider dataprovider  int offset  int count
this items   dataprovider iterator offset  count
this dataprovider   dataprovider
this max   count
/**
* @see java.util.iterator#remove()
*/
public void remove
throw new unsupportedoperationexception
/**
* @see java.util.iterator#hasnext()
*/
public boolean hasnext
return items hasnext       index < max
/**
* @see java.util.iterator#next()
*/
public object next
index
return dataprovider model items next
protected final int internalgetitemcount
return internalgetdataprovider   size
/**
* @see org.apache.wicket.markup.repeater.abstractpageableview#ondetach()
*/
protected void ondetach
super ondetach
if  dataprovider instanceof idetachable
idetachable dataprovider  detach