/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket validation validator
import java util date
import java util map
import org apache wicket validation ivalidatable
/**
* a validator for dates that can be used for subclassing or use one of the
* static factory methods to get the default date validators as range, maximum
* or minimum.
*
* @author jonathan locke
* @author johan compagner
* @author igor vaynberg (ivaynberg)
*/
public abstract class datevalidator extends abstractvalidator
/**
* gets a date range validator to check if the date is between the minimum
* and maximum dates.
*
* if that is not the case then an error message will be generated with the
* key "datevalidator.range" and the messages keys that can be used are:
* <ul>
* <li>${minimum}: the minimum date</li>
* <li>${maximum}: the maximum date</li>
* <li>${input}: the input the user did give</li>
* <li>${name}: the name of the component that failed</li>
* <li>${label}: the label of the component - either comes from
* formcomponent.labelmodel or resource key [form-id].[form-component-id] in
* that order</li>
* </ul>
*
* @param minimum
*            the minimum date.
* @param maximum
*            the maximum date.
*
* @return the datevalidator
*/
public static datevalidator range date minimum  date maximum
return new rangevalidator minimum  maximum
/**
* gets a date minimum validator to check if a date is greater then the
* given minimum value.
*
* if that is not the case then an error message will be generated with the
* key "datevalidator.minimum" and the messages keys that can be used are:
* <ul>
* <li>${minimum}: the minimal date</li>
* <li>${input}: the input the user did give</li>
* <li>${name}: the name of the component that failed</li>
* <li>${label}: the label of the component - either comes from
* formcomponent.labelmodel or resource key [form-id].[form-component-id] in
* that order</li>
* </ul>
*
* @param minimum
*            the minimum length of the string.
*
* @return the datevalidator
*/
public static datevalidator minimum date minimum
return new minimumvalidator minimum
/**
* gets a date maximum validator to check if a date is smaller then the
* given maximum value.
*
* if that is not the case then an error message will be generated with the
* key "datevalidator.maximum" and the messages keys that can be used are:
* <ul>
* <li>${maximum}: the maximum date</li>
* <li>${input}: the input the user did give</li>
* <li>${name}: the name of the component that failed</li>
* <li>${label}: the label of the component - either comes from
* formcomponent.labelmodel or resource key [form-id].[form-component-id] in
* that order</li>
* </ul>
*
* @param maximum
*            the maximum date.
*
* @return the datevalidator
*/
public static datevalidator maximum date maximum
return new maximumvalidator maximum
private static class rangevalidator extends datevalidator
private static final long serialversionuid   1l
private final date minimum
private final date maximum
private rangevalidator date minimum  date maximum
this minimum   minimum
this maximum   maximum
protected map variablesmap ivalidatable validatable
final map map   super variablesmap validatable
map put    minimum
map put    maximum
return map
/**
* @see org.apache.wicket.markup.html.form.validation.abstractvalidator#resourcekey(org.apache.wicket.markup.html.form.formcomponent)
*/
protected string resourcekey
return
protected void onvalidate ivalidatable validatable
date value    date validatable getvalue
if  value before minimum     value after maximum
error validatable
private static class minimumvalidator extends datevalidator
private static final long serialversionuid   1l
private final date minimum
private minimumvalidator date minimum
this minimum   minimum
protected map variablesmap ivalidatable validatable
final map map   super variablesmap validatable
map put    minimum
return map
protected string resourcekey
return
protected void onvalidate ivalidatable validatable
date value    date validatable getvalue
if  value before minimum
error validatable
private static class maximumvalidator extends datevalidator
private static final long serialversionuid   1l
private final date maximum
private maximumvalidator date maximum
this maximum   maximum
protected map variablesmap ivalidatable validatable
final map map   super variablesmap validatable
map put    maximum
return map
protected string resourcekey
return
protected void onvalidate ivalidatable validatable
date value    date validatable getvalue
if  value after maximum
error validatable