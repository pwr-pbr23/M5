/*
***** begin license block *****
* version: cpl 1.0/gpl 2.0/lgpl 2.1
*
* the contents of this file are subject to the common public
* license version 1.0 (the "license"); you may not use this file
* except in compliance with the license. you may obtain a copy of
* the license at http://www.eclipse.org/legal/cpl-v10.html
*
* software distributed under the license is distributed on an "as
* is" basis, without warranty of any kind, either express or
* implied. see the license for the specific language governing
* rights and limitations under the license.
*
* copyright (c) 2006, 2007 ola bini <ola@ologix.com>
* copyright (c) 2007 nick sieger <nicksieger@gmail.com>
* copyright (c) 2008 vladimir sizikov <vsizikov@gmail.com>
* copyright (c) 2009 joseph lafata <joe@quibb.org>
*
* alternatively, the contents of this file may be used under the terms of
* either of the gnu general public license version 2 or later (the "gpl"),
* or the gnu lesser general public license version 2.1 or later (the "lgpl"),
* in which case the provisions of the gpl or the lgpl are applicable instead
* of those above. if you wish to allow use of your version of this file only
* under the terms of either the gpl or the lgpl, and not to allow others to
* use your version of this file under the terms of the cpl, indicate your
* decision by deleting the provisions above and replace them with the notice
* and other provisions required by the gpl or the lgpl. if you do not delete
* the provisions above, a recipient may use your version of this file under
* the terms of any one of the cpl, the gpl or the lgpl.
***** end license block *****/
package org jruby
import java security accesscontroller
import java security messagedigest
import java security nosuchalgorithmexception
import java security privilegedaction
import java security provider
import org jruby anno jrubyclass
import org jruby anno jrubymethod
import org jruby anno jrubymodule
import org jruby javasupport util runtimehelpers
import org jruby runtime block
import org jruby runtime objectallocator
import org jruby runtime threadcontext
import org jruby runtime builtin irubyobject
import org jruby util bytelist
/**
* @author <a href="mailto:ola.bini@ki.se">ola bini</a>
*/
@jrubymodule name
public class rubydigest
private static provider provider   null
public static void createdigest ruby runtime
// we're not setting the provider or anything, but it seems that bouncycastle does some internal things in its
// provider's constructor which require it to be executed in a secure context.
// ideally this hack should be removed. see jruby-3919 and this bc bug:
//   http://www.bouncycastle.org/jira/browse/bja-227
provider    provider  accesscontroller doprivileged new privilegedaction
public object run
try
return class forname    newinstance
catch throwable t
// provider is not available
return null
rubymodule mdigest   runtime definemodule
mdigest defineannotatedmethods rubydigest class
rubymodule mdigestinstance   mdigest definemoduleunder
mdigestinstance defineannotatedmethods digestinstance class
rubyclass cdigestclass   mdigest defineclassunder    runtime getobject    digestclass digest_class_allocator
cdigestclass defineannotatedmethods digestclass class
cdigestclass includemodule mdigestinstance
rubyclass cdigestbase   mdigest defineclassunder    cdigestclass  digestbase digest_base_allocator
cdigestbase defineannotatedmethods digestbase class
private static messagedigest createmessagedigest ruby runtime  string providername  throws nosuchalgorithmexception
if provider    null
try
return messagedigest getinstance providername  provider
catch nosuchalgorithmexception e
// bouncy castle doesn't support algorithm
// fall back to system jca providers
return messagedigest getinstance providername
private final static byte digits
private static bytelist tohex byte val
bytelist bytelist   new bytelist val length   2
for  int i   0  j   val length  i < j  i
int b   val   0xff
bytelist append digits
bytelist append digits
return bytelist
private static irubyobject tohexstring ruby runtime  byte val
return rubystring newstringnocopy runtime  bytelist plain tohex val
@jrubymethod name      required   1  meta   true
public static irubyobject s_hexencode irubyobject recv  irubyobject arg
return tohexstring recv getruntime    arg converttostring   getbytes
@jrubymethod name      required   1  module   true
public static irubyobject const_missing threadcontext ctx  irubyobject recv  irubyobject symbol
ruby runtime   ctx getruntime
string sym     rubysymbol symbol  asjavastring
string libname
if   equals sym       equals sym       equals sym
libname
else
libname       sym tolowercase
runtime getloadservice   require libname
rubymodule digest   runtime getmodule
if  digest hasconstant sym
throw runtime newnameerror     sym      sym
return digest getconstant sym
private static class metadata
private final string name
private final int blocklength
metadata string name  int blocklength
this name   name
this blocklength   blocklength
string getname
return name
int getblocklength
return blocklength
@jrubyclass name    parent
public static class md5
@jrubyclass name    parent
public static class rmd160
@jrubyclass name    parent
public static class sha1
@jrubyclass name    parent
public static class sha256
@jrubyclass name    parent
public static class sha384
@jrubyclass name    parent
public static class sha512
public static void createdigestmd5 ruby runtime
runtime getloadservice   require
rubymodule mdigest   runtime fastgetmodule
rubyclass cdigestbase   mdigest fastgetclass
rubyclass cdigest_md5   mdigest defineclassunder   cdigestbase cdigestbase getallocator
cdigest_md5 setinternalvariable    new metadata    64
public static void createdigestrmd160 ruby runtime
runtime getloadservice   require
if provider    null
throw runtime newloaderror
rubymodule mdigest   runtime fastgetmodule
rubyclass cdigestbase   mdigest fastgetclass
rubyclass cdigest_rmd160   mdigest defineclassunder   cdigestbase cdigestbase getallocator
cdigest_rmd160 setinternalvariable    new metadata    64
public static void createdigestsha1 ruby runtime
runtime getloadservice   require
rubymodule mdigest   runtime fastgetmodule
rubyclass cdigestbase   mdigest fastgetclass
rubyclass cdigest_sha1   mdigest defineclassunder   cdigestbase cdigestbase getallocator
cdigest_sha1 setinternalvariable    new metadata    64
public static void createdigestsha2 ruby runtime
runtime getloadservice   require
try
createmessagedigest runtime
catch nosuchalgorithmexception e
throw runtime newloaderror
rubymodule mdigest   runtime fastgetmodule
rubyclass cdigestbase   mdigest fastgetclass
rubyclass cdigest_sha2_256   mdigest defineclassunder   cdigestbase cdigestbase getallocator
rubyclass cdigest_sha2_meta   mdigest defineclassunder   cdigestbase cdigestbase getallocator
metadata sha256metadata   new metadata    64
cdigest_sha2_256 setinternalvariable    sha256metadata
cdigest_sha2_meta setinternalvariable    sha256metadata
rubyclass cdigest_sha2_384   mdigest defineclassunder   cdigestbase cdigestbase getallocator
cdigest_sha2_384 setinternalvariable    new metadata    128
rubyclass cdigest_sha2_512   mdigest defineclassunder   cdigestbase cdigestbase getallocator
cdigest_sha2_512 setinternalvariable    new metadata    128
@jrubymodule name
public static class digestinstance
private static irubyobject throwunimplerror irubyobject self  string name
throw self getruntime   newruntimeerror string format    self getmetaclass   getrealclass   getname    name
/* instance methods that should be overridden */
@jrubymethod name           required   1
public static irubyobject update threadcontext ctx  irubyobject self  irubyobject arg
return throwunimplerror self
@jrubymethod
public static irubyobject finish threadcontext ctx  irubyobject self
return throwunimplerror self
@jrubymethod
public static irubyobject reset threadcontext ctx  irubyobject self
return throwunimplerror self
@jrubymethod
public static irubyobject digest_length threadcontext ctx  irubyobject self
return digest ctx  self  null  converttostring   length
@jrubymethod
public static irubyobject block_length threadcontext ctx  irubyobject self
return throwunimplerror self
/* instance methods that may be overridden */
@jrubymethod name      required   1
public static irubyobject op_equal threadcontext ctx  irubyobject self  irubyobject oth
rubystring str1  str2
rubymodule instance    rubymodule self getruntime   fastgetmodule    fastgetconstantat
if  oth getmetaclass   getrealclass   hasmoduleinhierarchy instance
str1   digest ctx  self  null  converttostring
str2   digest ctx  oth  null  converttostring
else
str1   to_s ctx  self  converttostring
str2   oth converttostring
boolean ret   str1 length   eql str2 length        str1 eql str2
return ret ? self getruntime   gettrue     self getruntime   getfalse
@jrubymethod
public static irubyobject inspect threadcontext ctx  irubyobject self
return rubystring newstringnocopy self getruntime    bytelist plain     self getmetaclass   getrealclass   getname         hexdigest ctx  self  null
/* instance methods that need not usually be overridden */
@jrubymethod name
public static irubyobject newobject threadcontext ctx  irubyobject self
return self rbclone   callmethod ctx
@jrubymethod optional   1
public static irubyobject digest threadcontext ctx  irubyobject self  irubyobject args
irubyobject value   null
if  args    null    args length > 0
self callmethod ctx
self callmethod ctx     args
value   self callmethod ctx
self callmethod ctx
else
irubyobject clone   self rbclone
value   clone callmethod ctx
clone callmethod ctx
return value
@jrubymethod name
public static irubyobject digest_bang threadcontext ctx  irubyobject self
irubyobject value   self callmethod ctx
self callmethod ctx
return value
@jrubymethod optional   1
public static irubyobject hexdigest threadcontext ctx  irubyobject self  irubyobject args
return tohexstring ctx getruntime    digest ctx  self  args  converttostring   getbytes
@jrubymethod name
public static irubyobject hexdigest_bang threadcontext ctx  irubyobject self
return tohexstring ctx getruntime    digest_bang ctx  self  converttostring   getbytes
@jrubymethod
public static irubyobject to_s threadcontext ctx  irubyobject self
return self callmethod ctx
@jrubymethod name
public static irubyobject length threadcontext ctx  irubyobject self
return self callmethod ctx
@jrubymethod
public static irubyobject file threadcontext ctx  irubyobject self  irubyobject filename
ruby runtime   self getruntime
irubyobject io   runtimehelpers invoke ctx  runtime getfile
filename  runtime newstring
try
rubystring buf   runtime newstring
final rubyfixnum bufsize   runtime newfixnum 16   1024
while  runtimehelpers invoke ctx  io     bufsize  buf  isnil
self callmethod ctx     buf
finally
io callmethod ctx
return self
@jrubyclass name
public static class digestclass extends rubyobject
protected static final objectallocator digest_class_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new digestclass runtime  klass
public digestclass ruby runtime  rubyclass type
super runtime  type
@jrubymethod name      required   1  optional   1  frame   true  meta   true
public static irubyobject s_digest threadcontext ctx  irubyobject recv  irubyobject args  block unusedblock
ruby runtime   recv getruntime
if  args length < 1
throw runtime newargumenterror
rubystring str   args converttostring
irubyobject newargs   new irubyobject
system arraycopy args  1  newargs  0  args length   1
irubyobject obj     rubyclass recv  newinstance ctx  newargs  block null_block
return obj callmethod ctx     str
@jrubymethod name      required   1  optional   1  frame   true  meta   true
public static irubyobject s_hexdigest threadcontext ctx  irubyobject recv  irubyobject args  block unusedblock
ruby runtime   recv getruntime
byte digest   recv callmethod ctx     args  block null_block  converttostring   getbytes
return rubydigest tohexstring runtime  digest
@jrubymethod name      frame   true  meta   true
public static irubyobject file threadcontext ctx  irubyobject recv  irubyobject filename
ruby runtime   recv getruntime
irubyobject obj     rubyclass recv  newinstance ctx  new irubyobject  block null_block
return obj callmethod ctx     filename
@jrubyclass name
public static class digestbase extends rubyobject
protected static final objectallocator digest_base_allocator   new objectallocator
public irubyobject allocate ruby runtime  rubyclass klass
return new digestbase runtime  klass
private messagedigest algo
private int blocklength   0
public digestbase ruby runtime  rubyclass type
super runtime type
if type    runtime fastgetmodule    fastgetclass
throw runtime newnotimplementederror
metadata metadata   getmetadata type
if metadata    null
throw runtime newnotimplementederror     type
try
setalgorithm metadata
catch nosuchalgorithmexception e
throw runtime newnotimplementederror     type
// if subclass extends particular digest we need to walk to find it...we should rearchitect digest to avoid walking type systems
private metadata getmetadata rubymodule type
for  rubymodule current   type  current    null  current   current getsuperclass
metadata metadata    metadata  current getinternalvariable
if  metadata    null  return metadata
return null
@jrubymethod optional   1  frame   true
public irubyobject initialize irubyobject args  block unusedblock
if args length > 0     args isnil
update args
return this
@jrubymethod required   1
public irubyobject initialize_copy irubyobject obj
if this    obj
return this
rubyobject obj  checkfrozen
string name     digestbase obj  algo getalgorithm
try
algo    messagedigest   digestbase obj  algo clone
catch clonenotsupportedexception e
throw getruntime   newtypeerror     name
return this
@jrubymethod name           required   1
public irubyobject update irubyobject obj
bytelist bytes   obj converttostring   getbytelist
algo update bytes getunsafebytes    bytes getbegin    bytes getrealsize
return this
@jrubymethod
public irubyobject finish
irubyobject digest   rubystring newstringnocopy getruntime    algo digest
algo reset
return digest
@jrubymethod
public irubyobject digest_length
return rubyfixnum newfixnum getruntime    algo getdigestlength
@jrubymethod
public irubyobject block_length
if  blocklength    0
throw getruntime   newruntimeerror
this getmetaclass
return rubyfixnum newfixnum getruntime    blocklength
@jrubymethod
public irubyobject reset
algo reset
return this
private void setalgorithm metadata metadata  throws nosuchalgorithmexception
this algo   createmessagedigest getruntime    metadata getname
this blocklength   metadata getblocklength
rubydigest