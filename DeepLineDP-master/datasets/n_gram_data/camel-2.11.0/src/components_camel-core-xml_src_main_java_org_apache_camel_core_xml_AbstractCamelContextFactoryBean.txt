/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel core xml
import java util arraylist
import java util hashset
import java util list
import java util map
import java util map entry
import java util set
import javax xml bind annotation xmlaccesstype
import javax xml bind annotation xmlaccessortype
import javax xml bind annotation xmltransient
import org apache camel camelcontext
import org apache camel camelexception
import org apache camel routesbuilder
import org apache camel shutdownroute
import org apache camel shutdownrunningtask
import org apache camel builder errorhandlerbuilderref
import org apache camel builder routebuilder
import org apache camel component properties propertiescomponent
import org apache camel component properties propertiesparser
import org apache camel component properties propertiesresolver
import org apache camel management defaultmanagementagent
import org apache camel management defaultmanagementlifecyclestrategy
import org apache camel management defaultmanagementstrategy
import org apache camel management managedmanagementstrategy
import org apache camel model contextscandefinition
import org apache camel model identifiedtype
import org apache camel model interceptdefinition
import org apache camel model interceptfromdefinition
import org apache camel model interceptsendtoendpointdefinition
import org apache camel model modelcamelcontext
import org apache camel model oncompletiondefinition
import org apache camel model onexceptiondefinition
import org apache camel model packagescandefinition
import org apache camel model routebuilderdefinition
import org apache camel model routecontainer
import org apache camel model routecontextrefdefinition
import org apache camel model routedefinition
import org apache camel model routedefinitionhelper
import org apache camel model threadpoolprofiledefinition
import org apache camel model config propertiesdefinition
import org apache camel model dataformat dataformatsdefinition
import org apache camel processor interceptor backlogtracer
import org apache camel processor interceptor delayer
import org apache camel processor interceptor handlefault
import org apache camel processor interceptor traceformatter
import org apache camel processor interceptor tracer
import org apache camel spi classresolver
import org apache camel spi debugger
import org apache camel spi endpointstrategy
import org apache camel spi eventfactory
import org apache camel spi eventnotifier
import org apache camel spi executorservicemanager
import org apache camel spi factoryfinderresolver
import org apache camel spi inflightrepository
import org apache camel spi interceptstrategy
import org apache camel spi lifecyclestrategy
import org apache camel spi managementnamingstrategy
import org apache camel spi managementstrategy
import org apache camel spi nodeidfactory
import org apache camel spi packagescanclassresolver
import org apache camel spi packagescanfilter
import org apache camel spi processorfactory
import org apache camel spi shutdownstrategy
import org apache camel spi threadpoolfactory
import org apache camel spi threadpoolprofile
import org apache camel spi uuidgenerator
import org apache camel util camelcontexthelper
import org apache camel util objecthelper
import org slf4j logger
import org slf4j loggerfactory
/**
* a factory to create and initialize a
* {@link camelcontext} and install routes either explicitly configured
* or found by searching the classpath for java classes which extend
* {@link org.apache.camel.builder.routebuilder}.
*
* @version
*/
@xmlaccessortype xmlaccesstype field
public abstract class abstractcamelcontextfactorybean<t extends modelcamelcontext> extends identifiedtype implements routecontainer
/**
* jvm system property to control lazy loading of type converters.
*/
public static final string lazy_load_type_converters
private static final logger log   loggerfactory getlogger abstractcamelcontextfactorybean class
@xmltransient
private list<routesbuilder> builders   new arraylist<routesbuilder>
@xmltransient
private classloader contextclassloaderonstart
public abstractcamelcontextfactorybean
// keep track of the class loader for when we actually do start things up
contextclassloaderonstart   thread currentthread   getcontextclassloader
public t getobject   throws exception
return getcontext
public abstract class<t> getobjecttype
public boolean issingleton
return true
public classloader getcontextclassloaderonstart
return contextclassloaderonstart
public void afterpropertiesset   throws exception
if  objecthelper isempty getid
throw new illegalargumentexception
// set the package scan resolver as soon as possible
packagescanclassresolver packageresolver   getbeanfortype packagescanclassresolver class
if  packageresolver    null
log info     packageresolver
getcontext   setpackagescanclassresolver packageresolver
// then set custom properties
if  getproperties      null
getcontext   setproperties getproperties   asmap
// and enable lazy loading of type converters if applicable
initlazyloadtypeconverteres
setupcustomservices
// set the custom registry if defined
initcustomregistry getcontext
// setup property placeholder so we got it as early as possible
initpropertyplaceholder
// setup jmx agent at first
initjmxagent
tracer tracer   getbeanfortype tracer class
if  tracer    null
// use formatter if there is a traceformatter bean defined
traceformatter formatter   getbeanfortype traceformatter class
if  formatter    null
tracer setformatter formatter
log info     tracer
getcontext   addinterceptstrategy tracer
backlogtracer backlogtracer   getbeanfortype backlogtracer class
if  backlogtracer    null
log info     backlogtracer
getcontext   addinterceptstrategy backlogtracer
handlefault handlefault   getbeanfortype handlefault class
if  handlefault    null
log info     handlefault
getcontext   addinterceptstrategy handlefault
delayer delayer   getbeanfortype delayer class
if  delayer    null
log info     delayer
getcontext   addinterceptstrategy delayer
inflightrepository inflightrepository   getbeanfortype inflightrepository class
if  inflightrepository    null
log info     inflightrepository
getcontext   setinflightrepository inflightrepository
managementstrategy managementstrategy   getbeanfortype managementstrategy class
if  managementstrategy    null
log info     managementstrategy
getcontext   setmanagementstrategy managementstrategy
managementnamingstrategy managementnamingstrategy   getbeanfortype managementnamingstrategy class
if  managementnamingstrategy    null
log info     managementnamingstrategy
getcontext   getmanagementstrategy   setmanagementnamingstrategy managementnamingstrategy
eventfactory eventfactory   getbeanfortype eventfactory class
if  eventfactory    null
log info     eventfactory
getcontext   getmanagementstrategy   seteventfactory eventfactory
// set the event notifier strategies if defined
map<string  eventnotifier> eventnotifiers   getcontext   getregistry   findbytypewithname eventnotifier class
if  eventnotifiers    null     eventnotifiers isempty
for  entry<string  eventnotifier> entry   eventnotifiers entryset
eventnotifier notifier   entry getvalue
// do not add if already added, for instance a tracer that is also an interceptstrategy class
if   getcontext   getmanagementstrategy   geteventnotifiers   contains notifier
log info     entry getkey         notifier
getcontext   getmanagementstrategy   addeventnotifier notifier
// set endpoint strategies if defined
map<string  endpointstrategy> endpointstrategies   getcontext   getregistry   findbytypewithname endpointstrategy class
if  endpointstrategies    null     endpointstrategies isempty
for  entry<string  endpointstrategy> entry   endpointstrategies entryset
endpointstrategy strategy   entry getvalue
log info     entry getkey         strategy
getcontext   addregisterendpointcallback strategy
// shutdown
shutdownstrategy shutdownstrategy   getbeanfortype shutdownstrategy class
if  shutdownstrategy    null
log info     shutdownstrategy
getcontext   setshutdownstrategy shutdownstrategy
// add global interceptors
map<string  interceptstrategy> interceptstrategies   getcontext   getregistry   findbytypewithname interceptstrategy class
if  interceptstrategies    null     interceptstrategies isempty
for  entry<string  interceptstrategy> entry   interceptstrategies entryset
interceptstrategy strategy   entry getvalue
// do not add if already added, for instance a tracer that is also an interceptstrategy class
if   getcontext   getinterceptstrategies   contains strategy
log info     entry getkey         strategy
getcontext   addinterceptstrategy strategy
// set the lifecycle strategy if defined
map<string  lifecyclestrategy> lifecyclestrategies   getcontext   getregistry   findbytypewithname lifecyclestrategy class
if  lifecyclestrategies    null     lifecyclestrategies isempty
for  entry<string  lifecyclestrategy> entry   lifecyclestrategies entryset
lifecyclestrategy strategy   entry getvalue
// do not add if already added, for instance a tracer that is also an interceptstrategy class
if   getcontext   getlifecyclestrategies   contains strategy
log info     entry getkey         strategy
getcontext   addlifecyclestrategy strategy
// set the default thread pool profile if defined
initthreadpoolprofiles getcontext
// set the application context and camelcontext for the beanpostprocessor
initbeanpostprocessor getcontext
// init camel context
initcamelcontext getcontext
// must init route refs before we prepare the routes below
initrouterefs
// do special preparation for some concepts such as interceptors and policies
// this is needed as jaxb does not build exactly the same model definition as spring dsl would do
// using route builders. so we have here a little custom code to fix the jaxb gaps
prepareroutes
// and add the routes
getcontext   addroutedefinitions getroutes
log debug    getroutes
findroutebuilders
installroutes
/**
* do special preparation for some concepts such as interceptors and policies
* this is needed as jaxb does not build exactly the same model definition as spring dsl would do
* using route builders. so we have here a little custom code to fix the jaxb gaps
*/
private void prepareroutes
for  routedefinition route   getroutes
// sanity check first as the route is created using xml
routedefinitionhelper sanitycheckroute route
// leverage logic from route definition helper to prepare the route
routedefinitionhelper prepareroute getcontext    route  getonexceptions    getintercepts    getinterceptfroms
getinterceptsendtoendpoints    getoncompletions
// mark the route as prepared now
route markprepared
protected abstract void initcustomregistry t context
@suppresswarnings
protected void initlazyloadtypeconverteres
if  getlazyloadtypeconverters      null
getcontext   setlazyloadtypeconverters getlazyloadtypeconverters
else if  system getproperty lazy_load_type_converters     null
// suppose a jvm property to control it so we can use that for example for unit testing
// to speedup testing by enabling lazy loading of type converters
string lazy   system getproperty lazy_load_type_converters
if    equalsignorecase lazy
getcontext   setlazyloadtypeconverters true
else if    equalsignorecase lazy
getcontext   setlazyloadtypeconverters false
else
throw new illegalargumentexception     lazy_load_type_converters       lazy
protected void initjmxagent   throws exception
cameljmxagentdefinition cameljmxagent   getcameljmxagent
boolean disabled   false
if  cameljmxagent    null
disabled   camelcontexthelper parseboolean getcontext    cameljmxagent getdisabled
if  disabled
log info
// clear the existing lifecycle strategies define by the defaultcamelcontext constructor
getcontext   getlifecyclestrategies   clear
// no need to add a lifecycle strategy as we do not need one as jmx is disabled
getcontext   setmanagementstrategy new defaultmanagementstrategy
else if  cameljmxagent    null
log info     cameljmxagent
defaultmanagementagent agent   new defaultmanagementagent getcontext
agent setconnectorport camelcontexthelper parseinteger getcontext    cameljmxagent getconnectorport
agent setcreateconnector camelcontexthelper parseboolean getcontext    cameljmxagent getcreateconnector
agent setmbeanobjectdomainname camelcontexthelper parsetext getcontext    cameljmxagent getmbeanobjectdomainname
agent setmbeanserverdefaultdomain camelcontexthelper parsetext getcontext    cameljmxagent getmbeanserverdefaultdomain
agent setregistryport camelcontexthelper parseinteger getcontext    cameljmxagent getregistryport
agent setserviceurlpath camelcontexthelper parsetext getcontext    cameljmxagent getserviceurlpath
agent setuseplatformmbeanserver camelcontexthelper parseboolean getcontext    cameljmxagent getuseplatformmbeanserver
agent setonlyregisterprocessorwithcustomid camelcontexthelper parseboolean getcontext    cameljmxagent getonlyregisterprocessorwithcustomid
agent setregisteralways camelcontexthelper parseboolean getcontext    cameljmxagent getregisteralways
agent setregisternewroutes camelcontexthelper parseboolean getcontext    cameljmxagent getregisternewroutes
managementstrategy managementstrategy   new managedmanagementstrategy getcontext    agent
getcontext   setmanagementstrategy managementstrategy
// clear the existing lifecycle strategies define by the defaultcamelcontext constructor
getcontext   getlifecyclestrategies   clear
getcontext   addlifecyclestrategy new defaultmanagementlifecyclestrategy getcontext
// set additional configuration from cameljmxagent
boolean onlyid   agent getonlyregisterprocessorwithcustomid      null    agent getonlyregisterprocessorwithcustomid
getcontext   getmanagementstrategy   onlymanageprocessorwithcustomid onlyid
getcontext   getmanagementstrategy   setstatisticslevel cameljmxagent getstatisticslevel
boolean loadstatisticsenabled   camelcontexthelper parseboolean getcontext    cameljmxagent getloadstatisticsenabled
if  loadstatisticsenabled    null
getcontext   getmanagementstrategy   setloadstatisticsenabled loadstatisticsenabled
protected void initpropertyplaceholder   throws exception
if  getcamelpropertyplaceholder      null
camelpropertyplaceholderdefinition def   getcamelpropertyplaceholder
propertiescomponent pc   new propertiescomponent
pc setlocation def getlocation
if  def iscache      null
pc setcache def iscache
if  def isignoremissinglocation      null
pc setignoremissinglocation def isignoremissinglocation
// if using a custom resolver
if  objecthelper isnotempty def getpropertiesresolverref
propertiesresolver resolver   camelcontexthelper mandatorylookup getcontext    def getpropertiesresolverref
propertiesresolver class
pc setpropertiesresolver resolver
// if using a custom parser
if  objecthelper isnotempty def getpropertiesparserref
propertiesparser parser   camelcontexthelper mandatorylookup getcontext    def getpropertiesparserref
propertiesparser class
pc setpropertiesparser parser
pc setpropertyprefix def getpropertyprefix
pc setpropertysuffix def getpropertysuffix
if  def isfallbacktounaugmentedproperty      null
pc setfallbacktounaugmentedproperty def isfallbacktounaugmentedproperty
pc setprefixtoken def getprefixtoken
pc setsuffixtoken def getsuffixtoken
// register the properties component
getcontext   addcomponent    pc
protected void initrouterefs   throws exception
// add route refs to existing routes
if  getrouterefs      null
for  routecontextrefdefinition ref   getrouterefs
list<routedefinition> defs   ref lookuproutes getcontext
for  routedefinition def   defs
log debug    ref  def
// add in top as they are most likely to be common/shared
// which you may want to start first
getroutes   add 0  def
protected abstract <s> s getbeanfortype class<s> clazz
public void destroy   throws exception
getcontext   stop
// properties
// -------------------------------------------------------------------------
public t getcontext
return getcontext true
public abstract t getcontext boolean create
public abstract list<routedefinition> getroutes
public abstract list<? extends abstractcamelendpointfactorybean> getendpoints
public abstract list<? extends abstractcamelredeliverypolicyfactorybean> getredeliverypolicies
public abstract list<interceptdefinition> getintercepts
public abstract list<interceptfromdefinition> getinterceptfroms
public abstract list<interceptsendtoendpointdefinition> getinterceptsendtoendpoints
public abstract propertiesdefinition getproperties
public abstract string getpackages
public abstract packagescandefinition getpackagescan
public abstract void setpackagescan packagescandefinition packagescan
public abstract contextscandefinition getcontextscan
public abstract void setcontextscan contextscandefinition contextscan
public abstract camelpropertyplaceholderdefinition getcamelpropertyplaceholder
public abstract string gettrace
public abstract string getstreamcache
public abstract string getdelayer
public abstract string gethandlefault
public abstract string getautostartup
public abstract string getusemdclogging
public abstract string getusebreadcrumb
public abstract string getmanagementnamepattern
public abstract string getthreadnamepattern
/**
* @deprecated this option is no longer supported, will be removed in a future camel release.
*/
@deprecated
public abstract boolean getlazyloadtypeconverters
public abstract boolean gettypeconverterstatisticsenabled
public abstract cameljmxagentdefinition getcameljmxagent
public abstract list<routebuilderdefinition> getbuilderrefs
public abstract list<routecontextrefdefinition> getrouterefs
public abstract string geterrorhandlerref
public abstract dataformatsdefinition getdataformats
public abstract list<onexceptiondefinition> getonexceptions
public abstract list<oncompletiondefinition> getoncompletions
public abstract shutdownroute getshutdownroute
public abstract shutdownrunningtask getshutdownrunningtask
public abstract list<threadpoolprofiledefinition> getthreadpoolprofiles
public abstract string getdependson
// implementation methods
// -------------------------------------------------------------------------
/**
* initializes the context
*
* @param ctx the context
* @throws exception is thrown if error occurred
*/
protected void initcamelcontext t ctx  throws exception
if  getstreamcache      null
ctx setstreamcaching camelcontexthelper parseboolean getcontext    getstreamcache
if  gettrace      null
ctx settracing camelcontexthelper parseboolean getcontext    gettrace
if  getdelayer      null
ctx setdelayer camelcontexthelper parselong getcontext    getdelayer
if  gethandlefault      null
ctx sethandlefault camelcontexthelper parseboolean getcontext    gethandlefault
if  geterrorhandlerref      null
ctx seterrorhandlerbuilder new errorhandlerbuilderref geterrorhandlerref
if  getautostartup      null
ctx setautostartup camelcontexthelper parseboolean getcontext    getautostartup
if  getusemdclogging      null
ctx setusemdclogging camelcontexthelper parseboolean getcontext    getusemdclogging
if  getusebreadcrumb      null
ctx setusebreadcrumb camelcontexthelper parseboolean getcontext    getusebreadcrumb
if  getmanagementnamepattern      null
ctx getmanagementnamestrategy   setnamepattern getmanagementnamepattern
if  getthreadnamepattern      null
ctx getexecutorservicemanager   setthreadnamepattern getthreadnamepattern
if  getshutdownroute      null
ctx setshutdownroute getshutdownroute
if  getshutdownrunningtask      null
ctx setshutdownrunningtask getshutdownrunningtask
if  getdataformats      null
ctx setdataformats getdataformats   asmap
if  gettypeconverterstatisticsenabled      null
ctx settypeconverterstatisticsenabled gettypeconverterstatisticsenabled
protected void initthreadpoolprofiles t context  throws exception
set<string> defaultids   new hashset<string>
// lookup and use custom profiles from the registry
map<string  threadpoolprofile> profiles   context getregistry   findbytypewithname threadpoolprofile class
if  profiles    null     profiles isempty
for  entry<string  threadpoolprofile> entry   profiles entryset
threadpoolprofile profile   entry getvalue
// do not add if already added, for instance a tracer that is also an interceptstrategy class
if  profile isdefaultprofile
log info     entry getkey         profile
context getexecutorservicemanager   setdefaultthreadpoolprofile profile
defaultids add entry getkey
else
context getexecutorservicemanager   registerthreadpoolprofile profile
// use custom profiles defined in the camelcontext
if  getthreadpoolprofiles      null     getthreadpoolprofiles   isempty
for  threadpoolprofiledefinition definition   getthreadpoolprofiles
if  definition isdefaultprofile
log info     definition getid         definition
context getexecutorservicemanager   setdefaultthreadpoolprofile asthreadpoolprofile context  definition
defaultids add definition getid
else
context getexecutorservicemanager   registerthreadpoolprofile asthreadpoolprofile context  definition
// validate at most one is defined
if  defaultids size   > 1
throw new illegalargumentexception     defaultids size         defaultids
/**
* creates a {@link threadpoolprofile} instance based on the definition.
*
* @param context    the camel context
* @return           the profile
* @throws exception is thrown if error creating the profile
*/
private threadpoolprofile asthreadpoolprofile camelcontext context  threadpoolprofiledefinition definition  throws exception
threadpoolprofile answer   new threadpoolprofile
answer setid definition getid
answer setdefaultprofile definition getdefaultprofile
answer setpoolsize camelcontexthelper parseinteger context  definition getpoolsize
answer setmaxpoolsize camelcontexthelper parseinteger context  definition getmaxpoolsize
answer setkeepalivetime camelcontexthelper parselong context  definition getkeepalivetime
answer setmaxqueuesize camelcontexthelper parseinteger context  definition getmaxqueuesize
answer setrejectedpolicy definition getrejectedpolicy
answer settimeunit definition gettimeunit
return answer
protected abstract void initbeanpostprocessor t context
/**
* strategy to install all available routes into the context
*/
protected void installroutes   throws exception
list<routebuilder> builders   new arraylist<routebuilder>
// lets add route builders added from references
if  getbuilderrefs      null
for  routebuilderdefinition builderref   getbuilderrefs
routebuilder builder   builderref createroutebuilder getcontext
if  builder    null
builders add builder
else
// support to get the route here
routesbuilder routes   builderref createroutes getcontext
if  routes    null
this builders add routes
else
// throw the exception that we can't find any build here
throw new camelexception     builderref
// install already configured routes
for  routesbuilder routebuilder   this builders
getcontext   addroutes routebuilder
// install builders
for  routebuilder builder   builders
// inject the annotated resource
postprocessbeforeinit builder
getcontext   addroutes builder
protected abstract void postprocessbeforeinit routebuilder builder
/**
* strategy method to try find {@link org.apache.camel.builder.routebuilder} instances on the classpath
*/
protected void findroutebuilders   throws exception
// package scan
addpackageelementcontentstoscandefinition
packagescandefinition packagescandef   getpackagescan
if  packagescandef    null    packagescandef getpackages   size   > 0
// use package scan filter
patternbasedpackagescanfilter filter   new patternbasedpackagescanfilter
// support property placeholders in include and exclude
for  string include   packagescandef getincludes
include   getcontext   resolvepropertyplaceholders include
filter addincludepattern include
for  string exclude   packagescandef getexcludes
exclude   getcontext   resolvepropertyplaceholders exclude
filter addexcludepattern exclude
string normalized   normalizepackages getcontext    packagescandef getpackages
findroutebuildersbypackagescan normalized  filter  builders
// context scan
contextscandefinition contextscandef   getcontextscan
if  contextscandef    null
// use package scan filter
patternbasedpackagescanfilter filter   new patternbasedpackagescanfilter
// support property placeholders in include and exclude
for  string include   contextscandef getincludes
include   getcontext   resolvepropertyplaceholders include
filter addincludepattern include
for  string exclude   contextscandef getexcludes
exclude   getcontext   resolvepropertyplaceholders exclude
filter addexcludepattern exclude
findroutebuildersbycontextscan filter  builders
protected abstract void findroutebuildersbypackagescan string packages  packagescanfilter filter  list<routesbuilder> builders  throws exception
protected abstract void findroutebuildersbycontextscan packagescanfilter filter  list<routesbuilder> builders  throws exception
private void addpackageelementcontentstoscandefinition
packagescandefinition packagescandef   getpackagescan
if  getpackages      null    getpackages   length > 0
if  packagescandef    null
packagescandef   new packagescandefinition
setpackagescan packagescandef
for  string pkg   getpackages
packagescandef getpackages   add pkg
private string normalizepackages t context  list<string> unnormalized  throws exception
list<string> packages   new arraylist<string>
for  string name   unnormalized
// it may use property placeholders
name   context resolvepropertyplaceholders name
name   objecthelper normalizeclassname name
if  objecthelper isnotempty name
log trace    name
packages add name
return packages toarray new string
private void setupcustomservices
classresolver classresolver   getbeanfortype classresolver class
if  classresolver    null
log info     classresolver
getcontext   setclassresolver classresolver
factoryfinderresolver factoryfinderresolver   getbeanfortype factoryfinderresolver class
if  factoryfinderresolver    null
log info     factoryfinderresolver
getcontext   setfactoryfinderresolver factoryfinderresolver
executorservicemanager executorservicestrategy   getbeanfortype executorservicemanager class
if  executorservicestrategy    null
log info     executorservicestrategy
getcontext   setexecutorservicemanager executorservicestrategy
threadpoolfactory threadpoolfactory   getbeanfortype threadpoolfactory class
if  threadpoolfactory    null
log info     threadpoolfactory
getcontext   getexecutorservicemanager   setthreadpoolfactory threadpoolfactory
processorfactory processorfactory   getbeanfortype processorfactory class
if  processorfactory    null
log info     processorfactory
getcontext   setprocessorfactory processorfactory
debugger debugger   getbeanfortype debugger class
if  debugger    null
log info     debugger
getcontext   setdebugger debugger
uuidgenerator uuidgenerator   getbeanfortype uuidgenerator class
if  uuidgenerator    null
log info     uuidgenerator
getcontext   setuuidgenerator uuidgenerator
nodeidfactory nodeidfactory   getbeanfortype nodeidfactory class
if  nodeidfactory    null
log info     nodeidfactory
getcontext   setnodeidfactory nodeidfactory