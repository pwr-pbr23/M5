/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component jsch
import java io bufferedinputstream
import java io bytearrayinputstream
import java io bytearrayoutputstream
import java io eofexception
import java io ioexception
import java io inputstream
import java io outputstream
import java util hashtable
import java util list
import com jcraft jsch channelexec
import com jcraft jsch jsch
import com jcraft jsch jschexception
import com jcraft jsch session
import com jcraft jsch uikeyboardinteractive
import com jcraft jsch userinfo
import org apache camel exchange
import org apache camel invalidpayloadexception
import org apache camel component file genericfileendpoint
import org apache camel component file genericfileoperationfailedexception
import org apache camel component file remote remotefileconfiguration
import org apache camel component file remote remotefileoperations
import org apache camel util iohelper
import org apache camel util objecthelper
import org slf4j logger
import org slf4j loggerfactory
/**
* scp remote file operations
*/
public class scpoperations implements remotefileoperations<scpfile>
private static final string default_known_hosts
private static final transient logger log   loggerfactory getlogger scpoperations class
private scpendpoint endpoint
private session session
private channelexec channel
@override
public void setendpoint genericfileendpoint<scpfile> endpoint
this endpoint    scpendpoint endpoint
@override
public boolean deletefile string name  throws genericfileoperationfailedexception
throw new genericfileoperationfailedexception
@override
public boolean existsfile string name  throws genericfileoperationfailedexception
// maybe... cannot determine using the scp: protocol
return false
@override
public boolean renamefile string from  string to  throws genericfileoperationfailedexception
throw new genericfileoperationfailedexception
@override
public boolean builddirectory string directory  boolean absolute  throws genericfileoperationfailedexception
// done by the server
return true
@override
public boolean retrievefile string name  exchange exchange  throws genericfileoperationfailedexception
// todo: implement
return false
@override
public void releaseretreivedfileresources exchange exchange  throws genericfileoperationfailedexception
// no-op
@override
public boolean storefile string name  exchange exchange  throws genericfileoperationfailedexception
objecthelper notnull session
scpconfiguration cfg   endpoint getconfiguration
int timeout   cfg getconnecttimeout
if  log istraceenabled
log trace    cfg remoteserverinformation
timeout > 0 ?  integer tostring timeout
string file   getremotefile name  cfg
inputstream is   null
if  exchange getin   getbody      null
// do an explicit test for a null body and decide what to do
if  endpoint isallownullbody
log trace
is   new bytearrayinputstream new byte
else
throw new genericfileoperationfailedexception     name
try
channel    channelexec  session openchannel
channel setcommand getscpcommand cfg  file
channel connect timeout
log trace    cfg remoteserverinformation
try
if  is    null
is   exchange getin   getmandatorybody inputstream class
write channel  file  exchange getin   getmandatorybody inputstream class   cfg
catch  invalidpayloadexception e
throw new genericfileoperationfailedexception     name  e
catch  ioexception e
throw new genericfileoperationfailedexception     file  e
finally
// must close stream after usage
iohelper close is
catch  jschexception e
throw new genericfileoperationfailedexception     file  e
finally
if  channel    null
log trace
channel disconnect
channel   null
log trace    cfg remoteserverinformation
return true
@override
public string getcurrentdirectory   throws genericfileoperationfailedexception
return endpoint getconfiguration   getdirectory
@override
public void changecurrentdirectory string path  throws genericfileoperationfailedexception
throw new genericfileoperationfailedexception     path
@override
public void changetoparentdirectory   throws genericfileoperationfailedexception
throw new genericfileoperationfailedexception
@override
public list<scpfile> listfiles   throws genericfileoperationfailedexception
throw new genericfileoperationfailedexception
@override
public list<scpfile> listfiles string path  throws genericfileoperationfailedexception
throw new genericfileoperationfailedexception     path
@override
public boolean connect remotefileconfiguration configuration  throws genericfileoperationfailedexception
if   isconnected
session   createsession configuration instanceof scpconfiguration ?  scpconfiguration configuration   null
// todo: deal with reconnection attempts
if   isconnected
session   null
throw new genericfileoperationfailedexception     configuration remoteserverinformation
return true
@override
public boolean isconnected   throws genericfileoperationfailedexception
return session    null    session isconnected
@override
public void disconnect   throws genericfileoperationfailedexception
if  isconnected
session disconnect
session   null
@override
public boolean sendnoop   throws genericfileoperationfailedexception
// not supported by scp:
return true
@override
public boolean sendsitecommand string command  throws genericfileoperationfailedexception
// todo: not really used, maybe implement at a later time
return true
private session createsession scpconfiguration config
objecthelper notnull config
try
final jsch jsch   new jsch
// get from configuration
if  objecthelper isnotempty config getciphers
log debug    config getciphers
hashtable<string  string> ciphers   new hashtable<string  string>
ciphers put    config getciphers
ciphers put    config getciphers
jsch setconfig ciphers
if  objecthelper isnotempty config getprivatekeyfile
log debug    config getprivatekeyfile
string pkfp   config getprivatekeyfilepassphrase
jsch addidentity config getprivatekeyfile    objecthelper isnotempty pkfp  ? pkfp   null
string knownhostsfile   config getknownhostsfile
jsch setknownhosts objecthelper isempty knownhostsfile  ? default_known_hosts   knownhostsfile
session   jsch getsession config getusername    config gethost    config getport
session settimeout config gettimeout
session setuserinfo new sessionuserinfo config
int timeout   config getconnecttimeout
log debug    config remoteserverinformation
timeout > 0 ?  integer tostring timeout
if  timeout > 0
session connect timeout
else
session connect
catch  jschexception e
session   null
log warn     config remoteserverinformation    e
return session
private void write channelexec c  string name  inputstream data  scpconfiguration cfg  throws ioexception
outputstream os   c getoutputstream
inputstream is   c getinputstream
try
writefile name  data  os  is  cfg
finally
iohelper close is  os
private void writefile string filename  inputstream data  outputstream os  inputstream is  scpconfiguration cfg  throws ioexception
final int linefeed
string bytes
int pos   filename indexof
if  pos >  0
// write to child directory
string dir   filename substring 0  pos
bytes       dir
log trace    bytes
os write bytes getbytes
os write linefeed
os flush
readack is  false
writefile filename substring pos   1   data  os  is  cfg
bytes
log trace    bytes
os write bytes getbytes
os write linefeed
os flush
readack is  false
else
int count   0
int read
int size   endpoint getbuffersize
byte reply   new byte
// figure out the stream size as we need to pass it in the header
bufferedinputstream buffer   new bufferedinputstream data  size
try
buffer mark integer max_value
while   read   buffer read reply       1
count    read
// send the header
bytes       cfg getchmod         count       filename
log trace    bytes
os write bytes getbytes
os write linefeed
os flush
readack is  false
// now send the stream
buffer reset
while   read   buffer read reply       1
os write reply  0  read
writeack os
readack is  false
finally
iohelper close buffer
private void writeack outputstream os  throws ioexception
os write 0
os flush
private int readack inputstream is  boolean failoneof  throws ioexception
string message
int answer   is read
switch  answer
case  1
if  failoneof
message
throw new eofexception message
break
case 1
message       readline is
log warn message
break
case 2
message       readline is
throw new ioexception message
default
// case 0:
break
return answer
private string readline inputstream is  throws ioexception
bytearrayoutputstream bytes   new bytearrayoutputstream
try
int c
do
c   is read
if  c
return bytes tostring
bytes write c
while  c     1
finally
iohelper close bytes
string message
throw new ioexception message
private static string getremotetarget scpconfiguration config
// use current dir (".") if target directory not specified in uri
return config getdirectory   isempty   ?     config getdirectory
private static string getremotefile string name  scpconfiguration config
string dir   config getdirectory
dir   dir endswith    ? dir   dir
return name startswith dir  ? name substring dir length      name
private static boolean isrecursivescp string name
return name indexof    > 0
private static string getscpcommand scpconfiguration config  string name
stringbuilder cmd   new stringbuilder
cmd append
// todo: need config for scp *-p* (preserves modification times, access times, and modes from the original file)
// string command="scp " + (ptimestamp ? "-p " : "") + "-t " + configuration.getdirectory();
// todo: refactor to use generic command
cmd append isrecursivescp name  ?
cmd append
cmd append getremotetarget config
return cmd tostring
protected static final class sessionuserinfo implements userinfo  uikeyboardinteractive
private final scpconfiguration config
public sessionuserinfo scpconfiguration config
objecthelper notnull config
this config   config
@override
public string getpassphrase
log warn
return null
@override
public string getpassword
log debug    config getusername
return config getpassword
@override
public boolean promptpassword string message
log debug message
return true
@override
public boolean promptpassphrase string message
log debug message
return true
@override
public boolean promptyesno string message
log debug message
return false
@override
public void showmessage string message
log debug message
@override
public string promptkeyboardinteractive string destination  string name
string instruction  string prompt  boolean echo
log debug instruction
// called for either ssh_msg_userauth_info_request or ssh_msg_userauth_passwd_changereq
// the most secure choice (especially for the second case) is to return null
return null