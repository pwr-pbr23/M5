/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component servlet
import java net uri
import java util linkedhashset
import java util map
import java util set
import org apache camel endpoint
import org apache camel component http authmethod
import org apache camel component http httpbinding
import org apache camel component http httpclientconfigurer
import org apache camel component http httpcomponent
import org apache camel component http httpconsumer
import org apache camel spi headerfilterstrategy
import org apache camel util introspectionsupport
import org apache camel util urisupport
import org apache camel util unsafeuricharactersencoder
import org apache commons httpclient httpconnectionmanager
import org apache commons httpclient params httpclientparams
public class servletcomponent extends httpcomponent
private string servletname
private httpregistry httpregistry
@override
protected endpoint createendpoint string uri  string remaining  map<string  object> parameters  throws exception
httpclientparams params   new httpclientparams
introspectionsupport setproperties params  parameters
// create the configurer to use for this endpoint
final set<authmethod> authmethods   new linkedhashset<authmethod>
httpclientconfigurer configurer   createhttpclientconfigurer parameters  authmethods
// must extract well known parameters before we create the endpoint
boolean throwexceptiononfailure   getandremoveparameter parameters     boolean class
boolean transferexception   getandremoveparameter parameters     boolean class
boolean bridgeendpoint   getandremoveparameter parameters     boolean class
httpbinding binding   resolveandremovereferenceparameter parameters     httpbinding class
boolean matchonuriprefix   getandremoveparameter parameters     boolean class
string servletname   getandremoveparameter parameters     string class  getservletname
string httpmethodrestrict   getandremoveparameter parameters     string class
headerfilterstrategy headerfilterstrategy   resolveandremovereferenceparameter parameters     headerfilterstrategy class
// restructure uri to be based on the parameters left as we dont want to include the camel internal options
uri httpuri   urisupport createremaininguri new uri unsafeuricharactersencoder encode uri    parameters
servletendpoint endpoint   createservletendpoint uri  this  httpuri  params  gethttpconnectionmanager    configurer
endpoint setservletname servletname
if  headerfilterstrategy    null
endpoint setheaderfilterstrategy headerfilterstrategy
else
setendpointheaderfilterstrategy endpoint
// prefer to use endpoint configured over component configured
if  binding    null
// fallback to component configured
binding   gethttpbinding
if  binding    null
endpoint setbinding binding
// should we use an exception for failed error codes?
if  throwexceptiononfailure    null
endpoint setthrowexceptiononfailure throwexceptiononfailure
// should we transfer exception as serialized object
if  transferexception    null
endpoint settransferexception transferexception
if  bridgeendpoint    null
endpoint setbridgeendpoint bridgeendpoint
if  matchonuriprefix    null
endpoint setmatchonuriprefix matchonuriprefix
if  httpmethodrestrict    null
endpoint sethttpmethodrestrict httpmethodrestrict
setproperties endpoint  parameters
return endpoint
/**
* strategy to create the servlet endpoint.
*/
protected servletendpoint createservletendpoint string endpointuri  servletcomponent component  uri httpuri  httpclientparams params
httpconnectionmanager httpconnectionmanager  httpclientconfigurer clientconfigurer  throws exception
return new servletendpoint endpointuri  component  httpuri  params  httpconnectionmanager  clientconfigurer
@override
public void connect httpconsumer consumer  throws exception
servletconsumer sc    servletconsumer  consumer
string name   sc getendpoint   getservletname
httpregistry registry   httpregistry
if  registry    null
registry   defaulthttpregistry gethttpregistry name
registry register consumer
@override
public void disconnect httpconsumer consumer  throws exception
servletconsumer sc    servletconsumer  consumer
string name   sc getendpoint   getservletname
httpregistry registry   httpregistry
if  registry    null
registry   defaulthttpregistry gethttpregistry name
registry unregister consumer
public string getservletname
return servletname
public void setservletname string servletname
this servletname   servletname
public httpregistry gethttpregistry
return httpregistry
public void sethttpregistry httpregistry httpregistry
this httpregistry   httpregistry