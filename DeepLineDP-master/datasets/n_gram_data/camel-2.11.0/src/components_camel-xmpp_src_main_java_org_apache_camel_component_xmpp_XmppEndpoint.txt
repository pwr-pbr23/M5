/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component xmpp
import java util iterator
import org apache camel consumer
import org apache camel exchange
import org apache camel exchangepattern
import org apache camel processor
import org apache camel producer
import org apache camel impl defaultendpoint
import org apache camel impl defaultexchange
import org apache camel impl defaultheaderfilterstrategy
import org apache camel spi headerfilterstrategy
import org apache camel spi headerfilterstrategyaware
import org apache camel util objecthelper
import org jivesoftware smack accountmanager
import org jivesoftware smack connectionconfiguration
import org jivesoftware smack xmppconnection
import org jivesoftware smack xmppexception
import org jivesoftware smack filter packetfilter
import org jivesoftware smack packet message
import org jivesoftware smack packet packet
import org jivesoftware smack packet xmpperror
import org jivesoftware smackx muc multiuserchat
import org slf4j logger
import org slf4j loggerfactory
/**
* a xmpp endpoint
*
* @version
*/
public class xmppendpoint extends defaultendpoint implements headerfilterstrategyaware
private static final transient logger log   loggerfactory getlogger xmppendpoint class
private headerfilterstrategy headerfilterstrategy   new defaultheaderfilterstrategy
private xmppbinding binding
private string host
private int port
private string user
private string password
private string resource
private boolean login   true
private boolean createaccount
private string room
private string participant
private string nickname
private string servicename
private xmppconnection connection
private boolean testconnectiononstartup   true
private int connectionpolldelay   10
public xmppendpoint
public xmppendpoint string uri  xmppcomponent component
super uri  component
@deprecated
public xmppendpoint string endpointuri
super endpointuri
public producer createproducer   throws exception
if  room    null
return creategroupchatproducer
else
if  getparticipant      null
throw new illegalargumentexception     this
return createprivatechatproducer getparticipant
public producer creategroupchatproducer   throws exception
return new xmppgroupchatproducer this
public producer createprivatechatproducer string participant  throws exception
return new xmppprivatechatproducer this  participant
public consumer createconsumer processor processor  throws exception
return new xmppconsumer this  processor
@override
public exchange createexchange exchangepattern pattern
return createexchange pattern  null
public exchange createexchange message message
return createexchange getexchangepattern    message
private exchange createexchange exchangepattern pattern  message message
exchange exchange   new defaultexchange this  getexchangepattern
exchange setproperty exchange binding  getbinding
exchange setin new xmppmessage message
return exchange
@override
protected string createendpointuri
return     host       port       getparticipant         servicename
public boolean issingleton
return true
public synchronized xmppconnection createconnection   throws xmppexception
if  connection    null    connection isconnected
return connection
if  connection    null
if  port > 0
if  getservicename      null
connection   new xmppconnection new connectionconfiguration host  port
else
connection   new xmppconnection new connectionconfiguration host  port  servicename
else
connection   new xmppconnection host
connection connect
connection addpacketlistener new xmpplogger     new packetfilter
public boolean accept packet packet
return true
connection addpacketsendinglistener new xmpplogger     new packetfilter
public boolean accept packet packet
return true
if   connection isauthenticated
if  user    null
if  log isdebugenabled
log debug    user  getconnectionmessage connection
if  password    null
log warn    user  getconnectionmessage connection
if  createaccount
accountmanager accountmanager   new accountmanager connection
accountmanager createaccount user  password
if  login
if  resource    null
connection login user  password  resource
else
connection login user  password
else
if  log isdebugenabled
log debug    getconnectionmessage connection
connection loginanonymously
// presence is not needed to be sent after login
return connection
/*
* if there is no "@" symbol in the room, find the chat service jid and
* return fully qualified jid for the room as room@conference.server.domain
*/
public string resolveroom xmppconnection connection  throws xmppexception
objecthelper notempty room
if  room indexof    0      1
return room
iterator<string> iterator   multiuserchat getservicenames connection  iterator
if   iterator hasnext
throw new xmppexception     getconnectionmessage connection
string chatserver   iterator next
log debug    chatserver
return room       chatserver
public string getconnectiondescription
return host       port       servicename
public static string getconnectionmessage xmppconnection connection
return connection gethost         connection getport         connection getservicename
public static string getxmppexceptionlogmessage xmppexception e
xmpperror xmpperror   e getxmpperror
throwable t   e getwrappedthrowable
stringbuilder strbuff   new stringbuilder
if  xmpperror    null
strbuff append    append xmpperror getcode    append
append xmpperror getcondition    append
append xmpperror getmessage
if  t    null
strbuff append    append e getwrappedthrowable   getmessage    append
return strbuff tostring
public string getchatid
return     getparticipant         getuser
// properties
// -------------------------------------------------------------------------
public xmppbinding getbinding
if  binding    null
binding   new xmppbinding headerfilterstrategy
return binding
/**
* sets the binding used to convert from a camel message to and from an xmpp
* message
*/
public void setbinding xmppbinding binding
this binding   binding
public string gethost
return host
public void sethost string host
this host   host
public int getport
return port
public void setport int port
this port   port
public string getuser
return user
public void setuser string user
this user   user
public string getpassword
return password
public void setpassword string password
this password   password
public string getresource
return resource
public void setresource string resource
this resource   resource
public boolean islogin
return login
public void setlogin boolean login
this login   login
public boolean iscreateaccount
return createaccount
public void setcreateaccount boolean createaccount
this createaccount   createaccount
public string getroom
return room
public void setroom string room
this room   room
public string getparticipant
// participant is optional so use user if not provided
return participant    null ? participant   user
public void setparticipant string participant
this participant   participant
public string getnickname
return nickname    null ? nickname   getuser
public void setnickname string nickname
this nickname   nickname
public void setservicename string servicename
this servicename   servicename
public string getservicename
return servicename
public headerfilterstrategy getheaderfilterstrategy
return headerfilterstrategy
public void setheaderfilterstrategy headerfilterstrategy headerfilterstrategy
this headerfilterstrategy   headerfilterstrategy
public boolean istestconnectiononstartup
return testconnectiononstartup
public void settestconnectiononstartup boolean testconnectiononstartup
this testconnectiononstartup   testconnectiononstartup
public int getconnectionpolldelay
return connectionpolldelay
public void setconnectionpolldelay int connectionpolldelay
this connectionpolldelay   connectionpolldelay
// implementation methods
// -------------------------------------------------------------------------
@override
protected void dostop   throws exception
if  connection    null
connection disconnect
connection   null
binding   null