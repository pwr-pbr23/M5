/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component restlet
import java net uri
import java util arraylist
import java util hashmap
import java util list
import java util map
import org apache camel endpoint
import org apache camel impl headerfilterstrategycomponent
import org apache camel util urisupport
import org apache camel util unsafeuricharactersencoder
import org restlet component
import org restlet restlet
import org restlet server
import org restlet data challengescheme
import org restlet data method
import org restlet data parameter
import org restlet data protocol
import org restlet security challengeauthenticator
import org restlet security mapverifier
import org restlet util series
import org slf4j logger
import org slf4j loggerfactory
/**
* a camel component embedded restlet that produces and consumes exchanges.
*
* @version
*/
public class restletcomponent extends headerfilterstrategycomponent
private static final logger log   loggerfactory getlogger restletcomponent class
private final map<string  server> servers   new hashmap<string  server>
private final map<string  methodbasedrouter> routers   new hashmap<string  methodbasedrouter>
private final component component
// options that can be set on the restlet server
private boolean controllerdaemon
private integer controllersleeptimems
private integer inboundbuffersize
private integer minthreads
private integer maxthreads
private integer maxconnectionsperhost
private integer maxtotalconnections
private integer outboundbuffersize
private boolean persistingconnections
private boolean pipeliningconnections
private integer threadmaxidletimems
private boolean useforwardedforheader
public restletcomponent
this new component
public restletcomponent component component
// allow the component to be injected, so that the restletservlet may be
// configured within a webapp
this component   component
@override
protected endpoint createendpoint string uri  string remaining  map<string  object> parameters  throws exception
restletendpoint result   new restletendpoint this  remaining
setendpointheaderfilterstrategy result
setproperties result  parameters
// set the endpoint uri according to the parameter
result updateendpointuri
// construct uri so we can use it to get the splitted information
uri u   new uri remaining
string protocol   u getscheme
string uripattern   u getpath
if  parameters size   > 0
uripattern   uripattern       urisupport createquerystring parameters
int port   0
string host   u gethost
if  u getport   > 0
port   u getport
result setprotocol protocol
result seturipattern uripattern
result sethost host
if  port > 0
result setport port
return result
@override
protected void dostart   throws exception
super dostart
component start
@override
protected void dostop   throws exception
component stop
// component stop will stop servers so we should clear our list as well
servers clear
// routers map entries are removed as consumer stops and servers map
// is not touch so to keep in sync with component's servers
super dostop
@override
protected boolean useintrospectiononendpoint
// we invoke setproperties ourselves so we can construct "user" uri on
// on the remaining parameters
return false
public void connect restletconsumer consumer  throws exception
restletendpoint endpoint   consumer getendpoint
addserverifnecessary endpoint
if  endpoint geturipattern      null    endpoint geturipattern   length   > 0
attachuripatterntorestlet endpoint geturipattern    endpoint  consumer getrestlet
if  endpoint getrestleturipatterns      null
for  string uripattern   endpoint getrestleturipatterns
attachuripatterntorestlet uripattern  endpoint  consumer getrestlet
public void disconnect restletconsumer consumer  throws exception
restletendpoint endpoint   consumer getendpoint
list<methodbasedrouter> routestoremove   new arraylist<methodbasedrouter>
string pattern   decodepattern endpoint geturipattern
if  pattern    null     pattern isempty
routestoremove add getmethodrouter pattern  false
if  endpoint getrestleturipatterns      null
for  string uripattern   endpoint getrestleturipatterns
routestoremove add getmethodrouter uripattern  false
for  methodbasedrouter router   routestoremove
if  endpoint getrestletmethods      null
method methods   endpoint getrestletmethods
for  method method   methods
router removeroute method
else
router removeroute endpoint getrestletmethod
if  log isdebugenabled
log debug    router geturipattern
endpoint getrestletmethod
// remove router if its no longer in use
if   router hasroutes
deattachuripatternfrimrestlet router geturipattern    endpoint  router
if   router isstopped
router stop
routers remove router geturipattern
private methodbasedrouter getmethodrouter string uripattern  boolean addifempty
synchronized  routers
methodbasedrouter result   routers get uripattern
if  result    null    addifempty
result   new methodbasedrouter uripattern
log debug    result
routers put uripattern  result
return result
protected server createserver restletendpoint endpoint
return new server component getcontext   createchildcontext    protocol valueof endpoint getprotocol     endpoint getport
protected void addserverifnecessary restletendpoint endpoint  throws exception
string key   buildkey endpoint
server server
synchronized  servers
server   servers get key
if  server    null
server   createserver endpoint
component getservers   add server
// add any restlet server parameters that were included
series<parameter> params   server getcontext   getparameters
if  getcontrollerdaemon      null
params add    getcontrollerdaemon   tostring
if  getcontrollersleeptimems      null
params add    getcontrollersleeptimems   tostring
if  getinboundbuffersize      null
params add    getinboundbuffersize   tostring
if  getminthreads      null
params add    getminthreads   tostring
if  getmaxthreads      null
params add    getmaxthreads   tostring
if  getmaxconnectionsperhost      null
params add    getmaxconnectionsperhost   tostring
if  getmaxtotalconnections      null
params add    getmaxtotalconnections   tostring
if  getoutboundbuffersize      null
params add    getoutboundbuffersize   tostring
if  getpersistingconnections      null
params add    getpersistingconnections   tostring
if  getpipeliningconnections      null
params add    getpipeliningconnections   tostring
if  getthreadmaxidletimems      null
params add    getthreadmaxidletimems   tostring
if  getuseforwardedforheader      null
params add    getuseforwardedforheader   tostring
log debug    params  server
server getcontext   setparameters params
servers put key  server
log debug    key
server start
private static string buildkey restletendpoint endpoint
return endpoint gethost         endpoint getport
private void attachuripatterntorestlet string uripattern  restletendpoint endpoint  restlet target  throws exception
uripattern   decodepattern uripattern
methodbasedrouter router   getmethodrouter uripattern  true
map<string  string> realm   endpoint getrestletrealm
if  realm    null    realm size   > 0
challengeauthenticator guard   new challengeauthenticator component getcontext
createchildcontext    challengescheme http_basic
mapverifier verifier   new mapverifier
for  map entry<string  string> entry   realm entryset
verifier getlocalsecrets   put entry getkey    entry getvalue   tochararray
guard setverifier verifier
guard setnext target
target   guard
log debug    guard
if  endpoint getrestletmethods      null
method methods   endpoint getrestletmethods
for  method method   methods
router addroute method  target
log debug    uripattern  method
else
method method   endpoint getrestletmethod
router addroute method  target
log debug    uripattern  method
if   router hasbeenattached
component getdefaulthost   attach uripattern  router
log debug    uripattern
if   router isstarted
router start
log debug    uripattern
private void deattachuripatternfrimrestlet string uripattern  restletendpoint endpoint  restlet target  throws exception
component getdefaulthost   detach target
log debug    uripattern
@deprecated
protected string preprocessuri string uri
// if the uri was not valid (i.e. contains '{' and '}'
// it was most likely encoded by normalizeendpointuri in defaultcamelcontext.getendpoint(string)
return unsafeuricharactersencoder encode uri replaceall       replaceall
private static string decodepattern string pattern
return pattern    null ? null   pattern replaceall       replaceall
public boolean getcontrollerdaemon
return controllerdaemon
public void setcontrollerdaemon boolean controllerdaemon
this controllerdaemon   controllerdaemon
public integer getcontrollersleeptimems
return controllersleeptimems
public void setcontrollersleeptimems integer controllersleeptimems
this controllersleeptimems   controllersleeptimems
public integer getinboundbuffersize
return inboundbuffersize
public void setinboundbuffersize integer inboundbuffersize
this inboundbuffersize   inboundbuffersize
public integer getmaxconnectionsperhost
return maxconnectionsperhost
public void setmaxconnectionsperhost integer maxconnectionsperhost
this maxconnectionsperhost   maxconnectionsperhost
public integer getmaxthreads
return maxthreads
public void setmaxthreads integer maxthreads
this maxthreads   maxthreads
public integer getmaxtotalconnections
return maxtotalconnections
public void setmaxtotalconnections integer maxtotalconnections
this maxtotalconnections   maxtotalconnections
public integer getminthreads
return minthreads
public void setminthreads integer minthreads
this minthreads   minthreads
public integer getoutboundbuffersize
return outboundbuffersize
public void setoutboundbuffersize integer outboundbuffersize
this outboundbuffersize   outboundbuffersize
public boolean getpersistingconnections
return persistingconnections
public void setpersistingconnections boolean persistingconnections
this persistingconnections   persistingconnections
public boolean getpipeliningconnections
return pipeliningconnections
public void setpipeliningconnections boolean pipeliningconnections
this pipeliningconnections   pipeliningconnections
public integer getthreadmaxidletimems
return threadmaxidletimems
public void setthreadmaxidletimems integer threadmaxidletimems
this threadmaxidletimems   threadmaxidletimems
public boolean getuseforwardedforheader
return useforwardedforheader
public void setuseforwardedforheader boolean useforwardedforheader
this useforwardedforheader   useforwardedforheader