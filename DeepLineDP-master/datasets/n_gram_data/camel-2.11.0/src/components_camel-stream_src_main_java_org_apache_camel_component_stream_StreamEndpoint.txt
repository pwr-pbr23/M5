/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component stream
import java nio charset charset
import org apache camel component
import org apache camel consumer
import org apache camel processor
import org apache camel producer
import org apache camel impl defaultendpoint
import org slf4j logger
import org slf4j loggerfactory
public class streamendpoint extends defaultendpoint
private static final transient logger log   loggerfactory getlogger streamendpoint class
private string url
private string filename
private boolean scanstream
private boolean retry
private boolean closeondone
private long scanstreamdelay
private long delay
private string encoding
private string promptmessage
private long promptdelay
private long initialpromptdelay   2000
private int grouplines
private int autoclosecount
private charset charset
private groupstrategy groupstrategy   new defaultgroupstrategy
public streamendpoint string endpointuri  component component  throws exception
super endpointuri  component
@deprecated
public streamendpoint string endpointuri
super endpointuri
public consumer createconsumer processor processor  throws exception
return new streamconsumer this  processor  getendpointuri
public producer createproducer   throws exception
return new streamproducer this  getendpointuri
public boolean issingleton
return true
// properties
//-------------------------------------------------------------------------
public string getfilename
return filename
public void setfilename string filename
this filename   filename
public string geturl
return url
public void seturl string url
this url   url
public long getdelay
return delay
public void setdelay long delay
this delay   delay
public string getencoding
return encoding
public void setencoding string encoding
this encoding   encoding
public string getpromptmessage
return promptmessage
public void setpromptmessage string promptmessage
this promptmessage   promptmessage
public long getpromptdelay
return promptdelay
public void setpromptdelay long promptdelay
this promptdelay   promptdelay
public long getinitialpromptdelay
return initialpromptdelay
public void setinitialpromptdelay long initialpromptdelay
this initialpromptdelay   initialpromptdelay
public boolean isscanstream
return scanstream
public void setscanstream boolean scanstream
this scanstream   scanstream
public groupstrategy getgroupstrategy
return groupstrategy
public void setgroupstrategy groupstrategy strategy
this groupstrategy   strategy
public boolean isretry
return retry
public void setretry boolean retry
this retry   retry
public boolean iscloseondone
return closeondone
public void setcloseondone boolean closeondone
this closeondone   closeondone
public long getscanstreamdelay
return scanstreamdelay
public void setscanstreamdelay long scanstreamdelay
this scanstreamdelay   scanstreamdelay
public int getgrouplines
return grouplines
public void setgrouplines int grouplines
this grouplines   grouplines
public int getautoclosecount
return autoclosecount
public void setautoclosecount int autoclosecount
this autoclosecount   autoclosecount
public charset getcharset
return charset
// implementations
//-------------------------------------------------------------------------
protected void dostart   throws exception
charset   loadcharset
charset loadcharset
if  encoding    null
encoding   charset defaultcharset   name
log debug    encoding
if   charset issupported encoding
throw new illegalargumentexception     encoding
return charset forname encoding