/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component http
import java net uri
import java net urisyntaxexception
import java util arraylist
import java util iterator
import java util list
import org apache camel pollingconsumer
import org apache camel producer
import org apache camel impl defaultpollingendpoint
import org apache camel spi headerfilterstrategy
import org apache camel spi headerfilterstrategyaware
import org apache camel util objecthelper
import org apache commons httpclient httpclient
import org apache commons httpclient httpconnectionmanager
import org apache commons httpclient auth authpolicy
import org apache commons httpclient params httpclientparams
import org slf4j logger
import org slf4j loggerfactory
/**
* represents a <a href="http://camel.apache.org/http.html">http endpoint</a>
*
* @version
*/
public class httpendpoint extends defaultpollingendpoint implements headerfilterstrategyaware
private static final transient logger log   loggerfactory getlogger httpendpoint class
private headerfilterstrategy headerfilterstrategy   new httpheaderfilterstrategy
private httpbinding binding
private httpcomponent component
private uri httpuri
private httpclientparams clientparams
private httpclientconfigurer httpclientconfigurer
private httpconnectionmanager httpconnectionmanager
private boolean throwexceptiononfailure   true
private boolean bridgeendpoint
private boolean matchonuriprefix
private boolean chunked   true
private boolean disablestreamcache
private string proxyhost
private int proxyport
private string authmethodpriority
private boolean transferexception
private boolean traceenabled
private string httpmethodrestrict
private urlrewrite urlrewrite
public httpendpoint
public httpendpoint string endpointuri  httpcomponent component  uri httpuri  throws urisyntaxexception
this endpointuri  component  httpuri  null
public httpendpoint string endpointuri  httpcomponent component  uri httpuri  httpconnectionmanager httpconnectionmanager  throws urisyntaxexception
this endpointuri  component  httpuri  new httpclientparams    httpconnectionmanager  null
public httpendpoint string endpointuri  httpcomponent component  httpclientparams clientparams
httpconnectionmanager httpconnectionmanager  httpclientconfigurer clientconfigurer  throws urisyntaxexception
this endpointuri  component  null  clientparams  httpconnectionmanager  clientconfigurer
public httpendpoint string endpointuri  httpcomponent component  uri httpuri  httpclientparams clientparams
httpconnectionmanager httpconnectionmanager  httpclientconfigurer clientconfigurer  throws urisyntaxexception
super endpointuri  component
this component   component
this httpuri   httpuri
this clientparams   clientparams
this httpclientconfigurer   clientconfigurer
this httpconnectionmanager   httpconnectionmanager
public producer createproducer   throws exception
return new httpproducer this
public pollingconsumer createpollingconsumer   throws exception
return new httppollingconsumer this
/**
* factory method used by producers and consumers to create a new {@link httpclient} instance
*/
public httpclient createhttpclient
objecthelper notnull clientparams
objecthelper notnull httpconnectionmanager
httpclient answer   new httpclient getclientparams
// configure http proxy from camelcontext
if  objecthelper isnotempty getcamelcontext   getproperty        objecthelper isnotempty getcamelcontext   getproperty
string host   getcamelcontext   getproperty
int port   integer parseint getcamelcontext   getproperty
log debug    host  port
answer gethostconfiguration   setproxy host  port
if  proxyhost    null
log debug    proxyhost  proxyport
answer gethostconfiguration   setproxy proxyhost  proxyport
if  authmethodpriority    null
list<string> authprefs   new arraylist<string>
iterator<?> it   getcamelcontext   gettypeconverter   convertto iterator class  authmethodpriority
int i   1
while  it hasnext
object value   it next
authmethod auth   getcamelcontext   gettypeconverter   convertto authmethod class  value
if  auth    null
throw new illegalargumentexception     value       authmethodpriority
log debug    i  auth
authprefs add auth name
i
if   authprefs isempty
answer getparams   setparameter authpolicy auth_scheme_priority  authprefs
answer sethttpconnectionmanager httpconnectionmanager
httpclientconfigurer configurer   gethttpclientconfigurer
if  configurer    null
configurer configurehttpclient answer
return answer
public void connect httpconsumer consumer  throws exception
component connect consumer
public void disconnect httpconsumer consumer  throws exception
component disconnect consumer
public boolean islenientproperties
// true to allow dynamic uri options to be configured and passed to external system for eg. the httpproducer
return true
public boolean issingleton
return true
// properties
//-------------------------------------------------------------------------
/**
* provide access to the client parameters used on new {@link httpclient} instances
* used by producers or consumers of this endpoint.
*/
public httpclientparams getclientparams
return clientparams
/**
* provide access to the client parameters used on new {@link httpclient} instances
* used by producers or consumers of this endpoint.
*/
public void setclientparams httpclientparams clientparams
this clientparams   clientparams
public httpclientconfigurer gethttpclientconfigurer
return httpclientconfigurer
/**
* register a custom configuration strategy for new {@link httpclient} instances
* created by producers or consumers such as to configure authentication mechanisms etc
*
* @param httpclientconfigurer the strategy for configuring new {@link httpclient} instances
*/
public void sethttpclientconfigurer httpclientconfigurer httpclientconfigurer
this httpclientconfigurer   httpclientconfigurer
public httpbinding getbinding
if  binding    null
binding   new defaulthttpbinding this
return binding
public void setbinding httpbinding binding
this binding   binding
public string getpath
//if the path is empty, we just return the default path here
return httpuri getpath   length      0 ?     httpuri getpath
public int getport
if  httpuri getport       1
if    equals getprotocol
return 443
else
return 80
return httpuri getport
public string getprotocol
return httpuri getscheme
public uri gethttpuri
return httpuri
public void sethttpuri uri httpuri
this httpuri   httpuri
public httpconnectionmanager gethttpconnectionmanager
return httpconnectionmanager
public void sethttpconnectionmanager httpconnectionmanager httpconnectionmanager
this httpconnectionmanager   httpconnectionmanager
public headerfilterstrategy getheaderfilterstrategy
return headerfilterstrategy
public void setheaderfilterstrategy headerfilterstrategy headerfilterstrategy
this headerfilterstrategy   headerfilterstrategy
public boolean isthrowexceptiononfailure
return throwexceptiononfailure
public void setthrowexceptiononfailure boolean throwexceptiononfailure
this throwexceptiononfailure   throwexceptiononfailure
public boolean isbridgeendpoint
return bridgeendpoint
public void setbridgeendpoint boolean bridge
this bridgeendpoint   bridge
public boolean ismatchonuriprefix
return matchonuriprefix
public void setmatchonuriprefix boolean match
this matchonuriprefix   match
public boolean isdisablestreamcache
return this disablestreamcache
public void setdisablestreamcache boolean disable
this disablestreamcache   disable
public boolean ischunked
return this chunked
public void setchunked boolean chunked
this chunked   chunked
public string getproxyhost
return proxyhost
public void setproxyhost string proxyhost
this proxyhost   proxyhost
public int getproxyport
return proxyport
public void setproxyport int proxyport
this proxyport   proxyport
public string getauthmethodpriority
return authmethodpriority
public void setauthmethodpriority string authmethodpriority
this authmethodpriority   authmethodpriority
public boolean istransferexception
return transferexception
public void settransferexception boolean transferexception
this transferexception   transferexception
public boolean istraceenabled
return this traceenabled
public void settraceenabled boolean traceenabled
this traceenabled   traceenabled
public string gethttpmethodrestrict
return httpmethodrestrict
public void sethttpmethodrestrict string httpmethodrestrict
this httpmethodrestrict   httpmethodrestrict
public urlrewrite geturlrewrite
return urlrewrite
public void seturlrewrite urlrewrite urlrewrite
this urlrewrite   urlrewrite