/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component snmp
import java net uri
import org apache camel consumer
import org apache camel exchange
import org apache camel exchangepattern
import org apache camel processor
import org apache camel producer
import org apache camel impl defaultexchange
import org apache camel impl defaultpollingendpoint
import org slf4j logger
import org slf4j loggerfactory
import org snmp4j commandresponderevent
import org snmp4j pdu
import org snmp4j mp snmpconstants
public class snmpendpoint extends defaultpollingendpoint
public static final string default_community
public static final int default_snmp_version   snmpconstants version1
public static final int default_snmp_retries   2
public static final int default_snmp_timeout   1500
private static final logger log   loggerfactory getlogger snmpendpoint class
private oidlist oids   new oidlist
private string address
private string protocol
private int retries   default_snmp_retries
private int timeout   default_snmp_timeout
private int snmpversion   default_snmp_version
private string snmpcommunity   default_community
private snmpactiontype type
private int delay   60
/**
* creates a snmp endpoint
*
* @param uri       the endpoint uri
* @param component the component
*/
public snmpendpoint string uri  snmpcomponent component
super uri  component
public consumer createconsumer processor processor  throws exception
if  this type    snmpactiontype trap
return new snmptrapconsumer this  processor
else if  this type    snmpactiontype poll
return new snmpoidpoller this  processor
else
throw new illegalargumentexception     this type
public producer createproducer   throws exception
throw new unsupportedoperationexception
public boolean issingleton
return true
/**
* creates an exchange for the given message
*
* @param pdu the pdu
* @return an exchange
*/
public exchange createexchange pdu pdu
return createexchange getexchangepattern    pdu
/**
* creates an exchange for the given message
*
* @param pdu the pdu
* @param event a snmp4j commandresponderevent
* @return an exchange
*/
public exchange createexchange pdu pdu  commandresponderevent event
return createexchange getexchangepattern    pdu  event
/**
* creates an exchange for the given pattern and message
*
* @param pattern the message exchange pattern
* @param pdu     the pdu
* @return the exchange
*/
private exchange createexchange exchangepattern pattern  pdu pdu
exchange exchange   new defaultexchange this  pattern
exchange setin new snmpmessage pdu
return exchange
/**
* creates an exchange for the given pattern and message
*
* @param pattern the message exchange pattern
* @param pdu     the pdu
* @param event   a snmp4j commandresponderevent
* @return the exchange
*/
private exchange createexchange exchangepattern pattern  pdu pdu  commandresponderevent event
exchange exchange   new defaultexchange this  pattern
exchange setin new snmpmessage pdu  event
return exchange
/**
* creates and configures the endpoint
*
* @throws exception if unable to setup connection
*/
public void initiate   throws exception
uri uri   uri create getendpointuri
string host   uri gethost
int port   uri getport
if  host    null    host trim   length   < 1
host
if  port     1
if  gettype      snmpactiontype poll
port   161     default snmp poll port
else
port   162     default trap port
// set the address
string address   string format    getprotocol    host  port
log debug    address
setaddress address
public int getdelay
return delay
/**
* sets update rate in seconds
*
* @param updateevery the update rate in seconds
*/
public void setdelay int updateevery
this delay   updateevery
public snmpactiontype gettype
return this type
public void settype snmpactiontype type
this type   type
public oidlist getoids
return this oids
public void setoids oidlist oids
this oids   oids
public string getaddress
return this address
public void setaddress string address
this address   address
public int getretries
return this retries
public void setretries int retries
this retries   retries
public int gettimeout
return this timeout
public void settimeout int timeout
this timeout   timeout
public int getsnmpversion
return this snmpversion
public void setsnmpversion int snmpversion
this snmpversion   snmpversion
public string getsnmpcommunity
return this snmpcommunity
public void setsnmpcommunity string snmpcommunity
this snmpcommunity   snmpcommunity
public string getprotocol
return this protocol
public void setprotocol string protocol
this protocol   protocol
@override
public string tostring
// only show address to avoid user and password details to be shown
return     address