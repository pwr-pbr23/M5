/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel util
import java util bitset
/**
* encoder for unsafe uri characters.
* <p/>
* a good source for details is <a href="http://en.wikipedia.org/wiki/url_encode">wikipedia url encode</a> article.
*/
public final class unsafeuricharactersencoder
private static bitset unsafecharacters
private static final char hex_digits
static
unsafecharacters   new bitset 256
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
unsafecharacters set
private unsafeuricharactersencoder
// util class
public static string encode string s
int n   s    null ? 0   s length
if  n    0
return s
// first check whether we actually need to encode
char chars   s tochararray
for  int i   0
// just deal with the ascii character
if  chars > 0    chars < 128
if  unsafecharacters get chars
break
if    i >  chars length
return s
// okay there are some unsafe characters so we do need to encode
// see details at: http://en.wikipedia.org/wiki/url_encode
stringbuilder sb   new stringbuilder
for  int i   0  i < chars length  i
char ch   chars
if  ch > 0    ch < 128    unsafecharacters get ch
// special for % sign as it may be a decimal encoded value
if  ch
char next   i   1 < chars length ? chars
char next2   i   2 < chars length ? chars
if  ishexdigit next     ishexdigit next2
// its already encoded (decimal encoded) so just append as is
sb append ch
else
// must escape then, as its an unsafe character
appendescape sb   byte ch
else
// must escape then, as its an unsafe character
appendescape sb   byte ch
else
sb append ch
return sb tostring
private static void appendescape stringbuilder sb  byte b
sb append
sb append hex_digits
sb append hex_digits
private static boolean ishexdigit char ch
for  char hex   hex_digits
if  hex    ch
return true
return false