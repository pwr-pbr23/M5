/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel processor validation
import java io file
import java io ioexception
import java io inputstream
import java io stringwriter
import java net url
import java util collections
import javax xml xmlconstants
import javax xml parsers parserconfigurationexception
import javax xml transform result
import javax xml transform source
import javax xml transform dom domresult
import javax xml transform dom domsource
import javax xml transform sax saxresult
import javax xml transform sax saxsource
import javax xml transform stax staxsource
import javax xml transform stream streamresult
import javax xml transform stream streamsource
import javax xml validation schema
import javax xml validation schemafactory
import javax xml validation validator
import org w3c dom node
import org w3c dom ls lsresourceresolver
import org xml sax saxexception
import org xml sax saxparseexception
import org apache camel exchange
import org apache camel expectedbodytypeexception
import org apache camel processor
import org apache camel runtimetransformexception
import org apache camel typeconverter
import org apache camel converter jaxp xmlconverter
import org apache camel util iohelper
import org slf4j logger
import org slf4j loggerfactory
/**
* a processor which validates the xml version of the inbound message body
* against some schema either in xsd or relaxng
*/
public class validatingprocessor implements processor
private static final logger log   loggerfactory getlogger validatingprocessor class
private xmlconverter converter   new xmlconverter
private string schemalanguage   xmlconstants w3c_xml_schema_ns_uri
private schema schema
private source schemasource
private schemafactory schemafactory
private url schemaurl
private file schemafile
private validatorerrorhandler errorhandler   new defaultvalidationerrorhandler
private boolean usedom
private boolean usesharedschema   true
private lsresourceresolver resourceresolver
private boolean failonnullbody   true
private boolean failonnullheader   true
private string headername
public void process exchange exchange  throws exception
schema schema
if  isusesharedschema
schema   getschema
else
schema   createschema
validator validator   schema newvalidator
// the underlying input stream, which we need to close to avoid locking files or other resources
source source   null
inputstream is   null
try
result result   null
// only convert to input stream if really needed
if  isinputstreamneeded exchange
is   getcontenttovalidate exchange  inputstream class
if  is    null
source   getsource exchange  is
else
object content   getcontenttovalidate exchange
if  content    null
source   getsource exchange  content
if  shoulduseheader
if  source    null    isfailonnullheader
throw new noxmlheadervalidationexception exchange  headername
else
if  source    null    isfailonnullbody
throw new noxmlbodyvalidationexception exchange
if  source instanceof domsource
result   new domresult
else if  source instanceof streamsource
result   new streamresult new stringwriter
else if  source instanceof saxsource
result   new saxresult
else if  source instanceof staxsource
result   null
if  source    null
// create a new errorhandler and set it on the validator
// must be a local instance to avoid problems with concurrency (to be
// thread safe)
validatorerrorhandler handler   errorhandler getclass   newinstance
validator seterrorhandler handler
try
log trace    source
validator validate source  result
handler handleerrors exchange  schema  result
catch  saxparseexception e
// can be thrown for non well formed xml
throw new schemavalidationexception exchange  schema  collections singletonlist e
collections <saxparseexception>emptylist
collections <saxparseexception>emptylist
finally
iohelper close is
private object getcontenttovalidate exchange exchange
if  shoulduseheader
return exchange getin   getheader headername
else
return exchange getin   getbody
private <t> t getcontenttovalidate exchange exchange  class<t> clazz
if  shoulduseheader
return exchange getin   getheader headername  clazz
else
return exchange getin   getbody clazz
private boolean shoulduseheader
return headername    null
public void loadschema   throws exception
// force loading of schema
schema   createschema
// properties
// -----------------------------------------------------------------------
public schema getschema   throws ioexception  saxexception
if  schema    null
schema   createschema
return schema
public void setschema schema schema
this schema   schema
public string getschemalanguage
return schemalanguage
public void setschemalanguage string schemalanguage
this schemalanguage   schemalanguage
public source getschemasource   throws ioexception
if  schemasource    null
schemasource   createschemasource
return schemasource
public void setschemasource source schemasource
this schemasource   schemasource
public url getschemaurl
return schemaurl
public void setschemaurl url schemaurl
this schemaurl   schemaurl
public file getschemafile
return schemafile
public void setschemafile file schemafile
this schemafile   schemafile
public schemafactory getschemafactory
if  schemafactory    null
schemafactory   createschemafactory
return schemafactory
public void setschemafactory schemafactory schemafactory
this schemafactory   schemafactory
public validatorerrorhandler geterrorhandler
return errorhandler
public void seterrorhandler validatorerrorhandler errorhandler
this errorhandler   errorhandler
@deprecated
public boolean isusedom
return usedom
/**
* sets whether domsource and domresult should be used.
*
* @param usedom true to use dom otherwise
*/
@deprecated
public void setusedom boolean usedom
this usedom   usedom
public boolean isusesharedschema
return usesharedschema
public void setusesharedschema boolean usesharedschema
this usesharedschema   usesharedschema
public lsresourceresolver getresourceresolver
return resourceresolver
public void setresourceresolver lsresourceresolver resourceresolver
this resourceresolver   resourceresolver
public boolean isfailonnullbody
return failonnullbody
public void setfailonnullbody boolean failonnullbody
this failonnullbody   failonnullbody
public boolean isfailonnullheader
return failonnullheader
public void setfailonnullheader boolean failonnullheader
this failonnullheader   failonnullheader
public string getheadername
return headername
public void setheadername string headername
this headername   headername
// implementation methods
// -----------------------------------------------------------------------
protected schemafactory createschemafactory
schemafactory factory   schemafactory newinstance schemalanguage
if  getresourceresolver      null
factory setresourceresolver getresourceresolver
return factory
protected source createschemasource   throws ioexception
throw new illegalargumentexception
protected schema createschema   throws saxexception  ioexception
schemafactory factory   getschemafactory
url url   getschemaurl
if  url    null
return factory newschema url
file file   getschemafile
if  file    null
return factory newschema file
return factory newschema getschemasource
/**
* checks whether we need an {@link inputstream} to access the message body or header.
* <p/>
* depending on the content in the message body or header, we may not need to convert
* to {@link inputstream}.
*
* @param exchange the current exchange
* @return <tt>true</tt> to convert to {@link inputstream} beforehand converting to {@link source} afterwards.
*/
protected boolean isinputstreamneeded exchange exchange
object content   getcontenttovalidate exchange
if  content    null
return false
if  content instanceof inputstream
return true
else if  content instanceof source
return false
else if  content instanceof string
return false
else if  content instanceof byte
return false
else if  content instanceof node
return false
else if  exchange getcontext   gettypeconverterregistry   lookup source class  content getclass       null
//there is a direct and hopefully optimized converter to source
return false
// yes an input stream is needed
return true
/**
* converts the inbound body or header to a {@link source}, if it is <b>not</b> already a {@link source}.
* <p/>
* this implementation will prefer to source in the following order:
* <ul>
* <li>dom - dom if explicit configured to use dom</li>
* <li>sax - sax as 2nd choice</li>
* <li>stream - stream as 3rd choice</li>
* <li>dom - dom as 4th choice</li>
* </ul>
*/
protected source getsource exchange exchange  object content
if  isusedom
// force dom
return exchange getcontext   gettypeconverter   tryconvertto domsource class  exchange  content
// body or header may already be a source
if  content instanceof source
return  source  content
source source   null
if  content instanceof inputstream
return new streamsource  inputstream  content
if  content    null
typeconverter tc   exchange getcontext   gettypeconverterregistry   lookup source class  content getclass
if  tc    null
source   tc convertto source class  exchange  content
if  source    null
// then try sax
source   exchange getcontext   gettypeconverter   tryconvertto saxsource class  exchange  content
if  source    null
// then try stream
source   exchange getcontext   gettypeconverter   tryconvertto streamsource class  exchange  content
if  source    null
// and fallback to dom
source   exchange getcontext   gettypeconverter   tryconvertto domsource class  exchange  content
if  source    null
if  isfailonnullbody
throw new expectedbodytypeexception exchange  source class
else
try
source   converter todomsource converter createdocument
catch  parserconfigurationexception e
throw new runtimetransformexception e
return source