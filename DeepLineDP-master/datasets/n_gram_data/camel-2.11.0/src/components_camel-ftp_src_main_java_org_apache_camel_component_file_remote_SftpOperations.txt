/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component file remote
import java io bytearrayinputstream
import java io bytearrayoutputstream
import java io file
import java io fileoutputstream
import java io ioexception
import java io inputstream
import java io outputstream
import java util arraylist
import java util hashtable
import java util list
import java util vector
import java util regex pattern
import com jcraft jsch channelsftp
import com jcraft jsch jsch
import com jcraft jsch jschexception
import com jcraft jsch session
import com jcraft jsch sftpexception
import com jcraft jsch uikeyboardinteractive
import com jcraft jsch userinfo
import org apache camel exchange
import org apache camel invalidpayloadexception
import org apache camel component file filecomponent
import org apache camel component file genericfile
import org apache camel component file genericfileendpoint
import org apache camel component file genericfileexist
import org apache camel component file genericfileoperationfailedexception
import org apache camel util fileutil
import org apache camel util iohelper
import org apache camel util objecthelper
import org apache camel util stopwatch
import org apache camel util timeutils
import org slf4j logger
import org slf4j loggerfactory
import static org apache camel util objecthelper isnotempty
/**
* sftp remote file operations
*/
public class sftpoperations implements remotefileoperations<channelsftp lsentry>
private static final transient logger log   loggerfactory getlogger sftpoperations class
private static final pattern up_dir_pattern   pattern compile
private sftpendpoint endpoint
private channelsftp channel
private session session
/**
* extended user info which supports interactive keyboard mode, by entering the password.
*/
public interface extendeduserinfo extends userinfo  uikeyboardinteractive
public void setendpoint genericfileendpoint<channelsftp lsentry> endpoint
this endpoint    sftpendpoint  endpoint
public boolean connect remotefileconfiguration configuration  throws genericfileoperationfailedexception
if  isconnected
// already connected
return true
boolean connected   false
int attempt   0
while   connected
try
if  log istraceenabled      attempt > 0
log trace    attempt  configuration remoteserverinformation
if  channel    null     channel isconnected
if  session    null     session isconnected
log trace
session   createsession configuration
if  endpoint getconfiguration   getconnecttimeout   > 0
log trace     endpoint getconfiguration   getconnecttimeout
session connect endpoint getconfiguration   getconnecttimeout
else
log trace
session connect
log trace
channel    channelsftp  session openchannel
if  endpoint getconfiguration   getconnecttimeout   > 0
log trace     endpoint getconfiguration   getconnecttimeout
channel connect endpoint getconfiguration   getconnecttimeout
else
log trace
channel connect
log info     configuration remoteserverinformation
// yes we could connect
connected   true
catch  exception e
// check if we are interrupted so we can break out
if  thread currentthread   isinterrupted
throw new genericfileoperationfailedexception    new interruptedexception
genericfileoperationfailedexception failed   new genericfileoperationfailedexception     configuration remoteserverinformation    e
log trace    failed getmessage
attempt
if  attempt > endpoint getmaximumreconnectattempts
throw failed
if  endpoint getreconnectdelay   > 0
try
thread sleep endpoint getreconnectdelay
catch  interruptedexception ie
// we could potentially also be interrupted during sleep
thread currentthread   interrupt
throw new genericfileoperationfailedexception    ie
return true
protected session createsession final remotefileconfiguration configuration  throws jschexception
final jsch jsch   new jsch
jsch setlogger new jschlogger
sftpconfiguration sftpconfig    sftpconfiguration  configuration
if  isnotempty sftpconfig getciphers
log debug    sftpconfig getciphers
hashtable<string  string> ciphers   new hashtable<string  string>
ciphers put    sftpconfig getciphers
ciphers put    sftpconfig getciphers
jsch setconfig ciphers
if  isnotempty sftpconfig getprivatekeyfile
log debug    sftpconfig getprivatekeyfile
if  isnotempty sftpconfig getprivatekeyfilepassphrase
jsch addidentity sftpconfig getprivatekeyfile    sftpconfig getprivatekeyfilepassphrase
else
jsch addidentity sftpconfig getprivatekeyfile
if  isnotempty sftpconfig getknownhostsfile
log debug    sftpconfig getknownhostsfile
jsch setknownhosts sftpconfig getknownhostsfile
final session session   jsch getsession configuration getusername    configuration gethost    configuration getport
if  isnotempty sftpconfig getstricthostkeychecking
log debug    sftpconfig getstricthostkeychecking
session setconfig    sftpconfig getstricthostkeychecking
session setserveraliveinterval sftpconfig getserveraliveinterval
session setserveralivecountmax sftpconfig getserveralivecountmax
// compression
if  sftpconfig getcompression   > 0
log debug    sftpconfig getcompression
session setconfig
session setconfig
session setconfig    integer tostring sftpconfig getcompression
// set user information
session setuserinfo new extendeduserinfo
public string getpassphrase
return null
public string getpassword
return configuration getpassword
public boolean promptpassword string s
return true
public boolean promptpassphrase string s
return true
public boolean promptyesno string s
log warn     s
// return 'false' indicating modification of the hosts file is disabled.
return false
public void showmessage string s
log trace     s
public string promptkeyboardinteractive string destination  string name
string instruction  string prompt  boolean echo
return new string configuration getpassword
return session
private static final class jschlogger implements com jcraft jsch logger
public boolean isenabled int level
switch  level
case fatal
// use error as fatal
return log iserrorenabled
case error
return log iserrorenabled
case warn
return log iswarnenabled
case info
return log isinfoenabled
default
return log isdebugenabled
public void log int level  string message
switch  level
case fatal
// use error as fatal
log error     message
break
case error
log error     message
break
case warn
log warn     message
break
case info
log info     message
break
default
log debug     message
break
public boolean isconnected   throws genericfileoperationfailedexception
return session    null    session isconnected      channel    null    channel isconnected
public void disconnect   throws genericfileoperationfailedexception
if  session    null    session isconnected
session disconnect
if  channel    null    channel isconnected
channel disconnect
public boolean deletefile string name  throws genericfileoperationfailedexception
log debug    name
try
channel rm name
return true
catch  sftpexception e
throw new genericfileoperationfailedexception     name  e
public boolean renamefile string from  string to  throws genericfileoperationfailedexception
log debug    from  to
try
channel rename from  to
return true
catch  sftpexception e
throw new genericfileoperationfailedexception     from       to  e
public boolean builddirectory string directory  boolean absolute  throws genericfileoperationfailedexception
// must normalize directory first
directory   endpoint getconfiguration   normalizepath directory
log trace    directory  absolute
// ignore absolute as all dirs are relative with ftp
boolean success   false
string originaldirectory   getcurrentdirectory
try
// maybe the full directory already exists
try
channel cd directory
success   true
catch  sftpexception e
// ignore, we could not change directory so try to create it instead
if   success
log debug    directory
try
channel mkdir directory
success   true
catch  sftpexception e
// we are here if the server side doesn't create intermediate folders
// so create the folder one by one
success   builddirectorychunks directory
catch  ioexception e
throw new genericfileoperationfailedexception     directory  e
catch  sftpexception e
throw new genericfileoperationfailedexception     directory  e
finally
// change back to original directory
if  originaldirectory    null
changecurrentdirectory originaldirectory
return success
private boolean builddirectorychunks string dirname  throws ioexception  sftpexception
final stringbuilder sb   new stringbuilder dirname length
final string dirs   dirname split
boolean success   false
for  string dir   dirs
sb append dir  append
// must normalize the directory name
string directory   endpoint getconfiguration   normalizepath sb tostring
// do not try to build root folder (/ or \)
if    directory equals       directory equals
try
log trace    directory
channel mkdir directory
success   true
catch  sftpexception e
// ignore keep trying to create the rest of the path
return success
public string getcurrentdirectory   throws genericfileoperationfailedexception
log trace
try
string answer   channel pwd
log trace    answer
return answer
catch  sftpexception e
throw new genericfileoperationfailedexception    e
public void changecurrentdirectory string path  throws genericfileoperationfailedexception
log trace    path
if  objecthelper isempty path
return
// must compact path so sftp server can traverse correctly, make use of the '/'
// separator because jsch expects this as the file separator even on windows
string before   path
char separatorchar
path   fileutil compactpath path  separatorchar
if  log istraceenabled
log trace    new object before  path  separatorchar
// not stepwise should change directory in one operation
if   endpoint getconfiguration   isstepwise
dochangedirectory path
return
if  getcurrentdirectory   startswith path
// use relative path
string p   getcurrentdirectory   substring path length
if  p length      0
return
// the first character must be '/' and hence removed
path   up_dir_pattern matcher p  replaceall    substring 1
// if it starts with the root path then a little special handling for that
if  fileutil hasleadingseparator path
// change to root path
dochangedirectory path substring 0  1
path   path substring 1
// split into multiple dirs
final string dirs   path split
if  dirs    null    dirs length    0
// path was just a relative single path
dochangedirectory path
return
// there are multiple dirs so do this in chunks
for  string dir   dirs
dochangedirectory dir
private void dochangedirectory string path
if  path    null      equals path     objecthelper isempty path
return
log trace    path
try
channel cd path
catch  sftpexception e
throw new genericfileoperationfailedexception     path  e
public void changetoparentdirectory   throws genericfileoperationfailedexception
log trace
string current   getcurrentdirectory
string parent   fileutil compactpath current
// must start with absolute
if   parent startswith
parent       parent
changecurrentdirectory parent
public list<channelsftp lsentry> listfiles   throws genericfileoperationfailedexception
return listfiles
public list<channelsftp lsentry> listfiles string path  throws genericfileoperationfailedexception
log trace    path
if  objecthelper isempty path
// list current directory if file path is not given
path
try
final list<channelsftp lsentry> list   new arraylist<channelsftp lsentry>
@suppresswarnings
vector files   channel ls path
// can return either null or an empty list depending on ftp servers
if  files    null
for  object file   files
list add  channelsftp lsentry  file
return list
catch  sftpexception e
throw new genericfileoperationfailedexception     path  e
public boolean retrievefile string name  exchange exchange  throws genericfileoperationfailedexception
log trace    name
if  objecthelper isnotempty endpoint getlocalworkdirectory
// local work directory is configured so we should store file content as files in this local directory
return retrievefiletofileinlocalworkdirectory name  exchange
else
// store file content directory as stream on the body
return retrievefiletostreaminbody name  exchange
@override
public void releaseretreivedfileresources exchange exchange  throws genericfileoperationfailedexception
inputstream is   exchange getin   getheader remotefilecomponent remote_file_input_stream  inputstream class
if  is    null
try
is close
catch  ioexception e
throw new genericfileoperationfailedexception e getmessage    e
@suppresswarnings
private boolean retrievefiletostreaminbody string name  exchange exchange  throws genericfileoperationfailedexception
outputstream os   null
string currentdir   null
try
genericfile<channelsftp lsentry> target
genericfile<channelsftp lsentry>  exchange getproperty filecomponent file_exchange_file
objecthelper notnull target      filecomponent file_exchange_file
string remotename   name
if  endpoint getconfiguration   isstepwise
// remember current directory
currentdir   getcurrentdirectory
// change directory to path where the file is to be retrieved
// (must do this as some ftp servers cannot retrieve using absolute path)
string path   fileutil onlypath name
if  path    null
changecurrentdirectory path
// remote name is now only the file name as we just changed directory
remotename   fileutil strippath name
// use input stream which works with apache sshd used for testing
inputstream is   channel get remotename
if  endpoint getconfiguration   isstreamdownload
target setbody is
exchange getin   setheader remotefilecomponent remote_file_input_stream  is
else
os   new bytearrayoutputstream
target setbody os
iohelper copyandcloseinput is  os
return true
catch  ioexception e
throw new genericfileoperationfailedexception     name  e
catch  sftpexception e
throw new genericfileoperationfailedexception     name  e
finally
iohelper close os      name  log
// change back to current directory if we changed directory
if  currentdir    null
changecurrentdirectory currentdir
@suppresswarnings
private boolean retrievefiletofileinlocalworkdirectory string name  exchange exchange  throws genericfileoperationfailedexception
file temp
file local   new file endpoint getlocalworkdirectory
outputstream os
genericfile<channelsftp lsentry> file
genericfile<channelsftp lsentry>  exchange getproperty filecomponent file_exchange_file
objecthelper notnull file      filecomponent file_exchange_file
try
// use relative filename in local work directory
string relativename   file getrelativefilepath
temp   new file local  relativename
local   new file local  relativename
// create directory to local work file
local mkdirs
// delete any existing files
if  temp exists
if   fileutil deletefile temp
throw new genericfileoperationfailedexception     temp
if  local exists
if   fileutil deletefile local
throw new genericfileoperationfailedexception     local
// create new temp local work file
if   temp createnewfile
throw new genericfileoperationfailedexception     temp
// store content as a file in the local work directory in the temp handle
os   new fileoutputstream temp
// set header with the path to the local work file
exchange getin   setheader exchange file_local_work_path  local getpath
catch  exception e
throw new genericfileoperationfailedexception     local
string currentdir   null
try
// store the java.io.file handle as the body
file setbody local
string remotename   name
if  endpoint getconfiguration   isstepwise
// remember current directory
currentdir   getcurrentdirectory
// change directory to path where the file is to be retrieved
// (must do this as some ftp servers cannot retrieve using absolute path)
string path   fileutil onlypath name
if  path    null
changecurrentdirectory path
// remote name is now only the file name as we just changed directory
remotename   fileutil strippath name
channel get remotename  os
catch  sftpexception e
log trace    name  temp
// failed to retrieve the file so we need to close streams and delete in progress file
// must close stream before deleting file
iohelper close os      name  log
boolean deleted   fileutil deletefile temp
if   deleted
log warn     name       temp
throw new genericfileoperationfailedexception     name  e
finally
iohelper close os      name  log
// change back to current directory if we changed directory
if  currentdir    null
changecurrentdirectory currentdir
log debug
// operation went okay so rename temp to local after we have retrieved the data
log trace    temp  local
try
if   fileutil renamefile temp  local  false
throw new genericfileoperationfailedexception     temp       local
catch  ioexception e
throw new genericfileoperationfailedexception     temp       local  e
return true
public boolean storefile string name  exchange exchange  throws genericfileoperationfailedexception
// must normalize name first
name   endpoint getconfiguration   normalizepath name
log trace    name
boolean answer   false
string currentdir   null
string path   fileutil onlypath name
string targetname   name
try
if  path    null    endpoint getconfiguration   isstepwise
// must remember current dir so we stay in that directory after the write
currentdir   getcurrentdirectory
// change to path of name
changecurrentdirectory path
// the target name should be without path, as we have changed directory
targetname   fileutil strippath name
// store the file
answer   dostorefile name  targetname  exchange
finally
// change back to current directory if we changed directory
if  currentdir    null
changecurrentdirectory currentdir
return answer
private boolean dostorefile string name  string targetname  exchange exchange  throws genericfileoperationfailedexception
log trace    targetname
// if an existing file already exists what should we do?
if  endpoint getfileexist      genericfileexist ignore
endpoint getfileexist      genericfileexist fail
endpoint getfileexist      genericfileexist move
boolean existfile   existsfile targetname
if  existfile    endpoint getfileexist      genericfileexist ignore
// ignore but indicate that the file was written
log trace    name
return true
else if  existfile    endpoint getfileexist      genericfileexist fail
throw new genericfileoperationfailedexception     name
else if  existfile    endpoint getfileexist      genericfileexist move
// move any existing file first
domoveexistingfile name  targetname
inputstream is   null
if  exchange getin   getbody      null
// do an explicit test for a null body and decide what to do
if  endpoint isallownullbody
log trace
is   new bytearrayinputstream new byte
else
throw new genericfileoperationfailedexception     name
try
if  is    null
is   exchange getin   getmandatorybody inputstream class
final stopwatch watch   new stopwatch
log debug    targetname  is
if  endpoint getfileexist      genericfileexist append
log trace    targetname
channel put is  targetname  channelsftp append
else
log trace    targetname
// override is default
channel put is  targetname
watch stop
if  log isdebugenabled
log debug
new object timeutils printduration watch taken     watch taken    targetname
// after storing file, we may set chmod on the file
string mode   endpoint getconfiguration   getchmod
if  objecthelper isnotempty mode
// parse to int using 8bit mode
int permissions   integer parseint mode  8
log trace    mode  targetname
channel chmod permissions  targetname
return true
catch  sftpexception e
throw new genericfileoperationfailedexception     name  e
catch  invalidpayloadexception e
throw new genericfileoperationfailedexception     name  e
finally
iohelper close is      name  log
/**
* moves any existing file due fileexists=move is in use.
*/
private void domoveexistingfile string name  string targetname  throws genericfileoperationfailedexception
// need to evaluate using a dummy and simulate the file first, to have access to all the file attributes
// create a dummy exchange as exchange is needed for expression evaluation
// we support only the following 3 tokens.
exchange dummy   endpoint createexchange
// we only support relative paths for the ftp component, so dont provide any parent
string parent   null
string onlyname   fileutil strippath targetname
dummy getin   setheader exchange file_name  targetname
dummy getin   setheader exchange file_name_only  onlyname
dummy getin   setheader exchange file_parent  parent
string to   endpoint getmoveexisting   evaluate dummy  string class
// we only support relative paths for the ftp component, so strip any leading paths
to   fileutil stripleadingseparator to
// normalize accordingly to configuration
to   endpoint getconfiguration   normalizepath to
if  objecthelper isempty to
throw new genericfileoperationfailedexception     name
// do we have a sub directory
string dir   fileutil onlypath to
if  dir    null
// ensure directory exists
builddirectory dir  false
// deal if there already exists a file
if  existsfile to
if  endpoint iseagerdeletetargetfile
log trace    to
deletefile to
else
throw new genericfileoperationfailedexception     name       to       to
log trace    name  to
if   renamefile targetname  to
throw new genericfileoperationfailedexception     name       to
public boolean existsfile string name  throws genericfileoperationfailedexception
log trace    name
if  endpoint isfastexistscheck
return fastexistsfile name
// check whether a file already exists
string directory   fileutil onlypath name
if  directory    null
// assume current dir if no path could be extracted
directory
string onlyname   fileutil strippath name
try
@suppresswarnings
vector files   channel ls directory
// can return either null or an empty list depending on ftp servers
if  files    null
return false
for  object file   files
channelsftp lsentry entry    channelsftp lsentry  file
string existing   entry getfilename
log trace    existing  name
existing   fileutil strippath existing
if  existing    null    existing equals onlyname
return true
return false
catch  sftpexception e
// or an exception can be thrown with id 2 which means file does not exists
if  channelsftp ssh_fx_no_such_file    e id
return false
// otherwise its a more serious error so rethrow
throw new genericfileoperationfailedexception e getmessage    e
protected boolean fastexistsfile string name  throws genericfileoperationfailedexception
log trace    name
try
@suppresswarnings
vector files   channel ls name
if  files    null
return false
return files size   >  1
catch  sftpexception e
// or an exception can be thrown with id 2 which means file does not exists
if  channelsftp ssh_fx_no_such_file    e id
return false
// otherwise its a more serious error so rethrow
throw new genericfileoperationfailedexception e getmessage    e
public boolean sendnoop   throws genericfileoperationfailedexception
// is not implemented
return true
public boolean sendsitecommand string command  throws genericfileoperationfailedexception
// is not implemented
return true