/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component timer
import java util date
import java util timer
import org apache camel component
import org apache camel consumer
import org apache camel multipleconsumerssupport
import org apache camel processor
import org apache camel producer
import org apache camel runtimecamelexception
import org apache camel api management managedattribute
import org apache camel api management managedresource
import org apache camel impl defaultendpoint
/**
* represents a timer endpoint that can generate periodic inbound exchanges triggered by a timer.
*
* @version
*/
@managedresource description
public class timerendpoint extends defaultendpoint implements multipleconsumerssupport
private string timername
private date time
private long period   1000
private long delay   1000
private boolean fixedrate
private boolean daemon   true
private timer timer
private long repeatcount
public timerendpoint
public timerendpoint string uri  component component  string timername
super uri  component
this timername   timername
public producer createproducer   throws exception
throw new runtimecamelexception     getendpointuri
public consumer createconsumer processor processor  throws exception
return new timerconsumer this  processor
@override
protected void dostart   throws exception
super dostart
// do nothing, the timer will be set when the first consumer will request it
@override
protected void dostop   throws exception
settimer null
super dostop
@managedattribute
public boolean ismultipleconsumerssupported
return true
@managedattribute description
public string gettimername
if  timername    null
timername   getendpointuri
return timername
@managedattribute description
public void settimername string timername
this timername   timername
@managedattribute description
public boolean isdaemon
return daemon
@managedattribute description
public void setdaemon boolean daemon
this daemon   daemon
@managedattribute description
public long getdelay
return delay
@managedattribute description
public void setdelay long delay
this delay   delay
@managedattribute description
public boolean isfixedrate
return fixedrate
@managedattribute description
public void setfixedrate boolean fixedrate
this fixedrate   fixedrate
@managedattribute description
public long getperiod
return period
@managedattribute description
public void setperiod long period
this period   period
@managedattribute description
public long getrepeatcount
return repeatcount
@managedattribute description
public void setrepeatcount long repeatcount
this repeatcount   repeatcount
public date gettime
return time
public void settime date time
this time   time
@managedattribute description
public boolean issingleton
return true
public synchronized timer gettimer
if  timer    null
timercomponent tc    timercomponent getcomponent
timer   tc gettimer this
return timer
public synchronized void settimer timer timer
this timer   timer
@managedattribute description
public string getcamelid
return this getcamelcontext   getname
@managedattribute description
public string getendpointuri
return super getendpointuri
@managedattribute description
public string getstate
return getstatus   name