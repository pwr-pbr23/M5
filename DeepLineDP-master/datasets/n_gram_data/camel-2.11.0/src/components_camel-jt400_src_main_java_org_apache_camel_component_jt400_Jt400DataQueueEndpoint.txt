/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component jt400
import java beans propertyvetoexception
import java net urisyntaxexception
import com ibm as400 access as400
import com ibm as400 access as400connectionpool
import com ibm as400 access basedataqueue
import com ibm as400 access dataqueue
import com ibm as400 access keyeddataqueue
import org apache camel camelexception
import org apache camel pollingconsumer
import org apache camel producer
import org apache camel impl defaultpollingendpoint
import org apache camel util objecthelper
import org apache camel util urisupport
/**
* as/400 data queue endpoint
*/
public class jt400dataqueueendpoint extends defaultpollingendpoint
public static final string key
public static final string sender_information
/**
* searchtypes for reading from keyed data queues
*/
public enum searchtype
eq  ne  lt  le  gt  ge
/**
* enumeration of supported data formats
*/
public enum format
/**
* using <code>string</code> for transferring data
*/
text
/**
* using <code>byte[]</code> for transferring data
*/
binary
/**
* encapsulates the base endpoint options and functionality.
*/
private final jt400endpoint baseendpoint
/**
* @deprecated used by {@link #getdataqueue()}, which is deprecated.
*/
@deprecated
private basedataqueue dataqueue
private boolean keyed
private string searchkey
private searchtype searchtype   searchtype eq
/**
* creates a new as/400 data queue endpoint using a default connection pool
* provided by the component.
*
* @throws nullpointerexception if {@code component} is null
*/
protected jt400dataqueueendpoint string endpointuri  jt400component component  throws camelexception
this endpointuri  component  component getconnectionpool
/**
* creates a new as/400 data queue endpoint using the specified connection
* pool.
*/
protected jt400dataqueueendpoint string endpointuri  jt400component component  as400connectionpool connectionpool  throws camelexception
super endpointuri  component
objecthelper notnull connectionpool
try
baseendpoint   new jt400endpoint endpointuri  connectionpool
catch  urisyntaxexception e
throw new camelexception     urisupport sanitizeuri endpointuri   e
public void setccsid int ccsid  throws propertyvetoexception
baseendpoint setccsid ccsid
public void setformat format format
baseendpoint setformat format
public format getformat
return baseendpoint getformat
public void setkeyed boolean keyed
this keyed   keyed
public boolean iskeyed
return keyed
public void setsearchkey string searchkey
this searchkey   searchkey
public string getsearchkey
return searchkey
public void setsearchtype searchtype searchtype
this searchtype   searchtype
public searchtype getsearchtype
return searchtype
public void setguiavailable boolean guiavailable  throws propertyvetoexception
baseendpoint setguiavailable guiavailable
@override
public pollingconsumer createpollingconsumer   throws exception
return new jt400dataqueueconsumer this
@override
public producer createproducer   throws exception
return new jt400dataqueueproducer this
/**
* obtains an {@code as400} object that connects to this endpoint. since
* these objects represent limited resources, clients have the
* responsibility of {@link #releasesystem(as400) releasing them} when done.
*
* @return an {@code as400} object that connects to this endpoint
*/
protected as400 getsystem
return baseendpoint getconnection
/**
* releases a previously obtained {@code as400} object from use.
*
* @param system a previously obtained {@code as400} object
*/
protected void releasesystem as400 system
baseendpoint releaseconnection system
/**
* @deprecated this method does not benefit from connection pooling; data
*             queue instances should be constructed with a connection
*             obtained by {@link #getsystem()}.
*/
@deprecated
protected basedataqueue getdataqueue
if  dataqueue    null
as400 system   new as400 baseendpoint getsystemname    baseendpoint getuserid    baseendpoint getpassword
string objectpath   baseendpoint getobjectpath
dataqueue   keyed ? new keyeddataqueue system  objectpath    new dataqueue system  objectpath
return dataqueue
/**
* returns the fully qualified integrated file system path name of the data
* queue of this endpoint.
*
* @return the fully qualified integrated file system path name of the data
*         queue of this endpoint
*/
protected string getobjectpath
return baseendpoint getobjectpath
public boolean issingleton
return false