/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component cxf
import java lang reflect proxy
import java util arraylist
import java util collection
import java util hashmap
import java util list
import java util map
import java util concurrent atomic atomicboolean
import javax xml namespace qname
import javax xml stream xmlstreamexception
import javax xml stream xmlstreamreader
import javax xml transform source
import javax xml transform dom domsource
import javax xml transform sax saxsource
import javax xml transform stax staxsource
import javax xml transform stream streamsource
import javax xml ws webserviceprovider
import javax xml ws handler handler
import org w3c dom document
import org w3c dom element
import org w3c dom node
import org apache camel camelcontext
import org apache camel camelexception
import org apache camel consumer
import org apache camel processor
import org apache camel producer
import org apache camel runtimecamelexception
import org apache camel service
import org apache camel component cxf common header cxfheaderfilterstrategy
import org apache camel component cxf common message cxfconstants
import org apache camel component cxf feature cxfmessagedataformatfeature
import org apache camel component cxf feature payloaddataformatfeature
import org apache camel component cxf feature rawdataformatfeature
import org apache camel impl defaultendpoint
import org apache camel impl synchronousdelegateproducer
import org apache camel spi headerfilterstrategy
import org apache camel spi headerfilterstrategyaware
import org apache camel util endpointhelper
import org apache camel util objecthelper
import org apache camel util unsafeuricharactersencoder
import org apache cxf bus
import org apache cxf busfactory
import org apache cxf binding bindingconfiguration
import org apache cxf common classloader classloaderutils
import org apache cxf common injection resourceinjector
import org apache cxf common util classhelper
import org apache cxf common util modcountcopyonwritearraylist
import org apache cxf databinding databinding
import org apache cxf databinding source sourcedatabinding
import org apache cxf endpoint client
import org apache cxf endpoint clientimpl
import org apache cxf endpoint endpoint
import org apache cxf feature abstractfeature
import org apache cxf feature loggingfeature
import org apache cxf frontend clientfactorybean
import org apache cxf frontend serverfactorybean
import org apache cxf headers header
import org apache cxf interceptor interceptor
import org apache cxf jaxws jaxwsclientfactorybean
import org apache cxf jaxws jaxwsserverfactorybean
import org apache cxf jaxws context webservicecontextresourceresolver
import org apache cxf jaxws handler annotationhandlerchainbuilder
import org apache cxf jaxws support jaxwsendpointimpl
import org apache cxf jaxws support jaxwsservicefactorybean
import org apache cxf logging faultlistener
import org apache cxf message attachment
import org apache cxf message message
import org apache cxf message messagecontentslist
import org apache cxf resource defaultresourcemanager
import org apache cxf resource resourcemanager
import org apache cxf resource resourceresolver
import org apache cxf service factory reflectionservicefactorybean
import org apache cxf service model bindingoperationinfo
import org apache cxf service model messagepartinfo
import org apache cxf staxutils staxsource
import org apache cxf staxutils staxutils
import org slf4j logger
import org slf4j loggerfactory
/**
* defines the <a href="http://camel.apache.org/cxf.html">cxf endpoint</a>.
* it contains a list of properties for cxf endpoint including {@link dataformat},
* {@link cxfbinding}, and {@link headerfilterstrategy}.  the default dataformat
* mode is {@link dataformat#pojo}.
*/
public class cxfendpoint extends defaultendpoint implements headerfilterstrategyaware  service  cloneable
private static final logger log   loggerfactory getlogger cxfendpoint class
protected bus bus
private string wsdlurl
private class<?> serviceclass
private qname portname
private qname servicename
private string portnamestring
private string servicenamestring
private string defaultoperationname
private string defaultoperationnamespace
// this is for invoking the cxfclient with wrapped parameters of unwrapped parameters
private boolean iswrapped
// this is for marshal or unmarshal message with the document-literal wrapped or unwrapped style
private boolean wrappedstyle
private boolean allowstreaming
private dataformat dataformat   dataformat pojo
private string publishedendpointurl
private boolean inout   true
private cxfbinding cxfbinding
private headerfilterstrategy headerfilterstrategy
private atomicboolean getbushasbeencalled   new atomicboolean false
private boolean issetdefaultbus
private boolean loggingfeatureenabled
private int loggingsizelimit
private string address
private boolean mtomenabled
private boolean skippayloadmessagepartcheck
private boolean skipfaultlogging
private map<string  object> properties
private list<interceptor<? extends message>> in
new modcountcopyonwritearraylist<interceptor<? extends message>>
private list<interceptor<? extends message>> out
new modcountcopyonwritearraylist<interceptor<? extends message>>
private list<interceptor<? extends message>> outfault
new modcountcopyonwritearraylist<interceptor<? extends message>>
private list<interceptor<? extends message>> infault
new modcountcopyonwritearraylist<interceptor<? extends message>>
private list<abstractfeature> features
new modcountcopyonwritearraylist<abstractfeature>
@suppresswarnings
private list<handler> handlers
private list<string> schemalocations
private string transportid
private string bindingid
private bindingconfiguration bindingconfig
private databinding databinding
private reflectionservicefactorybean servicefactorybean
private cxfendpointconfigurer configurer
public cxfendpoint string remaining  cxfcomponent cxfcomponent
super remaining  cxfcomponent
setaddress remaining
@deprecated
public cxfendpoint string remaining  camelcontext context
super remaining  context
setaddress remaining
@deprecated
public cxfendpoint string remaining
super remaining
setaddress remaining
public cxfendpoint
public cxfendpoint copy
try
return  cxfendpoint this clone
catch  clonenotsupportedexception e
throw new runtimecamelexception e
// this method is for cxfcomponent setting the endpointuri
protected void updateendpointuri string endpointuri
super setendpointuri unsafeuricharactersencoder encode endpointuri
public producer createproducer   throws exception
producer answer   new cxfproducer this
if  issynchronous
return new synchronousdelegateproducer answer
else
return answer
public consumer createconsumer processor processor  throws exception
return new cxfconsumer this  processor
public boolean issingleton
return true
/**
* populate server factory bean
*/
protected void setupserverfactorybean serverfactorybean sfb  class<?> cls
// address
sfb setaddress getaddress
sfb setserviceclass cls
sfb setininterceptors in
sfb setoutinterceptors out
sfb setoutfaultinterceptors outfault
sfb setinfaultinterceptors infault
sfb setfeatures features
if  schemalocations    null
sfb setschemalocations schemalocations
if  bindingconfig    null
sfb setbindingconfig bindingconfig
if  databinding    null
sfb setdatabinding databinding
if  servicefactorybean    null
sfb setservicefactory servicefactorybean
if  sfb instanceof jaxwsserverfactorybean    handlers    null
jaxwsserverfactorybean sfb  sethandlers handlers
if  gettransportid      null
sfb settransportid gettransportid
if  getbindingid      null
sfb setbindingid getbindingid
// wsdl url
if  getwsdlurl      null
sfb setwsdlurl getwsdlurl
// service  name qname
if  getservicename      null
sfb setservicename getservicename
// port qname
if  getportname      null
sfb setendpointname getportname
// apply feature here
if   cxfendpointutils hasannotation cls  webserviceprovider class
if  getdataformat      dataformat payload
sfb getfeatures   add new payloaddataformatfeature allowstreaming
else if  getdataformat   dealias      dataformat cxf_message
sfb getfeatures   add new cxfmessagedataformatfeature
sfb setdatabinding new sourcedatabinding
else if  getdataformat   dealias      dataformat raw
rawdataformatfeature feature   new rawdataformatfeature
feature addinintercepters getininterceptors
feature addoutinterceptors getoutinterceptors
sfb getfeatures   add feature
else
log debug    getdataformat
if  isloggingfeatureenabled
if  getloggingsizelimit   > 0
sfb getfeatures   add new loggingfeature getloggingsizelimit
else
sfb getfeatures   add new loggingfeature
if  getdataformat      dataformat payload
sfb setdatabinding new hybridsourcedatabinding
// set the document-literal wrapped style
if  getwrappedstyle      null    getdataformat   dealias      dataformat cxf_message
sfb getservicefactory   setwrapped getwrappedstyle
// any optional properties
if  getproperties      null
if  sfb getproperties      null
// add to existing properties
sfb getproperties   putall getproperties
else
sfb setproperties getproperties
log debug    sfb  getproperties
if  this isskippayloadmessagepartcheck
if  sfb getproperties      null
sfb setproperties new hashmap<string  object>
sfb getproperties   put    boolean true
if  this isskipfaultlogging
if  sfb getproperties      null
sfb setproperties new hashmap<string  object>
sfb getproperties   put faultlistener class getname    new nullfaultlistener
sfb setbus getbus
sfb setstart false
if  getcxfendpointconfigurer      null
getcxfendpointconfigurer   configure sfb
/**
* create a client factory bean object.  notice that the serviceclass <b>must</b> be
* an interface.
*/
protected clientfactorybean createclientfactorybean class<?> cls  throws camelexception
if  cxfendpointutils haswebserviceannotation cls
return new jaxwsclientfactorybean
@override
protected client createclient endpoint ep
return new camelcxfclientimpl getbus    ep
else
return new clientfactorybean
@override
protected client createclient endpoint ep
return new camelcxfclientimpl getbus    ep
/**
* create a client factory bean object without serviceclass interface.
*/
protected clientfactorybean createclientfactorybean
return new clientfactorybean new wsdlservicefactorybean
@override
protected client createclient endpoint ep
return new camelcxfclientimpl getbus    ep
@override
protected void initializeannotationinterceptors endpoint ep  class<?> cls
// do nothing here
protected void setuphandlers clientfactorybean factorybean  client client
if  factorybean instanceof jaxwsclientfactorybean    handlers    null
annotationhandlerchainbuilder builder   new annotationhandlerchainbuilder
jaxwsservicefactorybean sf    jaxwsservicefactorybean factorybean getservicefactory
@suppresswarnings
list<handler> chain   new arraylist<handler> handlers
chain addall builder buildhandlerchainfromclass sf getserviceclass
sf getendpointinfo   getname
sf getserviceqname
factorybean getbindingid
if   chain isempty
resourcemanager resourcemanager   getbus   getextension resourcemanager class
list<resourceresolver> resolvers   resourcemanager getresourceresolvers
resourcemanager   new defaultresourcemanager resolvers
resourcemanager addresourceresolver new webservicecontextresourceresolver
resourceinjector injector   new resourceinjector resourcemanager
for  handler<?> h   chain
if  proxy isproxyclass h getclass       getserviceclass      null
injector inject h  getserviceclass
injector construct h  getserviceclass
else
injector inject h
injector construct h
jaxwsendpointimpl client getendpoint    getjaxwsbinding   sethandlerchain chain
protected void setupclientfactorybean clientfactorybean factorybean  class<?> cls
if  cls    null
factorybean setserviceclass cls
factorybean setininterceptors in
factorybean setoutinterceptors out
factorybean setoutfaultinterceptors outfault
factorybean setinfaultinterceptors infault
factorybean setfeatures features
factorybean settransportid transportid
factorybean setbindingid bindingid
if  bindingconfig    null
factorybean setbindingconfig bindingconfig
if  databinding    null
factorybean setdatabinding databinding
if  servicefactorybean    null
factorybean setservicefactory servicefactorybean
// address
factorybean setaddress getaddress
// wsdl url
if  getwsdlurl      null
factorybean setwsdlurl getwsdlurl
// service name qname
if  getservicename      null
factorybean setservicename getservicename
// port name qname
if  getportname      null
factorybean setendpointname getportname
// apply feature here
if  getdataformat   dealias      dataformat raw
rawdataformatfeature feature   new rawdataformatfeature
feature addinintercepters getininterceptors
feature addoutinterceptors getoutinterceptors
factorybean getfeatures   add feature
else if  getdataformat   dealias      dataformat cxf_message
factorybean getfeatures   add new cxfmessagedataformatfeature
factorybean setdatabinding new sourcedatabinding
else if  getdataformat      dataformat payload
factorybean getfeatures   add new payloaddataformatfeature allowstreaming
factorybean setdatabinding new hybridsourcedatabinding
if  isloggingfeatureenabled
if  getloggingsizelimit   > 0
factorybean getfeatures   add new loggingfeature getloggingsizelimit
else
factorybean getfeatures   add new loggingfeature
// set the document-literal wrapped style
if  getwrappedstyle      null
factorybean getservicefactory   setwrapped getwrappedstyle
// any optional properties
if  getproperties      null
if  factorybean getproperties      null
// add to existing properties
factorybean getproperties   putall getproperties
else
factorybean setproperties getproperties
log debug    factorybean  getproperties
if  this isskippayloadmessagepartcheck
if  factorybean getproperties      null
factorybean setproperties new hashmap<string  object>
factorybean getproperties   put    boolean true
if  this isskipfaultlogging
if  factorybean getproperties      null
factorybean setproperties new hashmap<string  object>
factorybean getproperties   put faultlistener class getname    new nullfaultlistener
factorybean setbus getbus
if  getcxfendpointconfigurer      null
getcxfendpointconfigurer   configure factorybean
// package private methods
// -------------------------------------------------------------------------
/**
* create a cxf client object
*/
client createclient   throws exception
// get service class
if  getdataformat   equals dataformat pojo
objecthelper notnull getserviceclass    cxfconstants service_class
if  getwsdlurl      null    getserviceclass      null
// no wsdl and serviceclass specified, set our default serviceclass
setserviceclass org apache camel component cxf defaultsei class getname
setdefaultoperationnamespace cxfconstants dispatch_namespace
setdefaultoperationname cxfconstants dispatch_default_operation_namespace
if  getdataformat   equals dataformat payload
setskippayloadmessagepartcheck true
class<?> cls   null
if  getserviceclass      null
cls   getserviceclass
// create client factory bean
clientfactorybean factorybean   createclientfactorybean cls
// setup client factory bean
setupclientfactorybean factorybean  cls
client client   factorybean create
// setup the handlers
setuphandlers factorybean  client
return client
else
// create the client without service class
checkname portname
checkname servicename
clientfactorybean factorybean   createclientfactorybean
// setup client factory bean
setupclientfactorybean factorybean  null
return factorybean create
void checkname object value  string name
if  objecthelper isempty value
log warn     name       this getendpointuri
/**
* create a cxf server factory bean
*/
serverfactorybean createserverfactorybean   throws exception
class<?> cls   null
if  getdataformat      dataformat pojo
objecthelper notnull getserviceclass    cxfconstants service_class
if  getwsdlurl      null    getserviceclass      null
// no wsdl and serviceclass specified, set our default serviceclass
if  getdataformat   equals dataformat payload
setserviceclass org apache camel component cxf defaultpayloadprovidersei class getname
if  getserviceclass      null
cls   getserviceclass
// create server factory bean
// shouldn't use cxfendpointutils.getserverfactorybean(cls) as it is for
// cxfsoapcomponent
serverfactorybean answer   null
if  cls    null
checkname portname
checkname servicename
answer   new serverfactorybean new wsdlservicefactorybean
else if  cxfendpointutils haswebserviceannotation cls
answer   new jaxwsserverfactorybean
else
answer   new serverfactorybean
// setup server factory bean
setupserverfactorybean answer  cls
return answer
protected string resolvepropertyplaceholders string str
try
if  getcamelcontext      null
return getcamelcontext   resolvepropertyplaceholders str
else
return str
catch  exception ex
throw objecthelper wrapruntimecamelexception ex
// properties
// -------------------------------------------------------------------------
public dataformat getdataformat
return dataformat
public void setdataformat dataformat format
dataformat   format
public string getpublishedendpointurl
return resolvepropertyplaceholders publishedendpointurl
public void setpublishedendpointurl string url
publishedendpointurl   url
public string getwsdlurl
return resolvepropertyplaceholders wsdlurl
public void setwsdlurl string url
wsdlurl   url
public class<?> getserviceclass
return serviceclass
public void setserviceclass class<?> cls
serviceclass   cls
public void setserviceclass object instance
serviceclass   classhelper getrealclass instance
public void setserviceclass string type  throws classnotfoundexception
serviceclass   classloaderutils loadclass resolvepropertyplaceholders type   getclass
public void setservicenamestring string service
servicenamestring   service
public void setservicename qname service
servicename   service
public qname getservicename
if  servicename    null    servicenamestring    null
servicename   qname valueof resolvepropertyplaceholders servicenamestring
return servicename
public qname getportname
if  portname    null    portnamestring    null
portname   qname valueof resolvepropertyplaceholders portnamestring
return portname
public void setportname qname port
portname   port
public void setendpointnamestring string port
portnamestring   port
public void setendpointname qname port
portname   port
public string getdefaultoperationname
return resolvepropertyplaceholders defaultoperationname
public void setdefaultoperationname string name
defaultoperationname   name
public string getdefaultoperationnamespace
return resolvepropertyplaceholders defaultoperationnamespace
public void setdefaultoperationnamespace string namespace
defaultoperationnamespace   namespace
public boolean isinout
return inout
public void setinout boolean inout
this inout   inout
public boolean iswrapped
return iswrapped
public void setwrapped boolean wrapped
iswrapped   wrapped
public boolean getwrappedstyle
return wrappedstyle
public void setwrappedstyle boolean wrapped
wrappedstyle   wrapped
public void setallowstreaming boolean b
allowstreaming   b
public boolean getallowstreaming
return allowstreaming
public void setcxfbinding cxfbinding cxfbinding
this cxfbinding   cxfbinding
public cxfbinding getcxfbinding
return cxfbinding
public void setheaderfilterstrategy headerfilterstrategy headerfilterstrategy
this headerfilterstrategy   headerfilterstrategy
if  cxfbinding instanceof headerfilterstrategyaware
headerfilterstrategyaware  cxfbinding  setheaderfilterstrategy headerfilterstrategy
public headerfilterstrategy getheaderfilterstrategy
return headerfilterstrategy
public void setbus bus bus
this bus   bus
public bus getbus
if  bus    null
bus   cxfendpointutils createbus getcamelcontext
log debug    bus
if   getbushasbeencalled getandset true     issetdefaultbus
busfactory setdefaultbus bus
log debug    bus
return bus
public void setsetdefaultbus boolean issetdefaultbus
this issetdefaultbus   issetdefaultbus
public boolean issetdefaultbus
return issetdefaultbus
public void setloggingfeatureenabled boolean loggingfeatureenabled
this loggingfeatureenabled   loggingfeatureenabled
public boolean isloggingfeatureenabled
return loggingfeatureenabled
public int getloggingsizelimit
return loggingsizelimit
public void setloggingsizelimit int loggingsizelimit
this loggingsizelimit   loggingsizelimit
protected boolean isskippayloadmessagepartcheck
return skippayloadmessagepartcheck
protected void setskippayloadmessagepartcheck boolean skippayloadmessagepartcheck
this skippayloadmessagepartcheck   skippayloadmessagepartcheck
public map<string  object> getproperties
return properties
public void setcamelcontext camelcontext c
super setcamelcontext c
if  this properties    null
try
endpointhelper setreferenceproperties getcamelcontext
this
this properties
endpointhelper setproperties getcamelcontext
this
this properties
catch  throwable e
// todo: why dont't we rethrown this exception
log warn    e
public void setproperties map<string  object> properties
if  this properties    null
this properties   properties
else
this properties putall properties
if  getcamelcontext      null    this properties    null
try
endpointhelper setreferenceproperties getcamelcontext
this
this properties
endpointhelper setproperties getcamelcontext
this
this properties
catch  throwable e
// todo: why dont't we rethrown this exception
log warn    e
@override
protected void dostart   throws exception
if  headerfilterstrategy    null
headerfilterstrategy   new cxfheaderfilterstrategy
if  cxfbinding    null
cxfbinding   new defaultcxfbinding
if  cxfbinding instanceof headerfilterstrategyaware
headerfilterstrategyaware  cxfbinding  setheaderfilterstrategy getheaderfilterstrategy
@override
protected void dostop   throws exception
// noop
public void setaddress string address
super setendpointuri unsafeuricharactersencoder encode address
this address   address
public string getaddress
return resolvepropertyplaceholders address
public void setmtomenabled boolean mtomenabled
this mtomenabled   mtomenabled
public boolean ismtomenabled
return mtomenabled
/**
* we need to override the {@link clientimpl#setparameters} method
* to insert parameters into cxf message for {@link dataformat#payload} mode.
*/
class camelcxfclientimpl extends clientimpl
public camelcxfclientimpl bus bus  endpoint ep
super bus  ep
public bus getbus
return bus
@suppresswarnings
@override
protected void setparameters object params  message message
object attachments   message get cxfconstants camel_cxf_attachments
if  attachments    null
message setattachments  collection<attachment>  attachments
message remove cxfconstants camel_cxf_attachments
if  dataformat payload    message get dataformat class
cxfpayload<?> payload    cxfpayload<?>  params
list<source> elements   payload getbodysources
bindingoperationinfo boi   message get bindingoperationinfo class
messagecontentslist content   new messagecontentslist
int i   0
for  messagepartinfo partinfo   boi getinput   getmessageparts
if  elements size   > i
if  isskippayloadmessagepartcheck
content put partinfo  elements get i
else
string name   findname elements  i
if  partinfo getconcretename   getlocalpart   equals name
content put partinfo  elements get i
if  elements    null    content size   < elements size
log warn
throw new illegalargumentexception
message setcontent list class  content
message put header header_list  payload getheaders
else
super setparameters params  message
message remove dataformat class
private string findname list<source> sources  int i
source source   sources get i
xmlstreamreader r   null
if  source instanceof domsource
node nd     domsource source  getnode
if  nd instanceof document
nd     document nd  getdocumentelement
return   element nd  getlocalname
else if  source instanceof staxsource
staxsource s    staxsource source
r   s getxmlstreamreader
else if  source instanceof staxsource
staxsource s    staxsource source
r   s getxmlstreamreader
else if  source instanceof streamsource    source instanceof saxsource
//flip to stax so we can get the name
r   staxutils createxmlstreamreader source
staxsource src2   new staxsource r
sources set i  src2
if  r    null
try
if  r geteventtype      xmlstreamreader start_document
r next
if  r geteventtype      xmlstreamreader start_element
r nexttag
catch  xmlstreamexception e
//ignore
return r getlocalname
return null
public list<interceptor<? extends message>> getoutfaultinterceptors
return outfault
public list<interceptor<? extends message>> getinfaultinterceptors
return infault
public list<interceptor<? extends message>> getininterceptors
return in
public list<interceptor<? extends message>> getoutinterceptors
return out
public void setininterceptors list<interceptor<? extends message>> interceptors
in   interceptors
public void setinfaultinterceptors list<interceptor<? extends message>> interceptors
infault   interceptors
public void setoutinterceptors list<interceptor<? extends message>> interceptors
out   interceptors
public void setoutfaultinterceptors list<interceptor<? extends message>> interceptors
outfault   interceptors
public void setfeatures list<abstractfeature> f
features   f
public list<abstractfeature> getfeatures
return features
public void sethandlers @suppresswarnings    list<handler> h
handlers   h
@suppresswarnings
public list<handler> gethandlers
return handlers
public void setschemalocations list<string> sc
schemalocations   sc
public list<string> getschemalocations
return schemalocations
public string gettransportid
return resolvepropertyplaceholders transportid
public void settransportid string transportid
this transportid   transportid
public string getbindingid
return resolvepropertyplaceholders bindingid
public void setbindingid string bindingid
this bindingid   bindingid
public bindingconfiguration getbindingconfig
return bindingconfig
public boolean isskipfaultlogging
return skipfaultlogging
public void setskipfaultlogging boolean skipfaultlogging
this skipfaultlogging   skipfaultlogging
public void setbindingconfig bindingconfiguration bindingconfig
this bindingconfig   bindingconfig
public databinding getdatabinding
return databinding
public void setdatabinding databinding databinding
this databinding   databinding
public reflectionservicefactorybean getservicefactorybean
return servicefactorybean
public void setservicefactorybean reflectionservicefactorybean servicefactorybean
this servicefactorybean   servicefactorybean
public cxfendpointconfigurer getcxfendpointconfigurer
return configurer
public void setcxfendpointconfigurer cxfendpointconfigurer configurer
this configurer   configurer