/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component mina
import java net socketaddress
import java util arraylist
import java util list
import java util concurrent executorservice
import org apache camel consumer
import org apache camel exchange
import org apache camel multipleconsumerssupport
import org apache camel processor
import org apache camel producer
import org apache camel impl defaultendpoint
import org apache camel util objecthelper
import org apache mina common ioacceptor
import org apache mina common ioacceptorconfig
import org apache mina common ioconnector
import org apache mina common ioconnectorconfig
import org apache mina common iosession
/**
* endpoint for camel mina.
*
* @version
*/
public class minaendpoint extends defaultendpoint implements multipleconsumerssupport
/** the key of the iosession which is stored in the message header*/
@deprecated
public static final transient string header_mina_iosession
/** the socket address of local machine that received the message. */
@deprecated
public static final transient string header_local_address
/** the socket address of the remote machine that send the message. */
@deprecated
public static final transient string header_remote_address
private socketaddress address
private ioacceptor acceptor
private ioconnector connector
private ioacceptorconfig acceptorconfig
private ioconnectorconfig connectorconfig
private minaconfiguration configuration
private final list<executorservice> executors   new arraylist<executorservice>
public minaendpoint
public minaendpoint string endpointuri  minacomponent component
super endpointuri  component
public producer createproducer   throws exception
objecthelper notnull configuration
objecthelper notnull address
objecthelper notnull connector
// wm protocol does not have config
if   configuration getprotocol   equalsignorecase
objecthelper notnull connectorconfig
return new minaproducer this
public consumer createconsumer processor processor  throws exception
objecthelper notnull configuration
objecthelper notnull address
objecthelper notnull acceptor
// wm protocol does not have config
if   configuration getprotocol   equalsignorecase
objecthelper notnull acceptorconfig
return new minaconsumer this  processor
public exchange createexchange iosession session  object payload
exchange exchange   createexchange
exchange getin   setheader minaconstants mina_iosession  session
exchange getin   setheader minaconstants mina_local_address  session getlocaladdress
exchange getin   setheader minaconstants mina_remote_address  session getremoteaddress
minapayloadhelper setin exchange  payload
return exchange
public boolean issingleton
return true
public boolean ismultipleconsumerssupported
// only datagram should allow multiple consumers
return configuration isdatagramprotocol
@override
protected void doshutdown   throws exception
// shutdown thread pools
for  executorservice executor   executors
getcamelcontext   getexecutorservicemanager   shutdownnow executor
executors clear
super doshutdown
/**
* add thread pool which are in-use, we need to un-register when shutting down.
*/
protected void addthreadpool executorservice executorservice
executors add executorservice
// properties
// -------------------------------------------------------------------------
public minaconfiguration getconfiguration
return configuration
public void setconfiguration minaconfiguration configuration
this configuration   configuration
public socketaddress getaddress
return address
public void setaddress socketaddress address
this address   address
public ioacceptor getacceptor
return acceptor
public void setacceptor ioacceptor acceptor
this acceptor   acceptor
public ioconnector getconnector
return connector
public void setconnector ioconnector connector
this connector   connector
public ioacceptorconfig getacceptorconfig
return acceptorconfig
public void setacceptorconfig ioacceptorconfig acceptorconfig
this acceptorconfig   acceptorconfig
public ioconnectorconfig getconnectorconfig
return connectorconfig
public void setconnectorconfig ioconnectorconfig connectorconfig
this connectorconfig   connectorconfig