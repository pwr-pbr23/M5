/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component ahc
import java net uri
import java util map
import com ning http client asynchttpclient
import com ning http client asynchttpclientconfig
import com ning http client realm
import org apache camel endpoint
import org apache camel impl headerfilterstrategycomponent
import org apache camel util introspectionsupport
import org apache camel util urisupport
import org apache camel util unsafeuricharactersencoder
import org apache camel util jsse sslcontextparameters
import org slf4j logger
import org slf4j loggerfactory
/**
*  defines the <a href="http://camel.apache.org/ahc.html">async http client component</a>
*/
public class ahccomponent extends headerfilterstrategycomponent
private static final transient logger log   loggerfactory getlogger ahccomponent class
private static final string client_config_prefix
private static final string client_realm_config_prefix
private asynchttpclient client
private asynchttpclientconfig clientconfig
private ahcbinding binding
private sslcontextparameters sslcontextparameters
@override
protected endpoint createendpoint string uri  string remaining  map<string  object> parameters  throws exception
string addressuri   remaining
// do not set the http uri because we still have all of the camel internal
// parameters in the uri at this point.
ahcendpoint endpoint   new ahcendpoint uri  this  null
setendpointheaderfilterstrategy endpoint
endpoint setclient getclient
endpoint setclientconfig getclientconfig
endpoint setbinding getbinding
endpoint setsslcontextparameters getsslcontextparameters
setproperties endpoint  parameters
if  introspectionsupport hasproperties parameters  client_config_prefix
asynchttpclientconfig builder builder   endpoint getclientconfig      null
? new asynchttpclientconfig builder     ahccomponent cloneconfig endpoint getclientconfig
if  endpoint getclient      null
log warn
else if  endpoint getclientconfig      null
log warn
// special for realm builder
realm realmbuilder realmbuilder   null
if  introspectionsupport hasproperties parameters  client_realm_config_prefix
realmbuilder   new realm realmbuilder
// set and validate additional parameters on client config
map<string  object> realmparams   introspectionsupport extractproperties parameters  client_realm_config_prefix
setproperties realmbuilder  realmparams
validateparameters uri  realmparams  null
// set and validate additional parameters on client config
map<string  object> clientparams   introspectionsupport extractproperties parameters  client_config_prefix
setproperties builder  clientparams
validateparameters uri  clientparams  null
if  realmbuilder    null
builder setrealm realmbuilder build
endpoint setclientconfig builder build
// restructure uri to be based on the parameters left as we dont want to include the camel internal options
addressuri   unsafeuricharactersencoder encode addressuri
uri httpuri   urisupport createremaininguri new uri addressuri   parameters
endpoint sethttpuri httpuri
return endpoint
public asynchttpclient getclient
return client
public void setclient asynchttpclient client
this client   client
public ahcbinding getbinding
if  binding    null
binding   new defaultahcbinding
return binding
public void setbinding ahcbinding binding
this binding   binding
public asynchttpclientconfig getclientconfig
return clientconfig
public void setclientconfig asynchttpclientconfig clientconfig
this clientconfig   clientconfig
public sslcontextparameters getsslcontextparameters
return sslcontextparameters
public void setsslcontextparameters sslcontextparameters sslcontextparameters
this sslcontextparameters   sslcontextparameters
/**
* creates a new client configuration builder using {@code clientconfig} as a template for
* the builder.
*
* @param clientconfig the instance to serve as a template for the builder
*
* @return a builder configured with the same options as the supplied config
*/
static asynchttpclientconfig builder cloneconfig asynchttpclientconfig clientconfig
asynchttpclientconfig builder builder   new asynchttpclientconfig builder clientconfig
return builder