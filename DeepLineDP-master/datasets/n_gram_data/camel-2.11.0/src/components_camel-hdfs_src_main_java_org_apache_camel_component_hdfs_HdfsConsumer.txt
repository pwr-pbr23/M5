/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component hdfs
import java io ioexception
import java util concurrent locks readwritelock
import java util concurrent locks reentrantreadwritelock
import javax security auth login configuration
import org apache camel exchange
import org apache camel message
import org apache camel processor
import org apache camel impl defaultmessage
import org apache camel impl scheduledpollconsumer
import org apache camel util iohelper
import org apache commons lang stringutils
import org apache hadoop fs filestatus
import org apache hadoop fs path
import org apache hadoop fs pathfilter
public final class hdfsconsumer extends scheduledpollconsumer
private final hdfsconfiguration config
private final stringbuilder hdfspath
private final processor processor
private final readwritelock rwlock   new reentrantreadwritelock
private volatile hdfsinputstream istream
public hdfsconsumer hdfsendpoint endpoint  processor processor  hdfsconfiguration config
super endpoint  processor
this config   config
this hdfspath   config getfilesystemtype   gethdfspath config
this processor   processor
setinitialdelay config getinitialdelay
setdelay config getdelay
setusefixeddelay true
@override
public hdfsendpoint getendpoint
return  hdfsendpoint  super getendpoint
@override
protected void dostart   throws exception
super dostart
if  config isconnectonstartup
// setup hdfs if configured to do on startup
setuphdfs true
private hdfsinfo setuphdfs boolean onstartup  throws exception
// if we are starting up then log at info level, and if runtime then log at debug level to not flood the log
if  onstartup
log info    new object config gethostname    config getport    hdfspath tostring
else
if  log isdebugenabled
log debug    new object config gethostname    config getport    hdfspath tostring
// hadoop will cache the connection by default so its faster to get in the poll method
hdfsinfo answer   hdfsinfofactory newhdfsinfo this hdfspath tostring
if  onstartup
log info    new object config gethostname    config getport    hdfspath tostring
else
if  log isdebugenabled
log debug    new object config gethostname    config getport    hdfspath tostring
return answer
@override
protected int poll   throws exception
// need to remember auth as hadoop will override that, which otherwise means the auth is broken afterwards
configuration auth   configuration getconfiguration
log trace    auth
try
return dopoll
finally
if  auth    null
log trace    auth
configuration setconfiguration auth
protected int dopoll   throws exception
class excludepathfilter implements pathfilter
public boolean accept path path
return   path tostring   endswith config getopenedsuffix       path tostring   endswith config getreadsuffix
int nummessages   0
hdfsinfo info   setuphdfs false
filestatus filestatuses
if  info getfilesystem   isfile info getpath
filestatuses   info getfilesystem   globstatus info getpath
else
path pattern   info getpath   suffix     this config getpattern
filestatuses   info getfilesystem   globstatus pattern  new excludepathfilter
for  int i   0  i < filestatuses length    i
filestatus status   filestatuses
if  normalfileisdirectorynosuccessfile status  info
continue
try
this rwlock writelock   lock
this istream   hdfsinputstream createinputstream filestatuses getpath   tostring    this config
finally
this rwlock writelock   unlock
try
holder<object> key   new holder<object>
holder<object> value   new holder<object>
while  this istream next key  value     0
exchange exchange   this getendpoint   createexchange
message message   new defaultmessage
string filename   stringutils substringafterlast status getpath   tostring
message setheader exchange file_name  filename
if  key value    null
message setheader hdfsheader key name    key value
message setbody value value
exchange setin message
log debug    filename
try
processor process exchange
catch  exception e
exchange setexception e
// in case of unhandled exceptions then let the exception handler handle them
if  exchange getexception      null
getexceptionhandler   handleexception exchange getexception
nummessages
finally
iohelper close istream     log
return nummessages
private boolean normalfileisdirectorynosuccessfile filestatus status  hdfsinfo info  throws ioexception
if  config getfiletype   equals hdfsfiletype normal_file     status isdir
path successpath   new path status getpath   tostring
if   info getfilesystem   exists successpath
return true
return false