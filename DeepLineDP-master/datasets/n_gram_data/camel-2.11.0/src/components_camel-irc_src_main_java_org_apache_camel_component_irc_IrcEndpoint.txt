/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component irc
import org apache camel exchange
import org apache camel exchangepattern
import org apache camel processor
import org apache camel impl defaultendpoint
import org apache camel impl defaultexchange
import org apache camel util objecthelper
import org apache camel util unsafeuricharactersencoder
import org schwering irc lib ircconnection
import org schwering irc lib irceventadapter
import org schwering irc lib ircmodeparser
import org schwering irc lib ircuser
import org slf4j logger
import org slf4j loggerfactory
/**
* defines the <a href="http://camel.apache.org/irc.html">irc endpoint</a>
*
* @version
*/
public class ircendpoint extends defaultendpoint
private static final transient logger log   loggerfactory getlogger ircendpoint class
private ircbinding binding
private ircconfiguration configuration
private irccomponent component
public ircendpoint string endpointuri  irccomponent component  ircconfiguration configuration
super unsafeuricharactersencoder encode endpointuri   component
this component   component
this configuration   configuration
public boolean issingleton
return true
public exchange createexchange exchangepattern pattern
defaultexchange exchange   new defaultexchange this  pattern
exchange setproperty exchange binding  getbinding
return exchange
public exchange createonprivmsgexchange string target  ircuser user  string msg
defaultexchange exchange   getexchange
exchange setin new ircmessage    target  user  msg
return exchange
public exchange createonnickexchange ircuser user  string newnick
defaultexchange exchange   getexchange
exchange setin new ircmessage    user  newnick
return exchange
public exchange createonquitexchange ircuser user  string msg
defaultexchange exchange   getexchange
exchange setin new ircmessage    user  msg
return exchange
public exchange createonjoinexchange string channel  ircuser user
defaultexchange exchange   getexchange
exchange setin new ircmessage    channel  user
return exchange
public exchange createonkickexchange string channel  ircuser user  string whowaskickednick  string msg
defaultexchange exchange   getexchange
exchange setin new ircmessage    channel  user  whowaskickednick  msg
return exchange
public exchange createonmodeexchange string channel  ircuser user  ircmodeparser modeparser
defaultexchange exchange   getexchange
exchange setin new ircmessage    channel  user  modeparser getline
return exchange
public exchange createonpartexchange string channel  ircuser user  string msg
defaultexchange exchange   getexchange
exchange setin new ircmessage    channel  user  msg
return exchange
public exchange createonreplyexchange int num  string value  string msg
defaultexchange exchange   getexchange
exchange setin new ircmessage    num  value  msg
return exchange
public exchange createontopicexchange string channel  ircuser user  string topic
defaultexchange exchange   getexchange
exchange setin new ircmessage    channel  user  topic
return exchange
public ircproducer createproducer   throws exception
return new ircproducer this  component getircconnection configuration
public ircconsumer createconsumer processor processor  throws exception
return new ircconsumer this  processor  component getircconnection configuration
public irccomponent getcomponent
return component
public void setcomponent irccomponent component
this component   component
public ircbinding getbinding
if  binding    null
binding   new ircbinding
return binding
public void setbinding ircbinding binding
this binding   binding
public ircconfiguration getconfiguration
return configuration
public void setconfiguration ircconfiguration configuration
this configuration   configuration
public void handleircerror int num  string msg
if  irceventadapter err_nicknameinuse    num
handlenickinuse
private void handlenickinuse
ircconnection connection   component getircconnection configuration
string nick   connection getnick
// hackish but working approach to prevent an endless loop. abort after 4 nick attempts.
if  nick endswith
log error     nick
else
log warn     nick       nick
connection donick nick
// if the nick failure was doing startup channels weren't joined. so join
// the channels now. it's a no-op if the channels are already joined.
joinchannels
private defaultexchange getexchange
defaultexchange exchange   new defaultexchange this  getexchangepattern
exchange setproperty exchange binding  getbinding
return exchange
public void joinchannels
for  ircchannel channel   configuration getchannels
joinchannel channel
public void joinchannel string name
joinchannel configuration findchannel name
public void joinchannel ircchannel channel
if  channel    null
return
ircconnection connection   component getircconnection configuration
string chn   channel getname
string key   channel getkey
if  objecthelper isnotempty key
if  log isdebugenabled
log debug    channel  connection getclass   getname
connection dojoin chn  key
else
if  log isdebugenabled
log debug    channel  connection getclass   getname
connection dojoin chn