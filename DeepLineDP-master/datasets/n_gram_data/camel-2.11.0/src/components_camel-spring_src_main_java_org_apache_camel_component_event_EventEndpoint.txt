/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component event
import org apache camel exchange
import org apache camel processor
import org apache camel producer
import org apache camel impl defaultendpoint
import org apache camel impl defaultproducer
import org apache camel processor loadbalancer loadbalancer
import org apache camel processor loadbalancer topicloadbalancer
import org apache camel util objecthelper
import org springframework beans beansexception
import org springframework context applicationcontext
import org springframework context applicationcontextaware
import org springframework context applicationevent
import static org apache camel util objecthelper wrapruntimecamelexception
/**
* an <a href="http://camel.apache.org/event.html">event endpoint</a>
* for working with spring applicationevents
*
* @version
*/
public class eventendpoint extends defaultendpoint implements applicationcontextaware
private loadbalancer loadbalancer
private applicationcontext applicationcontext
public eventendpoint string endpointuri  eventcomponent component
super endpointuri  component
this applicationcontext   component getapplicationcontext
/**
* <b>note:</b> it is preferred to create endpoints using the associated
* component.
* @param endpointuri
*/
@deprecated
public eventendpoint string endpointuri
super endpointuri
public void setapplicationcontext applicationcontext applicationcontext  throws beansexception
this applicationcontext   applicationcontext
public applicationcontext getapplicationcontext
return applicationcontext
public boolean issingleton
return true
public producer createproducer   throws exception
objecthelper notnull applicationcontext
return new defaultproducer this
public void process exchange exchange  throws exception
applicationevent event   toapplicationevent exchange
applicationcontext publishevent event
public eventconsumer createconsumer processor processor  throws exception
objecthelper notnull applicationcontext
return new eventconsumer this  processor
public void onapplicationevent applicationevent event
exchange exchange   createexchange
exchange getin   setbody event
try
getloadbalancer   process exchange
catch  exception e
throw wrapruntimecamelexception e
public loadbalancer getloadbalancer
if  loadbalancer    null
loadbalancer   createloadbalancer
return loadbalancer
public void setloadbalancer loadbalancer loadbalancer
this loadbalancer   loadbalancer
// implementation methods
// -------------------------------------------------------------------------
public synchronized void consumerstarted eventconsumer consumer
getloadbalancer   addprocessor consumer getprocessor
public synchronized void consumerstopped eventconsumer consumer
getloadbalancer   removeprocessor consumer getprocessor
protected loadbalancer createloadbalancer
return new topicloadbalancer
protected applicationevent toapplicationevent exchange exchange
applicationevent event   exchange getin   getbody applicationevent class
if  event    null
return event
return new camelevent this  exchange