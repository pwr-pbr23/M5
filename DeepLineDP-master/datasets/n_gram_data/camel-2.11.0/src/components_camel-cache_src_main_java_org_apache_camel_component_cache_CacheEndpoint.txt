/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component cache
import net sf ehcache cache
import net sf ehcache cachemanager
import net sf ehcache ehcache
import net sf ehcache event cacheeventlistener
import org apache camel component
import org apache camel consumer
import org apache camel exchange
import org apache camel message
import org apache camel processor
import org apache camel producer
import org apache camel impl defaultendpoint
import org apache camel impl defaultexchange
import org apache camel impl defaultmessage
import org apache camel util objecthelper
import org slf4j logger
import org slf4j loggerfactory
public class cacheendpoint extends defaultendpoint
private static final transient logger log   loggerfactory getlogger cacheendpoint class
private cacheconfiguration config
private cachemanagerfactory cachemanagerfactory
private string operation
private string key
public cacheendpoint
public cacheendpoint string endpointuri  component component
cacheconfiguration config  cachemanagerfactory cachemanagerfactory
super endpointuri  component
this config   config
this cachemanagerfactory   cachemanagerfactory
public consumer createconsumer processor processor  throws exception
objecthelper notnull config
objecthelper notnull cachemanagerfactory
return new cacheconsumer this  processor  config
public producer createproducer   throws exception
objecthelper notnull config
objecthelper notnull cachemanagerfactory
return new cacheproducer this  config
public boolean issingleton
return true
public cacheconfiguration getconfig
return config
public void setconfig cacheconfiguration config
this config   config
public cachemanagerfactory getcachemanagerfactory
return cachemanagerfactory
public void setcachemanagerfactory cachemanagerfactory cachemanagerfactory
this cachemanagerfactory   cachemanagerfactory
public exchange createcacheexchange string operation  string key
object value
exchange exchange   new defaultexchange this getcamelcontext
getexchangepattern
message message   new defaultmessage
message setheader cacheconstants cache_operation  operation
message setheader cacheconstants cache_key  key
message setbody value
exchange setin message
return exchange
/**
* returns {@link cache} instance or create new one if not exists.
*
* @return {@link cache}
*/
public ehcache initializecache
cachemanager cachemanager   getcachemanagerfactory   getinstance
ehcache cache
if  cachemanager cacheexists config getcachename
if  log istraceenabled
log trace    config getcachename
log trace
config getcachename
cachemanager getehcache config getcachename    getsize
cache   cachemanager getehcache config getcachename
else
cache   new cache config getcachename
config getmaxelementsinmemory
config getmemorystoreevictionpolicy
config isoverflowtodisk
config getdiskstorepath
config iseternal
config gettimetoliveseconds
config gettimetoidleseconds
config isdiskpersistent
config getdiskexpirythreadintervalseconds

for  cacheeventlistener listener   config geteventlistenerregistry   geteventlisteners
cache getcacheeventnotificationservice   registerlistener listener
for  cacheloaderwrapper loader   config getcacheloaderregistry   getcacheloaders
loader init cache
cache registercacheloader loader
cachemanager addcache cache
if  log isdebugenabled
log debug     cache getname
return cache
@override
public void stop
cachemanager cachemanager   getcachemanagerfactory   getinstance
cachemanager removecache config getcachename
public string getoperation
return operation
public void setoperation string operation
this operation   operation
public string getkey
return key
public void setkey string key
this key   key