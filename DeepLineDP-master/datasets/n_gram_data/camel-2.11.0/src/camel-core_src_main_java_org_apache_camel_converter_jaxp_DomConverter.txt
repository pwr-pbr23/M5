/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel converter jaxp
import java io bytearrayinputstream
import java io inputstream
import java util arraylist
import java util iterator
import java util list
import javax xml transform transformerexception
import org w3c dom attr
import org w3c dom element
import org w3c dom node
import org w3c dom nodelist
import org w3c dom text
import org apache camel converter
import org apache camel exchange
import org apache camel util objecthelper
/**
* converts from some dom types to java types
*
* @version
*/
@converter
public final class domconverter
private final xmlconverter xml
public domconverter
xml   new xmlconverter
@converter
public string tostring nodelist nodelist  exchange exchange  throws transformerexception
// converting nodelist to string is more tricky
// sometimes the nodelist is a node which we can then leverage
// the xml converter to turn into xml incl. tags
stringbuilder buffer   new stringbuilder
// use xml converter at first since it preserves tag names
boolean found   false
if  nodelist instanceof node
node node    node  nodelist
string s   xml tostring node  exchange
if  objecthelper isnotempty s
found   true
buffer append s
else
// use xml converter at first since it preserves tag names
int size   nodelist getlength
for  int i   0  i < size  i
node node   nodelist item i
string s   xml tostring node  exchange
if  objecthelper isnotempty s
found   true
buffer append s
// and eventually we must fallback to append without tags, such as when you have
// used an xpath to select an attribute or text() or something
if   found
append buffer  nodelist
return buffer tostring
@converter
public static integer tointeger nodelist nodelist
stringbuilder buffer   new stringbuilder
append buffer  nodelist
string s   buffer tostring
return integer valueof s
@converter
public static long tolong nodelist nodelist
stringbuilder buffer   new stringbuilder
append buffer  nodelist
string s   buffer tostring
return long valueof s
@converter
public static list<?> tolist nodelist nodelist
list<object> answer   new arraylist<object>
iterator<object> it   objecthelper createiterator nodelist
while  it hasnext
answer add it next
return answer
@converter
public inputstream toinputstream nodelist nodelist  exchange exchange  throws transformerexception
return new bytearrayinputstream tobytearray nodelist  exchange
@converter
public byte tobytearray nodelist nodelist  exchange exchange  throws transformerexception
string data   tostring nodelist  exchange
return data getbytes
private static void append stringbuilder buffer  nodelist nodelist
int size   nodelist getlength
for  int i   0  i < size  i
append buffer  nodelist item i
private static void append stringbuilder buffer  node node
if  node instanceof text
text text    text  node
buffer append text gettextcontent
else if  node instanceof attr
attr attribute    attr  node
buffer append attribute gettextcontent
else if  node instanceof element
element element    element  node
append buffer  element getchildnodes