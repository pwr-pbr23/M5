/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel util
import java util arraylist
import java util list
/**
* utility class for parsing quoted string which is intended for parameters, separated by comma.
*/
public final class stringquotehelper
private stringquotehelper
/**
* splits the input safely honoring if values is enclosed in quotes.
* <p/>
* though this method does not support double quoting values. a quoted value
* must start with the same start and ending quote, which is either a single
* quote or double quote value.
* <p/>
* will <i>trim</i> each splitted value by default.
*
* @param input    the input
* @param separator the separator char to split the input, for example a comma.
* @return the input splitted, or <tt>null</tt> if the input is null.
*/
public static string splitsafequote string input  char separator
return splitsafequote input  separator  true
/**
* splits the input safely honoring if values is enclosed in quotes.
* <p/>
* though this method does not support double quoting values. a quoted value
* must start with the same start and ending quote, which is either a single
* quote or double quote value.
* \
* @param input    the input
* @param separator the separator char to split the input, for example a comma.
* @param trim      whether to trim each splitted value
* @return the input splitted, or <tt>null</tt> if the input is null.
*/
public static string splitsafequote string input  char separator  boolean trim
if  input    null
return null
if  input indexof separator      1
// no separator in data, so return single string with input as is
return new string trim ? input trim     input
list<string> answer   new arraylist<string>
stringbuilder sb   new stringbuilder
boolean singlequoted   false
boolean doublequoted   false
boolean skipleadingwhitespace   true
for  int i   0  i < input length    i
char ch   input charat i
char prev   i > 0 ? input charat i   1    0
if  ch
if  singlequoted    prev    ch    sb length      0
// its an empty quote so add empty text
answer add
singlequoted    singlequoted
continue
else if  ch
if  doublequoted    prev    ch    sb length      0
// its an empty quote so add empty text
answer add
doublequoted    doublequoted
continue
else if  ch
if   singlequoted     doublequoted    skipleadingwhitespace
continue
else if  ch    separator
// add as answer if we are not in a quote
if   singlequoted     doublequoted    sb length   > 0
string text   sb tostring
if  trim
text   text trim
answer add text
sb setlength 0
continue
sb append ch
// any leftover
if  sb length   > 0
string text   sb tostring
if  trim
text   text trim
answer add text
return answer toarray new string