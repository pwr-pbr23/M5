/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache camel component file strategy
import org apache camel exchange
import org apache camel component file genericfile
import org apache camel component file genericfileendpoint
import org apache camel component file genericfileoperationfailedexception
import org apache camel component file genericfileoperations
public class genericfiledeleteprocessstrategy<t> extends genericfileprocessstrategysupport<t>
private genericfilerenamer<t> failurerenamer
private genericfilerenamer<t> beginrenamer
@override
public boolean begin genericfileoperations<t> operations  genericfileendpoint<t> endpoint  exchange exchange  genericfile<t> file  throws exception
// must invoke super
boolean result   super begin operations  endpoint  exchange  file
if   result
return false
// okay we got the file then execute the begin renamer
if  beginrenamer    null
genericfile<t> newname   beginrenamer renamefile exchange  file
genericfile<t> to   renamefile operations  file  newname
if  to    null
to bindtoexchange exchange
return true
@override
public void commit genericfileoperations<t> operations  genericfileendpoint<t> endpoint  exchange exchange  genericfile<t> file  throws exception
// must invoke super
super commit operations  endpoint  exchange  file
int retries   3
boolean deleted   false
while  retries > 0     deleted
retries
if  operations deletefile file getabsolutefilepath
// file is deleted
deleted   true
break
// some os can report false when deleting but the file is still deleted
// use exists to check instead
boolean exits   operations existsfile file getabsolutefilepath
if   exits
deleted   true
else
log trace    file
// sleep a bit and try again
thread sleep 1000
if   deleted
throw new genericfileoperationfailedexception     file
@override
public void rollback genericfileoperations<t> operations  genericfileendpoint<t> endpoint  exchange exchange  genericfile<t> file  throws exception
// must invoke super
super rollback operations  endpoint  exchange  file
// moved the failed file if specifying the movefailed option
if  failurerenamer    null
// create a copy and bind the file to the exchange to be used by the renamer to evaluate the file name
exchange copy   exchange copy
file bindtoexchange copy
// must preserve message id
copy getin   setmessageid exchange getin   getmessageid
copy setexchangeid exchange getexchangeid
genericfile<t> newname   failurerenamer renamefile copy  file
renamefile operations  file  newname
public genericfilerenamer<t> getfailurerenamer
return failurerenamer
public void setfailurerenamer genericfilerenamer<t> failurerenamer
this failurerenamer   failurerenamer
public genericfilerenamer<t> getbeginrenamer
return beginrenamer
public void setbeginrenamer genericfilerenamer<t> beginrenamer
this beginrenamer   beginrenamer