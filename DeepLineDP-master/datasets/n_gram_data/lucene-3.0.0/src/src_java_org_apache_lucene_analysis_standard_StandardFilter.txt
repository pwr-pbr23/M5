package org apache lucene analysis standard
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene analysis tokenfilter
import org apache lucene analysis tokenstream
import org apache lucene analysis tokenattributes termattribute
import org apache lucene analysis tokenattributes typeattribute
/** normalizes tokens extracted with {@link standardtokenizer}. */
public final class standardfilter extends tokenfilter
/** construct filtering <i>in</i>. */
public standardfilter tokenstream in
super in
termatt   addattribute termattribute class
typeatt   addattribute typeattribute class
private static final string apostrophe_type   standardtokenizerimpl token_types
private static final string acronym_type   standardtokenizerimpl token_types
// this filters uses attribute type
private typeattribute typeatt
private termattribute termatt
/** returns the next token in the stream, or null at eos.
* <p>removes <tt>'s</tt> from the end of words.
* <p>removes dots from acronyms.
*/
@override
public final boolean incrementtoken   throws java io ioexception
if   input incrementtoken
return false
char buffer   termatt termbuffer
final int bufferlength   termatt termlength
final string type   typeatt type
if  type    apostrophe_type            remove 's
bufferlength >  2
buffer
buffer         buffer
// strip last 2 characters off
termatt settermlength bufferlength   2
else if  type    acronym_type            remove dots
int upto   0
for int i 0 i<bufferlength i
char c   buffer
if  c
buffer   c
termatt settermlength upto
return true