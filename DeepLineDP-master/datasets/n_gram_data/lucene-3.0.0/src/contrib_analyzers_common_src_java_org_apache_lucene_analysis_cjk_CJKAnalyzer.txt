package org apache lucene analysis cjk
/**
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import org apache lucene analysis analyzer
import org apache lucene analysis chararrayset
import org apache lucene analysis stopfilter
import org apache lucene analysis tokenstream
import org apache lucene analysis tokenizer
import org apache lucene util version
import java io ioexception
import java io reader
import java util arrays
import java util set
/**
* an {@link analyzer} that tokenizes text with {@link cjktokenizer} and
* filters with {@link stopfilter}
*
*/
public class cjkanalyzer extends analyzer
//~ static fields/initializers ---------------------------------------------
/**
* an array containing some common english words that are not usually
* useful for searching and some double-byte interpunctions.
* @deprecated use {@link #getdefaultstopset()} instead
*/
// todo make this final in 3.1 -
// this might be revised and merged with stopfilter stop words too
public final static string stop_words
//~ instance fields --------------------------------------------------------
/**
* returns an unmodifiable instance of the default stop-words set.
* @return an unmodifiable instance of the default stop-words set.
*/
public static set<?> getdefaultstopset
return defaultsetholder default_stop_set
private static class defaultsetholder
static final set<?> default_stop_set   chararrayset
unmodifiableset new chararrayset arrays aslist stop_words
false
/**
* stop word list
*/
private final set<?> stoptable
private final version matchversion
//~ constructors -----------------------------------------------------------
/**
* builds an analyzer which removes words in {@link #stop_words}.
*/
public cjkanalyzer version matchversion
this matchversion  defaultsetholder default_stop_set
/**
* builds an analyzer with the given stop words
*
* @param matchversion
*          lucene compatibility version
* @param stopwords
*          a stopword set
*/
public cjkanalyzer version matchversion  set<?> stopwords
stoptable   chararrayset unmodifiableset chararrayset copy stopwords
this matchversion   matchversion
/**
* builds an analyzer which removes words in the provided array.
*
* @param stopwords stop word array
* @deprecated use {@link #cjkanalyzer(version, set)} instead
*/
public cjkanalyzer version matchversion  string    stopwords
stoptable   stopfilter makestopset stopwords
this matchversion   matchversion
//~ methods ----------------------------------------------------------------
/**
* creates a {@link tokenstream} which tokenizes all the text in the provided {@link reader}.
*
* @param fieldname lucene field name
* @param reader    input {@link reader}
* @return a {@link tokenstream} built from {@link cjktokenizer}, filtered with
*    {@link stopfilter}
*/
@override
public final tokenstream tokenstream string fieldname  reader reader
return new stopfilter stopfilter getenablepositionincrementsversiondefault matchversion
new cjktokenizer reader   stoptable
private class savedstreams
tokenizer source
tokenstream result
/**
* returns a (possibly reused) {@link tokenstream} which tokenizes all the text
* in the provided {@link reader}.
*
* @param fieldname lucene field name
* @param reader    input {@link reader}
* @return a {@link tokenstream} built from {@link cjktokenizer}, filtered with
*    {@link stopfilter}
*/
@override
public final tokenstream reusabletokenstream string fieldname  reader reader  throws ioexception
/* tokenstream() is final, no back compat issue */
savedstreams streams    savedstreams  getprevioustokenstream
if  streams    null
streams   new savedstreams
streams source   new cjktokenizer reader
streams result   new stopfilter stopfilter getenablepositionincrementsversiondefault matchversion
streams source  stoptable
setprevioustokenstream streams
else
streams source reset reader
return streams result