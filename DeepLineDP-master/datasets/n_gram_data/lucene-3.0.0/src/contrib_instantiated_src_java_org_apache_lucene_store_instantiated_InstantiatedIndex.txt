package org apache lucene store instantiated
/**
* copyright 2006 the apache software foundation
*
* licensed under the apache license, version 2.0 (the "license");
* you may not use this file except in compliance with the license.
* you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
import java io ioexception
import java io serializable
import java io closeable
import java util arraylist
import java util collection
import java util hashmap
import java util hashset
import java util list
import java util map
import java util set
import org apache lucene analysis analyzer
import org apache lucene document document
import org apache lucene document fieldable
import org apache lucene index indexreader
import org apache lucene index term
import org apache lucene index termenum
import org apache lucene index termpositionvector
import org apache lucene index termpositions
/**
* represented as a coupled graph of class instances, this
* all-in-memory index store implementation delivers search
* results up to a 100 times faster than the file-centric ramdirectory
* at the cost of greater ram consumption.
* <p>
* warning: this contrib is experimental and the apis may change without warning.
* <p>
* there are no read and write locks in this store.
* {@link instantiatedindexreader} {@link instantiatedindexreader#iscurrent()} all the time
* and {@link org.apache.lucene.store.instantiated.instantiatedindexwriter}
* will attempt to update instances of the object graph in memory
* at the same time as a searcher is reading from it.
*
* consider using instantiatedindex as if it was immutable.
*/
public class instantiatedindex
implements serializable closeable
private static final long serialversionuid   1l
private long version   system currenttimemillis
private instantiateddocument documentsbynumber
/** todo: should this be a bitset? */
private set<integer> deleteddocuments
private map<string  map<string  instantiatedterm>> termsbyfieldandtext
private instantiatedterm orderedterms
private map<string  byte> normsbyfieldnameanddocumentnumber
private fieldsettings fieldsettings
/**
* creates an empty instantiated index for you to fill with data using an {@link org.apache.lucene.store.instantiated.instantiatedindexwriter}.
*/
public instantiatedindex
initialize
void initialize
// todo: clear index without loosing memory (uncouple stuff)
termsbyfieldandtext   new hashmap<string  map<string  instantiatedterm>>
fieldsettings   new fieldsettings
orderedterms   new instantiatedterm
documentsbynumber   new instantiateddocument
normsbyfieldnameanddocumentnumber   new hashmap<string  byte>
deleteddocuments   new hashset<integer>
/**
* creates a new instantiated index that looks just like the index in a specific state as represented by a reader.
*
* @param sourceindexreader the source index this new instantiated index will be copied from.
* @throws ioexception if the source index is not optimized, or when accessing the source.
*/
public instantiatedindex indexreader sourceindexreader  throws ioexception
this sourceindexreader  null
/**
* creates a new instantiated index that looks just like the index in a specific state as represented by a reader.
*
* @param sourceindexreader the source index this new instantiated index will be copied from.
* @param fields fields to be added, or null for all
* @throws ioexception if the source index is not optimized, or when accessing the source.
*/
public instantiatedindex indexreader sourceindexreader  set<string> fields  throws ioexception
if   sourceindexreader isoptimized
system out println
//throw new ioexception("source index is not optimized.");
initialize
collection<string> allfieldnames   sourceindexreader getfieldnames indexreader fieldoption all
// load field options
collection<string> indexednames   sourceindexreader getfieldnames indexreader fieldoption indexed
for  string name   indexednames
fieldsetting setting   fieldsettings get name  true
setting indexed   true
collection<string> indexednovecnames   sourceindexreader getfieldnames indexreader fieldoption indexed_no_termvector
for  string name   indexednovecnames
fieldsetting setting   fieldsettings get name  true
setting storetermvector   false
setting indexed   true
collection<string> indexedvecnames   sourceindexreader getfieldnames indexreader fieldoption indexed_with_termvector
for  string name   indexedvecnames
fieldsetting setting   fieldsettings get name  true
setting storetermvector   true
setting indexed   true
collection<string> payloadnames   sourceindexreader getfieldnames indexreader fieldoption stores_payloads
for  string name   payloadnames
fieldsetting setting   fieldsettings get name  true
setting storepayloads   true
collection<string> termvecnames   sourceindexreader getfieldnames indexreader fieldoption termvector
for  string name   termvecnames
fieldsetting setting   fieldsettings get name  true
setting storetermvector   true
collection<string> termvecoffsetnames   sourceindexreader getfieldnames indexreader fieldoption termvector_with_offset
for  string name   termvecoffsetnames
fieldsetting setting   fieldsettings get name  true
setting storeoffsetwithtermvector   true
collection<string> termvecposnames   sourceindexreader getfieldnames indexreader fieldoption termvector_with_position
for  string name   termvecposnames
fieldsetting setting   fieldsettings get name  true
setting storepositionwithtermvector   true
collection<string> termvecposoffnames   sourceindexreader getfieldnames indexreader fieldoption termvector_with_position_offset
for  string name   termvecposoffnames
fieldsetting setting   fieldsettings get name  true
setting storeoffsetwithtermvector   true
setting storepositionwithtermvector   true
collection<string> unindexednames   sourceindexreader getfieldnames indexreader fieldoption unindexed
for  string name   unindexednames
fieldsetting setting   fieldsettings get name  true
setting indexed   false
documentsbynumber   new instantiateddocument
// create documents
for  int i   0  i < sourceindexreader maxdoc    i
if  sourceindexreader isdeleted i
deleteddocuments add i
else
instantiateddocument document   new instantiateddocument
// copy stored fields from source reader
document sourcedocument   sourceindexreader document i
for  fieldable field   sourcedocument getfields
if  fields    null    fields contains field name
document getdocument   add field
document setdocumentnumber i
documentsbynumber   document
for  fieldable field   document getdocument   getfields
if  fields    null    fields contains field name
if  field istermvectorstored
if  document getvectorspace      null
document setvectorspace new hashmap<string  list<instantiatedtermdocumentinformation>>
document getvectorspace   put field name    new arraylist<instantiatedtermdocumentinformation>
// create norms
for  string fieldname   allfieldnames
if  fields    null    fields contains fieldname
getnormsbyfieldnameanddocumentnumber   put fieldname  sourceindexreader norms fieldname
// create terms
for  string fieldname   allfieldnames
if  fields    null    fields contains fieldname
gettermsbyfieldandtext   put fieldname  new hashmap<string  instantiatedterm> 5000
list<instantiatedterm> terms   new arraylist<instantiatedterm> 5000   gettermsbyfieldandtext   size
termenum termenum   sourceindexreader terms
while  termenum next
if  fields    null    fields contains termenum term   field          todo skipto if not using field
instantiatedterm instantiatedterm   new instantiatedterm termenum term   field    termenum term   text
gettermsbyfieldandtext   get termenum term   field    put termenum term   text    instantiatedterm
instantiatedterm settermindex terms size
terms add instantiatedterm
instantiatedterm setassociateddocuments new instantiatedtermdocumentinformation
termenum close
orderedterms   terms toarray new instantiatedterm
// create term-document informations
for  instantiatedterm term   orderedterms
termpositions termpositions   sourceindexreader termpositions term getterm
int position   0
while  termpositions next
instantiateddocument document   documentsbynumber
byte payloads   new byte
int positions   new int
for  int i   0  i < termpositions freq    i
positions   termpositions nextposition
if  termpositions ispayloadavailable
payloads   new byte
termpositions getpayload payloads  0
instantiatedtermdocumentinformation termdocumentinformation   new instantiatedtermdocumentinformation term  document  positions  payloads
term getassociateddocuments     termdocumentinformation
if  document getvectorspace      null
document getvectorspace   containskey term field
document getvectorspace   get term field    add termdocumentinformation
//        termdocumentinformation.setindexfromterm(indexfromterm++);
// load offsets to term-document informations
for  instantiateddocument document   getdocumentsbynumber
if  document    null
continue     deleted
for  fieldable field   document getdocument   getfields
if  field istermvectorstored      field isstoreoffsetwithtermvector
termpositionvector termpositionvector    termpositionvector  sourceindexreader gettermfreqvector document getdocumentnumber    field name
if  termpositionvector    null
for  int i   0  i < termpositionvector getterms   length  i
string token   termpositionvector getterms
instantiatedterm term   findterm field name    token
instantiatedtermdocumentinformation termdocumentinformation   term getassociateddocument document getdocumentnumber
termdocumentinformation settermoffsets termpositionvector getoffsets i
public instantiatedindexwriter indexwriterfactory analyzer analyzer  boolean create  throws ioexception
return new instantiatedindexwriter this  analyzer  create
public instantiatedindexreader indexreaderfactory   throws ioexception
return new instantiatedindexreader this
public void close   throws ioexception
// todo: decouple everything
instantiatedterm findterm term term
return findterm term field    term text
instantiatedterm findterm string field  string text
map<string  instantiatedterm> termsbyfield   termsbyfieldandtext get field
if  termsbyfield    null
return null
else
return termsbyfield get text
public map<string  map<string  instantiatedterm>> gettermsbyfieldandtext
return termsbyfieldandtext
public instantiatedterm getorderedterms
return orderedterms
public instantiateddocument getdocumentsbynumber
return documentsbynumber
public map<string  byte> getnormsbyfieldnameanddocumentnumber
return normsbyfieldnameanddocumentnumber
void setnormsbyfieldnameanddocumentnumber map<string  byte> normsbyfieldnameanddocumentnumber
this normsbyfieldnameanddocumentnumber   normsbyfieldnameanddocumentnumber
public set<integer> getdeleteddocuments
return deleteddocuments
void setorderedterms instantiatedterm orderedterms
this orderedterms   orderedterms
void setdocumentsbynumber instantiateddocument documentsbynumber
this documentsbynumber   documentsbynumber
public long getversion
return version
void setversion long version
this version   version
fieldsettings getfieldsettings
return fieldsettings