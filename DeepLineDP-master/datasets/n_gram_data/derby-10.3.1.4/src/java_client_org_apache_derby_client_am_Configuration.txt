/*
derby - class org.apache.derby.client.am.configuration
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client am
import java io ioexception
import java io inputstream
import java security accesscontroller
import java security privilegedexceptionaction
import org apache derby iapi services info productgenusnames
import org apache derby iapi services info productversionholder
import org apache derby shared common reference sqlstate
import org apache derby iapi services info jvminfo
public class configuration
public static int tracefilesuffixindex__   0
public static int tracelevel__   org apache derby jdbc clientbasedatasource trace_all
public static string tracefile__   null
public static string tracedirectory__   null
public static boolean tracefileappend__   false
public static string jrelevel         default level if unable to read
public static int jrelevelmajor   1
public static int jrelevelminor   3
private configuration
public static boolean tracesuspended__
public static boolean enableconnectivitytotargetserver__
public static boolean jvmsupportsmicrosclock__   false
// -------------------------- versioning -------------------------------------
public static productversionholder dncproductversionholder__
public static productversionholder getproductversionholder
return dncproductversionholder__
// for databasemetadata.getdrivername()
public final static string dncdrivername
// hard-wired for jdbc
//
// currently ascii hex value of "syslvl01".
public final static byte dncpackageconsistencytoken
0x53  0x59  0x53  0x4c  0x56  0x4c  0x30  0x31
// we will not set packagge version in the initial release.
// if we have to change the package version in the future then we can.
public static string dncpackageversion   null
// for driver.jdbccompliant()
public final static boolean jdbccompliant   true
// for driver.getcompatibilejreversions()
public final static string dnccompatiblejreversions   new string
//---------------------- database url protocols ------------------------------
// for databasemetadata.geturl()
public final static string jdbcderbynetprotocol
// -------------------------- metrics ----------------------
// not currently used by production builds.
// we can't really use this stuff with tracing enabled, the results are not accurate.
// -------------------------- compiled in properties -------------------------
public final static boolean enablenetconnectionpooling   true
final static boolean rangecheckcrossconverters   true
// define different levels of bug checking, for now turn all bits on.
final static int bugchecklevel   0xff
// --------------------------- connection defaults ---------------------------
// this is the derby default and maps to derby's "cursor stability".
public final static int defaultisolation   java sql connection transaction_read_committed
// ---------------------------- statement defaults----------------------------
public static final int defaultfetchsize   64
// prepare attribute constants
public static final string cursorattribute_sensitivestatic
public static final string cursorattribute_sensitivestaticrowset   cursorattribute_sensitivestatic
public static final string cursorattribute_sensitivedynamic
public static final string cursorattribute_sensitivedynamicrowset
public static final string cursorattribute_insensitive
public static final string cursorattribute_insensitiverowset   cursorattribute_insensitive
// uncomment the following when we want to use multi-row fetch to support sensitive static and
// insensitve cursors whenever the server has support for it.
//public static final string cursorattribute_sensitivestaticrowset = "sensitive static scroll with rowset positioning ";
//public static final string cursorattribute_insensitiverowset = "insensitive scroll with rowset positioning ";
public static final string cursorattribute_forupdate
public static final string cursorattribute_forreadonly
public static final string cursorattribute_withhold
// -----------------------load resource bundles for the driver asap-----------
private static final string packagenamefordnc
public static sqlexception exceptionsonloadresources   null     used by clientdriver to accumulate load exceptions
static
try
loadproductversionholder
catch  sqlexception e
exceptionsonloadresources   e
try
jrelevel   system getproperty
catch  securityexception e
ignore it  assume 1 3 0
java util stringtokenizer st   new java util stringtokenizer jrelevel
int jrestate   0
while  st hasmoretokens
int i
try
i   java lang integer parseint st nexttoken        get int value
catch  numberformatexception e
i   0
switch  jrestate
case 0
jrelevelmajor   i     state 0  this is the major version
break
case 1
jrelevelminor   i     state 1  this is the minor version
break
default
break     state >1  ignore
/**
* load product version information and accumulate exceptions
*/
private static void loadproductversionholder   throws sqlexception
try
dncproductversionholder__   buildproductversionholder
catch  java security privilegedactionexception e
throw new sqlexception null
new clientmessageid  sqlstate error_privileged_action
e getexception
catch  java io ioexception ioe
throw sqlexception javaexception null  ioe
// create productversionholder in security block for java 2 security.
private static productversionholder buildproductversionholder   throws
java security privilegedactionexception  ioexception
productversionholder mypvh   null
mypvh    productversionholder
accesscontroller doprivileged new privilegedexceptionaction
public object run   throws ioexception
inputstream versionstream   getclass   getresourceasstream productgenusnames dnc_info
return productversionholder getproductversionholderfrommyenv versionstream
return mypvh
/**
* check to see if the jvm version is such that jdbc 4.0 is supported
*/
public static boolean supportsjdbc40
if  jvminfo jdk_id >  jvminfo j2se_16
return true
return false