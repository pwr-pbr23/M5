/*
derby - class org.apache.derby.impl.sql.compile.simplestringoperatornode
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package	org apache derby impl sql compile
import org apache derby iapi sql compile c_nodetypes
import org apache derby iapi error standardexception
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi types typeid
import org apache derby iapi types datatypedescriptor
import org apache derby iapi types stringdatavalue
import org apache derby iapi reference sqlstate
import org apache derby iapi reference classname
import java sql types
import java util vector
/**
* this node represents a unary upper or lower operator
*
*/
public class simplestringoperatornode extends unaryoperatornode
/**
* initializer for a simpleoperatornode
*
* @param operand		the operand
* @param methodname	the method name
*/
public void init object operand  object methodname
super init operand  methodname  methodname
/**
* bind this operator
*
* @param fromlist			the query's from list
* @param subquerylist		the subquery list being built as we find subquerynodes
* @param aggregatevector	the aggregate vector being built as we find aggregatenodes
*
* @return	the new top of the expression tree.
*
* @exception standardexception		thrown on error
*/
public valuenode bindexpression
fromlist	fromlist  subquerylist subquerylist
vector	aggregatevector
throws standardexception
typeid	operandtype
bindoperand fromlist  subquerylist
aggregatevector
/*
** check the type of the operand - this function is allowed only on
** string value (char and bit) types.
*/
operandtype   operand gettypeid
switch  operandtype getjdbctypeid
case types char
case types varchar
case types longvarchar
case types clob
break
case org apache derby iapi reference jdbc20translation sql_types_java_object
case types other
throw standardexception newexception sqlstate lang_unary_function_bad_type
methodname
operandtype getsqltypename
default
operand     valuenode
getnodefactory   getnode
c_nodetypes cast_node
operand
datatypedescriptor getbuiltindatatypedescriptor types varchar  true
operand gettypecompiler
getcasttocharwidth
operand gettypeservices
getcontextmanager
castnode  operand  bindcastnodeonly
operandtype   operand gettypeid
/*
** the result type of upper()/lower() is the type of the operand.
*/
settype new datatypedescriptor operandtype
operand gettypeservices   isnullable
operand gettypecompiler
getcasttocharwidth operand gettypeservices
//result of upper()/lower() will have the same collation as the
//argument to upper()/lower().
gettypeservices   setcollationderivation
operand gettypeservices   getcollationderivation
gettypeservices   setcollationtype
operand gettypeservices   getcollationtype
return this
/**
* bind a ? parameter operand of the upper/lower function.
*
* @exception standardexception		thrown on error
*/
void bindparameter
throws standardexception
/*
** according to the sql standard, if bit_length has a ? operand,
** its type is bit varying with the implementation-defined maximum length
** for a bit.
*/
operand settype datatypedescriptor getbuiltindatatypedescriptor types varchar
//collation of ? operand should be same as the compilation schema
operand setcollationusingcompilationschema
stringdatavalue collation_derivation_implicit
/**
* this is a length operator node.  overrides this method
* in unaryoperatornode for code generation purposes.
*/
public string getreceiverinterfacename
return classname stringdatavalue