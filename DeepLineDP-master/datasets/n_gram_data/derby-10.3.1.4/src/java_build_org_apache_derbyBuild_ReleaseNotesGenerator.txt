/*
derby - class org.apache.derbybuild.releasenotesgenerator
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derbybuild
import java io
import java net url
import java util arraylist
import javax xml parsers
import javax xml transform
import javax xml transform dom
import javax xml transform stream
import org w3c dom
import org apache tools ant buildexception
import org apache tools ant project
import org apache tools ant task
import org apache tools ant taskdefs echo
/**
* <p>
* this tool generates release notes for a derby release. see the usage
* constant for details on how to run this tool standalone. it is recommended
* that you freshly regenerate your bug_list and notes_list just before
* you run this tool.
* </p>
*
* <p>
* the tool is designed to be run from derby's ant build scripts. to run under
* ant, do the following:
* </p>
*
* <ul>
* <li>define the "relnotes.src.reports" variable in your ant.properties. this
* variable points at the directory which holds your xml jira reports.</li>
* <li>put your xml jira reports in that directory. they should have the
* following names:
*  <ul>
*  <li>fixedbugslist.xml - this is the list of issues addressed by the release.</li>
*  <li>releasenoteslist.xml - this is the list of issues which have detailed
*  release notes.</li>
*  </ul>
* </li>
* <li>then cd to tools/release and run ant thusly: "ant genrelnotes"</li>
* </ul>
*
* <p>for more information on this tool, please see the jira which introduced it:
* </p>
*
* <p>
* <a href="http://issues.apache.org/jira/browse/derby-2570">derby-2570</a>
* </p>
*/
public class releasenotesgenerator extends task
/////////////////////////////////////////////////////////////////////////
//
//  constants
//
/////////////////////////////////////////////////////////////////////////
private static  final   string  usage
// header levels
private static  final   int     banner_level   1
private static  final   int     main_section_level   banner_level   1
private static  final   int     issue_detail_level   main_section_level   1
// major sections
private static  final   string  overview_section
private static  final   string  new_features_section
private static  final   string  bug_fixes_section
private static  final   string  issues_section
private static  final   string  build_environment_section
// headlines
private static  final   string  ant_headline
private static  final   string  branch_headline
private static  final   string  compiler_headline
private static  final   string  description_headline
private static  final   string  issue_id_headline
private static  final   string  java6_headline
private static  final   string  jdk14_headline
private static  final   string  jsr169_headline
private static  final   string  machine_headline
private static  final   string  osgi_headline
// formatting tags
private static  final   string  anchor
private static  final   string  body
private static  final   string  bold
private static  final   string  border
private static  final   string  column
private static  final   string  horizontal_line
private static  final   string  html
private static  final   string  indent
private static  final   string  list
private static  final   string  list_element
private static  final   string  name
private static  final   string  paragraph
private static  final   string  row
private static  final   string  table
// tags in summary xml
private static  final   string  sum_ant_version
private static  final   string  sum_branch
private static  final   string  sum_compiler
private static  final   string  sum_java6
private static  final   string  sum_jdk14
private static  final   string  sum_jsr169
private static  final   string  sum_machine
private static  final   string  sum_new_features
private static  final   string  sum_osgi
private static  final   string  sum_overview
private static  final   string  sum_previous_release_id
private static  final   string  sum_release_id
// tags in jira reports
private static  final   string  jira_attachment
private static  final   string  jira_attachments
private static  final   string  jira_id
private static  final   string  jira_item
private static  final   string  jira_key
private static  final   string  jira_name
private static  final   string  jira_title
private static  final   string  jira_fixin
// managing releasenote.html
private static  final   string  rn_summary_of_change
// other jira control
private static  final   string  release_note_name
private static  final   string  rn_h4
// other html control
private static  final   int     default_table_border_width   2
private static  final   string  xml_declaration    1 0  utf 8
/////////////////////////////////////////////////////////////////////////
//
//  state
//
/////////////////////////////////////////////////////////////////////////
// set on the command line or by ant
private string  _summaryfilename
private string  _buglistfilename
private string  _releasenoteslistfilename
private string  _pamphletfilename
// computed at run time
private string  _releaseid
private string  _previousreleaseid
// misc
private boolean _invokedbyant   true
/////////////////////////////////////////////////////////////////////////
//
//  inner classes
//
/////////////////////////////////////////////////////////////////////////
/**
* <p>
* state used by the generator
* </p>
*/
public  static  class   generatorstate
private documentbuilder _documentbuilder
private document    _pamphlet
private document    _summary
private document    _buglist
private document    _releasenoteslist
private releasenotereader   _releasenotereader
private arraylist       _missingreleasenotes
private arraylist       _errors
public  generatorstate
documentbuilder    documentbuilder
document   pamphlet
document   summary
document   buglist
document   releasenoteslist
_documentbuilder   documentbuilder
_pamphlet   pamphlet
_summary   summary
_buglist   buglist
_releasenoteslist   releasenoteslist
_missingreleasenotes   new arraylist
_errors   new arraylist
_releasenotereader   new releasenotereader  documentbuilder
public  void    addmissingreleasenote  jiraissue issue
_missingreleasenotes add  issue
public  void    adderror  string message
_errors add  message
public  documentbuilder getdocumentbuilder     return _documentbuilder
public  document    getpamphlet     return _pamphlet
public  document    getsummary     return _summary
public  document    getbuglist     return _buglist
public  document    getreleasenoteslist     return _releasenoteslist
public  releasenotereader   getreleasenotereader     return _releasenotereader
public  jiraissue     getmissingreleasenotes
jiraissue     missingnotes   new jiraissue
_missingreleasenotes toarray  missingnotes
return missingnotes
public  string     geterrors
string        squeezed   new string
_errors toarray  squeezed
return squeezed
/**
* <p>
* an issue from a jira report.
* </p>
*/
public  static  class   jiraissue
public  static  final   long no_release_note    1l
private string  _key
private string  _title
private long         _releasenoteattachmentid
public  jiraissue
string key
string title
long       releasenoteattachmentid
_key   key
_title   title
_releasenoteattachmentid   releasenoteattachmentid
public  string  getkey     return _key
public  string  gettitle     return _title
public  long         getreleasenoteattachmentid     return _releasenoteattachmentid
public  boolean hasreleasenote     return  _releasenoteattachmentid > no_release_note
public  string  getjiraaddress
return     _key
public  string  getreleasenoteaddress
return     _releasenoteattachmentid
/////////////////////////////////////////////////////////////////////////
//
//  constructors
//
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
//
//  entry point
//
/////////////////////////////////////////////////////////////////////////
/**
* <p>
* generate the release notes (for details on how to invoke this tool, see
* the header comment on this class).
* </p>
*/
public  static  void    main  string args
throws exception
releasenotesgenerator   me   new releasenotesgenerator
me _invokedbyant   false
if   me parseargs  args       me execute
else   me printusage
/////////////////////////////////////////////////////////////////////////
//
//  ant task behavior
//
/////////////////////////////////////////////////////////////////////////
/** ant accessor to set the name of the summary file prepared by the release manager */
public   void    setsummaryfilename  string summaryfilename     _summaryfilename   summaryfilename
/** ant accessor to set the name of the jira-generated list of bugs addressed by this release */
public   void    setbuglistfilename  string buglistfilename     _buglistfilename   buglistfilename
/** ant accessor to set the name of the jira-generated list of bugs which have release notes */
public   void    setreleasenoteslistfilename  string releasenoteslistfilename     _releasenoteslistfilename   releasenoteslistfilename
/** ant accessor to set the name of the generated output file */
public   void    setpamphletfilename  string pamphletfilename     _pamphletfilename   pamphletfilename
/**
* <p>
* this is ant's entry point into this task.
* </p>
*/
public  void    execute
throws buildexception
try
generatorstate                  gs   initialize
beginpamphlet  gs
buildoverview  gs
buildnewfeatures  gs
buildbuglist  gs
buildissueslist  gs
buildenvironment  gs
replacevariables  gs
endpamphlet  gs
printpamphlet  gs
printmissingreleasenotes  gs
printerrors  gs
catch   throwable t
t printstacktrace
throw new buildexception      t getmessage    t
/////////////////////////////////////////////////////////////////////////
//
//  other accessors
//
/////////////////////////////////////////////////////////////////////////
/**
* <p>
* get the release id from the summary file.
* </p>
*/
private string getreleaseid  generatorstate gs
throws exception
if   _releaseid    null
document    summary   gs getsummary
element     summaryroot   summary getdocumentelement
_releaseid   squeezetext  getfirstchild  summaryroot  sum_release_id
return _releaseid
/**
* <p>
* get the previous release id from the summary file.
* </p>
*/
private string getpreviousreleaseid  generatorstate gs
throws exception
if   _previousreleaseid    null
document    summary   gs getsummary
element     summaryroot   summary getdocumentelement
_previousreleaseid   squeezetext  getfirstchild  summaryroot  sum_previous_release_id
return _previousreleaseid
/////////////////////////////////////////////////////////////////////////
//
//  minions
//
/////////////////////////////////////////////////////////////////////////
//////////////////////////////////
//
//  boilerplate
//
//////////////////////////////////
/**
* <p>
* start an html docment. returns the body element.
* </p>
*/
private void beginpamphlet  generatorstate gs
throws exception
document    pamphlet   gs getpamphlet
string          releaseid   getreleaseid  gs
string          titletext       releaseid
element     html   pamphlet createelement  html
element     title   createtextelement  pamphlet     titletext
element     body   pamphlet createelement  body
pamphlet appendchild  html
html appendchild  title
html appendchild  body
element     bannerblock   createheader  body  banner_level  titletext
builddelta  gs  bannerblock
element     toc   createlist  body
createsection  body  main_section_level  toc  overview_section  overview_section
createsection  body  main_section_level  toc  new_features_section  new_features_section
createsection  body  main_section_level  toc  bug_fixes_section  bug_fixes_section
createsection  body  main_section_level  toc  issues_section  issues_section
createsection  body  main_section_level  toc  build_environment_section  build_environment_section
/**
* <p>
* finish the html document.
* </p>
*/
private void    endpamphlet  generatorstate gs
throws exception
//////////////////////////////////
//
//  delta section
//
//////////////////////////////////
/**
* <p>
* note that this release is a delta from the previous one.
* </p>
*/
private void builddelta  generatorstate gs  element parent
throws exception
string          releaseid   getreleaseid  gs
string          previousreleaseid   getpreviousreleaseid  gs
string          deltastatement
releaseid
previousreleaseid
addparagraph  parent  deltastatement
//////////////////////////////////
//
//  overview section
//
//////////////////////////////////
/**
* <p>
* build the overview section.
* </p>
*/
private void buildoverview  generatorstate gs
throws exception
document    pamphlet   gs getpamphlet
element     overviewsection   getsection  pamphlet  main_section_level  overview_section
document    summary   gs getsummary
element     summaryroot   summary getdocumentelement
element     details   getfirstchild  summaryroot  sum_overview
// copy the details out of the summary file into the overview section
clonechildren  details  overviewsection
//////////////////////////////////
//
//  new features section
//
//////////////////////////////////
/**
* <p>
* build the new features section.
* </p>
*/
private void buildnewfeatures  generatorstate gs
throws exception
document    pamphlet   gs getpamphlet
element     newfeaturessection   getsection  pamphlet  main_section_level  new_features_section
document    summary   gs getsummary
element     summaryroot   summary getdocumentelement
element     details   getfirstchild  summaryroot  sum_new_features
// copy the details out of the summary file into the overview section
clonechildren  details  newfeaturessection
//////////////////////////////////
//
//  bug list section
//
//////////////////////////////////
/**
* <p>
* build the bug list section.
* </p>
*/
private void buildbuglist  generatorstate gs
throws exception
document    pamphlet   gs getpamphlet
element     buglistsection   getsection  pamphlet  main_section_level  bug_fixes_section
document    buglist   gs getbuglist
jiraissue    bugs   getjiraissues  buglist
int                 count   bugs length
string          releaseid   getreleaseid  gs
string          previousreleaseid   getpreviousreleaseid  gs
string          deltastatement
releaseid
previousreleaseid
addparagraph  buglistsection  deltastatement
element     table   createtable
buglistsection  default_table_border_width  new string   issue_id_headline  description_headline
for   int i   0  i < count  i
if  bugs    null
continue
jiraissue   issue   bugs
element     row   insertrow  table
element     linkcolumn   insertcolumn  row
element     descriptioncolumn   insertcolumn  row
element     hotlink   createlink  pamphlet  issue getjiraaddress    issue getkey
text            title   pamphlet createtextnode  issue gettitle
linkcolumn appendchild  hotlink
descriptioncolumn appendchild  title
//////////////////////////////////
//
//  issues section
//
//////////////////////////////////
/**
* <p>
* build the issues section.
* </p>
*/
private void buildissueslist  generatorstate gs
throws exception
document    pamphlet   gs getpamphlet
element     issuessection   getsection  pamphlet  main_section_level  issues_section
document    issueslist   gs getreleasenoteslist
releasenotereader   releasenotereader   gs getreleasenotereader
jiraissue    bugs   getjiraissues  issueslist
int                 count   bugs length
string          releaseid   getreleaseid  gs
string          previousreleaseid   getpreviousreleaseid  gs
string          greleaseid   releaseid
string          gpreviousreleaseid   previousreleaseid
string          deltastatement
previousreleaseid
releaseid
addparagraph  issuessection  deltastatement
element     toc   createlist  issuessection
for   int i   0  i < count  i
if  bugs    null
continue
jiraissue       issue   bugs
document    releasenote   null
try
releasenote   getreleasenote  gs  issue
catch  throwable t
gs adderror  formaterror      issue getkey    t
// skip this note if we were unable to read it
if   releasenote    null
gs addmissingreleasenote  issue
continue
string          key       issue getkey
node     summarytext   null
try
summarytext   releasenotereader getreleasenotesummary  releasenote
catch  throwable t
gs adderror  formaterror      issue getkey    t
summarytext   pamphlet createtextnode
element         paragraph   pamphlet createelement  paragraph
paragraph appendchild   pamphlet createtextnode  key
clonechildren  summarytext  paragraph
insertline  issuessection
element     issuesection   createsection  issuessection  issue_detail_level  toc  key  paragraph
try
element     details   releasenotereader getreleasenotedetails  releasenote
// copy the details out of the release note into this section of the
// pamphlet
clonechildren  details  issuesection
catch  throwable t
gs adderror  formaterror      issue getkey    t
/**
* <p>
* get the release note for an issue.
* </p>
*/
private document   getreleasenote  generatorstate gs  jiraissue issue
throws exception
if   issue hasreleasenote
url             url   null
inputstream is   null
try
url   new url  issue getreleasenoteaddress
is   url openstream
catch  throwable t
processthrowable  t
return null
document        doc   gs getreleasenotereader   getreleasenote  is
return doc
else   return null
//////////////////////////////////
//
//  build environment section
//
//////////////////////////////////
/**
* <p>
* build the section describing the build environment.
* </p>
*/
private void buildenvironment  generatorstate gs
throws exception
document    pamphlet   gs getpamphlet
element         environmentsection   getsection  pamphlet  main_section_level  build_environment_section
document    summary   gs getsummary
element     summaryroot   summary getdocumentelement
string          releaseid   getreleaseid  gs
string          desc       releaseid
addparagraph  environmentsection  desc
element     list   createlist  environmentsection
string          branchname   squeezetext  getfirstchild  summaryroot  sum_branch
string          branchtext       branchname
addheadlineditem  list  branch_headline  branchtext
string          machine   squeezetext  getfirstchild  summaryroot  sum_machine
addheadlineditem  list  machine_headline  machine
string          antversion   squeezetext  getfirstchild  summaryroot  sum_ant_version
addheadlineditem  list  ant_headline  antversion
string          jdk14version   squeezetext  getfirstchild  summaryroot  sum_jdk14
addheadlineditem  list  jdk14_headline  jdk14version
string          java6version   squeezetext  getfirstchild  summaryroot  sum_java6
addheadlineditem  list  java6_headline  java6version
string          osgitext   squeezetext  getfirstchild  summaryroot  sum_osgi
addheadlineditem  list  osgi_headline  osgitext
string          compilertext   squeezetext  getfirstchild  summaryroot  sum_compiler
addheadlineditem  list  compiler_headline  compilertext
string          jsr169text   squeezetext  getfirstchild  summaryroot  sum_jsr169
addheadlineditem  list  jsr169_headline  jsr169text
//////////////////////////////////
//
//  replace variables
//
//////////////////////////////////
/**
* <p>
* replace the known parameters with their corresponding text values.
* </p>
*/
private void replacevariables  generatorstate gs
throws exception
document    pamphlet   gs getpamphlet
replacetag  pamphlet  sum_release_id  getreleaseid  gs
replacetag  pamphlet  sum_previous_release_id  getpreviousreleaseid  gs
//////////////////////////////////
//
//  print the generated document.
//
//////////////////////////////////
/**
* <p>
* print pamphlet to output file.
* </p>
*/
private void    printpamphlet  generatorstate gs
throws exception
document    pamphlet   gs getpamphlet
source            source   new domsource  pamphlet
file                  outputfile   new file  _pamphletfilename
result            result   new streamresult  outputfile
transformer   transformer   transformerfactory newinstance   newtransformer
transformer transform  source  result
//////////////////////////////////
//
//  print errors
//
//////////////////////////////////
/**
* <p>
* print missing release notes
* </p>
*/
private void printmissingreleasenotes  generatorstate gs
throws exception
jiraissue     missingreleasenotes   gs getmissingreleasenotes
int                 count   missingreleasenotes length
if   count > 0
println
for   int i   0  i < count  i
jiraissue   issue   missingreleasenotes
println      issue getkey         issue gettitle
/**
* <p>
* print errors.
* </p>
*/
private void printerrors  generatorstate gs
throws exception
string     errors   gs geterrors
int                 count   errors length
if   count > 0
println
for   int i   0  i < count  i
string  error   errors
println      error
//////////////////////////////////
//
//  argument minions
//
//////////////////////////////////
/**
* <p>
* returns true if arguments parse successfully, false otherwise.
* </p>
*/
private boolean    parseargs  string args
throws exception
if    args    null      args length    4      return false
int     idx   0
setsummaryfilename  args
setbuglistfilename  args
setreleasenoteslistfilename  args
setpamphletfilename  args
return true
private void    printusage
println  usage
/**
* <p>
* make sure that the input files all exist. returns a state variable for the generator.
* </p>
*/
private generatorstate  initialize
throws exception
documentbuilderfactory  factory   documentbuilderfactory newinstance
documentbuilder              builder   factory newdocumentbuilder
document                          pamphlet   builder newdocument
file                                    summaryfile   new file  _summaryfilename
file                                    buglistfile   new file  _buglistfilename
file                                    releasenoteslistfile   new file  _releasenoteslistfilename
document                        summary   builder parse  summaryfile
document                        buglist   builder parse  buglistfile
document                        releasenoteslist   builder parse  releasenoteslistfile
return new generatorstate
builder
pamphlet
summary
buglist
releasenoteslist
////////////////////////////////////////////////////////
//
// html minions
//
////////////////////////////////////////////////////////
/**
* <p>
* create a section at the end of a parent element and link to it from a
* table of contents.
* </p>
*/
private element createsection  element parent  int sectionlevel  element toc  string sectionname  string tocentry
throws exception
document        doc   parent getownerdocument
text                textnode   doc createtextnode  tocentry
return createsection  parent  sectionlevel  toc  sectionname  textnode
/**
* <p>
* create a section at the end of a parent element and link to it from a
* table of contents.
* </p>
*/
private element createsection  element parent  int sectionlevel  element toc  string sectionname  node visibletext
throws exception
document        doc   parent getownerdocument
element             link   createlocallink  doc  sectionname  visibletext
addlistitem  toc  link
return createheader  parent  sectionlevel  sectionname
/**
* <p>
* create a header at the end of the parent node. return the block created
* to hold the text following this header.
* </p>
*/
private element createheader  element parent  int headerlevel  string text
throws exception
document        doc   parent getownerdocument
text            textnode   doc createtextnode  text
element         header   doc createelement  makeheadertag  headerlevel
element         anchor   doc createelement  anchor
element         block  doc createelement  indent
parent appendchild  header
anchor setattribute  name  text
header appendchild  anchor
header appendchild  textnode
parent appendchild  block
return block
/**
* <p>
* create an html text element.
* </p>
*/
private element createtextelement  document doc  string tag  string text
throws exception
element     retval   doc createelement  tag
text            textnode   doc createtextnode  text
retval appendchild  textnode
return retval
/**
* <p>
* create a standard link to a local label.
* </p>
*/
private element createlocallink  document doc  string anchor  string text
throws exception
text        textnode   doc createtextnode  text
return createlocallink  doc  anchor  textnode
/**
* <p>
* create a standard link to a local label.
* </p>
*/
private element createlocallink  document doc  string anchor  node visibletext
throws exception
return createlink  doc      anchor  visibletext
/**
* <p>
* create a hotlink.
* </p>
*/
private element createlink  document doc  string label  string text
throws exception
text        textnode   doc createtextnode  text
return createlink  doc  label  textnode
/**
* <p>
* create a hotlink.
* </p>
*/
private element createlink  document doc  string label  node visibletext
throws exception
element hotlink   doc createelement  anchor
hotlink setattribute     label
hotlink appendchild  visibletext
return hotlink
/**
* <p>
* insert a list at the end of the parent element.
* </p>
*/
private element createlist  element parent
throws exception
document        doc   parent getownerdocument
element list   doc createelement  list
parent appendchild  list
return list
/**
* <p>
* add an item with a bold name to the end of a list.
* </p>
*/
private element addheadlineditem  element list  string headline  string text
throws exception
document        doc   list getownerdocument
element         itemelement   doc createelement  list_element
element         boldtext   boldtext  doc  headline
text            textnode   doc createtextnode      text
list appendchild  itemelement
itemelement appendchild  boldtext
itemelement appendchild  textnode
return itemelement
/**
* <p>
* make some bold text.
* </p>
*/
private element boldtext  document doc  string text
throws exception
element bold   createtextelement  doc  bold  text
return bold
/**
* <p>
* add an item to the end of a list.
* </p>
*/
private element addlistitem  element list  node item
throws exception
document        doc   list getownerdocument
element         itemelement   doc createelement  list_element
list appendchild  itemelement
itemelement appendchild  item
return itemelement
/**
* <p>
* retrieve the indented block inside a section
* </p>
*/
private element getsection  document doc  int sectionlevel  string sectionname
throws exception
string          headertag   makeheadertag  sectionlevel
element     root   doc getdocumentelement
nodelist    sectionlist   root getelementsbytagname  headertag
int             count   sectionlist getlength
for   int i   0  i < count  i
element     section    element  sectionlist item  i
element     sectionanchor   getfirstchild  section  anchor
if   sectionname equals  sectionanchor getattribute  name
// the next item after the section header, is the indented block
return  element  section getnextsibling
return null
/**
* <p>
* make the tag for a header, given its level
* </p>
*/
private string makeheadertag  int headerlevel
return     integer tostring  headerlevel
/**
* <p>
* add a paragraph to the end of a parent element.
* </p>
*/
private element addparagraph  element parent  string text
throws exception
document        doc   parent getownerdocument
text            textnode   doc createtextnode  text
element         paragraph   doc createelement  paragraph
parent appendchild  paragraph
paragraph appendchild  textnode
return paragraph
/**
* <p>
* insert a table at the end of the parent element.
* </p>
*/
private element createtable  element parent  int borderwidth  string columnheadings
throws exception
document        doc   parent getownerdocument
element         table   doc createelement  table
element         headingrow   insertrow  table
int                     count   columnheadings length
parent appendchild  table
table setattribute  border  integer tostring  borderwidth
for   int i   0  i < count  i
element     headingcolumn   insertcolumn  headingrow
element     boldtext   boldtext  doc  columnheadings
headingcolumn appendchild  boldtext
return table
/**
* <p>
* insert a row at the end of a table
* </p>
*/
private element insertrow  element table
throws exception
document        doc   table getownerdocument
element         row   doc createelement  row
table appendchild  row
return row
/**
* <p>
* insert a column at the end of a row
* </p>
*/
private element insertcolumn  element row
throws exception
document        doc   row getownerdocument
element         column   doc createelement  column
row appendchild  column
return column
/**
* <p>
* insert a horizontal line at the end of the parent element.
* </p>
*/
private element insertline  element parent
throws exception
document        doc   parent getownerdocument
element         line   doc createelement  horizontal_line
parent appendchild  line
return line
////////////////////////////////////////////////////////
//
// xml minions
//
////////////////////////////////////////////////////////
private element getfirstchild  element node  string childname
throws exception
element retval   getoptionalchild  node  childname
if   retval    null
throw new buildexception      childname       node getnodename
return retval
private element getnextchild  element node  string childname  int index
throws exception
element retval    element  node getelementsbytagname  childname   item  index
if   retval    null
throw new buildexception      childname       node getnodename
return retval
private element getoptionalchild  element node  string childname
throws exception
return  element  node getelementsbytagname  childname   item  0
/**
* <p>
* squeeze the text out of an element.
* </p>
*/
private string squeezetext  element node
throws exception
node        textchild   node getfirstchild
string      text   textchild getnodevalue
return text
/**
* <p>
* clone all of the children of a source node and add them as children
* of a target node.
* </p>
*/
private void clonechildren  node source  node target
throws exception
document    targetdoc   target getownerdocument
nodelist        sourcechildren   source getchildnodes
int                 count   sourcechildren getlength
for   int i   0  i < count  i
node    sourcechild   sourcechildren item  i
node    targetchild   targetdoc importnode  sourcechild  true
target appendchild  targetchild
/**
* <p>
* replace all instances of the tag with the indicated text.
* </p>
*/
private void replacetag  document doc  string tag  string replacementtext
throws exception
nodelist        sourcechildren   doc getelementsbytagname  tag
int                 count   sourcechildren getlength
for   int i   0  i < count  i
node    oldchild   sourcechildren item  i
node    newchild   doc createtextnode  replacementtext
if   oldchild    null
node    parent   oldchild getparentnode
if   parent    null     parent insertbefore  newchild  oldchild
for   int i   count 1  i >  1  i
node    oldchild   sourcechildren item  i
if   oldchild    null
node    parent   oldchild getparentnode
if   parent    null     parent removechild  oldchild
////////////////////////////////////////////////////////
//
// jira minions
//
////////////////////////////////////////////////////////
/**
* <p>
* get an array of jiraissues from a jira report.
* </p>
*/
private jiraissue   getjiraissues  document report
throws exception
element         reportroot   report getdocumentelement
nodelist        itemlist   reportroot getelementsbytagname  jira_item
int                 count   itemlist getlength
jiraissue     issues   new jiraissue
//for ( int i = 0; i < count; i++ ) { issues[ i ] = makejiraissue( (element) itemlist.item( i ) ); }
for   int i   0  i < count  i
jiraissue ji    makejiraissue   element  itemlist item  i
if  ji    null
issues   ji
return issues
/**
* <p>
* create a jiraissue from an <item> element in a jira report.
* </p>
*/
private jiraissue   makejiraissue  element itemelement
throws exception
string  key   squeezetext  getfirstchild  itemelement  jira_key
string  title   squeezetext  getfirstchild  itemelement  jira_title
long         releasenoteattachmentid   getreleasenoteattachmentid  itemelement
//
// a jira title has the following form:
//
//  "[derby-2598] new upgrade  test failures after change 528033"
//
// we strip off the leading jira id because that information already
// lives in the key.
//
title   title substring  title indexof        2  title length
//return new jiraissue( key, title, releasenoteattachmentid );
string type squeezetext getfirstchild itemelement
if    type equals       type equals       type equals       type equals
return null
try
string component squeezetext getoptionalchild itemelement
if  component    null
nodelist        subitemlist   itemelement getelementsbytagname
int             compcount   subitemlist getlength
for  int i 0  i<compcount  i
if  component equals       component equals
return null
try
component   squeezetext getnextchild itemelement     i 1
catch  exception e
// nothing...
catch  nullpointerexception e
// do nothing, now...
try
string resolution squeezetext getoptionalchild itemelement
if  resolution    null
if   resolution equals
return null
catch  exception e
return null
string fixversion null
try
fixversion squeezetext getoptionalchild itemelement  jira_fixin
catch  exception e
return null
while  fixversion    null
nodelist        subitemlist   itemelement getelementsbytagname  jira_fixin
int             fixcount   subitemlist getlength
for  int i 0  i<fixcount  i
// if we encounter the previous release's id, we can do away with entire issue
if  _previousreleaseid equals fixversion
return null
// hardcode excluding 10.2.1.6; we want to exclude those also
if  fixversion equals
return null
// if the first fixversion does not match the current release, or the beta,
// check the next one
if     _releaseid equals fixversion          equals fixversion          equals fixversion          equals fixversion          equals fixversion
try
fixversion   squeezetext getnextchild  itemelement  jira_fixin  i 1
continue
catch  exception e
fixversion null
return null
return new jiraissue  key  title  releasenoteattachmentid
return null
/**
* <p>
* get the highest attachment id of all of the "releasenote.html" documents
* attached to this jira.
* </p>
*/
private long   getreleasenoteattachmentid  element itemelement
throws exception
long         releasenoteattachmentid   jiraissue no_release_note
element     attachments   getoptionalchild  itemelement  jira_attachments
if   attachments    null
nodelist    attachmentslist   attachments getelementsbytagname  jira_attachment
int             count   attachmentslist getlength
for   int i   0  i < count  i
element     attachment    element  attachmentslist item  i
string          name   attachment getattribute  jira_name
if   release_note_name equals  name
string      stringid   attachment getattribute  jira_id
int             id   long decode  stringid   intvalue
if   id > releasenoteattachmentid     releasenoteattachmentid   id
return releasenoteattachmentid
////////////////////////////////////////////////////////
//
// exception processing minions
//
////////////////////////////////////////////////////////
/**
* <p>
* special processing for special exceptions.
* </p>
*/
private  void    processthrowable  throwable t
if   t instanceof java net unknownhostexception
println      t getmessage
/**
* <p>
* format an error for later reporting.
* </p>
*/
private  string    formaterror  string text  throwable t
text   text       t tostring         stringifystacktrace  t
return text
/**
* <p>
* print a stack trace as a string.
* </p>
*/
private  string stringifystacktrace  throwable t
stringwriter    sw   new stringwriter
printwriter     pw   new printwriter  sw  true
t printstacktrace  pw
pw flush
sw flush
return sw tostring
////////////////////////////////////////////////////////
//
// misc minions
//
////////////////////////////////////////////////////////
private  void    println  string text
if   _invokedbyant
log  text  project msg_warn
else
system out println  text