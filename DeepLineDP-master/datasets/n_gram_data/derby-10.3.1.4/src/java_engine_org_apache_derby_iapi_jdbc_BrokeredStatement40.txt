/*
derby - class org.apache.derby.iapi.jdbc.brokeredstatement40
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi jdbc
import java sql sqlexception
import org apache derby impl jdbc util
import org apache derby iapi reference sqlstate
public class brokeredstatement40 extends brokeredstatement
/**
* calls the superclass constructor to pass the parameters
*
* @param control   brokeredstatementcontrol
* @param jdbclevel int
* @throws java.sql.sqlexception
*
*/
brokeredstatement40 brokeredstatementcontrol control  int jdbclevel
throws sqlexception
super control  jdbclevel
/**
* checks if the statement is closed.
*
* @return <code>true</code> if the statement is closed,
* <code>false</code> otherwise
* @exception sqlexception if an error occurs
*/
public final boolean isclosed   throws sqlexception
return getstatement   isclosed
/**
* returns <code>this</code> if this class implements the interface
*
* @param  interfaces a class defining an interface
* @return an object that implements the interface
* @throws java.sql.sqlexption if no object if found that implements the
* interface
*/
public <t> t unwrap java lang class<t> interfaces
throws sqlexception
checkifclosed
//derby does not implement non-standard methods on
//jdbc objects
try
return interfaces cast this
catch  classcastexception cce
throw util generatecssqlexception sqlstate unable_to_unwrap
interfaces
/**
* forwards to the real statement.
* @return true if the underlying statement is poolable, false otherwise.
* @throws sqlexception if the forwarding call fails.
*/
public boolean ispoolable   throws sqlexception
return getstatement   ispoolable
/**
* forwards to the real statement.
* @param poolable the new value for the poolable hint.
* @throws sqlexception if the forwarding call fails.
*/
public void setpoolable boolean poolable  throws sqlexception
getstatement   setpoolable poolable