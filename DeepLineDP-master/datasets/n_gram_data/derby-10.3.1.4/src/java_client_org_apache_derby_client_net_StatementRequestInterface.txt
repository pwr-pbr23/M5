/*
derby - class org.apache.derby.client.net.statementrequestinterface
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client net
import org apache derby client am columnmetadata
import org apache derby client am section
import org apache derby client am sqlexception
// in general, all required data is passed.
// in addition, material statement objects are passed for convenient access to any material statement caches.
// implementations of this interface should not dereference common layer statement state, as it is passed in,
// but may dereference material layer statement state if necessary for performance.
public interface statementrequestinterface
public void writeexecuteimmediate netstatement materialstatement
string sql
section section  throws sqlexception
public void writepreparedescribeoutput netstatement materialstatement
string sql
section section  throws sqlexception
public void writeprepare netstatement materialstatement
string sql
section section  throws sqlexception
public void writeopenquery netstatement materialstatement
section section
int fetchsize
int resultsettype  throws sqlexception
public void writeexecute netpreparedstatement materialpreparedstatement
section section
org apache derby client am columnmetadata parametermetadata
object inputs
int numinputcolumns
boolean outputexpected
// this is a hint to the material layer that more write commands will follow.
// it is ignored by the driver in all cases except when blob data is written,
// in which case this boolean is used to optimize the implementation.
// otherwise we wouldn't be able to chain after blob data is sent.
// if we could always chain a no-op ddm after every execute that writes blobs
// then we could just always set the chaining flag to on for blob send data
boolean chainedwritesfollowingsetlob  throws sqlexception
public void writeopenquery netpreparedstatement materialpreparedstatement
section section
int fetchsize
int resultsettype
int numinputcolumns
columnmetadata parametermetadata
object inputs  throws sqlexception
public void writedescribeinput netpreparedstatement materialpreparedstatement
section section  throws sqlexception
public void writedescribeoutput netpreparedstatement materialpreparedstatement
section section  throws sqlexception
public void writeexecutecall netstatement materialstatement
boolean outputexpected
string procedurename
section section
int fetchsize
boolean suppressresultsets     set to true for batched calls
int resultsettype
columnmetadata parametermetadata
object inputs  throws sqlexception
public void writesetspecialregister java util arraylist sqlsttlist  throws sqlexception