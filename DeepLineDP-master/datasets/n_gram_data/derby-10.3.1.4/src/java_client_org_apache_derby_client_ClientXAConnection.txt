/*
derby - class org.apache.derby.client.clientxaconnection
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client
import java sql connection
import java sql sqlexception
import javax sql xaconnection
import javax transaction xa xaresource
import org apache derby client am sqlexception
import org apache derby client net netlogwriter
import org apache derby client net netxaconnection
import org apache derby jdbc clientxadatasource
public class clientxaconnection extends clientpooledconnection implements xaconnection
private static int rmidseed_   95688932     semi random starting value for rmid
private clientxadatasource derbyds_   null
private xaresource xares_   null
private org apache derby client net netxaresource netxares_   null
private boolean ffirstgetconnection_   true
private connection logicalcon_     logicalconnection_ is inherited from clientpooledconnection
// this connection is used to access the indoubt table
private netxaconnection controlcon_   null
public clientxaconnection clientxadatasource ds
org apache derby client net netlogwriter logwtr
string userid
string password  throws sqlexception
super ds  logwtr  userid  password  getuniguermid
derbyds_   ds
// have to instantiate a real connection here,
// otherwise if xa function is called before the connect happens,
// an error will be returned
// note: conapp will be set after this call
logicalcon_   super getconnection
netxares_   new org apache derby client net netxaresource this
rmid_  userid  password  netxaphysicalconnection_
xares_   netxares_
public connection getconnection   throws sqlexception
if  ffirstgetconnection_
// since super.getconnection() has already been called once
// in the constructor, we don't need to call it again for the
// call of this method.
ffirstgetconnection_   false
else
// a new connection object is required
logicalcon_   super getconnection
if  this physicalconnection_    null       have a physical connection  check if a netxaresource
if  netxaphysicalconnection_    null       the xaresource is a netxaresource  re initialize it
netxares_ initforreuse
return logicalcon_
private static synchronized int getuniguermid
rmidseed_    1
return rmidseed_
public int getrmid
return rmid_
public xaresource getxaresource   throws sqlexception
if  logwriter_    null
logwriter_ traceexit this     xares_
return xares_
public clientxadatasource getdatasource   throws sqlexception
if  logwriter_    null
logwriter_ traceexit this     derbyds_
return derbyds_
public netxaconnection createcontrolconnection netlogwriter logwriter
string user
string password
org apache derby jdbc clientdatasource datasource
int rmid
boolean isxaconn  throws sqlexception
try
controlcon_   new netxaconnection logwriter
user
password
datasource
rmid
isxaconn
this
controlcon_ getnetconnection   settransactionisolation
connection transaction_read_uncommitted
if  logwriter_    null
logwriter_ traceexit this     controlcon_
return controlcon_
catch   sqlexception se
throw se getsqlexception
public synchronized void close   throws sqlexception
super close