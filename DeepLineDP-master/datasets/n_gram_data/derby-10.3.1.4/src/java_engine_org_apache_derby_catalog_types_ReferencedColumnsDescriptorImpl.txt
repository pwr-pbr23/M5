/*
derby - class org.apache.derby.catalog.types.referencedcolumnsdescriptorimpl
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby catalog types
import org apache derby iapi services io formatable
import org apache derby iapi services io storedformatids
import org apache derby catalog referencedcolumns
import java io objectinput
import java io objectoutput
import java io ioexception
public class referencedcolumnsdescriptorimpl
implements referencedcolumns  formatable
/********************************************************
**
**	this class implements formatable. that means that it
**	can write itself to and from a formatted stream. if
**	you add more fields to this class, make sure that you
**	also write/read them with the writeexternal()/readexternal()
**	methods.
**
**	if, inbetween releases, you add more fields to this class,
**	then you should bump the version number emitted by the gettypeformatid()
**	method.
**
********************************************************/
private int referencedcolumns
/**
* constructor for an referencedcolumnsdescriptorimpl
*
* @param referencedcolumns the array of referenced columns.
*/
public referencedcolumnsdescriptorimpl 	int referencedcolumns
this referencedcolumns   referencedcolumns
/** zero-argument constructor for formatable interface */
public referencedcolumnsdescriptorimpl
/**
* @see referencedcolumns#getreferencedcolumnpositions
*/
public int getreferencedcolumnpositions
return referencedcolumns
/* externalizable interface */
/**
* @see java.io.externalizable#readexternal
*
* @exception ioexception	thrown on read error
*/
public void readexternal objectinput in  throws ioexception
int rclength   in readint
referencedcolumns   new int
for  int i   0  i < rclength  i
referencedcolumns   in readint
/**
* @see java.io.externalizable#writeexternal
*
* @exception ioexception	thrown on write error
*/
public void writeexternal objectoutput out  throws ioexception
out writeint referencedcolumns length
for  int i   0  i < referencedcolumns length  i
out writeint referencedcolumns
/* typedformat interface */
public int gettypeformatid
return storedformatids referenced_columns_descriptor_impl_v01_id
/**
@see java.lang.object#tostring
*/
public string	tostring
stringbuffer sb   new stringbuffer 60
sb append
for  int index   0  index < referencedcolumns length  index
if  index > 0
sb append
sb append string valueof referencedcolumns
sb append
return sb tostring