/*
derby - class org.apache.derby.iapi.tools.i18n.localizedresource
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi tools i18n
import java io inputstream
import java io outputstream
import java io unsupportedencodingexception
import java lang reflect method
import java util resourcebundle
import java util date
import java util locale
import java util stringtokenizer
import java text messageformat
import java text numberformat
import java text decimalformat
import java text dateformat
import java text parseexception
import java text fieldposition
import java sql timestamp
import java sql resultset
import java sql resultsetmetadata
import java sql sqlexception
import java sql types
public final class localizedresource  implements java security privilegedaction
private static final boolean supports_big_decimal_calls
static
boolean supportsbigdecimalcalls
try
// this class attempts to make a call to a
// resultset.getbigdecimal method, which may not be available.
// for instance, java.math.bigdecimal is not available with
// j2me/cdc/foundation 1.0 profile.
class forname
supportsbigdecimalcalls   true
// and no methods using bigdecimal are available with jsr169 spec.
method getbd   resultset class getmethod    new class  int class
supportsbigdecimalcalls   true
catch  throwable t
supportsbigdecimalcalls   false
supports_big_decimal_calls   supportsbigdecimalcalls
private resourcebundle res
private locale locale
private string encode
private final static string message_file
private final static string env_codeset
private final static string env_locale
private string messagefilename
private string resourcekey
private localizedoutput out
private localizedinput in
private boolean enablelocalized
private boolean unicodeescape
private static localizedresource local
private int datesize
private int timesize
private int timestampsize
private dateformat formatdate
private dateformat formattime
private dateformat formattimestamp
private numberformat formatnumber
private decimalformat formatdecimal
public localizedresource
init
public localizedresource string encstr  string locstr  string msgf
init encstr locstr msgf
public static localizedresource getinstance
if  local    null
local   new  localizedresource
return local
public void init
init null null null
public void init  string encstr  string locstr  string msgf
if  encstr    null
encode   encstr
//then get encoding string from environment
if  encode    null
string eencode   getenvproperty env_codeset
if   eencode    null
encode   eencode
// if null at this point then the default encoding
// will be always used.
//get locale string from the caller first
locale   getnewlocale locstr
//if null, get locale again from the environment variable
if  locale  null
string s   getenvproperty env_locale
locale   getnewlocale s
//get the default locale if forced
if  locale  null
locale   locale getdefault
if  msgf    null
messagefilename   msgf
else
messagefilename   message_file
//create default in/out
out   getnewoutput system out
in   getnewinput system in
//for faster code: get the format objs
if  enablelocalized    locale    null
formatdecimal    decimalformat decimalformat getinstance locale
formatnumber   numberformat getinstance locale
formatdate   dateformat getdateinstance dateformat long locale
formattime   dateformat gettimeinstance dateformat long locale
formattimestamp   dateformat getdatetimeinstance dateformat long
dateformat long  locale
else
formatdecimal    decimalformat decimalformat getinstance
formatnumber   numberformat getinstance
formatdate   dateformat getdateinstance dateformat long
formattime   dateformat gettimeinstance dateformat long
formattimestamp   dateformat getdatetimeinstance dateformat long
dateformat long
//initialize display sizes for columns
initmaxsizes2
//get the message file resource according to the locale
//fall back to english message file if locale message file is not found
private void setresource
if  res    null
return
if   locale    null    locale tostring   equals
res   resourcebundle getbundle message_file
else
try
res   resourcebundle getbundle messagefilename locale
catch java util missingresourceexception e
res   resourcebundle getbundle messagefilename locale english
private void initmaxsizes2
datesize   0
timesize   0
timestampsize   0
int len
// check the date & timestamp max length
// 3900/01/28 !! original devloper thought they were getting 2000/01/28
date d   new date 60907276800000l
timestamp t   new timestamp d gettime
for int month    0    month < 11   month    d settime d gettime      30l   24l   60l   60l   1000l
len getdateasstring d  length
if len > datesize
datesize len
t settime d gettime         21l   60l    59l    60l    59l
len gettimestampasstring t  length
if len > timestampsize
timestampsize len
// set the time max length
// minimum of 18 because the old buggy code always used 18
len   18
for  int hour   0   hour < 24  hour
long secs    hour   3600l     59   60l    59l
long ms   secs   1000l
date td   new date ms
string fd   formattime format td
if  fd length   > len
len   fd length
timesize len
public localizedinput getnewinput inputstream i
try
if  encode    null
return new localizedinput i encode
catch  unsupportedencodingexception e
return new localizedinput i
public localizedinput getnewencodedinput inputstream i  string encoding
try
return new localizedinput i encoding
catch  unsupportedencodingexception e
return new localizedinput i
public localizedoutput getnewoutput outputstream o
try
if  encode    null
return new localizedoutput o encode
catch unsupportedencodingexception e
return new localizedoutput o
/**
* get a new localizedoutput with the given encoding.
* @throws unsupportedencodingexception
*/
public localizedoutput getnewencodedoutput outputstream o
string encoding  throws unsupportedencodingexception
return new localizedoutput o  encoding
public string gettextmessage string key
if   res    null
setresource
string s   key
try
s   res getstring key
catch  exception e
s   key
//system.out.println(local.tostring());
//system.out.println("getkey:"+key+"="+s);
return s
public string gettextmessage string key  object o
object  att new object  o
return gettextmessage key att
public string gettextmessage string key  object o1  object o2
object  att new object  o1 o2
return gettextmessage key att
public string gettextmessage string key  object o1  object o2  object o3
object  att new object  o1 o2 o3
return gettextmessage key att
public string gettextmessage string key  object o1  object o2  object o3  object o4
object  att new object  o1 o2 o3 o4
return gettextmessage key att
private locale getnewlocale string locstr
string l    r    v
stringtokenizer st
if  locstr  null
return null
st new stringtokenizer locstr
try
l st nexttoken
if st hasmoretokens    true
r st nexttoken
if st hasmoretokens    true
v st nexttoken
return new locale l r v
catch  exception e
return null
public string gettextmessage string key  object  objectarr
if  res    null
setresource
try
return messageformat format res getstring key   objectarr
catch  exception e
string tmpformat   key
for  int i 0  i<objectarr length  i
tmpformat   tmpformat        i
return messageformat format tmpformat  objectarr
public string getlocalizedstring resultset rs
resultsetmetadata rsm
int columnnumber  throws sqlexception
if   enablelocalized
return rs getstring columnnumber
int type   rsm getcolumntype columnnumber
if   type    types date
return getdateasstring rs getdate columnnumber
else if   type    types integer   	type    types smallint
type    types bigint   	type    types tinyint
return getnumberasstring rs getlong columnnumber
else if  type    types real    	type    types float
type    types double
return getnumberasstring rs getdouble columnnumber
else if  supports_big_decimal_calls     type    types numeric    type    types decimal
return	getnumberasstring rs getbigdecimal columnnumber
rsm getscale columnnumber
else if  type    types time
return gettimeasstring rs gettime columnnumber
else if  type    types timestamp
return gettimestampasstring rs gettimestamp columnnumber
return rs getstring columnnumber
public string getdateasstring date d
if   enablelocalized
return d tostring
return formatdate format d
public string gettimeasstring date t
if   enablelocalized
return t tostring
return formattime format t 	new stringbuffer
new java text fieldposition 0   tostring
public string getnumberasstring int o
if  enablelocalized
return formatnumber format o
else
return string valueof o
public string getnumberasstring long o
if  enablelocalized
return formatnumber format o
else
return string valueof o
public string getnumberasstring object o
if  enablelocalized
return formatnumber format o  new stringbuffer
new fieldposition 0   tostring
else
return o tostring
public string getnumberasstring double o
if   enablelocalized
return string valueof o
return formatdecimal format o
public string gettimestampasstring timestamp t
if   enablelocalized
return t tostring
return formattime format t 	new stringbuffer
new java text fieldposition 0   tostring
public int getcolumndisplaysize resultsetmetadata rsm
int columnnumber  throws sqlexception
if   enablelocalized
return rsm getcolumndisplaysize columnnumber
int type   rsm getcolumntype columnnumber
if  type    types date
return datesize
if  type    types time
return timesize
if  type    types timestamp
return timestampsize
return rsm getcolumndisplaysize columnnumber
public string getstringfromdate string datestr
throws parseexception
if   enablelocalized
return datestr
date d   formatdate parse datestr
return new java sql date d gettime    tostring
public string getstringfromtime string timestr
throws parseexception
if   enablelocalized
return timestr
date t   formattime parse timestr
return new java sql time t gettime    tostring
public string getstringfromvalue string val
throws parseexception
if   enablelocalized
return val
return formatnumber parse val  tostring
public string getstringfromtimestamp string timestampstr
throws parseexception
if   enablelocalized
return timestampstr
date ts   formattimestamp parse timestampstr
return new java sql timestamp ts gettime    tostring
public locale getlocale
return locale
private final synchronized string getenvproperty string key
string s
try
resourcekey    key
s    string  java security accesscontroller doprivileged this
catch  securityexception se
s   null
//system.out.println("{"+resourcekey+"="+s+"}");
return s
public final object run
string s   system getproperty resourcekey
return s
public static boolean enablelocalization boolean mode
getinstance   enablelocalized   mode
//re-initialized locale
getinstance   init
return mode
public boolean islocalized
return getinstance   enablelocalized
public static string getmessage string key
return getinstance   gettextmessage key
public static string getmessage string key  object o1
return getinstance   gettextmessage key o1
public static string getmessage string key  object o1  object o2
return getinstance   gettextmessage key o1 o2
public static string getmessage string key  object o1  object o2  object o3
return getinstance   gettextmessage key o1 o2 o3
public static string getmessage string key  object o1  object o2  object o3  object o4
return getinstance   gettextmessage key o1 o2 o3 o4
public static localizedoutput outputwriter
return getinstance   out
public static localizedinput inputreader
return getinstance   in
public static string getnumber long o
return getinstance   getnumberasstring o
public static string getnumber int o
return getinstance   getnumberasstring o
public static void setunicodeescape boolean u
getinstance   unicodeescape   u
public static boolean getunicodeescape
return getinstance   unicodeescape
public string tostring
string s
locale  null?  locale tostring
encode
messagefilename
resourcekey
enablelocalized
unicodeescape
datesize
timesize
timestampsize
return s