/*
derby - class org.apache.derby.catalog.types.defaultinfoimpl
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby catalog types
import org apache derby iapi services io storedformatids
import org apache derby iapi services io formatable
import org apache derby iapi types datavaluedescriptor
import org apache derby iapi sql depend providerinfo
import org apache derby iapi reference sqlstate
import org apache derby catalog defaultinfo
import java io objectoutput
import java io objectinput
import java io ioexception
public class defaultinfoimpl implements defaultinfo  formatable
/********************************************************
**
**	this class implements formatable. that means that it
**	can write itself to and from a formatted stream. if
**	you add more fields to this class, make sure that you
**	also write/read them with the writeexternal()/readexternal()
**	methods.
**
**	if, inbetween releases, you add more fields to this class,
**	then you should bump the version number emitted by the gettypeformatid()
**	method.
**
********************************************************/
private datavaluedescriptor	defaultvalue
private string				defaulttext
private int                     type
final private static int bits_mask_is_defaultvalue_autoinc   0x1 << 0
/**
* public niladic constructor. needed for formatable interface to work.
*
*/
public	defaultinfoimpl
/**
* constructor for use with numeric types
*
* @param defaulttext	the text of the default.
*/
public defaultinfoimpl boolean isdefaultvalueautoinc
string defaulttext
datavaluedescriptor defaultvalue
this type   calctype isdefaultvalueautoinc
this defaulttext   defaulttext
this defaultvalue   defaultvalue
/**
* @see defaultinfo#getdefaulttext
*/
public string getdefaulttext
return defaulttext
public string	tostring
if isdefaultvalueautoinc
return
return defaulttext
// formatable methods
/**
* read this object from a stream of stored objects.
*
* @param in read this.
*
* @exception ioexception					thrown on error
* @exception classnotfoundexception		thrown on error
*/
public void readexternal  objectinput in
throws ioexception  classnotfoundexception
defaulttext    string  in readobject
defaultvalue    datavaluedescriptor  in readobject
type   in readint
/**
* write this object to a stream of stored objects.
*
* @param out write bytes here.
*
* @exception ioexception		thrown on error
*/
public void writeexternal  objectoutput out
throws ioexception
out writeobject  defaulttext
out writeobject  defaultvalue
out writeint type
/**
* get the formatid which corresponds to this class.
*
*	@return	the formatid of this class
*/
public	int	gettypeformatid  	  return storedformatids default_info_impl_v01_id
/**
* get the default value.
* (note: this returns null if
* the default is not a constant.)
*
* @return the default value.
*/
public datavaluedescriptor getdefaultvalue
return defaultvalue
/**
* set the default value.
*
* @param defaultvalue the default value.
*/
public void setdefaultvalue datavaluedescriptor defaultvalue
this defaultvalue   defaultvalue
/**
* @see defaultinfo#isdefaultvalueautoinc
*/
public boolean isdefaultvalueautoinc
return  type   bits_mask_is_defaultvalue_autoinc      0
/**
* this function returns stored value for flags and so on.
*/
private static int calctype boolean isdefaultvalueautoinc
int value   0
if isdefaultvalueautoinc
value    bits_mask_is_defaultvalue_autoinc
return value