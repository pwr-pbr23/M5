/*
derby - class org.apache.derby.client.net.clientjdbcobjectfactoryimpl
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby client net
import java rmi unexpectedexception
import java sql connection
import java sql sqlexception
import org apache derby client clientpooledconnection
import org apache derby client clientxaconnection
import org apache derby client am callablestatement
import org apache derby client am clientjdbcobjectfactory
import org apache derby client am logicalconnection
import org apache derby client am parametermetadata
import org apache derby client am preparedstatement
import org apache derby client am configuration
import org apache derby client am logwriter
import org apache derby client am agent
import org apache derby client am section
import org apache derby client am statement
import org apache derby client am sqlexception
import org apache derby client am cursor
import org apache derby client net netlogwriter
import org apache derby jdbc clientbasedatasource
import org apache derby jdbc clientxadatasource
import org apache derby client am columnmetadata
/**
* implements the the clientjdbcobjectfactory interface and returns the classes
* that implement the jdbc3.0/2.0 interfaces
* for eg. newcallablestatement would return
* org.apache.derby.client.am.callablestatement
*/
public class clientjdbcobjectfactoryimpl implements clientjdbcobjectfactory
/**
* returns an instance of org.apache.derby.client.clientpooledconnection
*/
public clientpooledconnection newclientpooledconnection clientbasedatasource ds
logwriter logwriter string user
string password  throws sqlexception
return new clientpooledconnection ds logwriter user password
/**
* returns an instance of org.apache.derby.client.clientpooledconnection
*/
public clientpooledconnection newclientpooledconnection clientbasedatasource ds
logwriter logwriter string user
string password int rmid  throws sqlexception
return new clientpooledconnection ds logwriter user password rmid
/**
* returns an instance of org.apache.derby.client.clientxaconnection
*/
public clientxaconnection newclientxaconnection clientbasedatasource ds
logwriter logwriter string user  string password  throws sqlexception
return new clientxaconnection  clientxadatasource ds
netlogwriter logwriter user password
/**
* returns an instance of org.apache.derby.client.am.callablestatement.
*
* @param agent       the instance of netagent associated with this
*                    callablestatement object.
* @param connection  the connection object associated with this
*                    preparedstatement object.
* @param sql         a string object that is the sql statement to be sent
*                    to the database.
* @param type        one of the resultset type constants
* @param concurrency one of the resultset concurrency constants
* @param holdability one of the resultset holdability constants
* @param cpc         the pooledconnection object that will be used to
*                    notify the pooledconnection reference of the error
*                    occurred and the close events.
* @return a callablestatement object
* @throws sqlexception
*/
public callablestatement newcallablestatement agent agent
org apache derby client am connection connection
string sql int type int concurrency
int holdability clientpooledconnection cpc  throws sqlexception
return new callablestatement agent connection sql type
concurrency holdability cpc
/**
* returns an instance of org.apache.derby.client.am.logicalconnection
*/
public logicalconnection newlogicalconnection
org apache derby client am connection physicalconnection
clientpooledconnection pooledconnection
throws sqlexception
return new logicalconnection physicalconnection  pooledconnection
/**
* this method returns an instance of preparedstatement
* which implements java.sql.preparedstatement. it has the
* clientpooledconnection as one of its parameters
* this is used to raise the statement events when the prepared
* statement is closed.
*
* @param agent the instance of netagent associated with this
*              callablestatement object.
* @param connection the connection object associated with this
*                   preparedstatement object.
* @param sql        a string object that is the sql statement to be sent
*                   to the database.
* @param section    section
* @param cpc the clientpooledconnection wraps the underlying physical
*            connection associated with this prepared statement.
*            it is used to pass the statement closed and the statement
*            error occurred events that occur back to the
*            clientpooledconnection.
* @return a preparedstatement object
* @throws sqlexception
*/
public preparedstatement newpreparedstatement agent agent
org apache derby client am connection connection
string sql section section clientpooledconnection cpc
throws sqlexception
return new preparedstatement agent connection sql section cpc
/**
*
* this method returns an instance of preparedstatement
* which implements java.sql.preparedstatement.
* it has the clientpooledconnection as one of its parameters
* this is used to raise the statement events when the prepared
* statement is closed.
*
* @param agent the instance of netagent associated with this
*              callablestatement object.
* @param connection  the connection object associated with this
*                    preparedstatement object.
* @param sql         a string object that is the sql statement
*                    to be sent to the database.
* @param type        one of the resultset type constants.
* @param concurrency one of the resultset concurrency constants.
* @param holdability one of the resultset holdability constants.
* @param autogeneratedkeys a flag indicating whether auto-generated
*                          keys should be returned.
* @param columnnames an array of column names indicating the columns that
*                    should be returned from the inserted row or rows.
* @param cpc the clientpooledconnection wraps the underlying physical
*            connection associated with this prepared statement
*            it is used to pass the statement closed and the statement
*            error occurred events that occur back to the
*            clientpooledconnection.
* @return a preparedstatement object
* @throws sqlexception
*
*/
public preparedstatement newpreparedstatement agent agent
org apache derby client am connection connection
string sql int type int concurrency int holdability
int autogeneratedkeys string  columnnames
clientpooledconnection cpc
throws sqlexception
return new preparedstatement agent connection sql type concurrency
holdability autogeneratedkeys columnnames cpc
/**
* returns an instance of org.apache.derby.client.net.netconnection
*/
public org apache derby client am connection newnetconnection
org apache derby client am logwriter netlogwriter
string databasename java util properties properties
throws sqlexception
return  org apache derby client am connection
new netconnection  netlogwriter netlogwriter databasename properties
/**
* returns an instance of org.apache.derby.client.net.netconnection
*/
public org apache derby client am connection newnetconnection
org apache derby client am logwriter netlogwriter
org apache derby jdbc clientbasedatasource clientdatasource
string user string password  throws sqlexception
return   org apache derby client am connection
new netconnection  netlogwriter netlogwriter clientdatasource
user password
/**
* returns an instance of org.apache.derby.client.net.netconnection
*/
public org apache derby client am connection newnetconnection
org apache derby client am logwriter netlogwriter
int drivermanagerlogintimeout string servername
int portnumber string databasename
java util properties properties  throws sqlexception
return  org apache derby client am connection
new netconnection  netlogwriter netlogwriter drivermanagerlogintimeout
servername portnumber databasename properties
/**
* returns an instance of org.apache.derby.client.net.netconnection
*/
public org apache derby client am connection newnetconnection
org apache derby client am logwriter netlogwriter string user
string password
org apache derby jdbc clientbasedatasource datasource
int rmid boolean isxaconn  throws sqlexception
return  org apache derby client am connection
new netconnection  netlogwriter netlogwriter user password datasource rmid
isxaconn
/**
* returns an instance of org.apache.derby.client.net.netconnection
*/
public org apache derby client am connection newnetconnection
org apache derby client am logwriter netlogwriter
string ipaddr int portnumber
org apache derby jdbc clientbasedatasource datasource
boolean isxaconn  throws sqlexception
return  org apache derby client am connection
new netconnection  netlogwriter netlogwriter ipaddr portnumber datasource
isxaconn
/**
* returns an instance of org.apache.derby.client.net.netconnection.
* @param netlogwriter placeholder for netlogwriter object associated
*                     with this connection.
* @param user         user id for this connection.
* @param password     password for this connection.
* @param datasource   the datasource object passed from the pooledconnection
*                     object from which this constructor was called.
* @param rmid         the resource manager id for xa connections
* @param isxaconn     true if this is a xa connection
* @param cpc          the clientpooledconnection object from which this
*                     netconnection constructor was called. this is used to
*                     pass statementevents back to the pooledconnection
*                     object.
* @return a org.apache.derby.client.am.connection object
* @throws             sqlexception
*/
public org apache derby client am connection newnetconnection
org apache derby client am logwriter netlogwriter string user
string password
org apache derby jdbc clientbasedatasource datasource
int rmid boolean isxaconn
clientpooledconnection cpc  throws sqlexception
return  org apache derby client am connection
new netconnection  netlogwriter netlogwriter user password datasource rmid
isxaconn cpc
/**
* returns an instance of org.apache.derby.client.net.netresultset
*/
public org apache derby client am resultset newnetresultset agent netagent
org apache derby client am materialstatement netstatement
cursor cursor
int qryprctyp int sqlcsrhld int qryattscr int qryattsns
int qryattset long qryinsid int actualresultsettype
int actualresultsetconcurrency
int actualresultsetholdability  throws sqlexception
return new netresultset  netagent netagent
netstatement netstatement cursor qryprctyp sqlcsrhld qryattscr
qryattsns qryattset qryinsid actualresultsettype
actualresultsetconcurrency actualresultsetholdability
/**
* returns an instance of org.apache.derby.client.net.netdatabasemetadata
*/
public org apache derby client am databasemetadata newnetdatabasemetadata agent netagent
org apache derby client am connection netconnection
return new netdatabasemetadata  netagent netagent
netconnection netconnection
/**
* this method provides an instance of statement
* @param  agent      agent
* @param  connection connection
* @return a java.sql.statement implementation
* @throws sqlexception
*
*/
public statement newstatement agent agent  org apache derby client am connection connection
throws sqlexception
return new statement agent connection
/**
* this method provides an instance of statement
* @param  agent            agent
* @param  connection       connection
* @param  type             int
* @param  concurrency      int
* @param  holdability      int
* @param autogeneratedkeys int
* @param columnnames       string[]
* @return a java.sql.statement implementation
* @throws sqlexception
*
*/
public statement newstatement agent agent
org apache derby client am connection connection  int type
int concurrency  int holdability
int autogeneratedkeys  string columnnames
throws sqlexception
return new statement agent connection type concurrency holdability
autogeneratedkeys columnnames
/**
* returns an instanceof columnmetadata
*
* @param logwriter logwriter
* @return a columnmetadata implementation
*
*/
public columnmetadata newcolumnmetadata logwriter logwriter
return new columnmetadata logwriter
/**
* returns an instanceof columnmetadata or columnmetadata40 depending
* on the jdk version under use
*
* @param logwriter  logwriter
* @param upperbound int
* @return a columnmetadata implementation
*
*/
public columnmetadata newcolumnmetadata logwriter logwriter  int upperbound
return new columnmetadata logwriter upperbound
/**
*
* returns an instance of parametermetadata
*
* @param columnmetadata columnmetadata
* @return a parametermetadata implementation
*
*/
public parametermetadata newparametermetadata columnmetadata columnmetadata
return new parametermetadata columnmetadata