/*
derby - class org.apache.derby.impl.drda.xadatabase.java
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl drda
import java sql connection
import java sql sqlexception
import javax transaction xa xaresource
import javax sql xadatasource
import javax sql xaconnection
import java util hashtable
import java util properties
import java util enumeration
import org apache derby jdbc embeddedxadatasource
import org apache derby impl drda drdaxid
import  org apache derby iapi jdbc brokeredconnection
import org apache derby iapi jdbc engineconnection
/**
* this class contains database state specific to xa,
* specifically the xaresource that will be used for xa commands.
*/
class xadatabase extends database
// xa datasource used by all the xa connection requests
private embeddedxadatasource xadatasource
private xaresource xaresource
private xaconnection xaconnection
xadatabase  string dbname
super dbname
forxa   true
/**
* make a new connection using the database name and set
* the connection in the database
**/
synchronized void makeconnection properties p  throws
sqlexception
if  xadatasource    null
xadatasource   new embeddedxadatasource
xadatasource setdatabasename shortdbname
appendattrstring p
if  attrstring    null
xadatasource setconnectionattributes attrstring
engineconnection conn   getconnection
// if we have no existing connection. this is a brand new xaconnection.
if  conn    null
xaconnection   xadatasource getxaconnection userid password
setxaresource xaconnection getxaresource
else    this is just a connection reset  close the logical connection
conn close
// get a new logical connection.
// contract between network server and embedded engine
// is that any connection returned implements engineconnection.
conn    engineconnection  xaconnection getconnection
// client will always drive the commits so connection should
// always be autocommit false on the server. derby-898/derby-899
conn setautocommit false
setconnection conn
/** setxaresource
* @param resource xaresource for this connection
*/
protected void setxaresource  xaresource resource
this xaresource   resource
/**
* get xa resource for this connection
*/
protected xaresource getxaresource
return this xaresource