/*
derby - class org.apache.derby.iapi.sql.dictionary.tablepermsdescriptor
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby iapi sql dictionary
import org apache derby catalog dependable
import org apache derby catalog dependablefinder
import org apache derby catalog uuid
import org apache derby iapi services io storedformatids
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi error standardexception
import org apache derby impl sql catalog dddependablefinder
/**
* this class describes a row in the sys.systableperms system table, which
* stores the table permissions that have been granted but not revoked.
*/
public class tablepermsdescriptor extends permissionsdescriptor
private uuid tableuuid
private string tablename
private string selectpriv
private string deletepriv
private string insertpriv
private string updatepriv
private string referencespriv
private string triggerpriv
public tablepermsdescriptor  datadictionary dd
string grantee
string grantor
uuid tableuuid
string selectpriv
string deletepriv
string insertpriv
string updatepriv
string referencespriv
string triggerpriv  throws standardexception
super  dd  grantee  grantor
this tableuuid   tableuuid
this selectpriv   selectpriv
this deletepriv   deletepriv
this insertpriv   insertpriv
this updatepriv   updatepriv
this referencespriv   referencespriv
this triggerpriv   triggerpriv
//tableuuid can be null only if the constructor with tablepermsuuid
//has been invoked.
if  tableuuid    null
tablename   dd gettabledescriptor tableuuid  getname
/**
* this constructor just sets up the key fields of a tablepermsdescriptor
*/
public tablepermsdescriptor  datadictionary dd
string grantee
string grantor
uuid tableuuid  throws standardexception
this  dd  grantee  grantor  tableuuid
string  null   string  null   string  null   string  null   string  null   string  null
public tablepermsdescriptor  datadictionary dd
uuid tablepermsuuid  throws standardexception
this  dd  null  null  null
string  null   string  null   string  null   string  null   string  null   string  null
this oid   tablepermsuuid
public int getcatalognumber
return datadictionary systableperms_catalog_num
/*----- getter functions for rowfactory ------*/
public uuid gettableuuid     return tableuuid
public string getselectpriv     return selectpriv
public string getdeletepriv     return deletepriv
public string getinsertpriv     return insertpriv
public string getupdatepriv     return updatepriv
public string getreferencespriv     return referencespriv
public string gettriggerpriv     return triggerpriv
public string tostring
return     getgrantee
getuuid
getgrantor
gettableuuid
getselectpriv
getdeletepriv
getinsertpriv
getupdatepriv
getreferencespriv
gettriggerpriv
/**
* @return true iff the key part of this permissions descriptor equals the key part of another permissions
*         descriptor.
*/
public boolean equals  object other
if     other instanceof tablepermsdescriptor
return false
tablepermsdescriptor othertableperms    tablepermsdescriptor  other
return super keyequals  othertableperms     tableuuid equals  othertableperms tableuuid
/**
* @return the hashcode for the key part of this permissions descriptor
*/
public int hashcode
return super keyhashcode     tableuuid hashcode
/**
* @see permissionsdescriptor#checkowner
*/
public boolean checkowner string authorizationid  throws standardexception
tabledescriptor td   getdatadictionary   gettabledescriptor tableuuid
if  td getschemadescriptor   getauthorizationid   equals authorizationid
return true
else
return false
//////////////////////////////////////////////
//
// provider interface
//
//////////////////////////////////////////////
/**
* return the name of this provider.  (useful for errors.)
*
* @return string	the name of this provider.
*/
public string getobjectname
return     tablename
/**
* get the provider's type.
*
* @return char		the provider's type.
*/
public string getclasstype
return dependable table_permission
/**
@return the stored form of this provider
@see dependable#getdependablefinder
*/
public dependablefinder getdependablefinder
return	new dddependablefinder storedformatids table_permission_finder_v01_id