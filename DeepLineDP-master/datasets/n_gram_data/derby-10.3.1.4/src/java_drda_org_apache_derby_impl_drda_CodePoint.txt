/*
derby - class org.apache.derby.impl.drda.codepoint
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl drda
// tbd:
//	 organize into separate kinds of code points; impose organizational scheme.
// tbd:
//	 reconsider the various secchkcd_xx constants, perhaps we should hardwire.
class codepoint
// --------------------code points for constant ddm data----------------------
// indicates false state.  this 1-byte code point is used by some ddm parameters.
static final byte false    16      was 0xf0
// indicates true state.  this 1-byte code point is used by some ddm parameters.
static final byte true    15      was 0xf1
// zero indicator constant.
// indicates data does flow.
static final int zeroind   0x00
static final int nulldata   0xff
// security check was successful.
static final int secchkcd_00   0x00
// secmec value not supported.
static final int secchkcd_01   0x01
// dce informational status
static final int secchkcd_02   0x02
// dce retryable error.
static final int secchkcd_03   0x03
// dce non-retryable error.
static final int secchkcd_04   0x04
// gssapi informaional status.
static final int secchkcd_05   0x05
// gssapi retryable error.
static final int secchkcd_06   0x06
// gssapi non-retryable error.
static final int secchkcd_07   0x07
// local security service info.
static final int secchkcd_08   0x08
// local security service retryable error.
static final int secchkcd_09   0x09
// local security service non-retryable error.
static final int secchkcd_0a   0x0a
// sectkn missing or invalid.
static final int secchkcd_0b   0x0b
// password expired.
static final int secchkcd_0e   0x0e
// password invalid.
static final int secchkcd_0f   0x0f
// password missing.
static final int secchkcd_10   0x10
// userid missing.
static final int secchkcd_12   0x12
// userid invalid.
static final int secchkcd_13   0x13
// userid revoked.
static final int secchkcd_14   0x14
// new password invalid.
static final int secchkcd_15   0x15
// ----------------------ddm code points--------------------------------------
final static int excsat   0x1041
final static int syncctl   0x1055
final static int syncrsy   0x1069
final static int accsec   0x106d
final static int secchk   0x106e
final static int synclog   0x106f
final static int accrdb   0x2001
final static int bgnbnd   0x2002
final static int bndsqlstt   0x2004
final static int clsqry   0x2005
final static int cntqry   0x2006
final static int drppkg   0x2007
final static int dscsqlstt   0x2008
final static int endbnd   0x2009
final static int excsqlimm   0x200a
final static int excsqlstt   0x200b
final static int excsqlset   0x2014
final static int opnqry   0x200c
final static int prpsqlstt   0x200d
final static int rdbcmm   0x200e
final static int rdbrllbck   0x200f
final static int rebind   0x2010
final static int dscrdbtbl   0x2012
final static int sqldta   0x2412
final static int sqldtard   0x2413
final static int sqlstt   0x2414
final static int sqlattr   0x2450
final static int sqlsttvrb   0x2419
final static int qrydsc   0x241a
final static int qrydta   0x241b
final static int sqlrslrd   0x240e
final static int sqlcinrd   0x240b
// access security reply data.
// contains the security information from a target server's
// security manager.  this information is returned in response
// to an accsec command.
static final int accsecrd   0x14ac
// agent codepoint constant.
static final int agent   0x1403
// the codepoint for codepoint
static final int codpnt   0x000c
// the codepoint for data representation of dictionary codepoint
static final int codpntdr   0x0064
// subtypes for codpntr
static final int cstmbcs   0x2435      multibyte default
// ccsid for double-byte characters codepoint constant.
static final int ccsiddbc   0x119d
// ccsid for mixed-byte characters codepoint constant.
static final int ccsidmbc   0x119e
// ccsid manager.  min. level 4.
// provides character data conversion of the ddm parameters
// containing character data.
static final int ccsidmgr   0x14cc
// ccsid for single-byte characters codepoint constant.
static final int ccsidsbc   0x119c
// lu 6.2 conversational communications manager.
// describes the communications manager that supports
// conversational protocols by using system network
// architecture logical unit 6.2 (sna lu 6.2) local
// communications facilities.
static final int cmnappc   0x1444
// sna lu 6.2 sync point conversational communications
// manager.  min. level 4.
// provides an sna lu 6.2 conversational communications
// manager with sync point support.
static final int cmnsyncpt   0x147c
// tcp/ip communication manager codepoint constant.  min. level 5.
static final int cmntcpip   0x1474
// xa manager codepoint constant
static final int xamgr   0x1c01
// correlation token codepoint constant.
static final int crrtkn   0x2135
// target default value return
static final int trgdftrt   0x213b
// it is a manager of a set of named descriptions of object.
static final int dictionary   0x1458
// manager dependency error code
static final int deperrcd   0x119b
// description error code
static final int dscerrcd   0x2101
// server attributes reply data codepoint constant.
static final int excsatrd   0x1443
// external name codepoint constant.
static final int extnam   0x115e
// fixed row query protocol.
static final int fixrowprc   0x2418
// force fixed row query protocol.
static final int frcfixrow   0x2410
// limited block query protocol.
static final int lmtblkprc   0x2417
// manager level list codepoint constant.
static final int mgrlvlls   0x1404
// manager level number attribute constants.
// specifies the level of a defined ddm manager.
static final int mgrlvln   0x1473
// monitor events
static final int monitor   0x1900
// monitor reply data
static final int monitorrd   0x1c00
// new password
static final int newpassword   0x11de
// password
static final int password   0x11a1
// package default character subtype codepoint constant.
static final int pkgdftcst   0x2125
// package id
static final int pkgid   0x2109
// maximum number of extra blocks
static final int maxblkext   0x2141
// maximum result set count
static final int maxrslcnt   0x2140
// result set flags
static final int rslsetflg   0x2142
// rdb commit allowed
static final int rdbcmtok   0x2105
// package name & consistency token
static final int pkgnamct   0x2112
// list of paknamcsn
static final int pkgsnlst   0x2139
// conversational protocol error code
static final int prccnvcd   0x113f
// product specific identifier codepoint constant.
static final int prdid   0x112e
// output override
static final int outovr   0x2415
//output override option
static final int outovropt   0x2147
// package consistency token
static final int pkgcnstkn   0x210d
// product specific data
static final int prddta   0x2104
// query instance identifier
static final int qryinsid   0x215b
// query block protocol control
static final int qryblkctl   0x2132
// query block size
static final int qryblksz   0x2114
// query protocol type
static final int qryprctyp   0x2102
// query close implicit
static final int qryclsimp   0x215d
// query close lock release
static final int qryclsrls   0x215e
// qryoptval - query optimization value
static final int qryoptval   0x215f
// cursor allows read and delete operations.
static final int qrydel   0x2
// cursor is read-only.
static final int qryrdo   0x1
// insensitive scroll
static final int qryins   0x1
// sensitive static
static final int qrysnsstc   0x2
// number of fetch or insert rows
static final int nbrrow   0x213a
// output expected
static final int outexp   0x2111
// procedure name
static final int prcnam   0x2138
// query attribute for updatability
static final int qryattupd   0x2150
// cursor allows read, delete, and update operations.
static final int qryupd   0x4
// relational database codepoint constant.  min. level 3.
static final int rdb   0x240f
// rdb access manager class.
static final int rdbacccl   0x210f
// rdb allow updates
static final int rdbalwupd   0x211a
// query relative  scrolling action
static final int qryrelscr   0x213c
// query scroll orientation
static final int qryscrorn   0x2152
// query row number
static final int qryrownbr   0x213d
// query row sensitivity
static final int qryrowsns   0x2153
// query refresh answer set table
static final int qryrfrtbl   0x213e
// query attribute for scrollability
static final int qryattscr   0x2149
// query attribute for sensitivity
static final int qryattsns   0x2157
// query block reset
static final int qryblkrst   0x2154
// query rowset size
static final int qryrowset   0x2156
// query returns data
static final int qryrtndta   0x2155
// rdb interrupt token.
static final int rdbinttkn   0x2103
// relational database name codepoint constant.
static final int rdbnam   0x2110
// rdb collection identifier
static final int rdbcolid   0x2108
// resource name information
static final int rscnam   0x112d
// resource type information
static final int rsctyp   0x111f
// reason code information
static final int rsncod   0x1127
// resynchronization manager.  min levl 5.
// it is a manager object of ddm that performs
// resynchronization for in-doubt units of work after
// a sync point operation failure.
static final int rsyncmgr   0x14c1
// retuan sql descriptor area
static final int rtnsqlda   0x2116
// type of sql descriptor area
static final int typsqlda   0x2146
// security check code codepoint constant.
static final int secchkcd   0x11a4
// security mechanism codepoint constant.
static final int secmec   0x11a2
// security manager codepoint constant.
static final int secmgr   0x1440
// security manager name codepoint constant.
static final int secmgrnm   0x1196
// security token codepoint constant.
static final int sectkn   0x11dc
// return of extdta option
static final int rtnextdta   0x2148
// return of extdta option - return extdtas by row
static final int rtnextrow   0x1
// return of extdta option - return all extdtas for qrydta's sent
static final int rtnextall   0x2
// supervisor name codepoint constant.
static final int spvnam   0x115d
// sql application manager codepoint constant.  min. level 3.
static final int sqlam   0x2407
// sql communication area reply data codepoint constant.
static final int sqlcard   0x2408
// hold cursor position
static final int sqlcsrhld   0x211f
// sqlda reply data codepoint constant.
static final int sqldard   0x2411
// server class name codepoint constant.
static final int srvclsnm   0x1147
// server diagnostic information codepoint constant.
static final int srvdgn   0x1153
// server list codepoint constant.
static final int srvlst   0x244e
// server name codepoint constant.
static final int srvnam   0x116d
// server product release level codepoint constant.
static final int srvrlslv   0x115a
//statement decimal delimiter
static final int sttdecdel   0x2121
//statement string delimiter
static final int sttstrdel   0x2120
// supervisor.
// manages a collection of managers in a consistent manner.
static final int supervisor   0x143c
// security service error number codepoint constant.
static final int svcerrno   0x11b4
// severity code codepoint constant.
static final int svrcod   0x1149
// sync point manager.  min. level 4.
// it is a manager object of ddm that coordinates resource
// recovery of the units of work associated with recoverable
// resources in multiple ddm servers.
static final int syncptmgr   0x14c0
// syntax error code
static final int synerrcd   0x114a
// data type definition name codepoint constant.
static final int typdefnam   0x002f
// typdef overrides codepoint constant.
static final int typdefovr   0x0035
// unit of word disposition codepoint constant.
static final int uowdsp   0x2115
// usrid codepoint constant.
static final int usrid   0x11a0
// version name
static final int vrsnam   0x1144
// rdb package name, consistency token, and section
// number codepoint constant.
static final int pkgnamcsn   0x2113
// sql error diagnostic level
static final int diaglvl   0x2160
//-----------------------ddm reply codepoints---------------------------------
// invalid description
static final int dscinvrm   0x220a
// codepoint for command authorization for agent permanent error
static final int cmdathrm   0x121c
// command check codepoint constant.
static final int cmdchkrm   0x1254
// command not supported codepoint constant.
static final int cmdnsprm   0x1250
// codepoint for agent permanent error reply message
static final int agnprmrm   0x1232
static final int bgnbndrm   0x2208
// abnormal end of unit of work condition codepoint constant.
static final int abnuowrm   0x220d
// access to rdb completed.
// specifies that an instance of the sql application manager
// has been created and is bound to the specified rdb.
static final int accrdbrm   0x2201
final static int cmdcmprm   0x124b
final static int mgrlvlrm   0x1210
// manager dependency error
static final int mgrdeprm   0x1218
// end unit of work condition codepoint constant.
static final int enduowrm   0x220c
// object not supported codepoint constant.
static final int objnsprm   0x1253
// conversational protocol error
static final int prccnvrm   0x1245
// parameter not supported codepoint constant.
static final int prmnsprm   0x1251
// rdb package binding process not active codepoint
static final int pkgbnarm   0x2206
// rdb package binding process active codepoint constant.
static final int pkgbparm   0x2209
// query not open codepoint constant.
static final int qrynoprm   0x2202
// query previously opened codepoint
static final int qrypoprm   0x220f
// rdb currently accessed codepoint
static final int rdbaccrm   0x2207
// security check.
// indicates the acceptability of the security information.
static final int secchkrm   0x1219
// rdb access failed reply message codepoint
static final int rdbaflrm   0x221a
// not authorized to rdb reply message codepoint
static final int rdbathrm   0x22cb
// rdb not accessed codepoint constant.
static final int rdbnacrm   0x2204
// rdb not found codepoint
static final int rdbnfnrm   0x2211
// rdb update reply message codepoint constant.
static final int rdbupdrm   0x2218
// resources limits reached
static final int rsclmtrm   0x1233
// data stream syntax error
static final int syntaxrm   0x124c
// target not supported
static final int trgnsprm   0x125f
// parameter value not supported codepoint constant.
static final int valnsprm   0x1252
// sql error condition codepoint constant.
static final int sqlerrrm   0x2213
final static int opnqryrm   0x2205
final static int endqryrm   0x220b
final static int dtamchrm   0x220e
final static int opnqflrm   0x2212
final static int rslsetrm   0x2219
final static int cmdvltrm   0x221d
final static int cmmrqsrm   0x2225
//-----------------------ddm enumerated values-------------------------------
// typsqlda - standard output sqlda
static final int typsqlda_std_output   0
// typsqlda - standard input sqlda
static final int typsqlda_std_input   1
// typsqlda - light output sqlda
static final int typsqlda_light_output   2
// typsqlda - light input sqlda
static final int typsqlda_light_input   3
// typsqlda - extended output sqlda
static final int typsqlda_x_output   4
// typsqlda - extended input sqlda
static final int typsqlda_x_input   5
// qryclsimp - target server determines whether to implicitly
// close the cursor or not upon sqlstate 02000 based on cursor type.
static final int qryclsimp_server_choice   0x00
// qryclsimp - target server must implicitly close the cursor
// upon sqlstate 02000.
static final int qryclsimp_yes   0x01
// qryclsimp - target server must not implicitly close the cursor
// upon sqlstate 02000.
static final int qryclsimp_no   0x02
// qryclsrls - do not release read locks when the query is closed
static final int qryclsrls_no   0x00
// qryclsrls - release read locks when the query is closed
static final int qryclsrls_yes   0x01
// qryblkfct - no 'optimize for n rows' clause associated with
// the select statement for the cursor.
static final int qryblkfct_none   0x00
// qryblkexa - every query block is exactly the size specified
// in the qryblksz parameter, except for possibly the last
// query block which may be shorter.
static final int qryblkexa   0x00
// qryblkflx - every query block is at least the size specified
// in the qryblksz parameter, except for possibly the last
// query block which may be shorter.
static final int qryblkflx   0x01
// sql error diagnostic level
// diaglvl0 a null sqldiaggrp is returned. this is the default.
// diaglvl1 a non-null sqldiaggrp should be returned.
// diaglvl2 a non-null sqldiaggrp should be returned, and both sqldcmsg
// message text fields should be returned as null strings.
static final byte diaglvl0    byte 0xf0
static final byte diaglvl1    byte 0xf1
static final byte diaglvl2    byte 0xf2
//----------------------------fdoca code points-------------------------------
// externalized fd:oca data codepoint constant.
static final int extdta   0x146c
// fdoca data descriptor
static final int fdodsc   0x0010
// fdoca data
static final int fdodta   0x147a
// fdoca descriptor offset
static final int fdodscoff   0x2118
// fdoca triplet parameter offset
static final int fdoprmoff   0x212b
// fdoca triplet offset
static final int fdotrpoff   0x212a
//--------------------------ddm error code points---------------------------------
static final int synerrcd_dss_less_than_6   0x01
static final int synerrcd_dss_length_byte_number_mismatch   0x02
static final int synerrcd_cbyte_not_d0   0x03
static final int synerrcd_fbyte_not_supported   0x04
static final int synerrcd_obj_len_less_than_4   0x07
static final int synerrcd_too_big   0x09
static final int synerrcd_obj_len_not_allowed   0x0b
static final int synerrcd_incorrect_extended_len   0x0c
static final int synerrcd_req_obj_not_found   0x0e
static final int synerrcd_too_many   0x0f
static final int synerrcd_dup_obj_present   0x12
static final int synerrcd_invalid_correlator   0x13
static final int synerrcd_req_val_not_found   0x14
static final int synerrcd_dss_cont_less_or_equal_2   0x16
static final int synerrcd_chain_off_same_next_correlator   0x18
static final int synerrcd_chain_off_error_continue   0x1a
static final int synerrcd_invalid_cp_for_cmd   0x1d
static final int prccnvcd_objdss_sent_not_allowed   0x03
static final int prccnvcd_excsat_first_after_conn   0x06
static final int prccnvcd_accsec_secchk_wrong_state   0x11
static final int prccnvcd_rdbnam_mismatch   0x12
static final int svrcod_info   0          information only severity code
static final int svrcod_warning   4       warning severity code
static final int svrcod_error   8         error severity code
static final int svrcod_severe   16       severe error severity code
static final int svrcod_accdmg   32       access damage severity code
static final int svrcod_prmdmg   64       permanent damage severity code
static final int svrcod_sesdmg   128      session damage severity code
//---------------------- security mechanisms ---------------------------
static final int secmec_dcesec   1 		   distributed computing environment security
static final int secmec_usridpwd   3 	   userid and password
static final int secmec_usridonl   4 	   userid only
static final int secmec_usridnwpwd   5      userid  password  and new password
static final int secmec_usrsbspwd   6      userid with substitute password
static final int secmec_usrencpwd   7      userid with encrypted password
static final int secmec_usrssbpwd   8      userid with strong password substitute
static final int secmec_eusridpwd   9      encrpyted userid and password
static final int secmec_eusridnwpwd   10      encrpyted userid and password
//---------------------security check codes ---------------------------
static final int secchkcd_ok   0 		   security info correct and acceptable
static final int secchkcd_notsupported   0x01 	   secmec value not supported
static final int secchkcd_sectknmissing_or_invalid   0x0e 	   sectkn missing or invalid
static final int secchkcd_passwordmissing   0x10 	   password missing
static final int secchkcd_useridmissing   0x12 	   user id missing
static final int secchkcd_useridinvalid   0x13 	   userid invalid
//----------------------type definition names we care about -----------
static final string typdefnam_qtdsqlasc         ascii
static final string typdefnam_qtdsqljvm         java platform
static final string typdefnam_qtdsqlx86          intel x86 platform
//----------------------max sizes for strings in the protocol ---------
static final int max_name   255
static final int rdbnam_len   18    dbname fixed length for sqlam level 6  for level 7
//limit is max_name (255)
static final int prdid_max   8
static final int rdbcolid_len   18
static final int pkgid_len   18
static final int pkgcnstkn_len   8
static final int pkgnamcsn_len   rdbnam_len   rdbcolid_len   pkgid_len
pkgcnstkn_len   2
//---------------------qryblsz min and maximum
static final int qryblksz_min   512
static final int qryblksz_max   10 1024 1024
static final int qryrowset_max   32767
static final int qryrowset_default    1
//--------------------defaults for qryblkctl and maxblkext
static final int qryblkctl_default   lmtblkprc
static final int maxblkext_none   0
static final int maxblkext_default   maxblkext_none
//-------------- qryscrorn - query scroll orientation values
static final int qryscrrel   1 		   relative fetch
static final int qryscrabs   2 		   absolute fetch
static final int qryscraft   3 		   after last row
static final int qryscrbef   4 		   before first row
//---------------outovropt - output override option values
static final int outovrfrs   1  	   output override allowed on first cntqry
static final int outovrany   2  	   output override allowed on any cntqry
//--------------------------xa code points---------------------------
// release conversation
public static final int rlsconv   0x119f
// sync point control reply
public static final int synccrd   0x1248
// xa return value
public static final int xaretval   0x1904
// xa timeout value;
public static final int timeout   0x1907
// new unit of work for xa
public static final int synctype_new_uow   0x09
// end unit of work (sync type).
public static final int synctype_end_uow   0x0b
// prepare to commit (sync type).
public static final int synctype_prepare   0x01
// migrate to resync server sync type
public static final int synctype_migrate   0x02
// commit sync type
public static final int synctype_committed   0x03
// request to commit sync type
public static final int synctype_req_commit   0x05
// request to forget sync type
public static final int synctype_req_forget   0x06
//rollback sync type
public static final int synctype_rollback   0x04
// request sync log information (sync type).
static final int synctype_req_log   0x08
// migrated unit of work sync type
public static final int synctype_migrated   0x0a
//recover sync type
public static final int synctype_indoubt   0x0c
// forget unit of work.
public static final int forget   0x1186
// sync type codepoint
public static final int synctype   0x1187
// xid codepoint
public static final int xid   0x1801
// xa flag codepoint
public static final int xaflags   0x1903
// resync type
public static final int rsynctyp   0x11ea
// sync resync reply
public static final int syncrrd   0x126d
// xa flags
public static final int tmnoflags   0x00000000
// prepared and hueristic complete list
static final int prphrclst   0x1905
// xid count
static final int xidcnt   0x1906
//-----------------------manager code points --------------------------
protected static int  mgr_codepoints
agent
ccsidmgr
cmnappc
cmnsyncpt
cmntcpip
dictionary
rdb
rsyncmgr
secmgr
sqlam
supervisor
syncptmgr
xamgr
protected static final int unknown_manager    1
// hide the default constructor
private codepoint
/**
* given a manager codepoint find it's location in the managers array
*
* @return index into manager array or unknown_manager if not found
*/
protected static int getmanagerindex int manager
for  int i   0  i < mgr_codepoints length  i
if  mgr_codepoints    manager
return i
return unknown_manager
/**
* check if a manager codepoint is a known manager
*
* @return true if known, false otherwise
*/
protected static boolean isknownmanager int manager
for  int i   0  i < codepoint mgr_codepoints length  i
if  manager    codepoint mgr_codepoints
return true
return false