/*
derby - class org.apache.derby.impl.sql.catalog.sysstatementsrowfactory
licensed to the apache software foundation (asf) under one or more
contributor license agreements.  see the notice file distributed with
this work for additional information regarding copyright ownership.
the asf licenses this file to you under the apache license, version 2.0
(the "license"); you may not use this file except in compliance with
the license.  you may obtain a copy of the license at
http://www.apache.org/licenses/license-2.0
unless required by applicable law or agreed to in writing, software
distributed under the license is distributed on an "as is" basis,
without warranties or conditions of any kind, either express or implied.
see the license for the specific language governing permissions and
limitations under the license.
*/
package org apache derby impl sql catalog
import org apache derby iapi reference property
import org apache derby iapi types datatypedescriptor
import org apache derby iapi types sqlvarchar
import org apache derby iapi types typeid
import org apache derby iapi types datavaluedescriptor
import org apache derby iapi store raw rawstorefactory
import org apache derby iapi types typeid
import org apache derby iapi sql dictionary systemcolumn
import org apache derby catalog typedescriptor
import org apache derby iapi types datavaluefactory
import org apache derby iapi types rowlocation
import org apache derby iapi sql dictionary catalogrowfactory
import org apache derby iapi sql dictionary datadescriptorgenerator
import org apache derby iapi sql dictionary datadictionary
import org apache derby iapi sql dictionary schemadescriptor
import org apache derby iapi sql dictionary spsdescriptor
import org apache derby iapi sql dictionary tupledescriptor
import org apache derby iapi sql execute execindexrow
import org apache derby iapi sql execute execrow
import org apache derby iapi sql execute execpreparedstatement
import org apache derby iapi sql execute executionfactory
import org apache derby iapi error standardexception
import org apache derby iapi services monitor monitor
import org apache derby catalog uuid
import org apache derby iapi services uuid uuidfactory
import org apache derby iapi types
import org apache derby iapi services sanity sanitymanager
import java sql timestamp
import java util properties
/**
* factory for creating a sysstatements row.
*
*
* @version 0.1
*/
public class sysstatementsrowfactory extends catalogrowfactory
static	final	string	tablename_string
/* column #s for sysinfo (1 based) */
public	static	final	int		sysstatements_stmtid   1
public	static	final	int		sysstatements_stmtname   2
public	static	final	int		sysstatements_schemaid   3
public	static	final	int		sysstatements_type   4
public	static	final	int		sysstatements_valid   5
public	static	final	int		sysstatements_text   6
public	static	final	int		sysstatements_lastcompiled   7
public	static	final	int		sysstatements_compilation_schemaid   8
public	static	final	int		sysstatements_usingtext   9
public	static	final	int		sysstatements_constantstate   10
public	static	final	int		sysstatements_initially_compilable   11
public	static	final	int		sysstatements_column_count   sysstatements_initially_compilable
public	static	final	int		sysstatements_hidden_column_count   2
protected static final int		sysstatements_index1_id   0
protected static final int		sysstatements_index2_id   1
private static final int indexcolumnpositions
sysstatements_stmtid
sysstatements_stmtname  sysstatements_schemaid
private	static	final	boolean	uniqueness   null
private	static	final	string	uuids
catalog uuid
heap uuid
sysstatements_index1
sysstatements_index2
/////////////////////////////////////////////////////////////////////////////
//
//	constructors
//
/////////////////////////////////////////////////////////////////////////////
public	sysstatementsrowfactory uuidfactory uuidf  executionfactory ef  datavaluefactory dvf
boolean convertidtolower
super uuidf ef dvf convertidtolower
initinfo sysstatements_column_count  tablename_string
indexcolumnpositions  uniqueness  uuids
/////////////////////////////////////////////////////////////////////////////
//
//	methods
//
/////////////////////////////////////////////////////////////////////////////
/**
* make a sysstatements row.
* <p>
* <b>warning</b>: when empty row is true, this method takes
* a snapshot of the spsd and creates a row.  it is imperative
* that that row remain consistent with the descriptor (the
* valid and storablepreparedstatement fields must be in sync).
* if this row is to be written out and valid is true, then
* this call and the insert should be synchronized on the
* spsd. this method has <b>no</b> synchronization.
*
* @param compileme			passed into spsdescriptorimpl.getpreparedstatement().
*							if true, we (re)compile the stmt
* @param spsdescriptor		in-memory tuple to be converted to a disk row.
*
* @return	row suitable for inserting into sysstatements.
*
* @exception   standardexception thrown on failure
*/
public execrow makesysstatementsrow
boolean				compileme
spsdescriptor		spsdescriptor
throws standardexception
datatypedescriptor		dtd
execrow    				row
datavaluedescriptor		col
string					name   null
uuid					uuid   null
string					uuidstr   null
string					suuidstr   null 	   schema
string					compuuidstr   null 	   compilation schema
string					text   null
string					usingtext   null
execpreparedstatement	preparedstatement   null
string					typestr   null
boolean					valid   true
timestamp				time   null
boolean					initiallycompilable   true
if  spsdescriptor    null
name   spsdescriptor getname
uuid   spsdescriptor getuuid
if   uuid    null
uuid   getuuidfactory   createuuid
spsdescriptor setuuid uuid
suuidstr   spsdescriptor getschemadescriptor   getuuid   tostring
uuidstr   uuid tostring
text   spsdescriptor gettext
valid   spsdescriptor isvalid
time   spsdescriptor getcompiletime
typestr   spsdescriptor gettypeasstring
initiallycompilable   spsdescriptor initiallycompilable
preparedstatement   spsdescriptor getpreparedstatement compileme
compuuidstr    spsdescriptor getcompschemaid      null ?
spsdescriptor getcompschemaid   tostring   null
usingtext   spsdescriptor getusingtext
/* build the row to insert */
row   getexecutionfactory   getvaluerow sysstatements_column_count
/* 1st column is stmtid */
row setcolumn 1  new sqlchar uuidstr
/* 2nd column is stmtname */
row setcolumn 2  new sqlvarchar name
/* 3rd column is schemaid */
row setcolumn 3  new sqlchar suuidstr
/* 4th column is type */
row setcolumn 4  new sqlchar typestr
/* 5th column is valid */
row setcolumn 5  dvf getdatavalue valid
/* 6th column is text */
row setcolumn 6  dvf getlongvarchardatavalue text
/* 7th column is lastcompiled */
row setcolumn 7  new sqltimestamp time
/* 8th column is compilationschemaid */
row setcolumn 8  new sqlchar compuuidstr
/* 9th column is usingtext */
row setcolumn 9  dvf getlongvarchardatavalue usingtext
/*
** 10th column is constantstate
**
** constantstate is really a formatable storablepreparedstatement.
*/
row setcolumn 10  dvf getdatavalue preparedstatement
/* 11th column is initially_compilable */
row setcolumn 11  dvf getdatavalue initiallycompilable
return row
///////////////////////////////////////////////////////////////////////////
//
//	abstract methods to be implemented by children of catalogrowfactory
//
///////////////////////////////////////////////////////////////////////////
/**
* make an  tuple descriptor out of a sysstatements row
*
* @param row 					a sysstatements row
* @param parenttupledescriptor	unused
* @param dd 					datadictionary
*
* @return	a  descriptor equivalent to a sysstatements row
*
* @exception   standardexception thrown on failure
*/
public tupledescriptor builddescriptor
execrow					row
tupledescriptor			parenttupledescriptor
datadictionary 			dd
throws standardexception
datavaluedescriptor			col
spsdescriptor				descriptor
string						name
string						text
string						usingtext
uuid						uuid
uuid						compuuid   null
string						uuidstr
uuid						suuid 		   schema
string						suuidstr 	   schema
string						typestr
char						type
boolean						valid
timestamp					time   null
execpreparedstatement		preparedstatement   null
boolean						initiallycompilable
datadescriptorgenerator		ddg   dd getdatadescriptorgenerator
if  sanitymanager debug
sanitymanager assert row ncolumns      sysstatements_column_count
// 1st column is stmtid (uuid - char(36))
col   row getcolumn 1
uuidstr   col getstring
uuid   getuuidfactory   recreateuuid uuidstr
// 2nd column is stmtname (varchar(128))
col   row getcolumn 2
name   col getstring
// 3rd column is schemaid (uuid - char(36))
col   row getcolumn 3
suuidstr   col getstring
suuid   getuuidfactory   recreateuuid suuidstr
// 4th column is type (char(1))
col   row getcolumn 4
type   col getstring   charat 0
if  sanitymanager debug
if   spsdescriptor validtype type
sanitymanager throwassert   type   name
// in soft upgrade mode the plan may not be understand by this engine
// so force a recompile.
if    datadictionaryimpl  dd  readonlyupgrade
valid   false
else
// 5th column is valid (boolean)
col   row getcolumn 5
valid   col getboolean
// 6th column is text (long varchar)
col   row getcolumn 6
text   col getstring
/* 7th column is lastcompiled (timestamp) */
col   row getcolumn 7
time   col gettimestamp new java util gregoriancalendar
// 8th column is compilationschemaid (uuid - char(36))
col   row getcolumn 8
uuidstr   col getstring
if  uuidstr    null
compuuid   getuuidfactory   recreateuuid uuidstr
// 9th column is text (long varchar)
col   row getcolumn 9
usingtext   col getstring
// 10th column is constantstate (com...execpreparedstatement)
// only load the compiled plan if the statement is valid
if  valid
col   row getcolumn 10
preparedstatement    execpreparedstatement  col getobject
// 11th column is initially_compilable (boolean)
col   row getcolumn 11
if   col isnull       initiallycompilable   true
else   initiallycompilable   col getboolean
descriptor   new spsdescriptor dd  name
uuid
suuid
compuuid
type
valid
text
usingtext
time
preparedstatement
initiallycompilable
return descriptor
public execrow makeemptyrow
throws standardexception
return makesysstatementsrow false
spsdescriptor  null
/**
* builds a list of columns suitable for creating this catalog.
* the last column, the serialized statement, is not added
* to the column list.  this is done deliberately to make it
* a 'hidden' column -- one that is not visible to customers,
* but is visible to the system.
*
*
* @return array of systemcolumn suitable for making this catalog.
*/
public systemcolumn buildcolumnlist
/*
** create one less than the number of columns, we
** skip the last one deliberately.
*/
systemcolumn	columnlist   new systemcolumn
// describe columns
columnlist   new systemcolumnimpl
convertidcase     			   name
sysstatements_stmtid 	   column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
36					   maxlength
columnlist
new systemcolumnimpl 		   sql identifier
convertidcase     			   column name
sysstatements_stmtname 	   column number
false				   nullability
columnlist   new systemcolumnimpl
convertidcase     				   name
sysstatements_schemaid 	   column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
36					   maxlength
columnlist
new systemcolumnimpl
convertidcase     				   name
sysstatements_type 	   column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
1					   maxlength
columnlist
new systemcolumnimpl
convertidcase     			   name
sysstatements_valid    column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
1					   maxlength
columnlist
new systemcolumnimpl
convertidcase     				   name
sysstatements_text 	   column number
0 					   precision
0 					   scale
false 				   nullability
datatype
true 				   built in type
typeid longvarchar_maxwidth	   maxlength
columnlist
new systemcolumnimpl
convertidcase     				   name
sysstatements_lastcompiled 	   column number
0 							   precision
0 							   scale
true 						   nullability
datatype
true 						   built in type
typeid timestamp_maxwidth	   maxlength
columnlist   new systemcolumnimpl
convertidcase     				   name
sysstatements_compilation_schemaid 	   column number
0 					   precision
0 					   scale
true 				   nullability
datatype
true 				   built in type
36					   maxlength
columnlist
new systemcolumnimpl
convertidcase     		   name
sysstatements_usingtext    column number
0 					   precision
0 					   scale
true 				   nullability
datatype
true 				   built in type
typeid longvarchar_maxwidth	   maxlength
/*
** this column is deliberately left out.  it
** is effectively 'hidden' from users.  the code
** to create it is left here to demonstrate what
** it really looks like.
*/
//columnlist[9] =
//			new systemcolumnimpl(
//					convertidcase( "constantstate"),			// name
//					sysstatements_constantstate,// column number
//					0,							// precision
//					0,							// scale
//					false,						// nullability
//					execpreparedstatement.class_name,	//datatype
//					false,						// built-in type
//					datatypedescriptor.maximum_width_unknown	// maxlength
//	                );
/*
** this column is also deliberately left out.  it
** is effectively 'hidden' from users.  the code
** to create it is left here to demonstrate what
** it really looks like.
*/
//columnlist[10] =
//			new systemcolumnimpl(
//					convertidcase( "initially_compilable"),			// name
//					sysstatements_initially_compilable,// column number
//					0,					// precision
//					0,					// scale
//					true,				// nullability
//					"boolean",			// datatype
//					true,				// built-in type
//					1					// maxlength
//	                );
return	columnlist
/**
* get the properties associated with creating the heap.
*
* @return the properties associated with creating the heap.
*/
public properties getcreateheapproperties
properties properties   new properties
// keep page size at 2k since most stmts are that size
// anyway
properties put property page_size_parameter
// default properties for system tables:
properties put rawstorefactory page_reserved_space_parameter
properties put rawstorefactory minimum_record_size_parameter
return properties