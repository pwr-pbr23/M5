/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf
import org apache hadoop hive ql exec description
import org apache hadoop hive ql exec udf
import org apache hadoop hive ql udf generic genericudfutils
import org apache hadoop io text
/**
* udfreverse.
*
*/
@description name      value      extended
public class udfreverse extends udf
private final text result   new text
/**
* reverse a portion of an array in-place.
*
* @param arr
*          the array where the data will be reversed.
* @param first
*          the beginning of the portion (inclusive).
* @param last
*          the end of the portion (inclusive).
*/
private void reverse byte arr  int first  int last
for  int i   0  i <  last   first   1    2  i
byte temp   arr
arr   arr
arr   temp
public text evaluate text s
if  s    null
return null
// set() will only allocate memory if the buffer of result is smaller than
// s.getlength() and will never resize the buffer down.
result set s
// now do an in-place reversal in result.getbytes(). first, reverse every
// character, then reverse the whole string.
byte data   result getbytes
int prev   0     the index where the current char starts
for  int i   1  i < result getlength    i
if  genericudfutils isutfstartbyte data
reverse data  prev  i   1
prev   i
reverse data  prev  result getlength     1
reverse data  0  result getlength     1
return result