/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql exec
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql plan exprnodedesc
import org apache hadoop hive ql plan exprnodegenericfuncdesc
import org apache hadoop hive ql udf generic genericudf
import org apache hadoop hive ql udf generic genericudfbasecompare
import org apache hadoop hive ql udf generic genericudfcase
import org apache hadoop hive ql udf generic genericudfwhen
import org apache hadoop hive serde2 objectinspector constantobjectinspector
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorutils
/**
* exprnodegenericfuncevaluator.
*
*/
public class exprnodegenericfuncevaluator extends exprnodeevaluator
private static final log log   logfactory
getlog exprnodegenericfuncevaluator class getname
protected exprnodegenericfuncdesc expr
transient genericudf genericudf
transient object rowobject
transient objectinspector outputoi
transient exprnodeevaluator children
transient genericudf deferredobject deferredchildren
transient boolean iseager
/**
* class to allow deferred evaluation for genericudf.
*/
class deferredexprobject implements genericudf deferredobject
exprnodeevaluator eval
deferredexprobject exprnodeevaluator eval
this eval   eval
public object get   throws hiveexception
return eval evaluate rowobject
/**
* class to force eager evaluation for genericudf in cases where
* it is warranted.
*/
class eagerexprobject implements genericudf deferredobject
exprnodeevaluator eval
transient object obj
eagerexprobject exprnodeevaluator eval
this eval   eval
void evaluate   throws hiveexception
obj   eval evaluate rowobject
public object get   throws hiveexception
return obj
public exprnodegenericfuncevaluator exprnodegenericfuncdesc expr
this expr   expr
children   new exprnodeevaluator
iseager   false
for  int i   0  i < children length  i
exprnodedesc child   expr getchildexprs   get i
exprnodeevaluator nodeevaluator   exprnodeevaluatorfactory get child
children   nodeevaluator
// if we have eager evaluators anywhere below us, then we are eager too.
if  nodeevaluator instanceof exprnodegenericfuncevaluator
if    exprnodegenericfuncevaluator  nodeevaluator  iseager
iseager   true
// base case:  we are eager if a child is stateful
genericudf childudf
exprnodegenericfuncdesc  child  getgenericudf
if  functionregistry isstateful childudf
iseager   true
deferredchildren
new genericudf deferredobject
for  int i   0  i < deferredchildren length  i
if  iseager
deferredchildren   new eagerexprobject children
else
deferredchildren   new deferredexprobject children
@override
public objectinspector initialize objectinspector rowinspector  throws hiveexception
// initialize all children first
objectinspector childrenois   new objectinspector
for  int i   0  i < children length  i
childrenois   children initialize rowinspector
genericudf   expr getgenericudf
if  iseager
genericudf instanceof genericudfcase
genericudf instanceof genericudfwhen
throw new hiveexception
this outputoi   genericudf initializeandfoldconstants childrenois
return this outputoi
@override
public boolean isdeterministic
boolean result   functionregistry isdeterministic genericudf
for  exprnodeevaluator child   children
result   result    child isdeterministic
return result
@override
public object evaluate object row  throws hiveexception
rowobject   row
if  objectinspectorutils isconstantobjectinspector outputoi
isdeterministic
// the output of this udf is constant, so don't even bother evaluating.
return   constantobjectinspector outputoi  getwritableconstantvalue
if  iseager
for  int i   0  i < deferredchildren length  i
eagerexprobject  deferredchildren  evaluate
return genericudf evaluate deferredchildren
/**
* if the genericudf is a base comparison, it returns an integer based on the result of comparing
* the two sides of the udf, like the compareto method in comparable.
*
* if the genericudf is not a base comparison, or there is an error executing the comparison, it
* returns null.
* @param row
* @return the compare results
* @throws hiveexception
*/
public integer compare object row  throws hiveexception
if   expr issortedexpr        genericudf instanceof genericudfbasecompare
for  exprnodeevaluator evaluator  children
if  evaluator instanceof exprnodegenericfuncevaluator
integer comparison     exprnodegenericfuncevaluator  evaluator  compare row
if  comparison    null
return comparison
return null
rowobject   row
if  iseager
for  int i   0  i < deferredchildren length  i
eagerexprobject  deferredchildren  evaluate
return   genericudfbasecompare genericudf  compare deferredchildren