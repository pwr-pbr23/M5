/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
/**
* this file is back-ported from hadoop-0.19, to make sure hive can run
* with hadoop-0.17.
*/
package org apache hadoop hive serde2 io
import java io datainput
import java io dataoutput
import java io ioexception
import org apache hadoop io writablecomparable
import org apache hadoop io writablecomparator
/**
* writable for double values.
*/
public class doublewritable implements writablecomparable
private double value   0 0
public doublewritable
public doublewritable double value
set value
public void readfields datainput in  throws ioexception
value   in readdouble
public void write dataoutput out  throws ioexception
out writedouble value
public void set double value
this value   value
public double get
return value
/**
* returns true iff <code>o</code> is a doublewritable with the same value.
*/
@override
public boolean equals object o
if    o instanceof doublewritable
return false
doublewritable other    doublewritable  o
return value    other value
@override
public int hashcode
long v   double doubletolongbits value
return  int   v ^  v >>> 32
public int compareto object o
doublewritable other    doublewritable  o
return  value < other value ?  1    value    other value ? 0   1
@override
public string tostring
return double tostring value
/** a comparator optimized for doublewritable. */
public static class comparator extends writablecomparator
public comparator
super doublewritable class
@override
public int compare byte b1  int s1  int l1  byte b2  int s2  int l2
double thisvalue   readdouble b1  s1
double thatvalue   readdouble b2  s2
return  thisvalue < thatvalue ?  1    thisvalue    thatvalue ? 0   1
static      register this comparator
writablecomparator define doublewritable class  new comparator