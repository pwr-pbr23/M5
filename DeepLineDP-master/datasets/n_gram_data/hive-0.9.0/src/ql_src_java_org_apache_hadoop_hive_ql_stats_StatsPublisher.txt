/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql stats
import java util map
import org apache hadoop conf configuration
/**
* an interface for any possible implementation for publishing statics.
*/
public interface statspublisher
/**
* this method does the necessary one-time initializations, possibly creating the tables and
* database (if not exist).
* this method is usually called in the hive client side rather than by the mappers/reducers
* so that it is initialized only once.
* @param hconf hiveconf that contains the configurations parameters used to connect to
* intermediate stats database.
* @return true if initialization is successful, false otherwise.
*/
public boolean init configuration hconf
/**
* this method connects to the intermediate statistics database.
* @param hconf hiveconf that contains the connection parameters.
* @return true if connection is successful, false otherwise.
*/
public boolean connect configuration hconf
/**
* this method publishes a given statistic into a disk storage, possibly hbase or mysql.
*
* @param fileid
*          : a string identification the statistics to be published by all mappers/reducers
*          and then gathered. the statid is unique per output partition per task, e.g.,:
*          the output directory name (uniq per filesinkoperator) +
*          the partition specs (only for dynamic partitions) +
*          taskid (last component of task file)
* @param stats
*          : a map containing key-value pairs, where key is a string representing the statistic
*          to be published,
*          and value is a string representing the value for the given statistic
* @return true if successful, false otherwise
*/
public boolean publishstat string fileid  map<string  string> stats
/**
* this method closes the connection to the temporary storage.
*/
public boolean closeconnection