/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql index
import java util linkedhashmap
import java util list
import java util map
import java util set
import org apache hadoop hive conf hiveconf
import org apache hadoop hive metastore api fieldschema
import org apache hadoop hive metastore api index
import org apache hadoop hive metastore api storagedescriptor
import org apache hadoop hive metastore api table
import org apache hadoop hive ql exec task
import org apache hadoop hive ql hooks readentity
import org apache hadoop hive ql hooks writeentity
import org apache hadoop hive ql index compact compactindexhandler
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql metadata hiveutils
import org apache hadoop hive ql metadata virtualcolumn
import org apache hadoop hive ql optimizer indexutils
import org apache hadoop hive ql plan partitiondesc
/**
* index handler for indexes that have aggregate functions on indexed columns.
*
*/
public class aggregateindexhandler extends compactindexhandler
private static index index   null
@override
public void analyzeindexdefinition table basetable  index idx
table indextable  throws hiveexception
index   idx
storagedescriptor storagedesc   index getsd
if  this usesindextable      indextable    null
storagedescriptor indextablesd   storagedesc deepcopy
list<fieldschema> indextblcols   indextablesd getcols
fieldschema bucketfilename   new fieldschema
indextblcols add bucketfilename
fieldschema offsets   new fieldschema
indextblcols add offsets
map<string  string> paralist   index getparameters
if paralist    null    paralist containskey
string propvalue   paralist get
if propvalue contains
string aggfuncs   propvalue split
for  int i   0  i < aggfuncs length  i
createaggregationfunction indextblcols  aggfuncs
else
createaggregationfunction indextblcols  propvalue
indextable setsd indextablesd
private void createaggregationfunction list<fieldschema> indextblcols  string property
string aggfunccol   property split
string funcname   aggfunccol
string colname   aggfunccol substring 0  aggfunccol length     1
if colname contains
colname   colname replace
fieldschema aggregationfunction
new fieldschema     funcname       colname
indextblcols add aggregationfunction
@override
protected task<?> getindexbuildermapredtask set<readentity> inputs
set<writeentity> outputs
list<fieldschema> indexfield  boolean partitioned
partitiondesc indextblpartdesc  string indextablename
partitiondesc basetablepartdesc  string basetablename  string dbname
string indexcols   hiveutils getunparsedcolumnnamesfromfieldschema indexfield
//form a new insert overwrite query.
stringbuilder command  new stringbuilder
map<string  string> partspec   indextblpartdesc getpartspec
command append     hiveutils unparseidentifier indextablename
if  partitioned    indextblpartdesc    null
command append
list<string> ret   getpartkvpairstringarray  linkedhashmap<string  string>  partspec
for  int i   0  i < ret size    i
string partkv   ret get i
command append partkv
if  i < ret size     1
command append
command append
command append
command append indexcols
command append
command append virtualcolumn filename getname
command append
command append
command append virtualcolumn blockoffset getname
command append
command append
assert indexfield size    1
map<string  string> paralist   index getparameters
if paralist    null    paralist containskey
command append paralist get
command append     hiveutils unparseidentifier basetablename
map<string  string> basepartspec   basetablepartdesc getpartspec
if basepartspec    null
command append
list<string> pkv   getpartkvpairstringarray  linkedhashmap<string  string>  basepartspec
for  int i   0  i < pkv size    i
string partkv   pkv get i
command append partkv
if  i < pkv size     1
command append
command append
command append indexcols       virtualcolumn filename getname
hiveconf builderconf   new hiveconf getconf    aggregateindexhandler class
builderconf setboolvar hiveconf confvars hivemergemapfiles  false
builderconf setboolvar hiveconf confvars hivemergemapredfiles  false
task<?> roottask   indexutils createroottask builderconf  inputs  outputs
command   linkedhashmap<string  string>  partspec  indextablename  dbname
return roottask