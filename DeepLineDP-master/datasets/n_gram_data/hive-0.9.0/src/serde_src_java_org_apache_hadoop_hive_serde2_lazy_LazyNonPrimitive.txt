/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 lazy
import org apache hadoop hive serde2 objectinspector objectinspector
/**
* lazyprimitive stores a primitive object in a lazyobject.
*/
public abstract class lazynonprimitive<oi extends objectinspector> extends
lazyobject<oi>
protected bytearrayref bytes
protected int start
protected int length
/**
* create a lazynonprimitive object with the specified objectinspector.
*
* @param oi
*          the objectinspector would have to have a hierarchy of
*          lazyobjectinspectors with the leaf nodes being
*          writableobjectinspectors. it's used both for accessing the type
*          hierarchy of the complex object, as well as getting meta
*          information (separator, nullsequence, etc) when parsing the lazy
*          object.
*/
protected lazynonprimitive oi oi
super oi
bytes   null
start   0
length   0
@override
public void init bytearrayref bytes  int start  int length
if  bytes    null
throw new runtimeexception
this bytes   bytes
this start   start
this length   length
assert start >  0
assert start   length <  bytes getdata   length
@override
public object getobject
return this
@override
public int hashcode
return lazyutils hashbytes bytes getdata    start  length