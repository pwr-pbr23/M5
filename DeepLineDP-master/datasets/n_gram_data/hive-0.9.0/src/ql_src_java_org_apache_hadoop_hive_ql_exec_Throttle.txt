/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql exec
import java io ioexception
import java io inputstream
import java net url
import java util regex pattern
import org apache commons logging log
import org apache hadoop io ioutils
import org apache hadoop mapred jobconf
/**
* intelligence to make clients wait if the cluster is in a bad state.
*/
public final class throttle
// the percentage of maximum allocated memory that triggers gc
// on job tracker. this could be overridden thru the jobconf.
// the default is such that there is no throttling.
private static final int default_memory_gc_percent   100
// sleep this many seconds between each retry.
// this could be overridden thru the jobconf.
private static final int default_retry_period   60
/**
* fetch http://tracker.om:/gc.jsp?threshold=period.
*/
public static void checkjobtracker jobconf conf  log log
try
byte buffer   new byte
int threshold   conf getint    default_memory_gc_percent
int retry   conf getint    default_retry_period
// if the threshold is 100 percent, then there is no throttling
if  threshold    100
return
// this is the job tracker url
string tracker   jobtrackerurlresolver geturl conf        threshold
while  true
// read in the first 1k characters from the url
url url   new url tracker
log debug     tracker
inputstream in   null
try
in   url openstream
in read buffer
in close
in   null
finally
ioutils closestream in
string fetchstring   new string buffer
// fetch the xml tag <dogc>xxx</dogc>
pattern dowait   pattern compile    pattern case_insensitive
pattern dotall   pattern multiline
string results   dowait split fetchstring
if  results length    2
throw new ioexception
url       fetchstring
dowait   pattern compile    pattern case_insensitive
pattern dotall   pattern multiline
results   dowait split results
if  results length < 1
throw new ioexception
url       fetchstring
// if the jobtracker signalled that the threshold is not exceeded,
// then we return immediately.
if  results trim   comparetoignorecase       0
return
// the jobtracker has exceeded its threshold and is doing a gc.
// the client has to wait and retry.
log warn
retry
thread sleep retry   1000l
catch  exception e
log warn     e
private throttle
// prevent instantiation