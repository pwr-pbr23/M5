/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 columnar
import java util arraylist
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive serde2 lazy bytearrayref
import org apache hadoop hive serde2 lazy lazyfactory
import org apache hadoop hive serde2 lazy lazyobjectbase
import org apache hadoop hive serde2 lazy lazyutils
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop io text
/**
* columnarstruct is different from lazystruct in that columnarstruct's field
* object get parsed at its initialize time when call
* {@link #init(bytesrefarraywritable cols)}, while lazystruct parse fields in a
* lazy way.
*
*/
public class columnarstruct extends columnarstructbase
private static final log log   logfactory getlog columnarstruct class
text nullsequence
int lengthnullsequence
/**
* construct a columnarstruct object with the typeinfo. it creates the first
* level object at the first place
*
* @param oi
*          the objectinspector representing the type of this lazystruct.
*/
public columnarstruct objectinspector oi
this oi  null  null
/**
* construct a columnarstruct object with the typeinfo. it creates the first
* level object at the first place
*
* @param oi
*          the objectinspector representing the type of this lazystruct.
* @param notskippedcolumnids
*          the column ids that should not be skipped
*/
public columnarstruct objectinspector oi
arraylist<integer> notskippedcolumnids  text nullsequence
super oi  notskippedcolumnids
if  nullsequence    null
this nullsequence   nullsequence
this lengthnullsequence   nullsequence getlength
@override
protected int getlength objectinspector objectinspector  bytearrayref cachedbytearrayref
int start  int fieldlen
if  fieldlen    lengthnullsequence
byte data   cachedbytearrayref getdata
if  lazyutils compare data  start  fieldlen
nullsequence getbytes    0  lengthnullsequence     0
return  1
return fieldlen
@override
protected lazyobjectbase createlazyobjectbase objectinspector objectinspector
return lazyfactory createlazyobject objectinspector