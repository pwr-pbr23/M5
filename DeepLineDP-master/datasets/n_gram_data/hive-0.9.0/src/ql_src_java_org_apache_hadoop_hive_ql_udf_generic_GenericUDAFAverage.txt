/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import java util arraylist
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive ql exec description
import org apache hadoop hive ql exec udfargumenttypeexception
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql parse semanticexception
import org apache hadoop hive serde2 io doublewritable
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorfactory
import org apache hadoop hive serde2 objectinspector primitiveobjectinspector
import org apache hadoop hive serde2 objectinspector structfield
import org apache hadoop hive serde2 objectinspector structobjectinspector
import org apache hadoop hive serde2 objectinspector primitive doubleobjectinspector
import org apache hadoop hive serde2 objectinspector primitive longobjectinspector
import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorfactory
import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorutils
import org apache hadoop hive serde2 typeinfo primitivetypeinfo
import org apache hadoop hive serde2 typeinfo typeinfo
import org apache hadoop io longwritable
import org apache hadoop util stringutils
/**
* genericudafaverage.
*
*/
@description name      value
public class genericudafaverage extends abstractgenericudafresolver
static final log log   logfactory getlog genericudafaverage class getname
@override
public genericudafevaluator getevaluator typeinfo parameters
throws semanticexception
if  parameters length    1
throw new udfargumenttypeexception parameters length   1
if  parameters getcategory      objectinspector category primitive
throw new udfargumenttypeexception 0
parameters gettypename
switch    primitivetypeinfo  parameters  getprimitivecategory
case byte
case short
case int
case long
case float
case double
case string
case timestamp
return new genericudafaverageevaluator
case boolean
default
throw new udfargumenttypeexception 0
parameters gettypename
/**
* genericudafaverageevaluator.
*
*/
public static class genericudafaverageevaluator extends genericudafevaluator
// for partial1 and complete
primitiveobjectinspector inputoi
// for partial2 and final
structobjectinspector soi
structfield countfield
structfield sumfield
longobjectinspector countfieldoi
doubleobjectinspector sumfieldoi
// for partial1 and partial2
object partialresult
// for final and complete
doublewritable result
@override
public objectinspector init mode m  objectinspector parameters
throws hiveexception
assert  parameters length    1
super init m  parameters
// init input
if  mode    mode partial1    mode    mode complete
inputoi    primitiveobjectinspector  parameters
else
soi    structobjectinspector  parameters
countfield   soi getstructfieldref
sumfield   soi getstructfieldref
countfieldoi    longobjectinspector  countfield
getfieldobjectinspector
sumfieldoi    doubleobjectinspector  sumfield getfieldobjectinspector
// init output
if  mode    mode partial1    mode    mode partial2
// the output of a partial aggregation is a struct containing
// a "long" count and a "double" sum.
arraylist<objectinspector> foi   new arraylist<objectinspector>
foi add primitiveobjectinspectorfactory writablelongobjectinspector
foi add primitiveobjectinspectorfactory writabledoubleobjectinspector
arraylist<string> fname   new arraylist<string>
fname add
fname add
partialresult   new object
partialresult   new longwritable 0
partialresult   new doublewritable 0
return objectinspectorfactory getstandardstructobjectinspector fname
foi
else
result   new doublewritable 0
return primitiveobjectinspectorfactory writabledoubleobjectinspector
static class averageagg implements aggregationbuffer
long count
double sum
@override
public aggregationbuffer getnewaggregationbuffer   throws hiveexception
averageagg result   new averageagg
reset result
return result
@override
public void reset aggregationbuffer agg  throws hiveexception
averageagg myagg    averageagg  agg
myagg count   0
myagg sum   0
boolean warned   false
@override
public void iterate aggregationbuffer agg  object parameters
throws hiveexception
assert  parameters length    1
object p   parameters
if  p    null
averageagg myagg    averageagg  agg
try
double v   primitiveobjectinspectorutils getdouble p  inputoi
myagg count
myagg sum    v
catch  numberformatexception e
if   warned
warned   true
log warn getclass   getsimplename
stringutils stringifyexception e
log warn getclass   getsimplename
@override
public object terminatepartial aggregationbuffer agg  throws hiveexception
averageagg myagg    averageagg  agg
longwritable  partialresult  set myagg count
doublewritable  partialresult  set myagg sum
return partialresult
@override
public void merge aggregationbuffer agg  object partial
throws hiveexception
if  partial    null
averageagg myagg    averageagg  agg
object partialcount   soi getstructfielddata partial  countfield
object partialsum   soi getstructfielddata partial  sumfield
myagg count    countfieldoi get partialcount
myagg sum    sumfieldoi get partialsum
@override
public object terminate aggregationbuffer agg  throws hiveexception
averageagg myagg    averageagg  agg
if  myagg count    0
return null
else
result set myagg sum   myagg count
return result