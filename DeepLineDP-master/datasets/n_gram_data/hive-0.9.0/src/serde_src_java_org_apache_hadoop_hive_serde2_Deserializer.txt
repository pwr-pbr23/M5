/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2
import java util properties
import org apache hadoop conf configuration
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop io writable
/**
* hivedeserializer is used to deserialize the data from hadoop writable to a
* custom java object that can be of any type that the developer wants.
*
* hivedeserializer also provides the objectinspector which can be used to
* inspect the internal structure of the object (that is returned by deserialize
* function).
*
*/
public interface deserializer
/**
* initialize the hivedeserializer.
*
* @param conf
*          system properties
* @param tbl
*          table properties
* @throws serdeexception
*/
void initialize configuration conf  properties tbl  throws serdeexception
/**
* deserialize an object out of a writable blob. in most cases, the return
* value of this function will be constant since the function will reuse the
* returned object. if the client wants to keep a copy of the object, the
* client needs to clone the returned value by calling
* objectinspectorutils.getstandardobject().
*
* @param blob
*          the writable object containing a serialized object
* @return a java object representing the contents in the blob.
*/
object deserialize writable blob  throws serdeexception
/**
* get the object inspector that can be used to navigate through the internal
* structure of the object returned from deserialize(...).
*/
objectinspector getobjectinspector   throws serdeexception
/**
* returns statistics collected when serializing
*/
serdestats getserdestats