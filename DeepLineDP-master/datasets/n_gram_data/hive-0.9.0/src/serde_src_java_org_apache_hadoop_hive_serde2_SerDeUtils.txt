/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2
import java util arraylist
import java util list
import java util map
import java util concurrent concurrenthashmap
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive common javautils
import org apache hadoop hive serde2 objectinspector listobjectinspector
import org apache hadoop hive serde2 objectinspector mapobjectinspector
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector primitiveobjectinspector
import org apache hadoop hive serde2 objectinspector standardstructobjectinspector
import org apache hadoop hive serde2 objectinspector structfield
import org apache hadoop hive serde2 objectinspector structobjectinspector
import org apache hadoop hive serde2 objectinspector unionobjectinspector
import org apache hadoop hive serde2 objectinspector primitive binaryobjectinspector
import org apache hadoop hive serde2 objectinspector primitive booleanobjectinspector
import org apache hadoop hive serde2 objectinspector primitive byteobjectinspector
import org apache hadoop hive serde2 objectinspector primitive doubleobjectinspector
import org apache hadoop hive serde2 objectinspector primitive floatobjectinspector
import org apache hadoop hive serde2 objectinspector primitive intobjectinspector
import org apache hadoop hive serde2 objectinspector primitive longobjectinspector
import org apache hadoop hive serde2 objectinspector primitive shortobjectinspector
import org apache hadoop hive serde2 objectinspector primitive stringobjectinspector
import org apache hadoop hive serde2 objectinspector primitive timestampobjectinspector
import org apache hadoop io byteswritable
import org apache hadoop io text
/**
* serdeutils.
*
*/
public final class serdeutils
public static final char quote
public static final char colon
public static final char comma
public static final string lbracket
public static final string rbracket
public static final string lbrace
public static final string rbrace
private static concurrenthashmap<string  class<?>> serdes
new concurrenthashmap<string  class<?>>
public static final log log   logfactory getlog serdeutils class getname
public static void registerserde string name  class<?> serde
if  serdes containskey name
log warn     name
return
serdes put name  serde
public static deserializer lookupdeserializer string name  throws serdeexception
class<?> c
if  serdes containskey name
c   serdes get name
else
try
c   class forname name  true  javautils getclassloader
catch  classnotfoundexception e
throw new serdeexception     name
try
return  deserializer  c newinstance
catch  exception e
throw new serdeexception e
private static list<string> nativeserdenames   new arraylist<string>
static
nativeserdenames
add org apache hadoop hive serde2 dynamic_type dynamicserde class
getname
nativeserdenames
add org apache hadoop hive serde2 metadatatypedcolumnsetserde class
getname
// for backward compatibility
nativeserdenames add
nativeserdenames
add org apache hadoop hive serde2 lazy lazysimpleserde class getname
nativeserdenames add org apache hadoop hive serde2 columnar columnarserde class getname
public static boolean shouldgetcolsfromserde string serde
return  serde    null      nativeserdenames contains serde
private static boolean initcoreserdes   registercoreserdes
protected static boolean registercoreserdes
// eagerly load serdes so they will register their symbolic names even on
// lazy loading jvms
try
// loading these classes will automatically register the short names
class
forname org apache hadoop hive serde2 metadatatypedcolumnsetserde class
getname
class forname org apache hadoop hive serde2 lazy lazysimpleserde class
getname
class
forname org apache hadoop hive serde2 thrift thriftdeserializer class
getname
catch  classnotfoundexception e
throw new runtimeexception
e
return true
/**
* escape a string in json format.
*/
public static string escapestring string str
int length   str length
stringbuilder escape   new stringbuilder length   16
for  int i   0  i < length    i
char c   str charat i
switch  c
case
case
escape append
escape append c
break
case
escape append
escape append
break
case
escape append
escape append
break
case
escape append
escape append
break
case
escape append
escape append
break
case
escape append
escape append
break
default
// control characeters! according to json rfc u0020
if  c <
string hex   integer tohexstring c
escape append
escape append
for  int j   4  j > hex length      j
escape append
escape append hex
else
escape append c
break
return  escape tostring
public static string lightescapestring string str
int length   str length
stringbuilder escape   new stringbuilder length   16
for  int i   0  i < length    i
char c   str charat i
switch  c
case
escape append
escape append
break
case
escape append
escape append
break
case
escape append
escape append
break
default
escape append c
break
return  escape tostring
public static string getjsonstring object o  objectinspector oi
stringbuilder sb   new stringbuilder
buildjsonstring sb  o  oi
return sb tostring
static void buildjsonstring stringbuilder sb  object o  objectinspector oi
switch  oi getcategory
case primitive
primitiveobjectinspector poi    primitiveobjectinspector  oi
if  o    null
sb append
else
switch  poi getprimitivecategory
case boolean
boolean b     booleanobjectinspector  poi  get o
sb append b ?
break
case byte
sb append   byteobjectinspector  poi  get o
break
case short
sb append   shortobjectinspector  poi  get o
break
case int
sb append   intobjectinspector  poi  get o
break
case long
sb append   longobjectinspector  poi  get o
break
case float
sb append   floatobjectinspector  poi  get o
break
case double
sb append   doubleobjectinspector  poi  get o
break
case string
sb append
sb append escapestring   stringobjectinspector  poi
getprimitivejavaobject o
sb append
break
case timestamp
sb append
sb append   timestampobjectinspector  poi
getprimitivewritableobject o
sb append
break
case binary
byteswritable bw     binaryobjectinspector  oi  getprimitivewritableobject o
text txt   new text
txt set bw getbytes    0  bw getlength
sb append txt tostring
break
default
throw new runtimeexception
poi getprimitivecategory
break
case list
listobjectinspector loi    listobjectinspector  oi
objectinspector listelementobjectinspector   loi
getlistelementobjectinspector
list<?> olist   loi getlist o
if  olist    null
sb append
else
sb append lbracket
for  int i   0  i < olist size    i
if  i > 0
sb append comma
buildjsonstring sb  olist get i   listelementobjectinspector
sb append rbracket
break
case map
mapobjectinspector moi    mapobjectinspector  oi
objectinspector mapkeyobjectinspector   moi getmapkeyobjectinspector
objectinspector mapvalueobjectinspector   moi
getmapvalueobjectinspector
map<?  ?> omap   moi getmap o
if  omap    null
sb append
else
sb append lbrace
boolean first   true
for  object entry   omap entryset
if  first
first   false
else
sb append comma
map entry<?  ?> e    map entry<?  ?>  entry
buildjsonstring sb  e getkey    mapkeyobjectinspector
sb append colon
buildjsonstring sb  e getvalue    mapvalueobjectinspector
sb append rbrace
break
case struct
structobjectinspector soi    structobjectinspector  oi
list<? extends structfield> structfields   soi getallstructfieldrefs
if  o    null
sb append
else
sb append lbrace
for  int i   0  i < structfields size    i
if  i > 0
sb append comma
sb append quote
sb append structfields get i  getfieldname
sb append quote
sb append colon
buildjsonstring sb  soi getstructfielddata o  structfields get i
structfields get i  getfieldobjectinspector
sb append rbrace
break
case union
unionobjectinspector uoi    unionobjectinspector  oi
if  o    null
sb append
else
sb append lbrace
sb append uoi gettag o
sb append colon
buildjsonstring sb  uoi getfield o
uoi getobjectinspectors   get uoi gettag o
sb append rbrace
break
default
throw new runtimeexception
/**
* return false though element is null if nullsafe flag is true for that
*/
public static boolean hasanynullobject list o  standardstructobjectinspector loi
boolean nullsafes
list<? extends structfield> fields   loi getallstructfieldrefs
for  int i   0  i < o size   i
if   nullsafes    null     nullsafes
hasanynullobject o get i   fields get i  getfieldobjectinspector
return true
return false
/**
* true if object passed is representing null object.
*
* @param o the object
* @param oi the objectinspector
*
* @return true if the object passed is representing null object
*         false otherwise
*/
public static boolean hasanynullobject object o  objectinspector oi
switch  oi getcategory
case primitive
if  o    null
return true
return false
case list
listobjectinspector loi    listobjectinspector  oi
objectinspector listelementobjectinspector   loi
getlistelementobjectinspector
list<?> olist   loi getlist o
if  olist    null
return true
else
// there are no elements in the list
if  olist size      0
return false
// if all the elements are representing null, then return true
for  int i   0  i < olist size    i
if  hasanynullobject olist get i   listelementobjectinspector
return true
return false
case map
mapobjectinspector moi    mapobjectinspector  oi
objectinspector mapkeyobjectinspector   moi getmapkeyobjectinspector
objectinspector mapvalueobjectinspector   moi
getmapvalueobjectinspector
map<?  ?> omap   moi getmap o
if  omap    null
return true
else
// there are no elements in the map
if  omap entryset   size      0
return false
// if all the entries of map are representing null, then return true
for  map entry<?  ?> entry   omap entryset
if  hasanynullobject entry getkey    mapkeyobjectinspector
hasanynullobject entry getvalue    mapvalueobjectinspector
return true
return false
case struct
structobjectinspector soi    structobjectinspector  oi
list<? extends structfield> structfields   soi getallstructfieldrefs
if  o    null
return true
else
// there are no fields in the struct
if  structfields size      0
return false
// if any the fields of struct are representing null, then return true
for  int i   0  i < structfields size    i
if  hasanynullobject soi getstructfielddata o  structfields get i
structfields get i  getfieldobjectinspector
return true
return false
case union
unionobjectinspector uoi    unionobjectinspector  oi
if  o    null
return true
else
// there are no elements in the union
if  uoi getobjectinspectors   size      0
return false
return hasanynullobject uoi getfield o
uoi getobjectinspectors   get uoi gettag o
default
throw new runtimeexception
private serdeutils
// prevent instantiation