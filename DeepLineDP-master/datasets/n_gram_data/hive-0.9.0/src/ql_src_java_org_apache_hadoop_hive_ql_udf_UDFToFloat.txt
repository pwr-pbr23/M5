/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf
import org apache hadoop hive ql exec udf
import org apache hadoop hive serde2 io bytewritable
import org apache hadoop hive serde2 io doublewritable
import org apache hadoop hive serde2 io shortwritable
import org apache hadoop hive serde2 io timestampwritable
import org apache hadoop io booleanwritable
import org apache hadoop io floatwritable
import org apache hadoop io intwritable
import org apache hadoop io longwritable
import org apache hadoop io nullwritable
import org apache hadoop io text
/**
* udftofloat.
*
*/
public class udftofloat extends udf
private floatwritable floatwritable   new floatwritable
public udftofloat
/**
* convert from void to a float. this is called for cast(... as float)
*
* @param i
*          the void value to convert
* @return floatwritable
*/
public floatwritable evaluate nullwritable i
return null
/**
* convert from boolean to a float. this is called for cast(... as float)
*
* @param i
*          the boolean value to convert
* @return floatwritable
*/
public floatwritable evaluate booleanwritable i
if  i    null
return null
else
floatwritable set i get   ?  float  1 0    float  0 0
return floatwritable
/**
* convert from byte to a float. this is called for cast(... as float)
*
* @param i
*          the byte value to convert
* @return floatwritable
*/
public floatwritable evaluate bytewritable i
if  i    null
return null
else
floatwritable set i get
return floatwritable
/**
* convert from short to a float. this is called for cast(... as float)
*
* @param i
*          the short value to convert
* @return floatwritable
*/
public floatwritable evaluate shortwritable i
if  i    null
return null
else
floatwritable set i get
return floatwritable
/**
* convert from integer to a float. this is called for cast(... as float)
*
* @param i
*          the integer value to convert
* @return floatwritable
*/
public floatwritable evaluate intwritable i
if  i    null
return null
else
floatwritable set i get
return floatwritable
/**
* convert from long to a float. this is called for cast(... as float)
*
* @param i
*          the long value to convert
* @return floatwritable
*/
public floatwritable evaluate longwritable i
if  i    null
return null
else
floatwritable set i get
return floatwritable
/**
* convert from double to a float. this is called for cast(... as float)
*
* @param i
*          the double value to convert
* @return floatwritable
*/
public floatwritable evaluate doublewritable i
if  i    null
return null
else
floatwritable set  float  i get
return floatwritable
/**
* convert from string to a float. this is called for cast(... as float)
*
* @param i
*          the string value to convert
* @return floatwritable
*/
public floatwritable evaluate text i
if  i    null
return null
else
try
floatwritable set float valueof i tostring
return floatwritable
catch  numberformatexception e
// mysql returns 0 if the string is not a well-formed numeric value.
// but we decided to return null instead, which is more conservative.
return null
public floatwritable evaluate timestampwritable i
if  i    null
return null
else
try
floatwritable set  float  i getdouble
return floatwritable
catch  numberformatexception e
// mysql returns 0 if the string is not a well-formed numeric value.
// but we decided to return null instead, which is more conservative.
return null