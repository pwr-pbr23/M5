/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql parse
import java io filenotfoundexception
import java io ioexception
import java io outputstream
import java io serializable
import java net uri
import java util list
import javax xml parsers parserconfigurationexception
import javax xml transform transformerexception
import org antlr runtime tree tree
import org apache hadoop fs filestatus
import org apache hadoop fs filesystem
import org apache hadoop fs path
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql exec task
import org apache hadoop hive ql exec taskfactory
import org apache hadoop hive ql hooks readentity
import org apache hadoop hive ql hooks writeentity
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql metadata partition
import org apache hadoop hive ql metadata table
import org apache hadoop hive ql plan copywork
import org apache thrift texception
import org apache thrift tserializer
import org apache thrift protocol tjsonprotocol
import org w3c dom document
import org w3c dom element
/**
* exportsemanticanalyzer.
*
*/
public class exportsemanticanalyzer extends basesemanticanalyzer
public exportsemanticanalyzer hiveconf conf  throws semanticexception
super conf
@override
public void analyzeinternal astnode ast  throws semanticexception
tree tabletree   ast getchild 0
tree totree   ast getchild 1
// initialize export path
string tmppath   stripquotes totree gettext
uri touri   eximutil getvalidateduri conf  tmppath
// initialize source table/partition
tablespec ts   new tablespec db  conf   astnode  tabletree  false  true
eximutil validatetable ts tablehandle
try
filesystem fs   filesystem get touri  conf
path topath   new path touri getscheme    touri getauthority    touri getpath
try
filestatus tgt   fs getfilestatus topath
// target exists
if   tgt isdir
throw new semanticexception errormsg invalid_path getmsg ast
touri
else
filestatus files   fs liststatus topath
if  files    null
throw new semanticexception errormsg invalid_path getmsg ast
touri
catch  filenotfoundexception e
catch  ioexception e
throw new semanticexception errormsg invalid_path getmsg ast   e
list<partition> partitions   null
try
partitions   null
if  ts tablehandle ispartitioned
partitions    ts partitions    null  ? ts partitions   db getpartitions ts tablehandle
string tmpfile   ctx getlocaltmpfileuri
path path   new path tmpfile
eximutil createexportdump filesystem getlocal conf   path  ts tablehandle  partitions
task<? extends serializable> rtask   taskfactory get new copywork
path tostring    touri tostring    false   conf
roottasks add rtask
log debug     path tostring
touri tostring
catch  exception e
throw new semanticexception
errormsg generic_error
getmsg     e
if  ts tablehandle ispartitioned
for  partition partition   partitions
uri fromuri   partition getdatalocation
path topartpath   new path touri tostring    partition getname
task<? extends serializable> rtask   taskfactory get
new copywork fromuri tostring    topartpath tostring    false
conf
roottasks add rtask
inputs add new readentity partition
else
uri fromuri   ts tablehandle getdatalocation
path todatapath   new path touri tostring
task<? extends serializable> rtask   taskfactory get new copywork
fromuri tostring    todatapath tostring    false   conf
roottasks add rtask
inputs add new readentity ts tablehandle
outputs add new writeentity touri tostring
touri getscheme   equals    ? true   false