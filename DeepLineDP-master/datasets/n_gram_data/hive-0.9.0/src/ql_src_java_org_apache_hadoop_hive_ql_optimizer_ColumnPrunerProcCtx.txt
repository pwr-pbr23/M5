/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql optimizer
import java io serializable
import java util arraylist
import java util hashmap
import java util list
import java util map
import org apache hadoop hive ql exec commonjoinoperator
import org apache hadoop hive ql exec operator
import org apache hadoop hive ql exec selectoperator
import org apache hadoop hive ql exec utilities
import org apache hadoop hive ql lib nodeprocessorctx
import org apache hadoop hive ql parse opparsecontext
import org apache hadoop hive ql parse semanticexception
import org apache hadoop hive ql plan exprnodedesc
import org apache hadoop hive ql plan selectdesc
/**
* this class implements the processor context for column pruner.
*/
public class columnprunerprocctx implements nodeprocessorctx
private final map<operator<? extends serializable>  list<string>> prunedcollists
private final hashmap<operator<? extends serializable>  opparsecontext> optoparsectxmap
private final map<commonjoinoperator  map<byte  list<string>>> joinprunedcollists
public columnprunerprocctx
hashmap<operator<? extends serializable>  opparsecontext> optoparsecontextmap
prunedcollists   new hashmap<operator<? extends serializable>  list<string>>
optoparsectxmap   optoparsecontextmap
joinprunedcollists   new hashmap<commonjoinoperator  map<byte  list<string>>>
public map<commonjoinoperator  map<byte  list<string>>> getjoinprunedcollists
return joinprunedcollists
/**
* @return the prunedcollists
*/
public list<string> getprunedcollist operator<? extends serializable> op
return prunedcollists get op
public hashmap<operator<? extends serializable>  opparsecontext> getoptoparsectxmap
return optoparsectxmap
public map<operator<? extends serializable>  list<string>> getprunedcollists
return prunedcollists
/**
* creates the list of internal column names(these names are used in the
* rowresolver and are different from the external column names) that are
* needed in the subtree. these columns eventually have to be selected from
* the table scan.
*
* @param curop
*          the root of the operator subtree.
* @return list<string> of the internal column names.
* @throws semanticexception
*/
public list<string> gencollists operator<? extends serializable> curop
throws semanticexception
list<string> collist   new arraylist<string>
if  curop getchildoperators      null
for  operator<? extends serializable> child   curop getchildoperators
if  child instanceof commonjoinoperator
int tag   child getparentoperators   indexof curop
list<string> prunlist   joinprunedcollists get child  get  byte  tag
collist   utilities mergeuniqelems collist  prunlist
else
collist   utilities
mergeuniqelems collist  prunedcollists get child
return collist
/**
* creates the list of internal column names from select expressions in a
* select operator. this function is used for the select operator instead of
* the gencollists function (which is used by the rest of the operators).
*
* @param op
*          the select operator.
* @return list<string> of the internal column names.
*/
public list<string> getcolsfromselectexpr selectoperator op
list<string> cols   new arraylist<string>
selectdesc conf   op getconf
arraylist<exprnodedesc> exprlist   conf getcollist
for  exprnodedesc expr   exprlist
cols   utilities mergeuniqelems cols  expr getcols
return cols
/**
* creates the list of internal column names for select * expressions.
*
* @param op
*          the select operator.
* @param collist
*          the list of internal column names returned by the children of the
*          select operator.
* @return list<string> of the internal column names.
*/
public list<string> getselectcolsfromchildren selectoperator op
list<string> collist
list<string> cols   new arraylist<string>
selectdesc conf   op getconf
if  conf isselstarnocompute
cols addall collist
return cols
arraylist<exprnodedesc> selectexprs   conf getcollist
// the collist is the output columns used by child operators, they are
// different
// from input columns of the current operator. we need to find out which
// input columns are used.
arraylist<string> outputcolumnnames   conf getoutputcolumnnames
for  int i   0  i < outputcolumnnames size    i
if  collist contains outputcolumnnames get i
exprnodedesc expr   selectexprs get i
cols   utilities mergeuniqelems cols  expr getcols
return cols