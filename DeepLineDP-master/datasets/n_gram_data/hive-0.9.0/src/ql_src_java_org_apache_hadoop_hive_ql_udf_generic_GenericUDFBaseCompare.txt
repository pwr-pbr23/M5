/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import org apache hadoop hive ql exec description
import org apache hadoop hive ql exec functionregistry
import org apache hadoop hive ql exec udfargumentexception
import org apache hadoop hive ql exec udfargumenttypeexception
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql udf generic genericudfutils returnobjectinspectorresolver
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspector category
import org apache hadoop hive serde2 objectinspector objectinspectorconverters
import org apache hadoop hive serde2 objectinspector objectinspectorconverters converter
import org apache hadoop hive serde2 objectinspector objectinspectorutils
import org apache hadoop hive serde2 objectinspector primitive booleanobjectinspector
import org apache hadoop hive serde2 objectinspector primitive byteobjectinspector
import org apache hadoop hive serde2 objectinspector primitive intobjectinspector
import org apache hadoop hive serde2 objectinspector primitive longobjectinspector
import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorfactory
import org apache hadoop hive serde2 objectinspector primitive stringobjectinspector
import org apache hadoop hive serde2 typeinfo typeinfo
import org apache hadoop hive serde2 typeinfo typeinfofactory
import org apache hadoop hive serde2 typeinfo typeinfoutils
import org apache hadoop io booleanwritable
/**
* genericudf base class for operations.
*/
@description name      value
public abstract class genericudfbasecompare extends genericudf
public enum comparetype
// now only string, text, int, long, byte and boolean comparisons are
// treated as special cases.
// for other types, we reuse objectinspectorutils.compare()
compare_string  compare_text  compare_int  compare_long  compare_byte
compare_bool  same_type  need_convert
protected string opname
protected string opdisplayname
protected objectinspector argumentois
protected returnobjectinspectorresolver conversionhelper   null
protected objectinspector compareoi
protected comparetype comparetype
protected converter converter0  converter1
protected stringobjectinspector soi0  soi1
protected intobjectinspector ioi0  ioi1
protected longobjectinspector loi0  loi1
protected byteobjectinspector byoi0  byoi1
protected booleanobjectinspector boi0 boi1
protected final booleanwritable result   new booleanwritable
@override
public objectinspector initialize objectinspector arguments  throws udfargumentexception
if  arguments length    2
throw new udfargumentexception
opname
argumentois   arguments
for  int i   0  i < arguments length  i
category category   arguments getcategory
if  category    category primitive
throw new udfargumenttypeexception i
genericudfutils getordinal i   1
opname
category primitive tostring   tolowercase
category tostring   tolowercase
if  typeinfoutils gettypeinfofromobjectinspector arguments  equals
typeinfofactory stringtypeinfo
typeinfoutils gettypeinfofromobjectinspector arguments  equals
typeinfofactory stringtypeinfo
soi0    stringobjectinspector  arguments
soi1    stringobjectinspector  arguments
if  soi0 preferwritable      soi1 preferwritable
comparetype   comparetype compare_text
else
comparetype   comparetype compare_string
else if  typeinfoutils gettypeinfofromobjectinspector arguments  equals
typeinfofactory inttypeinfo
typeinfoutils gettypeinfofromobjectinspector arguments  equals
typeinfofactory inttypeinfo
comparetype   comparetype compare_int
ioi0    intobjectinspector  arguments
ioi1    intobjectinspector  arguments
else if  typeinfoutils gettypeinfofromobjectinspector arguments  equals
typeinfofactory longtypeinfo
typeinfoutils gettypeinfofromobjectinspector arguments  equals
typeinfofactory longtypeinfo
comparetype   comparetype compare_long
loi0    longobjectinspector  arguments
loi1    longobjectinspector  arguments
else if  typeinfoutils gettypeinfofromobjectinspector arguments  equals
typeinfofactory bytetypeinfo
typeinfoutils gettypeinfofromobjectinspector arguments  equals
typeinfofactory bytetypeinfo
comparetype   comparetype compare_byte
byoi0    byteobjectinspector  arguments
byoi1    byteobjectinspector  arguments
else if  typeinfoutils gettypeinfofromobjectinspector arguments  equals
typeinfofactory booleantypeinfo
typeinfoutils gettypeinfofromobjectinspector arguments  equals
typeinfofactory booleantypeinfo
comparetype   comparetype compare_bool
boi0    booleanobjectinspector  arguments
boi1    booleanobjectinspector  arguments
else
typeinfo oitypeinfo0   typeinfoutils gettypeinfofromobjectinspector arguments
typeinfo oitypeinfo1   typeinfoutils gettypeinfofromobjectinspector arguments
if  oitypeinfo0    oitypeinfo1
comparetype   comparetype need_convert
// if either argument is a string, we convert to a double because a number
// in string form should always be convertible into a double
if  oitypeinfo0 equals typeinfofactory stringtypeinfo
oitypeinfo1 equals typeinfofactory stringtypeinfo
compareoi   typeinfoutils getstandardwritableobjectinspectorfromtypeinfo
typeinfofactory doubletypeinfo
else
typeinfo comparetype   functionregistry getcommonclass oitypeinfo0  oitypeinfo1
// for now, we always convert to double if we can't find a common type
compareoi   typeinfoutils getstandardwritableobjectinspectorfromtypeinfo
comparetype    null  ?
typeinfofactory doubletypeinfo   comparetype
converter0   objectinspectorconverters getconverter arguments  compareoi
converter1   objectinspectorconverters getconverter arguments  compareoi
else
comparetype   comparetype same_type
return primitiveobjectinspectorfactory writablebooleanobjectinspector
public integer compare deferredobject arguments  throws hiveexception
object o0 o1
o0   arguments get
if  o0    null
return null
o1   arguments get
if  o1    null
return null
if  comparetype    comparetype need_convert
object converted_o0   converter0 convert o0
if  converted_o0    null
return null
object converted_o1   converter1 convert o1
if  converted_o1    null
return null
return objectinspectorutils compare
converted_o0  compareoi
converted_o1  compareoi
else
return objectinspectorutils compare
o0  argumentois  o1  argumentois
@override
public string getdisplaystring string children
assert  children length    2
return     children       opdisplayname       children