/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql optimizer
import java io serializable
import java util map
import java util stack
import org apache hadoop hive ql exec operator
import org apache hadoop hive ql exec reducesinkoperator
import org apache hadoop hive ql exec task
import org apache hadoop hive ql lib node
import org apache hadoop hive ql lib nodeprocessor
import org apache hadoop hive ql lib nodeprocessorctx
import org apache hadoop hive ql optimizer genmrproccontext genmapredctx
import org apache hadoop hive ql parse semanticexception
/**
* processor for the rule - reduce sink followed by reduce sink.
*/
public class genmrredsink2 implements nodeprocessor
public genmrredsink2
/**
* reduce scan encountered.
*
* @param nd
*          the reduce sink operator encountered
* @param opprocctx
*          context
*/
public object process node nd  stack<node> stack  nodeprocessorctx opprocctx
object    nodeoutputs  throws semanticexception
reducesinkoperator op    reducesinkoperator  nd
genmrproccontext ctx    genmrproccontext  opprocctx
map<operator<? extends serializable>  genmapredctx> mapcurrctx   ctx
getmapcurrctx
genmapredctx mapredctx   mapcurrctx get op getparentoperators   get 0
task<? extends serializable> currtask   mapredctx getcurrtask
operator<? extends serializable> currtopop   mapredctx getcurrtopop
string curraliasid   mapredctx getcurraliasid
operator<? extends serializable> reducer   op getchildoperators   get 0
map<operator<? extends serializable>  task<? extends serializable>> optaskmap   ctx
getoptaskmap
task<? extends serializable> opmaptask   optaskmap get reducer
ctx setcurrtopop currtopop
ctx setcurraliasid curraliasid
ctx setcurrtask currtask
if  opmaptask    null
genmapredutils splitplan op  ctx
else
genmapredutils joinplan op  currtask  opmaptask  ctx   1  true  false
false
currtask   opmaptask
ctx setcurrtask currtask
mapcurrctx put op  new genmapredctx ctx getcurrtask    ctx getcurrtopop
ctx getcurraliasid
return null