/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ant
import org apache tools ant antclassloader
import org apache tools ant buildexception
import org apache tools ant task
import org apache tools ant project
import java util regex pattern
import java util regex matcher
import java io
/**
* implementation of the ant task <getversionpref property="nameoftheproperty" input="versionstring"/>.
*
* this ant task takes an input version string (e.g. 0.17.2) and set an ant property (whose name
* is specified in the property attribute) with the version prefix. for 0.17.2, the version prefix
* is 0.17. similarly, for 0.18.0, the version prefix is 0.18. the version prefix is the first two
* components of the version string.
*/
public class getversionpref extends task
/**
* the name of the property that gets the version prefix.
*/
protected string property
/**
* the input string that contains the version string.
*/
protected string input
public void setproperty string property
this property   property
public string getproperty
return property
public void setinput string input
this input   input
public string getinput
return input
/**
* executes the ant task <getversionperf>.
*
* it extracts the version prefix using regular expressions on the version string. it then sets
* the property in the project with the extracted prefix. the property is set to an empty string
* in case no match is found for the prefix regular expression (which will happen in case the
* version string does not conform to the version format).
*/
@override
public void execute   throws buildexception
if  property    null
throw new buildexception
if  input    null
throw new buildexception
try
pattern p   pattern compile
matcher m   p matcher input
getproject   setproperty property  m matches   ? m group 1
catch  exception e
throw new buildexception     e getmessage