/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import org apache hadoop hive ql exec description
import org apache hadoop hive ql exec udfargumenttypeexception
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive serde2 objectinspector objectinspector
/**
* genericudf class for sql construct "coalesce(a, b, c)".
*
* notes: 1. a, b and c should have the same typeinfo, or an exception will be
* thrown.
*/
@description name
value
extended
public class genericudfcoalesce extends genericudf
private objectinspector argumentois
private genericudfutils returnobjectinspectorresolver returnoiresolver
@override
public objectinspector initialize objectinspector arguments  throws udfargumenttypeexception
argumentois   arguments
returnoiresolver   new genericudfutils returnobjectinspectorresolver true
for  int i   0  i < arguments length  i
if   returnoiresolver update arguments
throw new udfargumenttypeexception i
"
returnoiresolver get   gettypename
is expected but      arguments gettypename
is found"
return returnoiresolver get
@override
public object evaluate deferredobject arguments  throws hiveexception
for  int i   0  i < arguments length  i
object ai   arguments get
if  ai    null
continue
return returnoiresolver convertifnecessary ai  argumentois
return null
@override
public string getdisplaystring string children
stringbuilder sb   new stringbuilder
sb append
if  children length > 0
sb append children
for  int i   1  i < children length  i
sb append
sb append children
sb append
return sb tostring