/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql exec
import java util timer
import java util timertask
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop mapred reporter
/**
* autoprogressor periodically sends updates to the job tracker so that it
* doesn't consider this task attempt dead if there is a long period of
* inactivity. this can be configured with a timeout so that it doesn't run
* indefinitely.
*/
public class autoprogressor
protected log log   logfactory getlog this getclass   getname
// timer that reports every 5 minutes to the jobtracker. this ensures that
// even if the operator returning rows for greater than that
// duration, a progress report is sent to the tracker so that the tracker
// does not think that the job is dead.
timer rptimer   null
// timer that tops rptimer after a long timeout, e.g. 1 hr
timer srptimer   null
// name of the class to report for
string logclassname   null
int notificationinterval
int timeout
reporter reporter
class reportertask extends timertask
/**
* reporter to report progress to the jobtracker.
*/
private reporter rp
/**
* constructor.
*/
public reportertask reporter rp
if  rp    null
this rp   rp
@override
public void run
if  rp    null
log
info
logclassname
rp progress
class stopreportertimertask extends timertask
/**
* task to stop the reporter timer once we hit the timeout
*/
private final reportertask rt
public stopreportertimertask reportertask rp
this rt   rp
@override
public void run
if  rt    null
log info     logclassname
rt cancel
/**
*
* @param logclassname
* @param reporter
* @param notificationinterval - interval for reporter updates (in ms)
*/
autoprogressor string logclassname  reporter reporter
int notificationinterval
this logclassname   logclassname
this reporter   reporter
this notificationinterval   notificationinterval
this timeout   0
/**
*
* @param logclassname
* @param reporter
* @param notificationinterval - interval for reporter updates (in ms)
* @param timeout - when the autoprogressor should stop reporting (in ms)
*/
autoprogressor string logclassname  reporter reporter
int notificationinterval  int timeout
this logclassname   logclassname
this reporter   reporter
this notificationinterval   notificationinterval
this timeout   timeout
public void go
log info     notificationinterval
rptimer   new timer true
reportertask rt   new reportertask reporter
rptimer scheduleatfixedrate rt  0  notificationinterval
if  timeout > 0
srptimer   new timer true
stopreportertimertask srt   new stopreportertimertask rt
srptimer schedule srt  timeout