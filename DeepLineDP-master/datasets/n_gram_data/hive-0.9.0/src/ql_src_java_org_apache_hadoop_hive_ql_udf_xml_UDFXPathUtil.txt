/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf xml
import java io ioexception
import java io reader
import java io stringreader
import javax xml namespace qname
import javax xml xpath xpath
import javax xml xpath xpathconstants
import javax xml xpath xpathexpression
import javax xml xpath xpathexpressionexception
import javax xml xpath xpathfactory
import org w3c dom node
import org w3c dom nodelist
import org xml sax inputsource
/**
* utility class for all xpath udfs. each udf instance should keep an instance
* of this class.
*/
public class udfxpathutil
private xpath xpath   xpathfactory newinstance   newxpath
private reusablestringreader reader   new reusablestringreader
private inputsource inputsource   new inputsource reader
private xpathexpression expression   null
private string oldpath   null
public object eval string xml  string path  qname qname
if  xml    null    path    null    qname    null
return null
if  xml length      0    path length      0
return null
if   path equals oldpath
try
expression   xpath compile path
catch  xpathexpressionexception e
expression   null
oldpath   path
if  expression    null
return null
reader set xml
try
return expression evaluate inputsource  qname
catch  xpathexpressionexception e
throw new runtimeexception      oldpath
public boolean evalboolean string xml  string path
return  boolean  eval xml  path  xpathconstants boolean
public string evalstring string xml  string path
return  string  eval xml  path  xpathconstants string
public double evalnumber string xml  string path
return  double  eval xml  path  xpathconstants number
public node evalnode string xml  string path
return  node  eval xml  path  xpathconstants node
public nodelist evalnodelist string xml  string path
return  nodelist  eval xml  path  xpathconstants nodeset
/**
* reusable, non-threadsafe version of {@link stringreader}.
*/
public static class reusablestringreader extends reader
private string str   null
private int length    1
private int next   0
private int mark   0
public reusablestringreader
public void set string s
this str   s
this length   s length
this mark   0
this next   0
/** check to make sure that the stream has not been closed */
private void ensureopen   throws ioexception
if  str    null
throw new ioexception
public int read   throws ioexception
ensureopen
if  next >  length
return  1
return str charat next
public int read char cbuf  int off  int len  throws ioexception
ensureopen
if   off < 0      off > cbuf length      len < 0
off   len  > cbuf length       off   len  < 0
throw new indexoutofboundsexception
else if  len    0
return 0
if  next >  length
return  1
int n   math min length   next  len
str getchars next  next   n  cbuf  off
next    n
return n
public long skip long ns  throws ioexception
ensureopen
if  next >  length
return 0
// bound skip by beginning and end of the source
long n   math min length   next  ns
n   math max  next  n
next    n
return n
public boolean ready   throws ioexception
ensureopen
return true
public boolean marksupported
return true
public void mark int readaheadlimit  throws ioexception
if  readaheadlimit < 0
throw new illegalargumentexception
ensureopen
mark   next
public void reset   throws ioexception
ensureopen
next   mark
public void close
str   null