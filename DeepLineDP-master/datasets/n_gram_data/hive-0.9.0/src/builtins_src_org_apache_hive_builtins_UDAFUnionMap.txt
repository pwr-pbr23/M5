/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hive builtins
import java util hashmap
import java util map
import org apache hive pdk hivepdkunittest
import org apache hive pdk hivepdkunittests
import org apache hadoop hive ql exec description
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql parse semanticexception
import org apache hadoop hive ql udf generic abstractgenericudafresolver
import org apache hadoop hive ql udf generic genericudafevaluator
import org apache hadoop hive ql udf generic genericudafevaluator aggregationbuffer
import org apache hadoop hive serde2 objectinspector mapobjectinspector
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorutils
import org apache hadoop hive serde2 typeinfo typeinfo
/**
* aggregate all maps into a single map. if there are multiple values for
* the same key, result can contain any of those values.
* because the mappers must keep all of the data in memory, if your data is
* non-trivially large you should set hive.map.aggr=false to ensure that
* union_map is only executed in the reduce phase.
*/
@hivepdkunittests
setup
cleanup
cases
@hivepdkunittest
query
result
@description
name
value
extended
public class udafunionmap extends abstractgenericudafresolver
@override
public genericudafevaluator getevaluator typeinfo parameters  throws semanticexception
// next two validation calls are dependent on hive-2524, so
// leave them commented out for now.
//
// new lengthequals(1).check(parameters.length);
// new ismap().check(parameters[0], 0);
return new evaluator
public static class state implements aggregationbuffer
hashmap<object  object> map   new hashmap<object  object>
public static class evaluator extends genericudafevaluator
objectinspector inputoi
mapobjectinspector internalmergeoi
@override
public objectinspector init mode m  objectinspector parameters  throws hiveexception
super init m  parameters
if  m    mode complete    m    mode partial1
inputoi    mapobjectinspector  parameters
else
internalmergeoi    mapobjectinspector  parameters
return objectinspectorutils getstandardobjectinspector parameters
@override
public aggregationbuffer getnewaggregationbuffer   throws hiveexception
return new state
@override
public void iterate aggregationbuffer agg  object input  throws hiveexception
if  input    null
state state    state  agg
state map putall  map<? ?> objectinspectorutils copytostandardobject input  inputoi
@override
public void merge aggregationbuffer agg  object partial  throws hiveexception
if  partial    null
state state    state  agg
map<? ?> pset    map<? ?> objectinspectorutils copytostandardobject partial  internalmergeoi
state map putall pset
@override
public void reset aggregationbuffer agg  throws hiveexception
state  agg  map clear
@override
public object terminate aggregationbuffer agg  throws hiveexception
return   state  agg  map
@override
public object terminatepartial aggregationbuffer agg  throws hiveexception
return   state  agg  map