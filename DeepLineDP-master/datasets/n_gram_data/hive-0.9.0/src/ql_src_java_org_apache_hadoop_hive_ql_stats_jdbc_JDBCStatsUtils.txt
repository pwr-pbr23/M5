/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql stats jdbc
import java util arraylist
import java util collection
import java util hashmap
import java util list
import java util map
import org apache hadoop hive ql stats statssetupconst
public class jdbcstatsutils
private static final list<string> supportedstats   new arraylist<string>
private static final map<string  string> columnnamemapping   new hashmap<string  string>
static
// supported statistics
supportedstats add statssetupconst row_count
supportedstats add statssetupconst raw_data_size
// row count statistics
columnnamemapping put statssetupconst row_count
jdbcstatssetupconstants part_stat_row_count_column_name
// raw data size
columnnamemapping put statssetupconst raw_data_size
jdbcstatssetupconstants part_stat_raw_data_size_column_name
/**
* returns the set of supported statistics
*/
public static list<string> getsupportedstatistics
return supportedstats
/**
* check if the set to be published is within the supported statistics.
* it must also contain at least the basic statistics (used for comparison)
*
* @param stats
*          - stats to be published
* @return true if is a valid statistic set, false otherwise
*/
public static boolean isvalidstatisticset collection<string> stats
if   stats contains getbasicstat
return false
for  string stat   stats
if   supportedstats contains stat
return false
return true
/**
* check if a particular statistic type is supported
*
* @param stattype
*          - statistic to be published
* @return true if stattype is supported, false otherwise
*/
public static boolean isvalidstatistic string stattype
return supportedstats contains stattype
/**
* returns the name of the column storing the key for statistics.
*/
public static string getidcolumnname
return jdbcstatssetupconstants part_stat_id_column_name
public static string gettimestampcolumnname
return jdbcstatssetupconstants part_stat_timestamp_column_name
public static string getstattablename
return jdbcstatssetupconstants part_stat_table_name
/**
* returns the column where the statistics for the given type are stored.
*
* @param stattype
*          - supported statistic.
* @return column name for the given statistic.
*/
public static string getstatcolumnname string stattype
return columnnamemapping get stattype
/**
* returns the basic type of the supported statistics.
* it is used to determine which statistics are fresher.
*/
public static string getbasicstat
return supportedstats get 0
/**
* prepares create table query
*/
public static string getcreate string comment
string create       comment       jdbcstatsutils getstattablename
gettimestampcolumnname
jdbcstatsutils getidcolumnname
for  int i   0  i < supportedstats size    i
create        getstatcolumnname supportedstats get i
create
return create
/**
* prepares update statement issued when updating existing statistics
*/
public static string getupdate string comment
string update       comment       getstattablename
for  int i   0  i < supportedstats size    i
update    columnnamemapping get supportedstats get i
update    gettimestampcolumnname
update        jdbcstatsutils getidcolumnname
getstatcolumnname getbasicstat
getstatcolumnname getbasicstat          getstattablename
getidcolumnname
return update
/**
* prepares insert statement for statistic publishing.
*/
public static string getinsert string comment
string columns   jdbcstatsutils getidcolumnname
string values
for  int i   0  i < supportedstats size    i
columns        getstatcolumnname supportedstats get i
values
string insert       comment       getstattablename         columns
values
return insert
/**
* prepares select query for statistics aggregation.
*
* @param stattype
*          - statistic type to be aggregated.
* @param comment
* @return aggregated value for the given statistic
*/
public static string getselectaggr string stattype  string comment
string select       comment
getstatcolumnname stattype
getstattablename         jdbcstatsutils getidcolumnname
return select
/**
* prepares delete statement for cleanup.
*/
public static string getdeleteaggr string rowid  string comment
string delete       comment
getstattablename         jdbcstatsutils getidcolumnname
return delete