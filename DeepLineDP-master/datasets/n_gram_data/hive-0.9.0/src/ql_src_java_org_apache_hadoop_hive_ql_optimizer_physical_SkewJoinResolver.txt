/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql optimizer physical
import java io serializable
import java util arraylist
import java util linkedhashmap
import java util map
import java util stack
import org apache hadoop hive ql exec conditionaltask
import org apache hadoop hive ql exec task
import org apache hadoop hive ql lib defaultgraphwalker
import org apache hadoop hive ql lib defaultruledispatcher
import org apache hadoop hive ql lib dispatcher
import org apache hadoop hive ql lib graphwalker
import org apache hadoop hive ql lib node
import org apache hadoop hive ql lib nodeprocessor
import org apache hadoop hive ql lib nodeprocessorctx
import org apache hadoop hive ql lib rule
import org apache hadoop hive ql lib ruleregexp
import org apache hadoop hive ql parse parsecontext
import org apache hadoop hive ql parse semanticexception
import org apache hadoop hive ql plan mapredwork
/**
* an implementation of physicalplanresolver. it iterator each task with a rule
* dispatcher for its reducer operator tree, for task with join op in reducer,
* it will try to add a conditional task associated a list of skew join tasks.
*/
public class skewjoinresolver implements physicalplanresolver
@override
public physicalcontext resolve physicalcontext pctx  throws semanticexception
dispatcher disp   new skewjointaskdispatcher pctx
graphwalker ogw   new defaultgraphwalker disp
arraylist<node> topnodes   new arraylist<node>
topnodes addall pctx roottasks
ogw startwalking topnodes  null
return pctx
/**
* iterator a task with a rule dispatcher for its reducer operator tree.
*/
class skewjointaskdispatcher implements dispatcher
private physicalcontext physicalcontext
public skewjointaskdispatcher physicalcontext context
super
physicalcontext   context
@override
public object dispatch node nd  stack<node> stack  object    nodeoutputs
throws semanticexception
task<? extends serializable> task    task<? extends serializable>  nd
if   task ismapredtask      task instanceof conditionaltask
mapredwork  task getwork    getreducer      null
return null
skewjoinprocctx skewjoinproccontext   new skewjoinprocctx task
physicalcontext getparsecontext
map<rule  nodeprocessor> oprules   new linkedhashmap<rule  nodeprocessor>
oprules put new ruleregexp        skewjoinprocfactory
getjoinproc
// the dispatcher fires the processor corresponding to the closest
// matching rule and passes the context along
dispatcher disp   new defaultruledispatcher skewjoinprocfactory
getdefaultproc    oprules  skewjoinproccontext
graphwalker ogw   new defaultgraphwalker disp
// iterator the reducer operator tree
arraylist<node> topnodes   new arraylist<node>
topnodes add   mapredwork  task getwork    getreducer
ogw startwalking topnodes  null
return null
public physicalcontext getphysicalcontext
return physicalcontext
public void setphysicalcontext physicalcontext physicalcontext
this physicalcontext   physicalcontext
/**
* a container of current task and parse context.
*/
public static class skewjoinprocctx implements nodeprocessorctx
private task<? extends serializable> currenttask
private parsecontext parsectx
public skewjoinprocctx task<? extends serializable> task
parsecontext parsectx
currenttask   task
this parsectx   parsectx
public task<? extends serializable> getcurrenttask
return currenttask
public void setcurrenttask task<? extends serializable> currenttask
this currenttask   currenttask
public parsecontext getparsectx
return parsectx
public void setparsectx parsecontext parsectx
this parsectx   parsectx