/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive metastore
import org apache hadoop hive metastore api metaexception
import org apache hadoop hive metastore api partition
import org apache hadoop hive metastore api table
/**
* hivemetahook defines notification methods which are invoked as part
* of transactions against the metastore, allowing external catalogs
* such as hbase to be kept in sync with hive's metastore.
*
*<p>
*
* implementations can use {@link metastoreutils#isexternaltable} to
* distinguish external tables from managed tables.
*/
public interface hivemetahook
/**
* called before a new table definition is added to the metastore
* during create table.
*
* @param table new table definition
*/
public void precreatetable table table
throws metaexception
/**
* called after failure adding a new table definition to the metastore
* during create table.
*
* @param table new table definition
*/
public void rollbackcreatetable table table
throws metaexception
/**
* called after successfully adding a new table definition to the metastore
* during create table.
*
* @param table new table definition
*/
public void commitcreatetable table table
throws metaexception
/**
* called before a table definition is removed from the metastore
* during drop table.
*
* @param table table definition
*/
public void predroptable table table
throws metaexception
/**
* called after failure removing a table definition from the metastore
* during drop table.
*
* @param table table definition
*/
public void rollbackdroptable table table
throws metaexception
/**
* called after successfully removing a table definition from the metastore
* during drop table.
*
* @param table table definition
*
* @param deletedata whether to delete data as well; this should typically
* be ignored in the case of an external table
*/
public void commitdroptable table table  boolean deletedata
throws metaexception