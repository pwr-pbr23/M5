/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 objectinspector
import java util arraylist
import java util collections
import java util hashmap
import java util list
import org apache hadoop hive serde2 columnset
import org apache hadoop hive serde2 objectinspector primitiveobjectinspector primitivecategory
import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorfactory
/**
* structobjectinspector works on struct data that is stored as a java list or
* java array object. basically, the fields are stored sequentially in the list
* object.
*
* the names of the struct fields and the internal structure of the struct
* fields are specified in the ctor of the structobjectinspector.
*
*/
public class metadataliststructobjectinspector extends
standardstructobjectinspector
static hashmap<list<list<string>>  metadataliststructobjectinspector>
cached   new hashmap<list<list<string>>  metadataliststructobjectinspector>
// public static metadataliststructobjectinspector getinstance(int fields) {
// return getinstance(objectinspectorutils.getintegerarray(fields));
// }
public static metadataliststructobjectinspector getinstance
list<string> columnnames
arraylist<list<string>> key   new arraylist<list<string>> 1
key add columnnames
metadataliststructobjectinspector result   cached get columnnames
if  result    null
result   new metadataliststructobjectinspector columnnames
cached put key  result
return result
public static metadataliststructobjectinspector getinstance
list<string> columnnames  list<string> columncomments
arraylist<list<string>> key   new arraylist<list<string>> 2
collections addall key  columnnames  columncomments
metadataliststructobjectinspector result   cached get key
if  result    null
result   new metadataliststructobjectinspector columnnames  columncomments
cached put key  result
return result
static arraylist<objectinspector> getfieldobjectinspectors int fields
arraylist<objectinspector> r   new arraylist<objectinspector> fields
for  int i   0  i < fields  i
r add primitiveobjectinspectorfactory
getprimitivejavaobjectinspector primitivecategory string
return r
metadataliststructobjectinspector list<string> columnnames
super columnnames  getfieldobjectinspectors columnnames size
public metadataliststructobjectinspector list<string> columnnames
list<string> columncomments
super columnnames  getfieldobjectinspectors columnnames size
columncomments
// get col object out
@override
public object getstructfielddata object data  structfield fieldref
if  data instanceof columnset
data     columnset  data  col
return super getstructfielddata data  fieldref
// get col object out
@override
public list<object> getstructfieldsdataaslist object data
if  data instanceof columnset
data     columnset  data  col
return super getstructfieldsdataaslist data