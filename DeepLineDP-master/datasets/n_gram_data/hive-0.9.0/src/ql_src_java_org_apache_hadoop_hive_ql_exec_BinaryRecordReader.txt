/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql exec
import java io ioexception
import java io inputstream
import java util properties
import org apache hadoop conf configuration
import org apache hadoop io byteswritable
import org apache hadoop io writable
/**
* read from a binary stream and treat each 1000 bytes (configurable via
* hive.binary.record.max.length) as a record.  the last record before the
* end of stream can have less than 1000 bytes.
*/
public class binaryrecordreader implements recordreader
private inputstream in
private byteswritable bytes
private int maxrecordlength
public void initialize inputstream in  configuration conf  properties tbl  throws ioexception
this in   in
maxrecordlength   conf getint    1000
public writable createrow   throws ioexception
bytes   new byteswritable
bytes setcapacity maxrecordlength
return bytes
public int next writable row  throws ioexception
int recordlength   in read bytes get    0  maxrecordlength
if  recordlength >  0
bytes setsize recordlength
return recordlength
public void close   throws ioexception
if  in    null
in close