/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 columnar
import java util list
import java util properties
import org apache hadoop conf configuration
import org apache hadoop hive serde2 columnprojectionutils
import org apache hadoop hive serde2 serdeexception
import org apache hadoop hive serde2 lazy lazyutils
import org apache hadoop hive serde2 lazy lazysimpleserde serdeparameters
import org apache hadoop hive serde2 lazybinary lazybinaryfactory
import org apache hadoop hive serde2 lazybinary lazybinaryserde
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspector category
import org apache hadoop hive serde2 objectinspector primitive stringobjectinspector
import org apache hadoop hive serde2 objectinspector primitiveobjectinspector
import org apache hadoop hive serde2 objectinspector structfield
import org apache hadoop hive serde2 objectinspector structobjectinspector
import org apache hadoop hive serde2 typeinfo typeinfo
import org apache hadoop io writable
/**
* lazybinarycolumnarserde. this serde combines elements of columnar serde and lazybinary serde
* to produce a serde which serializes columns into a bytesrefarraywritable in a compact binary
* format and which is deserialized in a lazy, i.e. on-demand fashion.
*
*/
public class lazybinarycolumnarserde extends columnarserdebase
private list<string> columnnames
private list<typeinfo> columntypes
@override
public string tostring
return getclass   tostring
columnnames
columntypes
@override
public void initialize configuration conf  properties tbl  throws serdeexception
serdeparameters serdeparams   new serdeparameters
lazyutils extractcolumninfo tbl  serdeparams  getclass   getname
columnnames   serdeparams getcolumnnames
columntypes   serdeparams getcolumntypes
cachedobjectinspector   lazybinaryfactory createcolumnarstructinspector
columnnames  columntypes
java util arraylist<integer> notskipids   columnprojectionutils getreadcolumnids conf
cachedlazystruct   new lazybinarycolumnarstruct cachedobjectinspector  notskipids
int size   columntypes size
super initialize size
static final byte invalid_utf__single_byte     byte integer parseint    2
@override
public writable serialize object obj  objectinspector objinspector  throws serdeexception
if  objinspector getcategory      category struct
throw new serdeexception getclass   tostring
objinspector gettypename
structobjectinspector soi    structobjectinspector  objinspector
list<? extends structfield> fields   soi getallstructfieldrefs
list<object> list   soi getstructfieldsdataaslist obj
boolean warnedoncenullmapkey   false
serializestream reset
serializedsize   0
int streamoffset   0
// serialize each field
for  int i   0  i < fields size    i
// get the field objectinspector and the field object.
objectinspector foi   fields get i  getfieldobjectinspector
object f    list    null ? null   list get i
//empty strings are marked by an invalid utf single byte sequence. a valid utf stream cannot
//produce this sequence
if   f    null      foi getcategory   equals objectinspector category primitive
primitiveobjectinspector  foi  getprimitivecategory   equals
primitiveobjectinspector primitivecategory string
stringobjectinspector  foi  getprimitivejavaobject f  length      0
serializestream write invalid_utf__single_byte  0  1
else
lazybinaryserde serialize serializestream  f  foi  true  warnedoncenullmapkey
field set serializestream getdata    streamoffset  serializestream
getcount
streamoffset
streamoffset   serializestream getcount
serializedsize   serializestream getcount
lastoperationserialize   true
lastoperationdeserialize   false
return serializecache