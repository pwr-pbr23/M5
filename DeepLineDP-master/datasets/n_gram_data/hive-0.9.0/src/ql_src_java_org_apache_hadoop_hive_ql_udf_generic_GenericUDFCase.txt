/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import org apache hadoop hive ql exec udfargumenttypeexception
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector primitiveobjectinspector
import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorutils
/**
* genericudf class for sql construct
* "case when a then b when c then d [else f] end".
*
* notes: 1. a and c should be boolean, or an exception will be thrown. 2. b, d
* and f should have the same typeinfo, or an exception will be thrown.
*/
public class genericudfcase extends genericudf
private objectinspector argumentois
private genericudfutils returnobjectinspectorresolver returnoiresolver
private genericudfutils returnobjectinspectorresolver caseoiresolver
@override
public objectinspector initialize objectinspector arguments  throws udfargumenttypeexception
argumentois   arguments
caseoiresolver   new genericudfutils returnobjectinspectorresolver
returnoiresolver   new genericudfutils returnobjectinspectorresolver
boolean r   caseoiresolver update arguments
assert  r
for  int i   1  i   1 < arguments length  i    2
if   caseoiresolver update arguments
throw new udfargumenttypeexception i
"
caseoiresolver get   gettypename       is expected but
arguments gettypename       is found"
if   returnoiresolver update arguments
throw new udfargumenttypeexception i   1
"
returnoiresolver get   gettypename
is expected but      arguments gettypename
is found"
if  arguments length % 2    0
int i   arguments length   2
if   returnoiresolver update arguments
throw new udfargumenttypeexception i   1
"
returnoiresolver get   gettypename
is expected but      arguments gettypename
is found"
return returnoiresolver get
@override
public object evaluate deferredobject arguments  throws hiveexception
object exprvalue   arguments get
for  int i   1  i   1 < arguments length  i    2
object casekey   arguments get
if  primitiveobjectinspectorutils compareprimitiveobjects exprvalue
primitiveobjectinspector  argumentois  casekey
primitiveobjectinspector  argumentois
object casevalue   arguments get
return returnoiresolver convertifnecessary casevalue
argumentois
// process else statement
if  arguments length % 2    0
int i   arguments length   2
object elsevalue   arguments get
return returnoiresolver convertifnecessary elsevalue  argumentois
return null
@override
public string getdisplaystring string children
assert  children length >  3
stringbuilder sb   new stringbuilder
sb append
sb append children
sb append
for  int i   1  i   1 < children length  i    2
sb append
sb append children
sb append
sb append children
sb append
if  children length % 2    0
sb append
sb append children
sb append
sb append
return sb tostring