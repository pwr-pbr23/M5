/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 dynamic_type
import java io serializable
import java util list
import org apache hadoop hive serde2 serdeexception
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache thrift texception
import org apache thrift protocol tprotocol
import org apache thrift protocol tstruct
/**
* dynamicserdestructbase.
*
*/
public abstract class dynamicserdestructbase extends dynamicserdetypebase
implements serializable
dynamicserdefieldlist fieldlist
public dynamicserdestructbase int i
super i
public dynamicserdestructbase thrift_grammar p  int i
super p  i
public abstract dynamicserdefieldlist getfieldlist
@override
public void initialize
fieldlist   getfieldlist
fieldlist initialize
@override
public boolean isprimitive
return false
@override
public class getrealtype
return list class
@override
public object deserialize object reuse  tprotocol iprot
throws serdeexception  texception  illegalaccessexception
if  thrift_mode
iprot readstructbegin
object o   fieldlist deserialize reuse  iprot
if  thrift_mode
iprot readstructend
return o
/**
* serialize
*
* the way to serialize a thrift "table" which in thrift land is really a
* function and thus this class's name.
*
* @param o
*          - this list should be in the order of the function's params for
*          now. if we wanted to remove this requirement, we'd need to make it
*          a list<pair<string, object>> with the string being the field name.
*
*/
@override
public void serialize object o  objectinspector oi  tprotocol oprot
throws texception  serdeexception  nosuchfieldexception  illegalaccessexception
if  thrift_mode
oprot writestructbegin new tstruct name
fieldlist serialize o  oi  oprot
if  thrift_mode
oprot writestructend