/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql metadata
import org apache hadoop mapred jobconf
import org apache hadoop hive ql plan exprnodedesc
import org apache hadoop hive serde2 deserializer
/**
* hivestoragepredicatehandler is an optional companion to {@link
* hivestoragehandler}; it should only be implemented by handlers which
* support decomposition of predicates being pushed down into table scans.
*/
public interface hivestoragepredicatehandler
/**
* gives the storage handler a chance to decompose a predicate.  the storage
* handler should analyze the predicate and return the portion of it which
* cannot be evaluated during table access.  for example, if the original
* predicate is <code>x = 2 and upper(y)='yum'</code>, the storage handler
* might be able to handle <code>x = 2</code> but leave the "residual"
* <code>upper(y)='yum'</code> for hive to deal with.  the breakdown
* need not be non-overlapping; for example, given the
* predicate <code>x like 'a%b'</code>, the storage handler might
* be able to evaluate the prefix search <code>x like 'a%'</code>, leaving
* <code>x like '%b'</code> as the residual.
*
* @param jobconf contains a job configuration matching the one that
* will later be passed to getrecordreader and getsplits
*
* @param deserializer deserializer which will be used when
* fetching rows
*
* @param predicate predicate to be decomposed
*
* @return decomposed form of predicate, or null if no pushdown is
* possible at all
*/
public decomposedpredicate decomposepredicate
jobconf jobconf
deserializer deserializer
exprnodedesc predicate
/**
* struct class for returning multiple values from decomposepredicate.
*/
public static class decomposedpredicate
/**
* portion of predicate to be evaluated by storage handler.  hive
* will pass this into the storage handler's input format.
*/
public exprnodedesc pushedpredicate
/**
* portion of predicate to be post-evaluated by hive for any rows
* which are returned by storage handler.
*/
public exprnodedesc residualpredicate