/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql io rcfile merge
import java io serializable
import java util arraylist
import java util linkedhashmap
import java util list
import org apache hadoop fs path
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql io combinehiveinputformat
import org apache hadoop hive ql plan explain
import org apache hadoop hive ql plan mapredwork
import org apache hadoop hive ql plan partitiondesc
import org apache hadoop hive ql plan tabledesc
import org apache hadoop mapred inputformat
import org apache hadoop mapred mapper
@explain displayname
public class mergework extends mapredwork implements serializable
private static final long serialversionuid   1l
private list<string> inputpaths
private string outputdir
private boolean hasdynamicpartitions
public mergework
public mergework list<string> inputpaths  string outputdir
this inputpaths  outputdir  false
public mergework list<string> inputpaths  string outputdir
boolean hasdynamicpartitions
super
this inputpaths   inputpaths
this outputdir   outputdir
this hasdynamicpartitions   hasdynamicpartitions
partitiondesc partdesc   new partitiondesc
partdesc setinputfileformatclass rcfileblockmergeinputformat class
if this getpathtopartitioninfo      null
this setpathtopartitioninfo new linkedhashmap<string  partitiondesc>
if this getnumreducetasks      null
this setnumreducetasks 0
for string path  this inputpaths
this getpathtopartitioninfo   put path  partdesc
public list<string> getinputpaths
return inputpaths
public void setinputpaths list<string> inputpaths
this inputpaths   inputpaths
public string getoutputdir
return outputdir
public void setoutputdir string outputdir
this outputdir   outputdir
public class<? extends mapper> getmapperclass
return rcfilemergemapper class
public long getminsplitsize
return null
public string getinputformat
return combinehiveinputformat class getname
public boolean isgatheringstats
return false
public boolean hasdynamicpartitions
return this hasdynamicpartitions
public void sethasdynamicpartitions boolean hasdynamicpartitions
this hasdynamicpartitions   hasdynamicpartitions
@override
public void resolvedynamicpartitionmerge hiveconf conf  path path
tabledesc tbldesc  arraylist<string> aliases  partitiondesc partdesc
string inputformatclass   conf getvar hiveconf confvars hivemergeinputformatblocklevel
try
partdesc setinputfileformatclass  class <? extends inputformat>
class forname inputformatclass
catch  classnotfoundexception e
string msg
throw new runtimeexception msg
super resolvedynamicpartitionmerge conf  path  tbldesc  aliases  partdesc
// add the dp path to the list of input paths
inputpaths add path tostring