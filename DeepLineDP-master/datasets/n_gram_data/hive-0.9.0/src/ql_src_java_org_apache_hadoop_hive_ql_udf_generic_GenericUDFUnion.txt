/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import java util arrays
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive ql exec description
import org apache hadoop hive ql exec udfargumentexception
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorfactory
import org apache hadoop hive serde2 objectinspector standardunionobjectinspector standardunion
import org apache hadoop hive serde2 objectinspector primitive intobjectinspector
@description name      value
extended
one
public class genericudfunion extends genericudf
log log   logfactory getlog
objectinspector tagoi
@override
public objectinspector initialize objectinspector arguments
throws udfargumentexception
tagoi   arguments
objectinspector unionois   new objectinspector
for  int i   1  i < arguments length  i
unionois   arguments
return objectinspectorfactory getstandardunionobjectinspector
arrays aslist unionois
@override
public object evaluate deferredobject arguments  throws hiveexception
byte tag    byte   intobjectinspector tagoi  get arguments get
return new standardunion tag  arguments get
@override
public string getdisplaystring string children
stringbuilder sb   new stringbuilder
sb append
for  int i   0  i < children length  i
if  i > 0
sb append
sb append children
sb append
return sb tostring