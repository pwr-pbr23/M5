/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive jdbc
import java sql connection
import java sql databasemetadata
import java sql resultset
import java sql rowidlifetime
import java sql sqlexception
import java util arraylist
import java util arrays
import java util collections
import java util comparator
import java util list
import java util jar attributes
import org apache hadoop hive metastore tabletype
import org apache hadoop hive metastore api fieldschema
import org apache hadoop hive metastore api table
import org apache hadoop hive service hiveinterface
import org apache thrift texception
/**
* hivedatabasemetadata.
*
*/
public class hivedatabasemetadata implements java sql databasemetadata
private final hiveinterface client
private static final string catalog_separator
private static final char search_string_escape
//  the maximum column length = mfieldschema.fname in metastore/src/model/package.jdo
private static final int maxcolumnnamelength   128
/**
*
*/
public hivedatabasemetadata hiveinterface client
this client   client
public boolean allproceduresarecallable   throws sqlexception
throw new sqlexception
public boolean alltablesareselectable   throws sqlexception
return true
public boolean autocommitfailureclosesallresultsets   throws sqlexception
throw new sqlexception
public boolean datadefinitioncausestransactioncommit   throws sqlexception
throw new sqlexception
public boolean datadefinitionignoredintransactions   throws sqlexception
throw new sqlexception
public boolean deletesaredetected int type  throws sqlexception
throw new sqlexception
public boolean doesmaxrowsizeincludeblobs   throws sqlexception
throw new sqlexception
public resultset getattributes string catalog  string schemapattern
string typenamepattern  string attributenamepattern  throws sqlexception
throw new sqlexception
public resultset getbestrowidentifier string catalog  string schema
string table  int scope  boolean nullable  throws sqlexception
throw new sqlexception
public string getcatalogseparator   throws sqlexception
return catalog_separator
public string getcatalogterm   throws sqlexception
return
public resultset getcatalogs   throws sqlexception
try
// todo a client call to get the schema's after hive-675 is implemented
final list<string> catalogs   new arraylist<string>
catalogs add
return new hivemetadataresultset<string> arrays aslist
arrays aslist
catalogs
private int cnt   0
public boolean next   throws sqlexception
if  cnt<data size
list<object> a   new arraylist<object> 1
a add data get cnt       table_cat string  > table catalog  may be null
row   a
cnt
return true
else
return false
catch  exception e
throw new sqlexception e
public resultset getclientinfoproperties   throws sqlexception
throw new sqlexception
public resultset getcolumnprivileges string catalog  string schema
string table  string columnnamepattern  throws sqlexception
throw new sqlexception
/**
* convert a pattern containing jdbc catalog search wildcards into
* java regex patterns.
*
* @param pattern input which may contain '%' or '_' wildcard characters, or
* these characters escaped using {@link #getsearchstringescape()}.
* @return replace %/_ with regex search characters, also handle escaped
* characters.
*/
private string convertpattern final string pattern
if  pattern  null
return
else
stringbuilder result   new stringbuilder pattern length
boolean escaped   false
for  int i   0  len   pattern length    i < len  i
char c   pattern charat i
if  escaped
if  c    search_string_escape
escaped   false
result append c
else
if  c    search_string_escape
escaped   true
continue
else if  c
result append
else if  c
result append
else
result append c
return result tostring
public resultset getcolumns string catalog  final string schemapattern
final string tablenamepattern
final string columnnamepattern  throws sqlexception
list<jdbccolumn> columns   new arraylist<jdbccolumn>
try
if  catalog  null
catalog
string regtablenamepattern   convertpattern tablenamepattern
string regcolumnnamepattern   convertpattern columnnamepattern
list<string> tables   client get_tables catalog
for  string table  tables
if  table matches regtablenamepattern
list<fieldschema> fields   client get_schema catalog  table
int ordinalpos   1
for  fieldschema field  fields
if  field getname   matches regcolumnnamepattern
columns add new jdbccolumn field getname    table  catalog
field gettype    field getcomment    ordinalpos
ordinalpos
collections sort columns  new getcolumnscomparator
return new hivemetadataresultset<jdbccolumn>
arrays aslist
arrays aslist
columns
private int cnt   0
public boolean next   throws sqlexception
if  cnt<data size
list<object> a   new arraylist<object> 20
jdbccolumn column   data get cnt
a add column gettablecatalog        table_cat string  > table catalog  may be null
a add null      table_schem string  > table schema  may be null
a add column gettablename        table_name string  > table name
a add column getcolumnname        column_name string  > column name
a add column getsqltype        data_type short  > sql type from java sql types
a add column gettype        type_name string  > data source dependent type name
a add column getcolumnsize        column_size int  > column size
a add null      buffer_length is not used
a add column getdecimaldigits        decimal_digits int  > number of fractional digits
a add column getnumprecradix        num_prec_radix int  > typically either 10 or 2
a add databasemetadata columnnullable      nullable int  > is null allowed?
a add column getcomment        remarks string  > comment describing column  may be null
a add null      column_def string  > default value  may be null
a add null      sql_data_type int  > unused
a add null      sql_datetime_sub int  > unused
a add null      char_octet_length int
a add column getordinalpos        ordinal_position int
a add        is_nullable string
a add null      scope_catlog string
a add null      scope_schema string
a add null      scope_table string
a add null      source_data_type short
row   a
cnt
return true
else
return false
catch  exception e
throw new sqlexception e
/**
* we sort the output of getcolumns to guarantee jdbc compliance.
* first check by table name then by ordinal position
*/
private class getcolumnscomparator implements comparator<jdbccolumn>
public int compare jdbccolumn o1  jdbccolumn o2
int comparename   o1 gettablename   compareto o2 gettablename
if  comparename  0
if  o1 getordinalpos   > o2 getordinalpos
return 1
else if  o1 getordinalpos   < o2 getordinalpos
return  1
return 0
else
return comparename
public connection getconnection   throws sqlexception
throw new sqlexception
public resultset getcrossreference string primarycatalog
string primaryschema  string primarytable  string foreigncatalog
string foreignschema  string foreigntable  throws sqlexception
throw new sqlexception
public int getdatabasemajorversion   throws sqlexception
throw new sqlexception
public int getdatabaseminorversion   throws sqlexception
throw new sqlexception
public string getdatabaseproductname   throws sqlexception
return
public string getdatabaseproductversion   throws sqlexception
try
return client getversion
catch  texception e
throw new sqlexception e
public int getdefaulttransactionisolation   throws sqlexception
return connection transaction_none
public int getdrivermajorversion
return hivedriver getmajordriverversion
public int getdriverminorversion
return hivedriver getminordriverversion
public string getdrivername   throws sqlexception
return hivedriver fetchmanifestattribute attributes name implementation_title
public string getdriverversion   throws sqlexception
return hivedriver fetchmanifestattribute attributes name implementation_version
public resultset getexportedkeys string catalog  string schema  string table
throws sqlexception
throw new sqlexception
public string getextranamecharacters   throws sqlexception
throw new sqlexception
public resultset getfunctioncolumns string arg0  string arg1  string arg2
string arg3  throws sqlexception
throw new sqlexception
public resultset getfunctions string arg0  string arg1  string arg2
throws sqlexception
throw new sqlexception
public string getidentifierquotestring   throws sqlexception
throw new sqlexception
public resultset getimportedkeys string catalog  string schema  string table
throws sqlexception
throw new sqlexception
public resultset getindexinfo string catalog  string schema  string table
boolean unique  boolean approximate  throws sqlexception
throw new sqlexception
public int getjdbcmajorversion   throws sqlexception
return 3
public int getjdbcminorversion   throws sqlexception
return 0
public int getmaxbinaryliterallength   throws sqlexception
throw new sqlexception
public int getmaxcatalognamelength   throws sqlexception
throw new sqlexception
public int getmaxcharliterallength   throws sqlexception
throw new sqlexception
/**
*  returns the value of maxcolumnnamelength.
*
*/
public int getmaxcolumnnamelength   throws sqlexception
return maxcolumnnamelength
public int getmaxcolumnsingroupby   throws sqlexception
throw new sqlexception
public int getmaxcolumnsinindex   throws sqlexception
throw new sqlexception
public int getmaxcolumnsinorderby   throws sqlexception
throw new sqlexception
public int getmaxcolumnsinselect   throws sqlexception
throw new sqlexception
public int getmaxcolumnsintable   throws sqlexception
throw new sqlexception
public int getmaxconnections   throws sqlexception
throw new sqlexception
public int getmaxcursornamelength   throws sqlexception
throw new sqlexception
public int getmaxindexlength   throws sqlexception
throw new sqlexception
public int getmaxprocedurenamelength   throws sqlexception
throw new sqlexception
public int getmaxrowsize   throws sqlexception
throw new sqlexception
public int getmaxschemanamelength   throws sqlexception
throw new sqlexception
public int getmaxstatementlength   throws sqlexception
throw new sqlexception
public int getmaxstatements   throws sqlexception
throw new sqlexception
public int getmaxtablenamelength   throws sqlexception
throw new sqlexception
public int getmaxtablesinselect   throws sqlexception
throw new sqlexception
public int getmaxusernamelength   throws sqlexception
throw new sqlexception
public string getnumericfunctions   throws sqlexception
return
public resultset getprimarykeys string catalog  string schema  string table
throws sqlexception
throw new sqlexception
public resultset getprocedurecolumns string catalog  string schemapattern
string procedurenamepattern  string columnnamepattern
throws sqlexception
throw new sqlexception
public string getprocedureterm   throws sqlexception
throw new sqlexception
public resultset getprocedures string catalog  string schemapattern
string procedurenamepattern  throws sqlexception
return null
public int getresultsetholdability   throws sqlexception
throw new sqlexception
public rowidlifetime getrowidlifetime   throws sqlexception
throw new sqlexception
public string getsqlkeywords   throws sqlexception
throw new sqlexception
public int getsqlstatetype   throws sqlexception
return databasemetadata sqlstatesql99
public string getschematerm   throws sqlexception
return
public resultset getschemas   throws sqlexception
return getschemas null  null
public resultset getschemas string catalog  string schemapattern
throws sqlexception
return new hivemetadataresultset arrays aslist
arrays aslist        null
public boolean next   throws sqlexception
return false
public string getsearchstringescape   throws sqlexception
return string valueof search_string_escape
public string getstringfunctions   throws sqlexception
return
public resultset getsupertables string catalog  string schemapattern
string tablenamepattern  throws sqlexception
throw new sqlexception
public resultset getsupertypes string catalog  string schemapattern
string typenamepattern  throws sqlexception
throw new sqlexception
public string getsystemfunctions   throws sqlexception
return
public resultset gettableprivileges string catalog  string schemapattern
string tablenamepattern  throws sqlexception
throw new sqlexception
public resultset gettabletypes   throws sqlexception
final tabletype tt   tabletype values
resultset result   new hivemetadataresultset<tabletype>
arrays aslist
arrays aslist     new arraylist<tabletype> arrays aslist tt
private int cnt   0
public boolean next   throws sqlexception
if  cnt<data size
list<object> a   new arraylist<object> 1
a add tojdbctabletype data get cnt  name
row   a
cnt
return true
else
return false
return result
public resultset gettables string catalog  string schemapattern
string tablenamepattern  string types  throws sqlexception
final list<string> tablesstr
final list<jdbctable> resulttables   new arraylist<jdbctable>
final string resultcatalog
if  catalog  null       on jdbc the default catalog is null but on hive it's
resultcatalog
else
resultcatalog   catalog
string regtablenamepattern   convertpattern tablenamepattern
try
tablesstr   client get_tables resultcatalog
for  string tablestr  tablesstr
if  tablestr matches regtablenamepattern
table tbl   client get_table resultcatalog  tablestr
if  types    null
resulttables add new jdbctable resultcatalog  tbl gettablename    tbl gettabletype
tbl getparameters   get
else
string tabletype   tojdbctabletype tbl gettabletype
for string type   types
if  type equalsignorecase tabletype
resulttables add new jdbctable resultcatalog  tbl gettablename    tbl gettabletype
tbl getparameters   get
break
collections sort resulttables  new gettablescomparator
catch  exception e
throw new sqlexception e
resultset result   new hivemetadataresultset<jdbctable>
arrays aslist
arrays aslist
resulttables
private int cnt   0
public boolean next   throws sqlexception
if  cnt<data size
list<object> a   new arraylist<object> 5
jdbctable table   data get cnt
a add table gettablecatalog        table_cat string  > table catalog  may be null
a add null      table_schem string  > table schema  may be null
a add table gettablename        table_name string  > table name
try
a add table getsqltabletype        table_type string  >
catch  exception e
throw new sqlexception e
a add table getcomment        remarks string  > explanatory comment on the table
row   a
cnt
return true
else
return false
return result
/**
* we sort the output of gettables to guarantee jdbc compliance.
* first check by table type then by table name
*/
private class gettablescomparator implements comparator<jdbctable>
public int compare jdbctable o1  jdbctable o2
int comparetype   o1 gettype   compareto o2 gettype
if  comparetype  0
return o1 gettablename   compareto o2 gettablename
else
return comparetype
/**
* translate hive table types into jdbc table types.
* @param hivetabletype
* @return the type of the table
*/
public static string tojdbctabletype string hivetabletype
if  hivetabletype  null
return null
else if  hivetabletype equals tabletype managed_table tostring
return
else if  hivetabletype equals tabletype virtual_view tostring
return
else if  hivetabletype equals tabletype external_table tostring
return
else
return hivetabletype
public string gettimedatefunctions   throws sqlexception
return
public resultset gettypeinfo   throws sqlexception
throw new sqlexception
public resultset getudts string catalog  string schemapattern
string typenamepattern  int types  throws sqlexception
return new hivemetadataresultset
arrays aslist
arrays aslist

public boolean next   throws sqlexception
return false
public string geturl   throws sqlexception
throw new sqlexception
public string getusername   throws sqlexception
throw new sqlexception
public resultset getversioncolumns string catalog  string schema  string table
throws sqlexception
throw new sqlexception
public boolean insertsaredetected int type  throws sqlexception
throw new sqlexception
public boolean iscatalogatstart   throws sqlexception
throw new sqlexception
public boolean isreadonly   throws sqlexception
throw new sqlexception
public boolean locatorsupdatecopy   throws sqlexception
throw new sqlexception
public boolean nullplusnonnullisnull   throws sqlexception
throw new sqlexception
public boolean nullsaresortedatend   throws sqlexception
throw new sqlexception
public boolean nullsaresortedatstart   throws sqlexception
throw new sqlexception
public boolean nullsaresortedhigh   throws sqlexception
throw new sqlexception
public boolean nullsaresortedlow   throws sqlexception
throw new sqlexception
public boolean othersdeletesarevisible int type  throws sqlexception
throw new sqlexception
public boolean othersinsertsarevisible int type  throws sqlexception
throw new sqlexception
public boolean othersupdatesarevisible int type  throws sqlexception
throw new sqlexception
public boolean owndeletesarevisible int type  throws sqlexception
throw new sqlexception
public boolean owninsertsarevisible int type  throws sqlexception
throw new sqlexception
public boolean ownupdatesarevisible int type  throws sqlexception
throw new sqlexception
public boolean storeslowercaseidentifiers   throws sqlexception
throw new sqlexception
public boolean storeslowercasequotedidentifiers   throws sqlexception
throw new sqlexception
public boolean storesmixedcaseidentifiers   throws sqlexception
throw new sqlexception
public boolean storesmixedcasequotedidentifiers   throws sqlexception
throw new sqlexception
public boolean storesuppercaseidentifiers   throws sqlexception
throw new sqlexception
public boolean storesuppercasequotedidentifiers   throws sqlexception
throw new sqlexception
public boolean supportsansi92entrylevelsql   throws sqlexception
throw new sqlexception
public boolean supportsansi92fullsql   throws sqlexception
throw new sqlexception
public boolean supportsansi92intermediatesql   throws sqlexception
throw new sqlexception
public boolean supportsaltertablewithaddcolumn   throws sqlexception
return true
public boolean supportsaltertablewithdropcolumn   throws sqlexception
return false
public boolean supportsbatchupdates   throws sqlexception
return false
public boolean supportscatalogsindatamanipulation   throws sqlexception
return false
public boolean supportscatalogsinindexdefinitions   throws sqlexception
return false
public boolean supportscatalogsinprivilegedefinitions   throws sqlexception
return false
public boolean supportscatalogsinprocedurecalls   throws sqlexception
return false
public boolean supportscatalogsintabledefinitions   throws sqlexception
return false
public boolean supportscolumnaliasing   throws sqlexception
return true
public boolean supportsconvert   throws sqlexception
throw new sqlexception
public boolean supportsconvert int fromtype  int totype  throws sqlexception
throw new sqlexception
public boolean supportscoresqlgrammar   throws sqlexception
throw new sqlexception
public boolean supportscorrelatedsubqueries   throws sqlexception
throw new sqlexception
public boolean supportsdatadefinitionanddatamanipulationtransactions
throws sqlexception
throw new sqlexception
public boolean supportsdatamanipulationtransactionsonly   throws sqlexception
throw new sqlexception
public boolean supportsdifferenttablecorrelationnames   throws sqlexception
throw new sqlexception
public boolean supportsexpressionsinorderby   throws sqlexception
throw new sqlexception
public boolean supportsextendedsqlgrammar   throws sqlexception
throw new sqlexception
public boolean supportsfullouterjoins   throws sqlexception
throw new sqlexception
public boolean supportsgetgeneratedkeys   throws sqlexception
throw new sqlexception
public boolean supportsgroupby   throws sqlexception
return true
public boolean supportsgroupbybeyondselect   throws sqlexception
throw new sqlexception
public boolean supportsgroupbyunrelated   throws sqlexception
throw new sqlexception
public boolean supportsintegrityenhancementfacility   throws sqlexception
throw new sqlexception
public boolean supportslikeescapeclause   throws sqlexception
throw new sqlexception
public boolean supportslimitedouterjoins   throws sqlexception
throw new sqlexception
public boolean supportsminimumsqlgrammar   throws sqlexception
throw new sqlexception
public boolean supportsmixedcaseidentifiers   throws sqlexception
throw new sqlexception
public boolean supportsmixedcasequotedidentifiers   throws sqlexception
throw new sqlexception
public boolean supportsmultipleopenresults   throws sqlexception
throw new sqlexception
public boolean supportsmultipleresultsets   throws sqlexception
return false
public boolean supportsmultipletransactions   throws sqlexception
throw new sqlexception
public boolean supportsnamedparameters   throws sqlexception
throw new sqlexception
public boolean supportsnonnullablecolumns   throws sqlexception
return false
public boolean supportsopencursorsacrosscommit   throws sqlexception
throw new sqlexception
public boolean supportsopencursorsacrossrollback   throws sqlexception
throw new sqlexception
public boolean supportsopenstatementsacrosscommit   throws sqlexception
throw new sqlexception
public boolean supportsopenstatementsacrossrollback   throws sqlexception
throw new sqlexception
public boolean supportsorderbyunrelated   throws sqlexception
throw new sqlexception
public boolean supportsouterjoins   throws sqlexception
return true
public boolean supportspositioneddelete   throws sqlexception
return false
public boolean supportspositionedupdate   throws sqlexception
return false
public boolean supportsresultsetconcurrency int type  int concurrency
throws sqlexception
throw new sqlexception
public boolean supportsresultsetholdability int holdability
throws sqlexception
return false
public boolean supportsresultsettype int type  throws sqlexception
return true
public boolean supportssavepoints   throws sqlexception
return false
public boolean supportsschemasindatamanipulation   throws sqlexception
return false
public boolean supportsschemasinindexdefinitions   throws sqlexception
return false
public boolean supportsschemasinprivilegedefinitions   throws sqlexception
return false
public boolean supportsschemasinprocedurecalls   throws sqlexception
return false
public boolean supportsschemasintabledefinitions   throws sqlexception
return false
public boolean supportsselectforupdate   throws sqlexception
return false
public boolean supportsstatementpooling   throws sqlexception
throw new sqlexception
public boolean supportsstoredfunctionsusingcallsyntax   throws sqlexception
throw new sqlexception
public boolean supportsstoredprocedures   throws sqlexception
return false
public boolean supportssubqueriesincomparisons   throws sqlexception
throw new sqlexception
public boolean supportssubqueriesinexists   throws sqlexception
throw new sqlexception
public boolean supportssubqueriesinins   throws sqlexception
throw new sqlexception
public boolean supportssubqueriesinquantifieds   throws sqlexception
throw new sqlexception
public boolean supportstablecorrelationnames   throws sqlexception
throw new sqlexception
public boolean supportstransactionisolationlevel int level
throws sqlexception
throw new sqlexception
public boolean supportstransactions   throws sqlexception
return false
public boolean supportsunion   throws sqlexception
throw new sqlexception
public boolean supportsunionall   throws sqlexception
throw new sqlexception
public boolean updatesaredetected int type  throws sqlexception
throw new sqlexception
public boolean useslocalfilepertable   throws sqlexception
throw new sqlexception
public boolean useslocalfiles   throws sqlexception
throw new sqlexception
public boolean iswrapperfor class<?> iface  throws sqlexception
throw new sqlexception
public <t> t unwrap class<t> iface  throws sqlexception
throw new sqlexception
public static void main string args  throws sqlexception
hivedatabasemetadata meta   new hivedatabasemetadata null
system out println     meta getdrivername
system out println     meta getdriverversion