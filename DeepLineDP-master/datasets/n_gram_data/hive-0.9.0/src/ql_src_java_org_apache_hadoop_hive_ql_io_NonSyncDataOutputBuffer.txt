/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql io
import java io datainput
import java io dataoutputstream
import java io ioexception
import org apache hadoop hive common io nonsyncbytearrayoutputstream
/**
* a thread-not-safe version of hadoop's dataoutputbuffer, which removes all
* synchronized modifiers.
*/
public class nonsyncdataoutputbuffer extends dataoutputstream
private final nonsyncbytearrayoutputstream buffer
/** constructs a new empty buffer. */
public nonsyncdataoutputbuffer
this new nonsyncbytearrayoutputstream
private nonsyncdataoutputbuffer nonsyncbytearrayoutputstream buffer
super buffer
this buffer   buffer
/**
* returns the current contents of the buffer. data is only valid to
* {@link #getlength()}.
*/
public byte getdata
return buffer getdata
/** returns the length of the valid data currently in the buffer. */
public int getlength
return buffer getlength
/** resets the buffer to empty. */
public nonsyncdataoutputbuffer reset
written   0
buffer reset
return this
/** writes bytes from a datainput directly into the buffer. */
public void write datainput in  int length  throws ioexception
buffer write in  length
@override
public void write int b  throws ioexception
buffer write b
inccount 1
@override
public void write byte b  int off  int len  throws ioexception
buffer write b  off  len
inccount len
private void inccount int value
if  written   value < 0
written   integer max_value
else
written    value