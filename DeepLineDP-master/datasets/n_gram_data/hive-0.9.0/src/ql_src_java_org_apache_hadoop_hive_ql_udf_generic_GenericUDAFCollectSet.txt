/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import java util arraylist
import java util hashset
import java util set
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive ql exec description
import org apache hadoop hive ql exec udfargumenttypeexception
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql parse semanticexception
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorfactory
import org apache hadoop hive serde2 objectinspector objectinspectorutils
import org apache hadoop hive serde2 objectinspector primitiveobjectinspector
import org apache hadoop hive serde2 objectinspector standardlistobjectinspector
import org apache hadoop hive serde2 typeinfo typeinfo
/**
* genericudafcollectset
*/
@description name      value
public class genericudafcollectset extends abstractgenericudafresolver
static final log log   logfactory getlog genericudafcollectset class getname
public genericudafcollectset
@override
public genericudafevaluator getevaluator typeinfo parameters
throws semanticexception
if  parameters length    1
throw new udfargumenttypeexception parameters length   1
if  parameters getcategory      objectinspector category primitive
throw new udfargumenttypeexception 0
parameters gettypename
return new genericudafmksetevaluator
public static class genericudafmksetevaluator extends genericudafevaluator
// for partial1 and complete: objectinspectors for original data
private primitiveobjectinspector inputoi
// for partial2 and final: objectinspectors for partial aggregations (list
// of objs)
private standardlistobjectinspector loi
private standardlistobjectinspector internalmergeoi
public objectinspector init mode m  objectinspector parameters
throws hiveexception
super init m  parameters
// init output object inspectors
// the output of a partial aggregation is a list
if  m    mode partial1
inputoi    primitiveobjectinspector  parameters
return objectinspectorfactory
getstandardlistobjectinspector  primitiveobjectinspector  objectinspectorutils
getstandardobjectinspector inputoi
else
if    parameters instanceof standardlistobjectinspector
//no map aggregation.
inputoi    primitiveobjectinspector   objectinspectorutils
getstandardobjectinspector parameters
return  standardlistobjectinspector  objectinspectorfactory
getstandardlistobjectinspector inputoi
else
internalmergeoi    standardlistobjectinspector  parameters
inputoi    primitiveobjectinspector  internalmergeoi getlistelementobjectinspector
loi    standardlistobjectinspector  objectinspectorutils getstandardobjectinspector internalmergeoi
return loi
static class mkarrayaggregationbuffer implements aggregationbuffer
set<object> container
@override
public void reset aggregationbuffer agg  throws hiveexception
mkarrayaggregationbuffer  agg  container   new hashset<object>
@override
public aggregationbuffer getnewaggregationbuffer   throws hiveexception
mkarrayaggregationbuffer ret   new mkarrayaggregationbuffer
reset ret
return ret
//mapside
@override
public void iterate aggregationbuffer agg  object parameters
throws hiveexception
assert  parameters length    1
object p   parameters
if  p    null
mkarrayaggregationbuffer myagg    mkarrayaggregationbuffer  agg
putintoset p  myagg
//mapside
@override
public object terminatepartial aggregationbuffer agg  throws hiveexception
mkarrayaggregationbuffer myagg    mkarrayaggregationbuffer  agg
arraylist<object> ret   new arraylist<object> myagg container size
ret addall myagg container
return ret
@override
public void merge aggregationbuffer agg  object partial
throws hiveexception
mkarrayaggregationbuffer myagg    mkarrayaggregationbuffer  agg
arraylist<object> partialresult    arraylist<object>  internalmergeoi getlist partial
for object i   partialresult
putintoset i  myagg
@override
public object terminate aggregationbuffer agg  throws hiveexception
mkarrayaggregationbuffer myagg    mkarrayaggregationbuffer  agg
arraylist<object> ret   new arraylist<object> myagg container size
ret addall myagg container
return ret
private void putintoset object p  mkarrayaggregationbuffer myagg
if  myagg container contains p
return
object pcopy   objectinspectorutils copytostandardobject p
this inputoi
myagg container add pcopy