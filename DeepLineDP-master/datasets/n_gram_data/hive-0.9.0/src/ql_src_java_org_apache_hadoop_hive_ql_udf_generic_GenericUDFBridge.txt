/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import java io serializable
import java lang reflect method
import java util arraylist
import org apache hadoop hive ql exec functionregistry
import org apache hadoop hive ql exec udf
import org apache hadoop hive ql exec udfargumentexception
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql udf generic genericudfutils conversionhelper
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorfactory
import org apache hadoop hive serde2 objectinspector objectinspectorfactory objectinspectoroptions
import org apache hadoop hive serde2 typeinfo typeinfo
import org apache hadoop hive serde2 typeinfo typeinfoutils
import org apache hadoop util reflectionutils
/**
* genericudfbridge encapsulates udf to provide the same interface as
* genericudf.
*
* note that genericudfbridge implements serializable because the name of the
* udf class needs to be serialized with the plan.
*
*/
public class genericudfbridge extends genericudf implements serializable
/**
* the name of the udf.
*/
string udfname
/**
* whether the udf is an operator or not. this controls how the display string
* is generated.
*/
boolean isoperator
/**
* the underlying udf class.
*/
class<? extends udf> udfclass
/**
* the underlying udf class name.
*/
string udfclassname
/**
* greate a new genericudfbridge object.
*
* @param udfname
*          the name of the corresponding udf.
* @param isoperator
* @param udfclass
*/
public genericudfbridge string udfname  boolean isoperator
class<? extends udf> udfclass
this udfname   udfname
this isoperator   isoperator
this udfclass   udfclass
this udfclassname   udfclass    null ? udfclass getname     null
// for java serialization only
public genericudfbridge
public void setudfname string udfname
this udfname   udfname
public string getudfname
return udfname
public string getudfclassname
return udfclassname
public void setudfclassname string udfclassname
this udfclassname   udfclassname
public boolean isoperator
return isoperator
public void setoperator boolean isoperator
this isoperator   isoperator
public void setudfclass class<? extends udf> udfclass
this udfclass   udfclass
public class<? extends udf> getudfclass
return udfclass
/**
* the underlying method of the udf class.
*/
transient method udfmethod
/**
* helper to convert the parameters before passing to udfmethod.
*/
transient conversionhelper conversionhelper
/**
* the actual udf object.
*/
transient udf udf
/**
* the non-deferred real arguments for method invocation.
*/
transient object realarguments
@override
public objectinspector initialize objectinspector arguments  throws udfargumentexception
if  udfclass    null
throw new udfargumentexception
udfclassname
udf    udf  reflectionutils newinstance udfclass  null
// resolve for the method based on argument types
arraylist<typeinfo> argumenttypeinfos   new arraylist<typeinfo>
arguments length
for  objectinspector argument   arguments
argumenttypeinfos add typeinfoutils
gettypeinfofromobjectinspector argument
udfmethod   udf getresolver   getevalmethod argumenttypeinfos
udfmethod setaccessible true
// create parameter converters
conversionhelper   new conversionhelper udfmethod  arguments
// create the non-deferred realargument
realarguments   new object
// get the return objectinspector.
objectinspector returnoi   objectinspectorfactory
getreflectionobjectinspector udfmethod getgenericreturntype
objectinspectoroptions java
return returnoi
@override
public object evaluate deferredobject arguments  throws hiveexception
assert  arguments length    realarguments length
// calculate all the arguments
for  int i   0  i < realarguments length  i
realarguments   arguments get
// call the function
object result   functionregistry invoke udfmethod  udf  conversionhelper
convertifnecessary realarguments
return result
@override
public string getdisplaystring string children
if  isoperator
if  children length    1
// prefix operator
return     udfname       children
else
// infix operator
assert children length    2
return     children       udfname       children
else
stringbuilder sb   new stringbuilder
sb append udfname
sb append
for  int i   0  i < children length  i
sb append children
if  i   1 < children length
sb append
sb append
return sb tostring
@override
public string getrequiredjars
return udf getrequiredjars
@override
public string getrequiredfiles
return udf getrequiredfiles