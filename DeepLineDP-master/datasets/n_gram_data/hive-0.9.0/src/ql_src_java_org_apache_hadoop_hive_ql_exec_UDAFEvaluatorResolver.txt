/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql exec
import java util list
import org apache hadoop hive serde2 typeinfo typeinfo
/**
* the udf method resolver interface. a user can plugin a resolver to their udf
* by implementing the functions in this interface. note that the resolver is
* stored in the udf class as an instance variable. we did not use a static
* variable because many resolvers maintain the class of the enclosing udf as
* state and are called from a base class e.g. udfbasecompare. this makes it
* very easy to write udfs that want to do resolution similar to the comparison
* operators. such udfs just need to extend udfbasecompare and do not have to
* care about the udfmethodresolver interface. same is true for udfs that want
* to do resolution similar to that done by the numeric operators. such udfs
* simply have to extend udfbasenumericop class. for the default resolution the
* udf implementation simply needs to extend the udf class.
*/
public interface udafevaluatorresolver
/**
* gets the evaluator class corresponding to the passed parameter list.
*/
class<? extends udafevaluator> getevaluatorclass list<typeinfo> argclasses
throws udfargumentexception