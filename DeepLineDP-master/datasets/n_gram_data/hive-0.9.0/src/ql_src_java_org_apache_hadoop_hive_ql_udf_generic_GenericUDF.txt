/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import org apache hadoop hive ql exec functionregistry
import org apache hadoop hive ql exec udfargumentexception
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql udf udftype
import org apache hadoop hive serde2 objectinspector constantobjectinspector
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorutils
/**
* a generic user-defined function (genericudf) for the use with hive.
*
* new genericudf classes need to inherit from this genericudf class.
*
* the genericudf are superior to normal udfs in the following ways: 1. it can
* accept arguments of complex types, and return complex types. 2. it can accept
* variable length of arguments. 3. it can accept an infinite number of function
* signature - for example, it's easy to write a genericudf that accepts
* array<int>, array<array<int>> and so on (arbitrary levels of nesting). 4. it
* can do short-circuit evaluations using deferedobject.
*/
@udftype deterministic   true
public abstract class genericudf
/**
* a defered object allows us to do lazy-evaluation and short-circuiting.
* genericudf use deferedobject to pass arguments.
*/
public static interface deferredobject
object get   throws hiveexception
/**
* a basic dummy implementation of deferredobject which just stores a java
* object reference.
*/
public static class deferredjavaobject implements deferredobject
private object value
public deferredjavaobject object value
this value   value
@override
public object get   throws hiveexception
return value
/**
* the constructor.
*/
public genericudf
/**
* initialize this genericudf. this will be called once and only once per
* genericudf instance.
*
* @param arguments
*          the objectinspector for the arguments
* @throws udfargumentexception
*           thrown when arguments have wrong types, wrong length, etc.
* @return the objectinspector for the return value
*/
public abstract objectinspector initialize objectinspector arguments
throws udfargumentexception
/**
* initialize this genericudf.  additionally, if the arguments are constant
* and the function is eligible to be folded, then the constant value
* returned by this udf will be computed and stored in the
* constantobjectinspector returned.  otherwise, the function behaves exactly
* like initialize().
*/
public objectinspector initializeandfoldconstants objectinspector arguments
throws udfargumentexception
objectinspector oi   initialize arguments
// if the udf depends on any external resources, we can't fold because the
// resources may not be available at compile time.
if  getrequiredfiles      null
getrequiredjars      null
return oi
boolean allconstant   true
for  int ii   0  ii < arguments length    ii
if   objectinspectorutils isconstantobjectinspector arguments
allconstant   false
break
if  allconstant
objectinspectorutils isconstantobjectinspector oi
functionregistry isdeterministic this
functionregistry isstateful this
objectinspectorutils supportsconstantobjectinspector oi
deferredobject argumentvalues
new deferredjavaobject
for  int ii   0  ii < arguments length    ii
argumentvalues   new deferredjavaobject
constantobjectinspector arguments  getwritableconstantvalue
try
object constantvalue   evaluate argumentvalues
oi   objectinspectorutils getconstantobjectinspector oi  constantvalue
catch  hiveexception e
throw new udfargumentexception e
return oi
/**
* the following two functions can be overridden to automatically include
* additional resources required by this udf.  the return types should be
* arrays of paths.
*/
public string getrequiredjars
return null
public string getrequiredfiles
return null
/**
* evaluate the genericudf with the arguments.
*
* @param arguments
*          the arguments as deferedobject, use deferedobject.get() to get the
*          actual argument object. the objects can be inspected by the
*          objectinspectors passed in the initialize call.
* @return the
*/
public abstract object evaluate deferredobject arguments
throws hiveexception
/**
* get the string to be displayed in explain.
*/
public abstract string getdisplaystring string children