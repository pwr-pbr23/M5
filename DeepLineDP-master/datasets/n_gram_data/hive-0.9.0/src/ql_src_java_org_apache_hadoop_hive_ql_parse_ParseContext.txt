/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql parse
import java io serializable
import java util hashmap
import java util hashset
import java util linkedhashmap
import java util list
import java util map
import java util set
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql context
import org apache hadoop hive ql exec abstractmapjoinoperator
import org apache hadoop hive ql exec groupbyoperator
import org apache hadoop hive ql exec joinoperator
import org apache hadoop hive ql exec mapjoinoperator
import org apache hadoop hive ql exec operator
import org apache hadoop hive ql exec tablescanoperator
import org apache hadoop hive ql exec task
import org apache hadoop hive ql hooks lineageinfo
import org apache hadoop hive ql hooks readentity
import org apache hadoop hive ql metadata table
import org apache hadoop hive ql optimizer unionproc unionproccontext
import org apache hadoop hive ql plan exprnodedesc
import org apache hadoop hive ql plan loadfiledesc
import org apache hadoop hive ql plan loadtabledesc
import org apache hadoop hive ql plan mapjoindesc
import org apache hadoop hive ql plan filterdesc sampledesc
/**
* parse context: the current parse context. this is passed to the optimizer
* which then transforms the operator tree using the parse context. all the
* optimizations are performed sequentially and then the new parse context
* populated. note that since the parse context contains the operator tree, it
* can be easily retrieved by the next optimization step or finally for task
* generation after the plan has been completely optimized.
*
**/
public class parsecontext
private qb qb
private astnode ast
private hashmap<tablescanoperator  exprnodedesc> optopartpruner
private hashmap<tablescanoperator  prunedpartitionlist> optopartlist
private hashmap<tablescanoperator  sampledesc> optosamplepruner
private hashmap<string  operator<? extends serializable>> topops
private hashmap<string  operator<? extends serializable>> topselops
private linkedhashmap<operator<? extends serializable>  opparsecontext> opparsectx
private map<joinoperator  qbjointree> joincontext
private map<mapjoinoperator  qbjointree> mapjoincontext
private hashmap<tablescanoperator  table> toptotable
private hashmap<string  splitsample> nametosplitsample
private list<loadtabledesc> loadtablework
private list<loadfiledesc> loadfilework
private context ctx
private hiveconf conf
private hashmap<string  string> idtotablenamemap
private int desttableid
private unionproccontext uctx
private list<abstractmapjoinoperator<? extends mapjoindesc>> listmapjoinopsnoreducer     list of map join
// operators with no
// reducer
private map<groupbyoperator  set<string>> groupoptoinputtables
private map<string  prunedpartitionlist> prunedpartitions
/**
* the lineage information.
*/
private lineageinfo linfo
// is set to true if the expression only contains partitioning columns and not
// any other column reference.
// this is used to optimize select * from table where ... scenario, when the
// where condition only references
// partitioning columns - the partitions are identified and streamed directly
// to the client without requiring
// a map-reduce job
private boolean hasnonpartcols
private semanticanalyzer globallimitctx globallimitctx
private hashset<readentity> semanticinputs
private list<task<? extends serializable>> roottasks
public parsecontext
/**
* @param conf
* @param qb
*          current qb
* @param ast
*          current parse tree
* @param optopartpruner
*          map from table scan operator to partition pruner
* @param optopartlist
* @param topops
*          list of operators for the top query
* @param topselops
*          list of operators for the selects introduced for column pruning
* @param opparsectx
*          operator parse context - contains a mapping from operator to
*          operator parse state (row resolver etc.)
* @param joincontext
*          context needed join processing (map join specifically)
* @param toptotable
*          the top tables being processed
* @param loadtablework
*          list of destination tables being loaded
* @param loadfilework
*          list of destination files being loaded
* @param ctx
*          parse context
* @param idtotablenamemap
* @param uctx
* @param desttableid
* @param listmapjoinopsnoreducer
*          list of map join operators with no reducer
* @param groupoptoinputtables
* @param prunedpartitions
* @param optosamplepruner
*          operator to sample pruner map
* @param globallimitctx
* @param nametosplitsample
* @param roottasks
*/
public parsecontext
hiveconf conf
qb qb
astnode ast
hashmap<tablescanoperator  exprnodedesc> optopartpruner
hashmap<tablescanoperator  prunedpartitionlist> optopartlist
hashmap<string  operator<? extends serializable>> topops
hashmap<string  operator<? extends serializable>> topselops
linkedhashmap<operator<? extends serializable>  opparsecontext> opparsectx
map<joinoperator  qbjointree> joincontext
hashmap<tablescanoperator  table> toptotable
list<loadtabledesc> loadtablework  list<loadfiledesc> loadfilework
context ctx  hashmap<string  string> idtotablenamemap  int desttableid
unionproccontext uctx  list<abstractmapjoinoperator<? extends mapjoindesc>> listmapjoinopsnoreducer
map<groupbyoperator  set<string>> groupoptoinputtables
map<string  prunedpartitionlist> prunedpartitions
hashmap<tablescanoperator  sampledesc> optosamplepruner
semanticanalyzer globallimitctx globallimitctx
hashmap<string  splitsample> nametosplitsample
hashset<readentity> semanticinputs  list<task<? extends serializable>> roottasks
this conf   conf
this qb   qb
this ast   ast
this optopartpruner   optopartpruner
this optopartlist   optopartlist
this joincontext   joincontext
this toptotable   toptotable
this loadfilework   loadfilework
this loadtablework   loadtablework
this opparsectx   opparsectx
this topops   topops
this topselops   topselops
this ctx   ctx
this idtotablenamemap   idtotablenamemap
this desttableid   desttableid
this uctx   uctx
this listmapjoinopsnoreducer   listmapjoinopsnoreducer
hasnonpartcols   false
this groupoptoinputtables   groupoptoinputtables
this prunedpartitions   prunedpartitions
this optosamplepruner   optosamplepruner
this nametosplitsample   nametosplitsample
this globallimitctx   globallimitctx
this semanticinputs   semanticinputs
this roottasks   roottasks
/**
* @return the qb
*/
public qb getqb
return qb
/**
* @param qb
*          the qb to set
*/
public void setqb qb qb
this qb   qb
/**
* @return the context
*/
public context getcontext
return ctx
/**
* @param ctx
*          the context to set
*/
public void setcontext context ctx
this ctx   ctx
/**
* @return the hive conf
*/
public hiveconf getconf
return conf
/**
* @param conf
*          the conf to set
*/
public void setconf hiveconf conf
this conf   conf
/**
* @return the ast
*/
public astnode getparsetree
return ast
/**
* @param ast
*          the parsetree to set
*/
public void setparsetree astnode ast
this ast   ast
/**
* @return the optopartpruner
*/
public hashmap<tablescanoperator  exprnodedesc> getoptopartpruner
return optopartpruner
/**
* @param optopartpruner
*          the optopartpruner to set
*/
public void setoptopartpruner
hashmap<tablescanoperator  exprnodedesc> optopartpruner
this optopartpruner   optopartpruner
public hashmap<tablescanoperator  prunedpartitionlist> getoptopartlist
return optopartlist
public void setoptopartlist hashmap<tablescanoperator  prunedpartitionlist> optopartlist
this optopartlist   optopartlist
/**
* @return the toptotable
*/
public hashmap<tablescanoperator  table> gettoptotable
return toptotable
/**
* @param toptotable
*          the toptotable to set
*/
public void settoptotable hashmap<tablescanoperator  table> toptotable
this toptotable   toptotable
/**
* @return the topops
*/
public hashmap<string  operator<? extends serializable>> gettopops
return topops
/**
* @param topops
*          the topops to set
*/
public void settopops hashmap<string  operator<? extends serializable>> topops
this topops   topops
/**
* @return the topselops
*/
public hashmap<string  operator<? extends serializable>> gettopselops
return topselops
/**
* @param topselops
*          the topselops to set
*/
public void settopselops
hashmap<string  operator<? extends serializable>> topselops
this topselops   topselops
/**
* @return the opparsectx
*/
public linkedhashmap<operator<? extends serializable>  opparsecontext> getopparsectx
return opparsectx
/**
* @param opparsectx
*          the opparsectx to set
*/
public void setopparsectx
linkedhashmap<operator<? extends serializable>  opparsecontext> opparsectx
this opparsectx   opparsectx
public hashmap<string  splitsample> getnametosplitsample
return nametosplitsample
public void setnametosplitsample hashmap<string  splitsample> nametosplitsample
this nametosplitsample   nametosplitsample
/**
* @return the loadtablework
*/
public list<loadtabledesc> getloadtablework
return loadtablework
/**
* @param loadtablework
*          the loadtablework to set
*/
public void setloadtablework list<loadtabledesc> loadtablework
this loadtablework   loadtablework
/**
* @return the loadfilework
*/
public list<loadfiledesc> getloadfilework
return loadfilework
/**
* @param loadfilework
*          the loadfilework to set
*/
public void setloadfilework list<loadfiledesc> loadfilework
this loadfilework   loadfilework
public hashmap<string  string> getidtotablenamemap
return idtotablenamemap
public void setidtotablenamemap hashmap<string  string> idtotablenamemap
this idtotablenamemap   idtotablenamemap
public int getdesttableid
return desttableid
public void setdesttableid int desttableid
this desttableid   desttableid
public unionproccontext getuctx
return uctx
public void setuctx unionproccontext uctx
this uctx   uctx
/**
* @return the joincontext
*/
public map<joinoperator  qbjointree> getjoincontext
return joincontext
/**
* @param joincontext
*          the joincontext to set
*/
public void setjoincontext map<joinoperator  qbjointree> joincontext
this joincontext   joincontext
/**
* @return the listmapjoinopsnoreducer
*/
public list<abstractmapjoinoperator<? extends mapjoindesc>> getlistmapjoinopsnoreducer
return listmapjoinopsnoreducer
/**
* @param listmapjoinopsnoreducer
*          the listmapjoinopsnoreducer to set
*/
public void setlistmapjoinopsnoreducer
list<abstractmapjoinoperator<? extends mapjoindesc>> listmapjoinopsnoreducer
this listmapjoinopsnoreducer   listmapjoinopsnoreducer
/**
* sets the hasnonpartcols flag.
*
* @param val
*/
public void sethasnonpartcols boolean val
hasnonpartcols   val
/**
* gets the value of the hasnonpartcols flag.
*/
public boolean gethasnonpartcols
return hasnonpartcols
/**
* @return the optosamplepruner
*/
public hashmap<tablescanoperator  sampledesc> getoptosamplepruner
return optosamplepruner
/**
* @param optosamplepruner
*          the optosamplepruner to set
*/
public void setoptosamplepruner
hashmap<tablescanoperator  sampledesc> optosamplepruner
this optosamplepruner   optosamplepruner
/**
* @return the groupoptoinputtables
*/
public map<groupbyoperator  set<string>> getgroupoptoinputtables
return groupoptoinputtables
/**
* @param groupoptoinputtables
*/
public void setgroupoptoinputtables
map<groupbyoperator  set<string>> groupoptoinputtables
this groupoptoinputtables   groupoptoinputtables
/**
* @return pruned partition map
*/
public map<string  prunedpartitionlist> getprunedpartitions
return prunedpartitions
/**
* @param prunedpartitions
*/
public void setprunedpartitions
map<string  prunedpartitionlist> prunedpartitions
this prunedpartitions   prunedpartitions
/**
* sets the lineage information.
*
* @param linfo the lineage information.
*/
public void setlineageinfo lineageinfo linfo
this linfo   linfo
/**
* gets the associated lineage information.
*
* @return lineageinfo
*/
public lineageinfo getlineageinfo
return linfo
public map<mapjoinoperator  qbjointree> getmapjoincontext
return mapjoincontext
public void setmapjoincontext map<mapjoinoperator  qbjointree> mapjoincontext
this mapjoincontext   mapjoincontext
public semanticanalyzer globallimitctx getgloballimitctx
return globallimitctx
public void setgloballimitctx semanticanalyzer globallimitctx globallimitctx
this globallimitctx   globallimitctx
public hashset<readentity> getsemanticinputs
return semanticinputs
public void replaceroottask task<? extends serializable> roottask
list<? extends task<? extends serializable>> tasks
this roottasks remove roottask
this roottasks addall tasks