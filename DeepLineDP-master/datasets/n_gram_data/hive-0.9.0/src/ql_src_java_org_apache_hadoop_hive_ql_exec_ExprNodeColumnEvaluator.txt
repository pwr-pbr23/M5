/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql exec
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql plan exprnodecolumndesc
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector structfield
import org apache hadoop hive serde2 objectinspector structobjectinspector
import org apache hadoop hive serde2 objectinspector unionobjectinspector
import org apache hadoop hive serde2 objectinspector standardunionobjectinspector standardunion
/**
* this evaluator gets the column from the row object.
*/
public class exprnodecolumnevaluator extends exprnodeevaluator
protected exprnodecolumndesc expr
transient boolean simplecase
transient structobjectinspector inspector
transient structfield field
transient structobjectinspector inspectors
transient structfield fields
transient boolean unionfield
public exprnodecolumnevaluator exprnodecolumndesc expr
this expr   expr
@override
public objectinspector initialize objectinspector rowinspector  throws hiveexception
// we need to support field names like key.0, value.1 between
// map-reduce boundary.
string names   expr getcolumn   split
string unionfields   names split
if  names length    1    unionfields length    1
simplecase   true
inspector    structobjectinspector  rowinspector
field   inspector getstructfieldref names
return field getfieldobjectinspector
else
simplecase   false
inspectors   new structobjectinspector
fields   new structfield
unionfield   new boolean
int unionindex    1
for  int i   0  i < names length  i
if  i    0
inspectors    structobjectinspector  rowinspector
else
if  unionindex     1
inspectors    structobjectinspector
unionobjectinspector fields getfieldobjectinspector
getobjectinspectors   get unionindex
else
inspectors    structobjectinspector  fields
getfieldobjectinspector
// to support names like _colx:1._coly
unionfields   names split
fields   inspectors getstructfieldref unionfields
if  unionfields length > 1
unionindex   integer parseint unionfields
unionfield   true
else
unionindex    1
unionfield   false
return fields getfieldobjectinspector
@override
public object evaluate object row  throws hiveexception
if  simplecase
return inspector getstructfielddata row  field
object o   row
for  int i   0  i < fields length  i
o   inspectors getstructfielddata o  fields
if  unionfield
o     standardunion o  getobject
return o