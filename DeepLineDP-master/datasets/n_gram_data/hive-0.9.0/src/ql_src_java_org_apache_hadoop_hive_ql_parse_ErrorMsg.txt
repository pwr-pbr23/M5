/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql parse
import java util hashmap
import java util map
import java util regex matcher
import java util regex pattern
import org antlr runtime tree tree
import org apache hadoop hive ql metadata hiveutils
/**
* list of error messages thrown by the parser.
**/
public enum errormsg
// sqlstates are taken from section 12.5 of iso-9075.
// see http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt
// most will just rollup to the generic syntax error state of 42000, but
// specific errors can override the that state.
// see this page for how mysql uses sqlstate codes:
// http://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-error-sqlstates.html
generic_error
invalid_table
invalid_column
invalid_index
invalid_table_or_column
ambiguous_table_or_column
invalid_partition
ambiguous_column
ambiguous_table_alias
invalid_table_alias
no_table_alias
invalid_function
invalid_function_signature
invalid_operator_signature
invalid_argument
invalid_argument_length
invalid_argument_type
invalid_join_condition_1
invalid_join_condition_2
invalid_join_condition_3
invalid_transform
duplicate_groupby_key
unsupported_multiple_distincts
no_subquery_alias
no_insert_insubquery
non_key_expr_in_groupby
invalid_xpath
invalid_path     illegal_path
invalid_numerical_constant
invalid_arrayindex_constant
invalid_mapindex_constant
invalid_mapindex_type
non_collection_type
select_distinct_with_groupby
column_repeated_in_partitioning_cols
duplicate_column_names
invalid_bucket_number
column_repeated_in_cluster_sort
sample_restriction
sample_column_not_found
no_partition_predicate
invalid_dot
invalid_tbl_ddl_serde
target_table_column_mismatch
table_alias_not_allowed
clusterby_distributeby_conflict
orderby_distributeby_conflict
clusterby_sortby_conflict
orderby_sortby_conflict
clusterby_orderby_conflict
no_limit_with_orderby
no_cartesian_product
union_notin_subq
invalid_input_format_type
invalid_output_format_type
no_valid_partn
no_outer_mapjoin
invalid_mapjoin_hint
invalid_mapjoin_table
non_bucketed_table
bucketed_numberator_bigger_denominator
need_partition_error
ctas_ctlt_coexistence
lines_terminated_by_non_newline
ctas_collst_coexistence
ctlt_collst_coexistence
invalid_select_schema
ctas_parcol_coexistence
ctas_multi_loadfile
ctas_exttbl_coexistence
insert_external_table
database_not_exists
table_already_exists
column_alias_already_exists
udtf_multiple_expr
udtf_require_as
udtf_no_group_by
udtf_no_sort_by
udtf_no_cluster_by
udtf_no_distribute_by
udtf_invalid_location
udtf_lateral_view
udtf_alias_mismatch
udf_stateful_invalid_location
lateral_view_with_join
lateral_view_invalid_child
output_specified_multiple_times
invalid_as
view_col_mismatch
dml_against_view
analyze_view
view_partition_total
view_partition_mismatch
partition_dyn_sta_order
dynamic_partition_disabled
dynamic_partition_strict_mode
dynamic_partition_merge
nonexistpartcol
unsupported_type
create_non_native_as
load_into_non_native
lockmgr_not_specified
lockmgr_not_initialized
lock_cannot_be_acquired
zookeeper_client_could_not_be_initialized
overwrite_archived_part
archive_methods_disabled
archive_on_muli_parts
unarchive_on_muli_parts
archive_on_table
reserved_part_val
hold_ddltime_on_nonexist_partitions
offline_table_or_partition
outerjoin_uses_filters
need_partition_specification
invalid_metadata
need_table_specification
partition_exists
table_data_exists
incompatible_schema
exim_for_non_native
insert_into_bucketized_table
no_compare_bigint_string
no_compare_bigint_double
partspec_differ_from_schema
partition_column_non_primitive
insert_into_dynamicpartition_ifnotexists
private string mesg
private string sqlstate
private static final char space
private static final pattern error_message_pattern   pattern compile
private static map<string  errormsg> mesgtoerrormsgmap   new hashmap<string  errormsg>
private static int minmesglength    1
static
for  errormsg errormsg   values
mesgtoerrormsgmap put errormsg getmsg   trim    errormsg
int length   errormsg getmsg   trim   length
if  minmesglength     1    length < minmesglength
minmesglength   length
/**
* for a given error message string, searches for a <code>errormsg</code> enum
* that appears to be a match. if an match is found, returns the
* <code>sqlstate</code> associated with the <code>errormsg</code>. if a match
* is not found or <code>errormsg</code> has no <code>sqlstate</code>, returns
* the <code>sqlstate</code> bound to the <code>generic_error</code>
* <code>errormsg</code>.
*
* @param mesg
*          an error message string
* @return sqlstate
*/
public static string findsqlstate string mesg
if  mesg    null
return generic_error getsqlstate
// first see if there is a direct match
errormsg errormsg   mesgtoerrormsgmap get mesg
if  errormsg    null
if  errormsg getsqlstate      null
return errormsg getsqlstate
else
return generic_error getsqlstate
// if not see if the mesg follows type of format, which is typically the
// case:
// line 1:14 table not found table_name
string truncatedmesg   mesg trim
matcher match   error_message_pattern matcher mesg
if  match matches
truncatedmesg   match group 1
// appends might exist after the root message, so strip tokens off until we
// match
while  truncatedmesg length   > minmesglength
errormsg   mesgtoerrormsgmap get truncatedmesg trim
if  errormsg    null
if  errormsg getsqlstate      null
return errormsg getsqlstate
else
return generic_error getsqlstate
int lastspace   truncatedmesg lastindexof space
if  lastspace     1
break
// hack off the last word and try again
truncatedmesg   truncatedmesg substring 0  lastspace  trim
return generic_error getsqlstate
errormsg string mesg
// 42000 is the generic sqlstate for syntax error.
this mesg
errormsg string mesg  string sqlstate
this mesg   mesg
this sqlstate   sqlstate
private static int getline astnode tree
if  tree getchildcount      0
return tree gettoken   getline
return getline  astnode  tree getchild 0
private static int getcharpositioninline astnode tree
if  tree getchildcount      0
return tree gettoken   getcharpositioninline
return getcharpositioninline  astnode  tree getchild 0
// dirty hack as this will throw away spaces and other things - find a better
// way!
public static string gettext astnode tree
if  tree getchildcount      0
return tree gettext
return gettext  astnode  tree getchild tree getchildcount     1
public string getmsg astnode tree
stringbuilder sb   new stringbuilder
renderposition sb  tree
sb append
sb append mesg
sb append
sb append gettext tree
sb append
renderorigin sb  tree getorigin
return sb tostring
public static void renderorigin stringbuilder sb  astnodeorigin origin
while  origin    null
sb append
sb append origin getobjecttype
sb append
sb append origin getobjectname
sb append
sb append hiveutils line_sep
sb append origin getobjectdefinition
sb append hiveutils line_sep
sb append
sb append origin getusagealias
sb append
astnode usagenode   origin getusagenode
renderposition sb  usagenode
origin   usagenode getorigin
private static void renderposition stringbuilder sb  astnode tree
sb append
sb append getline tree
sb append
sb append getcharpositioninline tree
public string getmsg tree tree
return getmsg  astnode  tree
public string getmsg astnode tree  string reason
return getmsg tree        reason
public string getmsg tree tree  string reason
return getmsg  astnode  tree  reason
public string getmsg string reason
return mesg       reason
public string getmsg
return mesg
public string getsqlstate
return sqlstate