/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive hbase
import java io ioexception
import java util properties
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop fs filesystem
import org apache hadoop fs path
import org apache hadoop hbase hbaseconfiguration
import org apache hadoop hbase client htable
import org apache hadoop hbase client put
import org apache hadoop hbase io immutablebyteswritable
import org apache hadoop hbase mapred tablemapreduceutil
import org apache hadoop hbase mapreduce tableoutputformat
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql exec filesinkoperator recordwriter
import org apache hadoop hive ql io hiveoutputformat
import org apache hadoop hive shims shimloader
import org apache hadoop io writable
import org apache hadoop mapred jobconf
import org apache hadoop mapred outputformat
import org apache hadoop mapreduce job
import org apache hadoop mapreduce jobcontext
import org apache hadoop util progressable
/**
* hivehbasetableoutputformat implements hiveoutputformat for hbase tables.
* we also need to implement the @deprecated org.apache.hadoop.mapred.outformat<?,?>
* class to keep it compliant with hive interfaces.
*/
public class hivehbasetableoutputformat extends
tableoutputformat<immutablebyteswritable> implements
hiveoutputformat<immutablebyteswritable  put>
outputformat<immutablebyteswritable  put>
static final log log   logfactory getlog hivehbasetableoutputformat class
public static final string hbase_wal_enabled
/**
* update the out table, and output an empty key as the key.
*
* @param jc the job configuration file
* @param finaloutpath the final output table name
* @param valueclass the value class
* @param iscompressed whether the content is compressed or not
* @param tableproperties the table info of the corresponding table
* @param progress progress used for status report
* @return the recordwriter for the output file
*/
@override
public recordwriter gethiverecordwriter
jobconf jc
path finaloutpath
class<? extends writable> valueclass
boolean iscompressed
properties tableproperties
final progressable progressable  throws ioexception
string hbasetablename   jc get hbaseserde hbase_table_name
jc set tableoutputformat output_table  hbasetablename
final boolean walenabled   hiveconf getboolvar
jc  hiveconf confvars hive_hbase_wal_enabled
final htable table   new htable hbaseconfiguration create jc   hbasetablename
table setautoflush false
return new recordwriter
@override
public void close boolean abort  throws ioexception
if   abort
table flushcommits
@override
public void write writable w  throws ioexception
put put    put  w
put setwritetowal walenabled
table put put
@override
public void checkoutputspecs filesystem fs  jobconf jc  throws ioexception
//obtain delegation tokens for the job
tablemapreduceutil initcredentials jc
string hbasetablename   jc get hbaseserde hbase_table_name
jc set tableoutputformat output_table  hbasetablename
job job   new job jc
jobcontext jobcontext   shimloader gethadoopshims   newjobcontext job
try
checkoutputspecs jobcontext
catch  interruptedexception e
throw new ioexception e
@override
public
org apache hadoop mapred recordwriter<immutablebyteswritable  put>
getrecordwriter
filesystem filesystem
jobconf jobconf
string name
progressable progressable  throws ioexception
throw new runtimeexception