/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import org apache hadoop hive ql exec description
import org apache hadoop hive ql exec udfargumenttypeexception
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql parse semanticexception
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 typeinfo primitivetypeinfo
import org apache hadoop hive serde2 typeinfo typeinfo
/**
* compute the sample covariance by extending genericudafcovariance and overriding
* the terminate() method of the evaluator.
*
*/
@description name
value
extended
public class genericudafcovariancesample extends genericudafcovariance
@override
public genericudafevaluator getevaluator typeinfo parameters
throws semanticexception
if  parameters length    2
throw new udfargumenttypeexception parameters length   1
if  parameters getcategory      objectinspector category primitive
throw new udfargumenttypeexception 0
parameters gettypename
if  parameters getcategory      objectinspector category primitive
throw new udfargumenttypeexception 1
parameters gettypename
switch    primitivetypeinfo  parameters  getprimitivecategory
case byte
case short
case int
case long
case float
case double
case timestamp
switch    primitivetypeinfo  parameters  getprimitivecategory
case byte
case short
case int
case long
case float
case double
case timestamp
return new genericudafcovariancesampleevaluator
case string
case boolean
default
throw new udfargumenttypeexception 1
parameters gettypename
case string
case boolean
default
throw new udfargumenttypeexception 0
parameters gettypename
/**
* compute the sample covariance by extending genericudafcovarianceevaluator and
* overriding the terminate() method of the evaluator.
*/
public static class genericudafcovariancesampleevaluator extends
genericudafcovarianceevaluator
@override
public object terminate aggregationbuffer agg  throws hiveexception
stdagg myagg    stdagg  agg
if  myagg count    0       sql standard   return null for zero elements
return null
else
if  myagg count > 1
getresult   set myagg covar    myagg count   1
else      the covariance of a singleton set is always 0
getresult   set 0
return getresult