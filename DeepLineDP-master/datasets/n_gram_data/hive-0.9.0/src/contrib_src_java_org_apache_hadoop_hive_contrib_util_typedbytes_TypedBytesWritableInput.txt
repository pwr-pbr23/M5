/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive contrib util typedbytes
import java io bytearrayinputstream
import java io datainput
import java io datainputstream
import java io ioexception
import org apache hadoop conf configurable
import org apache hadoop conf configuration
import org apache hadoop hive serde2 io bytewritable
import org apache hadoop hive serde2 io doublewritable
import org apache hadoop hive serde2 io shortwritable
import org apache hadoop io arraywritable
import org apache hadoop io booleanwritable
import org apache hadoop io byteswritable
import org apache hadoop io floatwritable
import org apache hadoop io ioutils
import org apache hadoop io intwritable
import org apache hadoop io longwritable
import org apache hadoop io mapwritable
import org apache hadoop io nullwritable
import org apache hadoop io sortedmapwritable
import org apache hadoop io text
import org apache hadoop io vintwritable
import org apache hadoop io vlongwritable
import org apache hadoop io writable
import org apache hadoop io writablecomparable
import org apache hadoop io writableutils
import org apache hadoop util reflectionutils
/**
* provides functionality for reading typed bytes as writable objects.
*
* @see typedbytesinput
*/
public class typedbyteswritableinput implements configurable
private typedbytesinput in
private configuration conf
private typedbyteswritableinput
conf   new configuration
private void settypedbytesinput typedbytesinput in
this in   in
private static threadlocal tbin   new threadlocal
@override
protected synchronized object initialvalue
return new typedbyteswritableinput
/**
* get a thread-local typed bytes writable input for the supplied
* {@link typedbytesinput}.
*
* @param in
*          typed bytes input object
* @return typed bytes writable input corresponding to the supplied
*         {@link typedbytesinput}.
*/
public static typedbyteswritableinput get typedbytesinput in
typedbyteswritableinput bin    typedbyteswritableinput  tbin get
bin settypedbytesinput in
return bin
/**
* get a thread-local typed bytes writable input for the supplied
* {@link datainput}.
*
* @param in
*          data input object
* @return typed bytes writable input corresponding to the supplied
*         {@link datainput}.
*/
public static typedbyteswritableinput get datainput in
return get typedbytesinput get in
/** creates a new instance of typedbyteswritableinput. */
public typedbyteswritableinput typedbytesinput in
this
this in   in
/** creates a new instance of typedbyteswritableinput. */
public typedbyteswritableinput datainput din
this new typedbytesinput din
public writable read   throws ioexception
type type   in readtype
if  type    null
return null
switch  type
case bytes
return readbytes
case byte
return readbyte
case bool
return readboolean
case int
return readvint
case short
return readshort
case long
return readvlong
case float
return readfloat
case double
return readdouble
case string
return readtext
case vector
return readarray
case map
return readmap
case writable
return readwritable
case endofrecord
return null
case null
return nullwritable get
default
throw new runtimeexception
public type readtypecode   throws ioexception
return in readtype
public class<? extends writable> readtype   throws ioexception
type type   in readtype
if  type    null
return null
switch  type
case bytes
return byteswritable class
case byte
return bytewritable class
case bool
return booleanwritable class
case int
return vintwritable class
case long
return vlongwritable class
case float
return floatwritable class
case short
return shortwritable class
case double
return doublewritable class
case string
return text class
case vector
return arraywritable class
case map
return mapwritable class
case writable
return writable class
case endofrecord
return null
case null
return nullwritable class
default
throw new runtimeexception
public byteswritable readbytes byteswritable bw  throws ioexception
byte bytes   in readbytes
if  bw    null
bw   new byteswritable bytes
else
bw set bytes  0  bytes length
return bw
public byteswritable readbytes   throws ioexception
return readbytes null
public bytewritable readbyte bytewritable bw  throws ioexception
if  bw    null
bw   new bytewritable
bw set in readbyte
return bw
public bytewritable readbyte   throws ioexception
return readbyte null
public booleanwritable readboolean booleanwritable bw  throws ioexception
if  bw    null
bw   new booleanwritable
bw set in readbool
return bw
public booleanwritable readboolean   throws ioexception
return readboolean null
public intwritable readint intwritable iw  throws ioexception
if  iw    null
iw   new intwritable
iw set in readint
return iw
public intwritable readint   throws ioexception
return readint null
public shortwritable readshort shortwritable sw  throws ioexception
if  sw    null
sw   new shortwritable
sw set in readshort
return sw
public shortwritable readshort   throws ioexception
return readshort null
public vintwritable readvint vintwritable iw  throws ioexception
if  iw    null
iw   new vintwritable
iw set in readint
return iw
public vintwritable readvint   throws ioexception
return readvint null
public longwritable readlong longwritable lw  throws ioexception
if  lw    null
lw   new longwritable
lw set in readlong
return lw
public longwritable readlong   throws ioexception
return readlong null
public vlongwritable readvlong vlongwritable lw  throws ioexception
if  lw    null
lw   new vlongwritable
lw set in readlong
return lw
public vlongwritable readvlong   throws ioexception
return readvlong null
public floatwritable readfloat floatwritable fw  throws ioexception
if  fw    null
fw   new floatwritable
fw set in readfloat
return fw
public floatwritable readfloat   throws ioexception
return readfloat null
public doublewritable readdouble doublewritable dw  throws ioexception
if  dw    null
dw   new doublewritable
dw set in readdouble
return dw
public doublewritable readdouble   throws ioexception
return readdouble null
public text readtext text t  throws ioexception
if  t    null
t   new text
t set in readstring
return t
public text readtext   throws ioexception
return readtext null
public arraywritable readarray arraywritable aw  throws ioexception
if  aw    null
aw   new arraywritable typedbyteswritable class
else if   aw getvalueclass   equals typedbyteswritable class
throw new runtimeexception
int length   in readvectorheader
writable writables   new writable
for  int i   0  i < length  i
writables   new typedbyteswritable in readraw
aw set writables
return aw
public arraywritable readarray   throws ioexception
return readarray null
public mapwritable readmap mapwritable mw  throws ioexception
if  mw    null
mw   new mapwritable
int length   in readmapheader
for  int i   0  i < length  i
writable key   read
writable value   read
mw put key  value
return mw
public mapwritable readmap   throws ioexception
return readmap null
public sortedmapwritable readsortedmap sortedmapwritable mw
throws ioexception
if  mw    null
mw   new sortedmapwritable
int length   in readmapheader
for  int i   0  i < length  i
writablecomparable key    writablecomparable  read
writable value   read
mw put key  value
return mw
public sortedmapwritable readsortedmap   throws ioexception
return readsortedmap null
public writable readwritable writable writable  throws ioexception
datainputstream dis   null
try
bytearrayinputstream bais   new bytearrayinputstream in readbytes
dis   new datainputstream bais
string classname   writableutils readstring dis
if  writable    null
try
class<? extends writable> cls   conf getclassbyname classname
assubclass writable class
writable    writable  reflectionutils newinstance cls  conf
catch  classnotfoundexception e
throw new ioexception e
else if   writable getclass   getname   equals classname
throw new ioexception
writable readfields dis
dis close
dis   null
return writable
finally
ioutils closestream dis
public writable readwritable   throws ioexception
return readwritable null
public configuration getconf
return conf
public void setconf configuration conf
this conf   conf