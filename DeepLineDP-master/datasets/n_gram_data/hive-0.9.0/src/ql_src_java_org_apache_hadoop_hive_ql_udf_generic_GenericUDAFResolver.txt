/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import org apache hadoop hive ql parse semanticexception
import org apache hadoop hive serde2 typeinfo typeinfo
/**
* a generic user-defined aggregation function (genericudaf) for the use with
* hive.
*
* genericudafresolver is used at compile time. we use genericudafresolver to
* find out the genericudafevaluator for the parameter types.
*
* @deprecated use {@link genericudafresolver2} instead.
*/
@deprecated
public interface genericudafresolver
/**
* get the evaluator for the parameter types.
*
* the reason that this function returns an object instead of a class is
* because it is possible that the object needs some configuration (that can
* be serialized). in that case the class of the object has to implement the
* serializable interface. at execution time, we will deserialize the object
* from the plan and use it to evaluate the aggregations.
* <p>
* if the class of the object does not implement serializable, then we will
* create a new instance of the class at execution time.
* </p>
* @param parameters
*          the types of the parameters. we need the type information to know
*          which evaluator class to use.
* @throws semanticexception
*/
genericudafevaluator getevaluator typeinfo parameters
throws semanticexception