/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf
import org apache hadoop hive ql exec udf
import org apache hadoop hive serde2 io bytewritable
import org apache hadoop hive serde2 io doublewritable
import org apache hadoop hive serde2 io shortwritable
import org apache hadoop hive serde2 io timestampwritable
import org apache hadoop io booleanwritable
import org apache hadoop io floatwritable
import org apache hadoop io intwritable
import org apache hadoop io longwritable
import org apache hadoop io nullwritable
import org apache hadoop io text
/**
* udftoboolean.
*
*/
public class udftoboolean extends udf
private booleanwritable booleanwritable   new booleanwritable
public udftoboolean
/**
* convert a void to boolean. this is called for cast(... as boolean)
*
* @param i
*          the value of a void type
* @return booleanwritable
*/
public booleanwritable evaluate nullwritable i
return null
/**
* convert from a byte to boolean. this is called for cast(... as boolean)
*
* @param i
*          the byte value to convert
* @return booleanwritable
*/
public booleanwritable evaluate bytewritable i
if  i    null
return null
else
booleanwritable set i get      0
return booleanwritable
/**
* convert from a short to boolean. this is called for cast(... as boolean)
*
* @param i
*          the short value to convert
* @return booleanwritable
*/
public booleanwritable evaluate shortwritable i
if  i    null
return null
else
booleanwritable set i get      0
return booleanwritable
/**
* convert from a integer to boolean. this is called for cast(... as boolean)
*
* @param i
*          the integer value to convert
* @return booleanwritable
*/
public booleanwritable evaluate intwritable i
if  i    null
return null
else
booleanwritable set i get      0
return booleanwritable
/**
* convert from a long to boolean. this is called for cast(... as boolean)
*
* @param i
*          the long value to convert
* @return booleanwritable
*/
public booleanwritable evaluate longwritable i
if  i    null
return null
else
booleanwritable set i get      0
return booleanwritable
/**
* convert from a float to boolean. this is called for cast(... as boolean)
*
* @param i
*          the float value to convert
* @return booleanwritable
*/
public booleanwritable evaluate floatwritable i
if  i    null
return null
else
booleanwritable set i get      0
return booleanwritable
/**
* convert from a double to boolean. this is called for cast(... as boolean)
*
* @param i
*          the double value to convert
* @return booleanwritable
*/
public booleanwritable evaluate doublewritable i
if  i    null
return null
else
booleanwritable set i get      0
return booleanwritable
/**
* convert from a string to boolean. this is called for cast(... as boolean)
*
* @param i
*          the string value to convert
* @return booleanwritable
*/
public booleanwritable evaluate text i
if  i    null
return null
else
booleanwritable set i getlength      0
return booleanwritable
public booleanwritable evaluate timestampwritable i
if  i    null
return null
else
booleanwritable set i getseconds      0    i getnanos      0
return booleanwritable