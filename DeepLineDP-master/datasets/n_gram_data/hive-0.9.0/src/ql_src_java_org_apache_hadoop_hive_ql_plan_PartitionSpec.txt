/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql plan
import java util linkedhashmap
import java util map
/**
* partitionspec
*
*/
@explain displayname
public class partitionspec
private class predicatespec
private string operator
private string value
public predicatespec
public predicatespec string operator  string value
this operator   operator
this value   value
public string getoperator
return this operator
public string getvalue
return this value
public void setoperator string operator
this operator   operator
public void setvalue string value
this value   value
@override
public string tostring
return    this operator equals    ?    this operator        this value
private map<string  predicatespec> partspec
public partitionspec
this partspec   new linkedhashmap<string  predicatespec>
/**
* @param key
*          partition key name for one partition key compare in the spec
* @param operator
*          the operator that is used for the comparison
* @param value
*          the value to be compared against
*/
public void addpredicate string key  string operator  string value
partspec put key  new predicatespec operator  value
/**
* @param key
*          partition key to look for in the partition spec
* @return true if key exists in the partition spec, false otherwise
*/
public boolean existskey string key
return  partspec get key     null
@override
public string tostring
stringbuilder filterstring   new stringbuilder
int count   0
for  map entry<string  predicatespec> entry  this partspec entryset
if  count > 0
filterstring append
filterstring append entry getkey         entry getvalue   tostring
count
return filterstring tostring