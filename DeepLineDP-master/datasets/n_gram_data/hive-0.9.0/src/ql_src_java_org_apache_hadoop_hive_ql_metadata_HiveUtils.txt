/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql metadata
import java util list
import org apache hadoop conf configuration
import org apache hadoop hive common javautils
import org apache hadoop hive conf hiveconf
import org apache hadoop hive metastore api fieldschema
import org apache hadoop hive ql index hiveindexhandler
import org apache hadoop hive ql security hadoopdefaultauthenticator
import org apache hadoop hive ql security hiveauthenticationprovider
import org apache hadoop hive ql security authorization defaulthiveauthorizationprovider
import org apache hadoop hive ql security authorization hiveauthorizationprovider
import org apache hadoop util reflectionutils
/**
* general collection of helper functions.
*
*/
public final class hiveutils
public static final char quote
public static final char colon
public static final string lbracket
public static final string rbracket
public static final string lbrace
public static final string rbrace
public static final string line_sep   system getproperty
public static string escapestring string str
int length   str length
stringbuilder escape   new stringbuilder length   16
for  int i   0  i < length    i
char c   str charat i
switch  c
case
case
escape append
escape append c
break
case
escape append
escape append
break
case
escape append
escape append
break
case
escape append
escape append
break
case
escape append
escape append
break
case
escape append
escape append
break
default
// control characeters! according to json rfc u0020
if  c <
string hex   integer tohexstring c
escape append
escape append
for  int j   4  j > hex length      j
escape append
escape append hex
else
escape append c
break
return  escape tostring
public static string lightescapestring string str
int length   str length
stringbuilder escape   new stringbuilder length   16
for  int i   0  i < length    i
char c   str charat i
switch  c
case
escape append
escape append
break
case
escape append
escape append
break
case
escape append
escape append
break
default
escape append c
break
return  escape tostring
/**
* regenerate an identifier as part of unparsing it back to sql text.
*/
public static string unparseidentifier string identifier
// in the future, if we support arbitrary characters in
// identifiers, then we'll need to escape any backticks
// in identifier by doubling them up.
return     identifier
public static hivestoragehandler getstoragehandler
configuration conf  string classname  throws hiveexception
if  classname    null
return null
try
class<? extends hivestoragehandler> handlerclass
class<? extends hivestoragehandler>
class forname classname  true  javautils getclassloader
hivestoragehandler storagehandler    hivestoragehandler
reflectionutils newinstance handlerclass  conf
return storagehandler
catch  classnotfoundexception e
throw new hiveexception
e getmessage    e
private hiveutils
// prevent instantiation
public static hiveindexhandler getindexhandler hiveconf conf
string indexhandlerclass  throws hiveexception
if  indexhandlerclass    null
return null
try
class<? extends hiveindexhandler> handlerclass
class<? extends hiveindexhandler>
class forname indexhandlerclass  true  javautils getclassloader
hiveindexhandler indexhandler    hiveindexhandler
reflectionutils newinstance handlerclass  conf
return indexhandler
catch  classnotfoundexception e
throw new hiveexception
e getmessage    e
@suppresswarnings
public static hiveauthorizationprovider getauthorizeprovidermanager
configuration conf  hiveauthenticationprovider authenticator  throws hiveexception
string clsstr   hiveconf getvar conf
hiveconf confvars hive_authorization_manager
hiveauthorizationprovider ret   null
try
class<? extends hiveauthorizationprovider> cls   null
if  clsstr    null    clsstr trim   equals
cls   defaulthiveauthorizationprovider class
else
cls    class<? extends hiveauthorizationprovider>  class forname
clsstr  true  javautils getclassloader
if  cls    null
ret   reflectionutils newinstance cls  conf
catch  exception e
throw new hiveexception e
ret setauthenticator authenticator
return ret
@suppresswarnings
public static hiveauthenticationprovider getauthenticator configuration conf
throws hiveexception
string clsstr   hiveconf getvar conf
hiveconf confvars hive_authenticator_manager
hiveauthenticationprovider ret   null
try
class<? extends hiveauthenticationprovider> cls   null
if  clsstr    null    clsstr trim   equals
cls   hadoopdefaultauthenticator class
else
cls    class<? extends hiveauthenticationprovider>  class forname
clsstr  true  javautils getclassloader
if  cls    null
ret   reflectionutils newinstance cls  conf
catch  exception e
throw new hiveexception e
return ret
/**
* convert fieldschemas to columnnames with backticks around them.
*/
public static string getunparsedcolumnnamesfromfieldschema
list<fieldschema> fieldschemas
stringbuilder sb   new stringbuilder
for  int i   0  i < fieldschemas size    i
if  i > 0
sb append
sb append hiveutils unparseidentifier fieldschemas get i  getname
return sb tostring