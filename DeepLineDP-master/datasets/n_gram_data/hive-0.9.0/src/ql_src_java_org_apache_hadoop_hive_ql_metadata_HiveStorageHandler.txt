/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql metadata
import java util map
import org apache hadoop conf configurable
import org apache hadoop hive metastore hivemetahook
import org apache hadoop hive ql plan tabledesc
import org apache hadoop hive serde2 serde
import org apache hadoop hive ql security authorization hiveauthorizationprovider
import org apache hadoop mapred inputformat
import org apache hadoop mapred outputformat
/**
* hivestoragehandler defines a pluggable interface for adding
* new storage handlers to hive.  a storage handler consists of
* a bundle of the following:
*
*<ul>
*<li>input format
*<li>output format
*<li>serde
*<li>metadata hooks for keeping an external catalog in sync
* with hive's metastore
*<li>rules for setting up the configuration properties on
* map/reduce jobs which access tables stored by this handler
*</ul>
*
* storage handler classes are plugged in using the stored by 'classname'
* clause in create table.
*/
public interface hivestoragehandler extends configurable
/**
* @return class providing an implementation of {@link inputformat}
*/
public class<? extends inputformat> getinputformatclass
/**
* @return class providing an implementation of {@link outputformat}
*/
public class<? extends outputformat> getoutputformatclass
/**
* @return class providing an implementation of {@link serde}
*/
public class<? extends serde> getserdeclass
/**
* @return metadata hook implementation, or null if this
* storage handler does not need any metadata notifications
*/
public hivemetahook getmetahook
/**
* returns the implementation specific authorization provider
*
* @return authorization provider
* @throws hiveexception
*/
public hiveauthorizationprovider getauthorizationprovider
throws hiveexception
/**
* this method is called to allow the storagehandlers the chance
* to populate the jobcontext.getconfiguration() with properties that
* maybe be needed by the handler's bundled artifacts (ie inputformat, serde, etc).
* key value pairs passed into jobproperties are guaranteed to be set in the job's
* configuration object. user's can retrieve "context" information from tabledesc.
* user's should avoid mutating tabledesc and only make changes in jobproperties.
* this method is expected to be idempotent such that a job called with the
* same tabledesc values should return the same key-value pairs in jobproperties.
* any external state set by this method should remain the same if this method is
* called again. it is up to the user to determine how best guarantee this invariant.
*
* this method in particular is to create a configuration for input.
* @param tabledesc descriptor for the table being accessed
* @param jobproperties receives properties copied or transformed
* from the table properties
*/
public abstract void configureinputjobproperties tabledesc tabledesc
map<string  string> jobproperties
/**
* this method is called to allow the storagehandlers the chance
* to populate the jobcontext.getconfiguration() with properties that
* maybe be needed by the handler's bundled artifacts (ie inputformat, serde, etc).
* key value pairs passed into jobproperties are guaranteed to be set in the job's
* configuration object. user's can retrieve "context" information from tabledesc.
* user's should avoid mutating tabledesc and only make changes in jobproperties.
* this method is expected to be idempotent such that a job called with the
* same tabledesc values should return the same key-value pairs in jobproperties.
* any external state set by this method should remain the same if this method is
* called again. it is up to the user to determine how best guarantee this invariant.
*
* this method in particular is to create a configuration for output.
* @param tabledesc descriptor for the table being accessed
* @param jobproperties receives properties copied or transformed
* from the table properties
*/
public abstract void configureoutputjobproperties tabledesc tabledesc
map<string  string> jobproperties
/**
* deprecated use configureinputjobproperties/configureoutputjobproperties
* methods instead.
*
* configures properties for a job based on the definition of the
* source or target table it accesses.
*
* @param tabledesc descriptor for the table being accessed
*
* @param jobproperties receives properties copied or transformed
* from the table properties
*/
@deprecated
public void configuretablejobproperties
tabledesc tabledesc
map<string  string> jobproperties