/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 objectinspector
import java util arrays
import java util comparator
import java util map
import java util treemap
/*
* the equality is implemented fully, the implementation sorts the maps
* by their keys to provide a transitive compare.
*/
public class fullmapequalcomparer implements mapequalcomparer
private static class mapkeycomparator implements comparator<object>
private objectinspector oi
mapkeycomparator objectinspector oi
this oi   oi
@override
public int compare object o1  object o2
return objectinspectorutils compare o1  oi  o2  oi
@override
public int compare object o1  mapobjectinspector moi1  object o2  mapobjectinspector moi2
int mapsize1   moi1 getmapsize o1
int mapsize2   moi2 getmapsize o2
if  mapsize1    mapsize2
return mapsize1   mapsize2
objectinspector mkoi1   moi1 getmapkeyobjectinspector
objectinspector mkoi2   moi2 getmapkeyobjectinspector
objectinspector mvoi1   moi1 getmapvalueobjectinspector
objectinspector mvoi2   moi2 getmapvalueobjectinspector
map<?  ?> map1   moi1 getmap o1
map<?  ?> map2   moi2 getmap o2
object sortedmapkeys1   map1 keyset   toarray
arrays sort sortedmapkeys1  new mapkeycomparator mkoi1
object sortedmapkeys2   map2 keyset   toarray
arrays sort sortedmapkeys2  new mapkeycomparator mkoi2
for  int i   0  i < mapsize1    i
object mk1   sortedmapkeys1
object mk2   sortedmapkeys2
int rc   objectinspectorutils compare mk1  mkoi1  mk2  mkoi2  this
if  rc    0
return rc
object mv1   map1 get mk1
object mv2   map2 get mk2
rc   objectinspectorutils compare mv1  mvoi1  mv2  mvoi2  this
if  rc    0
return rc
return 0