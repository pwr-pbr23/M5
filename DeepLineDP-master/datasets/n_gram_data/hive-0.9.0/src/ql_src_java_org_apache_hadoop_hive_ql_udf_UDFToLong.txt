/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf
import org apache hadoop hive ql exec udf
import org apache hadoop hive serde2 io bytewritable
import org apache hadoop hive serde2 io doublewritable
import org apache hadoop hive serde2 io shortwritable
import org apache hadoop hive serde2 io timestampwritable
import org apache hadoop hive serde2 lazy lazylong
import org apache hadoop io booleanwritable
import org apache hadoop io floatwritable
import org apache hadoop io intwritable
import org apache hadoop io longwritable
import org apache hadoop io nullwritable
import org apache hadoop io text
/**
* udftolong.
*
*/
public class udftolong extends udf
private longwritable longwritable   new longwritable
public udftolong
/**
* convert from void to a long. this is called for cast(... as bigint)
*
* @param i
*          the void value to convert
* @return longwritable
*/
public longwritable evaluate nullwritable i
return null
/**
* convert from boolean to a long. this is called for cast(... as bigint)
*
* @param i
*          the boolean value to convert
* @return longwritable
*/
public longwritable evaluate booleanwritable i
if  i    null
return null
else
longwritable set i get   ?  long  1    long  0
return longwritable
/**
* convert from byte to a long. this is called for cast(... as bigint)
*
* @param i
*          the byte value to convert
* @return longwritable
*/
public longwritable evaluate bytewritable i
if  i    null
return null
else
longwritable set i get
return longwritable
/**
* convert from short to a long. this is called for cast(... as bigint)
*
* @param i
*          the short value to convert
* @return longwritable
*/
public longwritable evaluate shortwritable i
if  i    null
return null
else
longwritable set i get
return longwritable
/**
* convert from integer to a long. this is called for cast(... as bigint)
*
* @param i
*          the integer value to convert
* @return longwritable
*/
public longwritable evaluate intwritable i
if  i    null
return null
else
longwritable set i get
return longwritable
/**
* convert from long to a long. this is called for cast(... as bigint)
*
* @param i
*          the long value to convert
* @return longwritable
*/
public longwritable evaluate longwritable i
return i
/**
* convert from float to a long. this is called for cast(... as bigint)
*
* @param i
*          the float value to convert
* @return longwritable
*/
public longwritable evaluate floatwritable i
if  i    null
return null
else
longwritable set  long  i get
return longwritable
/**
* convert from double to a long. this is called for cast(... as bigint)
*
* @param i
*          the double value to convert
* @return longwritable
*/
public longwritable evaluate doublewritable i
if  i    null
return null
else
longwritable set  long  i get
return longwritable
/**
* convert from string to a long. this is called for cast(... as bigint)
*
* @param i
*          the string value to convert
* @return longwritable
*/
public longwritable evaluate text i
if  i    null
return null
else
try
longwritable
set lazylong parselong i getbytes    0  i getlength    10
return longwritable
catch  numberformatexception e
// mysql returns 0 if the string is not a well-formed numeric value.
// return longwritable.valueof(0);
// but we decided to return null instead, which is more conservative.
return null
public longwritable evaluate timestampwritable i
if  i    null
return null
else
longwritable set i getseconds
return longwritable