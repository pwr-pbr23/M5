/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql exec
import org apache hadoop hive ql udf generic genericudafbridge
import org apache hadoop hive ql udf generic genericudafresolver
import org apache hadoop hive ql udf generic genericudf
import org apache hadoop hive ql udf generic genericudfbridge
import org apache hadoop hive ql udf generic genericudtf
/**
* functioninfo.
*
*/
public class functioninfo
private final boolean isnative
private final string displayname
private genericudf genericudf
private genericudtf genericudtf
private genericudafresolver genericudafresolver
public functioninfo boolean isnative  string displayname
genericudf genericudf
this isnative   isnative
this displayname   displayname
this genericudf   genericudf
public functioninfo boolean isnative  string displayname
genericudafresolver genericudafresolver
this isnative   isnative
this displayname   displayname
this genericudafresolver   genericudafresolver
public functioninfo boolean isnative  string displayname
genericudtf genericudtf
this isnative   isnative
this displayname   displayname
this genericudtf   genericudtf
/**
* get a new genericudf object for the function.
*/
public genericudf getgenericudf
// genericudf is stateful - we have to make a copy here
if  genericudf    null
return null
return functionregistry clonegenericudf genericudf
/**
* get a new genericudtf object for the function.
*/
public genericudtf getgenericudtf
// genericudtf is stateful too, copy
if  genericudtf    null
return null
return functionregistry clonegenericudtf genericudtf
/**
* get the genericudafresolver object for the function.
*/
public genericudafresolver getgenericudafresolver
return genericudafresolver
/**
* get the class of the udf.
*/
public class<?> getfunctionclass
if  isgenericudf
if  genericudf instanceof genericudfbridge
return   genericudfbridge  genericudf  getudfclass
else
return genericudf getclass
else if  isgenericudaf
if  genericudafresolver instanceof genericudafbridge
return   genericudafbridge  genericudafresolver  getudafclass
else
return genericudafresolver getclass
else if  isgenericudtf
return genericudtf getclass
return null
/**
* get the display name for this function. this should be transfered into
* exprnodegenericudfdesc, and will be used as the first parameter to
* genericudf.getdisplayname() call, instead of hard-coding the function name.
* this will solve the problem of displaying only one name when a udf is
* registered under 2 names.
*/
public string getdisplayname
return displayname
/**
* native functions cannot be unregistered.
*/
public boolean isnative
return isnative
/**
* @return true if the function is a genericudf
*/
public boolean isgenericudf
return null    genericudf
/**
* @return true if the function is a genericudaf
*/
public boolean isgenericudaf
return null    genericudafresolver
/**
* @return true if the function is a genericudtf
*/
public boolean isgenericudtf
return null    genericudtf