/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql io
import java io bufferedreader
import java io ioexception
import java io inputstreamreader
import java util arraylist
import java util hashmap
import java util list
import java util map
import org apache hadoop fs filestatus
import org apache hadoop fs filesystem
import org apache hadoop fs path
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql plan mapredwork
import org apache hadoop hive ql plan partitiondesc
import org apache hadoop mapred textinputformat
public class symbolicinputformat implements reworkmapredinputformat
public void rework hiveconf job  mapredwork work  throws ioexception
map<string  partitiondesc> pathtoparts   work getpathtopartitioninfo
list<string> toremovepaths   new arraylist<string>
map<string  partitiondesc> toaddpathtopart   new hashmap<string  partitiondesc>
map<string  arraylist<string>> pathtoaliases   work getpathtoaliases
for  map entry<string  partitiondesc> pathpartentry   pathtoparts
entryset
string path   pathpartentry getkey
partitiondesc partdesc   pathpartentry getvalue
// this path points to a symlink path
if  partdesc getinputfileformatclass   equals
symlinktextinputformat class
// change to textinputformat
partdesc setinputfileformatclass textinputformat class
path symlinkdir   new path path
filesystem filesystem   symlinkdir getfilesystem job
filestatus fstatus   filesystem getfilestatus symlinkdir
filestatus symlinks   null
if   fstatus isdir
symlinks   new filestatus   fstatus
else
symlinks   filesystem liststatus symlinkdir
toremovepaths add path
arraylist<string> aliases   pathtoaliases remove path
for  filestatus symlink   symlinks
bufferedreader reader   new bufferedreader new inputstreamreader
filesystem open symlink getpath
partdesc setinputfileformatclass textinputformat class
string line
while   line   reader readline       null
// no check for the line? how to check?
// if the line is invalid for any reason, the job will fail.
toaddpathtopart put line  partdesc
pathtoaliases put line  aliases
pathtoparts putall toaddpathtopart
for  string toremove   toremovepaths
pathtoparts remove toremove