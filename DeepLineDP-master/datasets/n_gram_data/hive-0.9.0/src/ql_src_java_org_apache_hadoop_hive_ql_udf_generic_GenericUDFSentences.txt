/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf generic
import java util arraylist
import java util locale
import java text breakiterator
import org apache hadoop hive ql exec description
import org apache hadoop hive ql exec udfargumentexception
import org apache hadoop hive ql exec udfargumentlengthexception
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop hive serde2 objectinspector objectinspectorconverters
import org apache hadoop hive serde2 objectinspector objectinspectorfactory
import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorfactory
import org apache hadoop io text
/**
* genericudfsentences: splits a natural language chunk of text into sentences and words.
*
*/
@description name      value
extended
hello  there  i  am  a  udf
public class genericudfsentences extends genericudf
private objectinspectorconverters converter converters
@override
public objectinspector initialize objectinspector arguments  throws udfargumentexception
if  arguments length < 1    arguments length > 3
throw new udfargumentlengthexception
converters   new objectinspectorconverters converter
for  int i   0  i < arguments length  i
converters   objectinspectorconverters getconverter arguments
primitiveobjectinspectorfactory writablestringobjectinspector
return objectinspectorfactory getstandardlistobjectinspector
objectinspectorfactory getstandardlistobjectinspector
primitiveobjectinspectorfactory writablestringobjectinspector
@override
public object evaluate deferredobject arguments  throws hiveexception
assert  arguments length >  1    arguments length <  3
if  arguments get      null
return null
// if there is more than 1 argument specified, a different natural language
// locale is being specified
locale locale   null
if arguments length > 1    arguments get      null
text language    text  converters convert arguments get
text country   null
if arguments length > 2    arguments get      null
country    text  converters convert arguments get
if country    null
locale   new locale language tostring   tolowercase    country tostring   touppercase
else
locale   new locale language tostring   tolowercase
else
locale   locale getdefault
// get the input and prepare the output
text chunk    text  converters convert arguments get
string text   chunk tostring
arraylist<arraylist<text> > result   new arraylist<arraylist<text> >
// parse out sentences using java's text-handling api
breakiterator bi   breakiterator getsentenceinstance locale
bi settext text
int idx   0
while bi next      breakiterator done
string sentence   text substring idx  bi current
idx   bi current
result add new arraylist<text>
// parse out words in the sentence
breakiterator wi   breakiterator getwordinstance locale
wi settext sentence
int widx   0
arraylist<text> sent_array   result get result size   1
while wi next      breakiterator done
string word   sentence substring widx  wi current
widx   wi current
if character isletterordigit word charat 0
sent_array add new text word
return result
@override
public string getdisplaystring string children
assert  children length >  1    children length <  3
string display       children
if children length > 1
display        children
if children length > 2
display        children
display
return display