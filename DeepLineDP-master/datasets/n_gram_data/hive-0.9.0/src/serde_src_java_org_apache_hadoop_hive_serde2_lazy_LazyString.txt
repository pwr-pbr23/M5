/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 lazy
import org apache hadoop hive serde2 lazy objectinspector primitive lazystringobjectinspector
import org apache hadoop io text
/**
* lazyobject for storing a value of string.
*/
public class lazystring extends lazyprimitive<lazystringobjectinspector  text>
public lazystring lazystringobjectinspector oi
super oi
data   new text
public lazystring lazystring copy
super copy
data   new text copy data
@override
public void init bytearrayref bytes  int start  int length
if  oi isescaped
byte escapechar   oi getescapechar
byte inputbytes   bytes getdata
// first calculate the length of the output string
int outputlength   0
for  int i   0  i < length  i
if  inputbytes    escapechar
outputlength
else
outputlength
i
// copy the data over, so that the internal state of text will be set to
// the required outputlength.
data set bytes getdata    start  outputlength
// we need to copy the data byte by byte only in case the
// "outputlength < length" (which means there is at least one escaped
// byte.
if  outputlength < length
int k   0
byte outputbytes   data getbytes
for  int i   0  i < length  i
byte b   inputbytes
if  b    escapechar    i    length   1
outputbytes   b
else
// get the next byte
i
outputbytes   inputbytes
assert  k    outputlength
else
// if the data is not escaped, simply copy the data.
data set bytes getdata    start  length