/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql io
import java io datainput
import java io dataoutput
import java io ioexception
import java util list
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop hive ql plan mapredwork
import org apache hadoop io nullwritable
import org apache hadoop mapred inputformat
import org apache hadoop mapred inputsplit
import org apache hadoop mapred jobconf
import org apache hadoop mapred jobconfigurable
import org apache hadoop mapred recordreader
import org apache hadoop mapred reporter
/**
* onenullrowinputformat outputs one null row. used in implementation of
* metadata only queries.
*
*/
public class onenullrowinputformat implements
inputformat<nullwritable  nullwritable>  jobconfigurable
private static final log log   logfactory getlog onenullrowinputformat class
getname
mapredwork mrwork   null
list<string> partitions
long len
static public class dummyinputsplit implements inputsplit
public dummyinputsplit
@override
public long getlength   throws ioexception
return 1
@override
public string getlocations   throws ioexception
return new string
@override
public void readfields datainput arg0  throws ioexception
@override
public void write dataoutput arg0  throws ioexception
static public class onenullrowrecordreader implements recordreader<nullwritable  nullwritable>
private boolean processed   false
public onenullrowrecordreader
@override
public void close   throws ioexception
@override
public nullwritable createkey
return nullwritable get
@override
public nullwritable createvalue
return nullwritable get
@override
public long getpos   throws ioexception
return  processed ? 1   0
@override
public float getprogress   throws ioexception
return  float   processed ? 1 0   0 0
@override
public boolean next nullwritable arg0  nullwritable arg1  throws ioexception
if processed
return false
else
processed   true
return true
@override
public recordreader<nullwritable  nullwritable> getrecordreader inputsplit arg0  jobconf arg1  reporter arg2
throws ioexception
return new onenullrowrecordreader
@override
public inputsplit getsplits jobconf arg0  int arg1  throws ioexception
inputsplit ret   new inputsplit
ret   new dummyinputsplit
log info
return ret
@override
public void configure jobconf job
log info