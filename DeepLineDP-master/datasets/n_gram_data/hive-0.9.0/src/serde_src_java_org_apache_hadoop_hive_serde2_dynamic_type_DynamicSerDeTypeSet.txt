/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 dynamic_type
import java util collections
import java util hashset
import java util set
import org apache hadoop hive serde2 serdeexception
import org apache hadoop hive serde2 objectinspector listobjectinspector
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache thrift texception
import org apache thrift protocol tprotocol
import org apache thrift protocol tset
import org apache thrift protocol ttype
/**
* dynamicserdetypeset.
*
*/
public class dynamicserdetypeset extends dynamicserdetypebase
// production is: set<fieldtype()>
private static final int fd_type   0
public dynamicserdetypeset int i
super i
public dynamicserdetypeset thrift_grammar p  int i
super p  i
// returns set<?>
@override
public class getrealtype
try
class c   getelementtype   getrealtype
object o   c newinstance
set<?> l   collections singleton o
return l getclass
catch  exception e
e printstacktrace
throw new runtimeexception e
public dynamicserdetypebase getelementtype
return   dynamicserdefieldtype  jjtgetchild fd_type   getmytype
@override
public string tostring
return     getelementtype   tostring
@override
public byte gettype
return ttype set
/**
* note: set is not supported by hive yet.
*/
@override
public object deserialize object reuse  tprotocol iprot
throws serdeexception  texception  illegalaccessexception
tset theset   iprot readsetbegin
if  theset    null
return null
set<object> result
if  reuse    null
result    set<object>  reuse
result clear
else
result   new hashset<object>
for  int i   0  i < theset size  i
object elem   getelementtype   deserialize null  iprot
result add elem
// in theory, the below call isn't needed in non thrift_mode, but let's not
// get too crazy
iprot readsetend
return result
/**
* note: set is not supported by hive yet. the code uses listobjectinspector
* right now. we need to change it to setobjectinspector when that is done.
*/
tset tset   null
@override
public void serialize object o  objectinspector oi  tprotocol oprot
throws texception  serdeexception  nosuchfieldexception  illegalaccessexception
listobjectinspector loi    listobjectinspector  oi
set<object> set    set<object>  o
dynamicserdetypebase mt   getelementtype
tset   new tset mt gettype    set size
oprot writesetbegin tset
for  object element   set
mt serialize element  loi getlistelementobjectinspector    oprot
// in theory, the below call isn't needed in non thrift_mode, but let's not
// get too crazy
oprot writesetend