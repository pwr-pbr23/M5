/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive serde2 columnar
import org apache hadoop hive serde2 bytestream
import org apache hadoop hive serde2 serde
import org apache hadoop hive serde2 serdeexception
import org apache hadoop hive serde2 serdestats
import org apache hadoop hive serde2 objectinspector objectinspector
import org apache hadoop io writable
public abstract class columnarserdebase implements serde
// the object for storing row data
columnarstructbase cachedlazystruct
// we need some initial values in case user don't call initialize()
protected objectinspector cachedobjectinspector
protected long serializedsize
protected serdestats stats
protected boolean lastoperationserialize
protected boolean lastoperationdeserialize
bytesrefarraywritable serializecache   new bytesrefarraywritable
bytesrefwritable field
bytestream output serializestream   new bytestream output
@override
public object deserialize writable blob  throws serdeexception
if    blob instanceof bytesrefarraywritable
throw new serdeexception getclass   tostring
bytesrefarraywritable cols    bytesrefarraywritable  blob
cachedlazystruct init cols
lastoperationserialize   false
lastoperationdeserialize   true
return cachedlazystruct
@override
public serdestats getserdestats
// must be different
assert  lastoperationserialize    lastoperationdeserialize
if  lastoperationserialize
stats setrawdatasize serializedsize
else
stats setrawdatasize cachedlazystruct getrawdataserializedsize
return stats
@override
public class<? extends writable> getserializedclass
return bytesrefarraywritable class
protected void initialize int size  throws serdeexception
field   new bytesrefwritable
for  int i   0  i < size  i
field   new bytesrefwritable
serializecache set i  field
serializedsize   0
stats   new serdestats
lastoperationserialize   false
lastoperationdeserialize   false
@override
public objectinspector getobjectinspector   throws serdeexception
return cachedobjectinspector