/* generated by:jjtree&javacc: do not edit this line. thrift_grammarconstants.java */
package org apache hadoop hive serde2 dynamic_type
/**
* token literal values and constants. generated by
* org.javacc.parser.otherfilesgen#start()
*/
public interface thrift_grammarconstants
/** end of file. */
int eof   0
/** regularexpression id. */
int tok_const   8
/** regularexpression id. */
int tok_namespace   9
/** regularexpression id. */
int tok_cpp_namespace   10
/** regularexpression id. */
int tok_cpp_include   11
/** regularexpression id. */
int tok_cpp_type   12
/** regularexpression id. */
int tok_java_package   13
/** regularexpression id. */
int tok_cocoa_prefix   14
/** regularexpression id. */
int tok_csharp_namespace   15
/** regularexpression id. */
int tok_php_namespace   16
/** regularexpression id. */
int tok_py_module   17
/** regularexpression id. */
int tok_perl_package   18
/** regularexpression id. */
int tok_ruby_namespace   19
/** regularexpression id. */
int tok_smalltalk_category   20
/** regularexpression id. */
int tok_smalltalk_prefix   21
/** regularexpression id. */
int tok_xsd_all   22
/** regularexpression id. */
int tok_xsd_optional   23
/** regularexpression id. */
int tok_xsd_nillable   24
/** regularexpression id. */
int tok_xsd_namespace   25
/** regularexpression id. */
int tok_xsd_attrs   26
/** regularexpression id. */
int tok_include   27
/** regularexpression id. */
int tok_void   28
/** regularexpression id. */
int tok_bool   29
/** regularexpression id. */
int tok_byte   30
/** regularexpression id. */
int tok_i16   31
/** regularexpression id. */
int tok_i32   32
/** regularexpression id. */
int tok_i64   33
/** regularexpression id. */
int tok_double   34
/** regularexpression id. */
int tok_string   35
/** regularexpression id. */
int tok_slist   36
/** regularexpression id. */
int tok_senum   37
/** regularexpression id. */
int tok_map   38
/** regularexpression id. */
int tok_list   39
/** regularexpression id. */
int tok_set   40
/** regularexpression id. */
int tok_async   41
/** regularexpression id. */
int tok_typedef   42
/** regularexpression id. */
int tok_struct   43
/** regularexpression id. */
int tok_exception   44
/** regularexpression id. */
int tok_extends   45
/** regularexpression id. */
int tok_throws   46
/** regularexpression id. */
int tok_service   47
/** regularexpression id. */
int tok_enum   48
/** regularexpression id. */
int tok_required   49
/** regularexpression id. */
int tok_optional   50
/** regularexpression id. */
int tok_skip   51
/** regularexpression id. */
int tok_int_constant   52
/** regularexpression id. */
int tok_double_constant   53
/** regularexpression id. */
int identifier   54
/** regularexpression id. */
int letter   55
/** regularexpression id. */
int digit   56
/** regularexpression id. */
int tok_literal   57
/** regularexpression id. */
int tok_st_identifier   58
/** lexical state. */
int default   0
/** literal token values. */
string tokenimage                t       n       r
const     namespace     cpp_namespace     cpp_include
cpp_type     java_package     cocoa_prefix
csharp_namespace     php_namespace     py_module
perl_package     ruby_namespace     smalltalk_category
smalltalk_prefix     xsd_all     xsd_optional
xsd_nillable     xsd_namespace     xsd_attrs     include
void     bool     byte     i16     i32     i64
double     string     slist     senum     map
list     set     async     typedef     struct
exception     extends     throws     service     enum
required     optional     skip
<
>