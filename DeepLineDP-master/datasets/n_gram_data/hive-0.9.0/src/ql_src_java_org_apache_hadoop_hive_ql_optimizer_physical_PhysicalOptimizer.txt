/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql optimizer physical
import java util arraylist
import java util list
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql metadata hiveexception
import org apache hadoop hive ql parse semanticexception
/**
* a hierarchy physical optimizer, which contains a list of
* physicalplanresolver. each resolver has its own set of optimization rule.
*/
public class physicaloptimizer
private physicalcontext pctx
private list<physicalplanresolver> resolvers
public physicaloptimizer physicalcontext pctx  hiveconf hiveconf
super
this pctx   pctx
initialize hiveconf
/**
* create the list of physical plan resolvers.
*
* @param hiveconf
*/
private void initialize hiveconf hiveconf
resolvers   new arraylist<physicalplanresolver>
if  hiveconf getboolvar hiveconf confvars hiveskewjoin
resolvers add new skewjoinresolver
if  hiveconf getboolvar hiveconf confvars hiveconvertjoin
resolvers add new commonjoinresolver
if  hiveconf getboolvar hiveconf confvars hiveoptindexfilter
resolvers add new indexwhereresolver
resolvers add new mapjoinresolver
if  hiveconf getboolvar hiveconf confvars hivemetadataonlyqueries
resolvers add new metadataonlyoptimizer
/**
* invoke all the resolvers one-by-one, and alter the physical plan.
*
* @return physicalcontext
* @throws hiveexception
*/
public physicalcontext optimize   throws semanticexception
for  physicalplanresolver r   resolvers
pctx   r resolve pctx
return pctx