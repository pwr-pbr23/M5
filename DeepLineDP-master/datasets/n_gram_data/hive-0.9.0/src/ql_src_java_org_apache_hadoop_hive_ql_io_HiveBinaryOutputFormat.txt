/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql io
import java io ioexception
import java io outputstream
import java util properties
import org apache hadoop fs filesystem
import org apache hadoop fs path
import org apache hadoop hive ql exec filesinkoperator recordwriter
import org apache hadoop io byteswritable
import org apache hadoop io text
import org apache hadoop io writable
import org apache hadoop io writablecomparable
import org apache hadoop mapred jobconf
import org apache hadoop mapred textoutputformat
import org apache hadoop util progressable
/**
* hivebinaryoutputformat writes out the values consecutively without any
* separators.  it can be used to create a binary data file.
*/
public class hivebinaryoutputformat<k extends writablecomparable  v extends writable>
extends textoutputformat<k  v> implements hiveoutputformat<k  v>
/**
* create the final out file, and output row by row. after one row is
* appended, a configured row separator is appended
*
* @param jc
*          the job configuration file
* @param outpath
*          the final output file to be created
* @param valueclass
*          the value class used for create
* @param iscompressed
*          ignored. currently we don't support compression.
* @param tableproperties
*          the tableproperties of this file's corresponding table
* @param progress
*          progress used for status report
* @return the recordwriter
*/
@override
public recordwriter gethiverecordwriter jobconf jc  path outpath
class<? extends writable> valueclass  boolean iscompressed
properties tableproperties  progressable progress  throws ioexception
filesystem fs   outpath getfilesystem jc
final outputstream outstream   fs create outpath
return new recordwriter
public void write writable r  throws ioexception
if  r instanceof text
text tr    text  r
outstream write tr getbytes    0  tr getlength
else
// dynamicserde always writes out byteswritable
byteswritable bw    byteswritable  r
outstream write bw get    0  bw getsize
public void close boolean abort  throws ioexception
outstream close