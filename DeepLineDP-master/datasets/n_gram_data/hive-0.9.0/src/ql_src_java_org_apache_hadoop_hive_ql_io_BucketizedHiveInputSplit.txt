/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql io
import java io datainput
import java io dataoutput
import java io file
import java io ioexception
import java io serializable
import java net uri
import java net urisyntaxexception
import java util arraylist
import java util hashmap
import java util iterator
import java util map
import java util map entry
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configurable
import org apache hadoop conf configuration
import org apache hadoop fs path
import org apache hadoop fs pathfilter
import org apache hadoop hive ql exec execmapper
import org apache hadoop hive ql exec operator
import org apache hadoop hive ql exec tablescanoperator
import org apache hadoop hive ql exec utilities
import org apache hadoop hive ql io hiveinputformat hiveinputsplit
import org apache hadoop hive ql plan mapredwork
import org apache hadoop hive ql plan partitiondesc
import org apache hadoop hive serde2 columnprojectionutils
import org apache hadoop hive shims shimloader
import org apache hadoop hive shims hadoopshims combinefileinputformatshim
import org apache hadoop hive shims hadoopshims inputsplitshim
import org apache hadoop io writable
import org apache hadoop io writablecomparable
import org apache hadoop mapred fileinputformat
import org apache hadoop mapred filesplit
import org apache hadoop mapred inputformat
import org apache hadoop mapred inputsplit
import org apache hadoop mapred jobconf
import org apache hadoop mapred jobconfigurable
import org apache hadoop mapred recordreader
import org apache hadoop mapred reporter
import org apache hadoop util reflectionutils
/**
* hiveinputsplit encapsulates an inputsplit with its corresponding
* inputformatclass. the reason that it derives from filesplit is to make sure
* "map.input.file" in maptask.
*/
public class bucketizedhiveinputsplit extends hiveinputsplit
protected inputsplit inputsplits
protected string inputformatclassname
public string getinputformatclassname
return inputformatclassname
public void setinputformatclassname string inputformatclassname
this inputformatclassname   inputformatclassname
public bucketizedhiveinputsplit
// this is the only public constructor of filesplit
super
public bucketizedhiveinputsplit inputsplit inputsplits
string inputformatclassname
// this is the only public constructor of filesplit
super
assert  inputsplits    null    inputsplits length > 0
this inputsplits   inputsplits
this inputformatclassname   inputformatclassname
public int getnumsplits
return inputsplits length
public inputsplit getsplit int idx
assert  idx >  0    idx < inputsplits length
return inputsplits
public string inputformatclassname
return inputformatclassname
@override
public path getpath
if  inputsplits    null    inputsplits length > 0
inputsplits instanceof filesplit
return   filesplit  inputsplits  getpath
return new path
/** the position of the first byte in the file to process. */
@override
public long getstart
if  inputsplits    null    inputsplits length > 0
inputsplits instanceof filesplit
return   filesplit  inputsplits  getstart
return 0
@override
public string tostring
if  inputsplits    null    inputsplits length > 0
return inputformatclassname       inputsplits tostring
return inputformatclassname
@override
public long getlength
long r   0
if  inputsplits    null
try
for  inputsplit inputsplit   inputsplits
r    inputsplit getlength
catch  exception e
throw new runtimeexception e
return r
public long getlength int idx
if  inputsplits    null
try
return inputsplits getlength
catch  exception e
throw new runtimeexception e
return  1
@override
public string getlocations   throws ioexception
assert  inputsplits    null    inputsplits length > 0
return inputsplits getlocations
@override
public void readfields datainput in  throws ioexception
string inputsplitclassname   in readutf
int numsplits   in readint
inputsplits   new inputsplit
for  int i   0  i < numsplits  i
try
inputsplits    inputsplit  reflectionutils newinstance conf
getclassbyname inputsplitclassname   conf
catch  exception e
throw new ioexception
inputsplitclassname       e getmessage
inputsplits readfields in
inputformatclassname   in readutf
@override
public void write dataoutput out  throws ioexception
assert  inputsplits    null    inputsplits length > 0
out writeutf inputsplits getclass   getname
out writeint inputsplits length
for  inputsplit inputsplit   inputsplits
inputsplit write out
out writeutf inputformatclassname