/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql optimizer
import java io serializable
import java util arraylist
import java util hashmap
import java util linkedhashmap
import java util list
import java util set
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql exec abstractmapjoinoperator
import org apache hadoop hive ql exec filesinkoperator
import org apache hadoop hive ql exec mapjoinoperator
import org apache hadoop hive ql exec operator
import org apache hadoop hive ql exec task
import org apache hadoop hive ql exec unionoperator
import org apache hadoop hive ql hooks readentity
import org apache hadoop hive ql hooks writeentity
import org apache hadoop hive ql lib nodeprocessorctx
import org apache hadoop hive ql parse parsecontext
import org apache hadoop hive ql plan mapjoindesc
import org apache hadoop hive ql plan tabledesc
/**
* processor context for creating map reduce task. walk the tree in a dfs manner
* and process the nodes. some state is maintained about the current nodes
* visited so far.
*/
public class genmrproccontext implements nodeprocessorctx
/**
* genmapredctx is used to keep track of the current state.
*/
public static class genmapredctx
task<? extends serializable> currtask
operator<? extends serializable> currtopop
string curraliasid
public genmapredctx
/**
* @param currtask
*          the current task
* @param currtopop
*          the current top operator being traversed
* @param curraliasid
*          the current alias for the to operator
*/
public genmapredctx task<? extends serializable> currtask
operator<? extends serializable> currtopop  string curraliasid
this currtask   currtask
this currtopop   currtopop
this curraliasid   curraliasid
/**
* @return current task
*/
public task<? extends serializable> getcurrtask
return currtask
/**
* @return current top operator
*/
public operator<? extends serializable> getcurrtopop
return currtopop
/**
* @return current alias
*/
public string getcurraliasid
return curraliasid
/**
* genmrunionctx.
*
*/
public static class genmrunionctx
task<? extends serializable> utask
list<string> tasktmpdir
list<tabledesc> tt_desc
list<operator<? extends serializable>> listtopoperators
public genmrunionctx
utask   null
tasktmpdir   new arraylist<string>
tt_desc   new arraylist<tabledesc>
listtopoperators   new arraylist<operator<? extends serializable>>
public task<? extends serializable> getutask
return utask
public void setutask task<? extends serializable> utask
this utask   utask
public void addtasktmpdir string tasktmpdir
this tasktmpdir add tasktmpdir
public list<string> gettasktmpdir
return tasktmpdir
public void addttdesc tabledesc tt_desc
this tt_desc add tt_desc
public list<tabledesc> getttdesc
return tt_desc
public list<operator<? extends serializable>> getlisttopoperators
return listtopoperators
public void setlisttopoperators
list<operator<? extends serializable>> listtopoperators
this listtopoperators   listtopoperators
public void addlisttopoperators operator<? extends serializable> topoperator
listtopoperators add topoperator
/**
* genmrmapjoinctx.
*
*/
public static class genmrmapjoinctx
string tasktmpdir
tabledesc tt_desc
operator<? extends serializable> rootmapjoinop
abstractmapjoinoperator<? extends mapjoindesc> oldmapjoin
public genmrmapjoinctx
tasktmpdir   null
tt_desc   null
rootmapjoinop   null
oldmapjoin   null
/**
* @param tasktmpdir
* @param tt_desc
* @param rootmapjoinop
* @param oldmapjoin
*/
public genmrmapjoinctx string tasktmpdir  tabledesc tt_desc
operator<? extends serializable> rootmapjoinop
abstractmapjoinoperator<? extends mapjoindesc> oldmapjoin
this tasktmpdir   tasktmpdir
this tt_desc   tt_desc
this rootmapjoinop   rootmapjoinop
this oldmapjoin   oldmapjoin
public void settasktmpdir string tasktmpdir
this tasktmpdir   tasktmpdir
public string gettasktmpdir
return tasktmpdir
public void setttdesc tabledesc tt_desc
this tt_desc   tt_desc
public tabledesc getttdesc
return tt_desc
/**
* @return the childselect
*/
public operator<? extends serializable> getrootmapjoinop
return rootmapjoinop
/**
* @param rootmapjoinop
*          the rootmapjoinop to set
*/
public void setrootmapjoinop operator<? extends serializable> rootmapjoinop
this rootmapjoinop   rootmapjoinop
/**
* @return the oldmapjoin
*/
public abstractmapjoinoperator<? extends mapjoindesc> getoldmapjoin
return oldmapjoin
/**
* @param oldmapjoin
*          the oldmapjoin to set
*/
public void setoldmapjoin abstractmapjoinoperator<? extends mapjoindesc> oldmapjoin
this oldmapjoin   oldmapjoin
private hiveconf conf
private hashmap<operator<? extends serializable>  task<? extends serializable>> optaskmap
private hashmap<unionoperator  genmrunionctx> uniontaskmap
private hashmap<abstractmapjoinoperator<? extends mapjoindesc>  genmrmapjoinctx> mapjointaskmap
private list<operator<? extends serializable>> seenops
private list<filesinkoperator> seenfilesinkops
private parsecontext parsectx
private list<task<? extends serializable>> mvtask
private list<task<? extends serializable>> roottasks
private linkedhashmap<operator<? extends serializable>  genmapredctx> mapcurrctx
private task<? extends serializable> currtask
private operator<? extends serializable> currtopop
private unionoperator currunionop
private abstractmapjoinoperator<? extends mapjoindesc> currmapjoinop
private string curraliasid
private list<operator<? extends serializable>> rootops
/**
* set of read entities. this list is generated by the walker and is passed to
* the hooks.
*/
private set<readentity> inputs
/**
* set of write entities. this list is generated by the walker and is passed
* to the hooks.
*/
private set<writeentity> outputs
public genmrproccontext
/**
* @param conf
*          hive configuration
* @param optaskmap
*          reducer to task mapping
* @param seenops
*          operator already visited
* @param parsectx
*          current parse context
* @param roottasks
*          root tasks for the plan
* @param mvtask
*          the final move task
* @param mapcurrctx
*          operator to task mappings
* @param inputs
*          the set of input tables/partitions generated by the walk
* @param outputs
*          the set of destinations generated by the walk
*/
public genmrproccontext
hiveconf conf
hashmap<operator<? extends serializable>  task<? extends serializable>> optaskmap
list<operator<? extends serializable>> seenops  parsecontext parsectx
list<task<? extends serializable>> mvtask
list<task<? extends serializable>> roottasks
linkedhashmap<operator<? extends serializable>  genmapredctx> mapcurrctx
set<readentity> inputs  set<writeentity> outputs
this conf   conf
this optaskmap   optaskmap
this seenops   seenops
this mvtask   mvtask
this parsectx   parsectx
this roottasks   roottasks
this mapcurrctx   mapcurrctx
this inputs   inputs
this outputs   outputs
currtask   null
currtopop   null
currunionop   null
currmapjoinop   null
curraliasid   null
rootops   new arraylist<operator<? extends serializable>>
rootops addall parsectx gettopops   values
uniontaskmap   new hashmap<unionoperator  genmrunionctx>
mapjointaskmap   new hashmap<abstractmapjoinoperator<? extends mapjoindesc>  genmrmapjoinctx>
/**
* @return reducer to task mapping
*/
public hashmap<operator<? extends serializable>  task<? extends serializable>> getoptaskmap
return optaskmap
/**
* @param optaskmap
*          reducer to task mapping
*/
public void setoptaskmap
hashmap<operator<? extends serializable>  task<? extends serializable>> optaskmap
this optaskmap   optaskmap
/**
* @return operators already visited
*/
public list<operator<? extends serializable>> getseenops
return seenops
/**
* @return file operators already visited
*/
public list<filesinkoperator> getseenfilesinkops
return seenfilesinkops
/**
* @param seenops
*          operators already visited
*/
public void setseenops list<operator<? extends serializable>> seenops
this seenops   seenops
/**
* @param seenfilesinkops
*          file sink operators already visited
*/
public void setseenfilesinkops list<filesinkoperator> seenfilesinkops
this seenfilesinkops   seenfilesinkops
/**
* @return top operators for tasks
*/
public list<operator<? extends serializable>> getrootops
return rootops
/**
* @param rootops
*          top operators for tasks
*/
public void setrootops list<operator<? extends serializable>> rootops
this rootops   rootops
/**
* @return current parse context
*/
public parsecontext getparsectx
return parsectx
/**
* @param parsectx
*          current parse context
*/
public void setparsectx parsecontext parsectx
this parsectx   parsectx
/**
* @return the final move task
*/
public list<task<? extends serializable>> getmvtask
return mvtask
/**
* @param mvtask
*          the final move task
*/
public void setmvtask list<task<? extends serializable>> mvtask
this mvtask   mvtask
/**
* @return root tasks for the plan
*/
public list<task<? extends serializable>> getroottasks
return roottasks
/**
* @param roottasks
*          root tasks for the plan
*/
public void setroottasks list<task<? extends serializable>> roottasks
this roottasks   roottasks
/**
* @return operator to task mappings
*/
public linkedhashmap<operator<? extends serializable>  genmapredctx> getmapcurrctx
return mapcurrctx
/**
* @param mapcurrctx
*          operator to task mappings
*/
public void setmapcurrctx
linkedhashmap<operator<? extends serializable>  genmapredctx> mapcurrctx
this mapcurrctx   mapcurrctx
/**
* @return current task
*/
public task<? extends serializable> getcurrtask
return currtask
/**
* @param currtask
*          current task
*/
public void setcurrtask task<? extends serializable> currtask
this currtask   currtask
/**
* @return current top operator
*/
public operator<? extends serializable> getcurrtopop
return currtopop
/**
* @param currtopop
*          current top operator
*/
public void setcurrtopop operator<? extends serializable> currtopop
this currtopop   currtopop
public unionoperator getcurrunionop
return currunionop
/**
* @param currunionop
*          current union operator
*/
public void setcurrunionop unionoperator currunionop
this currunionop   currunionop
public abstractmapjoinoperator<? extends mapjoindesc> getcurrmapjoinop
return currmapjoinop
/**
* @param currmapjoinop
*          current map join operator
*/
public void setcurrmapjoinop abstractmapjoinoperator<? extends mapjoindesc> currmapjoinop
this currmapjoinop   currmapjoinop
/**
* @return current top alias
*/
public string getcurraliasid
return curraliasid
/**
* @param curraliasid
*          current top alias
*/
public void setcurraliasid string curraliasid
this curraliasid   curraliasid
public genmrunionctx getuniontask unionoperator op
return uniontaskmap get op
public void setuniontask unionoperator op  genmrunionctx utask
uniontaskmap put op  utask
public genmrmapjoinctx getmapjoinctx abstractmapjoinoperator<? extends mapjoindesc> op
return mapjointaskmap get op
public void setmapjoinctx abstractmapjoinoperator<? extends mapjoindesc> op  genmrmapjoinctx mjctx
mapjointaskmap put op  mjctx
/**
* get the input set.
*/
public set<readentity> getinputs
return inputs
/**
* get the output set.
*/
public set<writeentity> getoutputs
return outputs
/**
* @return the conf
*/
public hiveconf getconf
return conf
/**
* @param conf
*          the conf to set
*/
public void setconf hiveconf conf
this conf   conf