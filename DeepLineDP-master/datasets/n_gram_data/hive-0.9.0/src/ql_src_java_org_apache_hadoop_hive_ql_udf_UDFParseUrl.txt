/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf
import java net url
import java util regex matcher
import java util regex pattern
import org apache hadoop hive ql exec description
import org apache hadoop hive ql exec udf
/**
* udf to extract specfic parts from url for example,
* parse_url('http://facebook.com/path/p1.php?query=1', 'host') will return
* 'facebook.com' for example,
* parse_url('http://facebook.com/path/p1.php?query=1', 'path') will return
* '/path/p1.php' parse_url('http://facebook.com/path/p1.php?query=1', 'query')
* will return 'query=1'
* parse_url('http://facebook.com/path/p1.php?query=1#ref', 'ref') will return
* 'ref' parse_url('http://facebook.com/path/p1.php?query=1#ref', 'protocol')
* will return 'http' possible values are
* host,path,query,ref,protocol,authority,file,userinfo also you can get a value
* of particular key in query, using syntax query:<key_name> eg: query:k1.
*/
@description name
value
extended
public class udfparseurl extends udf
private string lasturlstr   null
private url url   null
private pattern p   null
private string lastkey   null
public udfparseurl
public string evaluate string urlstr  string parttoextract
if  urlstr    null    parttoextract    null
return null
if  lasturlstr    null     urlstr equals lasturlstr
try
url   new url urlstr
catch  exception e
return null
lasturlstr   urlstr
if  parttoextract equals
return url gethost
if  parttoextract equals
return url getpath
if  parttoextract equals
return url getquery
if  parttoextract equals
return url getref
if  parttoextract equals
return url getprotocol
if  parttoextract equals
return url getfile
if  parttoextract equals
return url getauthority
if  parttoextract equals
return url getuserinfo
return null
public string evaluate string urlstr  string parttoextract  string key
if   parttoextract equals
return null
string query   this evaluate urlstr  parttoextract
if  query    null
return null
if   key equals lastkey
p   pattern compile     key
lastkey   key
matcher m   p matcher query
if  m find
return m group 2
return null