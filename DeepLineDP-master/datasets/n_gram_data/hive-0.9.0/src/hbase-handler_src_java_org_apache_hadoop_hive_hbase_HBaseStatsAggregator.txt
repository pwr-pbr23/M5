/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive hbase
import java io ioexception
import java util arraylist
import org apache commons logging log
import org apache commons logging logfactory
import org apache hadoop conf configuration
import org apache hadoop hbase hbaseconfiguration
import org apache hadoop hbase client delete
import org apache hadoop hbase client htable
import org apache hadoop hbase client result
import org apache hadoop hbase client resultscanner
import org apache hadoop hbase client scan
import org apache hadoop hbase filter prefixfilter
import org apache hadoop hbase util bytes
import org apache hadoop hive ql stats statsaggregator
/**
* a class that implements the statsaggregator interface through hbase.
*/
public class hbasestatsaggregator implements statsaggregator
private htable htable
private final log log   logfactory getlog this getclass   getname
/**
* does the necessary hbase initializations.
*/
public boolean connect configuration hiveconf
try
htable   new htable hbaseconfiguration create hiveconf
hbasestatssetupconstants part_stat_table_name
return true
catch  ioexception e
log error    e
return false
/**
* aggregates temporary stats from hbase;
*/
public string aggregatestats string rowid  string key
byte family  column
if   hbasestatsutils isvalidstatistic key
log warn     key
hbasestatsutils getsupportedstatistics
return null
family   hbasestatsutils getfamilyname
column   hbasestatsutils getcolumnname key
try
long retvalue   0
scan scan   new scan
scan addcolumn family  column
// filter the row by its id
// the complete key is "tablename/partspecs/jobid/taskid"
// this is a prefix filter, the prefix is "tablename/partspecs/jobid", i.e. the taskid is
// ignored. in sql, this is equivalent to
// "select * from tablename where id like 'tablename/partspecs/jobid%';"
prefixfilter filter   new prefixfilter bytes tobytes rowid
scan setfilter filter
resultscanner scanner   htable getscanner scan
for  result result   scanner
retvalue    long parselong bytes tostring result getvalue family  column
return long tostring retvalue
catch  ioexception e
log error    e
return null
public boolean closeconnection
return true
public boolean cleanup string rowid
try
scan scan   new scan
// filter the row by its id
// the complete key is "tablename/partspecs/jobid/taskid"
// this is a prefix filter, the prefix is "jobid"
// in sql, this is equivalent to "select * from tablename where id like 'jobid%';"
prefixfilter filter   new prefixfilter bytes tobytes rowid
scan setfilter filter
resultscanner scanner   htable getscanner scan
arraylist<delete> todelete   new arraylist<delete>
for  result result   scanner
delete delete   new delete result getrow
todelete add delete
htable delete todelete
return true
catch  ioexception e
log error    e
return false