/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive metastore model
import java util list
import java util map
public class mstoragedescriptor
private mcolumndescriptor cd
private string location
private string inputformat
private string outputformat
private boolean iscompressed   false
private int numbuckets   1
private mserdeinfo serdeinfo
private list<string> bucketcols
private list<morder> sortcols
private map<string  string> parameters
public mstoragedescriptor
/**
* @param cd
* @param location
* @param inputformat
* @param outputformat
* @param iscompressed
* @param numbuckets
* @param serdeinfo
* @param bucketcols
* @param sortorder
* @param parameters
*/
public mstoragedescriptor mcolumndescriptor cd  string location  string inputformat
string outputformat  boolean iscompressed  int numbuckets  mserdeinfo serdeinfo
list<string> bucketcols  list<morder> sortorder  map<string  string> parameters
this cd   cd
this location   location
this inputformat   inputformat
this outputformat   outputformat
this iscompressed   iscompressed
this numbuckets   numbuckets
this serdeinfo   serdeinfo
this bucketcols   bucketcols
this sortcols   sortorder
this parameters   parameters
/**
* @return the location
*/
public string getlocation
return location
/**
* @param location the location to set
*/
public void setlocation string location
this location   location
/**
* @return the iscompressed
*/
public boolean iscompressed
return iscompressed
/**
* @param iscompressed the iscompressed to set
*/
public void setcompressed boolean iscompressed
this iscompressed   iscompressed
/**
* @return the numbuckets
*/
public int getnumbuckets
return numbuckets
/**
* @param numbuckets the numbuckets to set
*/
public void setnumbuckets int numbuckets
this numbuckets   numbuckets
/**
* @return the bucketcols
*/
public list<string> getbucketcols
return bucketcols
/**
* @param bucketcols the bucketcols to set
*/
public void setbucketcols list<string> bucketcols
this bucketcols   bucketcols
/**
* @return the parameters
*/
public map<string  string> getparameters
return parameters
/**
* @param parameters the parameters to set
*/
public void setparameters map<string  string> parameters
this parameters   parameters
/**
* @return the inputformat
*/
public string getinputformat
return inputformat
/**
* @param inputformat the inputformat to set
*/
public void setinputformat string inputformat
this inputformat   inputformat
/**
* @return the outputformat
*/
public string getoutputformat
return outputformat
/**
* @param outputformat the outputformat to set
*/
public void setoutputformat string outputformat
this outputformat   outputformat
/**
* @return the column descriptor
*/
public mcolumndescriptor getcd
return cd
/**
* @param cd the column descriptor to set
*/
public void setcd mcolumndescriptor cd
this cd   cd
/**
* @return the serde
*/
public mserdeinfo getserdeinfo
return serdeinfo
/**
* @param serde the serde to set
*/
public void setserdeinfo mserdeinfo serde
this serdeinfo   serde
/**
* @param sortorder the sortorder to set
*/
public void setsortcols list<morder> sortorder
this sortcols   sortorder
/**
* @return the sortorder
*/
public list<morder> getsortcols
return sortcols