/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive contrib util typedbytes
import java io bytearrayinputstream
import java io bytearrayoutputstream
import java io datainputstream
import java io dataoutputstream
import java io ioexception
import org apache hadoop io byteswritable
/**
* writable for typed bytes.
*/
public class typedbyteswritable extends byteswritable
/** create a typedbyteswritable. */
public typedbyteswritable
super
/** create a typedbyteswritable with a given byte array as initial value. */
public typedbyteswritable byte bytes
super bytes
/** set the typed bytes from a given java object. */
public void setvalue object obj
try
bytearrayoutputstream baos   new bytearrayoutputstream
typedbytesoutput tbo   typedbytesoutput get new dataoutputstream baos
tbo write obj
byte bytes   baos tobytearray
set bytes  0  bytes length
catch  ioexception e
throw new runtimeexception e
/** get the typed bytes as a java object. */
public object getvalue
try
bytearrayinputstream bais   new bytearrayinputstream getbytes
typedbytesinput tbi   typedbytesinput get new datainputstream bais
object obj   tbi read
return obj
catch  ioexception e
throw new runtimeexception e
/** get the type code embedded in the first byte. */
public type gettype
byte bytes   getbytes
if  bytes    null    bytes length    0
return null
for  type type   type values
if  type code    bytes
return type
return null
/** generate a suitable string representation. */
@override
public string tostring
return getvalue   tostring