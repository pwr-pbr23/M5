/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive contrib fileformat base64
import java io ioexception
import java io unsupportedencodingexception
import java util arrays
import java lang reflect constructor
import java lang reflect invocationtargetexception
import org apache commons codec binary base64
import org apache hadoop hive shims shimloader
import org apache hadoop io byteswritable
import org apache hadoop io longwritable
import org apache hadoop io text
import org apache hadoop mapred filesplit
import org apache hadoop mapred inputformat
import org apache hadoop mapred inputsplit
import org apache hadoop mapred jobconf
import org apache hadoop mapred jobconfigurable
import org apache hadoop mapred linerecordreader
import org apache hadoop mapred recordreader
import org apache hadoop mapred reporter
import org apache hadoop mapred textinputformat
/**
* fileinputformat for base64 encoded text files.
*
* each line is a base64-encoded record. the key is a longwritable which is the
* offset. the value is a byteswritable containing the base64-decoded bytes.
*
* this class accepts a configurable parameter:
* "base64.text.input.format.signature"
*
* the utf-8 encoded signature will be compared with the beginning of each
* decoded bytes. if they don't match, the record is discarded. if they match,
* the signature is stripped off the data.
*/
public class base64textinputformat implements
inputformat<longwritable  byteswritable>  jobconfigurable
/**
* base64linerecordreader.
*
*/
public static class base64linerecordreader implements
recordreader<longwritable  byteswritable>  jobconfigurable
linerecordreader reader
text text
public base64linerecordreader linerecordreader reader
this reader   reader
text   reader createvalue
@override
public void close   throws ioexception
reader close
@override
public longwritable createkey
return reader createkey
@override
public byteswritable createvalue
return new byteswritable
@override
public long getpos   throws ioexception
return reader getpos
@override
public float getprogress   throws ioexception
return reader getprogress
@override
public boolean next longwritable key  byteswritable value  throws ioexception
while  reader next key  text
// text -> byte[] -> value
byte textbytes   text getbytes
int length   text getlength
// trim additional bytes
if  length    textbytes length
textbytes   arrays copyof textbytes  length
byte binarydata   base64 decode textbytes
// compare data header with signature
int i
for  i   0  i < binarydata length    i < signature length
binarydata    signature    i
// return the row only if it's not corrupted
if  i    signature length
value set binarydata  signature length  binarydata length
signature length
return true
// no more data
return false
private byte signature
private final base64 base64   createbase64
@override
public void configure jobconf job
try
string signaturestring   job get
if  signaturestring    null
signature   signaturestring getbytes
else
signature   new byte
catch  unsupportedencodingexception e
e printstacktrace
textinputformat format
jobconf job
public base64textinputformat
format   new textinputformat
@override
public void configure jobconf job
this job   job
format configure job
public recordreader<longwritable  byteswritable> getrecordreader
inputsplit genericsplit  jobconf job  reporter reporter  throws ioexception
reporter setstatus genericsplit tostring
base64linerecordreader reader   new base64linerecordreader
new linerecordreader job   filesplit  genericsplit
reader configure job
return reader
@override
public inputsplit getsplits jobconf job  int numsplits  throws ioexception
return format getsplits job  numsplits
// cannot put @override here because hadoop 0.18+ removed this method.
public void validateinput jobconf job  throws ioexception
shimloader gethadoopshims   inputformatvalidateinput format  job
/**
* workaround an incompatible change from commons-codec 1.3 to 1.4.
* since hadoop has this jar on its classpath, we have no way of knowing
* which version we are running against.
*/
static base64 createbase64
try
// this constructor appeared in 1.4 and specifies that we do not want to
// line-wrap or use any newline separator
constructor<base64> ctor   base64 class getconstructor int class  byte class
return ctor newinstance 0  null
catch  nosuchmethodexception e       ie we are running 1 3
// in 1.3, this constructor has the same behavior, but in 1.4 the default
// was changed to add wrapping and newlines.
return new base64
catch  instantiationexception e
throw new runtimeexception e
catch  illegalaccessexception e
throw new runtimeexception e
catch  invocationtargetexception e
throw new runtimeexception e getcause