/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql udf
import java text parseexception
import java text simpledateformat
import java util date
import java util timezone
import org apache hadoop hive ql exec description
import org apache hadoop hive ql exec udf
import org apache hadoop hive serde2 io timestampwritable
import org apache hadoop io intwritable
import org apache hadoop io text
/**
* udfdatediff.
*
*/
@description name
value
extended
public class udfdatediff extends udf
private final simpledateformat formatter   new simpledateformat
private final intwritable result   new intwritable
public udfdatediff
formatter settimezone timezone gettimezone
/**
* calculate the difference in the number of days. the time part of the string
* will be ignored. if datestring1 is earlier than datestring2, then the
* result can be negative.
*
* @param datestring1
*          the date string in the format of "yyyy-mm-dd hh:mm:ss" or
*          "yyyy-mm-dd".
* @param datestring2
*          the date string in the format of "yyyy-mm-dd hh:mm:ss" or
*          "yyyy-mm-dd".
* @return the difference in days.
*/
public intwritable evaluate text datestring1  text datestring2
return evaluate todate datestring1   todate datestring2
public intwritable evaluate timestampwritable t1  timestampwritable t2
return evaluate todate t1   todate t2
public intwritable evaluate timestampwritable t  text datestring
return evaluate todate t   todate datestring
public intwritable evaluate text datestring  timestampwritable t
return evaluate todate datestring   todate t
private intwritable evaluate date date  date date2
if  date    null    date2    null
return null
// note: this implementation avoids the extra-second problem
// by comparing with utc epoch and integer division.
// 86400 is the number of seconds in a day
long diffinmilliseconds   date gettime     date2 gettime
result set  int   diffinmilliseconds    86400   1000
return result
private date format string datestring
try
return formatter parse datestring
catch  parseexception e
return null
private date todate text datestring
if  datestring    null
return null
return format datestring tostring
private date todate timestampwritable t
if  t    null
return null
return t gettimestamp