/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql plan
import java io serializable
import java util linkedhashmap
import java util list
import java util map
import org apache hadoop hive metastore api fieldschema
import org apache hadoop hive metastore api order
/**
* contains the information needed to add a partition.
*/
public class addpartitiondesc extends ddldesc implements serializable
private static final long serialversionuid   1l
string tablename
string dbname
string location
boolean ifnotexists
boolean expectview
linkedhashmap<string  string> partspec
map<string  string> partparams
string inputformat   null
string outputformat   null
int numbuckets    1
list<fieldschema> cols   null
string serializationlib   null
map<string  string> serdeparams   null
list<string> bucketcols   null
list<order> sortcols   null
/**
* for serialization only.
*/
public addpartitiondesc
/**
* @param dbname
*          database to add to.
* @param tablename
*          table to add to.
* @param partspec
*          partition specification.
* @param location
*          partition location, relative to table location.
* @param params
*          partition parameters.
*/
public addpartitiondesc string dbname  string tablename
map<string  string> partspec  string location  map<string  string> params
this dbname  tablename  partspec  location  true  false
this partparams   params
/**
* @param dbname
*          database to add to.
* @param tablename
*          table to add to.
* @param partspec
*          partition specification.
* @param location
*          partition location, relative to table location.
* @param ifnotexists
*          if true, the partition is only added if it doesn't exist
* @param expectview
*          true for alter view, false for alter table
*/
public addpartitiondesc string dbname  string tablename
map<string  string> partspec  string location  boolean ifnotexists
boolean expectview
super
this dbname   dbname
this tablename   tablename
this partspec   new linkedhashmap<string string> partspec
this location   location
this ifnotexists   ifnotexists
this expectview   expectview
/**
* @return database name
*/
public string getdbname
return dbname
/**
* @param dbname
*          database name
*/
public void setdbname string dbname
this dbname   dbname
/**
* @return the table we're going to add the partitions to.
*/
public string gettablename
return tablename
/**
* @param tablename
*          the table we're going to add the partitions to.
*/
public void settablename string tablename
this tablename   tablename
/**
* @return location of partition in relation to table
*/
public string getlocation
return location
/**
* @param location
*          location of partition in relation to table
*/
public void setlocation string location
this location   location
/**
* @return partition specification.
*/
public linkedhashmap<string  string> getpartspec
return partspec
/**
* @param partspec
*          partition specification
*/
public void setpartspec linkedhashmap<string  string> partspec
this partspec   partspec
/**
* @return if the partition should only be added if it doesn't exist already
*/
public boolean getifnotexists
return this ifnotexists
/**
* @param ifnotexists
*          if the part should be added only if it doesn't exist
*/
public void setifnotexists boolean ifnotexists
this ifnotexists   ifnotexists
/**
* @return partition parameters.
*/
public map<string  string> getpartparams
return partparams
/**
* @param partparams
*          partition parameters
*/
public void setpartparams map<string  string> partparams
this partparams   partparams
public int getnumbuckets
return numbuckets
public void setnumbuckets int numbuckets
this numbuckets   numbuckets
public list<fieldschema> getcols
return cols
public void setcols list<fieldschema> cols
this cols   cols
public string getserializationlib
return serializationlib
public void setserializationlib string serializationlib
this serializationlib   serializationlib
public map<string  string> getserdeparams
return serdeparams
public void setserdeparams map<string  string> serdeparams
this serdeparams   serdeparams
public list<string> getbucketcols
return bucketcols
public void setbucketcols list<string> bucketcols
this bucketcols   bucketcols
public list<order> getsortcols
return sortcols
public void setsortcols list<order> sortcols
this sortcols   sortcols
public string getinputformat
return inputformat
public void setinputformat string inputformat
this inputformat   inputformat
public string getoutputformat
return outputformat
public void setoutputformat string outputformat
this outputformat   outputformat
/*
* @return whether to expect a view being altered
*/
public boolean getexpectview
return expectview
/**
* @param expectview
*          set whether to expect a view being altered
*/
public void setexpectview boolean expectview
this expectview   expectview