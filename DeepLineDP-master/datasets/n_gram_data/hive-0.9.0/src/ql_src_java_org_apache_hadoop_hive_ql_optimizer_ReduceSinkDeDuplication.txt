/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive ql optimizer
import java io serializable
import java util arraylist
import java util hashmap
import java util iterator
import java util linkedhashmap
import java util list
import java util map
import java util stack
import org apache hadoop hive conf hiveconf
import org apache hadoop hive ql exec columninfo
import org apache hadoop hive ql exec extractoperator
import org apache hadoop hive ql exec filteroperator
import org apache hadoop hive ql exec forwardoperator
import org apache hadoop hive ql exec groupbyoperator
import org apache hadoop hive ql exec operator
import org apache hadoop hive ql exec operatorfactory
import org apache hadoop hive ql exec reducesinkoperator
import org apache hadoop hive ql exec rowschema
import org apache hadoop hive ql exec scriptoperator
import org apache hadoop hive ql exec selectoperator
import org apache hadoop hive ql lib defaultgraphwalker
import org apache hadoop hive ql lib defaultruledispatcher
import org apache hadoop hive ql lib dispatcher
import org apache hadoop hive ql lib graphwalker
import org apache hadoop hive ql lib node
import org apache hadoop hive ql lib nodeprocessor
import org apache hadoop hive ql lib nodeprocessorctx
import org apache hadoop hive ql lib rule
import org apache hadoop hive ql lib ruleregexp
import org apache hadoop hive ql parse opparsecontext
import org apache hadoop hive ql parse parsecontext
import org apache hadoop hive ql parse rowresolver
import org apache hadoop hive ql parse semanticexception
import org apache hadoop hive ql plan exprnodecolumndesc
import org apache hadoop hive ql plan exprnodedesc
import org apache hadoop hive ql plan reducesinkdesc
import org apache hadoop hive ql plan selectdesc
/**
* if two reducer sink operators share the same partition/sort columns, we
* should merge them. this should happen after map join optimization because map
* join optimization will remove reduce sink operators.
*/
public class reducesinkdeduplication implements transform
protected parsecontext pgraphcontext
@override
public parsecontext transform parsecontext pctx  throws semanticexception
pgraphcontext   pctx
// generate pruned column list for all relevant operators
reducesinkdeduplicateprocctx cppctx   new reducesinkdeduplicateprocctx pgraphcontext
map<rule  nodeprocessor> oprules   new linkedhashmap<rule  nodeprocessor>
oprules put new ruleregexp        reducesinkdeduplicateprocfactory
getreducerreducerproc
// the dispatcher fires the processor corresponding to the closest matching
// rule and passes the context along
dispatcher disp   new defaultruledispatcher reducesinkdeduplicateprocfactory
getdefaultproc    oprules  cppctx
graphwalker ogw   new defaultgraphwalker disp
// create a list of topop nodes
arraylist<node> topnodes   new arraylist<node>
topnodes addall pgraphcontext gettopops   values
ogw startwalking topnodes  null
return pgraphcontext
class reducesinkdeduplicateprocctx implements nodeprocessorctx
parsecontext pctx
list<reducesinkoperator> rejectedrslist
public reducesinkdeduplicateprocctx parsecontext pctx
rejectedrslist   new arraylist<reducesinkoperator>
this pctx   pctx
public boolean contains  reducesinkoperator rsop
return rejectedrslist contains rsop
public void addrejectedreducesinkoperator reducesinkoperator rsop
if   rejectedrslist contains rsop
rejectedrslist add rsop
public parsecontext getpctx
return pctx
public void setpctx parsecontext pctx
this pctx   pctx
static class reducesinkdeduplicateprocfactory
public static nodeprocessor getreducerreducerproc
return new reducerreducerproc
public static nodeprocessor getdefaultproc
return new defaultproc
/*
* do nothing.
*/
static class defaultproc implements nodeprocessor
@override
public object process node nd  stack<node> stack
nodeprocessorctx procctx  object    nodeoutputs
throws semanticexception
return null
static class reducerreducerproc implements nodeprocessor
@override
public object process node nd  stack<node> stack
nodeprocessorctx procctx  object    nodeoutputs
throws semanticexception
reducesinkdeduplicateprocctx ctx    reducesinkdeduplicateprocctx  procctx
reducesinkoperator childreducesink    reducesinkoperator nd
if ctx contains childreducesink
return null
list<operator<? extends serializable>> childop   childreducesink getchildoperators
if  childop    null    childop size      1    childop get 0  instanceof groupbyoperator
ctx addrejectedreducesinkoperator childreducesink
return null
parsecontext pgraphcontext   ctx getpctx
hashmap<string  string> childcolumnmapping   getpartitionandkeycolumnmapping childreducesink
reducesinkoperator parentrs   null
parentrs   findsingleparentreducesink childreducesink  pgraphcontext
if  parentrs    null
ctx addrejectedreducesinkoperator childreducesink
return null
hashmap<string  string> parentcolumnmapping   getpartitionandkeycolumnmapping parentrs
operator<? extends serializable> stopbacktrackflagop   null
if  parentrs getparentoperators      null
parentrs getparentoperators   size      0
stopbacktrackflagop    parentrs
else if  parentrs getparentoperators   size      1
return null
else
stopbacktrackflagop   parentrs getparentoperators   get 0
boolean succeed   backtrackcolumnnames childcolumnmapping  childreducesink  stopbacktrackflagop  pgraphcontext
if   succeed
return null
succeed   backtrackcolumnnames parentcolumnmapping  parentrs  stopbacktrackflagop  pgraphcontext
if   succeed
return null
boolean same   comparereducesink childreducesink  parentrs  childcolumnmapping  parentcolumnmapping
if   same
return null
replacereducesinkwithselectoperator childreducesink  pgraphcontext
return null
private void replacereducesinkwithselectoperator
reducesinkoperator childreducesink  parsecontext pgraphcontext  throws semanticexception
list<operator<? extends serializable>> parentop   childreducesink getparentoperators
list<operator<? extends serializable>> childop   childreducesink getchildoperators
operator<? extends serializable> oldparent   childreducesink
if  childop    null    childop size      1
childop get 0   instanceof extractoperator
oldparent   childop get 0
childop   childop get 0  getchildoperators
operator<? extends serializable> input   parentop get 0
input getchildoperators   clear
rowresolver inputrr   pgraphcontext getopparsectx   get input  getrowresolver
arraylist<exprnodedesc> exprs   new arraylist<exprnodedesc>
arraylist<string> outputs   new arraylist<string>
list<string> outputcols   childreducesink getconf   getoutputvaluecolumnnames
rowresolver outputrs   new rowresolver
map<string  exprnodedesc> colexprmap   new hashmap<string  exprnodedesc>
for  int i   0  i < outputcols size    i
string internalname   outputcols get i
string nm   inputrr reverselookup internalname
columninfo valueinfo   inputrr get nm  nm
exprnodedesc coldesc   childreducesink getconf   getvaluecols   get i
exprs add coldesc
outputs add internalname
outputrs put nm  nm  new columninfo internalname  valueinfo
gettype    nm  valueinfo getisvirtualcol    valueinfo ishiddenvirtualcol
colexprmap put internalname  coldesc
selectdesc select   new selectdesc exprs  outputs  false
selectoperator sel    selectoperator  putopinsertmap
operatorfactory getandmakechild select  new rowschema inputrr
getcolumninfos     input   inputrr  pgraphcontext
sel setcolumnexprmap colexprmap
// insert the select operator in between.
sel setchildoperators childop
for  operator<? extends serializable> ch   childop
ch replaceparent oldparent  sel
private operator<? extends serializable> putopinsertmap
operator<? extends serializable> op  rowresolver rr  parsecontext pgraphcontext
opparsecontext ctx   new opparsecontext rr
pgraphcontext getopparsectx   put op  ctx
return op
private boolean comparereducesink reducesinkoperator childreducesink
reducesinkoperator parentrs
hashmap<string  string> childcolumnmapping
hashmap<string  string> parentcolumnmapping
arraylist<exprnodedesc> childpartitioncols   childreducesink getconf   getpartitioncols
arraylist<exprnodedesc> parentpartitioncols   parentrs getconf   getpartitioncols
boolean ret   compareexprnodes childcolumnmapping  parentcolumnmapping
childpartitioncols  parentpartitioncols
if   ret
return false
arraylist<exprnodedesc> childreducekeycols   childreducesink getconf   getkeycols
arraylist<exprnodedesc> parentreducekeycols   parentrs getconf   getkeycols
ret   compareexprnodes childcolumnmapping  parentcolumnmapping
childreducekeycols  parentreducekeycols
if   ret
return false
string childrsorder   childreducesink getconf   getorder
string parentrsorder   parentrs getconf   getorder
boolean movechildrsordertoparent   false
//move child reduce sink's order to the parent reduce sink operator.
if  childrsorder    null      childrsorder trim   equals
if  parentrsorder    null
childrsorder trim   equals parentrsorder trim
return false
else
if parentrsorder    null    parentrsorder trim   equals
movechildrsordertoparent   true
int childnumreducers   childreducesink getconf   getnumreducers
int parentnumreducers   parentrs getconf   getnumreducers
boolean movechildreducernumtoparent   false
//move child reduce sink's number reducers to the parent reduce sink operator.
if  childnumreducers    parentnumreducers
if  childnumreducers     1
//do nothing.
else if  parentnumreducers     1
//set childnumreducers in the parent reduce sink operator.
movechildreducernumtoparent   true
else
return false
if movechildrsordertoparent
parentrs getconf   setorder childrsorder
if movechildreducernumtoparent
parentrs getconf   setnumreducers childnumreducers
return true
private boolean compareexprnodes hashmap<string  string> childcolumnmapping
hashmap<string  string> parentcolumnmapping
arraylist<exprnodedesc> childcolexprs
arraylist<exprnodedesc> parentcolexprs
boolean childempty   childcolexprs    null    childcolexprs size      0
boolean parentempty   parentcolexprs    null    parentcolexprs size      0
if  childempty      both empty
return true
//child not empty here
if  parentempty       child not empty  but parent empty
return false
if  childcolexprs size      parentcolexprs size
return false
int i   0
while  i < childcolexprs size
exprnodedesc childexpr   childcolexprs get i
exprnodedesc parentexpr   parentcolexprs get i
if   childexpr instanceof exprnodecolumndesc
parentexpr instanceof exprnodecolumndesc
string childcol   childcolumnmapping
get   exprnodecolumndesc  childexpr  getcolumn
string parentcol   parentcolumnmapping
get   exprnodecolumndesc  childexpr  getcolumn
if   childcol equals parentcol
return false
else
return false
i
return true
/*
* back track column names to find their corresponding original column
* names. only allow simple operators like 'select column' or filter.
*/
private boolean backtrackcolumnnames
hashmap<string  string> columnmapping
reducesinkoperator reducesink
operator<? extends serializable> stopbacktrackflagop  parsecontext pgraphcontext
operator<? extends serializable> startoperator   reducesink
while  startoperator    null    startoperator    stopbacktrackflagop
startoperator   startoperator getparentoperators   get 0
map<string  exprnodedesc> colexprmap   startoperator getcolumnexprmap
if colexprmap    null    colexprmap size    0
continue
iterator<string> keyiter   columnmapping keyset   iterator
while  keyiter hasnext
string key   keyiter next
string oldcol   columnmapping get key
exprnodedesc exprnode   colexprmap get oldcol
if exprnode instanceof exprnodecolumndesc
string col     exprnodecolumndesc exprnode  getcolumn
columnmapping put key  col
else
return false
return true
private hashmap<string  string> getpartitionandkeycolumnmapping reducesinkoperator reducesink
hashmap<string  string> columnmapping   new hashmap<string  string>
reducesinkdesc reducesinkdesc   reducesink getconf
arraylist<exprnodedesc> partitioncols   reducesinkdesc getpartitioncols
arraylist<exprnodedesc> reducekeycols   reducesinkdesc getkeycols
if partitioncols    null
for  exprnodedesc desc   partitioncols
list<string> cols   desc getcols
for string col   cols
columnmapping put col  col
if reducekeycols    null
for  exprnodedesc desc   reducekeycols
list<string> cols   desc getcols
for string col   cols
columnmapping put col  col
return columnmapping
private reducesinkoperator findsingleparentreducesink reducesinkoperator childreducesink  parsecontext pgraphcontext
operator<? extends serializable> start   childreducesink
while start    null
if  start getparentoperators      null
start getparentoperators   size      1
// this potentially is a join operator
return null
boolean allowed   false
if   start instanceof selectoperator
start instanceof filteroperator
start instanceof extractoperator
start instanceof forwardoperator
start instanceof scriptoperator
start instanceof reducesinkoperator
allowed   true
if   allowed
return null
if   start instanceof scriptoperator
hiveconf getboolvar pgraphcontext getconf
hiveconf confvars hivescriptoperatortrust
return null
start   start getparentoperators   get 0
if start instanceof reducesinkoperator
return  reducesinkoperator start
return null