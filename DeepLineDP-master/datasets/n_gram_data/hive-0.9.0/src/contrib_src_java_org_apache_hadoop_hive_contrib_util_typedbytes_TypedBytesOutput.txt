/**
* licensed to the apache software foundation (asf) under one
* or more contributor license agreements.  see the notice file
* distributed with this work for additional information
* regarding copyright ownership.  the asf licenses this file
* to you under the apache license, version 2.0 (the
* "license"); you may not use this file except in compliance
* with the license.  you may obtain a copy of the license at
*
*     http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache hadoop hive contrib util typedbytes
import java io dataoutput
import java io ioexception
import java util arraylist
import java util list
import java util map
import java util set
import java util map entry
import org apache hadoop io writableutils
import org apache hadoop record buffer
/**
* provides functionality for writing typed bytes.
*/
public class typedbytesoutput
private dataoutput out
private typedbytesoutput
private void setdataoutput dataoutput out
this out   out
private static threadlocal tbout   new threadlocal
@override
protected synchronized object initialvalue
return new typedbytesoutput
/**
* get a thread-local typed bytes output for the supplied {@link dataoutput}.
*
* @param out
*          data output object
* @return typed bytes output corresponding to the supplied {@link dataoutput}
*         .
*/
public static typedbytesoutput get dataoutput out
typedbytesoutput bout    typedbytesoutput  tbout get
bout setdataoutput out
return bout
/** creates a new instance of typedbytesoutput. */
public typedbytesoutput dataoutput out
this out   out
/**
* writes a java object as a typed bytes sequence.
*
* @param obj
*          the object to be written
* @throws ioexception
*/
public void write object obj  throws ioexception
if  obj instanceof buffer
writebytes   buffer  obj  get
else if  obj instanceof byte
writebyte  byte  obj
else if  obj instanceof boolean
writebool  boolean  obj
else if  obj instanceof integer
writeint  integer  obj
else if  obj instanceof long
writelong  long  obj
else if  obj instanceof float
writefloat  float  obj
else if  obj instanceof double
writedouble  double  obj
else if  obj instanceof string
writestring  string  obj
else if  obj instanceof arraylist
writevector  arraylist  obj
else if  obj instanceof list
writelist  list  obj
else if  obj instanceof map
writemap  map  obj
else
throw new runtimeexception
/**
* writes a raw sequence of typed bytes.
*
* @param bytes
*          the bytes to be written
* @throws ioexception
*/
public void writeraw byte bytes  throws ioexception
out write bytes
/**
* writes a raw sequence of typed bytes.
*
* @param bytes
*          the bytes to be written
* @param offset
*          an offset in the given array
* @param length
*          number of bytes from the given array to write
* @throws ioexception
*/
public void writeraw byte bytes  int offset  int length  throws ioexception
out write bytes  offset  length
/**
* writes a bytes array as a typed bytes sequence, using a given typecode.
*
* @param bytes
*          the bytes array to be written
* @param code
*          the typecode to use
* @throws ioexception
*/
public void writebytes byte bytes  int code  throws ioexception
out write code
out writeint bytes length
out write bytes
/**
* writes a bytes array as a typed bytes sequence.
*
* @param bytes
*          the bytes array to be written
* @throws ioexception
*/
public void writebytes byte bytes  throws ioexception
writebytes bytes  type bytes code
/**
* writes a byte as a typed bytes sequence.
*
* @param b
*          the byte to be written
* @throws ioexception
*/
public void writebyte byte b  throws ioexception
out write type byte code
out write b
/**
* writes a boolean as a typed bytes sequence.
*
* @param b
*          the boolean to be written
* @throws ioexception
*/
public void writebool boolean b  throws ioexception
out write type bool code
out writeboolean b
/**
* writes an integer as a typed bytes sequence.
*
* @param i
*          the integer to be written
* @throws ioexception
*/
public void writeint int i  throws ioexception
out write type int code
out writeint i
/**
* writes a long as a typed bytes sequence.
*
* @param l
*          the long to be written
* @throws ioexception
*/
public void writelong long l  throws ioexception
out write type long code
out writelong l
/**
* writes a float as a typed bytes sequence.
*
* @param f
*          the float to be written
* @throws ioexception
*/
public void writefloat float f  throws ioexception
out write type float code
out writefloat f
/**
* writes a double as a typed bytes sequence.
*
* @param d
*          the double to be written
* @throws ioexception
*/
public void writedouble double d  throws ioexception
out write type double code
out writedouble d
/**
* writes a short as a typed bytes sequence.
*
* @param s
*          the short to be written
* @throws ioexception
*/
public void writeshort short s  throws ioexception
out write type short code
out writeshort s
/**
* writes a string as a typed bytes sequence.
*
* @param s
*          the string to be written
* @throws ioexception
*/
public void writestring string s  throws ioexception
out write type string code
writableutils writestring out  s
/**
* writes a vector as a typed bytes sequence.
*
* @param vector
*          the vector to be written
* @throws ioexception
*/
public void writevector arraylist vector  throws ioexception
writevectorheader vector size
for  object obj   vector
write obj
/**
* writes a vector header.
*
* @param length
*          the number of elements in the vector
* @throws ioexception
*/
public void writevectorheader int length  throws ioexception
out write type vector code
out writeint length
/**
* writes a list as a typed bytes sequence.
*
* @param list
*          the list to be written
* @throws ioexception
*/
public void writelist list list  throws ioexception
writelistheader
for  object obj   list
write obj
writelistfooter
/**
* writes a list header.
*
* @throws ioexception
*/
public void writelistheader   throws ioexception
out write type list code
/**
* writes a list footer.
*
* @throws ioexception
*/
public void writelistfooter   throws ioexception
out write type marker code
/**
* writes a map as a typed bytes sequence.
*
* @param map
*          the map to be written
* @throws ioexception
*/
@suppresswarnings
public void writemap map map  throws ioexception
writemapheader map size
set<entry> entries   map entryset
for  entry entry   entries
write entry getkey
write entry getvalue
/**
* writes a map header.
*
* @param length
*          the number of key-value pairs in the map
* @throws ioexception
*/
public void writemapheader int length  throws ioexception
out write type map code
out writeint length
public void writeendofrecord   throws ioexception
out write type endofrecord code
/**
* writes a <tt>null</tt> type marker to the output.
*
* @throws ioexception
*/
public void writenull   throws ioexception
out write type null code