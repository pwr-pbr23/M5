/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html link
import org apache wicket page
import org apache wicket session
import org apache wicket markup componenttag
import org apache wicket markup html webmarkupcontainer
import org apache wicket request mapper parameter pageparameters
/**
* implementation of an <a href="http://www.w3.org/tr/rec-html40/present/frames.html#h-16.5">inline
* frame</a> component. must be used with an iframe (&lt;iframe src...) element. the src attribute
* will be generated.
*
* @author sven meier
* @author ralf ebert
*
*/
public class inlineframe extends webmarkupcontainer implements ilinklistener
private static final long serialversionuid   1l
/** the link. */
private final ipagelink pagelink
/**
* constructs an inline frame that instantiates the given page class when the content of the
* inline frame is requested. the instantiated page is used to render a response to the user.
*
* @param <c>
*
* @param id
*            see component
* @param c
*            page class
*/
public <c extends page> inlineframe final string id  final class<c> c
this id  c  null
/**
* constructs an inline frame that instantiates the given page class when the content of the
* inline frame is requested. the instantiated page is used to render a response to the user.
*
* @param <c>
*
* @param id
*            see component
* @param c
*            page class
* @param params
*            page parameters
*/
public <c extends page> inlineframe final string id  final class<c> c
final pageparameters params
this id  new ipagelink
private static final long serialversionuid   1l
public page getpage
// todo use pageprovider instead
if  params    null
// create page using page factory
return  page session get   getpagefactory   newpage c
else
return  page session get   getpagefactory   newpage c  params
public class<? extends page> getpageidentity
return c
// ensure that c is a subclass of page
if   page class isassignablefrom c
throw new illegalargumentexception     c
/**
* this constructor is ideal if a page object was passed in from a previous page. construct an
* inline frame containing the given page.
*
* @param id
*            see component
* @param page
*            the page
*/
public inlineframe final string id  final page page
this id  new ipagelink
private static final long serialversionuid   1l
public page getpage
// use given page
return page
public class<? extends page> getpageidentity
return page getclass
/**
* this constructor is ideal for constructing pages lazily.
*
* constructs an inline frame which invokes the getpage() method of the ipagelink interface when
* the content of the inline frame is requested. whatever page objects is returned by this
* method will be rendered back to the user.
*
* @param id
*            see component
* @param pagelink
*            an implementation of ipagelink which will create the page to be contained in the
*            inline frame if and when the content is requested
*/
public inlineframe final string id  ipagelink pagelink
super id
this pagelink   pagelink
/**
* gets the url to use for this link.
*
* @return the url that this link links to
*/
protected charsequence geturl
return urlfor ilinklistener interface
/**
* handles this frame's tag.
*
* @param tag
*            the component tag
* @see org.apache.wicket.component#oncomponenttag(componenttag)
*/
@override
protected final void oncomponenttag final componenttag tag
checkcomponenttag tag
// set href to link to this frame's framerequested method
charsequence url   geturl
// generate the src attribute
tag put    url
super oncomponenttag tag
/**
* @see org.apache.wicket.markup.html.link.ilinklistener#onlinkclicked()
*/
public final void onlinkclicked
setresponsepage pagelink getpage
@override
protected boolean getstatelesshint
/*
* todo optimization: the inlineframe component does not always have to be stateless.
*
* unfortunately due to current implementation always using ipagelink and a ilinklistener
* callback it has to always be stateful because it can be put inside a listview item which
* will not be built upon a stateless callback causing a "component at path
* listview:0:iframe not found" error.
*
* eventually variant such as (string, ipagemap, class<? extends page>) can be made
* stateless because they can generate a bookmarkable url. another advantage of a
* bookmarkable url is that multiple iframes will not block.
*/
return false