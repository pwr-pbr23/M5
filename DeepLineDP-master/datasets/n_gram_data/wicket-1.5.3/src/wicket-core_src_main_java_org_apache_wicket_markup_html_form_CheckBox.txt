/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html form
import java util locale
import org apache wicket markup componenttag
import org apache wicket model imodel
import org apache wicket util convert iconverter
/**
* html checkbox input component.
* <p>
* java:
*
* <pre>
* form.add(new checkbox(&quot;bool&quot;));
* </pre>
*
* html:
*
* <pre>
*  &lt;input type=&quot;checkbox&quot; wicket:id=&quot;bool&quot; /&gt;
* </pre>
*
* </p>
* <p>
* you can can extend this class and override method wantonselectionchangednotifications() to force
* server roundtrips on each selection change.
* </p>
*
* @author jonathan locke
*/
public class checkbox extends formcomponent<boolean> implements ionchangelistener
private static final long serialversionuid   1l
/**
* @see org.apache.wicket.component#component(string)
*/
public checkbox final string id
this id  null
/**
* @param id
* @param model
* @see org.apache.wicket.component#component(string, imodel)
*/
public checkbox final string id  imodel<boolean> model
super id  model
settype boolean class
/**
* @see org.apache.wicket.markup.html.form.ionchangelistener#onselectionchanged()
*/
public void onselectionchanged
convertinput
updatemodel
onselectionchanged getmodelobject
/**
* template method that can be overridden by clients that implement ionchangelistener to be
* notified by onchange events of a select element. this method does nothing by default.
* <p>
* called when a option is selected of a dropdown list that wants to be notified of this event.
* this method is to be implemented by clients that want to be notified of selection events.
*
* @param newselection
*            the newly selected object of the backing model note this is the same as you would
*            get by calling getmodelobject() if the new selection were current
*/
protected void onselectionchanged boolean newselection
/**
* whether this component's onselectionchanged event handler should called using javascript if
* the selection changes. if true, a roundtrip will be generated with each selection change,
* resulting in the model being updated (of just this component) and onselectionchanged being
* called. this method returns false by default.
*
* @return true if this component's onselectionchanged event handler should called using
*         javascript if the selection changes
*/
protected boolean wantonselectionchangednotifications
return false
/**
* @see org.apache.wicket.markupcontainer#getstatelesshint()
*/
@override
protected boolean getstatelesshint
if  wantonselectionchangednotifications
return false
return super getstatelesshint
/**
* processes the component tag.
*
* @param tag
*            tag to modify
* @see org.apache.wicket.component#oncomponenttag(componenttag)
*/
@override
protected void oncomponenttag final componenttag tag
checkcomponenttag tag
checkcomponenttagattribute tag
final string value   getvalue
final iconverter<boolean> converter   getconverter boolean class
final boolean checked   converter converttoobject value  getlocale
if  boolean true equals checked
tag put
else
// in case the attribute was added at design time
tag remove
// remove value attribute, because it overrides the browser's submitted value, eg a [input
// type="checkbox" value=""] will always submit as false
tag remove
// should a roundtrip be made (have onselectionchanged called) when the
// checkbox is clicked?
if  wantonselectionchangednotifications
charsequence url   urlfor ionchangelistener interface
form<?> form   findparent form class
if  form    null
tag put    form getjsforinterfaceurl url
else
// note: do not encode the url as that would give invalid
// javascript
tag put        url
url tostring   indexof    >  1 ?          getinputname
super oncomponenttag tag
/**
* final because we made {@link #convertinput()} final and it no longer delegates to
* {@link #getconverter(class)}
*
* @see org.apache.wicket.component#getconverter(java.lang.class)
*/
@override
public final <c> iconverter<c> getconverter class<c> type
if  boolean class equals type
@suppresswarnings
iconverter<c> converter    iconverter<c> checkboxconverter instance
return converter
else
return super getconverter type
/**
* converter specific to the check box
*
* @author igor.vaynberg
*/
private static class checkboxconverter implements iconverter<boolean>
private static final long serialversionuid   1l
private static final iconverter<boolean> instance   new checkboxconverter
/**
* constructor
*/
private checkboxconverter
/**
* @see org.apache.wicket.util.convert.iconverter#converttoobject(java.lang.string,
*      java.util.locale)
*/
public boolean converttoobject string value  locale locale
if    equals value       equals value
return boolean true
else
return boolean false
/**
* @see org.apache.wicket.util.convert.iconverter#converttostring(java.lang.object,
*      java.util.locale)
*/
public string converttostring boolean value  locale locale
return value tostring