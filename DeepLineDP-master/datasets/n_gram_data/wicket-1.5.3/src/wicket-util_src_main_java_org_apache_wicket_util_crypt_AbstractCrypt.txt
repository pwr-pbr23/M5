/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util crypt
import java io unsupportedencodingexception
import java security generalsecurityexception
import javax crypto cipher
import org slf4j logger
import org slf4j loggerfactory
/**
* abstract base class for jce based icrypt implementations.
*
* @author juergen donnerstag
*/
public abstract class abstractcrypt implements icrypt
/** default encryption key */
private static final string default_encryption_key
/** encoding used to convert java string from and to byte[] */
private static final string character_encoding
/** log. */
private static final logger log   loggerfactory getlogger abstractcrypt class
/** key used to de-/encrypt the data */
private string encryptionkey   default_encryption_key
/**
* constructor
*/
public abstractcrypt
/**
* decrypts a string into a string.
*
* @param text
*            text to decrypt
* @return the decrypted text
*/
public final string decrypturlsafe final string text
try
byte decoded   new base64 true  decode text
return new string decryptbytearray decoded   character_encoding
catch  exception ex
log error     text  ex
return null
/**
* encrypt a string into a string using url safe base64 encoding.
*
* @param plaintext
*            text to encrypt
* @return encrypted string
*/
public final string encrypturlsafe final string plaintext
try
byte encrypted   encryptstringtobytearray plaintext
return new string new base64  1  null  true  encode encrypted   character_encoding
catch  generalsecurityexception e
log error     plaintext      e
return null
catch  unsupportedencodingexception e
log error     plaintext      e
return null
/**
* get encryption private key
*
* @return encryption private key
*/
public string getkey
return encryptionkey
/**
* set encryption private key
*
* @param key
*            private key to make de-/encryption unique
*/
public void setkey final string key
encryptionkey   key
/**
* crypts the given byte array
*
* @param input
*            byte array to be crypted
* @param mode
*            crypt mode
* @return the input crypted. null in case of an error
* @throws generalsecurityexception
*/
protected abstract byte crypt final byte input  final int mode
throws generalsecurityexception
/**
* decrypts an encrypted, but base64 decoded byte array into a byte array.
*
* @param encrypted
*            byte array to decrypt
* @return the decrypted text
*/
private final byte decryptbytearray final byte encrypted
try
return crypt encrypted  cipher decrypt_mode
catch  generalsecurityexception e
throw new runtimeexception
new string encrypted       e
/**
* encrypts the given text into a byte array.
*
* @param plaintext
*            text to encrypt
* @return the string encrypted
* @throws generalsecurityexception
*/
private final byte encryptstringtobytearray final string plaintext
throws generalsecurityexception
try
return crypt plaintext getbytes character_encoding   cipher encrypt_mode
catch  unsupportedencodingexception ex
throw new runtimeexception ex getmessage