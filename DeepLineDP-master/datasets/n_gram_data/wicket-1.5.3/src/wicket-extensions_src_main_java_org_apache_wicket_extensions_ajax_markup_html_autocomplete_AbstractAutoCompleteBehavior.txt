/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket extensions ajax markup html autocomplete
import org apache wicket component
import org apache wicket ajax abstractdefaultajaxbehavior
import org apache wicket ajax ajaxrequesttarget
import org apache wicket markup html iheaderresponse
import org apache wicket request cycle requestcycle
import org apache wicket request resource javascriptresourcereference
import org apache wicket request resource resourcereference
import org apache wicket util string strings
/**
* @since 1.2
*
* @author janne hietam&auml;ki (jannehietamaki)
*/
public abstract class abstractautocompletebehavior extends abstractdefaultajaxbehavior
private static final resourcereference autocomplete_js   new javascriptresourcereference
autocompletebehavior class
private static final long serialversionuid   1l
protected autocompletesettings settings
/**
* constructor that creates an default {@link autocompletesettings}
*/
public abstractautocompletebehavior
this new autocompletesettings
/**
* constructor
*
* @param settings
*            settings for the autocomplete list
*/
public abstractautocompletebehavior autocompletesettings settings
if  settings    null
settings   new autocompletesettings
this settings   settings
@override
public void renderhead final component component  final iheaderresponse response
super renderhead component  response
renderautocompletehead response
/**
* render autocomplete init javascript and other head contributions
*
* @param response
*/
private void renderautocompletehead final iheaderresponse response
response renderjavascriptreference autocomplete_js
final string id   getcomponent   getmarkupid
string indicatorid   findindicatorid
if  strings isempty indicatorid
indicatorid
else
indicatorid       indicatorid
string initjs   string format    id
getcallbackurl    constructsettingsjs    indicatorid
response renderondomreadyjavascript initjs
/**
*
* @return js settings
*/
protected final string constructsettingsjs
final stringbuilder sb   new stringbuilder
sb append    append settings getpreselect
sb append    append settings getmaxheightinpx
sb append    append settings isadjustinputwidth
sb append    append settings getusesmartpositioning
sb append    append settings getusehideshowcoverediefix
sb append    append settings getshowlistonemptyinput
sb append    append settings getshowlistonfocusgain
sb append    append settings getthrottledelay
sb append    append
settings getshowcompletelistonfocusgain
if  settings getcssclassname      null
sb append    append settings getcssclassname    append
sb append
return sb tostring
@override
protected void onbind
// add empty abstractdefaultajaxbehavior to the component, to force
// rendering wicket-ajax.js reference if no other ajax behavior is on
// page
getcomponent   add new abstractdefaultajaxbehavior
private static final long serialversionuid   1l
@override
protected void respond final ajaxrequesttarget target
/**
* callback for the ajax event generated by the javascript. this is where we need to generate
* our response.
*
* @param input
*            the input entered so far
* @param requestcycle
*            current request cycle
*/
protected abstract void onrequest string input  requestcycle requestcycle
@override
protected void respond final ajaxrequesttarget target
final requestcycle requestcycle   requestcycle get
final string val   requestcycle getrequest
getrequestparameters
getparametervalue
tooptionalstring
onrequest val  requestcycle