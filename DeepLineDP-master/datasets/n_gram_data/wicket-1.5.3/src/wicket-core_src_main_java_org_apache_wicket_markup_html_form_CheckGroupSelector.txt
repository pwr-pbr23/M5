/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket markup html form
import org apache wicket wicketruntimeexception
import org apache wicket markup html iheaderresponse
import org apache wicket request resource packageresourcereference
import org apache wicket request resource resourcereference
/**
* selects and deselects all check components under the same checkgroup as itself. selection
* toggling is accomplished by generating an onclick javascript event handler. this component must
* be attached to markup of type &lt;input type="checkbox"/&gt;. additionally, if
* {@link #checkgroupselector(string)} constuctor is used the selector must be a descendant of the
* checkgroup it is meant to affect.
*
* @see org.apache.wicket.markup.html.form.checkgroup
* @see org.apache.wicket.markup.html.form.check
*
* @author igor vaynberg
* @author carl-eric menzel
*/
public class checkgroupselector extends abstractcheckselector
/** */
private static final long serialversionuid   1l
private final static resourcereference js   new packageresourcereference
checkgroupselector class
private checkgroup<?> group
/**
* a selector that will look for a {@link checkgroup} in its parent hierarchy.
*
* @param id
*            component id
*/
public checkgroupselector string id
this id  null
@override
public void renderhead iheaderresponse response
super renderhead response
response renderjavascriptreference js
/**
* a selector that will work with the given group.
*
* @param id
*            component id
* @param group
*            group to work with
*/
public checkgroupselector string id  checkgroup<?> group
super id
this group   group
setoutputmarkupid true
private checkgroup<?> getgroup
checkgroup<?> group   this group
if  group    null
group   findparent checkgroup class
this group   group
return group
@override
protected void oninitialize
// try and make sure the form we need outputs its markup id.
super oninitialize
checkgroup<?> group   getgroup
if  group    null
form<?> form   group getform
if  form    null
form setoutputmarkupid true
@override
public boolean isenabled
checkgroup<?> group   getgroup
if  group    null
return true
else
return group isenableallowed      group isenabledinhierarchy
@override
protected charsequence getfindcheckboxesfunction
checkgroup<?> group   getgroup
if  group    null
throw new wicketruntimeexception
getpath
return
group getform   getmarkupid         group getinputname