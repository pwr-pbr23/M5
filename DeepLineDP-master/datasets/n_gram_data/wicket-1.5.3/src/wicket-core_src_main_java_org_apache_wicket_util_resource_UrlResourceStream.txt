/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket util resource
import java io ioexception
import java io inputstream
import java net url
import java net urlconnection
import org apache wicket application
import org apache wicket util io connections
import org apache wicket util lang args
import org apache wicket util lang bytes
import org apache wicket util lang objects
import org apache wicket util time time
import org slf4j logger
import org slf4j loggerfactory
/**
* urlresourcestream implements iresource for urls.
*
* @see org.apache.wicket.util.resource.iresourcestream
* @see org.apache.wicket.util.watch.imodifiable
* @author jonathan locke
* @author igor vaynberg
*/
public class urlresourcestream extends abstractresourcestream
implements
ifixedlocationresourcestream
private static final long serialversionuid   1l
/** logging. */
private static final logger log   loggerfactory getlogger urlresourcestream class
/**
* the meta data for this stream. lazy loaded on demand.
*/
private transient streamdata streamdata
/** the url to this resource. */
private final url url
/** last known time the stream was last modified. */
private time lastmodified
/**
* meta data class for the stream attributes
*/
private static class streamdata
private urlconnection connection
/** length of stream. */
private long contentlength
/** content type for stream. */
private string contenttype
/**
* construct.
*
* @param url
*            url of resource
*/
public urlresourcestream final url url
// save the url
this url   args notnull url
/**
* lazy loads the stream settings on demand
*
* @param initialize
*            a flag indicating whether to load the settings
* @return the meta data with the stream settings
*/
private streamdata getdata boolean initialize
if  streamdata    null    initialize
streamdata   new streamdata
try
streamdata connection   url openconnection
streamdata contentlength   streamdata connection getcontentlength
streamdata contenttype   streamdata connection getcontenttype
if  streamdata contenttype    null    streamdata contenttype contains
if  application exists
streamdata contenttype   application get   getmimetype url getfile
else
streamdata contenttype   urlconnection getfilenamemap   getcontenttypefor
url getfile
catch  ioexception ex
throw new illegalargumentexception     url  ex
return streamdata
/**
* closes this resource.
*
* @throws ioexception
*/
public void close   throws ioexception
streamdata data   getdata false
if  data    null
connections closequietly data connection
streamdata   null
/**
* @return a readable input stream for this resource.
* @throws resourcestreamnotfoundexception
*/
public inputstream getinputstream   throws resourcestreamnotfoundexception
try
return getdata true  connection getinputstream
catch  ioexception e
throw new resourcestreamnotfoundexception     url      e
/**
* @return the url to this resource (if any)
*/
public url geturl
return url
/**
* @see org.apache.wicket.util.watch.imodifiable#lastmodifiedtime()
* @return the last time this resource was modified
*/
@override
public time lastmodifiedtime
try
// get url modification timestamp
final time time   connections getlastmodified url
// if timestamp changed: update content length and last modified date
if  objects equal time  lastmodified     false
lastmodified   time
updatecontentlength
return lastmodified
catch  ioexception e
log warn     url       e getmessage
// allow modification watcher to detect the problem
return null
private void updatecontentlength   throws ioexception
streamdata data   getdata false
if  data    null
urlconnection connection   url openconnection
data contentlength   connection getcontentlength
connections close connection
@override
public string tostring
return url tostring
/**
* @return the content type of this resource, such as "image/jpeg" or "text/html"
*/
@override
public string getcontenttype
return getdata true  contenttype
@override
public bytes length
long length   getdata true  contentlength
if  length     1
return null
return bytes bytes length
public string locationasstring
return url toexternalform