/*
* licensed to the apache software foundation (asf) under one or more
* contributor license agreements.  see the notice file distributed with
* this work for additional information regarding copyright ownership.
* the asf licenses this file to you under the apache license, version 2.0
* (the "license"); you may not use this file except in compliance with
* the license.  you may obtain a copy of the license at
*
*      http://www.apache.org/licenses/license-2.0
*
* unless required by applicable law or agreed to in writing, software
* distributed under the license is distributed on an "as is" basis,
* without warranties or conditions of any kind, either express or implied.
* see the license for the specific language governing permissions and
* limitations under the license.
*/
package org apache wicket behavior
import org apache wicket component
import org apache wicket requestlistenerinterface
import org apache wicket markup componenttag
/**
* abstract class for handling ajax roundtrips. this class serves as a base for javascript specific
* implementations, like ones based on dojo or scriptaculous, or wicket's default.
*
* @author eelco hillenius
* @author ralf ebert
* @author igor vaynberg
*/
public abstract class abstractajaxbehavior extends behavior implements ibehaviorlistener
private static final long serialversionuid   1l
/** the component that this handler is bound to. */
private component component
/**
* construct.
*/
public abstractajaxbehavior
/**
* bind this handler to the given component.
*
* @param hostcomponent
*            the component to bind to
*/
@override
public final void bind final component hostcomponent
if  hostcomponent    null
throw new illegalargumentexception
if  component    null
throw new illegalstateexception
component
hostcomponent
component   hostcomponent
// call the callback
onbind
/**
* gets the url that references this handler.
*
* @return the url that references this handler
*/
public charsequence getcallbackurl
if  getcomponent      null
throw new illegalargumentexception
final requestlistenerinterface rli
rli   ibehaviorlistener interface
return getcomponent   urlfor this  rli
/**
* @see org.apache.wicket.behavior.behavior#oncomponenttag(org.apache.wicket.component,
*      org.apache.wicket.markup.componenttag)
*/
@override
public final void oncomponenttag final component component  final componenttag tag
oncomponenttag tag
/**
* @see org.apache.wicket.behavior.behavior#afterrender(org.apache.wicket.component)
*/
@override
public final void afterrender final component hostcomponent
oncomponentrendered
/**
* gets the component that this handler is bound to.
*
* @return the component that this handler is bound to
*/
protected final component getcomponent
return component
/**
* called any time a component that has this handler registered is rendering the component tag.
* use this method e.g. to bind to javascript event handlers of the tag
*
* @param tag
*            the tag that is rendered
*/
protected void oncomponenttag final componenttag tag
/**
* called when the component was bound to it's host component. you can get the bound host
* component by calling getcomponent.
*/
protected void onbind
/**
* called to indicate that the component that has this handler registered has been rendered. use
* this method to do any cleaning up of temporary state
*/
protected void oncomponentrendered
/**
* @see org.apache.wicket.behavior.behavior#getstatelesshint(component)
*/
@override
public boolean getstatelesshint component component
return false